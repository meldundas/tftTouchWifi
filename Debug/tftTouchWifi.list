
tftTouchWifi.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026fec  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003240  080271c0  080271c0  000281c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00008b7c  0802a400  0802a400  0002b400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000490  08032f7c  08032f7c  00033f7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 0003b5c0  0803340c  0803340c  0003440c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000090  0806e9cc  0806e9cc  0006f9cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0806ea5c  0806ea5c  00070278  2**0
                  CONTENTS
  8 .ARM          00000008  0806ea5c  0806ea5c  0006fa5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0806ea64  0806ea64  00070278  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  0806ea64  0806ea64  0006fa64  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   0000000c  0806ea7c  0806ea7c  0006fa7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000278  20000000  0806ea88  00070000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00002d60  20000278  0806ed00  00070278  2**2
                  ALLOC
 14 ._user_heap_stack 00000600  20002fd8  0806ed00  00070fd8  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00070278  2**0
                  CONTENTS, READONLY
 16 .debug_info   00089b58  00000000  00000000  000702a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_abbrev 0001108f  00000000  00000000  000f9e00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_aranges 00003218  00000000  00000000  0010ae90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_rnglists 00002466  00000000  00000000  0010e0a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_macro  00030923  00000000  00000000  0011050e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line   0003cfc2  00000000  00000000  00140e31  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    000fe089  00000000  00000000  0017ddf3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .comment      000000c2  00000000  00000000  0027be7c  2**0
                  CONTENTS, READONLY
 24 .debug_frame  0000e14c  00000000  00000000  0027bf40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_line_str 00000068  00000000  00000000  0028a08c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000278 	.word	0x20000278
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080271a4 	.word	0x080271a4

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000027c 	.word	0x2000027c
 800020c:	080271a4 	.word	0x080271a4

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b96a 	b.w	8000f74 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	460c      	mov	r4, r1
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d14e      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc4:	4694      	mov	ip, r2
 8000cc6:	458c      	cmp	ip, r1
 8000cc8:	4686      	mov	lr, r0
 8000cca:	fab2 f282 	clz	r2, r2
 8000cce:	d962      	bls.n	8000d96 <__udivmoddi4+0xde>
 8000cd0:	b14a      	cbz	r2, 8000ce6 <__udivmoddi4+0x2e>
 8000cd2:	f1c2 0320 	rsb	r3, r2, #32
 8000cd6:	4091      	lsls	r1, r2
 8000cd8:	fa20 f303 	lsr.w	r3, r0, r3
 8000cdc:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce0:	4319      	orrs	r1, r3
 8000ce2:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ce6:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cea:	fa1f f68c 	uxth.w	r6, ip
 8000cee:	fbb1 f4f7 	udiv	r4, r1, r7
 8000cf2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000cf6:	fb07 1114 	mls	r1, r7, r4, r1
 8000cfa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cfe:	fb04 f106 	mul.w	r1, r4, r6
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f104 30ff 	add.w	r0, r4, #4294967295
 8000d0e:	f080 8112 	bcs.w	8000f36 <__udivmoddi4+0x27e>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 810f 	bls.w	8000f36 <__udivmoddi4+0x27e>
 8000d18:	3c02      	subs	r4, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a59      	subs	r1, r3, r1
 8000d1e:	fa1f f38e 	uxth.w	r3, lr
 8000d22:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d26:	fb07 1110 	mls	r1, r7, r0, r1
 8000d2a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d2e:	fb00 f606 	mul.w	r6, r0, r6
 8000d32:	429e      	cmp	r6, r3
 8000d34:	d90a      	bls.n	8000d4c <__udivmoddi4+0x94>
 8000d36:	eb1c 0303 	adds.w	r3, ip, r3
 8000d3a:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d3e:	f080 80fc 	bcs.w	8000f3a <__udivmoddi4+0x282>
 8000d42:	429e      	cmp	r6, r3
 8000d44:	f240 80f9 	bls.w	8000f3a <__udivmoddi4+0x282>
 8000d48:	4463      	add	r3, ip
 8000d4a:	3802      	subs	r0, #2
 8000d4c:	1b9b      	subs	r3, r3, r6
 8000d4e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000d52:	2100      	movs	r1, #0
 8000d54:	b11d      	cbz	r5, 8000d5e <__udivmoddi4+0xa6>
 8000d56:	40d3      	lsrs	r3, r2
 8000d58:	2200      	movs	r2, #0
 8000d5a:	e9c5 3200 	strd	r3, r2, [r5]
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d905      	bls.n	8000d72 <__udivmoddi4+0xba>
 8000d66:	b10d      	cbz	r5, 8000d6c <__udivmoddi4+0xb4>
 8000d68:	e9c5 0100 	strd	r0, r1, [r5]
 8000d6c:	2100      	movs	r1, #0
 8000d6e:	4608      	mov	r0, r1
 8000d70:	e7f5      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000d72:	fab3 f183 	clz	r1, r3
 8000d76:	2900      	cmp	r1, #0
 8000d78:	d146      	bne.n	8000e08 <__udivmoddi4+0x150>
 8000d7a:	42a3      	cmp	r3, r4
 8000d7c:	d302      	bcc.n	8000d84 <__udivmoddi4+0xcc>
 8000d7e:	4290      	cmp	r0, r2
 8000d80:	f0c0 80f0 	bcc.w	8000f64 <__udivmoddi4+0x2ac>
 8000d84:	1a86      	subs	r6, r0, r2
 8000d86:	eb64 0303 	sbc.w	r3, r4, r3
 8000d8a:	2001      	movs	r0, #1
 8000d8c:	2d00      	cmp	r5, #0
 8000d8e:	d0e6      	beq.n	8000d5e <__udivmoddi4+0xa6>
 8000d90:	e9c5 6300 	strd	r6, r3, [r5]
 8000d94:	e7e3      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000d96:	2a00      	cmp	r2, #0
 8000d98:	f040 8090 	bne.w	8000ebc <__udivmoddi4+0x204>
 8000d9c:	eba1 040c 	sub.w	r4, r1, ip
 8000da0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000da4:	fa1f f78c 	uxth.w	r7, ip
 8000da8:	2101      	movs	r1, #1
 8000daa:	fbb4 f6f8 	udiv	r6, r4, r8
 8000dae:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000db2:	fb08 4416 	mls	r4, r8, r6, r4
 8000db6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000dba:	fb07 f006 	mul.w	r0, r7, r6
 8000dbe:	4298      	cmp	r0, r3
 8000dc0:	d908      	bls.n	8000dd4 <__udivmoddi4+0x11c>
 8000dc2:	eb1c 0303 	adds.w	r3, ip, r3
 8000dc6:	f106 34ff 	add.w	r4, r6, #4294967295
 8000dca:	d202      	bcs.n	8000dd2 <__udivmoddi4+0x11a>
 8000dcc:	4298      	cmp	r0, r3
 8000dce:	f200 80cd 	bhi.w	8000f6c <__udivmoddi4+0x2b4>
 8000dd2:	4626      	mov	r6, r4
 8000dd4:	1a1c      	subs	r4, r3, r0
 8000dd6:	fa1f f38e 	uxth.w	r3, lr
 8000dda:	fbb4 f0f8 	udiv	r0, r4, r8
 8000dde:	fb08 4410 	mls	r4, r8, r0, r4
 8000de2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000de6:	fb00 f707 	mul.w	r7, r0, r7
 8000dea:	429f      	cmp	r7, r3
 8000dec:	d908      	bls.n	8000e00 <__udivmoddi4+0x148>
 8000dee:	eb1c 0303 	adds.w	r3, ip, r3
 8000df2:	f100 34ff 	add.w	r4, r0, #4294967295
 8000df6:	d202      	bcs.n	8000dfe <__udivmoddi4+0x146>
 8000df8:	429f      	cmp	r7, r3
 8000dfa:	f200 80b0 	bhi.w	8000f5e <__udivmoddi4+0x2a6>
 8000dfe:	4620      	mov	r0, r4
 8000e00:	1bdb      	subs	r3, r3, r7
 8000e02:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e06:	e7a5      	b.n	8000d54 <__udivmoddi4+0x9c>
 8000e08:	f1c1 0620 	rsb	r6, r1, #32
 8000e0c:	408b      	lsls	r3, r1
 8000e0e:	fa22 f706 	lsr.w	r7, r2, r6
 8000e12:	431f      	orrs	r7, r3
 8000e14:	fa20 fc06 	lsr.w	ip, r0, r6
 8000e18:	fa04 f301 	lsl.w	r3, r4, r1
 8000e1c:	ea43 030c 	orr.w	r3, r3, ip
 8000e20:	40f4      	lsrs	r4, r6
 8000e22:	fa00 f801 	lsl.w	r8, r0, r1
 8000e26:	0c38      	lsrs	r0, r7, #16
 8000e28:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000e2c:	fbb4 fef0 	udiv	lr, r4, r0
 8000e30:	fa1f fc87 	uxth.w	ip, r7
 8000e34:	fb00 441e 	mls	r4, r0, lr, r4
 8000e38:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e3c:	fb0e f90c 	mul.w	r9, lr, ip
 8000e40:	45a1      	cmp	r9, r4
 8000e42:	fa02 f201 	lsl.w	r2, r2, r1
 8000e46:	d90a      	bls.n	8000e5e <__udivmoddi4+0x1a6>
 8000e48:	193c      	adds	r4, r7, r4
 8000e4a:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000e4e:	f080 8084 	bcs.w	8000f5a <__udivmoddi4+0x2a2>
 8000e52:	45a1      	cmp	r9, r4
 8000e54:	f240 8081 	bls.w	8000f5a <__udivmoddi4+0x2a2>
 8000e58:	f1ae 0e02 	sub.w	lr, lr, #2
 8000e5c:	443c      	add	r4, r7
 8000e5e:	eba4 0409 	sub.w	r4, r4, r9
 8000e62:	fa1f f983 	uxth.w	r9, r3
 8000e66:	fbb4 f3f0 	udiv	r3, r4, r0
 8000e6a:	fb00 4413 	mls	r4, r0, r3, r4
 8000e6e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e72:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e76:	45a4      	cmp	ip, r4
 8000e78:	d907      	bls.n	8000e8a <__udivmoddi4+0x1d2>
 8000e7a:	193c      	adds	r4, r7, r4
 8000e7c:	f103 30ff 	add.w	r0, r3, #4294967295
 8000e80:	d267      	bcs.n	8000f52 <__udivmoddi4+0x29a>
 8000e82:	45a4      	cmp	ip, r4
 8000e84:	d965      	bls.n	8000f52 <__udivmoddi4+0x29a>
 8000e86:	3b02      	subs	r3, #2
 8000e88:	443c      	add	r4, r7
 8000e8a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e8e:	fba0 9302 	umull	r9, r3, r0, r2
 8000e92:	eba4 040c 	sub.w	r4, r4, ip
 8000e96:	429c      	cmp	r4, r3
 8000e98:	46ce      	mov	lr, r9
 8000e9a:	469c      	mov	ip, r3
 8000e9c:	d351      	bcc.n	8000f42 <__udivmoddi4+0x28a>
 8000e9e:	d04e      	beq.n	8000f3e <__udivmoddi4+0x286>
 8000ea0:	b155      	cbz	r5, 8000eb8 <__udivmoddi4+0x200>
 8000ea2:	ebb8 030e 	subs.w	r3, r8, lr
 8000ea6:	eb64 040c 	sbc.w	r4, r4, ip
 8000eaa:	fa04 f606 	lsl.w	r6, r4, r6
 8000eae:	40cb      	lsrs	r3, r1
 8000eb0:	431e      	orrs	r6, r3
 8000eb2:	40cc      	lsrs	r4, r1
 8000eb4:	e9c5 6400 	strd	r6, r4, [r5]
 8000eb8:	2100      	movs	r1, #0
 8000eba:	e750      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000ebc:	f1c2 0320 	rsb	r3, r2, #32
 8000ec0:	fa20 f103 	lsr.w	r1, r0, r3
 8000ec4:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ec8:	fa24 f303 	lsr.w	r3, r4, r3
 8000ecc:	4094      	lsls	r4, r2
 8000ece:	430c      	orrs	r4, r1
 8000ed0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000ed4:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ed8:	fa1f f78c 	uxth.w	r7, ip
 8000edc:	fbb3 f0f8 	udiv	r0, r3, r8
 8000ee0:	fb08 3110 	mls	r1, r8, r0, r3
 8000ee4:	0c23      	lsrs	r3, r4, #16
 8000ee6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000eea:	fb00 f107 	mul.w	r1, r0, r7
 8000eee:	4299      	cmp	r1, r3
 8000ef0:	d908      	bls.n	8000f04 <__udivmoddi4+0x24c>
 8000ef2:	eb1c 0303 	adds.w	r3, ip, r3
 8000ef6:	f100 36ff 	add.w	r6, r0, #4294967295
 8000efa:	d22c      	bcs.n	8000f56 <__udivmoddi4+0x29e>
 8000efc:	4299      	cmp	r1, r3
 8000efe:	d92a      	bls.n	8000f56 <__udivmoddi4+0x29e>
 8000f00:	3802      	subs	r0, #2
 8000f02:	4463      	add	r3, ip
 8000f04:	1a5b      	subs	r3, r3, r1
 8000f06:	b2a4      	uxth	r4, r4
 8000f08:	fbb3 f1f8 	udiv	r1, r3, r8
 8000f0c:	fb08 3311 	mls	r3, r8, r1, r3
 8000f10:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000f14:	fb01 f307 	mul.w	r3, r1, r7
 8000f18:	42a3      	cmp	r3, r4
 8000f1a:	d908      	bls.n	8000f2e <__udivmoddi4+0x276>
 8000f1c:	eb1c 0404 	adds.w	r4, ip, r4
 8000f20:	f101 36ff 	add.w	r6, r1, #4294967295
 8000f24:	d213      	bcs.n	8000f4e <__udivmoddi4+0x296>
 8000f26:	42a3      	cmp	r3, r4
 8000f28:	d911      	bls.n	8000f4e <__udivmoddi4+0x296>
 8000f2a:	3902      	subs	r1, #2
 8000f2c:	4464      	add	r4, ip
 8000f2e:	1ae4      	subs	r4, r4, r3
 8000f30:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000f34:	e739      	b.n	8000daa <__udivmoddi4+0xf2>
 8000f36:	4604      	mov	r4, r0
 8000f38:	e6f0      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f3a:	4608      	mov	r0, r1
 8000f3c:	e706      	b.n	8000d4c <__udivmoddi4+0x94>
 8000f3e:	45c8      	cmp	r8, r9
 8000f40:	d2ae      	bcs.n	8000ea0 <__udivmoddi4+0x1e8>
 8000f42:	ebb9 0e02 	subs.w	lr, r9, r2
 8000f46:	eb63 0c07 	sbc.w	ip, r3, r7
 8000f4a:	3801      	subs	r0, #1
 8000f4c:	e7a8      	b.n	8000ea0 <__udivmoddi4+0x1e8>
 8000f4e:	4631      	mov	r1, r6
 8000f50:	e7ed      	b.n	8000f2e <__udivmoddi4+0x276>
 8000f52:	4603      	mov	r3, r0
 8000f54:	e799      	b.n	8000e8a <__udivmoddi4+0x1d2>
 8000f56:	4630      	mov	r0, r6
 8000f58:	e7d4      	b.n	8000f04 <__udivmoddi4+0x24c>
 8000f5a:	46d6      	mov	lr, sl
 8000f5c:	e77f      	b.n	8000e5e <__udivmoddi4+0x1a6>
 8000f5e:	4463      	add	r3, ip
 8000f60:	3802      	subs	r0, #2
 8000f62:	e74d      	b.n	8000e00 <__udivmoddi4+0x148>
 8000f64:	4606      	mov	r6, r0
 8000f66:	4623      	mov	r3, r4
 8000f68:	4608      	mov	r0, r1
 8000f6a:	e70f      	b.n	8000d8c <__udivmoddi4+0xd4>
 8000f6c:	3e02      	subs	r6, #2
 8000f6e:	4463      	add	r3, ip
 8000f70:	e730      	b.n	8000dd4 <__udivmoddi4+0x11c>
 8000f72:	bf00      	nop

08000f74 <__aeabi_idiv0>:
 8000f74:	4770      	bx	lr
 8000f76:	bf00      	nop

08000f78 <MX_ADC1_Init>:

ADC_HandleTypeDef hadc1;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 8000f78:	b580      	push	{r7, lr}
 8000f7a:	b084      	sub	sp, #16
 8000f7c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000f7e:	463b      	mov	r3, r7
 8000f80:	2200      	movs	r2, #0
 8000f82:	601a      	str	r2, [r3, #0]
 8000f84:	605a      	str	r2, [r3, #4]
 8000f86:	609a      	str	r2, [r3, #8]
 8000f88:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000f8a:	4b21      	ldr	r3, [pc, #132]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000f8c:	4a21      	ldr	r2, [pc, #132]	@ (8001014 <MX_ADC1_Init+0x9c>)
 8000f8e:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000f90:	4b1f      	ldr	r3, [pc, #124]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000f92:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8000f96:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000f98:	4b1d      	ldr	r3, [pc, #116]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000f9a:	2200      	movs	r2, #0
 8000f9c:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8000f9e:	4b1c      	ldr	r3, [pc, #112]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000fa0:	2200      	movs	r2, #0
 8000fa2:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000fa4:	4b1a      	ldr	r3, [pc, #104]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000fa6:	2200      	movs	r2, #0
 8000fa8:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000faa:	4b19      	ldr	r3, [pc, #100]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000fac:	2200      	movs	r2, #0
 8000fae:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000fb2:	4b17      	ldr	r3, [pc, #92]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000fb4:	2200      	movs	r2, #0
 8000fb6:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000fb8:	4b15      	ldr	r3, [pc, #84]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000fba:	4a17      	ldr	r2, [pc, #92]	@ (8001018 <MX_ADC1_Init+0xa0>)
 8000fbc:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000fbe:	4b14      	ldr	r3, [pc, #80]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000fc0:	2200      	movs	r2, #0
 8000fc2:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8000fc4:	4b12      	ldr	r3, [pc, #72]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000fc6:	2201      	movs	r2, #1
 8000fc8:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8000fca:	4b11      	ldr	r3, [pc, #68]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000fcc:	2200      	movs	r2, #0
 8000fce:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000fd2:	4b0f      	ldr	r3, [pc, #60]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000fd4:	2201      	movs	r2, #1
 8000fd6:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000fd8:	480d      	ldr	r0, [pc, #52]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000fda:	f001 fef7 	bl	8002dcc <HAL_ADC_Init>
 8000fde:	4603      	mov	r3, r0
 8000fe0:	2b00      	cmp	r3, #0
 8000fe2:	d001      	beq.n	8000fe8 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8000fe4:	f000 fd64 	bl	8001ab0 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_12;
 8000fe8:	230c      	movs	r3, #12
 8000fea:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000fec:	2301      	movs	r3, #1
 8000fee:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_84CYCLES;
 8000ff0:	2304      	movs	r3, #4
 8000ff2:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000ff4:	463b      	mov	r3, r7
 8000ff6:	4619      	mov	r1, r3
 8000ff8:	4805      	ldr	r0, [pc, #20]	@ (8001010 <MX_ADC1_Init+0x98>)
 8000ffa:	f002 f895 	bl	8003128 <HAL_ADC_ConfigChannel>
 8000ffe:	4603      	mov	r3, r0
 8001000:	2b00      	cmp	r3, #0
 8001002:	d001      	beq.n	8001008 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8001004:	f000 fd54 	bl	8001ab0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8001008:	bf00      	nop
 800100a:	3710      	adds	r7, #16
 800100c:	46bd      	mov	sp, r7
 800100e:	bd80      	pop	{r7, pc}
 8001010:	20000294 	.word	0x20000294
 8001014:	40012000 	.word	0x40012000
 8001018:	0f000001 	.word	0x0f000001

0800101c <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 800101c:	b580      	push	{r7, lr}
 800101e:	b08a      	sub	sp, #40	@ 0x28
 8001020:	af00      	add	r7, sp, #0
 8001022:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001024:	f107 0314 	add.w	r3, r7, #20
 8001028:	2200      	movs	r2, #0
 800102a:	601a      	str	r2, [r3, #0]
 800102c:	605a      	str	r2, [r3, #4]
 800102e:	609a      	str	r2, [r3, #8]
 8001030:	60da      	str	r2, [r3, #12]
 8001032:	611a      	str	r2, [r3, #16]
  if(adcHandle->Instance==ADC1)
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	681b      	ldr	r3, [r3, #0]
 8001038:	4a17      	ldr	r2, [pc, #92]	@ (8001098 <HAL_ADC_MspInit+0x7c>)
 800103a:	4293      	cmp	r3, r2
 800103c:	d127      	bne.n	800108e <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800103e:	2300      	movs	r3, #0
 8001040:	613b      	str	r3, [r7, #16]
 8001042:	4b16      	ldr	r3, [pc, #88]	@ (800109c <HAL_ADC_MspInit+0x80>)
 8001044:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001046:	4a15      	ldr	r2, [pc, #84]	@ (800109c <HAL_ADC_MspInit+0x80>)
 8001048:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800104c:	6453      	str	r3, [r2, #68]	@ 0x44
 800104e:	4b13      	ldr	r3, [pc, #76]	@ (800109c <HAL_ADC_MspInit+0x80>)
 8001050:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001052:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001056:	613b      	str	r3, [r7, #16]
 8001058:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800105a:	2300      	movs	r3, #0
 800105c:	60fb      	str	r3, [r7, #12]
 800105e:	4b0f      	ldr	r3, [pc, #60]	@ (800109c <HAL_ADC_MspInit+0x80>)
 8001060:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001062:	4a0e      	ldr	r2, [pc, #56]	@ (800109c <HAL_ADC_MspInit+0x80>)
 8001064:	f043 0304 	orr.w	r3, r3, #4
 8001068:	6313      	str	r3, [r2, #48]	@ 0x30
 800106a:	4b0c      	ldr	r3, [pc, #48]	@ (800109c <HAL_ADC_MspInit+0x80>)
 800106c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800106e:	f003 0304 	and.w	r3, r3, #4
 8001072:	60fb      	str	r3, [r7, #12]
 8001074:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PC2     ------> ADC1_IN12
    */
    GPIO_InitStruct.Pin = THERMISTOR_Pin;
 8001076:	2304      	movs	r3, #4
 8001078:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800107a:	2303      	movs	r3, #3
 800107c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800107e:	2300      	movs	r3, #0
 8001080:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(THERMISTOR_GPIO_Port, &GPIO_InitStruct);
 8001082:	f107 0314 	add.w	r3, r7, #20
 8001086:	4619      	mov	r1, r3
 8001088:	4805      	ldr	r0, [pc, #20]	@ (80010a0 <HAL_ADC_MspInit+0x84>)
 800108a:	f003 f815 	bl	80040b8 <HAL_GPIO_Init>

  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }
}
 800108e:	bf00      	nop
 8001090:	3728      	adds	r7, #40	@ 0x28
 8001092:	46bd      	mov	sp, r7
 8001094:	bd80      	pop	{r7, pc}
 8001096:	bf00      	nop
 8001098:	40012000 	.word	0x40012000
 800109c:	40023800 	.word	0x40023800
 80010a0:	40020800 	.word	0x40020800

080010a4 <MX_CRC_Init>:

CRC_HandleTypeDef hcrc;

/* CRC init function */
void MX_CRC_Init(void)
{
 80010a4:	b580      	push	{r7, lr}
 80010a6:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80010a8:	4b06      	ldr	r3, [pc, #24]	@ (80010c4 <MX_CRC_Init+0x20>)
 80010aa:	4a07      	ldr	r2, [pc, #28]	@ (80010c8 <MX_CRC_Init+0x24>)
 80010ac:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80010ae:	4805      	ldr	r0, [pc, #20]	@ (80010c4 <MX_CRC_Init+0x20>)
 80010b0:	f002 fbd7 	bl	8003862 <HAL_CRC_Init>
 80010b4:	4603      	mov	r3, r0
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d001      	beq.n	80010be <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 80010ba:	f000 fcf9 	bl	8001ab0 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80010be:	bf00      	nop
 80010c0:	bd80      	pop	{r7, pc}
 80010c2:	bf00      	nop
 80010c4:	200002dc 	.word	0x200002dc
 80010c8:	40023000 	.word	0x40023000

080010cc <HAL_CRC_MspInit>:

void HAL_CRC_MspInit(CRC_HandleTypeDef* crcHandle)
{
 80010cc:	b480      	push	{r7}
 80010ce:	b085      	sub	sp, #20
 80010d0:	af00      	add	r7, sp, #0
 80010d2:	6078      	str	r0, [r7, #4]

  if(crcHandle->Instance==CRC)
 80010d4:	687b      	ldr	r3, [r7, #4]
 80010d6:	681b      	ldr	r3, [r3, #0]
 80010d8:	4a0b      	ldr	r2, [pc, #44]	@ (8001108 <HAL_CRC_MspInit+0x3c>)
 80010da:	4293      	cmp	r3, r2
 80010dc:	d10d      	bne.n	80010fa <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* CRC clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80010de:	2300      	movs	r3, #0
 80010e0:	60fb      	str	r3, [r7, #12]
 80010e2:	4b0a      	ldr	r3, [pc, #40]	@ (800110c <HAL_CRC_MspInit+0x40>)
 80010e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010e6:	4a09      	ldr	r2, [pc, #36]	@ (800110c <HAL_CRC_MspInit+0x40>)
 80010e8:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80010ec:	6313      	str	r3, [r2, #48]	@ 0x30
 80010ee:	4b07      	ldr	r3, [pc, #28]	@ (800110c <HAL_CRC_MspInit+0x40>)
 80010f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010f2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80010f6:	60fb      	str	r3, [r7, #12]
 80010f8:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }
}
 80010fa:	bf00      	nop
 80010fc:	3714      	adds	r7, #20
 80010fe:	46bd      	mov	sp, r7
 8001100:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001104:	4770      	bx	lr
 8001106:	bf00      	nop
 8001108:	40023000 	.word	0x40023000
 800110c:	40023800 	.word	0x40023800

08001110 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 8001110:	b580      	push	{r7, lr}
 8001112:	b082      	sub	sp, #8
 8001114:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 8001116:	2300      	movs	r3, #0
 8001118:	607b      	str	r3, [r7, #4]
 800111a:	4b14      	ldr	r3, [pc, #80]	@ (800116c <MX_DMA_Init+0x5c>)
 800111c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800111e:	4a13      	ldr	r2, [pc, #76]	@ (800116c <MX_DMA_Init+0x5c>)
 8001120:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001124:	6313      	str	r3, [r2, #48]	@ 0x30
 8001126:	4b11      	ldr	r3, [pc, #68]	@ (800116c <MX_DMA_Init+0x5c>)
 8001128:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800112a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800112e:	607b      	str	r3, [r7, #4]
 8001130:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 8001132:	2200      	movs	r2, #0
 8001134:	2100      	movs	r1, #0
 8001136:	203a      	movs	r0, #58	@ 0x3a
 8001138:	f002 fb41 	bl	80037be <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 800113c:	203a      	movs	r0, #58	@ 0x3a
 800113e:	f002 fb5a 	bl	80037f6 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 0, 0);
 8001142:	2200      	movs	r2, #0
 8001144:	2100      	movs	r1, #0
 8001146:	203b      	movs	r0, #59	@ 0x3b
 8001148:	f002 fb39 	bl	80037be <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 800114c:	203b      	movs	r0, #59	@ 0x3b
 800114e:	f002 fb52 	bl	80037f6 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 0, 0);
 8001152:	2200      	movs	r2, #0
 8001154:	2100      	movs	r1, #0
 8001156:	2046      	movs	r0, #70	@ 0x46
 8001158:	f002 fb31 	bl	80037be <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 800115c:	2046      	movs	r0, #70	@ 0x46
 800115e:	f002 fb4a 	bl	80037f6 <HAL_NVIC_EnableIRQ>

}
 8001162:	bf00      	nop
 8001164:	3708      	adds	r7, #8
 8001166:	46bd      	mov	sp, r7
 8001168:	bd80      	pop	{r7, pc}
 800116a:	bf00      	nop
 800116c:	40023800 	.word	0x40023800

08001170 <HAL_UARTEx_RxEventCallback>:
uint16_t cipstartCount = 0;
uint16_t notSentCount = 0;
uint16_t sentCount = 0;
uint16_t wifiNotConnectedCount = 0;

void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size) {
 8001170:	b580      	push	{r7, lr}
 8001172:	b082      	sub	sp, #8
 8001174:	af00      	add	r7, sp, #0
 8001176:	6078      	str	r0, [r7, #4]
 8001178:	460b      	mov	r3, r1
 800117a:	807b      	strh	r3, [r7, #2]
	if (huart->Instance == USART1) {
 800117c:	687b      	ldr	r3, [r7, #4]
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	4a05      	ldr	r2, [pc, #20]	@ (8001198 <HAL_UARTEx_RxEventCallback+0x28>)
 8001182:	4293      	cmp	r3, r2
 8001184:	d104      	bne.n	8001190 <HAL_UARTEx_RxEventCallback+0x20>
		ATC_IdleLineCallback(&espat, Size);
 8001186:	887b      	ldrh	r3, [r7, #2]
 8001188:	4619      	mov	r1, r3
 800118a:	4804      	ldr	r0, [pc, #16]	@ (800119c <HAL_UARTEx_RxEventCallback+0x2c>)
 800118c:	f007 fb04 	bl	8008798 <ATC_IdleLineCallback>
	}
}
 8001190:	bf00      	nop
 8001192:	3708      	adds	r7, #8
 8001194:	46bd      	mov	sp, r7
 8001196:	bd80      	pop	{r7, pc}
 8001198:	40011000 	.word	0x40011000
 800119c:	200002ec 	.word	0x200002ec

080011a0 <WiFiConnect>:

int WiFiConnect() {
 80011a0:	b580      	push	{r7, lr}
 80011a2:	b098      	sub	sp, #96	@ 0x60
 80011a4:	af04      	add	r7, sp, #16
	char data[80];
	//After 1st programming need to AT+CWMODE=1
	resp = ATC_SendReceive(&espat, "AT+CWMODE=1\r\n", 100, NULL, 100, 1,
 80011a6:	4b37      	ldr	r3, [pc, #220]	@ (8001284 <WiFiConnect+0xe4>)
 80011a8:	9302      	str	r3, [sp, #8]
 80011aa:	2301      	movs	r3, #1
 80011ac:	9301      	str	r3, [sp, #4]
 80011ae:	2364      	movs	r3, #100	@ 0x64
 80011b0:	9300      	str	r3, [sp, #0]
 80011b2:	2300      	movs	r3, #0
 80011b4:	2264      	movs	r2, #100	@ 0x64
 80011b6:	4934      	ldr	r1, [pc, #208]	@ (8001288 <WiFiConnect+0xe8>)
 80011b8:	4834      	ldr	r0, [pc, #208]	@ (800128c <WiFiConnect+0xec>)
 80011ba:	f007 fa0d 	bl	80085d8 <ATC_SendReceive>
 80011be:	4603      	mov	r3, r0
 80011c0:	b21a      	sxth	r2, r3
 80011c2:	4b33      	ldr	r3, [pc, #204]	@ (8001290 <WiFiConnect+0xf0>)
 80011c4:	801a      	strh	r2, [r3, #0]
			"OK\r\n");

	//check if connected to network
	//2: ESP32-C3 station has connected to an AP, and got an IPv4 address.
	//resp == 1 when we are connected and have an ip
	resp = ATC_SendReceive(&espat, "AT+CWSTATE?\r\n", 100, NULL, 1000, 1,
 80011c6:	4b33      	ldr	r3, [pc, #204]	@ (8001294 <WiFiConnect+0xf4>)
 80011c8:	9302      	str	r3, [sp, #8]
 80011ca:	2301      	movs	r3, #1
 80011cc:	9301      	str	r3, [sp, #4]
 80011ce:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80011d2:	9300      	str	r3, [sp, #0]
 80011d4:	2300      	movs	r3, #0
 80011d6:	2264      	movs	r2, #100	@ 0x64
 80011d8:	492f      	ldr	r1, [pc, #188]	@ (8001298 <WiFiConnect+0xf8>)
 80011da:	482c      	ldr	r0, [pc, #176]	@ (800128c <WiFiConnect+0xec>)
 80011dc:	f007 f9fc 	bl	80085d8 <ATC_SendReceive>
 80011e0:	4603      	mov	r3, r0
 80011e2:	b21a      	sxth	r2, r3
 80011e4:	4b2a      	ldr	r3, [pc, #168]	@ (8001290 <WiFiConnect+0xf0>)
 80011e6:	801a      	strh	r2, [r3, #0]
			"+CWSTATE:2");

	//if not connected reset esp32
	if (!resp) {
 80011e8:	4b29      	ldr	r3, [pc, #164]	@ (8001290 <WiFiConnect+0xf0>)
 80011ea:	f9b3 3000 	ldrsh.w	r3, [r3]
 80011ee:	2b00      	cmp	r3, #0
 80011f0:	d140      	bne.n	8001274 <WiFiConnect+0xd4>
		HAL_GPIO_WritePin(WIFI_nRST_GPIO_Port, WIFI_nRST_Pin, GPIO_PIN_RESET);
 80011f2:	2200      	movs	r2, #0
 80011f4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80011f8:	4828      	ldr	r0, [pc, #160]	@ (800129c <WiFiConnect+0xfc>)
 80011fa:	f003 f909 	bl	8004410 <HAL_GPIO_WritePin>
		HAL_Delay(500);
 80011fe:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8001202:	f001 fdbf 	bl	8002d84 <HAL_Delay>
		HAL_GPIO_WritePin(WIFI_nRST_GPIO_Port, WIFI_nRST_Pin, GPIO_PIN_SET);
 8001206:	2201      	movs	r2, #1
 8001208:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800120c:	4823      	ldr	r0, [pc, #140]	@ (800129c <WiFiConnect+0xfc>)
 800120e:	f003 f8ff 	bl	8004410 <HAL_GPIO_WritePin>
		HAL_Delay(5000);
 8001212:	f241 3088 	movw	r0, #5000	@ 0x1388
 8001216:	f001 fdb5 	bl	8002d84 <HAL_Delay>

		//check network connection again
		//if not automatically connected on reset, connect to network

		resp = ATC_SendReceive(&espat, "AT+CWSTATE?\r\n", 100, NULL, 1000, 1,
 800121a:	4b1e      	ldr	r3, [pc, #120]	@ (8001294 <WiFiConnect+0xf4>)
 800121c:	9302      	str	r3, [sp, #8]
 800121e:	2301      	movs	r3, #1
 8001220:	9301      	str	r3, [sp, #4]
 8001222:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001226:	9300      	str	r3, [sp, #0]
 8001228:	2300      	movs	r3, #0
 800122a:	2264      	movs	r2, #100	@ 0x64
 800122c:	491a      	ldr	r1, [pc, #104]	@ (8001298 <WiFiConnect+0xf8>)
 800122e:	4817      	ldr	r0, [pc, #92]	@ (800128c <WiFiConnect+0xec>)
 8001230:	f007 f9d2 	bl	80085d8 <ATC_SendReceive>
 8001234:	4603      	mov	r3, r0
 8001236:	b21a      	sxth	r2, r3
 8001238:	4b15      	ldr	r3, [pc, #84]	@ (8001290 <WiFiConnect+0xf0>)
 800123a:	801a      	strh	r2, [r3, #0]
				"+CWSTATE:2");
		if (!resp) {
 800123c:	4b14      	ldr	r3, [pc, #80]	@ (8001290 <WiFiConnect+0xf0>)
 800123e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001242:	2b00      	cmp	r3, #0
 8001244:	d116      	bne.n	8001274 <WiFiConnect+0xd4>

			/********* AT+CWJAP="SSID","PASSWD" **********/
			//resp: 	1 if connected
			//			0 if not
			sprintf(data, "AT+CWJAP=\"%s\",\"%s\"\r\n", SSID, PASSWD);
 8001246:	4638      	mov	r0, r7
 8001248:	4b15      	ldr	r3, [pc, #84]	@ (80012a0 <WiFiConnect+0x100>)
 800124a:	4a16      	ldr	r2, [pc, #88]	@ (80012a4 <WiFiConnect+0x104>)
 800124c:	4916      	ldr	r1, [pc, #88]	@ (80012a8 <WiFiConnect+0x108>)
 800124e:	f023 fea5 	bl	8024f9c <siprintf>

			resp = ATC_SendReceive(&espat, data, 200, NULL, 10000, 1, "OK\r\n"); //"GOT IP\r\n"
 8001252:	4639      	mov	r1, r7
 8001254:	4b0b      	ldr	r3, [pc, #44]	@ (8001284 <WiFiConnect+0xe4>)
 8001256:	9302      	str	r3, [sp, #8]
 8001258:	2301      	movs	r3, #1
 800125a:	9301      	str	r3, [sp, #4]
 800125c:	f242 7310 	movw	r3, #10000	@ 0x2710
 8001260:	9300      	str	r3, [sp, #0]
 8001262:	2300      	movs	r3, #0
 8001264:	22c8      	movs	r2, #200	@ 0xc8
 8001266:	4809      	ldr	r0, [pc, #36]	@ (800128c <WiFiConnect+0xec>)
 8001268:	f007 f9b6 	bl	80085d8 <ATC_SendReceive>
 800126c:	4603      	mov	r3, r0
 800126e:	b21a      	sxth	r2, r3
 8001270:	4b07      	ldr	r3, [pc, #28]	@ (8001290 <WiFiConnect+0xf0>)
 8001272:	801a      	strh	r2, [r3, #0]
		}

	}

	return resp;
 8001274:	4b06      	ldr	r3, [pc, #24]	@ (8001290 <WiFiConnect+0xf0>)
 8001276:	f9b3 3000 	ldrsh.w	r3, [r3]

//	resp = ATC_SendReceive(&espat, "AT+CIPMUX=0\r\n", 1000, NULL, 100, 1, "OK\r\n");
}
 800127a:	4618      	mov	r0, r3
 800127c:	3750      	adds	r7, #80	@ 0x50
 800127e:	46bd      	mov	sp, r7
 8001280:	bd80      	pop	{r7, pc}
 8001282:	bf00      	nop
 8001284:	080271d0 	.word	0x080271d0
 8001288:	080271c0 	.word	0x080271c0
 800128c:	200002ec 	.word	0x200002ec
 8001290:	200002e4 	.word	0x200002e4
 8001294:	080271e8 	.word	0x080271e8
 8001298:	080271d8 	.word	0x080271d8
 800129c:	40020000 	.word	0x40020000
 80012a0:	080271f4 	.word	0x080271f4
 80012a4:	08027204 	.word	0x08027204
 80012a8:	0802720c 	.word	0x0802720c

080012ac <sendToThingspeak>:

int sendToThingspeak() {
 80012ac:	b590      	push	{r4, r7, lr}
 80012ae:	b0af      	sub	sp, #188	@ 0xbc
 80012b0:	af04      	add	r7, sp, #16
	char data[80];
	char local_buf[80];

	if (!WiFiConnect()) {
 80012b2:	f7ff ff75 	bl	80011a0 <WiFiConnect>
 80012b6:	4603      	mov	r3, r0
 80012b8:	2b00      	cmp	r3, #0
 80012ba:	d109      	bne.n	80012d0 <sendToThingspeak+0x24>
		connected=false;
 80012bc:	4b3e      	ldr	r3, [pc, #248]	@ (80013b8 <sendToThingspeak+0x10c>)
 80012be:	2200      	movs	r2, #0
 80012c0:	701a      	strb	r2, [r3, #0]
		wifiNotConnectedCount++;
 80012c2:	4b3e      	ldr	r3, [pc, #248]	@ (80013bc <sendToThingspeak+0x110>)
 80012c4:	881b      	ldrh	r3, [r3, #0]
 80012c6:	3301      	adds	r3, #1
 80012c8:	b29a      	uxth	r2, r3
 80012ca:	4b3c      	ldr	r3, [pc, #240]	@ (80013bc <sendToThingspeak+0x110>)
 80012cc:	801a      	strh	r2, [r3, #0]
 80012ce:	e06c      	b.n	80013aa <sendToThingspeak+0xfe>
	} else {
		connected=true;
 80012d0:	4b39      	ldr	r3, [pc, #228]	@ (80013b8 <sendToThingspeak+0x10c>)
 80012d2:	2201      	movs	r2, #1
 80012d4:	701a      	strb	r2, [r3, #0]
		//send to thingspeak
		resp = ATC_SendReceive(&espat,
 80012d6:	4b3a      	ldr	r3, [pc, #232]	@ (80013c0 <sendToThingspeak+0x114>)
 80012d8:	9302      	str	r3, [sp, #8]
 80012da:	2301      	movs	r3, #1
 80012dc:	9301      	str	r3, [sp, #4]
 80012de:	f241 3388 	movw	r3, #5000	@ 0x1388
 80012e2:	9300      	str	r3, [sp, #0]
 80012e4:	2300      	movs	r3, #0
 80012e6:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 80012ea:	4936      	ldr	r1, [pc, #216]	@ (80013c4 <sendToThingspeak+0x118>)
 80012ec:	4836      	ldr	r0, [pc, #216]	@ (80013c8 <sendToThingspeak+0x11c>)
 80012ee:	f007 f973 	bl	80085d8 <ATC_SendReceive>
 80012f2:	4603      	mov	r3, r0
 80012f4:	b21a      	sxth	r2, r3
 80012f6:	4b35      	ldr	r3, [pc, #212]	@ (80013cc <sendToThingspeak+0x120>)
 80012f8:	801a      	strh	r2, [r3, #0]
				"AT+CIPSTART=\"TCP\",\"184.106.153.149\",80\r\n", 500, NULL,
				5000, 1, "OK\r\n");

		sprintf(data, "GET /update?api_key=%s&field%d=%ld&field%d=%0.1f\r\n", WRITEAPIKEY, 1,
 80012fa:	4b35      	ldr	r3, [pc, #212]	@ (80013d0 <sendToThingspeak+0x124>)
 80012fc:	681c      	ldr	r4, [r3, #0]
 80012fe:	4b35      	ldr	r3, [pc, #212]	@ (80013d4 <sendToThingspeak+0x128>)
 8001300:	681b      	ldr	r3, [r3, #0]
 8001302:	4618      	mov	r0, r3
 8001304:	f7ff f940 	bl	8000588 <__aeabi_f2d>
 8001308:	4602      	mov	r2, r0
 800130a:	460b      	mov	r3, r1
 800130c:	f107 0054 	add.w	r0, r7, #84	@ 0x54
 8001310:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8001314:	2302      	movs	r3, #2
 8001316:	9301      	str	r3, [sp, #4]
 8001318:	9400      	str	r4, [sp, #0]
 800131a:	2301      	movs	r3, #1
 800131c:	4a2e      	ldr	r2, [pc, #184]	@ (80013d8 <sendToThingspeak+0x12c>)
 800131e:	492f      	ldr	r1, [pc, #188]	@ (80013dc <sendToThingspeak+0x130>)
 8001320:	f023 fe3c 	bl	8024f9c <siprintf>
				count, 2, thermTemp);
		int len = strlen(data);
 8001324:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001328:	4618      	mov	r0, r3
 800132a:	f7fe ffc1 	bl	80002b0 <strlen>
 800132e:	4603      	mov	r3, r0
 8001330:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4

		sprintf(local_buf, "AT+CIPSEND=%d\r\n", len);
 8001334:	1d3b      	adds	r3, r7, #4
 8001336:	f8d7 20a4 	ldr.w	r2, [r7, #164]	@ 0xa4
 800133a:	4929      	ldr	r1, [pc, #164]	@ (80013e0 <sendToThingspeak+0x134>)
 800133c:	4618      	mov	r0, r3
 800133e:	f023 fe2d 	bl	8024f9c <siprintf>
		resp = ATC_SendReceive(&espat, local_buf, 100, NULL, 100, 1, "OK\r\n");
 8001342:	1d39      	adds	r1, r7, #4
 8001344:	4b1e      	ldr	r3, [pc, #120]	@ (80013c0 <sendToThingspeak+0x114>)
 8001346:	9302      	str	r3, [sp, #8]
 8001348:	2301      	movs	r3, #1
 800134a:	9301      	str	r3, [sp, #4]
 800134c:	2364      	movs	r3, #100	@ 0x64
 800134e:	9300      	str	r3, [sp, #0]
 8001350:	2300      	movs	r3, #0
 8001352:	2264      	movs	r2, #100	@ 0x64
 8001354:	481c      	ldr	r0, [pc, #112]	@ (80013c8 <sendToThingspeak+0x11c>)
 8001356:	f007 f93f 	bl	80085d8 <ATC_SendReceive>
 800135a:	4603      	mov	r3, r0
 800135c:	b21a      	sxth	r2, r3
 800135e:	4b1b      	ldr	r3, [pc, #108]	@ (80013cc <sendToThingspeak+0x120>)
 8001360:	801a      	strh	r2, [r3, #0]

		resp = ATC_SendReceive(&espat, data, 1000, NULL, 100, 1, "SEND OK\r\n");
 8001362:	f107 0154 	add.w	r1, r7, #84	@ 0x54
 8001366:	4b1f      	ldr	r3, [pc, #124]	@ (80013e4 <sendToThingspeak+0x138>)
 8001368:	9302      	str	r3, [sp, #8]
 800136a:	2301      	movs	r3, #1
 800136c:	9301      	str	r3, [sp, #4]
 800136e:	2364      	movs	r3, #100	@ 0x64
 8001370:	9300      	str	r3, [sp, #0]
 8001372:	2300      	movs	r3, #0
 8001374:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8001378:	4813      	ldr	r0, [pc, #76]	@ (80013c8 <sendToThingspeak+0x11c>)
 800137a:	f007 f92d 	bl	80085d8 <ATC_SendReceive>
 800137e:	4603      	mov	r3, r0
 8001380:	b21a      	sxth	r2, r3
 8001382:	4b12      	ldr	r3, [pc, #72]	@ (80013cc <sendToThingspeak+0x120>)
 8001384:	801a      	strh	r2, [r3, #0]

		resp == 1 ? sentCount++ : notSentCount++;
 8001386:	4b11      	ldr	r3, [pc, #68]	@ (80013cc <sendToThingspeak+0x120>)
 8001388:	f9b3 3000 	ldrsh.w	r3, [r3]
 800138c:	2b01      	cmp	r3, #1
 800138e:	d106      	bne.n	800139e <sendToThingspeak+0xf2>
 8001390:	4b15      	ldr	r3, [pc, #84]	@ (80013e8 <sendToThingspeak+0x13c>)
 8001392:	881b      	ldrh	r3, [r3, #0]
 8001394:	3301      	adds	r3, #1
 8001396:	b29a      	uxth	r2, r3
 8001398:	4b13      	ldr	r3, [pc, #76]	@ (80013e8 <sendToThingspeak+0x13c>)
 800139a:	801a      	strh	r2, [r3, #0]
 800139c:	e005      	b.n	80013aa <sendToThingspeak+0xfe>
 800139e:	4b13      	ldr	r3, [pc, #76]	@ (80013ec <sendToThingspeak+0x140>)
 80013a0:	881b      	ldrh	r3, [r3, #0]
 80013a2:	3301      	adds	r3, #1
 80013a4:	b29a      	uxth	r2, r3
 80013a6:	4b11      	ldr	r3, [pc, #68]	@ (80013ec <sendToThingspeak+0x140>)
 80013a8:	801a      	strh	r2, [r3, #0]

	}

	//resp: 1 data sent
	//		0 error in tx
	return resp;
 80013aa:	4b08      	ldr	r3, [pc, #32]	@ (80013cc <sendToThingspeak+0x120>)
 80013ac:	f9b3 3000 	ldrsh.w	r3, [r3]

}
 80013b0:	4618      	mov	r0, r3
 80013b2:	37ac      	adds	r7, #172	@ 0xac
 80013b4:	46bd      	mov	sp, r7
 80013b6:	bd90      	pop	{r4, r7, pc}
 80013b8:	20000354 	.word	0x20000354
 80013bc:	200002ea 	.word	0x200002ea
 80013c0:	080271d0 	.word	0x080271d0
 80013c4:	08027224 	.word	0x08027224
 80013c8:	200002ec 	.word	0x200002ec
 80013cc:	200002e4 	.word	0x200002e4
 80013d0:	20000358 	.word	0x20000358
 80013d4:	20000350 	.word	0x20000350
 80013d8:	08027250 	.word	0x08027250
 80013dc:	08027264 	.word	0x08027264
 80013e0:	08027298 	.word	0x08027298
 80013e4:	080272a8 	.word	0x080272a8
 80013e8:	200002e8 	.word	0x200002e8
 80013ec:	200002e6 	.word	0x200002e6

080013f0 <sendToMQTT>:
//	copy_until_delim(time, data, resp);

	return resp;
}

int sendToMQTT() {
 80013f0:	b580      	push	{r7, lr}
 80013f2:	b098      	sub	sp, #96	@ 0x60
 80013f4:	af04      	add	r7, sp, #16
	char data[80];
//	char local_buf[80];

	if (!WiFiConnect()) {
 80013f6:	f7ff fed3 	bl	80011a0 <WiFiConnect>
 80013fa:	4603      	mov	r3, r0
 80013fc:	2b00      	cmp	r3, #0
 80013fe:	d107      	bne.n	8001410 <sendToMQTT+0x20>
		wifiNotConnectedCount++;
 8001400:	4b30      	ldr	r3, [pc, #192]	@ (80014c4 <sendToMQTT+0xd4>)
 8001402:	881b      	ldrh	r3, [r3, #0]
 8001404:	3301      	adds	r3, #1
 8001406:	b29a      	uxth	r2, r3
 8001408:	4b2e      	ldr	r3, [pc, #184]	@ (80014c4 <sendToMQTT+0xd4>)
 800140a:	801a      	strh	r2, [r3, #0]

		//not connected to wifi
		return 0;
 800140c:	2300      	movs	r3, #0
 800140e:	e055      	b.n	80014bc <sendToMQTT+0xcc>
	} else {

		//setup publish string
		sprintf(data, "AT+MQTTPUB=0,\"esp32c3/button\",\"%0.1f\",0,0\r\n", thermTemp);
 8001410:	4b2d      	ldr	r3, [pc, #180]	@ (80014c8 <sendToMQTT+0xd8>)
 8001412:	681b      	ldr	r3, [r3, #0]
 8001414:	4618      	mov	r0, r3
 8001416:	f7ff f8b7 	bl	8000588 <__aeabi_f2d>
 800141a:	4602      	mov	r2, r0
 800141c:	460b      	mov	r3, r1
 800141e:	4638      	mov	r0, r7
 8001420:	492a      	ldr	r1, [pc, #168]	@ (80014cc <sendToMQTT+0xdc>)
 8001422:	f023 fdbb 	bl	8024f9c <siprintf>

		resp =
				ATC_SendReceive(&espat,
 8001426:	4b2a      	ldr	r3, [pc, #168]	@ (80014d0 <sendToMQTT+0xe0>)
 8001428:	9302      	str	r3, [sp, #8]
 800142a:	2301      	movs	r3, #1
 800142c:	9301      	str	r3, [sp, #4]
 800142e:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001432:	9300      	str	r3, [sp, #0]
 8001434:	2300      	movs	r3, #0
 8001436:	2264      	movs	r2, #100	@ 0x64
 8001438:	4926      	ldr	r1, [pc, #152]	@ (80014d4 <sendToMQTT+0xe4>)
 800143a:	4827      	ldr	r0, [pc, #156]	@ (80014d8 <sendToMQTT+0xe8>)
 800143c:	f007 f8cc 	bl	80085d8 <ATC_SendReceive>
 8001440:	4603      	mov	r3, r0
		resp =
 8001442:	b21a      	sxth	r2, r3
 8001444:	4b25      	ldr	r3, [pc, #148]	@ (80014dc <sendToMQTT+0xec>)
 8001446:	801a      	strh	r2, [r3, #0]
						"AT+MQTTUSERCFG=0,1,\"publisher\",\"esp32c3\",\"112233\",0,0,\"\"\r\n",
						100, NULL, 500, 1, "OK\r\n");

		resp = ATC_SendReceive(&espat, "AT+MQTTCONN?\r\n", 100, NULL, 100, 1,
 8001448:	4b25      	ldr	r3, [pc, #148]	@ (80014e0 <sendToMQTT+0xf0>)
 800144a:	9302      	str	r3, [sp, #8]
 800144c:	2301      	movs	r3, #1
 800144e:	9301      	str	r3, [sp, #4]
 8001450:	2364      	movs	r3, #100	@ 0x64
 8001452:	9300      	str	r3, [sp, #0]
 8001454:	2300      	movs	r3, #0
 8001456:	2264      	movs	r2, #100	@ 0x64
 8001458:	4922      	ldr	r1, [pc, #136]	@ (80014e4 <sendToMQTT+0xf4>)
 800145a:	481f      	ldr	r0, [pc, #124]	@ (80014d8 <sendToMQTT+0xe8>)
 800145c:	f007 f8bc 	bl	80085d8 <ATC_SendReceive>
 8001460:	4603      	mov	r3, r0
 8001462:	b21a      	sxth	r2, r3
 8001464:	4b1d      	ldr	r3, [pc, #116]	@ (80014dc <sendToMQTT+0xec>)
 8001466:	801a      	strh	r2, [r3, #0]
				"+MQTTCONN:0,4,1");

		//if not connected, try to connect
		//setup for automatic reconnection
		if (!resp) {
 8001468:	4b1c      	ldr	r3, [pc, #112]	@ (80014dc <sendToMQTT+0xec>)
 800146a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800146e:	2b00      	cmp	r3, #0
 8001470:	d110      	bne.n	8001494 <sendToMQTT+0xa4>
			resp = ATC_SendReceive(&espat,
 8001472:	4b17      	ldr	r3, [pc, #92]	@ (80014d0 <sendToMQTT+0xe0>)
 8001474:	9302      	str	r3, [sp, #8]
 8001476:	2301      	movs	r3, #1
 8001478:	9301      	str	r3, [sp, #4]
 800147a:	f241 3388 	movw	r3, #5000	@ 0x1388
 800147e:	9300      	str	r3, [sp, #0]
 8001480:	2300      	movs	r3, #0
 8001482:	2264      	movs	r2, #100	@ 0x64
 8001484:	4918      	ldr	r1, [pc, #96]	@ (80014e8 <sendToMQTT+0xf8>)
 8001486:	4814      	ldr	r0, [pc, #80]	@ (80014d8 <sendToMQTT+0xe8>)
 8001488:	f007 f8a6 	bl	80085d8 <ATC_SendReceive>
 800148c:	4603      	mov	r3, r0
 800148e:	b21a      	sxth	r2, r3
 8001490:	4b12      	ldr	r3, [pc, #72]	@ (80014dc <sendToMQTT+0xec>)
 8001492:	801a      	strh	r2, [r3, #0]
		}

		//send MQTT
		//1 -> OK
		//0 -> error
		resp = ATC_SendReceive(&espat, data, 100, NULL, 500, 1, "OK\r\n");
 8001494:	4639      	mov	r1, r7
 8001496:	4b0e      	ldr	r3, [pc, #56]	@ (80014d0 <sendToMQTT+0xe0>)
 8001498:	9302      	str	r3, [sp, #8]
 800149a:	2301      	movs	r3, #1
 800149c:	9301      	str	r3, [sp, #4]
 800149e:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 80014a2:	9300      	str	r3, [sp, #0]
 80014a4:	2300      	movs	r3, #0
 80014a6:	2264      	movs	r2, #100	@ 0x64
 80014a8:	480b      	ldr	r0, [pc, #44]	@ (80014d8 <sendToMQTT+0xe8>)
 80014aa:	f007 f895 	bl	80085d8 <ATC_SendReceive>
 80014ae:	4603      	mov	r3, r0
 80014b0:	b21a      	sxth	r2, r3
 80014b2:	4b0a      	ldr	r3, [pc, #40]	@ (80014dc <sendToMQTT+0xec>)
 80014b4:	801a      	strh	r2, [r3, #0]

		return resp;
 80014b6:	4b09      	ldr	r3, [pc, #36]	@ (80014dc <sendToMQTT+0xec>)
 80014b8:	f9b3 3000 	ldrsh.w	r3, [r3]
	}
//Closing the connection makes it worse
//	resp = ATC_SendReceive(&espat, "AT+CIPCLOSE\r\n", 1000, NULL, 100, 1, "OK\r\n");

}
 80014bc:	4618      	mov	r0, r3
 80014be:	3750      	adds	r7, #80	@ 0x50
 80014c0:	46bd      	mov	sp, r7
 80014c2:	bd80      	pop	{r7, pc}
 80014c4:	200002ea 	.word	0x200002ea
 80014c8:	20000350 	.word	0x20000350
 80014cc:	08027314 	.word	0x08027314
 80014d0:	080271d0 	.word	0x080271d0
 80014d4:	08027340 	.word	0x08027340
 80014d8:	200002ec 	.word	0x200002ec
 80014dc:	200002e4 	.word	0x200002e4
 80014e0:	0802738c 	.word	0x0802738c
 80014e4:	0802737c 	.word	0x0802737c
 80014e8:	0802739c 	.word	0x0802739c

080014ec <subscribeToMQTT>:

int subscribeToMQTT()
{
 80014ec:	b580      	push	{r7, lr}
 80014ee:	b098      	sub	sp, #96	@ 0x60
 80014f0:	af04      	add	r7, sp, #16
	char data[80];
//	char local_buf[80];

	if (!WiFiConnect()) {
 80014f2:	f7ff fe55 	bl	80011a0 <WiFiConnect>
 80014f6:	4603      	mov	r3, r0
 80014f8:	2b00      	cmp	r3, #0
 80014fa:	d107      	bne.n	800150c <subscribeToMQTT+0x20>
		wifiNotConnectedCount++;
 80014fc:	4b2d      	ldr	r3, [pc, #180]	@ (80015b4 <subscribeToMQTT+0xc8>)
 80014fe:	881b      	ldrh	r3, [r3, #0]
 8001500:	3301      	adds	r3, #1
 8001502:	b29a      	uxth	r2, r3
 8001504:	4b2b      	ldr	r3, [pc, #172]	@ (80015b4 <subscribeToMQTT+0xc8>)
 8001506:	801a      	strh	r2, [r3, #0]

		//not connected to wifi
		return 0;
 8001508:	2300      	movs	r3, #0
 800150a:	e04f      	b.n	80015ac <subscribeToMQTT+0xc0>
	} else {

		//setup subscribe string
		sprintf(data, "AT+MQTTSUB=0,\"esp32c3/led\",1\r\n");
 800150c:	463b      	mov	r3, r7
 800150e:	492a      	ldr	r1, [pc, #168]	@ (80015b8 <subscribeToMQTT+0xcc>)
 8001510:	4618      	mov	r0, r3
 8001512:	f023 fd43 	bl	8024f9c <siprintf>

		resp =
				ATC_SendReceive(&espat,
 8001516:	4b29      	ldr	r3, [pc, #164]	@ (80015bc <subscribeToMQTT+0xd0>)
 8001518:	9302      	str	r3, [sp, #8]
 800151a:	2301      	movs	r3, #1
 800151c:	9301      	str	r3, [sp, #4]
 800151e:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001522:	9300      	str	r3, [sp, #0]
 8001524:	2300      	movs	r3, #0
 8001526:	2264      	movs	r2, #100	@ 0x64
 8001528:	4925      	ldr	r1, [pc, #148]	@ (80015c0 <subscribeToMQTT+0xd4>)
 800152a:	4826      	ldr	r0, [pc, #152]	@ (80015c4 <subscribeToMQTT+0xd8>)
 800152c:	f007 f854 	bl	80085d8 <ATC_SendReceive>
 8001530:	4603      	mov	r3, r0
		resp =
 8001532:	b21a      	sxth	r2, r3
 8001534:	4b24      	ldr	r3, [pc, #144]	@ (80015c8 <subscribeToMQTT+0xdc>)
 8001536:	801a      	strh	r2, [r3, #0]
						"AT+MQTTUSERCFG=0,1,\"subscriber\",\"esp32c3\",\"112233\",0,0,\"\"\r\n",
						100, NULL, 500, 1, "OK\r\n");

		resp = ATC_SendReceive(&espat, "AT+MQTTCONN?\r\n", 100, NULL, 100, 1,
 8001538:	4b24      	ldr	r3, [pc, #144]	@ (80015cc <subscribeToMQTT+0xe0>)
 800153a:	9302      	str	r3, [sp, #8]
 800153c:	2301      	movs	r3, #1
 800153e:	9301      	str	r3, [sp, #4]
 8001540:	2364      	movs	r3, #100	@ 0x64
 8001542:	9300      	str	r3, [sp, #0]
 8001544:	2300      	movs	r3, #0
 8001546:	2264      	movs	r2, #100	@ 0x64
 8001548:	4921      	ldr	r1, [pc, #132]	@ (80015d0 <subscribeToMQTT+0xe4>)
 800154a:	481e      	ldr	r0, [pc, #120]	@ (80015c4 <subscribeToMQTT+0xd8>)
 800154c:	f007 f844 	bl	80085d8 <ATC_SendReceive>
 8001550:	4603      	mov	r3, r0
 8001552:	b21a      	sxth	r2, r3
 8001554:	4b1c      	ldr	r3, [pc, #112]	@ (80015c8 <subscribeToMQTT+0xdc>)
 8001556:	801a      	strh	r2, [r3, #0]
				"+MQTTCONN:0,4,1");

		//if not connected, try to connect
		//setup for automatic reconnection
		if (!resp) {
 8001558:	4b1b      	ldr	r3, [pc, #108]	@ (80015c8 <subscribeToMQTT+0xdc>)
 800155a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800155e:	2b00      	cmp	r3, #0
 8001560:	d110      	bne.n	8001584 <subscribeToMQTT+0x98>
			resp = ATC_SendReceive(&espat,
 8001562:	4b16      	ldr	r3, [pc, #88]	@ (80015bc <subscribeToMQTT+0xd0>)
 8001564:	9302      	str	r3, [sp, #8]
 8001566:	2301      	movs	r3, #1
 8001568:	9301      	str	r3, [sp, #4]
 800156a:	f241 3388 	movw	r3, #5000	@ 0x1388
 800156e:	9300      	str	r3, [sp, #0]
 8001570:	2300      	movs	r3, #0
 8001572:	2264      	movs	r2, #100	@ 0x64
 8001574:	4917      	ldr	r1, [pc, #92]	@ (80015d4 <subscribeToMQTT+0xe8>)
 8001576:	4813      	ldr	r0, [pc, #76]	@ (80015c4 <subscribeToMQTT+0xd8>)
 8001578:	f007 f82e 	bl	80085d8 <ATC_SendReceive>
 800157c:	4603      	mov	r3, r0
 800157e:	b21a      	sxth	r2, r3
 8001580:	4b11      	ldr	r3, [pc, #68]	@ (80015c8 <subscribeToMQTT+0xdc>)
 8001582:	801a      	strh	r2, [r3, #0]
		}

		//send MQTT
		//1 -> OK
		//0 -> error
		resp = ATC_SendReceive(&espat, data, 100, NULL, 500, 1, "OK\r\n");
 8001584:	4639      	mov	r1, r7
 8001586:	4b0d      	ldr	r3, [pc, #52]	@ (80015bc <subscribeToMQTT+0xd0>)
 8001588:	9302      	str	r3, [sp, #8]
 800158a:	2301      	movs	r3, #1
 800158c:	9301      	str	r3, [sp, #4]
 800158e:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001592:	9300      	str	r3, [sp, #0]
 8001594:	2300      	movs	r3, #0
 8001596:	2264      	movs	r2, #100	@ 0x64
 8001598:	480a      	ldr	r0, [pc, #40]	@ (80015c4 <subscribeToMQTT+0xd8>)
 800159a:	f007 f81d 	bl	80085d8 <ATC_SendReceive>
 800159e:	4603      	mov	r3, r0
 80015a0:	b21a      	sxth	r2, r3
 80015a2:	4b09      	ldr	r3, [pc, #36]	@ (80015c8 <subscribeToMQTT+0xdc>)
 80015a4:	801a      	strh	r2, [r3, #0]

		return resp;
 80015a6:	4b08      	ldr	r3, [pc, #32]	@ (80015c8 <subscribeToMQTT+0xdc>)
 80015a8:	f9b3 3000 	ldrsh.w	r3, [r3]
	}
//Closing the connection makes it worse
//	resp = ATC_SendReceive(&espat, "AT+CIPCLOSE\r\n", 1000, NULL, 100, 1, "OK\r\n");

}
 80015ac:	4618      	mov	r0, r3
 80015ae:	3750      	adds	r7, #80	@ 0x50
 80015b0:	46bd      	mov	sp, r7
 80015b2:	bd80      	pop	{r7, pc}
 80015b4:	200002ea 	.word	0x200002ea
 80015b8:	080273c4 	.word	0x080273c4
 80015bc:	080271d0 	.word	0x080271d0
 80015c0:	080273e4 	.word	0x080273e4
 80015c4:	200002ec 	.word	0x200002ec
 80015c8:	200002e4 	.word	0x200002e4
 80015cc:	0802738c 	.word	0x0802738c
 80015d0:	0802737c 	.word	0x0802737c
 80015d4:	0802739c 	.word	0x0802739c

080015d8 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 80015d8:	b580      	push	{r7, lr}
 80015da:	b08a      	sub	sp, #40	@ 0x28
 80015dc:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015de:	f107 0314 	add.w	r3, r7, #20
 80015e2:	2200      	movs	r2, #0
 80015e4:	601a      	str	r2, [r3, #0]
 80015e6:	605a      	str	r2, [r3, #4]
 80015e8:	609a      	str	r2, [r3, #8]
 80015ea:	60da      	str	r2, [r3, #12]
 80015ec:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80015ee:	2300      	movs	r3, #0
 80015f0:	613b      	str	r3, [r7, #16]
 80015f2:	4b55      	ldr	r3, [pc, #340]	@ (8001748 <MX_GPIO_Init+0x170>)
 80015f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015f6:	4a54      	ldr	r2, [pc, #336]	@ (8001748 <MX_GPIO_Init+0x170>)
 80015f8:	f043 0304 	orr.w	r3, r3, #4
 80015fc:	6313      	str	r3, [r2, #48]	@ 0x30
 80015fe:	4b52      	ldr	r3, [pc, #328]	@ (8001748 <MX_GPIO_Init+0x170>)
 8001600:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001602:	f003 0304 	and.w	r3, r3, #4
 8001606:	613b      	str	r3, [r7, #16]
 8001608:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800160a:	2300      	movs	r3, #0
 800160c:	60fb      	str	r3, [r7, #12]
 800160e:	4b4e      	ldr	r3, [pc, #312]	@ (8001748 <MX_GPIO_Init+0x170>)
 8001610:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001612:	4a4d      	ldr	r2, [pc, #308]	@ (8001748 <MX_GPIO_Init+0x170>)
 8001614:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001618:	6313      	str	r3, [r2, #48]	@ 0x30
 800161a:	4b4b      	ldr	r3, [pc, #300]	@ (8001748 <MX_GPIO_Init+0x170>)
 800161c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800161e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001622:	60fb      	str	r3, [r7, #12]
 8001624:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001626:	2300      	movs	r3, #0
 8001628:	60bb      	str	r3, [r7, #8]
 800162a:	4b47      	ldr	r3, [pc, #284]	@ (8001748 <MX_GPIO_Init+0x170>)
 800162c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800162e:	4a46      	ldr	r2, [pc, #280]	@ (8001748 <MX_GPIO_Init+0x170>)
 8001630:	f043 0301 	orr.w	r3, r3, #1
 8001634:	6313      	str	r3, [r2, #48]	@ 0x30
 8001636:	4b44      	ldr	r3, [pc, #272]	@ (8001748 <MX_GPIO_Init+0x170>)
 8001638:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800163a:	f003 0301 	and.w	r3, r3, #1
 800163e:	60bb      	str	r3, [r7, #8]
 8001640:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001642:	2300      	movs	r3, #0
 8001644:	607b      	str	r3, [r7, #4]
 8001646:	4b40      	ldr	r3, [pc, #256]	@ (8001748 <MX_GPIO_Init+0x170>)
 8001648:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800164a:	4a3f      	ldr	r2, [pc, #252]	@ (8001748 <MX_GPIO_Init+0x170>)
 800164c:	f043 0302 	orr.w	r3, r3, #2
 8001650:	6313      	str	r3, [r2, #48]	@ 0x30
 8001652:	4b3d      	ldr	r3, [pc, #244]	@ (8001748 <MX_GPIO_Init+0x170>)
 8001654:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001656:	f003 0302 	and.w	r3, r3, #2
 800165a:	607b      	str	r3, [r7, #4]
 800165c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, RED_Pin|DISPL_LED_Pin, GPIO_PIN_RESET);
 800165e:	2200      	movs	r2, #0
 8001660:	2150      	movs	r1, #80	@ 0x50
 8001662:	483a      	ldr	r0, [pc, #232]	@ (800174c <MX_GPIO_Init+0x174>)
 8001664:	f002 fed4 	bl	8004410 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, GPIO_PIN_SET);
 8001668:	2201      	movs	r2, #1
 800166a:	2120      	movs	r1, #32
 800166c:	4837      	ldr	r0, [pc, #220]	@ (800174c <MX_GPIO_Init+0x174>)
 800166e:	f002 fecf 	bl	8004410 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GREEN_Pin|BLUE_Pin, GPIO_PIN_RESET);
 8001672:	2200      	movs	r2, #0
 8001674:	2106      	movs	r1, #6
 8001676:	4836      	ldr	r0, [pc, #216]	@ (8001750 <MX_GPIO_Init+0x178>)
 8001678:	f002 feca 	bl	8004410 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);
 800167c:	2201      	movs	r2, #1
 800167e:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001682:	4833      	ldr	r0, [pc, #204]	@ (8001750 <MX_GPIO_Init+0x178>)
 8001684:	f002 fec4 	bl	8004410 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, WIFI_nRST_Pin|DISPL_RST_Pin, GPIO_PIN_RESET);
 8001688:	2200      	movs	r2, #0
 800168a:	f44f 5188 	mov.w	r1, #4352	@ 0x1100
 800168e:	4831      	ldr	r0, [pc, #196]	@ (8001754 <MX_GPIO_Init+0x17c>)
 8001690:	f002 febe 	bl	8004410 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET);
 8001694:	2201      	movs	r2, #1
 8001696:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800169a:	482e      	ldr	r0, [pc, #184]	@ (8001754 <MX_GPIO_Init+0x17c>)
 800169c:	f002 feb8 	bl	8004410 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80016a0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80016a4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80016a6:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80016aa:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016ac:	2300      	movs	r3, #0
 80016ae:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80016b0:	f107 0314 	add.w	r3, r7, #20
 80016b4:	4619      	mov	r1, r3
 80016b6:	4825      	ldr	r0, [pc, #148]	@ (800174c <MX_GPIO_Init+0x174>)
 80016b8:	f002 fcfe 	bl	80040b8 <HAL_GPIO_Init>

  /*Configure GPIO pins : RED_Pin DISPL_DC_Pin DISPL_LED_Pin */
  GPIO_InitStruct.Pin = RED_Pin|DISPL_DC_Pin|DISPL_LED_Pin;
 80016bc:	2370      	movs	r3, #112	@ 0x70
 80016be:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016c0:	2301      	movs	r3, #1
 80016c2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016c4:	2300      	movs	r3, #0
 80016c6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016c8:	2300      	movs	r3, #0
 80016ca:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016cc:	f107 0314 	add.w	r3, r7, #20
 80016d0:	4619      	mov	r1, r3
 80016d2:	481e      	ldr	r0, [pc, #120]	@ (800174c <MX_GPIO_Init+0x174>)
 80016d4:	f002 fcf0 	bl	80040b8 <HAL_GPIO_Init>

  /*Configure GPIO pins : GREEN_Pin BLUE_Pin TOUCH_CS_Pin */
  GPIO_InitStruct.Pin = GREEN_Pin|BLUE_Pin|TOUCH_CS_Pin;
 80016d8:	f244 0306 	movw	r3, #16390	@ 0x4006
 80016dc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016de:	2301      	movs	r3, #1
 80016e0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016e2:	2300      	movs	r3, #0
 80016e4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016e6:	2300      	movs	r3, #0
 80016e8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80016ea:	f107 0314 	add.w	r3, r7, #20
 80016ee:	4619      	mov	r1, r3
 80016f0:	4817      	ldr	r0, [pc, #92]	@ (8001750 <MX_GPIO_Init+0x178>)
 80016f2:	f002 fce1 	bl	80040b8 <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_INT_Pin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 80016f6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80016fa:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80016fc:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8001700:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001702:	2301      	movs	r3, #1
 8001704:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 8001706:	f107 0314 	add.w	r3, r7, #20
 800170a:	4619      	mov	r1, r3
 800170c:	4810      	ldr	r0, [pc, #64]	@ (8001750 <MX_GPIO_Init+0x178>)
 800170e:	f002 fcd3 	bl	80040b8 <HAL_GPIO_Init>

  /*Configure GPIO pins : WIFI_nRST_Pin DISPL_CS_Pin DISPL_RST_Pin */
  GPIO_InitStruct.Pin = WIFI_nRST_Pin|DISPL_CS_Pin|DISPL_RST_Pin;
 8001712:	f44f 53c8 	mov.w	r3, #6400	@ 0x1900
 8001716:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001718:	2301      	movs	r3, #1
 800171a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800171c:	2300      	movs	r3, #0
 800171e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001720:	2300      	movs	r3, #0
 8001722:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001724:	f107 0314 	add.w	r3, r7, #20
 8001728:	4619      	mov	r1, r3
 800172a:	480a      	ldr	r0, [pc, #40]	@ (8001754 <MX_GPIO_Init+0x17c>)
 800172c:	f002 fcc4 	bl	80040b8 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8001730:	2200      	movs	r2, #0
 8001732:	2100      	movs	r1, #0
 8001734:	2028      	movs	r0, #40	@ 0x28
 8001736:	f002 f842 	bl	80037be <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 800173a:	2028      	movs	r0, #40	@ 0x28
 800173c:	f002 f85b 	bl	80037f6 <HAL_NVIC_EnableIRQ>

}
 8001740:	bf00      	nop
 8001742:	3728      	adds	r7, #40	@ 0x28
 8001744:	46bd      	mov	sp, r7
 8001746:	bd80      	pop	{r7, pc}
 8001748:	40023800 	.word	0x40023800
 800174c:	40020800 	.word	0x40020800
 8001750:	40020400 	.word	0x40020400
 8001754:	40020000 	.word	0x40020000

08001758 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8001758:	b480      	push	{r7}
 800175a:	b083      	sub	sp, #12
 800175c:	af00      	add	r7, sp, #0
 800175e:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8001760:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8001764:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	@ 0xe80
 8001768:	f003 0301 	and.w	r3, r3, #1
 800176c:	2b00      	cmp	r3, #0
 800176e:	d013      	beq.n	8001798 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8001770:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8001774:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	@ 0xe00
 8001778:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 800177c:	2b00      	cmp	r3, #0
 800177e:	d00b      	beq.n	8001798 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8001780:	e000      	b.n	8001784 <ITM_SendChar+0x2c>
    {
      __NOP();
 8001782:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8001784:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8001788:	681b      	ldr	r3, [r3, #0]
 800178a:	2b00      	cmp	r3, #0
 800178c:	d0f9      	beq.n	8001782 <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 800178e:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8001792:	687a      	ldr	r2, [r7, #4]
 8001794:	b2d2      	uxtb	r2, r2
 8001796:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8001798:	687b      	ldr	r3, [r7, #4]
}
 800179a:	4618      	mov	r0, r3
 800179c:	370c      	adds	r7, #12
 800179e:	46bd      	mov	sp, r7
 80017a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a4:	4770      	bx	lr
	...

080017a8 <mqttRX>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void mqttRX()
{
 80017a8:	b580      	push	{r7, lr}
 80017aa:	af00      	add	r7, sp, #0

	printf("sub event: %s\r\n",espat.pRxBuff);
 80017ac:	4b03      	ldr	r3, [pc, #12]	@ (80017bc <mqttRX+0x14>)
 80017ae:	69db      	ldr	r3, [r3, #28]
 80017b0:	4619      	mov	r1, r3
 80017b2:	4803      	ldr	r0, [pc, #12]	@ (80017c0 <mqttRX+0x18>)
 80017b4:	f023 fb7a 	bl	8024eac <iprintf>
}
 80017b8:	bf00      	nop
 80017ba:	bd80      	pop	{r7, pc}
 80017bc:	200002ec 	.word	0x200002ec
 80017c0:	08027430 	.word	0x08027430

080017c4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80017c4:	b580      	push	{r7, lr}
 80017c6:	b082      	sub	sp, #8
 80017c8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN 1 */
 uint16_t thermIndex = 0;
 80017ca:	2300      	movs	r3, #0
 80017cc:	80fb      	strh	r3, [r7, #6]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80017ce:	f001 fa67 	bl	8002ca0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80017d2:	f000 f8c7 	bl	8001964 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80017d6:	f7ff feff 	bl	80015d8 <MX_GPIO_Init>
  MX_DMA_Init();
 80017da:	f7ff fc99 	bl	8001110 <MX_DMA_Init>
  MX_USART2_UART_Init();
 80017de:	f000 fccd 	bl	800217c <MX_USART2_UART_Init>
  MX_CRC_Init();
 80017e2:	f7ff fc5f 	bl	80010a4 <MX_CRC_Init>
  MX_SPI1_Init();
 80017e6:	f000 f969 	bl	8001abc <MX_SPI1_Init>
  MX_ADC1_Init();
 80017ea:	f7ff fbc5 	bl	8000f78 <MX_ADC1_Init>
  MX_USART1_UART_Init();
 80017ee:	f000 fc9b 	bl	8002128 <MX_USART1_UART_Init>
  MX_TIM5_Init();
 80017f2:	f000 fc21 	bl	8002038 <MX_TIM5_Init>
  MX_TouchGFX_Init();
 80017f6:	f007 f85c 	bl	80088b2 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim5);
 80017fa:	484b      	ldr	r0, [pc, #300]	@ (8001928 <main+0x164>)
 80017fc:	f004 fcda 	bl	80061b4 <HAL_TIM_Base_Start_IT>

  ATC_Init(&espat, &huart1, 512, "ESPAT"); //init espAT WiFi
 8001800:	4b4a      	ldr	r3, [pc, #296]	@ (800192c <main+0x168>)
 8001802:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001806:	494a      	ldr	r1, [pc, #296]	@ (8001930 <main+0x16c>)
 8001808:	484a      	ldr	r0, [pc, #296]	@ (8001934 <main+0x170>)
 800180a:	f006 fdd5 	bl	80083b8 <ATC_Init>
  ATC_SetEvents(&espat, events); //set esp callbacks
 800180e:	494a      	ldr	r1, [pc, #296]	@ (8001938 <main+0x174>)
 8001810:	4848      	ldr	r0, [pc, #288]	@ (8001934 <main+0x170>)
 8001812:	f006 fe9f 	bl	8008554 <ATC_SetEvents>

  Displ_Init(Displ_Orientat_90);// (mandatory) initialize display controller - set orientation parameter as per TouchGFX setup
 8001816:	2001      	movs	r0, #1
 8001818:	f000 ff06 	bl	8002628 <Displ_Init>
  touchgfxSignalVSync();						// ask display syncronization
 800181c:	f00d fb86 	bl	800ef2c <touchgfxSignalVSync>
  Displ_BackLight('I');  					// (mandatory) initialize backlight
 8001820:	2049      	movs	r0, #73	@ 0x49
 8001822:	f000 ffa5 	bl	8002770 <Displ_BackLight>

  Displ_BackLight('1');
 8001826:	2031      	movs	r0, #49	@ 0x31
 8001828:	f000 ffa2 	bl	8002770 <Displ_BackLight>

  subscribeToMQTT();
 800182c:	f7ff fe5e 	bl	80014ec <subscribeToMQTT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1) {
		ATC_Loop(&espat);
 8001830:	4840      	ldr	r0, [pc, #256]	@ (8001934 <main+0x170>)
 8001832:	f006 fec3 	bl	80085bc <ATC_Loop>


		buttonPressed = !HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin);
 8001836:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800183a:	4840      	ldr	r0, [pc, #256]	@ (800193c <main+0x178>)
 800183c:	f002 fdd0 	bl	80043e0 <HAL_GPIO_ReadPin>
 8001840:	4603      	mov	r3, r0
 8001842:	2b00      	cmp	r3, #0
 8001844:	bf0c      	ite	eq
 8001846:	2301      	moveq	r3, #1
 8001848:	2300      	movne	r3, #0
 800184a:	b2da      	uxtb	r2, r3
 800184c:	4b3c      	ldr	r3, [pc, #240]	@ (8001940 <main+0x17c>)
 800184e:	701a      	strb	r2, [r3, #0]

		HAL_ADC_Start(&hadc1);
 8001850:	483c      	ldr	r0, [pc, #240]	@ (8001944 <main+0x180>)
 8001852:	f001 faff 	bl	8002e54 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, 10);
 8001856:	210a      	movs	r1, #10
 8001858:	483a      	ldr	r0, [pc, #232]	@ (8001944 <main+0x180>)
 800185a:	f001 fbcd 	bl	8002ff8 <HAL_ADC_PollForConversion>
		thermValue[thermIndex] = HAL_ADC_GetValue(&hadc1);
 800185e:	4839      	ldr	r0, [pc, #228]	@ (8001944 <main+0x180>)
 8001860:	f001 fc55 	bl	800310e <HAL_ADC_GetValue>
 8001864:	4602      	mov	r2, r0
 8001866:	88fb      	ldrh	r3, [r7, #6]
 8001868:	b291      	uxth	r1, r2
 800186a:	4a37      	ldr	r2, [pc, #220]	@ (8001948 <main+0x184>)
 800186c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]

		thermIndex++;
 8001870:	88fb      	ldrh	r3, [r7, #6]
 8001872:	3301      	adds	r3, #1
 8001874:	80fb      	strh	r3, [r7, #6]

		if(thermIndex==16)
 8001876:	88fb      	ldrh	r3, [r7, #6]
 8001878:	2b10      	cmp	r3, #16
 800187a:	d102      	bne.n	8001882 <main+0xbe>
			validAvgTemp=true;
 800187c:	4b33      	ldr	r3, [pc, #204]	@ (800194c <main+0x188>)
 800187e:	2201      	movs	r2, #1
 8001880:	701a      	strb	r2, [r3, #0]

		thermIndex%=16;
 8001882:	88fb      	ldrh	r3, [r7, #6]
 8001884:	f003 030f 	and.w	r3, r3, #15
 8001888:	80fb      	strh	r3, [r7, #6]

		thermAvg=0;
 800188a:	4b31      	ldr	r3, [pc, #196]	@ (8001950 <main+0x18c>)
 800188c:	2200      	movs	r2, #0
 800188e:	601a      	str	r2, [r3, #0]
		for(int i=0; i<16; i++)
 8001890:	2300      	movs	r3, #0
 8001892:	603b      	str	r3, [r7, #0]
 8001894:	e00c      	b.n	80018b0 <main+0xec>
		{
			thermAvg += thermValue[i];
 8001896:	4a2c      	ldr	r2, [pc, #176]	@ (8001948 <main+0x184>)
 8001898:	683b      	ldr	r3, [r7, #0]
 800189a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800189e:	461a      	mov	r2, r3
 80018a0:	4b2b      	ldr	r3, [pc, #172]	@ (8001950 <main+0x18c>)
 80018a2:	681b      	ldr	r3, [r3, #0]
 80018a4:	4413      	add	r3, r2
 80018a6:	4a2a      	ldr	r2, [pc, #168]	@ (8001950 <main+0x18c>)
 80018a8:	6013      	str	r3, [r2, #0]
		for(int i=0; i<16; i++)
 80018aa:	683b      	ldr	r3, [r7, #0]
 80018ac:	3301      	adds	r3, #1
 80018ae:	603b      	str	r3, [r7, #0]
 80018b0:	683b      	ldr	r3, [r7, #0]
 80018b2:	2b0f      	cmp	r3, #15
 80018b4:	ddef      	ble.n	8001896 <main+0xd2>
		}
		thermAvg/=16;
 80018b6:	4b26      	ldr	r3, [pc, #152]	@ (8001950 <main+0x18c>)
 80018b8:	681b      	ldr	r3, [r3, #0]
 80018ba:	091b      	lsrs	r3, r3, #4
 80018bc:	4a24      	ldr	r2, [pc, #144]	@ (8001950 <main+0x18c>)
 80018be:	6013      	str	r3, [r2, #0]


		thermTemp = convertAnalogToTemperature(thermAvg);
 80018c0:	4b23      	ldr	r3, [pc, #140]	@ (8001950 <main+0x18c>)
 80018c2:	681b      	ldr	r3, [r3, #0]
 80018c4:	4618      	mov	r0, r3
 80018c6:	f000 fb33 	bl	8001f30 <convertAnalogToTemperature>
 80018ca:	eef0 7a40 	vmov.f32	s15, s0
 80018ce:	4b21      	ldr	r3, [pc, #132]	@ (8001954 <main+0x190>)
 80018d0:	edc3 7a00 	vstr	s15, [r3]



		touchgfxSignalVSync();					// ask display synchronization
 80018d4:	f00d fb2a 	bl	800ef2c <touchgfxSignalVSync>


		if(sendNextTX && validAvgTemp)//time to send next tx update and thermistorAvg
 80018d8:	4b1f      	ldr	r3, [pc, #124]	@ (8001958 <main+0x194>)
 80018da:	781b      	ldrb	r3, [r3, #0]
 80018dc:	2b00      	cmp	r3, #0
 80018de:	d01f      	beq.n	8001920 <main+0x15c>
 80018e0:	4b1a      	ldr	r3, [pc, #104]	@ (800194c <main+0x188>)
 80018e2:	781b      	ldrb	r3, [r3, #0]
 80018e4:	2b00      	cmp	r3, #0
 80018e6:	d01b      	beq.n	8001920 <main+0x15c>
		{

			if (sendToThingspeak()) { //retry until successful
 80018e8:	f7ff fce0 	bl	80012ac <sendToThingspeak>
 80018ec:	4603      	mov	r3, r0
 80018ee:	2b00      	cmp	r3, #0
 80018f0:	d004      	beq.n	80018fc <main+0x138>

				sendToMQTT();
 80018f2:	f7ff fd7d 	bl	80013f0 <sendToMQTT>

				sendNextTX=false; //don't tx again until next tx time
 80018f6:	4b18      	ldr	r3, [pc, #96]	@ (8001958 <main+0x194>)
 80018f8:	2200      	movs	r2, #0
 80018fa:	701a      	strb	r2, [r3, #0]
			}

			count++;
 80018fc:	4b17      	ldr	r3, [pc, #92]	@ (800195c <main+0x198>)
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	3301      	adds	r3, #1
 8001902:	4a16      	ldr	r2, [pc, #88]	@ (800195c <main+0x198>)
 8001904:	6013      	str	r3, [r2, #0]
			count%=60;	//ramp graph on thingspeak
 8001906:	4b15      	ldr	r3, [pc, #84]	@ (800195c <main+0x198>)
 8001908:	6819      	ldr	r1, [r3, #0]
 800190a:	4b15      	ldr	r3, [pc, #84]	@ (8001960 <main+0x19c>)
 800190c:	fba3 2301 	umull	r2, r3, r3, r1
 8001910:	095a      	lsrs	r2, r3, #5
 8001912:	4613      	mov	r3, r2
 8001914:	011b      	lsls	r3, r3, #4
 8001916:	1a9b      	subs	r3, r3, r2
 8001918:	009b      	lsls	r3, r3, #2
 800191a:	1aca      	subs	r2, r1, r3
 800191c:	4b0f      	ldr	r3, [pc, #60]	@ (800195c <main+0x198>)
 800191e:	601a      	str	r2, [r3, #0]

		}

    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 8001920:	f006 ffcf 	bl	80088c2 <MX_TouchGFX_Process>
		ATC_Loop(&espat);
 8001924:	e784      	b.n	8001830 <main+0x6c>
 8001926:	bf00      	nop
 8001928:	2000041c 	.word	0x2000041c
 800192c:	08027440 	.word	0x08027440
 8001930:	20000464 	.word	0x20000464
 8001934:	200002ec 	.word	0x200002ec
 8001938:	080288f0 	.word	0x080288f0
 800193c:	40020800 	.word	0x40020800
 8001940:	20000328 	.word	0x20000328
 8001944:	20000294 	.word	0x20000294
 8001948:	2000032c 	.word	0x2000032c
 800194c:	2000035d 	.word	0x2000035d
 8001950:	2000034c 	.word	0x2000034c
 8001954:	20000350 	.word	0x20000350
 8001958:	2000035c 	.word	0x2000035c
 800195c:	20000358 	.word	0x20000358
 8001960:	88888889 	.word	0x88888889

08001964 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001964:	b580      	push	{r7, lr}
 8001966:	b094      	sub	sp, #80	@ 0x50
 8001968:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800196a:	f107 031c 	add.w	r3, r7, #28
 800196e:	2234      	movs	r2, #52	@ 0x34
 8001970:	2100      	movs	r1, #0
 8001972:	4618      	mov	r0, r3
 8001974:	f023 fc0a 	bl	802518c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001978:	f107 0308 	add.w	r3, r7, #8
 800197c:	2200      	movs	r2, #0
 800197e:	601a      	str	r2, [r3, #0]
 8001980:	605a      	str	r2, [r3, #4]
 8001982:	609a      	str	r2, [r3, #8]
 8001984:	60da      	str	r2, [r3, #12]
 8001986:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001988:	2300      	movs	r3, #0
 800198a:	607b      	str	r3, [r7, #4]
 800198c:	4b2c      	ldr	r3, [pc, #176]	@ (8001a40 <SystemClock_Config+0xdc>)
 800198e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001990:	4a2b      	ldr	r2, [pc, #172]	@ (8001a40 <SystemClock_Config+0xdc>)
 8001992:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001996:	6413      	str	r3, [r2, #64]	@ 0x40
 8001998:	4b29      	ldr	r3, [pc, #164]	@ (8001a40 <SystemClock_Config+0xdc>)
 800199a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800199c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80019a0:	607b      	str	r3, [r7, #4]
 80019a2:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80019a4:	2300      	movs	r3, #0
 80019a6:	603b      	str	r3, [r7, #0]
 80019a8:	4b26      	ldr	r3, [pc, #152]	@ (8001a44 <SystemClock_Config+0xe0>)
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	4a25      	ldr	r2, [pc, #148]	@ (8001a44 <SystemClock_Config+0xe0>)
 80019ae:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80019b2:	6013      	str	r3, [r2, #0]
 80019b4:	4b23      	ldr	r3, [pc, #140]	@ (8001a44 <SystemClock_Config+0xe0>)
 80019b6:	681b      	ldr	r3, [r3, #0]
 80019b8:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80019bc:	603b      	str	r3, [r7, #0]
 80019be:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80019c0:	2301      	movs	r3, #1
 80019c2:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80019c4:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80019c8:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80019ca:	2302      	movs	r3, #2
 80019cc:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80019ce:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80019d2:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 80019d4:	2304      	movs	r3, #4
 80019d6:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 80019d8:	23b4      	movs	r3, #180	@ 0xb4
 80019da:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80019dc:	2302      	movs	r3, #2
 80019de:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80019e0:	2302      	movs	r3, #2
 80019e2:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 80019e4:	2302      	movs	r3, #2
 80019e6:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80019e8:	f107 031c 	add.w	r3, r7, #28
 80019ec:	4618      	mov	r0, r3
 80019ee:	f003 f8db 	bl	8004ba8 <HAL_RCC_OscConfig>
 80019f2:	4603      	mov	r3, r0
 80019f4:	2b00      	cmp	r3, #0
 80019f6:	d001      	beq.n	80019fc <SystemClock_Config+0x98>
  {
    Error_Handler();
 80019f8:	f000 f85a 	bl	8001ab0 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80019fc:	f002 fd3a 	bl	8004474 <HAL_PWREx_EnableOverDrive>
 8001a00:	4603      	mov	r3, r0
 8001a02:	2b00      	cmp	r3, #0
 8001a04:	d001      	beq.n	8001a0a <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8001a06:	f000 f853 	bl	8001ab0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001a0a:	230f      	movs	r3, #15
 8001a0c:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001a0e:	2302      	movs	r3, #2
 8001a10:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001a12:	2300      	movs	r3, #0
 8001a14:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001a16:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8001a1a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001a1c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001a20:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001a22:	f107 0308 	add.w	r3, r7, #8
 8001a26:	2105      	movs	r1, #5
 8001a28:	4618      	mov	r0, r3
 8001a2a:	f002 fd73 	bl	8004514 <HAL_RCC_ClockConfig>
 8001a2e:	4603      	mov	r3, r0
 8001a30:	2b00      	cmp	r3, #0
 8001a32:	d001      	beq.n	8001a38 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8001a34:	f000 f83c 	bl	8001ab0 <Error_Handler>
  }
}
 8001a38:	bf00      	nop
 8001a3a:	3750      	adds	r7, #80	@ 0x50
 8001a3c:	46bd      	mov	sp, r7
 8001a3e:	bd80      	pop	{r7, pc}
 8001a40:	40023800 	.word	0x40023800
 8001a44:	40007000 	.word	0x40007000

08001a48 <joinAP>:

	}
}

void joinAP(char selection)
{
 8001a48:	b480      	push	{r7}
 8001a4a:	b083      	sub	sp, #12
 8001a4c:	af00      	add	r7, sp, #0
 8001a4e:	4603      	mov	r3, r0
 8001a50:	71fb      	strb	r3, [r7, #7]


	switch (selection) {
 8001a52:	79fb      	ldrb	r3, [r7, #7]
 8001a54:	2b50      	cmp	r3, #80	@ 0x50
 8001a56:	d005      	beq.n	8001a64 <joinAP+0x1c>
 8001a58:	2b50      	cmp	r3, #80	@ 0x50
 8001a5a:	dc06      	bgt.n	8001a6a <joinAP+0x22>
 8001a5c:	2b42      	cmp	r3, #66	@ 0x42
 8001a5e:	d003      	beq.n	8001a68 <joinAP+0x20>
 8001a60:	2b49      	cmp	r3, #73	@ 0x49
//		newAP = &bakery217;
		break;

	case 'I':
//		newAP = &iotsecurity;
		break;
 8001a62:	e002      	b.n	8001a6a <joinAP+0x22>
		break;
 8001a64:	bf00      	nop
 8001a66:	e000      	b.n	8001a6a <joinAP+0x22>
		break;
 8001a68:	bf00      	nop

	}


}
 8001a6a:	bf00      	nop
 8001a6c:	370c      	adds	r7, #12
 8001a6e:	46bd      	mov	sp, r7
 8001a70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a74:	4770      	bx	lr

08001a76 <__io_putchar>:

int __io_putchar(int ch)
{
 8001a76:	b580      	push	{r7, lr}
 8001a78:	b082      	sub	sp, #8
 8001a7a:	af00      	add	r7, sp, #0
 8001a7c:	6078      	str	r0, [r7, #4]
	ITM_SendChar(ch);
 8001a7e:	687b      	ldr	r3, [r7, #4]
 8001a80:	4618      	mov	r0, r3
 8001a82:	f7ff fe69 	bl	8001758 <ITM_SendChar>
	return 0;
 8001a86:	2300      	movs	r3, #0
}
 8001a88:	4618      	mov	r0, r3
 8001a8a:	3708      	adds	r7, #8
 8001a8c:	46bd      	mov	sp, r7
 8001a8e:	bd80      	pop	{r7, pc}

08001a90 <HAL_TIM_PeriodElapsedCallback>:

//timer 5 callback for 1 minute intervals
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001a90:	b480      	push	{r7}
 8001a92:	b083      	sub	sp, #12
 8001a94:	af00      	add	r7, sp, #0
 8001a96:	6078      	str	r0, [r7, #4]
	sendNextTX=true;
 8001a98:	4b04      	ldr	r3, [pc, #16]	@ (8001aac <HAL_TIM_PeriodElapsedCallback+0x1c>)
 8001a9a:	2201      	movs	r2, #1
 8001a9c:	701a      	strb	r2, [r3, #0]
}
 8001a9e:	bf00      	nop
 8001aa0:	370c      	adds	r7, #12
 8001aa2:	46bd      	mov	sp, r7
 8001aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001aa8:	4770      	bx	lr
 8001aaa:	bf00      	nop
 8001aac:	2000035c 	.word	0x2000035c

08001ab0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001ab0:	b480      	push	{r7}
 8001ab2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001ab4:	b672      	cpsid	i
}
 8001ab6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8001ab8:	bf00      	nop
 8001aba:	e7fd      	b.n	8001ab8 <Error_Handler+0x8>

08001abc <MX_SPI1_Init>:
SPI_HandleTypeDef hspi1;
DMA_HandleTypeDef hdma_spi1_tx;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 8001abc:	b580      	push	{r7, lr}
 8001abe:	af00      	add	r7, sp, #0
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 8001ac0:	4b17      	ldr	r3, [pc, #92]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001ac2:	4a18      	ldr	r2, [pc, #96]	@ (8001b24 <MX_SPI1_Init+0x68>)
 8001ac4:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8001ac6:	4b16      	ldr	r3, [pc, #88]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001ac8:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001acc:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8001ace:	4b14      	ldr	r3, [pc, #80]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001ad0:	2200      	movs	r2, #0
 8001ad2:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8001ad4:	4b12      	ldr	r3, [pc, #72]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001ad6:	2200      	movs	r2, #0
 8001ad8:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001ada:	4b11      	ldr	r3, [pc, #68]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001adc:	2200      	movs	r2, #0
 8001ade:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001ae0:	4b0f      	ldr	r3, [pc, #60]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001ae2:	2200      	movs	r2, #0
 8001ae4:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8001ae6:	4b0e      	ldr	r3, [pc, #56]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001ae8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001aec:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 8001aee:	4b0c      	ldr	r3, [pc, #48]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001af0:	2208      	movs	r2, #8
 8001af2:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001af4:	4b0a      	ldr	r3, [pc, #40]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001af6:	2200      	movs	r2, #0
 8001af8:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8001afa:	4b09      	ldr	r3, [pc, #36]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001afc:	2200      	movs	r2, #0
 8001afe:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001b00:	4b07      	ldr	r3, [pc, #28]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001b02:	2200      	movs	r2, #0
 8001b04:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 8001b06:	4b06      	ldr	r3, [pc, #24]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001b08:	220a      	movs	r2, #10
 8001b0a:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8001b0c:	4804      	ldr	r0, [pc, #16]	@ (8001b20 <MX_SPI1_Init+0x64>)
 8001b0e:	f003 fae9 	bl	80050e4 <HAL_SPI_Init>
 8001b12:	4603      	mov	r3, r0
 8001b14:	2b00      	cmp	r3, #0
 8001b16:	d001      	beq.n	8001b1c <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8001b18:	f7ff ffca 	bl	8001ab0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8001b1c:	bf00      	nop
 8001b1e:	bd80      	pop	{r7, pc}
 8001b20:	20000360 	.word	0x20000360
 8001b24:	40013000 	.word	0x40013000

08001b28 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8001b28:	b580      	push	{r7, lr}
 8001b2a:	b08a      	sub	sp, #40	@ 0x28
 8001b2c:	af00      	add	r7, sp, #0
 8001b2e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b30:	f107 0314 	add.w	r3, r7, #20
 8001b34:	2200      	movs	r2, #0
 8001b36:	601a      	str	r2, [r3, #0]
 8001b38:	605a      	str	r2, [r3, #4]
 8001b3a:	609a      	str	r2, [r3, #8]
 8001b3c:	60da      	str	r2, [r3, #12]
 8001b3e:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI1)
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	681b      	ldr	r3, [r3, #0]
 8001b44:	4a34      	ldr	r2, [pc, #208]	@ (8001c18 <HAL_SPI_MspInit+0xf0>)
 8001b46:	4293      	cmp	r3, r2
 8001b48:	d161      	bne.n	8001c0e <HAL_SPI_MspInit+0xe6>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8001b4a:	2300      	movs	r3, #0
 8001b4c:	613b      	str	r3, [r7, #16]
 8001b4e:	4b33      	ldr	r3, [pc, #204]	@ (8001c1c <HAL_SPI_MspInit+0xf4>)
 8001b50:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001b52:	4a32      	ldr	r2, [pc, #200]	@ (8001c1c <HAL_SPI_MspInit+0xf4>)
 8001b54:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001b58:	6453      	str	r3, [r2, #68]	@ 0x44
 8001b5a:	4b30      	ldr	r3, [pc, #192]	@ (8001c1c <HAL_SPI_MspInit+0xf4>)
 8001b5c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001b5e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001b62:	613b      	str	r3, [r7, #16]
 8001b64:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b66:	2300      	movs	r3, #0
 8001b68:	60fb      	str	r3, [r7, #12]
 8001b6a:	4b2c      	ldr	r3, [pc, #176]	@ (8001c1c <HAL_SPI_MspInit+0xf4>)
 8001b6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b6e:	4a2b      	ldr	r2, [pc, #172]	@ (8001c1c <HAL_SPI_MspInit+0xf4>)
 8001b70:	f043 0301 	orr.w	r3, r3, #1
 8001b74:	6313      	str	r3, [r2, #48]	@ 0x30
 8001b76:	4b29      	ldr	r3, [pc, #164]	@ (8001c1c <HAL_SPI_MspInit+0xf4>)
 8001b78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b7a:	f003 0301 	and.w	r3, r3, #1
 8001b7e:	60fb      	str	r3, [r7, #12]
 8001b80:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = DISPL_SCK_Pin|TOUCH_MISO_Pin|DISPL_MOSI_Pin;
 8001b82:	23e0      	movs	r3, #224	@ 0xe0
 8001b84:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b86:	2302      	movs	r3, #2
 8001b88:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b8a:	2300      	movs	r3, #0
 8001b8c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b8e:	2303      	movs	r3, #3
 8001b90:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8001b92:	2305      	movs	r3, #5
 8001b94:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b96:	f107 0314 	add.w	r3, r7, #20
 8001b9a:	4619      	mov	r1, r3
 8001b9c:	4820      	ldr	r0, [pc, #128]	@ (8001c20 <HAL_SPI_MspInit+0xf8>)
 8001b9e:	f002 fa8b 	bl	80040b8 <HAL_GPIO_Init>

    /* SPI1 DMA Init */
    /* SPI1_TX Init */
    hdma_spi1_tx.Instance = DMA2_Stream3;
 8001ba2:	4b20      	ldr	r3, [pc, #128]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001ba4:	4a20      	ldr	r2, [pc, #128]	@ (8001c28 <HAL_SPI_MspInit+0x100>)
 8001ba6:	601a      	str	r2, [r3, #0]
    hdma_spi1_tx.Init.Channel = DMA_CHANNEL_3;
 8001ba8:	4b1e      	ldr	r3, [pc, #120]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001baa:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 8001bae:	605a      	str	r2, [r3, #4]
    hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001bb0:	4b1c      	ldr	r3, [pc, #112]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001bb2:	2240      	movs	r2, #64	@ 0x40
 8001bb4:	609a      	str	r2, [r3, #8]
    hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001bb6:	4b1b      	ldr	r3, [pc, #108]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001bb8:	2200      	movs	r2, #0
 8001bba:	60da      	str	r2, [r3, #12]
    hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001bbc:	4b19      	ldr	r3, [pc, #100]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001bbe:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001bc2:	611a      	str	r2, [r3, #16]
    hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001bc4:	4b17      	ldr	r3, [pc, #92]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001bc6:	2200      	movs	r2, #0
 8001bc8:	615a      	str	r2, [r3, #20]
    hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001bca:	4b16      	ldr	r3, [pc, #88]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001bcc:	2200      	movs	r2, #0
 8001bce:	619a      	str	r2, [r3, #24]
    hdma_spi1_tx.Init.Mode = DMA_NORMAL;
 8001bd0:	4b14      	ldr	r3, [pc, #80]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001bd2:	2200      	movs	r2, #0
 8001bd4:	61da      	str	r2, [r3, #28]
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001bd6:	4b13      	ldr	r3, [pc, #76]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001bd8:	2200      	movs	r2, #0
 8001bda:	621a      	str	r2, [r3, #32]
    hdma_spi1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001bdc:	4b11      	ldr	r3, [pc, #68]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001bde:	2200      	movs	r2, #0
 8001be0:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 8001be2:	4810      	ldr	r0, [pc, #64]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001be4:	f001 fe5a 	bl	800389c <HAL_DMA_Init>
 8001be8:	4603      	mov	r3, r0
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d001      	beq.n	8001bf2 <HAL_SPI_MspInit+0xca>
    {
      Error_Handler();
 8001bee:	f7ff ff5f 	bl	8001ab0 <Error_Handler>
    }

    __HAL_LINKDMA(spiHandle,hdmatx,hdma_spi1_tx);
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	4a0b      	ldr	r2, [pc, #44]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001bf6:	649a      	str	r2, [r3, #72]	@ 0x48
 8001bf8:	4a0a      	ldr	r2, [pc, #40]	@ (8001c24 <HAL_SPI_MspInit+0xfc>)
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	6393      	str	r3, [r2, #56]	@ 0x38

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 0, 0);
 8001bfe:	2200      	movs	r2, #0
 8001c00:	2100      	movs	r1, #0
 8001c02:	2023      	movs	r0, #35	@ 0x23
 8001c04:	f001 fddb 	bl	80037be <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8001c08:	2023      	movs	r0, #35	@ 0x23
 8001c0a:	f001 fdf4 	bl	80037f6 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }
}
 8001c0e:	bf00      	nop
 8001c10:	3728      	adds	r7, #40	@ 0x28
 8001c12:	46bd      	mov	sp, r7
 8001c14:	bd80      	pop	{r7, pc}
 8001c16:	bf00      	nop
 8001c18:	40013000 	.word	0x40013000
 8001c1c:	40023800 	.word	0x40023800
 8001c20:	40020000 	.word	0x40020000
 8001c24:	200003b8 	.word	0x200003b8
 8001c28:	40026458 	.word	0x40026458

08001c2c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001c2c:	b580      	push	{r7, lr}
 8001c2e:	b082      	sub	sp, #8
 8001c30:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001c32:	2300      	movs	r3, #0
 8001c34:	607b      	str	r3, [r7, #4]
 8001c36:	4b10      	ldr	r3, [pc, #64]	@ (8001c78 <HAL_MspInit+0x4c>)
 8001c38:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c3a:	4a0f      	ldr	r2, [pc, #60]	@ (8001c78 <HAL_MspInit+0x4c>)
 8001c3c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001c40:	6453      	str	r3, [r2, #68]	@ 0x44
 8001c42:	4b0d      	ldr	r3, [pc, #52]	@ (8001c78 <HAL_MspInit+0x4c>)
 8001c44:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c46:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001c4a:	607b      	str	r3, [r7, #4]
 8001c4c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001c4e:	2300      	movs	r3, #0
 8001c50:	603b      	str	r3, [r7, #0]
 8001c52:	4b09      	ldr	r3, [pc, #36]	@ (8001c78 <HAL_MspInit+0x4c>)
 8001c54:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c56:	4a08      	ldr	r2, [pc, #32]	@ (8001c78 <HAL_MspInit+0x4c>)
 8001c58:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001c5c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c5e:	4b06      	ldr	r3, [pc, #24]	@ (8001c78 <HAL_MspInit+0x4c>)
 8001c60:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c62:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001c66:	603b      	str	r3, [r7, #0]
 8001c68:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8001c6a:	2007      	movs	r0, #7
 8001c6c:	f001 fd9c 	bl	80037a8 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001c70:	bf00      	nop
 8001c72:	3708      	adds	r7, #8
 8001c74:	46bd      	mov	sp, r7
 8001c76:	bd80      	pop	{r7, pc}
 8001c78:	40023800 	.word	0x40023800

08001c7c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001c7c:	b480      	push	{r7}
 8001c7e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001c80:	bf00      	nop
 8001c82:	e7fd      	b.n	8001c80 <NMI_Handler+0x4>

08001c84 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001c84:	b480      	push	{r7}
 8001c86:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001c88:	bf00      	nop
 8001c8a:	e7fd      	b.n	8001c88 <HardFault_Handler+0x4>

08001c8c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001c8c:	b480      	push	{r7}
 8001c8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001c90:	bf00      	nop
 8001c92:	e7fd      	b.n	8001c90 <MemManage_Handler+0x4>

08001c94 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001c94:	b480      	push	{r7}
 8001c96:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001c98:	bf00      	nop
 8001c9a:	e7fd      	b.n	8001c98 <BusFault_Handler+0x4>

08001c9c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001c9c:	b480      	push	{r7}
 8001c9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001ca0:	bf00      	nop
 8001ca2:	e7fd      	b.n	8001ca0 <UsageFault_Handler+0x4>

08001ca4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001ca4:	b480      	push	{r7}
 8001ca6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001ca8:	bf00      	nop
 8001caa:	46bd      	mov	sp, r7
 8001cac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cb0:	4770      	bx	lr

08001cb2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001cb2:	b480      	push	{r7}
 8001cb4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001cb6:	bf00      	nop
 8001cb8:	46bd      	mov	sp, r7
 8001cba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cbe:	4770      	bx	lr

08001cc0 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001cc0:	b480      	push	{r7}
 8001cc2:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001cc4:	bf00      	nop
 8001cc6:	46bd      	mov	sp, r7
 8001cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ccc:	4770      	bx	lr

08001cce <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001cce:	b580      	push	{r7, lr}
 8001cd0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */


  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001cd2:	f001 f837 	bl	8002d44 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001cd6:	bf00      	nop
 8001cd8:	bd80      	pop	{r7, pc}
	...

08001cdc <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 8001cdc:	b580      	push	{r7, lr}
 8001cde:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8001ce0:	4802      	ldr	r0, [pc, #8]	@ (8001cec <SPI1_IRQHandler+0x10>)
 8001ce2:	f003 ff41 	bl	8005b68 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8001ce6:	bf00      	nop
 8001ce8:	bd80      	pop	{r7, pc}
 8001cea:	bf00      	nop
 8001cec:	20000360 	.word	0x20000360

08001cf0 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8001cf0:	b580      	push	{r7, lr}
 8001cf2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8001cf4:	4802      	ldr	r0, [pc, #8]	@ (8001d00 <USART1_IRQHandler+0x10>)
 8001cf6:	f005 f8ab 	bl	8006e50 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8001cfa:	bf00      	nop
 8001cfc:	bd80      	pop	{r7, pc}
 8001cfe:	bf00      	nop
 8001d00:	20000464 	.word	0x20000464

08001d04 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8001d04:	b580      	push	{r7, lr}
 8001d06:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8001d08:	4802      	ldr	r0, [pc, #8]	@ (8001d14 <USART2_IRQHandler+0x10>)
 8001d0a:	f005 f8a1 	bl	8006e50 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8001d0e:	bf00      	nop
 8001d10:	bd80      	pop	{r7, pc}
 8001d12:	bf00      	nop
 8001d14:	200004ac 	.word	0x200004ac

08001d18 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8001d18:	b580      	push	{r7, lr}
 8001d1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(B1_Pin);
 8001d1c:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8001d20:	f002 fb90 	bl	8004444 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 8001d24:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 8001d28:	f002 fb8c 	bl	8004444 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8001d2c:	bf00      	nop
 8001d2e:	bd80      	pop	{r7, pc}

08001d30 <TIM5_IRQHandler>:

/**
  * @brief This function handles TIM5 global interrupt.
  */
void TIM5_IRQHandler(void)
{
 8001d30:	b580      	push	{r7, lr}
 8001d32:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM5_IRQn 0 */

  /* USER CODE END TIM5_IRQn 0 */
  HAL_TIM_IRQHandler(&htim5);
 8001d34:	4802      	ldr	r0, [pc, #8]	@ (8001d40 <TIM5_IRQHandler+0x10>)
 8001d36:	f004 faad 	bl	8006294 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM5_IRQn 1 */

  /* USER CODE END TIM5_IRQn 1 */
}
 8001d3a:	bf00      	nop
 8001d3c:	bd80      	pop	{r7, pc}
 8001d3e:	bf00      	nop
 8001d40:	2000041c 	.word	0x2000041c

08001d44 <DMA2_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
 8001d44:	b580      	push	{r7, lr}
 8001d46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
 8001d48:	4802      	ldr	r0, [pc, #8]	@ (8001d54 <DMA2_Stream2_IRQHandler+0x10>)
 8001d4a:	f001 ff3f 	bl	8003bcc <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}
 8001d4e:	bf00      	nop
 8001d50:	bd80      	pop	{r7, pc}
 8001d52:	bf00      	nop
 8001d54:	200004f4 	.word	0x200004f4

08001d58 <DMA2_Stream3_IRQHandler>:

/**
  * @brief This function handles DMA2 stream3 global interrupt.
  */
void DMA2_Stream3_IRQHandler(void)
{
 8001d58:	b580      	push	{r7, lr}
 8001d5a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */

  /* USER CODE END DMA2_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_tx);
 8001d5c:	4802      	ldr	r0, [pc, #8]	@ (8001d68 <DMA2_Stream3_IRQHandler+0x10>)
 8001d5e:	f001 ff35 	bl	8003bcc <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream3_IRQn 1 */

  /* USER CODE END DMA2_Stream3_IRQn 1 */
}
 8001d62:	bf00      	nop
 8001d64:	bd80      	pop	{r7, pc}
 8001d66:	bf00      	nop
 8001d68:	200003b8 	.word	0x200003b8

08001d6c <DMA2_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA2 stream7 global interrupt.
  */
void DMA2_Stream7_IRQHandler(void)
{
 8001d6c:	b580      	push	{r7, lr}
 8001d6e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */

  /* USER CODE END DMA2_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_tx);
 8001d70:	4802      	ldr	r0, [pc, #8]	@ (8001d7c <DMA2_Stream7_IRQHandler+0x10>)
 8001d72:	f001 ff2b 	bl	8003bcc <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */

  /* USER CODE END DMA2_Stream7_IRQn 1 */
}
 8001d76:	bf00      	nop
 8001d78:	bd80      	pop	{r7, pc}
 8001d7a:	bf00      	nop
 8001d7c:	20000554 	.word	0x20000554

08001d80 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001d80:	b480      	push	{r7}
 8001d82:	af00      	add	r7, sp, #0
  return 1;
 8001d84:	2301      	movs	r3, #1
}
 8001d86:	4618      	mov	r0, r3
 8001d88:	46bd      	mov	sp, r7
 8001d8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d8e:	4770      	bx	lr

08001d90 <_kill>:

int _kill(int pid, int sig)
{
 8001d90:	b580      	push	{r7, lr}
 8001d92:	b082      	sub	sp, #8
 8001d94:	af00      	add	r7, sp, #0
 8001d96:	6078      	str	r0, [r7, #4]
 8001d98:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001d9a:	f023 fac7 	bl	802532c <__errno>
 8001d9e:	4603      	mov	r3, r0
 8001da0:	2216      	movs	r2, #22
 8001da2:	601a      	str	r2, [r3, #0]
  return -1;
 8001da4:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001da8:	4618      	mov	r0, r3
 8001daa:	3708      	adds	r7, #8
 8001dac:	46bd      	mov	sp, r7
 8001dae:	bd80      	pop	{r7, pc}

08001db0 <_exit>:

void _exit (int status)
{
 8001db0:	b580      	push	{r7, lr}
 8001db2:	b082      	sub	sp, #8
 8001db4:	af00      	add	r7, sp, #0
 8001db6:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001db8:	f04f 31ff 	mov.w	r1, #4294967295
 8001dbc:	6878      	ldr	r0, [r7, #4]
 8001dbe:	f7ff ffe7 	bl	8001d90 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001dc2:	bf00      	nop
 8001dc4:	e7fd      	b.n	8001dc2 <_exit+0x12>

08001dc6 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001dc6:	b580      	push	{r7, lr}
 8001dc8:	b086      	sub	sp, #24
 8001dca:	af00      	add	r7, sp, #0
 8001dcc:	60f8      	str	r0, [r7, #12]
 8001dce:	60b9      	str	r1, [r7, #8]
 8001dd0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001dd2:	2300      	movs	r3, #0
 8001dd4:	617b      	str	r3, [r7, #20]
 8001dd6:	e00a      	b.n	8001dee <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001dd8:	f3af 8000 	nop.w
 8001ddc:	4601      	mov	r1, r0
 8001dde:	68bb      	ldr	r3, [r7, #8]
 8001de0:	1c5a      	adds	r2, r3, #1
 8001de2:	60ba      	str	r2, [r7, #8]
 8001de4:	b2ca      	uxtb	r2, r1
 8001de6:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001de8:	697b      	ldr	r3, [r7, #20]
 8001dea:	3301      	adds	r3, #1
 8001dec:	617b      	str	r3, [r7, #20]
 8001dee:	697a      	ldr	r2, [r7, #20]
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	429a      	cmp	r2, r3
 8001df4:	dbf0      	blt.n	8001dd8 <_read+0x12>
  }

  return len;
 8001df6:	687b      	ldr	r3, [r7, #4]
}
 8001df8:	4618      	mov	r0, r3
 8001dfa:	3718      	adds	r7, #24
 8001dfc:	46bd      	mov	sp, r7
 8001dfe:	bd80      	pop	{r7, pc}

08001e00 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001e00:	b580      	push	{r7, lr}
 8001e02:	b086      	sub	sp, #24
 8001e04:	af00      	add	r7, sp, #0
 8001e06:	60f8      	str	r0, [r7, #12]
 8001e08:	60b9      	str	r1, [r7, #8]
 8001e0a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e0c:	2300      	movs	r3, #0
 8001e0e:	617b      	str	r3, [r7, #20]
 8001e10:	e009      	b.n	8001e26 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001e12:	68bb      	ldr	r3, [r7, #8]
 8001e14:	1c5a      	adds	r2, r3, #1
 8001e16:	60ba      	str	r2, [r7, #8]
 8001e18:	781b      	ldrb	r3, [r3, #0]
 8001e1a:	4618      	mov	r0, r3
 8001e1c:	f7ff fe2b 	bl	8001a76 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e20:	697b      	ldr	r3, [r7, #20]
 8001e22:	3301      	adds	r3, #1
 8001e24:	617b      	str	r3, [r7, #20]
 8001e26:	697a      	ldr	r2, [r7, #20]
 8001e28:	687b      	ldr	r3, [r7, #4]
 8001e2a:	429a      	cmp	r2, r3
 8001e2c:	dbf1      	blt.n	8001e12 <_write+0x12>
  }
  return len;
 8001e2e:	687b      	ldr	r3, [r7, #4]
}
 8001e30:	4618      	mov	r0, r3
 8001e32:	3718      	adds	r7, #24
 8001e34:	46bd      	mov	sp, r7
 8001e36:	bd80      	pop	{r7, pc}

08001e38 <_close>:

int _close(int file)
{
 8001e38:	b480      	push	{r7}
 8001e3a:	b083      	sub	sp, #12
 8001e3c:	af00      	add	r7, sp, #0
 8001e3e:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001e40:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001e44:	4618      	mov	r0, r3
 8001e46:	370c      	adds	r7, #12
 8001e48:	46bd      	mov	sp, r7
 8001e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e4e:	4770      	bx	lr

08001e50 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001e50:	b480      	push	{r7}
 8001e52:	b083      	sub	sp, #12
 8001e54:	af00      	add	r7, sp, #0
 8001e56:	6078      	str	r0, [r7, #4]
 8001e58:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001e5a:	683b      	ldr	r3, [r7, #0]
 8001e5c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001e60:	605a      	str	r2, [r3, #4]
  return 0;
 8001e62:	2300      	movs	r3, #0
}
 8001e64:	4618      	mov	r0, r3
 8001e66:	370c      	adds	r7, #12
 8001e68:	46bd      	mov	sp, r7
 8001e6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e6e:	4770      	bx	lr

08001e70 <_isatty>:

int _isatty(int file)
{
 8001e70:	b480      	push	{r7}
 8001e72:	b083      	sub	sp, #12
 8001e74:	af00      	add	r7, sp, #0
 8001e76:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001e78:	2301      	movs	r3, #1
}
 8001e7a:	4618      	mov	r0, r3
 8001e7c:	370c      	adds	r7, #12
 8001e7e:	46bd      	mov	sp, r7
 8001e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e84:	4770      	bx	lr

08001e86 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001e86:	b480      	push	{r7}
 8001e88:	b085      	sub	sp, #20
 8001e8a:	af00      	add	r7, sp, #0
 8001e8c:	60f8      	str	r0, [r7, #12]
 8001e8e:	60b9      	str	r1, [r7, #8]
 8001e90:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001e92:	2300      	movs	r3, #0
}
 8001e94:	4618      	mov	r0, r3
 8001e96:	3714      	adds	r7, #20
 8001e98:	46bd      	mov	sp, r7
 8001e9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e9e:	4770      	bx	lr

08001ea0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001ea0:	b580      	push	{r7, lr}
 8001ea2:	b086      	sub	sp, #24
 8001ea4:	af00      	add	r7, sp, #0
 8001ea6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001ea8:	4a14      	ldr	r2, [pc, #80]	@ (8001efc <_sbrk+0x5c>)
 8001eaa:	4b15      	ldr	r3, [pc, #84]	@ (8001f00 <_sbrk+0x60>)
 8001eac:	1ad3      	subs	r3, r2, r3
 8001eae:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001eb0:	697b      	ldr	r3, [r7, #20]
 8001eb2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001eb4:	4b13      	ldr	r3, [pc, #76]	@ (8001f04 <_sbrk+0x64>)
 8001eb6:	681b      	ldr	r3, [r3, #0]
 8001eb8:	2b00      	cmp	r3, #0
 8001eba:	d102      	bne.n	8001ec2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001ebc:	4b11      	ldr	r3, [pc, #68]	@ (8001f04 <_sbrk+0x64>)
 8001ebe:	4a12      	ldr	r2, [pc, #72]	@ (8001f08 <_sbrk+0x68>)
 8001ec0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001ec2:	4b10      	ldr	r3, [pc, #64]	@ (8001f04 <_sbrk+0x64>)
 8001ec4:	681a      	ldr	r2, [r3, #0]
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	4413      	add	r3, r2
 8001eca:	693a      	ldr	r2, [r7, #16]
 8001ecc:	429a      	cmp	r2, r3
 8001ece:	d207      	bcs.n	8001ee0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001ed0:	f023 fa2c 	bl	802532c <__errno>
 8001ed4:	4603      	mov	r3, r0
 8001ed6:	220c      	movs	r2, #12
 8001ed8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001eda:	f04f 33ff 	mov.w	r3, #4294967295
 8001ede:	e009      	b.n	8001ef4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001ee0:	4b08      	ldr	r3, [pc, #32]	@ (8001f04 <_sbrk+0x64>)
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001ee6:	4b07      	ldr	r3, [pc, #28]	@ (8001f04 <_sbrk+0x64>)
 8001ee8:	681a      	ldr	r2, [r3, #0]
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	4413      	add	r3, r2
 8001eee:	4a05      	ldr	r2, [pc, #20]	@ (8001f04 <_sbrk+0x64>)
 8001ef0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001ef2:	68fb      	ldr	r3, [r7, #12]
}
 8001ef4:	4618      	mov	r0, r3
 8001ef6:	3718      	adds	r7, #24
 8001ef8:	46bd      	mov	sp, r7
 8001efa:	bd80      	pop	{r7, pc}
 8001efc:	20020000 	.word	0x20020000
 8001f00:	00000400 	.word	0x00000400
 8001f04:	20000418 	.word	0x20000418
 8001f08:	20002fd8 	.word	0x20002fd8

08001f0c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001f0c:	b480      	push	{r7}
 8001f0e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001f10:	4b06      	ldr	r3, [pc, #24]	@ (8001f2c <SystemInit+0x20>)
 8001f12:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001f16:	4a05      	ldr	r2, [pc, #20]	@ (8001f2c <SystemInit+0x20>)
 8001f18:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001f1c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001f20:	bf00      	nop
 8001f22:	46bd      	mov	sp, r7
 8001f24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f28:	4770      	bx	lr
 8001f2a:	bf00      	nop
 8001f2c:	e000ed00 	.word	0xe000ed00

08001f30 <convertAnalogToTemperature>:
 *  @param   The result of an ADC conversion (analogRead) in the range 0 to 4095
 *  @return  Temperature in °C
 */

float  convertAnalogToTemperature(unsigned int analogReadValue)
{
 8001f30:	b5b0      	push	{r4, r5, r7, lr}
 8001f32:	b082      	sub	sp, #8
 8001f34:	af00      	add	r7, sp, #0
 8001f36:	6078      	str	r0, [r7, #4]
  // If analogReadValue is 4095, we would otherwise cause a Divide-By-Zero,
  // Treat as crazy out-of-range temperature.
  if(analogReadValue == 4095) return 1000.0;
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	f640 72ff 	movw	r2, #4095	@ 0xfff
 8001f3e:	4293      	cmp	r3, r2
 8001f40:	d101      	bne.n	8001f46 <convertAnalogToTemperature+0x16>
 8001f42:	4b3b      	ldr	r3, [pc, #236]	@ (8002030 <convertAnalogToTemperature+0x100>)
 8001f44:	e055      	b.n	8001ff2 <convertAnalogToTemperature+0xc2>

  return (1/((log(((10000.0 * analogReadValue) / (4095.0 - analogReadValue))/100000.0)/3950.0) + (1 / (273.15 + 25.000)))) - 273.15;
 8001f46:	6878      	ldr	r0, [r7, #4]
 8001f48:	f7fe fafc 	bl	8000544 <__aeabi_ui2d>
 8001f4c:	a32c      	add	r3, pc, #176	@ (adr r3, 8002000 <convertAnalogToTemperature+0xd0>)
 8001f4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f52:	f7fe fb71 	bl	8000638 <__aeabi_dmul>
 8001f56:	4602      	mov	r2, r0
 8001f58:	460b      	mov	r3, r1
 8001f5a:	4614      	mov	r4, r2
 8001f5c:	461d      	mov	r5, r3
 8001f5e:	6878      	ldr	r0, [r7, #4]
 8001f60:	f7fe faf0 	bl	8000544 <__aeabi_ui2d>
 8001f64:	4602      	mov	r2, r0
 8001f66:	460b      	mov	r3, r1
 8001f68:	a127      	add	r1, pc, #156	@ (adr r1, 8002008 <convertAnalogToTemperature+0xd8>)
 8001f6a:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001f6e:	f7fe f9ab 	bl	80002c8 <__aeabi_dsub>
 8001f72:	4602      	mov	r2, r0
 8001f74:	460b      	mov	r3, r1
 8001f76:	4620      	mov	r0, r4
 8001f78:	4629      	mov	r1, r5
 8001f7a:	f7fe fc87 	bl	800088c <__aeabi_ddiv>
 8001f7e:	4602      	mov	r2, r0
 8001f80:	460b      	mov	r3, r1
 8001f82:	4610      	mov	r0, r2
 8001f84:	4619      	mov	r1, r3
 8001f86:	a322      	add	r3, pc, #136	@ (adr r3, 8002010 <convertAnalogToTemperature+0xe0>)
 8001f88:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f8c:	f7fe fc7e 	bl	800088c <__aeabi_ddiv>
 8001f90:	4602      	mov	r2, r0
 8001f92:	460b      	mov	r3, r1
 8001f94:	ec43 2b17 	vmov	d7, r2, r3
 8001f98:	eeb0 0a47 	vmov.f32	s0, s14
 8001f9c:	eef0 0a67 	vmov.f32	s1, s15
 8001fa0:	f021 ff62 	bl	8023e68 <log>
 8001fa4:	ec51 0b10 	vmov	r0, r1, d0
 8001fa8:	a31b      	add	r3, pc, #108	@ (adr r3, 8002018 <convertAnalogToTemperature+0xe8>)
 8001faa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fae:	f7fe fc6d 	bl	800088c <__aeabi_ddiv>
 8001fb2:	4602      	mov	r2, r0
 8001fb4:	460b      	mov	r3, r1
 8001fb6:	4610      	mov	r0, r2
 8001fb8:	4619      	mov	r1, r3
 8001fba:	a319      	add	r3, pc, #100	@ (adr r3, 8002020 <convertAnalogToTemperature+0xf0>)
 8001fbc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fc0:	f7fe f984 	bl	80002cc <__adddf3>
 8001fc4:	4602      	mov	r2, r0
 8001fc6:	460b      	mov	r3, r1
 8001fc8:	f04f 0000 	mov.w	r0, #0
 8001fcc:	4919      	ldr	r1, [pc, #100]	@ (8002034 <convertAnalogToTemperature+0x104>)
 8001fce:	f7fe fc5d 	bl	800088c <__aeabi_ddiv>
 8001fd2:	4602      	mov	r2, r0
 8001fd4:	460b      	mov	r3, r1
 8001fd6:	4610      	mov	r0, r2
 8001fd8:	4619      	mov	r1, r3
 8001fda:	a313      	add	r3, pc, #76	@ (adr r3, 8002028 <convertAnalogToTemperature+0xf8>)
 8001fdc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fe0:	f7fe f972 	bl	80002c8 <__aeabi_dsub>
 8001fe4:	4602      	mov	r2, r0
 8001fe6:	460b      	mov	r3, r1
 8001fe8:	4610      	mov	r0, r2
 8001fea:	4619      	mov	r1, r3
 8001fec:	f7fe fdfc 	bl	8000be8 <__aeabi_d2f>
 8001ff0:	4603      	mov	r3, r0
}
 8001ff2:	ee07 3a90 	vmov	s15, r3
 8001ff6:	eeb0 0a67 	vmov.f32	s0, s15
 8001ffa:	3708      	adds	r7, #8
 8001ffc:	46bd      	mov	sp, r7
 8001ffe:	bdb0      	pop	{r4, r5, r7, pc}
 8002000:	00000000 	.word	0x00000000
 8002004:	40c38800 	.word	0x40c38800
 8002008:	00000000 	.word	0x00000000
 800200c:	40affe00 	.word	0x40affe00
 8002010:	00000000 	.word	0x00000000
 8002014:	40f86a00 	.word	0x40f86a00
 8002018:	00000000 	.word	0x00000000
 800201c:	40aedc00 	.word	0x40aedc00
 8002020:	dcb5db83 	.word	0xdcb5db83
 8002024:	3f6b79e1 	.word	0x3f6b79e1
 8002028:	66666666 	.word	0x66666666
 800202c:	40711266 	.word	0x40711266
 8002030:	447a0000 	.word	0x447a0000
 8002034:	3ff00000 	.word	0x3ff00000

08002038 <MX_TIM5_Init>:

TIM_HandleTypeDef htim5;

/* TIM5 init function */
void MX_TIM5_Init(void)
{
 8002038:	b580      	push	{r7, lr}
 800203a:	b086      	sub	sp, #24
 800203c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800203e:	f107 0308 	add.w	r3, r7, #8
 8002042:	2200      	movs	r2, #0
 8002044:	601a      	str	r2, [r3, #0]
 8002046:	605a      	str	r2, [r3, #4]
 8002048:	609a      	str	r2, [r3, #8]
 800204a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800204c:	463b      	mov	r3, r7
 800204e:	2200      	movs	r2, #0
 8002050:	601a      	str	r2, [r3, #0]
 8002052:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8002054:	4b1d      	ldr	r3, [pc, #116]	@ (80020cc <MX_TIM5_Init+0x94>)
 8002056:	4a1e      	ldr	r2, [pc, #120]	@ (80020d0 <MX_TIM5_Init+0x98>)
 8002058:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 30000-1;
 800205a:	4b1c      	ldr	r3, [pc, #112]	@ (80020cc <MX_TIM5_Init+0x94>)
 800205c:	f247 522f 	movw	r2, #29999	@ 0x752f
 8002060:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002062:	4b1a      	ldr	r3, [pc, #104]	@ (80020cc <MX_TIM5_Init+0x94>)
 8002064:	2200      	movs	r2, #0
 8002066:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 180000-1;
 8002068:	4b18      	ldr	r3, [pc, #96]	@ (80020cc <MX_TIM5_Init+0x94>)
 800206a:	4a1a      	ldr	r2, [pc, #104]	@ (80020d4 <MX_TIM5_Init+0x9c>)
 800206c:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800206e:	4b17      	ldr	r3, [pc, #92]	@ (80020cc <MX_TIM5_Init+0x94>)
 8002070:	2200      	movs	r2, #0
 8002072:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002074:	4b15      	ldr	r3, [pc, #84]	@ (80020cc <MX_TIM5_Init+0x94>)
 8002076:	2200      	movs	r2, #0
 8002078:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 800207a:	4814      	ldr	r0, [pc, #80]	@ (80020cc <MX_TIM5_Init+0x94>)
 800207c:	f004 f84a 	bl	8006114 <HAL_TIM_Base_Init>
 8002080:	4603      	mov	r3, r0
 8002082:	2b00      	cmp	r3, #0
 8002084:	d001      	beq.n	800208a <MX_TIM5_Init+0x52>
  {
    Error_Handler();
 8002086:	f7ff fd13 	bl	8001ab0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800208a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800208e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8002090:	f107 0308 	add.w	r3, r7, #8
 8002094:	4619      	mov	r1, r3
 8002096:	480d      	ldr	r0, [pc, #52]	@ (80020cc <MX_TIM5_Init+0x94>)
 8002098:	f004 f9ec 	bl	8006474 <HAL_TIM_ConfigClockSource>
 800209c:	4603      	mov	r3, r0
 800209e:	2b00      	cmp	r3, #0
 80020a0:	d001      	beq.n	80020a6 <MX_TIM5_Init+0x6e>
  {
    Error_Handler();
 80020a2:	f7ff fd05 	bl	8001ab0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80020a6:	2300      	movs	r3, #0
 80020a8:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80020aa:	2300      	movs	r3, #0
 80020ac:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80020ae:	463b      	mov	r3, r7
 80020b0:	4619      	mov	r1, r3
 80020b2:	4806      	ldr	r0, [pc, #24]	@ (80020cc <MX_TIM5_Init+0x94>)
 80020b4:	f004 fc14 	bl	80068e0 <HAL_TIMEx_MasterConfigSynchronization>
 80020b8:	4603      	mov	r3, r0
 80020ba:	2b00      	cmp	r3, #0
 80020bc:	d001      	beq.n	80020c2 <MX_TIM5_Init+0x8a>
  {
    Error_Handler();
 80020be:	f7ff fcf7 	bl	8001ab0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 80020c2:	bf00      	nop
 80020c4:	3718      	adds	r7, #24
 80020c6:	46bd      	mov	sp, r7
 80020c8:	bd80      	pop	{r7, pc}
 80020ca:	bf00      	nop
 80020cc:	2000041c 	.word	0x2000041c
 80020d0:	40000c00 	.word	0x40000c00
 80020d4:	0002bf1f 	.word	0x0002bf1f

080020d8 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 80020d8:	b580      	push	{r7, lr}
 80020da:	b084      	sub	sp, #16
 80020dc:	af00      	add	r7, sp, #0
 80020de:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM5)
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	681b      	ldr	r3, [r3, #0]
 80020e4:	4a0e      	ldr	r2, [pc, #56]	@ (8002120 <HAL_TIM_Base_MspInit+0x48>)
 80020e6:	4293      	cmp	r3, r2
 80020e8:	d115      	bne.n	8002116 <HAL_TIM_Base_MspInit+0x3e>
  {
  /* USER CODE BEGIN TIM5_MspInit 0 */

  /* USER CODE END TIM5_MspInit 0 */
    /* TIM5 clock enable */
    __HAL_RCC_TIM5_CLK_ENABLE();
 80020ea:	2300      	movs	r3, #0
 80020ec:	60fb      	str	r3, [r7, #12]
 80020ee:	4b0d      	ldr	r3, [pc, #52]	@ (8002124 <HAL_TIM_Base_MspInit+0x4c>)
 80020f0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020f2:	4a0c      	ldr	r2, [pc, #48]	@ (8002124 <HAL_TIM_Base_MspInit+0x4c>)
 80020f4:	f043 0308 	orr.w	r3, r3, #8
 80020f8:	6413      	str	r3, [r2, #64]	@ 0x40
 80020fa:	4b0a      	ldr	r3, [pc, #40]	@ (8002124 <HAL_TIM_Base_MspInit+0x4c>)
 80020fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020fe:	f003 0308 	and.w	r3, r3, #8
 8002102:	60fb      	str	r3, [r7, #12]
 8002104:	68fb      	ldr	r3, [r7, #12]

    /* TIM5 interrupt Init */
    HAL_NVIC_SetPriority(TIM5_IRQn, 0, 0);
 8002106:	2200      	movs	r2, #0
 8002108:	2100      	movs	r1, #0
 800210a:	2032      	movs	r0, #50	@ 0x32
 800210c:	f001 fb57 	bl	80037be <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM5_IRQn);
 8002110:	2032      	movs	r0, #50	@ 0x32
 8002112:	f001 fb70 	bl	80037f6 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }
}
 8002116:	bf00      	nop
 8002118:	3710      	adds	r7, #16
 800211a:	46bd      	mov	sp, r7
 800211c:	bd80      	pop	{r7, pc}
 800211e:	bf00      	nop
 8002120:	40000c00 	.word	0x40000c00
 8002124:	40023800 	.word	0x40023800

08002128 <MX_USART1_UART_Init>:
DMA_HandleTypeDef hdma_usart1_tx;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8002128:	b580      	push	{r7, lr}
 800212a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 800212c:	4b11      	ldr	r3, [pc, #68]	@ (8002174 <MX_USART1_UART_Init+0x4c>)
 800212e:	4a12      	ldr	r2, [pc, #72]	@ (8002178 <MX_USART1_UART_Init+0x50>)
 8002130:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8002132:	4b10      	ldr	r3, [pc, #64]	@ (8002174 <MX_USART1_UART_Init+0x4c>)
 8002134:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002138:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800213a:	4b0e      	ldr	r3, [pc, #56]	@ (8002174 <MX_USART1_UART_Init+0x4c>)
 800213c:	2200      	movs	r2, #0
 800213e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8002140:	4b0c      	ldr	r3, [pc, #48]	@ (8002174 <MX_USART1_UART_Init+0x4c>)
 8002142:	2200      	movs	r2, #0
 8002144:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8002146:	4b0b      	ldr	r3, [pc, #44]	@ (8002174 <MX_USART1_UART_Init+0x4c>)
 8002148:	2200      	movs	r2, #0
 800214a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800214c:	4b09      	ldr	r3, [pc, #36]	@ (8002174 <MX_USART1_UART_Init+0x4c>)
 800214e:	220c      	movs	r2, #12
 8002150:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002152:	4b08      	ldr	r3, [pc, #32]	@ (8002174 <MX_USART1_UART_Init+0x4c>)
 8002154:	2200      	movs	r2, #0
 8002156:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002158:	4b06      	ldr	r3, [pc, #24]	@ (8002174 <MX_USART1_UART_Init+0x4c>)
 800215a:	2200      	movs	r2, #0
 800215c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800215e:	4805      	ldr	r0, [pc, #20]	@ (8002174 <MX_USART1_UART_Init+0x4c>)
 8002160:	f004 fc4e 	bl	8006a00 <HAL_UART_Init>
 8002164:	4603      	mov	r3, r0
 8002166:	2b00      	cmp	r3, #0
 8002168:	d001      	beq.n	800216e <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 800216a:	f7ff fca1 	bl	8001ab0 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800216e:	bf00      	nop
 8002170:	bd80      	pop	{r7, pc}
 8002172:	bf00      	nop
 8002174:	20000464 	.word	0x20000464
 8002178:	40011000 	.word	0x40011000

0800217c <MX_USART2_UART_Init>:
/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 800217c:	b580      	push	{r7, lr}
 800217e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002180:	4b11      	ldr	r3, [pc, #68]	@ (80021c8 <MX_USART2_UART_Init+0x4c>)
 8002182:	4a12      	ldr	r2, [pc, #72]	@ (80021cc <MX_USART2_UART_Init+0x50>)
 8002184:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8002186:	4b10      	ldr	r3, [pc, #64]	@ (80021c8 <MX_USART2_UART_Init+0x4c>)
 8002188:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800218c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800218e:	4b0e      	ldr	r3, [pc, #56]	@ (80021c8 <MX_USART2_UART_Init+0x4c>)
 8002190:	2200      	movs	r2, #0
 8002192:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002194:	4b0c      	ldr	r3, [pc, #48]	@ (80021c8 <MX_USART2_UART_Init+0x4c>)
 8002196:	2200      	movs	r2, #0
 8002198:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800219a:	4b0b      	ldr	r3, [pc, #44]	@ (80021c8 <MX_USART2_UART_Init+0x4c>)
 800219c:	2200      	movs	r2, #0
 800219e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80021a0:	4b09      	ldr	r3, [pc, #36]	@ (80021c8 <MX_USART2_UART_Init+0x4c>)
 80021a2:	220c      	movs	r2, #12
 80021a4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80021a6:	4b08      	ldr	r3, [pc, #32]	@ (80021c8 <MX_USART2_UART_Init+0x4c>)
 80021a8:	2200      	movs	r2, #0
 80021aa:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80021ac:	4b06      	ldr	r3, [pc, #24]	@ (80021c8 <MX_USART2_UART_Init+0x4c>)
 80021ae:	2200      	movs	r2, #0
 80021b0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80021b2:	4805      	ldr	r0, [pc, #20]	@ (80021c8 <MX_USART2_UART_Init+0x4c>)
 80021b4:	f004 fc24 	bl	8006a00 <HAL_UART_Init>
 80021b8:	4603      	mov	r3, r0
 80021ba:	2b00      	cmp	r3, #0
 80021bc:	d001      	beq.n	80021c2 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80021be:	f7ff fc77 	bl	8001ab0 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80021c2:	bf00      	nop
 80021c4:	bd80      	pop	{r7, pc}
 80021c6:	bf00      	nop
 80021c8:	200004ac 	.word	0x200004ac
 80021cc:	40004400 	.word	0x40004400

080021d0 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80021d0:	b580      	push	{r7, lr}
 80021d2:	b08c      	sub	sp, #48	@ 0x30
 80021d4:	af00      	add	r7, sp, #0
 80021d6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021d8:	f107 031c 	add.w	r3, r7, #28
 80021dc:	2200      	movs	r2, #0
 80021de:	601a      	str	r2, [r3, #0]
 80021e0:	605a      	str	r2, [r3, #4]
 80021e2:	609a      	str	r2, [r3, #8]
 80021e4:	60da      	str	r2, [r3, #12]
 80021e6:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART1)
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	4a69      	ldr	r2, [pc, #420]	@ (8002394 <HAL_UART_MspInit+0x1c4>)
 80021ee:	4293      	cmp	r3, r2
 80021f0:	f040 8092 	bne.w	8002318 <HAL_UART_MspInit+0x148>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80021f4:	2300      	movs	r3, #0
 80021f6:	61bb      	str	r3, [r7, #24]
 80021f8:	4b67      	ldr	r3, [pc, #412]	@ (8002398 <HAL_UART_MspInit+0x1c8>)
 80021fa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80021fc:	4a66      	ldr	r2, [pc, #408]	@ (8002398 <HAL_UART_MspInit+0x1c8>)
 80021fe:	f043 0310 	orr.w	r3, r3, #16
 8002202:	6453      	str	r3, [r2, #68]	@ 0x44
 8002204:	4b64      	ldr	r3, [pc, #400]	@ (8002398 <HAL_UART_MspInit+0x1c8>)
 8002206:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002208:	f003 0310 	and.w	r3, r3, #16
 800220c:	61bb      	str	r3, [r7, #24]
 800220e:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002210:	2300      	movs	r3, #0
 8002212:	617b      	str	r3, [r7, #20]
 8002214:	4b60      	ldr	r3, [pc, #384]	@ (8002398 <HAL_UART_MspInit+0x1c8>)
 8002216:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002218:	4a5f      	ldr	r2, [pc, #380]	@ (8002398 <HAL_UART_MspInit+0x1c8>)
 800221a:	f043 0301 	orr.w	r3, r3, #1
 800221e:	6313      	str	r3, [r2, #48]	@ 0x30
 8002220:	4b5d      	ldr	r3, [pc, #372]	@ (8002398 <HAL_UART_MspInit+0x1c8>)
 8002222:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002224:	f003 0301 	and.w	r3, r3, #1
 8002228:	617b      	str	r3, [r7, #20]
 800222a:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800222c:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 8002230:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002232:	2302      	movs	r3, #2
 8002234:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002236:	2300      	movs	r3, #0
 8002238:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800223a:	2303      	movs	r3, #3
 800223c:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800223e:	2307      	movs	r3, #7
 8002240:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002242:	f107 031c 	add.w	r3, r7, #28
 8002246:	4619      	mov	r1, r3
 8002248:	4854      	ldr	r0, [pc, #336]	@ (800239c <HAL_UART_MspInit+0x1cc>)
 800224a:	f001 ff35 	bl	80040b8 <HAL_GPIO_Init>

    /* USART1 DMA Init */
    /* USART1_RX Init */
    hdma_usart1_rx.Instance = DMA2_Stream2;
 800224e:	4b54      	ldr	r3, [pc, #336]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 8002250:	4a54      	ldr	r2, [pc, #336]	@ (80023a4 <HAL_UART_MspInit+0x1d4>)
 8002252:	601a      	str	r2, [r3, #0]
    hdma_usart1_rx.Init.Channel = DMA_CHANNEL_4;
 8002254:	4b52      	ldr	r3, [pc, #328]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 8002256:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800225a:	605a      	str	r2, [r3, #4]
    hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800225c:	4b50      	ldr	r3, [pc, #320]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 800225e:	2200      	movs	r2, #0
 8002260:	609a      	str	r2, [r3, #8]
    hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002262:	4b4f      	ldr	r3, [pc, #316]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 8002264:	2200      	movs	r2, #0
 8002266:	60da      	str	r2, [r3, #12]
    hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 8002268:	4b4d      	ldr	r3, [pc, #308]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 800226a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800226e:	611a      	str	r2, [r3, #16]
    hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002270:	4b4b      	ldr	r3, [pc, #300]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 8002272:	2200      	movs	r2, #0
 8002274:	615a      	str	r2, [r3, #20]
    hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002276:	4b4a      	ldr	r3, [pc, #296]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 8002278:	2200      	movs	r2, #0
 800227a:	619a      	str	r2, [r3, #24]
    hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 800227c:	4b48      	ldr	r3, [pc, #288]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 800227e:	2200      	movs	r2, #0
 8002280:	61da      	str	r2, [r3, #28]
    hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 8002282:	4b47      	ldr	r3, [pc, #284]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 8002284:	2200      	movs	r2, #0
 8002286:	621a      	str	r2, [r3, #32]
    hdma_usart1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002288:	4b45      	ldr	r3, [pc, #276]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 800228a:	2200      	movs	r2, #0
 800228c:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 800228e:	4844      	ldr	r0, [pc, #272]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 8002290:	f001 fb04 	bl	800389c <HAL_DMA_Init>
 8002294:	4603      	mov	r3, r0
 8002296:	2b00      	cmp	r3, #0
 8002298:	d001      	beq.n	800229e <HAL_UART_MspInit+0xce>
    {
      Error_Handler();
 800229a:	f7ff fc09 	bl	8001ab0 <Error_Handler>
    }

    __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart1_rx);
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	4a3f      	ldr	r2, [pc, #252]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 80022a2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80022a4:	4a3e      	ldr	r2, [pc, #248]	@ (80023a0 <HAL_UART_MspInit+0x1d0>)
 80022a6:	687b      	ldr	r3, [r7, #4]
 80022a8:	6393      	str	r3, [r2, #56]	@ 0x38

    /* USART1_TX Init */
    hdma_usart1_tx.Instance = DMA2_Stream7;
 80022aa:	4b3f      	ldr	r3, [pc, #252]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 80022ac:	4a3f      	ldr	r2, [pc, #252]	@ (80023ac <HAL_UART_MspInit+0x1dc>)
 80022ae:	601a      	str	r2, [r3, #0]
    hdma_usart1_tx.Init.Channel = DMA_CHANNEL_4;
 80022b0:	4b3d      	ldr	r3, [pc, #244]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 80022b2:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80022b6:	605a      	str	r2, [r3, #4]
    hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80022b8:	4b3b      	ldr	r3, [pc, #236]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 80022ba:	2240      	movs	r2, #64	@ 0x40
 80022bc:	609a      	str	r2, [r3, #8]
    hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80022be:	4b3a      	ldr	r3, [pc, #232]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 80022c0:	2200      	movs	r2, #0
 80022c2:	60da      	str	r2, [r3, #12]
    hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 80022c4:	4b38      	ldr	r3, [pc, #224]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 80022c6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80022ca:	611a      	str	r2, [r3, #16]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80022cc:	4b36      	ldr	r3, [pc, #216]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 80022ce:	2200      	movs	r2, #0
 80022d0:	615a      	str	r2, [r3, #20]
    hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80022d2:	4b35      	ldr	r3, [pc, #212]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 80022d4:	2200      	movs	r2, #0
 80022d6:	619a      	str	r2, [r3, #24]
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 80022d8:	4b33      	ldr	r3, [pc, #204]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 80022da:	2200      	movs	r2, #0
 80022dc:	61da      	str	r2, [r3, #28]
    hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 80022de:	4b32      	ldr	r3, [pc, #200]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 80022e0:	2200      	movs	r2, #0
 80022e2:	621a      	str	r2, [r3, #32]
    hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80022e4:	4b30      	ldr	r3, [pc, #192]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 80022e6:	2200      	movs	r2, #0
 80022e8:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 80022ea:	482f      	ldr	r0, [pc, #188]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 80022ec:	f001 fad6 	bl	800389c <HAL_DMA_Init>
 80022f0:	4603      	mov	r3, r0
 80022f2:	2b00      	cmp	r3, #0
 80022f4:	d001      	beq.n	80022fa <HAL_UART_MspInit+0x12a>
    {
      Error_Handler();
 80022f6:	f7ff fbdb 	bl	8001ab0 <Error_Handler>
    }

    __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart1_tx);
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	4a2a      	ldr	r2, [pc, #168]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 80022fe:	639a      	str	r2, [r3, #56]	@ 0x38
 8002300:	4a29      	ldr	r2, [pc, #164]	@ (80023a8 <HAL_UART_MspInit+0x1d8>)
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	6393      	str	r3, [r2, #56]	@ 0x38

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8002306:	2200      	movs	r2, #0
 8002308:	2100      	movs	r1, #0
 800230a:	2025      	movs	r0, #37	@ 0x25
 800230c:	f001 fa57 	bl	80037be <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8002310:	2025      	movs	r0, #37	@ 0x25
 8002312:	f001 fa70 	bl	80037f6 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 8002316:	e038      	b.n	800238a <HAL_UART_MspInit+0x1ba>
  else if(uartHandle->Instance==USART2)
 8002318:	687b      	ldr	r3, [r7, #4]
 800231a:	681b      	ldr	r3, [r3, #0]
 800231c:	4a24      	ldr	r2, [pc, #144]	@ (80023b0 <HAL_UART_MspInit+0x1e0>)
 800231e:	4293      	cmp	r3, r2
 8002320:	d133      	bne.n	800238a <HAL_UART_MspInit+0x1ba>
    __HAL_RCC_USART2_CLK_ENABLE();
 8002322:	2300      	movs	r3, #0
 8002324:	613b      	str	r3, [r7, #16]
 8002326:	4b1c      	ldr	r3, [pc, #112]	@ (8002398 <HAL_UART_MspInit+0x1c8>)
 8002328:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800232a:	4a1b      	ldr	r2, [pc, #108]	@ (8002398 <HAL_UART_MspInit+0x1c8>)
 800232c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002330:	6413      	str	r3, [r2, #64]	@ 0x40
 8002332:	4b19      	ldr	r3, [pc, #100]	@ (8002398 <HAL_UART_MspInit+0x1c8>)
 8002334:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002336:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800233a:	613b      	str	r3, [r7, #16]
 800233c:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800233e:	2300      	movs	r3, #0
 8002340:	60fb      	str	r3, [r7, #12]
 8002342:	4b15      	ldr	r3, [pc, #84]	@ (8002398 <HAL_UART_MspInit+0x1c8>)
 8002344:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002346:	4a14      	ldr	r2, [pc, #80]	@ (8002398 <HAL_UART_MspInit+0x1c8>)
 8002348:	f043 0301 	orr.w	r3, r3, #1
 800234c:	6313      	str	r3, [r2, #48]	@ 0x30
 800234e:	4b12      	ldr	r3, [pc, #72]	@ (8002398 <HAL_UART_MspInit+0x1c8>)
 8002350:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002352:	f003 0301 	and.w	r3, r3, #1
 8002356:	60fb      	str	r3, [r7, #12]
 8002358:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 800235a:	230c      	movs	r3, #12
 800235c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800235e:	2302      	movs	r3, #2
 8002360:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002362:	2300      	movs	r3, #0
 8002364:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002366:	2303      	movs	r3, #3
 8002368:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800236a:	2307      	movs	r3, #7
 800236c:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800236e:	f107 031c 	add.w	r3, r7, #28
 8002372:	4619      	mov	r1, r3
 8002374:	4809      	ldr	r0, [pc, #36]	@ (800239c <HAL_UART_MspInit+0x1cc>)
 8002376:	f001 fe9f 	bl	80040b8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800237a:	2200      	movs	r2, #0
 800237c:	2100      	movs	r1, #0
 800237e:	2026      	movs	r0, #38	@ 0x26
 8002380:	f001 fa1d 	bl	80037be <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002384:	2026      	movs	r0, #38	@ 0x26
 8002386:	f001 fa36 	bl	80037f6 <HAL_NVIC_EnableIRQ>
}
 800238a:	bf00      	nop
 800238c:	3730      	adds	r7, #48	@ 0x30
 800238e:	46bd      	mov	sp, r7
 8002390:	bd80      	pop	{r7, pc}
 8002392:	bf00      	nop
 8002394:	40011000 	.word	0x40011000
 8002398:	40023800 	.word	0x40023800
 800239c:	40020000 	.word	0x40020000
 80023a0:	200004f4 	.word	0x200004f4
 80023a4:	40026440 	.word	0x40026440
 80023a8:	20000554 	.word	0x20000554
 80023ac:	400264b8 	.word	0x400264b8
 80023b0:	40004400 	.word	0x40004400

080023b4 <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 80023b4:	b580      	push	{r7, lr}
 80023b6:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if SPI port shared (display <-> touch)
		if (HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display not yet selected
 80023b8:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80023bc:	480f      	ldr	r0, [pc, #60]	@ (80023fc <Displ_Select+0x48>)
 80023be:	f002 f80f 	bl	80043e0 <HAL_GPIO_ReadPin>
 80023c2:	4603      	mov	r3, r0
 80023c4:	2b00      	cmp	r3, #0
 80023c6:	d016      	beq.n	80023f6 <Displ_Select+0x42>
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
 80023c8:	2201      	movs	r2, #1
 80023ca:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80023ce:	480c      	ldr	r0, [pc, #48]	@ (8002400 <Displ_Select+0x4c>)
 80023d0:	f002 f81e 	bl	8004410 <HAL_GPIO_WritePin>
			SET_SPI_BAUDRATE(DISPL_PRESCALER);   									//change SPI port speed as per display needs
 80023d4:	4b0b      	ldr	r3, [pc, #44]	@ (8002404 <Displ_Select+0x50>)
 80023d6:	681a      	ldr	r2, [r3, #0]
 80023d8:	490a      	ldr	r1, [pc, #40]	@ (8002404 <Displ_Select+0x50>)
 80023da:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 80023de:	4013      	ands	r3, r2
 80023e0:	600b      	str	r3, [r1, #0]
 80023e2:	4b08      	ldr	r3, [pc, #32]	@ (8002404 <Displ_Select+0x50>)
 80023e4:	4a07      	ldr	r2, [pc, #28]	@ (8002404 <Displ_Select+0x50>)
 80023e6:	681b      	ldr	r3, [r3, #0]
 80023e8:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
 80023ea:	2200      	movs	r2, #0
 80023ec:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80023f0:	4802      	ldr	r0, [pc, #8]	@ (80023fc <Displ_Select+0x48>)
 80023f2:	f002 f80d 	bl	8004410 <HAL_GPIO_WritePin>
		}
	}
}
 80023f6:	bf00      	nop
 80023f8:	bd80      	pop	{r7, pc}
 80023fa:	bf00      	nop
 80023fc:	40020000 	.word	0x40020000
 8002400:	40020400 	.word	0x40020400
 8002404:	40013000 	.word	0x40013000

08002408 <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 8002408:	b580      	push	{r7, lr}
 800240a:	b086      	sub	sp, #24
 800240c:	af00      	add	r7, sp, #0
 800240e:	6039      	str	r1, [r7, #0]
 8002410:	4611      	mov	r1, r2
 8002412:	461a      	mov	r2, r3
 8002414:	4603      	mov	r3, r0
 8002416:	71fb      	strb	r3, [r7, #7]
 8002418:	460b      	mov	r3, r1
 800241a:	80bb      	strh	r3, [r7, #4]
 800241c:	4613      	mov	r3, r2
 800241e:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 8002420:	bf00      	nop
 8002422:	4b25      	ldr	r3, [pc, #148]	@ (80024b8 <Displ_Transmit+0xb0>)
 8002424:	781b      	ldrb	r3, [r3, #0]
 8002426:	b2db      	uxtb	r3, r3
 8002428:	2b00      	cmp	r3, #0
 800242a:	d0fa      	beq.n	8002422 <Displ_Transmit+0x1a>

	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 800242c:	79fb      	ldrb	r3, [r7, #7]
 800242e:	461a      	mov	r2, r3
 8002430:	2120      	movs	r1, #32
 8002432:	4822      	ldr	r0, [pc, #136]	@ (80024bc <Displ_Transmit+0xb4>)
 8002434:	f001 ffec 	bl	8004410 <HAL_GPIO_WritePin>
	Displ_Select();
 8002438:	f7ff ffbc 	bl	80023b4 <Displ_Select>

	if (isTouchGFXBuffer){
 800243c:	79bb      	ldrb	r3, [r7, #6]
 800243e:	2b00      	cmp	r3, #0
 8002440:	d016      	beq.n	8002470 <Displ_Transmit+0x68>
#ifdef Z_RGB565
//if color format is RGB565 just swap even and odd bytes correcting endianess for ILI driver
		uint32_t *limit=(uint32_t*)(data+dataSize);
 8002442:	88bb      	ldrh	r3, [r7, #4]
 8002444:	683a      	ldr	r2, [r7, #0]
 8002446:	4413      	add	r3, r2
 8002448:	613b      	str	r3, [r7, #16]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 800244a:	683b      	ldr	r3, [r7, #0]
 800244c:	617b      	str	r3, [r7, #20]
 800244e:	e00b      	b.n	8002468 <Displ_Transmit+0x60>
			*data32=__REV16(*data32);
 8002450:	697b      	ldr	r3, [r7, #20]
 8002452:	681b      	ldr	r3, [r3, #0]
 8002454:	60fb      	str	r3, [r7, #12]
  __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 8002456:	68fb      	ldr	r3, [r7, #12]
 8002458:	ba5b      	rev16	r3, r3
 800245a:	60bb      	str	r3, [r7, #8]
  return result;
 800245c:	68ba      	ldr	r2, [r7, #8]
 800245e:	697b      	ldr	r3, [r7, #20]
 8002460:	601a      	str	r2, [r3, #0]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 8002462:	697b      	ldr	r3, [r7, #20]
 8002464:	3304      	adds	r3, #4
 8002466:	617b      	str	r3, [r7, #20]
 8002468:	697a      	ldr	r2, [r7, #20]
 800246a:	693b      	ldr	r3, [r7, #16]
 800246c:	429a      	cmp	r2, r3
 800246e:	d3ef      	bcc.n	8002450 <Displ_Transmit+0x48>
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 8002470:	88bb      	ldrh	r3, [r7, #4]
 8002472:	2b13      	cmp	r3, #19
 8002474:	d812      	bhi.n	800249c <Displ_Transmit+0x94>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 8002476:	4b10      	ldr	r3, [pc, #64]	@ (80024b8 <Displ_Transmit+0xb0>)
 8002478:	2200      	movs	r2, #0
 800247a:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 800247c:	88ba      	ldrh	r2, [r7, #4]
 800247e:	f04f 33ff 	mov.w	r3, #4294967295
 8002482:	6839      	ldr	r1, [r7, #0]
 8002484:	480e      	ldr	r0, [pc, #56]	@ (80024c0 <Displ_Transmit+0xb8>)
 8002486:	f002 feb6 	bl	80051f6 <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 800248a:	4b0b      	ldr	r3, [pc, #44]	@ (80024b8 <Displ_Transmit+0xb0>)
 800248c:	2201      	movs	r2, #1
 800248e:	701a      	strb	r2, [r3, #0]

#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 8002490:	79bb      	ldrb	r3, [r7, #6]
 8002492:	2b00      	cmp	r3, #0
 8002494:	d00b      	beq.n	80024ae <Displ_Transmit+0xa6>
				DisplayDriver_TransferCompleteCallback();
 8002496:	f00c fd43 	bl	800ef20 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 800249a:	e008      	b.n	80024ae <Displ_Transmit+0xa6>
			Displ_SpiAvailable=0;
 800249c:	4b06      	ldr	r3, [pc, #24]	@ (80024b8 <Displ_Transmit+0xb0>)
 800249e:	2200      	movs	r2, #0
 80024a0:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 80024a2:	88bb      	ldrh	r3, [r7, #4]
 80024a4:	461a      	mov	r2, r3
 80024a6:	6839      	ldr	r1, [r7, #0]
 80024a8:	4805      	ldr	r0, [pc, #20]	@ (80024c0 <Displ_Transmit+0xb8>)
 80024aa:	f003 faab 	bl	8005a04 <HAL_SPI_Transmit_DMA>
	}
 80024ae:	bf00      	nop
 80024b0:	3718      	adds	r7, #24
 80024b2:	46bd      	mov	sp, r7
 80024b4:	bd80      	pop	{r7, pc}
 80024b6:	bf00      	nop
 80024b8:	2000001c 	.word	0x2000001c
 80024bc:	40020800 	.word	0x40020800
 80024c0:	20000360 	.word	0x20000360

080024c4 <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 80024c4:	b580      	push	{r7, lr}
 80024c6:	b082      	sub	sp, #8
 80024c8:	af00      	add	r7, sp, #0
 80024ca:	4603      	mov	r3, r0
 80024cc:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 80024ce:	1df9      	adds	r1, r7, #7
 80024d0:	2300      	movs	r3, #0
 80024d2:	2201      	movs	r2, #1
 80024d4:	2000      	movs	r0, #0
 80024d6:	f7ff ff97 	bl	8002408 <Displ_Transmit>
}
 80024da:	bf00      	nop
 80024dc:	3708      	adds	r7, #8
 80024de:	46bd      	mov	sp, r7
 80024e0:	bd80      	pop	{r7, pc}

080024e2 <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 80024e2:	b580      	push	{r7, lr}
 80024e4:	b084      	sub	sp, #16
 80024e6:	af00      	add	r7, sp, #0
 80024e8:	60f8      	str	r0, [r7, #12]
 80024ea:	60b9      	str	r1, [r7, #8]
 80024ec:	4613      	mov	r3, r2
 80024ee:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 80024f0:	68bb      	ldr	r3, [r7, #8]
 80024f2:	2b00      	cmp	r3, #0
 80024f4:	d007      	beq.n	8002506 <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 80024f6:	68bb      	ldr	r3, [r7, #8]
 80024f8:	b29a      	uxth	r2, r3
 80024fa:	79fb      	ldrb	r3, [r7, #7]
 80024fc:	68f9      	ldr	r1, [r7, #12]
 80024fe:	2001      	movs	r0, #1
 8002500:	f7ff ff82 	bl	8002408 <Displ_Transmit>
 8002504:	e000      	b.n	8002508 <Displ_WriteData+0x26>
	if (buff_size==0) return;
 8002506:	bf00      	nop
}
 8002508:	3710      	adds	r7, #16
 800250a:	46bd      	mov	sp, r7
 800250c:	bd80      	pop	{r7, pc}
	...

08002510 <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 8002510:	b580      	push	{r7, lr}
 8002512:	af00      	add	r7, sp, #0
	Displ_Select();
 8002514:	f7ff ff4e 	bl	80023b4 <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 8002518:	2200      	movs	r2, #0
 800251a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800251e:	481a      	ldr	r0, [pc, #104]	@ (8002588 <ILI9XXX_Init+0x78>)
 8002520:	f001 ff76 	bl	8004410 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8002524:	2001      	movs	r0, #1
 8002526:	f000 fc2d 	bl	8002d84 <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 800252a:	2201      	movs	r2, #1
 800252c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8002530:	4815      	ldr	r0, [pc, #84]	@ (8002588 <ILI9XXX_Init+0x78>)
 8002532:	f001 ff6d 	bl	8004410 <HAL_GPIO_WritePin>
	HAL_Delay(150);
 8002536:	2096      	movs	r0, #150	@ 0x96
 8002538:	f000 fc24 	bl	8002d84 <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 800253c:	203a      	movs	r0, #58	@ 0x3a
 800253e:	f7ff ffc1 	bl	80024c4 <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
 8002542:	2200      	movs	r2, #0
 8002544:	2101      	movs	r1, #1
 8002546:	4811      	ldr	r0, [pc, #68]	@ (800258c <ILI9XXX_Init+0x7c>)
 8002548:	f7ff ffcb 	bl	80024e2 <Displ_WriteData>
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 800254c:	20b0      	movs	r0, #176	@ 0xb0
 800254e:	f7ff ffb9 	bl	80024c4 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 8002552:	2200      	movs	r2, #0
 8002554:	2101      	movs	r1, #1
 8002556:	480e      	ldr	r0, [pc, #56]	@ (8002590 <ILI9XXX_Init+0x80>)
 8002558:	f7ff ffc3 	bl	80024e2 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 800255c:	20b0      	movs	r0, #176	@ 0xb0
 800255e:	f7ff ffb1 	bl	80024c4 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 8002562:	2200      	movs	r2, #0
 8002564:	2101      	movs	r1, #1
 8002566:	480a      	ldr	r0, [pc, #40]	@ (8002590 <ILI9XXX_Init+0x80>)
 8002568:	f7ff ffbb 	bl	80024e2 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 800256c:	2011      	movs	r0, #17
 800256e:	f7ff ffa9 	bl	80024c4 <Displ_WriteCommand>
	HAL_Delay(120);
 8002572:	2078      	movs	r0, #120	@ 0x78
 8002574:	f000 fc06 	bl	8002d84 <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 8002578:	2029      	movs	r0, #41	@ 0x29
 800257a:	f7ff ffa3 	bl	80024c4 <Displ_WriteCommand>
	HAL_Delay(5);
 800257e:	2005      	movs	r0, #5
 8002580:	f000 fc00 	bl	8002d84 <HAL_Delay>

}
 8002584:	bf00      	nop
 8002586:	bd80      	pop	{r7, pc}
 8002588:	40020000 	.word	0x40020000
 800258c:	08027448 	.word	0x08027448
 8002590:	0802744c 	.word	0x0802744c

08002594 <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 8002594:	b590      	push	{r4, r7, lr}
 8002596:	b083      	sub	sp, #12
 8002598:	af00      	add	r7, sp, #0
 800259a:	4604      	mov	r4, r0
 800259c:	4608      	mov	r0, r1
 800259e:	4611      	mov	r1, r2
 80025a0:	461a      	mov	r2, r3
 80025a2:	4623      	mov	r3, r4
 80025a4:	80fb      	strh	r3, [r7, #6]
 80025a6:	4603      	mov	r3, r0
 80025a8:	80bb      	strh	r3, [r7, #4]
 80025aa:	460b      	mov	r3, r1
 80025ac:	807b      	strh	r3, [r7, #2]
 80025ae:	4613      	mov	r3, r2
 80025b0:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 80025b2:	887b      	ldrh	r3, [r7, #2]
 80025b4:	061a      	lsls	r2, r3, #24
 80025b6:	887b      	ldrh	r3, [r7, #2]
 80025b8:	021b      	lsls	r3, r3, #8
 80025ba:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80025be:	431a      	orrs	r2, r3
 80025c0:	88fb      	ldrh	r3, [r7, #6]
 80025c2:	021b      	lsls	r3, r3, #8
 80025c4:	b29b      	uxth	r3, r3
 80025c6:	4313      	orrs	r3, r2
 80025c8:	88fa      	ldrh	r2, [r7, #6]
 80025ca:	0a12      	lsrs	r2, r2, #8
 80025cc:	b292      	uxth	r2, r2
 80025ce:	431a      	orrs	r2, r3
 80025d0:	4b14      	ldr	r3, [pc, #80]	@ (8002624 <Displ_SetAddressWindow+0x90>)
 80025d2:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 80025d4:	202a      	movs	r0, #42	@ 0x2a
 80025d6:	f7ff ff75 	bl	80024c4 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 80025da:	2200      	movs	r2, #0
 80025dc:	2104      	movs	r1, #4
 80025de:	4811      	ldr	r0, [pc, #68]	@ (8002624 <Displ_SetAddressWindow+0x90>)
 80025e0:	f7ff ff7f 	bl	80024e2 <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 80025e4:	883b      	ldrh	r3, [r7, #0]
 80025e6:	061a      	lsls	r2, r3, #24
 80025e8:	883b      	ldrh	r3, [r7, #0]
 80025ea:	021b      	lsls	r3, r3, #8
 80025ec:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80025f0:	431a      	orrs	r2, r3
 80025f2:	88bb      	ldrh	r3, [r7, #4]
 80025f4:	021b      	lsls	r3, r3, #8
 80025f6:	b29b      	uxth	r3, r3
 80025f8:	4313      	orrs	r3, r2
 80025fa:	88ba      	ldrh	r2, [r7, #4]
 80025fc:	0a12      	lsrs	r2, r2, #8
 80025fe:	b292      	uxth	r2, r2
 8002600:	431a      	orrs	r2, r3
 8002602:	4b08      	ldr	r3, [pc, #32]	@ (8002624 <Displ_SetAddressWindow+0x90>)
 8002604:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 8002606:	202b      	movs	r0, #43	@ 0x2b
 8002608:	f7ff ff5c 	bl	80024c4 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 800260c:	2200      	movs	r2, #0
 800260e:	2104      	movs	r1, #4
 8002610:	4804      	ldr	r0, [pc, #16]	@ (8002624 <Displ_SetAddressWindow+0x90>)
 8002612:	f7ff ff66 	bl	80024e2 <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 8002616:	202c      	movs	r0, #44	@ 0x2c
 8002618:	f7ff ff54 	bl	80024c4 <Displ_WriteCommand>
}
 800261c:	bf00      	nop
 800261e:	370c      	adds	r7, #12
 8002620:	46bd      	mov	sp, r7
 8002622:	bd90      	pop	{r4, r7, pc}
 8002624:	200005bc 	.word	0x200005bc

08002628 <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 8002628:	b580      	push	{r7, lr}
 800262a:	b082      	sub	sp, #8
 800262c:	af00      	add	r7, sp, #0
 800262e:	4603      	mov	r3, r0
 8002630:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
 8002632:	2201      	movs	r2, #1
 8002634:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8002638:	4809      	ldr	r0, [pc, #36]	@ (8002660 <Displ_Init+0x38>)
 800263a:	f001 fee9 	bl	8004410 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
 800263e:	2201      	movs	r2, #1
 8002640:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8002644:	4807      	ldr	r0, [pc, #28]	@ (8002664 <Displ_Init+0x3c>)
 8002646:	f001 fee3 	bl	8004410 <HAL_GPIO_WritePin>
	} else {																	// otherwise leave both port permanently selected
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
	}
	ILI9XXX_Init();
 800264a:	f7ff ff61 	bl	8002510 <ILI9XXX_Init>
	Displ_Orientation(orientation);
 800264e:	79fb      	ldrb	r3, [r7, #7]
 8002650:	4618      	mov	r0, r3
 8002652:	f000 f809 	bl	8002668 <Displ_Orientation>
}
 8002656:	bf00      	nop
 8002658:	3708      	adds	r7, #8
 800265a:	46bd      	mov	sp, r7
 800265c:	bd80      	pop	{r7, pc}
 800265e:	bf00      	nop
 8002660:	40020000 	.word	0x40020000
 8002664:	40020400 	.word	0x40020400

08002668 <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 8002668:	b580      	push	{r7, lr}
 800266a:	b082      	sub	sp, #8
 800266c:	af00      	add	r7, sp, #0
 800266e:	4603      	mov	r3, r0
 8002670:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 8002672:	79fb      	ldrb	r3, [r7, #7]
 8002674:	2b03      	cmp	r3, #3
 8002676:	d837      	bhi.n	80026e8 <Displ_Orientation+0x80>
 8002678:	a201      	add	r2, pc, #4	@ (adr r2, 8002680 <Displ_Orientation+0x18>)
 800267a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800267e:	bf00      	nop
 8002680:	08002691 	.word	0x08002691
 8002684:	080026a7 	.word	0x080026a7
 8002688:	080026bd 	.word	0x080026bd
 800268c:	080026d3 	.word	0x080026d3
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 8002690:	4b1d      	ldr	r3, [pc, #116]	@ (8002708 <Displ_Orientation+0xa0>)
 8002692:	2288      	movs	r2, #136	@ 0x88
 8002694:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 8002696:	4b1d      	ldr	r3, [pc, #116]	@ (800270c <Displ_Orientation+0xa4>)
 8002698:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 800269c:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 800269e:	4b1c      	ldr	r3, [pc, #112]	@ (8002710 <Displ_Orientation+0xa8>)
 80026a0:	22f0      	movs	r2, #240	@ 0xf0
 80026a2:	801a      	strh	r2, [r3, #0]
			break;
 80026a4:	e020      	b.n	80026e8 <Displ_Orientation+0x80>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 80026a6:	4b18      	ldr	r3, [pc, #96]	@ (8002708 <Displ_Orientation+0xa0>)
 80026a8:	22e8      	movs	r2, #232	@ 0xe8
 80026aa:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 80026ac:	4b17      	ldr	r3, [pc, #92]	@ (800270c <Displ_Orientation+0xa4>)
 80026ae:	22f0      	movs	r2, #240	@ 0xf0
 80026b0:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 80026b2:	4b17      	ldr	r3, [pc, #92]	@ (8002710 <Displ_Orientation+0xa8>)
 80026b4:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 80026b8:	801a      	strh	r2, [r3, #0]
			break;
 80026ba:	e015      	b.n	80026e8 <Displ_Orientation+0x80>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 80026bc:	4b12      	ldr	r3, [pc, #72]	@ (8002708 <Displ_Orientation+0xa0>)
 80026be:	2248      	movs	r2, #72	@ 0x48
 80026c0:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 80026c2:	4b12      	ldr	r3, [pc, #72]	@ (800270c <Displ_Orientation+0xa4>)
 80026c4:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 80026c8:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 80026ca:	4b11      	ldr	r3, [pc, #68]	@ (8002710 <Displ_Orientation+0xa8>)
 80026cc:	22f0      	movs	r2, #240	@ 0xf0
 80026ce:	801a      	strh	r2, [r3, #0]
			break;
 80026d0:	e00a      	b.n	80026e8 <Displ_Orientation+0x80>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 80026d2:	4b0d      	ldr	r3, [pc, #52]	@ (8002708 <Displ_Orientation+0xa0>)
 80026d4:	2228      	movs	r2, #40	@ 0x28
 80026d6:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 80026d8:	4b0c      	ldr	r3, [pc, #48]	@ (800270c <Displ_Orientation+0xa4>)
 80026da:	22f0      	movs	r2, #240	@ 0xf0
 80026dc:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 80026de:	4b0c      	ldr	r3, [pc, #48]	@ (8002710 <Displ_Orientation+0xa8>)
 80026e0:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 80026e4:	801a      	strh	r2, [r3, #0]
			break;
 80026e6:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 80026e8:	2036      	movs	r0, #54	@ 0x36
 80026ea:	f7ff feeb 	bl	80024c4 <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 80026ee:	2200      	movs	r2, #0
 80026f0:	2101      	movs	r1, #1
 80026f2:	4805      	ldr	r0, [pc, #20]	@ (8002708 <Displ_Orientation+0xa0>)
 80026f4:	f7ff fef5 	bl	80024e2 <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 80026f8:	4a06      	ldr	r2, [pc, #24]	@ (8002714 <Displ_Orientation+0xac>)
 80026fa:	79fb      	ldrb	r3, [r7, #7]
 80026fc:	7013      	strb	r3, [r2, #0]
}
 80026fe:	bf00      	nop
 8002700:	3708      	adds	r7, #8
 8002702:	46bd      	mov	sp, r7
 8002704:	bd80      	pop	{r7, pc}
 8002706:	bf00      	nop
 8002708:	200005c0 	.word	0x200005c0
 800270c:	200005b8 	.word	0x200005b8
 8002710:	200005b6 	.word	0x200005b6
 8002714:	200005b4 	.word	0x200005b4

08002718 <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 8002718:	b480      	push	{r7}
 800271a:	b083      	sub	sp, #12
 800271c:	af00      	add	r7, sp, #0
 800271e:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	4a05      	ldr	r2, [pc, #20]	@ (800273c <HAL_SPI_ErrorCallback+0x24>)
 8002726:	4293      	cmp	r3, r2
 8002728:	d102      	bne.n	8002730 <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 800272a:	4b05      	ldr	r3, [pc, #20]	@ (8002740 <HAL_SPI_ErrorCallback+0x28>)
 800272c:	2201      	movs	r2, #1
 800272e:	701a      	strb	r2, [r3, #0]
	}
}
 8002730:	bf00      	nop
 8002732:	370c      	adds	r7, #12
 8002734:	46bd      	mov	sp, r7
 8002736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800273a:	4770      	bx	lr
 800273c:	40013000 	.word	0x40013000
 8002740:	2000001c 	.word	0x2000001c

08002744 <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 8002744:	b580      	push	{r7, lr}
 8002746:	b082      	sub	sp, #8
 8002748:	af00      	add	r7, sp, #0
 800274a:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 800274c:	687b      	ldr	r3, [r7, #4]
 800274e:	681b      	ldr	r3, [r3, #0]
 8002750:	4a05      	ldr	r2, [pc, #20]	@ (8002768 <HAL_SPI_TxCpltCallback+0x24>)
 8002752:	4293      	cmp	r3, r2
 8002754:	d104      	bne.n	8002760 <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 8002756:	4b05      	ldr	r3, [pc, #20]	@ (800276c <HAL_SPI_TxCpltCallback+0x28>)
 8002758:	2201      	movs	r2, #1
 800275a:	701a      	strb	r2, [r3, #0]
//		Touch_PenDown=0;    //reset touch interrupt flag: writing onto display will trigger the display interrupt pin

#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 800275c:	f00c fbe0 	bl	800ef20 <DisplayDriver_TransferCompleteCallback>
#endif
	}
}
 8002760:	bf00      	nop
 8002762:	3708      	adds	r7, #8
 8002764:	46bd      	mov	sp, r7
 8002766:	bd80      	pop	{r7, pc}
 8002768:	40013000 	.word	0x40013000
 800276c:	2000001c 	.word	0x2000001c

08002770 <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 8002770:	b580      	push	{r7, lr}
 8002772:	b082      	sub	sp, #8
 8002774:	af00      	add	r7, sp, #0
 8002776:	4603      	mov	r3, r0
 8002778:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 800277a:	79fb      	ldrb	r3, [r7, #7]
 800277c:	2b51      	cmp	r3, #81	@ 0x51
 800277e:	d015      	beq.n	80027ac <Displ_BackLight+0x3c>
 8002780:	2b51      	cmp	r3, #81	@ 0x51
 8002782:	dc15      	bgt.n	80027b0 <Displ_BackLight+0x40>
 8002784:	2b46      	cmp	r3, #70	@ 0x46
 8002786:	d005      	beq.n	8002794 <Displ_BackLight+0x24>
 8002788:	2b46      	cmp	r3, #70	@ 0x46
 800278a:	dc11      	bgt.n	80027b0 <Displ_BackLight+0x40>
 800278c:	2b30      	cmp	r3, #48	@ 0x30
 800278e:	d007      	beq.n	80027a0 <Displ_BackLight+0x30>
 8002790:	2b31      	cmp	r3, #49	@ 0x31
 8002792:	d10d      	bne.n	80027b0 <Displ_BackLight+0x40>
#ifndef DISPLAY_DIMMING_MODE
	case 'F':
	case '1':
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_SET);
 8002794:	2201      	movs	r2, #1
 8002796:	2140      	movs	r1, #64	@ 0x40
 8002798:	480a      	ldr	r0, [pc, #40]	@ (80027c4 <Displ_BackLight+0x54>)
 800279a:	f001 fe39 	bl	8004410 <HAL_GPIO_WritePin>
		break;
 800279e:	e008      	b.n	80027b2 <Displ_BackLight+0x42>
	case '0':
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
 80027a0:	2200      	movs	r2, #0
 80027a2:	2140      	movs	r1, #64	@ 0x40
 80027a4:	4807      	ldr	r0, [pc, #28]	@ (80027c4 <Displ_BackLight+0x54>)
 80027a6:	f001 fe33 	bl	8004410 <HAL_GPIO_WritePin>
		break;
 80027aa:	e002      	b.n	80027b2 <Displ_BackLight+0x42>
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
		break;
#endif
	case 'Q':
		break;
 80027ac:	bf00      	nop
 80027ae:	e000      	b.n	80027b2 <Displ_BackLight+0x42>
	default:
		break;
 80027b0:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
 80027b2:	2140      	movs	r1, #64	@ 0x40
 80027b4:	4803      	ldr	r0, [pc, #12]	@ (80027c4 <Displ_BackLight+0x54>)
 80027b6:	f001 fe13 	bl	80043e0 <HAL_GPIO_ReadPin>
 80027ba:	4603      	mov	r3, r0
#else
	return (BKLIT_TIMER->BKLIT_CCR);
#endif
}
 80027bc:	4618      	mov	r0, r3
 80027be:	3708      	adds	r7, #8
 80027c0:	46bd      	mov	sp, r7
 80027c2:	bd80      	pop	{r7, pc}
 80027c4:	40020800 	.word	0x40020800

080027c8 <touchgfxDisplayDriverTransmitActive>:
/************************
 * @brief	TouchGFX integration: returns status of communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 ************************/
int touchgfxDisplayDriverTransmitActive(){
 80027c8:	b480      	push	{r7}
 80027ca:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 80027cc:	4b06      	ldr	r3, [pc, #24]	@ (80027e8 <touchgfxDisplayDriverTransmitActive+0x20>)
 80027ce:	781b      	ldrb	r3, [r3, #0]
 80027d0:	b2db      	uxtb	r3, r3
 80027d2:	2b00      	cmp	r3, #0
 80027d4:	bf0c      	ite	eq
 80027d6:	2301      	moveq	r3, #1
 80027d8:	2300      	movne	r3, #0
 80027da:	b2db      	uxtb	r3, r3
}
 80027dc:	4618      	mov	r0, r3
 80027de:	46bd      	mov	sp, r7
 80027e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027e4:	4770      	bx	lr
 80027e6:	bf00      	nop
 80027e8:	2000001c 	.word	0x2000001c

080027ec <touchgfxDisplayDriverTransmitBlock>:

/************************
 * @brief	TouchGFX integration: write to display the block indicated by parameters
 *
 ************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 80027ec:	b590      	push	{r4, r7, lr}
 80027ee:	b085      	sub	sp, #20
 80027f0:	af00      	add	r7, sp, #0
 80027f2:	60f8      	str	r0, [r7, #12]
 80027f4:	4608      	mov	r0, r1
 80027f6:	4611      	mov	r1, r2
 80027f8:	461a      	mov	r2, r3
 80027fa:	4603      	mov	r3, r0
 80027fc:	817b      	strh	r3, [r7, #10]
 80027fe:	460b      	mov	r3, r1
 8002800:	813b      	strh	r3, [r7, #8]
 8002802:	4613      	mov	r3, r2
 8002804:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 8002806:	897a      	ldrh	r2, [r7, #10]
 8002808:	88fb      	ldrh	r3, [r7, #6]
 800280a:	4413      	add	r3, r2
 800280c:	b29b      	uxth	r3, r3
 800280e:	3b01      	subs	r3, #1
 8002810:	b29c      	uxth	r4, r3
 8002812:	893a      	ldrh	r2, [r7, #8]
 8002814:	8c3b      	ldrh	r3, [r7, #32]
 8002816:	4413      	add	r3, r2
 8002818:	b29b      	uxth	r3, r3
 800281a:	3b01      	subs	r3, #1
 800281c:	b29b      	uxth	r3, r3
 800281e:	8939      	ldrh	r1, [r7, #8]
 8002820:	8978      	ldrh	r0, [r7, #10]
 8002822:	4622      	mov	r2, r4
 8002824:	f7ff feb6 	bl	8002594 <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 8002828:	88fb      	ldrh	r3, [r7, #6]
 800282a:	8c3a      	ldrh	r2, [r7, #32]
 800282c:	fb02 f303 	mul.w	r3, r2, r3
 8002830:	005b      	lsls	r3, r3, #1
 8002832:	2201      	movs	r2, #1
 8002834:	4619      	mov	r1, r3
 8002836:	68f8      	ldr	r0, [r7, #12]
 8002838:	f7ff fe53 	bl	80024e2 <Displ_WriteData>
}
 800283c:	bf00      	nop
 800283e:	3714      	adds	r7, #20
 8002840:	46bd      	mov	sp, r7
 8002842:	bd90      	pop	{r4, r7, pc}

08002844 <Touch_HandlePenDownInterrupt>:

volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw



void Touch_HandlePenDownInterrupt (){
 8002844:	b580      	push	{r7, lr}
 8002846:	af00      	add	r7, sp, #0
		Touch_PenDown=1;
 8002848:	4b03      	ldr	r3, [pc, #12]	@ (8002858 <Touch_HandlePenDownInterrupt+0x14>)
 800284a:	2201      	movs	r2, #1
 800284c:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
		touchgfxSignalVSync();
 800284e:	f00c fb6d 	bl	800ef2c <touchgfxSignalVSync>
#endif
}
 8002852:	bf00      	nop
 8002854:	bd80      	pop	{r7, pc}
 8002856:	bf00      	nop
 8002858:	200005c1 	.word	0x200005c1

0800285c <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 800285c:	b580      	push	{r7, lr}
 800285e:	b082      	sub	sp, #8
 8002860:	af00      	add	r7, sp, #0
 8002862:	4603      	mov	r3, r0
 8002864:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 8002866:	88fb      	ldrh	r3, [r7, #6]
 8002868:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800286c:	d101      	bne.n	8002872 <HAL_GPIO_EXTI_Callback+0x16>
		Touch_HandlePenDownInterrupt();
 800286e:	f7ff ffe9 	bl	8002844 <Touch_HandlePenDownInterrupt>
	}
}
 8002872:	bf00      	nop
 8002874:	3708      	adds	r7, #8
 8002876:	46bd      	mov	sp, r7
 8002878:	bd80      	pop	{r7, pc}
	...

0800287c <Touch_Select>:

/******************************************
 * @brief	enable touch, disabling display
 * 			set SPI baudrate as needed
 ******************************************/
void Touch_Select(void) {
 800287c:	b580      	push	{r7, lr}
 800287e:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		if (!HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin))					// if display selected
 8002880:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8002884:	4810      	ldr	r0, [pc, #64]	@ (80028c8 <Touch_Select+0x4c>)
 8002886:	f001 fdab 	bl	80043e0 <HAL_GPIO_ReadPin>
 800288a:	4603      	mov	r3, r0
 800288c:	2b00      	cmp	r3, #0
 800288e:	d105      	bne.n	800289c <Touch_Select+0x20>
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display
 8002890:	2201      	movs	r2, #1
 8002892:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8002896:	480c      	ldr	r0, [pc, #48]	@ (80028c8 <Touch_Select+0x4c>)
 8002898:	f001 fdba 	bl	8004410 <HAL_GPIO_WritePin>
		SET_SPI_BAUDRATE(TOUCH_PRESCALER);											//change SPI port speed as per touch needs
 800289c:	4b0b      	ldr	r3, [pc, #44]	@ (80028cc <Touch_Select+0x50>)
 800289e:	681a      	ldr	r2, [r3, #0]
 80028a0:	490a      	ldr	r1, [pc, #40]	@ (80028cc <Touch_Select+0x50>)
 80028a2:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 80028a6:	4013      	ands	r3, r2
 80028a8:	600b      	str	r3, [r1, #0]
 80028aa:	4b08      	ldr	r3, [pc, #32]	@ (80028cc <Touch_Select+0x50>)
 80028ac:	681b      	ldr	r3, [r3, #0]
 80028ae:	4a07      	ldr	r2, [pc, #28]	@ (80028cc <Touch_Select+0x50>)
 80028b0:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 80028b4:	6013      	str	r3, [r2, #0]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 80028b6:	2200      	movs	r2, #0
 80028b8:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80028bc:	4804      	ldr	r0, [pc, #16]	@ (80028d0 <Touch_Select+0x54>)
 80028be:	f001 fda7 	bl	8004410 <HAL_GPIO_WritePin>
	}
}
 80028c2:	bf00      	nop
 80028c4:	bd80      	pop	{r7, pc}
 80028c6:	bf00      	nop
 80028c8:	40020000 	.word	0x40020000
 80028cc:	40013000 	.word	0x40013000
 80028d0:	40020400 	.word	0x40020400

080028d4 <Touch_UnSelect>:


/******************************************
 * @brief	disable touch
 ******************************************/
void Touch_UnSelect(void) {
 80028d4:	b580      	push	{r7, lr}
 80028d6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);				// unselect touch
 80028d8:	2201      	movs	r2, #1
 80028da:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80028de:	4802      	ldr	r0, [pc, #8]	@ (80028e8 <Touch_UnSelect+0x14>)
 80028e0:	f001 fd96 	bl	8004410 <HAL_GPIO_WritePin>
}
 80028e4:	bf00      	nop
 80028e6:	bd80      	pop	{r7, pc}
 80028e8:	40020400 	.word	0x40020400

080028ec <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 80028ec:	b580      	push	{r7, lr}
 80028ee:	b084      	sub	sp, #16
 80028f0:	af00      	add	r7, sp, #0
 80028f2:	4603      	mov	r3, r0
 80028f4:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 80028f6:	2300      	movs	r3, #0
 80028f8:	813b      	strh	r3, [r7, #8]
	uint32_t poll16;
	uint8_t PenDownStatus=Touch_PenDown;
 80028fa:	4b1e      	ldr	r3, [pc, #120]	@ (8002974 <Touch_PollAxis+0x88>)
 80028fc:	781b      	ldrb	r3, [r3, #0]
 80028fe:	72fb      	strb	r3, [r7, #11]
	
	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 8002900:	bf00      	nop
 8002902:	4b1d      	ldr	r3, [pc, #116]	@ (8002978 <Touch_PollAxis+0x8c>)
 8002904:	781b      	ldrb	r3, [r3, #0]
 8002906:	b2db      	uxtb	r3, r3
 8002908:	2b00      	cmp	r3, #0
 800290a:	d0fa      	beq.n	8002902 <Touch_PollAxis+0x16>

// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 800290c:	2028      	movs	r0, #40	@ 0x28
 800290e:	f000 ff80 	bl	8003812 <HAL_NVIC_DisableIRQ>
	Touch_Select();
 8002912:	f7ff ffb3 	bl	800287c <Touch_Select>

	Displ_SpiAvailable=0;
 8002916:	4b18      	ldr	r3, [pc, #96]	@ (8002978 <Touch_PollAxis+0x8c>)
 8002918:	2200      	movs	r2, #0
 800291a:	701a      	strb	r2, [r3, #0]
	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 800291c:	1df9      	adds	r1, r7, #7
 800291e:	230a      	movs	r3, #10
 8002920:	2201      	movs	r2, #1
 8002922:	4816      	ldr	r0, [pc, #88]	@ (800297c <Touch_PollAxis+0x90>)
 8002924:	f002 fc67 	bl	80051f6 <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 8002928:	f107 0108 	add.w	r1, r7, #8
 800292c:	230a      	movs	r3, #10
 800292e:	2202      	movs	r2, #2
 8002930:	4812      	ldr	r0, [pc, #72]	@ (800297c <Touch_PollAxis+0x90>)
 8002932:	f002 fda4 	bl	800547e <HAL_SPI_Receive>
 8002936:	4603      	mov	r3, r0
 8002938:	2b00      	cmp	r3, #0
 800293a:	d105      	bne.n	8002948 <Touch_PollAxis+0x5c>
		poll16 = (poll[0]<<8) + poll[1];
 800293c:	7a3b      	ldrb	r3, [r7, #8]
 800293e:	021b      	lsls	r3, r3, #8
 8002940:	7a7a      	ldrb	r2, [r7, #9]
 8002942:	4413      	add	r3, r2
 8002944:	60fb      	str	r3, [r7, #12]
 8002946:	e001      	b.n	800294c <Touch_PollAxis+0x60>
	}
	else {
		poll16 = 0;
 8002948:	2300      	movs	r3, #0
 800294a:	60fb      	str	r3, [r7, #12]
	}
	Touch_UnSelect();
 800294c:	f7ff ffc2 	bl	80028d4 <Touch_UnSelect>
	Displ_SpiAvailable=1;
 8002950:	4b09      	ldr	r3, [pc, #36]	@ (8002978 <Touch_PollAxis+0x8c>)
 8002952:	2201      	movs	r2, #1
 8002954:	701a      	strb	r2, [r3, #0]

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8002956:	2028      	movs	r0, #40	@ 0x28
 8002958:	f000 ff75 	bl	8003846 <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 800295c:	2028      	movs	r0, #40	@ 0x28
 800295e:	f000 ff4a 	bl	80037f6 <HAL_NVIC_EnableIRQ>
	Touch_PenDown=PenDownStatus;	// restore Touch_PendDown value entering this routine
 8002962:	4a04      	ldr	r2, [pc, #16]	@ (8002974 <Touch_PollAxis+0x88>)
 8002964:	7afb      	ldrb	r3, [r7, #11]
 8002966:	7013      	strb	r3, [r2, #0]

	return poll16;
 8002968:	68fb      	ldr	r3, [r7, #12]
 800296a:	b29b      	uxth	r3, r3
}
 800296c:	4618      	mov	r0, r3
 800296e:	3710      	adds	r7, #16
 8002970:	46bd      	mov	sp, r7
 8002972:	bd80      	pop	{r7, pc}
 8002974:	200005c1 	.word	0x200005c1
 8002978:	2000001c 	.word	0x2000001c
 800297c:	20000360 	.word	0x20000360

08002980 <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 8002980:	b580      	push	{r7, lr}
 8002982:	b08a      	sub	sp, #40	@ 0x28
 8002984:	af00      	add	r7, sp, #0
 8002986:	60f8      	str	r0, [r7, #12]
 8002988:	60b9      	str	r1, [r7, #8]
 800298a:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 800298c:	2304      	movs	r3, #4
 800298e:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 8002990:	2300      	movs	r3, #0
 8002992:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002994:	2300      	movs	r3, #0
 8002996:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800299a:	e00c      	b.n	80029b6 <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 800299c:	20b0      	movs	r0, #176	@ 0xb0
 800299e:	f7ff ffa5 	bl	80028ec <Touch_PollAxis>
 80029a2:	4603      	mov	r3, r0
 80029a4:	461a      	mov	r2, r3
 80029a6:	6a3b      	ldr	r3, [r7, #32]
 80029a8:	4413      	add	r3, r2
 80029aa:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80029ac:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80029b0:	3301      	adds	r3, #1
 80029b2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80029b6:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 80029ba:	7ffb      	ldrb	r3, [r7, #31]
 80029bc:	2101      	movs	r1, #1
 80029be:	fa01 f303 	lsl.w	r3, r1, r3
 80029c2:	429a      	cmp	r2, r3
 80029c4:	dbea      	blt.n	800299c <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //takes the average
 80029c6:	7ffb      	ldrb	r3, [r7, #31]
 80029c8:	6a3a      	ldr	r2, [r7, #32]
 80029ca:	fa22 f303 	lsr.w	r3, r2, r3
 80029ce:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 80029d0:	6a3b      	ldr	r3, [r7, #32]
 80029d2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80029d6:	d803      	bhi.n	80029e0 <Touch_GetXYtouch+0x60>
		*isTouch=0;
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	2200      	movs	r2, #0
 80029dc:	701a      	strb	r2, [r3, #0]
		return;	// no touch: return 0
 80029de:	e0af      	b.n	8002b40 <Touch_GetXYtouch+0x1c0>
	}

	// reading X
	touch=0;
 80029e0:	2300      	movs	r3, #0
 80029e2:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80029e4:	2300      	movs	r3, #0
 80029e6:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80029ea:	e00c      	b.n	8002a06 <Touch_GetXYtouch+0x86>
		touch += Touch_PollAxis(X_AXIS);
 80029ec:	20d0      	movs	r0, #208	@ 0xd0
 80029ee:	f7ff ff7d 	bl	80028ec <Touch_PollAxis>
 80029f2:	4603      	mov	r3, r0
 80029f4:	461a      	mov	r2, r3
 80029f6:	6a3b      	ldr	r3, [r7, #32]
 80029f8:	4413      	add	r3, r2
 80029fa:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80029fc:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002a00:	3301      	adds	r3, #1
 8002a02:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002a06:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8002a0a:	7ffb      	ldrb	r3, [r7, #31]
 8002a0c:	2101      	movs	r1, #1
 8002a0e:	fa01 f303 	lsl.w	r3, r1, r3
 8002a12:	429a      	cmp	r2, r3
 8002a14:	dbea      	blt.n	80029ec <Touch_GetXYtouch+0x6c>
	touch >>= pollingLevel;  //takes the average
 8002a16:	7ffb      	ldrb	r3, [r7, #31]
 8002a18:	6a3a      	ldr	r2, [r7, #32]
 8002a1a:	fa22 f303 	lsr.w	r3, r2, r3
 8002a1e:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 8002a20:	6a3b      	ldr	r3, [r7, #32]
 8002a22:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002a26:	d803      	bhi.n	8002a30 <Touch_GetXYtouch+0xb0>
		*isTouch=0;
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	2200      	movs	r2, #0
 8002a2c:	701a      	strb	r2, [r3, #0]
		return;	// no touch: return 0
 8002a2e:	e087      	b.n	8002b40 <Touch_GetXYtouch+0x1c0>
	}
	touchx=(AX*touch+BX);
 8002a30:	6a3b      	ldr	r3, [r7, #32]
 8002a32:	ee07 3a90 	vmov	s15, r3
 8002a36:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002a3a:	ed9f 7a43 	vldr	s14, [pc, #268]	@ 8002b48 <Touch_GetXYtouch+0x1c8>
 8002a3e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002a42:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 8002b4c <Touch_GetXYtouch+0x1cc>
 8002a46:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002a4a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002a4e:	ee17 3a90 	vmov	r3, s15
 8002a52:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 8002a54:	2300      	movs	r3, #0
 8002a56:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002a58:	2300      	movs	r3, #0
 8002a5a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002a5e:	e00c      	b.n	8002a7a <Touch_GetXYtouch+0xfa>
		touch += Touch_PollAxis(Y_AXIS);
 8002a60:	2090      	movs	r0, #144	@ 0x90
 8002a62:	f7ff ff43 	bl	80028ec <Touch_PollAxis>
 8002a66:	4603      	mov	r3, r0
 8002a68:	461a      	mov	r2, r3
 8002a6a:	6a3b      	ldr	r3, [r7, #32]
 8002a6c:	4413      	add	r3, r2
 8002a6e:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002a70:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002a74:	3301      	adds	r3, #1
 8002a76:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002a7a:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8002a7e:	7ffb      	ldrb	r3, [r7, #31]
 8002a80:	2101      	movs	r1, #1
 8002a82:	fa01 f303 	lsl.w	r3, r1, r3
 8002a86:	429a      	cmp	r2, r3
 8002a88:	dbea      	blt.n	8002a60 <Touch_GetXYtouch+0xe0>
	touch >>= pollingLevel; //takes the average
 8002a8a:	7ffb      	ldrb	r3, [r7, #31]
 8002a8c:	6a3a      	ldr	r2, [r7, #32]
 8002a8e:	fa22 f303 	lsr.w	r3, r2, r3
 8002a92:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 8002a94:	6a3b      	ldr	r3, [r7, #32]
 8002a96:	ee07 3a90 	vmov	s15, r3
 8002a9a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002a9e:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8002b50 <Touch_GetXYtouch+0x1d0>
 8002aa2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002aa6:	ed9f 7a2b 	vldr	s14, [pc, #172]	@ 8002b54 <Touch_GetXYtouch+0x1d4>
 8002aaa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002aae:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002ab2:	ee17 3a90 	vmov	r3, s15
 8002ab6:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 8002ab8:	4b27      	ldr	r3, [pc, #156]	@ (8002b58 <Touch_GetXYtouch+0x1d8>)
 8002aba:	781b      	ldrb	r3, [r3, #0]
 8002abc:	2b03      	cmp	r3, #3
 8002abe:	d83b      	bhi.n	8002b38 <Touch_GetXYtouch+0x1b8>
 8002ac0:	a201      	add	r2, pc, #4	@ (adr r2, 8002ac8 <Touch_GetXYtouch+0x148>)
 8002ac2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002ac6:	bf00      	nop
 8002ac8:	08002ad9 	.word	0x08002ad9
 8002acc:	08002aeb 	.word	0x08002aeb
 8002ad0:	08002b03 	.word	0x08002b03
 8002ad4:	08002b21 	.word	0x08002b21
	{
	case TOUCH0:
		*x=touchx;
 8002ad8:	69bb      	ldr	r3, [r7, #24]
 8002ada:	b29a      	uxth	r2, r3
 8002adc:	68fb      	ldr	r3, [r7, #12]
 8002ade:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 8002ae0:	697b      	ldr	r3, [r7, #20]
 8002ae2:	b29a      	uxth	r2, r3
 8002ae4:	68bb      	ldr	r3, [r7, #8]
 8002ae6:	801a      	strh	r2, [r3, #0]
		break;
 8002ae8:	e026      	b.n	8002b38 <Touch_GetXYtouch+0x1b8>
	case TOUCH90:
		*x=touchy;
 8002aea:	697b      	ldr	r3, [r7, #20]
 8002aec:	b29a      	uxth	r2, r3
 8002aee:	68fb      	ldr	r3, [r7, #12]
 8002af0:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 8002af2:	69bb      	ldr	r3, [r7, #24]
 8002af4:	b29b      	uxth	r3, r3
 8002af6:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 8002afa:	b29a      	uxth	r2, r3
 8002afc:	68bb      	ldr	r3, [r7, #8]
 8002afe:	801a      	strh	r2, [r3, #0]
		break;
 8002b00:	e01a      	b.n	8002b38 <Touch_GetXYtouch+0x1b8>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 8002b02:	69bb      	ldr	r3, [r7, #24]
 8002b04:	b29b      	uxth	r3, r3
 8002b06:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 8002b0a:	b29a      	uxth	r2, r3
 8002b0c:	68fb      	ldr	r3, [r7, #12]
 8002b0e:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 8002b10:	697b      	ldr	r3, [r7, #20]
 8002b12:	b29b      	uxth	r3, r3
 8002b14:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8002b18:	b29a      	uxth	r2, r3
 8002b1a:	68bb      	ldr	r3, [r7, #8]
 8002b1c:	801a      	strh	r2, [r3, #0]
		break;
 8002b1e:	e00b      	b.n	8002b38 <Touch_GetXYtouch+0x1b8>
	case TOUCH270:
		*x=(TOUCH_0_HEIGHT- touchy);
 8002b20:	697b      	ldr	r3, [r7, #20]
 8002b22:	b29b      	uxth	r3, r3
 8002b24:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8002b28:	b29a      	uxth	r2, r3
 8002b2a:	68fb      	ldr	r3, [r7, #12]
 8002b2c:	801a      	strh	r2, [r3, #0]
		*y=touchx;
 8002b2e:	69bb      	ldr	r3, [r7, #24]
 8002b30:	b29a      	uxth	r2, r3
 8002b32:	68bb      	ldr	r3, [r7, #8]
 8002b34:	801a      	strh	r2, [r3, #0]
		break;
 8002b36:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 8002b38:	687b      	ldr	r3, [r7, #4]
 8002b3a:	2201      	movs	r2, #1
 8002b3c:	701a      	strb	r2, [r3, #0]
	return;
 8002b3e:	bf00      	nop
}
 8002b40:	3728      	adds	r7, #40	@ 0x28
 8002b42:	46bd      	mov	sp, r7
 8002b44:	bd80      	pop	{r7, pc}
 8002b46:	bf00      	nop
 8002b48:	bc03b1d1 	.word	0xbc03b1d1
 8002b4c:	436edf4e 	.word	0x436edf4e
 8002b50:	3c2c8a37 	.word	0x3c2c8a37
 8002b54:	41539f84 	.word	0x41539f84
 8002b58:	200005b4 	.word	0x200005b4

08002b5c <Touch_GotATouch>:
 * 						reset flag only when you get "no-touch" reading sensor
 * @params	reset	reset touch flag if non 0
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/
uint8_t Touch_GotATouch(uint8_t reset) {
 8002b5c:	b480      	push	{r7}
 8002b5e:	b085      	sub	sp, #20
 8002b60:	af00      	add	r7, sp, #0
 8002b62:	4603      	mov	r3, r0
 8002b64:	71fb      	strb	r3, [r7, #7]
uint8_t result = Touch_PenDown;
 8002b66:	4b08      	ldr	r3, [pc, #32]	@ (8002b88 <Touch_GotATouch+0x2c>)
 8002b68:	781b      	ldrb	r3, [r3, #0]
 8002b6a:	73fb      	strb	r3, [r7, #15]
	if (reset)
 8002b6c:	79fb      	ldrb	r3, [r7, #7]
 8002b6e:	2b00      	cmp	r3, #0
 8002b70:	d002      	beq.n	8002b78 <Touch_GotATouch+0x1c>
		Touch_PenDown=0;
 8002b72:	4b05      	ldr	r3, [pc, #20]	@ (8002b88 <Touch_GotATouch+0x2c>)
 8002b74:	2200      	movs	r2, #0
 8002b76:	701a      	strb	r2, [r3, #0]
	return result;
 8002b78:	7bfb      	ldrb	r3, [r7, #15]
}
 8002b7a:	4618      	mov	r0, r3
 8002b7c:	3714      	adds	r7, #20
 8002b7e:	46bd      	mov	sp, r7
 8002b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b84:	4770      	bx	lr
 8002b86:	bf00      	nop
 8002b88:	200005c1 	.word	0x200005c1

08002b8c <Touch_TouchGFXSampleTouch>:
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 *
 * 			that's enough for touch integration
 ***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 8002b8c:	b580      	push	{r7, lr}
 8002b8e:	b084      	sub	sp, #16
 8002b90:	af00      	add	r7, sp, #0
 8002b92:	6078      	str	r0, [r7, #4]
 8002b94:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 8002b96:	2300      	movs	r3, #0
 8002b98:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
 8002b9a:	2300      	movs	r3, #0
 8002b9c:	81bb      	strh	r3, [r7, #12]
 8002b9e:	2300      	movs	r3, #0
 8002ba0:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=0; 	// tick value get on the first touch. 0 means display untouched.

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 8002ba2:	2000      	movs	r0, #0
 8002ba4:	f7ff ffda 	bl	8002b5c <Touch_GotATouch>
 8002ba8:	4603      	mov	r3, r0
 8002baa:	2b00      	cmp	r3, #0
 8002bac:	d045      	beq.n	8002c3a <Touch_TouchGFXSampleTouch+0xae>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 8002bae:	f107 020f 	add.w	r2, r7, #15
 8002bb2:	f107 010a 	add.w	r1, r7, #10
 8002bb6:	f107 030c 	add.w	r3, r7, #12
 8002bba:	4618      	mov	r0, r3
 8002bbc:	f7ff fee0 	bl	8002980 <Touch_GetXYtouch>
		if (!isTouch){				// received a "no touch"
 8002bc0:	7bfb      	ldrb	r3, [r7, #15]
 8002bc2:	2b00      	cmp	r3, #0
 8002bc4:	d106      	bne.n	8002bd4 <Touch_TouchGFXSampleTouch+0x48>
			touchTime=0;				// set display as untouched
 8002bc6:	4b1f      	ldr	r3, [pc, #124]	@ (8002c44 <Touch_TouchGFXSampleTouch+0xb8>)
 8002bc8:	2200      	movs	r2, #0
 8002bca:	601a      	str	r2, [r3, #0]
			Touch_GotATouch(1);			// reset interrupt touch flag
 8002bcc:	2001      	movs	r0, #1
 8002bce:	f7ff ffc5 	bl	8002b5c <Touch_GotATouch>
 8002bd2:	e032      	b.n	8002c3a <Touch_TouchGFXSampleTouch+0xae>
		} else {					// display touched
			if (touchTime==0){				// if previously untouched
 8002bd4:	4b1b      	ldr	r3, [pc, #108]	@ (8002c44 <Touch_TouchGFXSampleTouch+0xb8>)
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	d108      	bne.n	8002bee <Touch_TouchGFXSampleTouch+0x62>
				touchTime=HAL_GetTick();	// store tick value at touch time
 8002bdc:	f000 f8c6 	bl	8002d6c <HAL_GetTick>
 8002be0:	4603      	mov	r3, r0
 8002be2:	4a18      	ldr	r2, [pc, #96]	@ (8002c44 <Touch_TouchGFXSampleTouch+0xb8>)
 8002be4:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 8002be6:	4b18      	ldr	r3, [pc, #96]	@ (8002c48 <Touch_TouchGFXSampleTouch+0xbc>)
 8002be8:	2201      	movs	r2, #1
 8002bea:	701a      	strb	r2, [r3, #0]
 8002bec:	e016      	b.n	8002c1c <Touch_TouchGFXSampleTouch+0x90>
			} else {						// not a new touch
				if ((DELAY_TO_KEY_REPEAT > 0) && ((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT)) {	// if timeout to key repeat is over (0 means no key repeat)
 8002bee:	f000 f8bd 	bl	8002d6c <HAL_GetTick>
 8002bf2:	4602      	mov	r2, r0
 8002bf4:	4b13      	ldr	r3, [pc, #76]	@ (8002c44 <Touch_TouchGFXSampleTouch+0xb8>)
 8002bf6:	681b      	ldr	r3, [r3, #0]
 8002bf8:	1ad3      	subs	r3, r2, r3
 8002bfa:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8002bfe:	d90a      	bls.n	8002c16 <Touch_TouchGFXSampleTouch+0x8a>
					flipTouch=!flipTouch;	// alternate every time function is called
 8002c00:	4b11      	ldr	r3, [pc, #68]	@ (8002c48 <Touch_TouchGFXSampleTouch+0xbc>)
 8002c02:	781b      	ldrb	r3, [r3, #0]
 8002c04:	2b00      	cmp	r3, #0
 8002c06:	bf0c      	ite	eq
 8002c08:	2301      	moveq	r3, #1
 8002c0a:	2300      	movne	r3, #0
 8002c0c:	b2db      	uxtb	r3, r3
 8002c0e:	461a      	mov	r2, r3
 8002c10:	4b0d      	ldr	r3, [pc, #52]	@ (8002c48 <Touch_TouchGFXSampleTouch+0xbc>)
 8002c12:	701a      	strb	r2, [r3, #0]
 8002c14:	e002      	b.n	8002c1c <Touch_TouchGFXSampleTouch+0x90>
				} else
					flipTouch=0;			// return a "no touch"
 8002c16:	4b0c      	ldr	r3, [pc, #48]	@ (8002c48 <Touch_TouchGFXSampleTouch+0xbc>)
 8002c18:	2200      	movs	r2, #0
 8002c1a:	701a      	strb	r2, [r3, #0]
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 8002c1c:	4b0a      	ldr	r3, [pc, #40]	@ (8002c48 <Touch_TouchGFXSampleTouch+0xbc>)
 8002c1e:	781b      	ldrb	r3, [r3, #0]
 8002c20:	2b00      	cmp	r3, #0
 8002c22:	d008      	beq.n	8002c36 <Touch_TouchGFXSampleTouch+0xaa>
				*x=xx;
 8002c24:	89bb      	ldrh	r3, [r7, #12]
 8002c26:	461a      	mov	r2, r3
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	601a      	str	r2, [r3, #0]
				*y=yy;
 8002c2c:	897b      	ldrh	r3, [r7, #10]
 8002c2e:	461a      	mov	r2, r3
 8002c30:	683b      	ldr	r3, [r7, #0]
 8002c32:	601a      	str	r2, [r3, #0]
 8002c34:	e001      	b.n	8002c3a <Touch_TouchGFXSampleTouch+0xae>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 8002c36:	2300      	movs	r3, #0
 8002c38:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 8002c3a:	7bfb      	ldrb	r3, [r7, #15]
}
 8002c3c:	4618      	mov	r0, r3
 8002c3e:	3710      	adds	r7, #16
 8002c40:	46bd      	mov	sp, r7
 8002c42:	bd80      	pop	{r7, pc}
 8002c44:	200005c4 	.word	0x200005c4
 8002c48:	200005c8 	.word	0x200005c8

08002c4c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8002c4c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002c84 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8002c50:	480d      	ldr	r0, [pc, #52]	@ (8002c88 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8002c52:	490e      	ldr	r1, [pc, #56]	@ (8002c8c <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8002c54:	4a0e      	ldr	r2, [pc, #56]	@ (8002c90 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8002c56:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002c58:	e002      	b.n	8002c60 <LoopCopyDataInit>

08002c5a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002c5a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002c5c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002c5e:	3304      	adds	r3, #4

08002c60 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002c60:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002c62:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002c64:	d3f9      	bcc.n	8002c5a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002c66:	4a0b      	ldr	r2, [pc, #44]	@ (8002c94 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8002c68:	4c0b      	ldr	r4, [pc, #44]	@ (8002c98 <LoopFillZerobss+0x26>)
  movs r3, #0
 8002c6a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002c6c:	e001      	b.n	8002c72 <LoopFillZerobss>

08002c6e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002c6e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002c70:	3204      	adds	r2, #4

08002c72 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002c72:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002c74:	d3fb      	bcc.n	8002c6e <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8002c76:	f7ff f949 	bl	8001f0c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002c7a:	f022 fb5d 	bl	8025338 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8002c7e:	f7fe fda1 	bl	80017c4 <main>
  bx  lr    
 8002c82:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8002c84:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8002c88:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002c8c:	20000278 	.word	0x20000278
  ldr r2, =_sidata
 8002c90:	0806ea88 	.word	0x0806ea88
  ldr r2, =_sbss
 8002c94:	20000278 	.word	0x20000278
  ldr r4, =_ebss
 8002c98:	20002fd8 	.word	0x20002fd8

08002c9c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002c9c:	e7fe      	b.n	8002c9c <ADC_IRQHandler>
	...

08002ca0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002ca0:	b580      	push	{r7, lr}
 8002ca2:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002ca4:	4b0e      	ldr	r3, [pc, #56]	@ (8002ce0 <HAL_Init+0x40>)
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	4a0d      	ldr	r2, [pc, #52]	@ (8002ce0 <HAL_Init+0x40>)
 8002caa:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002cae:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002cb0:	4b0b      	ldr	r3, [pc, #44]	@ (8002ce0 <HAL_Init+0x40>)
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	4a0a      	ldr	r2, [pc, #40]	@ (8002ce0 <HAL_Init+0x40>)
 8002cb6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002cba:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002cbc:	4b08      	ldr	r3, [pc, #32]	@ (8002ce0 <HAL_Init+0x40>)
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	4a07      	ldr	r2, [pc, #28]	@ (8002ce0 <HAL_Init+0x40>)
 8002cc2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002cc6:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8002cc8:	2003      	movs	r0, #3
 8002cca:	f000 fd6d 	bl	80037a8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8002cce:	2000      	movs	r0, #0
 8002cd0:	f000 f808 	bl	8002ce4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002cd4:	f7fe ffaa 	bl	8001c2c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8002cd8:	2300      	movs	r3, #0
}
 8002cda:	4618      	mov	r0, r3
 8002cdc:	bd80      	pop	{r7, pc}
 8002cde:	bf00      	nop
 8002ce0:	40023c00 	.word	0x40023c00

08002ce4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002ce4:	b580      	push	{r7, lr}
 8002ce6:	b082      	sub	sp, #8
 8002ce8:	af00      	add	r7, sp, #0
 8002cea:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002cec:	4b12      	ldr	r3, [pc, #72]	@ (8002d38 <HAL_InitTick+0x54>)
 8002cee:	681a      	ldr	r2, [r3, #0]
 8002cf0:	4b12      	ldr	r3, [pc, #72]	@ (8002d3c <HAL_InitTick+0x58>)
 8002cf2:	781b      	ldrb	r3, [r3, #0]
 8002cf4:	4619      	mov	r1, r3
 8002cf6:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002cfa:	fbb3 f3f1 	udiv	r3, r3, r1
 8002cfe:	fbb2 f3f3 	udiv	r3, r2, r3
 8002d02:	4618      	mov	r0, r3
 8002d04:	f000 fd93 	bl	800382e <HAL_SYSTICK_Config>
 8002d08:	4603      	mov	r3, r0
 8002d0a:	2b00      	cmp	r3, #0
 8002d0c:	d001      	beq.n	8002d12 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8002d0e:	2301      	movs	r3, #1
 8002d10:	e00e      	b.n	8002d30 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	2b0f      	cmp	r3, #15
 8002d16:	d80a      	bhi.n	8002d2e <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002d18:	2200      	movs	r2, #0
 8002d1a:	6879      	ldr	r1, [r7, #4]
 8002d1c:	f04f 30ff 	mov.w	r0, #4294967295
 8002d20:	f000 fd4d 	bl	80037be <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002d24:	4a06      	ldr	r2, [pc, #24]	@ (8002d40 <HAL_InitTick+0x5c>)
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8002d2a:	2300      	movs	r3, #0
 8002d2c:	e000      	b.n	8002d30 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8002d2e:	2301      	movs	r3, #1
}
 8002d30:	4618      	mov	r0, r3
 8002d32:	3708      	adds	r7, #8
 8002d34:	46bd      	mov	sp, r7
 8002d36:	bd80      	pop	{r7, pc}
 8002d38:	20000018 	.word	0x20000018
 8002d3c:	20000024 	.word	0x20000024
 8002d40:	20000020 	.word	0x20000020

08002d44 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002d44:	b480      	push	{r7}
 8002d46:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002d48:	4b06      	ldr	r3, [pc, #24]	@ (8002d64 <HAL_IncTick+0x20>)
 8002d4a:	781b      	ldrb	r3, [r3, #0]
 8002d4c:	461a      	mov	r2, r3
 8002d4e:	4b06      	ldr	r3, [pc, #24]	@ (8002d68 <HAL_IncTick+0x24>)
 8002d50:	681b      	ldr	r3, [r3, #0]
 8002d52:	4413      	add	r3, r2
 8002d54:	4a04      	ldr	r2, [pc, #16]	@ (8002d68 <HAL_IncTick+0x24>)
 8002d56:	6013      	str	r3, [r2, #0]
}
 8002d58:	bf00      	nop
 8002d5a:	46bd      	mov	sp, r7
 8002d5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d60:	4770      	bx	lr
 8002d62:	bf00      	nop
 8002d64:	20000024 	.word	0x20000024
 8002d68:	200005cc 	.word	0x200005cc

08002d6c <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002d6c:	b480      	push	{r7}
 8002d6e:	af00      	add	r7, sp, #0
  return uwTick;
 8002d70:	4b03      	ldr	r3, [pc, #12]	@ (8002d80 <HAL_GetTick+0x14>)
 8002d72:	681b      	ldr	r3, [r3, #0]
}
 8002d74:	4618      	mov	r0, r3
 8002d76:	46bd      	mov	sp, r7
 8002d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d7c:	4770      	bx	lr
 8002d7e:	bf00      	nop
 8002d80:	200005cc 	.word	0x200005cc

08002d84 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002d84:	b580      	push	{r7, lr}
 8002d86:	b084      	sub	sp, #16
 8002d88:	af00      	add	r7, sp, #0
 8002d8a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002d8c:	f7ff ffee 	bl	8002d6c <HAL_GetTick>
 8002d90:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002d96:	68fb      	ldr	r3, [r7, #12]
 8002d98:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002d9c:	d005      	beq.n	8002daa <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002d9e:	4b0a      	ldr	r3, [pc, #40]	@ (8002dc8 <HAL_Delay+0x44>)
 8002da0:	781b      	ldrb	r3, [r3, #0]
 8002da2:	461a      	mov	r2, r3
 8002da4:	68fb      	ldr	r3, [r7, #12]
 8002da6:	4413      	add	r3, r2
 8002da8:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002daa:	bf00      	nop
 8002dac:	f7ff ffde 	bl	8002d6c <HAL_GetTick>
 8002db0:	4602      	mov	r2, r0
 8002db2:	68bb      	ldr	r3, [r7, #8]
 8002db4:	1ad3      	subs	r3, r2, r3
 8002db6:	68fa      	ldr	r2, [r7, #12]
 8002db8:	429a      	cmp	r2, r3
 8002dba:	d8f7      	bhi.n	8002dac <HAL_Delay+0x28>
  {
  }
}
 8002dbc:	bf00      	nop
 8002dbe:	bf00      	nop
 8002dc0:	3710      	adds	r7, #16
 8002dc2:	46bd      	mov	sp, r7
 8002dc4:	bd80      	pop	{r7, pc}
 8002dc6:	bf00      	nop
 8002dc8:	20000024 	.word	0x20000024

08002dcc <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8002dcc:	b580      	push	{r7, lr}
 8002dce:	b084      	sub	sp, #16
 8002dd0:	af00      	add	r7, sp, #0
 8002dd2:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002dd4:	2300      	movs	r3, #0
 8002dd6:	73fb      	strb	r3, [r7, #15]

  /* Check ADC handle */
  if (hadc == NULL)
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d101      	bne.n	8002de2 <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8002dde:	2301      	movs	r3, #1
 8002de0:	e033      	b.n	8002e4a <HAL_ADC_Init+0x7e>
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if (hadc->State == HAL_ADC_STATE_RESET)
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002de6:	2b00      	cmp	r3, #0
 8002de8:	d109      	bne.n	8002dfe <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002dea:	6878      	ldr	r0, [r7, #4]
 8002dec:	f7fe f916 	bl	800101c <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	2200      	movs	r2, #0
 8002df4:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	2200      	movs	r2, #0
 8002dfa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
  }

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e02:	f003 0310 	and.w	r3, r3, #16
 8002e06:	2b00      	cmp	r3, #0
 8002e08:	d118      	bne.n	8002e3c <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e0e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002e12:	f023 0302 	bic.w	r3, r3, #2
 8002e16:	f043 0202 	orr.w	r2, r3, #2
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);

    /* Set ADC parameters */
    ADC_Init(hadc);
 8002e1e:	6878      	ldr	r0, [r7, #4]
 8002e20:	f000 fab4 	bl	800338c <ADC_Init>

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	2200      	movs	r2, #0
 8002e28:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e2e:	f023 0303 	bic.w	r3, r3, #3
 8002e32:	f043 0201 	orr.w	r2, r3, #1
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	641a      	str	r2, [r3, #64]	@ 0x40
 8002e3a:	e001      	b.n	8002e40 <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8002e3c:	2301      	movs	r3, #1
 8002e3e:	73fb      	strb	r3, [r7, #15]
  }

  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	2200      	movs	r2, #0
 8002e44:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return tmp_hal_status;
 8002e48:	7bfb      	ldrb	r3, [r7, #15]
}
 8002e4a:	4618      	mov	r0, r3
 8002e4c:	3710      	adds	r7, #16
 8002e4e:	46bd      	mov	sp, r7
 8002e50:	bd80      	pop	{r7, pc}
	...

08002e54 <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
{
 8002e54:	b480      	push	{r7}
 8002e56:	b085      	sub	sp, #20
 8002e58:	af00      	add	r7, sp, #0
 8002e5a:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 8002e5c:	2300      	movs	r3, #0
 8002e5e:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002e66:	2b01      	cmp	r3, #1
 8002e68:	d101      	bne.n	8002e6e <HAL_ADC_Start+0x1a>
 8002e6a:	2302      	movs	r3, #2
 8002e6c:	e0b2      	b.n	8002fd4 <HAL_ADC_Start+0x180>
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	2201      	movs	r2, #1
 8002e72:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during
  Tstab time the ADC's stabilization */
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	681b      	ldr	r3, [r3, #0]
 8002e7a:	689b      	ldr	r3, [r3, #8]
 8002e7c:	f003 0301 	and.w	r3, r3, #1
 8002e80:	2b01      	cmp	r3, #1
 8002e82:	d018      	beq.n	8002eb6 <HAL_ADC_Start+0x62>
  {
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	689a      	ldr	r2, [r3, #8]
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	f042 0201 	orr.w	r2, r2, #1
 8002e92:	609a      	str	r2, [r3, #8]

    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002e94:	4b52      	ldr	r3, [pc, #328]	@ (8002fe0 <HAL_ADC_Start+0x18c>)
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	4a52      	ldr	r2, [pc, #328]	@ (8002fe4 <HAL_ADC_Start+0x190>)
 8002e9a:	fba2 2303 	umull	r2, r3, r2, r3
 8002e9e:	0c9a      	lsrs	r2, r3, #18
 8002ea0:	4613      	mov	r3, r2
 8002ea2:	005b      	lsls	r3, r3, #1
 8002ea4:	4413      	add	r3, r2
 8002ea6:	60bb      	str	r3, [r7, #8]
    while (counter != 0U)
 8002ea8:	e002      	b.n	8002eb0 <HAL_ADC_Start+0x5c>
    {
      counter--;
 8002eaa:	68bb      	ldr	r3, [r7, #8]
 8002eac:	3b01      	subs	r3, #1
 8002eae:	60bb      	str	r3, [r7, #8]
    while (counter != 0U)
 8002eb0:	68bb      	ldr	r3, [r7, #8]
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	d1f9      	bne.n	8002eaa <HAL_ADC_Start+0x56>
    }
  }

  /* Start conversion if ADC is effectively enabled */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	681b      	ldr	r3, [r3, #0]
 8002eba:	689b      	ldr	r3, [r3, #8]
 8002ebc:	f003 0301 	and.w	r3, r3, #1
 8002ec0:	2b01      	cmp	r3, #1
 8002ec2:	d17a      	bne.n	8002fba <HAL_ADC_Start+0x166>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ec8:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8002ecc:	f023 0301 	bic.w	r3, r3, #1
 8002ed0:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);

    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	685b      	ldr	r3, [r3, #4]
 8002ede:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002ee2:	2b00      	cmp	r3, #0
 8002ee4:	d007      	beq.n	8002ef6 <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002eea:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002eee:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	641a      	str	r2, [r3, #64]	@ 0x40
    }

    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002efa:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002efe:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002f02:	d106      	bne.n	8002f12 <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f08:	f023 0206 	bic.w	r2, r3, #6
 8002f0c:	687b      	ldr	r3, [r7, #4]
 8002f0e:	645a      	str	r2, [r3, #68]	@ 0x44
 8002f10:	e002      	b.n	8002f18 <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	2200      	movs	r2, #0
 8002f16:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8002f18:	687b      	ldr	r3, [r7, #4]
 8002f1a:	2200      	movs	r2, #0
 8002f1c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002f20:	4b31      	ldr	r3, [pc, #196]	@ (8002fe8 <HAL_ADC_Start+0x194>)
 8002f22:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8002f2c:	601a      	str	r2, [r3, #0]

    /* Check if Multimode enabled */
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8002f2e:	68fb      	ldr	r3, [r7, #12]
 8002f30:	685b      	ldr	r3, [r3, #4]
 8002f32:	f003 031f 	and.w	r3, r3, #31
 8002f36:	2b00      	cmp	r3, #0
 8002f38:	d12a      	bne.n	8002f90 <HAL_ADC_Start+0x13c>
    {
#if defined(ADC2) && defined(ADC3)
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	4a2b      	ldr	r2, [pc, #172]	@ (8002fec <HAL_ADC_Start+0x198>)
 8002f40:	4293      	cmp	r3, r2
 8002f42:	d015      	beq.n	8002f70 <HAL_ADC_Start+0x11c>
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	4a29      	ldr	r2, [pc, #164]	@ (8002ff0 <HAL_ADC_Start+0x19c>)
 8002f4a:	4293      	cmp	r3, r2
 8002f4c:	d105      	bne.n	8002f5a <HAL_ADC_Start+0x106>
 8002f4e:	4b26      	ldr	r3, [pc, #152]	@ (8002fe8 <HAL_ADC_Start+0x194>)
 8002f50:	685b      	ldr	r3, [r3, #4]
 8002f52:	f003 031f 	and.w	r3, r3, #31
 8002f56:	2b00      	cmp	r3, #0
 8002f58:	d00a      	beq.n	8002f70 <HAL_ADC_Start+0x11c>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8002f5a:	687b      	ldr	r3, [r7, #4]
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	4a25      	ldr	r2, [pc, #148]	@ (8002ff4 <HAL_ADC_Start+0x1a0>)
 8002f60:	4293      	cmp	r3, r2
 8002f62:	d136      	bne.n	8002fd2 <HAL_ADC_Start+0x17e>
 8002f64:	4b20      	ldr	r3, [pc, #128]	@ (8002fe8 <HAL_ADC_Start+0x194>)
 8002f66:	685b      	ldr	r3, [r3, #4]
 8002f68:	f003 0310 	and.w	r3, r3, #16
 8002f6c:	2b00      	cmp	r3, #0
 8002f6e:	d130      	bne.n	8002fd2 <HAL_ADC_Start+0x17e>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET)
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	681b      	ldr	r3, [r3, #0]
 8002f74:	689b      	ldr	r3, [r3, #8]
 8002f76:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002f7a:	2b00      	cmp	r3, #0
 8002f7c:	d129      	bne.n	8002fd2 <HAL_ADC_Start+0x17e>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	681b      	ldr	r3, [r3, #0]
 8002f82:	689a      	ldr	r2, [r3, #8]
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002f8c:	609a      	str	r2, [r3, #8]
 8002f8e:	e020      	b.n	8002fd2 <HAL_ADC_Start+0x17e>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	681b      	ldr	r3, [r3, #0]
 8002f94:	4a15      	ldr	r2, [pc, #84]	@ (8002fec <HAL_ADC_Start+0x198>)
 8002f96:	4293      	cmp	r3, r2
 8002f98:	d11b      	bne.n	8002fd2 <HAL_ADC_Start+0x17e>
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	681b      	ldr	r3, [r3, #0]
 8002f9e:	689b      	ldr	r3, [r3, #8]
 8002fa0:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002fa4:	2b00      	cmp	r3, #0
 8002fa6:	d114      	bne.n	8002fd2 <HAL_ADC_Start+0x17e>
      {
        /* Enable the selected ADC software conversion for regular group */
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	681b      	ldr	r3, [r3, #0]
 8002fac:	689a      	ldr	r2, [r3, #8]
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	681b      	ldr	r3, [r3, #0]
 8002fb2:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002fb6:	609a      	str	r2, [r3, #8]
 8002fb8:	e00b      	b.n	8002fd2 <HAL_ADC_Start+0x17e>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fbe:	f043 0210 	orr.w	r2, r3, #16
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fca:	f043 0201 	orr.w	r2, r3, #1
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Return function status */
  return HAL_OK;
 8002fd2:	2300      	movs	r3, #0
}
 8002fd4:	4618      	mov	r0, r3
 8002fd6:	3714      	adds	r7, #20
 8002fd8:	46bd      	mov	sp, r7
 8002fda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fde:	4770      	bx	lr
 8002fe0:	20000018 	.word	0x20000018
 8002fe4:	431bde83 	.word	0x431bde83
 8002fe8:	40012300 	.word	0x40012300
 8002fec:	40012000 	.word	0x40012000
 8002ff0:	40012100 	.word	0x40012100
 8002ff4:	40012200 	.word	0x40012200

08002ff8 <HAL_ADC_PollForConversion>:
  *         the configuration information for the specified ADC.
  * @param  Timeout Timeout value in millisecond.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
{
 8002ff8:	b580      	push	{r7, lr}
 8002ffa:	b084      	sub	sp, #16
 8002ffc:	af00      	add	r7, sp, #0
 8002ffe:	6078      	str	r0, [r7, #4]
 8003000:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0U;
 8003002:	2300      	movs	r3, #0
 8003004:	60fb      	str	r3, [r7, #12]
  /* each conversion:                                                       */
  /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
  /* several ranks and polling for end of each conversion.                  */
  /* For code simplicity sake, this particular case is generalized to       */
  /* ADC configured in DMA mode and polling for end of each conversion.     */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8003006:	687b      	ldr	r3, [r7, #4]
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	689b      	ldr	r3, [r3, #8]
 800300c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003010:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003014:	d113      	bne.n	800303e <HAL_ADC_PollForConversion+0x46>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	681b      	ldr	r3, [r3, #0]
 800301a:	689b      	ldr	r3, [r3, #8]
 800301c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8003020:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003024:	d10b      	bne.n	800303e <HAL_ADC_PollForConversion+0x46>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800302a:	f043 0220 	orr.w	r2, r3, #32
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	2200      	movs	r2, #0
 8003036:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_ERROR;
 800303a:	2301      	movs	r3, #1
 800303c:	e063      	b.n	8003106 <HAL_ADC_PollForConversion+0x10e>
  }

  /* Get tick */
  tickstart = HAL_GetTick();
 800303e:	f7ff fe95 	bl	8002d6c <HAL_GetTick>
 8003042:	60f8      	str	r0, [r7, #12]

  /* Check End of conversion flag */
  while (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8003044:	e021      	b.n	800308a <HAL_ADC_PollForConversion+0x92>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if (Timeout != HAL_MAX_DELAY)
 8003046:	683b      	ldr	r3, [r7, #0]
 8003048:	f1b3 3fff 	cmp.w	r3, #4294967295
 800304c:	d01d      	beq.n	800308a <HAL_ADC_PollForConversion+0x92>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800304e:	683b      	ldr	r3, [r7, #0]
 8003050:	2b00      	cmp	r3, #0
 8003052:	d007      	beq.n	8003064 <HAL_ADC_PollForConversion+0x6c>
 8003054:	f7ff fe8a 	bl	8002d6c <HAL_GetTick>
 8003058:	4602      	mov	r2, r0
 800305a:	68fb      	ldr	r3, [r7, #12]
 800305c:	1ad3      	subs	r3, r2, r3
 800305e:	683a      	ldr	r2, [r7, #0]
 8003060:	429a      	cmp	r2, r3
 8003062:	d212      	bcs.n	800308a <HAL_ADC_PollForConversion+0x92>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	681b      	ldr	r3, [r3, #0]
 8003068:	681b      	ldr	r3, [r3, #0]
 800306a:	f003 0302 	and.w	r3, r3, #2
 800306e:	2b02      	cmp	r3, #2
 8003070:	d00b      	beq.n	800308a <HAL_ADC_PollForConversion+0x92>
        {
          /* Update ADC state machine to timeout */
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003076:	f043 0204 	orr.w	r2, r3, #4
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process unlocked */
          __HAL_UNLOCK(hadc);
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	2200      	movs	r2, #0
 8003082:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_TIMEOUT;
 8003086:	2303      	movs	r3, #3
 8003088:	e03d      	b.n	8003106 <HAL_ADC_PollForConversion+0x10e>
  while (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	681b      	ldr	r3, [r3, #0]
 800308e:	681b      	ldr	r3, [r3, #0]
 8003090:	f003 0302 	and.w	r3, r3, #2
 8003094:	2b02      	cmp	r3, #2
 8003096:	d1d6      	bne.n	8003046 <HAL_ADC_PollForConversion+0x4e>
      }
    }
  }

  /* Clear regular group conversion flag */
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	681b      	ldr	r3, [r3, #0]
 800309c:	f06f 0212 	mvn.w	r2, #18
 80030a0:	601a      	str	r2, [r3, #0]

  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80030a2:	687b      	ldr	r3, [r7, #4]
 80030a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030a6:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	641a      	str	r2, [r3, #64]	@ 0x40
  /* by external trigger, continuous mode or scan sequence on going.          */
  /* Note: On STM32F4, there is no independent flag of end of sequence.       */
  /*       The test of scan sequence on going is done either with scan        */
  /*       sequence disabled or with end of conversion flag set to            */
  /*       of end of sequence.                                                */
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	681b      	ldr	r3, [r3, #0]
 80030b2:	689b      	ldr	r3, [r3, #8]
 80030b4:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80030b8:	2b00      	cmp	r3, #0
 80030ba:	d123      	bne.n	8003104 <HAL_ADC_PollForConversion+0x10c>
      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80030bc:	687b      	ldr	r3, [r7, #4]
 80030be:	7e1b      	ldrb	r3, [r3, #24]
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80030c0:	2b00      	cmp	r3, #0
 80030c2:	d11f      	bne.n	8003104 <HAL_ADC_PollForConversion+0x10c>
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	681b      	ldr	r3, [r3, #0]
 80030c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80030ca:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80030ce:	2b00      	cmp	r3, #0
 80030d0:	d006      	beq.n	80030e0 <HAL_ADC_PollForConversion+0xe8>
       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	689b      	ldr	r3, [r3, #8]
 80030d8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 80030dc:	2b00      	cmp	r3, #0
 80030de:	d111      	bne.n	8003104 <HAL_ADC_PollForConversion+0x10c>
  {
    /* Set ADC state */
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030e4:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	641a      	str	r2, [r3, #64]	@ 0x40

    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030f0:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	d105      	bne.n	8003104 <HAL_ADC_PollForConversion+0x10c>
    {
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030fc:	f043 0201 	orr.w	r2, r3, #1
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	641a      	str	r2, [r3, #64]	@ 0x40
    }
  }

  /* Return ADC state */
  return HAL_OK;
 8003104:	2300      	movs	r3, #0
}
 8003106:	4618      	mov	r0, r3
 8003108:	3710      	adds	r7, #16
 800310a:	46bd      	mov	sp, r7
 800310c:	bd80      	pop	{r7, pc}

0800310e <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
{
 800310e:	b480      	push	{r7}
 8003110:	b083      	sub	sp, #12
 8003112:	af00      	add	r7, sp, #0
 8003114:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */
  return hadc->Instance->DR;
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	681b      	ldr	r3, [r3, #0]
 800311a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
}
 800311c:	4618      	mov	r0, r3
 800311e:	370c      	adds	r7, #12
 8003120:	46bd      	mov	sp, r7
 8003122:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003126:	4770      	bx	lr

08003128 <HAL_ADC_ConfigChannel>:
*         the configuration information for the specified ADC.
* @param  sConfig ADC configuration structure.
* @retval HAL status
*/
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 8003128:	b480      	push	{r7}
 800312a:	b085      	sub	sp, #20
 800312c:	af00      	add	r7, sp, #0
 800312e:	6078      	str	r0, [r7, #4]
 8003130:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 8003132:	2300      	movs	r3, #0
 8003134:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));

  /* Process locked */
  __HAL_LOCK(hadc);
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800313c:	2b01      	cmp	r3, #1
 800313e:	d101      	bne.n	8003144 <HAL_ADC_ConfigChannel+0x1c>
 8003140:	2302      	movs	r3, #2
 8003142:	e113      	b.n	800336c <HAL_ADC_ConfigChannel+0x244>
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	2201      	movs	r2, #1
 8003148:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 800314c:	683b      	ldr	r3, [r7, #0]
 800314e:	681b      	ldr	r3, [r3, #0]
 8003150:	2b09      	cmp	r3, #9
 8003152:	d925      	bls.n	80031a0 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	681b      	ldr	r3, [r3, #0]
 8003158:	68d9      	ldr	r1, [r3, #12]
 800315a:	683b      	ldr	r3, [r7, #0]
 800315c:	681b      	ldr	r3, [r3, #0]
 800315e:	b29b      	uxth	r3, r3
 8003160:	461a      	mov	r2, r3
 8003162:	4613      	mov	r3, r2
 8003164:	005b      	lsls	r3, r3, #1
 8003166:	4413      	add	r3, r2
 8003168:	3b1e      	subs	r3, #30
 800316a:	2207      	movs	r2, #7
 800316c:	fa02 f303 	lsl.w	r3, r2, r3
 8003170:	43da      	mvns	r2, r3
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	400a      	ands	r2, r1
 8003178:	60da      	str	r2, [r3, #12]

    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	68d9      	ldr	r1, [r3, #12]
 8003180:	683b      	ldr	r3, [r7, #0]
 8003182:	689a      	ldr	r2, [r3, #8]
 8003184:	683b      	ldr	r3, [r7, #0]
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	b29b      	uxth	r3, r3
 800318a:	4618      	mov	r0, r3
 800318c:	4603      	mov	r3, r0
 800318e:	005b      	lsls	r3, r3, #1
 8003190:	4403      	add	r3, r0
 8003192:	3b1e      	subs	r3, #30
 8003194:	409a      	lsls	r2, r3
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	681b      	ldr	r3, [r3, #0]
 800319a:	430a      	orrs	r2, r1
 800319c:	60da      	str	r2, [r3, #12]
 800319e:	e022      	b.n	80031e6 <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	681b      	ldr	r3, [r3, #0]
 80031a4:	6919      	ldr	r1, [r3, #16]
 80031a6:	683b      	ldr	r3, [r7, #0]
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	b29b      	uxth	r3, r3
 80031ac:	461a      	mov	r2, r3
 80031ae:	4613      	mov	r3, r2
 80031b0:	005b      	lsls	r3, r3, #1
 80031b2:	4413      	add	r3, r2
 80031b4:	2207      	movs	r2, #7
 80031b6:	fa02 f303 	lsl.w	r3, r2, r3
 80031ba:	43da      	mvns	r2, r3
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	400a      	ands	r2, r1
 80031c2:	611a      	str	r2, [r3, #16]

    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	6919      	ldr	r1, [r3, #16]
 80031ca:	683b      	ldr	r3, [r7, #0]
 80031cc:	689a      	ldr	r2, [r3, #8]
 80031ce:	683b      	ldr	r3, [r7, #0]
 80031d0:	681b      	ldr	r3, [r3, #0]
 80031d2:	b29b      	uxth	r3, r3
 80031d4:	4618      	mov	r0, r3
 80031d6:	4603      	mov	r3, r0
 80031d8:	005b      	lsls	r3, r3, #1
 80031da:	4403      	add	r3, r0
 80031dc:	409a      	lsls	r2, r3
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	681b      	ldr	r3, [r3, #0]
 80031e2:	430a      	orrs	r2, r1
 80031e4:	611a      	str	r2, [r3, #16]
  }

  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 80031e6:	683b      	ldr	r3, [r7, #0]
 80031e8:	685b      	ldr	r3, [r3, #4]
 80031ea:	2b06      	cmp	r3, #6
 80031ec:	d824      	bhi.n	8003238 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	681b      	ldr	r3, [r3, #0]
 80031f2:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80031f4:	683b      	ldr	r3, [r7, #0]
 80031f6:	685a      	ldr	r2, [r3, #4]
 80031f8:	4613      	mov	r3, r2
 80031fa:	009b      	lsls	r3, r3, #2
 80031fc:	4413      	add	r3, r2
 80031fe:	3b05      	subs	r3, #5
 8003200:	221f      	movs	r2, #31
 8003202:	fa02 f303 	lsl.w	r3, r2, r3
 8003206:	43da      	mvns	r2, r3
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	400a      	ands	r2, r1
 800320e:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8003216:	683b      	ldr	r3, [r7, #0]
 8003218:	681b      	ldr	r3, [r3, #0]
 800321a:	b29b      	uxth	r3, r3
 800321c:	4618      	mov	r0, r3
 800321e:	683b      	ldr	r3, [r7, #0]
 8003220:	685a      	ldr	r2, [r3, #4]
 8003222:	4613      	mov	r3, r2
 8003224:	009b      	lsls	r3, r3, #2
 8003226:	4413      	add	r3, r2
 8003228:	3b05      	subs	r3, #5
 800322a:	fa00 f203 	lsl.w	r2, r0, r3
 800322e:	687b      	ldr	r3, [r7, #4]
 8003230:	681b      	ldr	r3, [r3, #0]
 8003232:	430a      	orrs	r2, r1
 8003234:	635a      	str	r2, [r3, #52]	@ 0x34
 8003236:	e04c      	b.n	80032d2 <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 8003238:	683b      	ldr	r3, [r7, #0]
 800323a:	685b      	ldr	r3, [r3, #4]
 800323c:	2b0c      	cmp	r3, #12
 800323e:	d824      	bhi.n	800328a <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003246:	683b      	ldr	r3, [r7, #0]
 8003248:	685a      	ldr	r2, [r3, #4]
 800324a:	4613      	mov	r3, r2
 800324c:	009b      	lsls	r3, r3, #2
 800324e:	4413      	add	r3, r2
 8003250:	3b23      	subs	r3, #35	@ 0x23
 8003252:	221f      	movs	r2, #31
 8003254:	fa02 f303 	lsl.w	r3, r2, r3
 8003258:	43da      	mvns	r2, r3
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	681b      	ldr	r3, [r3, #0]
 800325e:	400a      	ands	r2, r1
 8003260:	631a      	str	r2, [r3, #48]	@ 0x30

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	681b      	ldr	r3, [r3, #0]
 8003266:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003268:	683b      	ldr	r3, [r7, #0]
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	b29b      	uxth	r3, r3
 800326e:	4618      	mov	r0, r3
 8003270:	683b      	ldr	r3, [r7, #0]
 8003272:	685a      	ldr	r2, [r3, #4]
 8003274:	4613      	mov	r3, r2
 8003276:	009b      	lsls	r3, r3, #2
 8003278:	4413      	add	r3, r2
 800327a:	3b23      	subs	r3, #35	@ 0x23
 800327c:	fa00 f203 	lsl.w	r2, r0, r3
 8003280:	687b      	ldr	r3, [r7, #4]
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	430a      	orrs	r2, r1
 8003286:	631a      	str	r2, [r3, #48]	@ 0x30
 8003288:	e023      	b.n	80032d2 <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003290:	683b      	ldr	r3, [r7, #0]
 8003292:	685a      	ldr	r2, [r3, #4]
 8003294:	4613      	mov	r3, r2
 8003296:	009b      	lsls	r3, r3, #2
 8003298:	4413      	add	r3, r2
 800329a:	3b41      	subs	r3, #65	@ 0x41
 800329c:	221f      	movs	r2, #31
 800329e:	fa02 f303 	lsl.w	r3, r2, r3
 80032a2:	43da      	mvns	r2, r3
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	681b      	ldr	r3, [r3, #0]
 80032a8:	400a      	ands	r2, r1
 80032aa:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80032b2:	683b      	ldr	r3, [r7, #0]
 80032b4:	681b      	ldr	r3, [r3, #0]
 80032b6:	b29b      	uxth	r3, r3
 80032b8:	4618      	mov	r0, r3
 80032ba:	683b      	ldr	r3, [r7, #0]
 80032bc:	685a      	ldr	r2, [r3, #4]
 80032be:	4613      	mov	r3, r2
 80032c0:	009b      	lsls	r3, r3, #2
 80032c2:	4413      	add	r3, r2
 80032c4:	3b41      	subs	r3, #65	@ 0x41
 80032c6:	fa00 f203 	lsl.w	r2, r0, r3
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	681b      	ldr	r3, [r3, #0]
 80032ce:	430a      	orrs	r2, r1
 80032d0:	62da      	str	r2, [r3, #44]	@ 0x2c
  }

  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 80032d2:	4b29      	ldr	r3, [pc, #164]	@ (8003378 <HAL_ADC_ConfigChannel+0x250>)
 80032d4:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 80032d6:	687b      	ldr	r3, [r7, #4]
 80032d8:	681b      	ldr	r3, [r3, #0]
 80032da:	4a28      	ldr	r2, [pc, #160]	@ (800337c <HAL_ADC_ConfigChannel+0x254>)
 80032dc:	4293      	cmp	r3, r2
 80032de:	d10f      	bne.n	8003300 <HAL_ADC_ConfigChannel+0x1d8>
 80032e0:	683b      	ldr	r3, [r7, #0]
 80032e2:	681b      	ldr	r3, [r3, #0]
 80032e4:	2b12      	cmp	r3, #18
 80032e6:	d10b      	bne.n	8003300 <HAL_ADC_ConfigChannel+0x1d8>
  {
    /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 80032e8:	68fb      	ldr	r3, [r7, #12]
 80032ea:	685b      	ldr	r3, [r3, #4]
 80032ec:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 80032f0:	68fb      	ldr	r3, [r7, #12]
 80032f2:	605a      	str	r2, [r3, #4]
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 80032f4:	68fb      	ldr	r3, [r7, #12]
 80032f6:	685b      	ldr	r3, [r3, #4]
 80032f8:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 80032fc:	68fb      	ldr	r3, [r7, #12]
 80032fe:	605a      	str	r2, [r3, #4]
  }

  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	681b      	ldr	r3, [r3, #0]
 8003304:	4a1d      	ldr	r2, [pc, #116]	@ (800337c <HAL_ADC_ConfigChannel+0x254>)
 8003306:	4293      	cmp	r3, r2
 8003308:	d12b      	bne.n	8003362 <HAL_ADC_ConfigChannel+0x23a>
 800330a:	683b      	ldr	r3, [r7, #0]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	4a1c      	ldr	r2, [pc, #112]	@ (8003380 <HAL_ADC_ConfigChannel+0x258>)
 8003310:	4293      	cmp	r3, r2
 8003312:	d003      	beq.n	800331c <HAL_ADC_ConfigChannel+0x1f4>
 8003314:	683b      	ldr	r3, [r7, #0]
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	2b11      	cmp	r3, #17
 800331a:	d122      	bne.n	8003362 <HAL_ADC_ConfigChannel+0x23a>
  {
    /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800331c:	68fb      	ldr	r3, [r7, #12]
 800331e:	685b      	ldr	r3, [r3, #4]
 8003320:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8003324:	68fb      	ldr	r3, [r7, #12]
 8003326:	605a      	str	r2, [r3, #4]
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8003328:	68fb      	ldr	r3, [r7, #12]
 800332a:	685b      	ldr	r3, [r3, #4]
 800332c:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 8003330:	68fb      	ldr	r3, [r7, #12]
 8003332:	605a      	str	r2, [r3, #4]

    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8003334:	683b      	ldr	r3, [r7, #0]
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	4a11      	ldr	r2, [pc, #68]	@ (8003380 <HAL_ADC_ConfigChannel+0x258>)
 800333a:	4293      	cmp	r3, r2
 800333c:	d111      	bne.n	8003362 <HAL_ADC_ConfigChannel+0x23a>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800333e:	4b11      	ldr	r3, [pc, #68]	@ (8003384 <HAL_ADC_ConfigChannel+0x25c>)
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	4a11      	ldr	r2, [pc, #68]	@ (8003388 <HAL_ADC_ConfigChannel+0x260>)
 8003344:	fba2 2303 	umull	r2, r3, r2, r3
 8003348:	0c9a      	lsrs	r2, r3, #18
 800334a:	4613      	mov	r3, r2
 800334c:	009b      	lsls	r3, r3, #2
 800334e:	4413      	add	r3, r2
 8003350:	005b      	lsls	r3, r3, #1
 8003352:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 8003354:	e002      	b.n	800335c <HAL_ADC_ConfigChannel+0x234>
      {
        counter--;
 8003356:	68bb      	ldr	r3, [r7, #8]
 8003358:	3b01      	subs	r3, #1
 800335a:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 800335c:	68bb      	ldr	r3, [r7, #8]
 800335e:	2b00      	cmp	r3, #0
 8003360:	d1f9      	bne.n	8003356 <HAL_ADC_ConfigChannel+0x22e>
      }
    }
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	2200      	movs	r2, #0
 8003366:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return HAL_OK;
 800336a:	2300      	movs	r3, #0
}
 800336c:	4618      	mov	r0, r3
 800336e:	3714      	adds	r7, #20
 8003370:	46bd      	mov	sp, r7
 8003372:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003376:	4770      	bx	lr
 8003378:	40012300 	.word	0x40012300
 800337c:	40012000 	.word	0x40012000
 8003380:	10000012 	.word	0x10000012
 8003384:	20000018 	.word	0x20000018
 8003388:	431bde83 	.word	0x431bde83

0800338c <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef *hadc)
{
 800338c:	b480      	push	{r7}
 800338e:	b085      	sub	sp, #20
 8003390:	af00      	add	r7, sp, #0
 8003392:	6078      	str	r0, [r7, #4]

  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8003394:	4b79      	ldr	r3, [pc, #484]	@ (800357c <ADC_Init+0x1f0>)
 8003396:	60fb      	str	r3, [r7, #12]

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8003398:	68fb      	ldr	r3, [r7, #12]
 800339a:	685b      	ldr	r3, [r3, #4]
 800339c:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 80033a0:	68fb      	ldr	r3, [r7, #12]
 80033a2:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 80033a4:	68fb      	ldr	r3, [r7, #12]
 80033a6:	685a      	ldr	r2, [r3, #4]
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	685b      	ldr	r3, [r3, #4]
 80033ac:	431a      	orrs	r2, r3
 80033ae:	68fb      	ldr	r3, [r7, #12]
 80033b0:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80033b2:	687b      	ldr	r3, [r7, #4]
 80033b4:	681b      	ldr	r3, [r3, #0]
 80033b6:	685a      	ldr	r2, [r3, #4]
 80033b8:	687b      	ldr	r3, [r7, #4]
 80033ba:	681b      	ldr	r3, [r3, #0]
 80033bc:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80033c0:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80033c2:	687b      	ldr	r3, [r7, #4]
 80033c4:	681b      	ldr	r3, [r3, #0]
 80033c6:	6859      	ldr	r1, [r3, #4]
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	691b      	ldr	r3, [r3, #16]
 80033cc:	021a      	lsls	r2, r3, #8
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	681b      	ldr	r3, [r3, #0]
 80033d2:	430a      	orrs	r2, r1
 80033d4:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	681b      	ldr	r3, [r3, #0]
 80033da:	685a      	ldr	r2, [r3, #4]
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 80033e4:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	6859      	ldr	r1, [r3, #4]
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	689a      	ldr	r2, [r3, #8]
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	681b      	ldr	r3, [r3, #0]
 80033f4:	430a      	orrs	r2, r1
 80033f6:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	689a      	ldr	r2, [r3, #8]
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	681b      	ldr	r3, [r3, #0]
 8003402:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003406:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	6899      	ldr	r1, [r3, #8]
 800340e:	687b      	ldr	r3, [r7, #4]
 8003410:	68da      	ldr	r2, [r3, #12]
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	681b      	ldr	r3, [r3, #0]
 8003416:	430a      	orrs	r2, r1
 8003418:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800341e:	4a58      	ldr	r2, [pc, #352]	@ (8003580 <ADC_Init+0x1f4>)
 8003420:	4293      	cmp	r3, r2
 8003422:	d022      	beq.n	800346a <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	681b      	ldr	r3, [r3, #0]
 8003428:	689a      	ldr	r2, [r3, #8]
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003432:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8003434:	687b      	ldr	r3, [r7, #4]
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	6899      	ldr	r1, [r3, #8]
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	430a      	orrs	r2, r1
 8003444:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	689a      	ldr	r2, [r3, #8]
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	681b      	ldr	r3, [r3, #0]
 8003450:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003454:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	681b      	ldr	r3, [r3, #0]
 800345a:	6899      	ldr	r1, [r3, #8]
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	430a      	orrs	r2, r1
 8003466:	609a      	str	r2, [r3, #8]
 8003468:	e00f      	b.n	800348a <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	689a      	ldr	r2, [r3, #8]
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	681b      	ldr	r3, [r3, #0]
 8003474:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003478:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800347a:	687b      	ldr	r3, [r7, #4]
 800347c:	681b      	ldr	r3, [r3, #0]
 800347e:	689a      	ldr	r2, [r3, #8]
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	681b      	ldr	r3, [r3, #0]
 8003484:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003488:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	681b      	ldr	r3, [r3, #0]
 800348e:	689a      	ldr	r2, [r3, #8]
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	f022 0202 	bic.w	r2, r2, #2
 8003498:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	681b      	ldr	r3, [r3, #0]
 800349e:	6899      	ldr	r1, [r3, #8]
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	7e1b      	ldrb	r3, [r3, #24]
 80034a4:	005a      	lsls	r2, r3, #1
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	681b      	ldr	r3, [r3, #0]
 80034aa:	430a      	orrs	r2, r1
 80034ac:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	f893 3020 	ldrb.w	r3, [r3, #32]
 80034b4:	2b00      	cmp	r3, #0
 80034b6:	d01b      	beq.n	80034f0 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	681b      	ldr	r3, [r3, #0]
 80034bc:	685a      	ldr	r2, [r3, #4]
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	681b      	ldr	r3, [r3, #0]
 80034c2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80034c6:	605a      	str	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	681b      	ldr	r3, [r3, #0]
 80034cc:	685a      	ldr	r2, [r3, #4]
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	681b      	ldr	r3, [r3, #0]
 80034d2:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 80034d6:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80034d8:	687b      	ldr	r3, [r7, #4]
 80034da:	681b      	ldr	r3, [r3, #0]
 80034dc:	6859      	ldr	r1, [r3, #4]
 80034de:	687b      	ldr	r3, [r7, #4]
 80034e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034e2:	3b01      	subs	r3, #1
 80034e4:	035a      	lsls	r2, r3, #13
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	681b      	ldr	r3, [r3, #0]
 80034ea:	430a      	orrs	r2, r1
 80034ec:	605a      	str	r2, [r3, #4]
 80034ee:	e007      	b.n	8003500 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	681b      	ldr	r3, [r3, #0]
 80034f4:	685a      	ldr	r2, [r3, #4]
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	681b      	ldr	r3, [r3, #0]
 80034fa:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80034fe:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	681b      	ldr	r3, [r3, #0]
 8003504:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	681b      	ldr	r3, [r3, #0]
 800350a:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800350e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	681b      	ldr	r3, [r3, #0]
 8003514:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	69db      	ldr	r3, [r3, #28]
 800351a:	3b01      	subs	r3, #1
 800351c:	051a      	lsls	r2, r3, #20
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	430a      	orrs	r2, r1
 8003524:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	681b      	ldr	r3, [r3, #0]
 800352a:	689a      	ldr	r2, [r3, #8]
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	681b      	ldr	r3, [r3, #0]
 8003530:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8003534:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	681b      	ldr	r3, [r3, #0]
 800353a:	6899      	ldr	r1, [r3, #8]
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8003542:	025a      	lsls	r2, r3, #9
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	430a      	orrs	r2, r1
 800354a:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	681b      	ldr	r3, [r3, #0]
 8003550:	689a      	ldr	r2, [r3, #8]
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800355a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	6899      	ldr	r1, [r3, #8]
 8003562:	687b      	ldr	r3, [r7, #4]
 8003564:	695b      	ldr	r3, [r3, #20]
 8003566:	029a      	lsls	r2, r3, #10
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	681b      	ldr	r3, [r3, #0]
 800356c:	430a      	orrs	r2, r1
 800356e:	609a      	str	r2, [r3, #8]
}
 8003570:	bf00      	nop
 8003572:	3714      	adds	r7, #20
 8003574:	46bd      	mov	sp, r7
 8003576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800357a:	4770      	bx	lr
 800357c:	40012300 	.word	0x40012300
 8003580:	0f000001 	.word	0x0f000001

08003584 <__NVIC_SetPriorityGrouping>:
{
 8003584:	b480      	push	{r7}
 8003586:	b085      	sub	sp, #20
 8003588:	af00      	add	r7, sp, #0
 800358a:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	f003 0307 	and.w	r3, r3, #7
 8003592:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003594:	4b0c      	ldr	r3, [pc, #48]	@ (80035c8 <__NVIC_SetPriorityGrouping+0x44>)
 8003596:	68db      	ldr	r3, [r3, #12]
 8003598:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800359a:	68ba      	ldr	r2, [r7, #8]
 800359c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80035a0:	4013      	ands	r3, r2
 80035a2:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80035a4:	68fb      	ldr	r3, [r7, #12]
 80035a6:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80035a8:	68bb      	ldr	r3, [r7, #8]
 80035aa:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80035ac:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80035b0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80035b4:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80035b6:	4a04      	ldr	r2, [pc, #16]	@ (80035c8 <__NVIC_SetPriorityGrouping+0x44>)
 80035b8:	68bb      	ldr	r3, [r7, #8]
 80035ba:	60d3      	str	r3, [r2, #12]
}
 80035bc:	bf00      	nop
 80035be:	3714      	adds	r7, #20
 80035c0:	46bd      	mov	sp, r7
 80035c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035c6:	4770      	bx	lr
 80035c8:	e000ed00 	.word	0xe000ed00

080035cc <__NVIC_GetPriorityGrouping>:
{
 80035cc:	b480      	push	{r7}
 80035ce:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80035d0:	4b04      	ldr	r3, [pc, #16]	@ (80035e4 <__NVIC_GetPriorityGrouping+0x18>)
 80035d2:	68db      	ldr	r3, [r3, #12]
 80035d4:	0a1b      	lsrs	r3, r3, #8
 80035d6:	f003 0307 	and.w	r3, r3, #7
}
 80035da:	4618      	mov	r0, r3
 80035dc:	46bd      	mov	sp, r7
 80035de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035e2:	4770      	bx	lr
 80035e4:	e000ed00 	.word	0xe000ed00

080035e8 <__NVIC_EnableIRQ>:
{
 80035e8:	b480      	push	{r7}
 80035ea:	b083      	sub	sp, #12
 80035ec:	af00      	add	r7, sp, #0
 80035ee:	4603      	mov	r3, r0
 80035f0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80035f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035f6:	2b00      	cmp	r3, #0
 80035f8:	db0b      	blt.n	8003612 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80035fa:	79fb      	ldrb	r3, [r7, #7]
 80035fc:	f003 021f 	and.w	r2, r3, #31
 8003600:	4907      	ldr	r1, [pc, #28]	@ (8003620 <__NVIC_EnableIRQ+0x38>)
 8003602:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003606:	095b      	lsrs	r3, r3, #5
 8003608:	2001      	movs	r0, #1
 800360a:	fa00 f202 	lsl.w	r2, r0, r2
 800360e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8003612:	bf00      	nop
 8003614:	370c      	adds	r7, #12
 8003616:	46bd      	mov	sp, r7
 8003618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800361c:	4770      	bx	lr
 800361e:	bf00      	nop
 8003620:	e000e100 	.word	0xe000e100

08003624 <__NVIC_DisableIRQ>:
{
 8003624:	b480      	push	{r7}
 8003626:	b083      	sub	sp, #12
 8003628:	af00      	add	r7, sp, #0
 800362a:	4603      	mov	r3, r0
 800362c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800362e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003632:	2b00      	cmp	r3, #0
 8003634:	db12      	blt.n	800365c <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003636:	79fb      	ldrb	r3, [r7, #7]
 8003638:	f003 021f 	and.w	r2, r3, #31
 800363c:	490a      	ldr	r1, [pc, #40]	@ (8003668 <__NVIC_DisableIRQ+0x44>)
 800363e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003642:	095b      	lsrs	r3, r3, #5
 8003644:	2001      	movs	r0, #1
 8003646:	fa00 f202 	lsl.w	r2, r0, r2
 800364a:	3320      	adds	r3, #32
 800364c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003650:	f3bf 8f4f 	dsb	sy
}
 8003654:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8003656:	f3bf 8f6f 	isb	sy
}
 800365a:	bf00      	nop
}
 800365c:	bf00      	nop
 800365e:	370c      	adds	r7, #12
 8003660:	46bd      	mov	sp, r7
 8003662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003666:	4770      	bx	lr
 8003668:	e000e100 	.word	0xe000e100

0800366c <__NVIC_ClearPendingIRQ>:
{
 800366c:	b480      	push	{r7}
 800366e:	b083      	sub	sp, #12
 8003670:	af00      	add	r7, sp, #0
 8003672:	4603      	mov	r3, r0
 8003674:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003676:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800367a:	2b00      	cmp	r3, #0
 800367c:	db0c      	blt.n	8003698 <__NVIC_ClearPendingIRQ+0x2c>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800367e:	79fb      	ldrb	r3, [r7, #7]
 8003680:	f003 021f 	and.w	r2, r3, #31
 8003684:	4907      	ldr	r1, [pc, #28]	@ (80036a4 <__NVIC_ClearPendingIRQ+0x38>)
 8003686:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800368a:	095b      	lsrs	r3, r3, #5
 800368c:	2001      	movs	r0, #1
 800368e:	fa00 f202 	lsl.w	r2, r0, r2
 8003692:	3360      	adds	r3, #96	@ 0x60
 8003694:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8003698:	bf00      	nop
 800369a:	370c      	adds	r7, #12
 800369c:	46bd      	mov	sp, r7
 800369e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036a2:	4770      	bx	lr
 80036a4:	e000e100 	.word	0xe000e100

080036a8 <__NVIC_SetPriority>:
{
 80036a8:	b480      	push	{r7}
 80036aa:	b083      	sub	sp, #12
 80036ac:	af00      	add	r7, sp, #0
 80036ae:	4603      	mov	r3, r0
 80036b0:	6039      	str	r1, [r7, #0]
 80036b2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80036b4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80036b8:	2b00      	cmp	r3, #0
 80036ba:	db0a      	blt.n	80036d2 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80036bc:	683b      	ldr	r3, [r7, #0]
 80036be:	b2da      	uxtb	r2, r3
 80036c0:	490c      	ldr	r1, [pc, #48]	@ (80036f4 <__NVIC_SetPriority+0x4c>)
 80036c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80036c6:	0112      	lsls	r2, r2, #4
 80036c8:	b2d2      	uxtb	r2, r2
 80036ca:	440b      	add	r3, r1
 80036cc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
 80036d0:	e00a      	b.n	80036e8 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80036d2:	683b      	ldr	r3, [r7, #0]
 80036d4:	b2da      	uxtb	r2, r3
 80036d6:	4908      	ldr	r1, [pc, #32]	@ (80036f8 <__NVIC_SetPriority+0x50>)
 80036d8:	79fb      	ldrb	r3, [r7, #7]
 80036da:	f003 030f 	and.w	r3, r3, #15
 80036de:	3b04      	subs	r3, #4
 80036e0:	0112      	lsls	r2, r2, #4
 80036e2:	b2d2      	uxtb	r2, r2
 80036e4:	440b      	add	r3, r1
 80036e6:	761a      	strb	r2, [r3, #24]
}
 80036e8:	bf00      	nop
 80036ea:	370c      	adds	r7, #12
 80036ec:	46bd      	mov	sp, r7
 80036ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036f2:	4770      	bx	lr
 80036f4:	e000e100 	.word	0xe000e100
 80036f8:	e000ed00 	.word	0xe000ed00

080036fc <NVIC_EncodePriority>:
{
 80036fc:	b480      	push	{r7}
 80036fe:	b089      	sub	sp, #36	@ 0x24
 8003700:	af00      	add	r7, sp, #0
 8003702:	60f8      	str	r0, [r7, #12]
 8003704:	60b9      	str	r1, [r7, #8]
 8003706:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8003708:	68fb      	ldr	r3, [r7, #12]
 800370a:	f003 0307 	and.w	r3, r3, #7
 800370e:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003710:	69fb      	ldr	r3, [r7, #28]
 8003712:	f1c3 0307 	rsb	r3, r3, #7
 8003716:	2b04      	cmp	r3, #4
 8003718:	bf28      	it	cs
 800371a:	2304      	movcs	r3, #4
 800371c:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800371e:	69fb      	ldr	r3, [r7, #28]
 8003720:	3304      	adds	r3, #4
 8003722:	2b06      	cmp	r3, #6
 8003724:	d902      	bls.n	800372c <NVIC_EncodePriority+0x30>
 8003726:	69fb      	ldr	r3, [r7, #28]
 8003728:	3b03      	subs	r3, #3
 800372a:	e000      	b.n	800372e <NVIC_EncodePriority+0x32>
 800372c:	2300      	movs	r3, #0
 800372e:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003730:	f04f 32ff 	mov.w	r2, #4294967295
 8003734:	69bb      	ldr	r3, [r7, #24]
 8003736:	fa02 f303 	lsl.w	r3, r2, r3
 800373a:	43da      	mvns	r2, r3
 800373c:	68bb      	ldr	r3, [r7, #8]
 800373e:	401a      	ands	r2, r3
 8003740:	697b      	ldr	r3, [r7, #20]
 8003742:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003744:	f04f 31ff 	mov.w	r1, #4294967295
 8003748:	697b      	ldr	r3, [r7, #20]
 800374a:	fa01 f303 	lsl.w	r3, r1, r3
 800374e:	43d9      	mvns	r1, r3
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003754:	4313      	orrs	r3, r2
}
 8003756:	4618      	mov	r0, r3
 8003758:	3724      	adds	r7, #36	@ 0x24
 800375a:	46bd      	mov	sp, r7
 800375c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003760:	4770      	bx	lr
	...

08003764 <SysTick_Config>:
{
 8003764:	b580      	push	{r7, lr}
 8003766:	b082      	sub	sp, #8
 8003768:	af00      	add	r7, sp, #0
 800376a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	3b01      	subs	r3, #1
 8003770:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003774:	d301      	bcc.n	800377a <SysTick_Config+0x16>
    return (1UL);                                                   /* Reload value impossible */
 8003776:	2301      	movs	r3, #1
 8003778:	e00f      	b.n	800379a <SysTick_Config+0x36>
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800377a:	4a0a      	ldr	r2, [pc, #40]	@ (80037a4 <SysTick_Config+0x40>)
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	3b01      	subs	r3, #1
 8003780:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003782:	210f      	movs	r1, #15
 8003784:	f04f 30ff 	mov.w	r0, #4294967295
 8003788:	f7ff ff8e 	bl	80036a8 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800378c:	4b05      	ldr	r3, [pc, #20]	@ (80037a4 <SysTick_Config+0x40>)
 800378e:	2200      	movs	r2, #0
 8003790:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003792:	4b04      	ldr	r3, [pc, #16]	@ (80037a4 <SysTick_Config+0x40>)
 8003794:	2207      	movs	r2, #7
 8003796:	601a      	str	r2, [r3, #0]
  return (0UL);                                                     /* Function successful */
 8003798:	2300      	movs	r3, #0
}
 800379a:	4618      	mov	r0, r3
 800379c:	3708      	adds	r7, #8
 800379e:	46bd      	mov	sp, r7
 80037a0:	bd80      	pop	{r7, pc}
 80037a2:	bf00      	nop
 80037a4:	e000e010 	.word	0xe000e010

080037a8 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80037a8:	b580      	push	{r7, lr}
 80037aa:	b082      	sub	sp, #8
 80037ac:	af00      	add	r7, sp, #0
 80037ae:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80037b0:	6878      	ldr	r0, [r7, #4]
 80037b2:	f7ff fee7 	bl	8003584 <__NVIC_SetPriorityGrouping>
}
 80037b6:	bf00      	nop
 80037b8:	3708      	adds	r7, #8
 80037ba:	46bd      	mov	sp, r7
 80037bc:	bd80      	pop	{r7, pc}

080037be <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80037be:	b580      	push	{r7, lr}
 80037c0:	b086      	sub	sp, #24
 80037c2:	af00      	add	r7, sp, #0
 80037c4:	4603      	mov	r3, r0
 80037c6:	60b9      	str	r1, [r7, #8]
 80037c8:	607a      	str	r2, [r7, #4]
 80037ca:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80037cc:	2300      	movs	r3, #0
 80037ce:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80037d0:	f7ff fefc 	bl	80035cc <__NVIC_GetPriorityGrouping>
 80037d4:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80037d6:	687a      	ldr	r2, [r7, #4]
 80037d8:	68b9      	ldr	r1, [r7, #8]
 80037da:	6978      	ldr	r0, [r7, #20]
 80037dc:	f7ff ff8e 	bl	80036fc <NVIC_EncodePriority>
 80037e0:	4602      	mov	r2, r0
 80037e2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80037e6:	4611      	mov	r1, r2
 80037e8:	4618      	mov	r0, r3
 80037ea:	f7ff ff5d 	bl	80036a8 <__NVIC_SetPriority>
}
 80037ee:	bf00      	nop
 80037f0:	3718      	adds	r7, #24
 80037f2:	46bd      	mov	sp, r7
 80037f4:	bd80      	pop	{r7, pc}

080037f6 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80037f6:	b580      	push	{r7, lr}
 80037f8:	b082      	sub	sp, #8
 80037fa:	af00      	add	r7, sp, #0
 80037fc:	4603      	mov	r3, r0
 80037fe:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8003800:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003804:	4618      	mov	r0, r3
 8003806:	f7ff feef 	bl	80035e8 <__NVIC_EnableIRQ>
}
 800380a:	bf00      	nop
 800380c:	3708      	adds	r7, #8
 800380e:	46bd      	mov	sp, r7
 8003810:	bd80      	pop	{r7, pc}

08003812 <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8003812:	b580      	push	{r7, lr}
 8003814:	b082      	sub	sp, #8
 8003816:	af00      	add	r7, sp, #0
 8003818:	4603      	mov	r3, r0
 800381a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 800381c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003820:	4618      	mov	r0, r3
 8003822:	f7ff feff 	bl	8003624 <__NVIC_DisableIRQ>
}
 8003826:	bf00      	nop
 8003828:	3708      	adds	r7, #8
 800382a:	46bd      	mov	sp, r7
 800382c:	bd80      	pop	{r7, pc}

0800382e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800382e:	b580      	push	{r7, lr}
 8003830:	b082      	sub	sp, #8
 8003832:	af00      	add	r7, sp, #0
 8003834:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8003836:	6878      	ldr	r0, [r7, #4]
 8003838:	f7ff ff94 	bl	8003764 <SysTick_Config>
 800383c:	4603      	mov	r3, r0
}
 800383e:	4618      	mov	r0, r3
 8003840:	3708      	adds	r7, #8
 8003842:	46bd      	mov	sp, r7
 8003844:	bd80      	pop	{r7, pc}

08003846 <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8003846:	b580      	push	{r7, lr}
 8003848:	b082      	sub	sp, #8
 800384a:	af00      	add	r7, sp, #0
 800384c:	4603      	mov	r3, r0
 800384e:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 8003850:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003854:	4618      	mov	r0, r3
 8003856:	f7ff ff09 	bl	800366c <__NVIC_ClearPendingIRQ>
}
 800385a:	bf00      	nop
 800385c:	3708      	adds	r7, #8
 800385e:	46bd      	mov	sp, r7
 8003860:	bd80      	pop	{r7, pc}

08003862 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003862:	b580      	push	{r7, lr}
 8003864:	b082      	sub	sp, #8
 8003866:	af00      	add	r7, sp, #0
 8003868:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	2b00      	cmp	r3, #0
 800386e:	d101      	bne.n	8003874 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8003870:	2301      	movs	r3, #1
 8003872:	e00e      	b.n	8003892 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	795b      	ldrb	r3, [r3, #5]
 8003878:	b2db      	uxtb	r3, r3
 800387a:	2b00      	cmp	r3, #0
 800387c:	d105      	bne.n	800388a <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	2200      	movs	r2, #0
 8003882:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003884:	6878      	ldr	r0, [r7, #4]
 8003886:	f7fd fc21 	bl	80010cc <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	2201      	movs	r2, #1
 800388e:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8003890:	2300      	movs	r3, #0
}
 8003892:	4618      	mov	r0, r3
 8003894:	3708      	adds	r7, #8
 8003896:	46bd      	mov	sp, r7
 8003898:	bd80      	pop	{r7, pc}
	...

0800389c <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 800389c:	b580      	push	{r7, lr}
 800389e:	b086      	sub	sp, #24
 80038a0:	af00      	add	r7, sp, #0
 80038a2:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 80038a4:	2300      	movs	r3, #0
 80038a6:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 80038a8:	f7ff fa60 	bl	8002d6c <HAL_GetTick>
 80038ac:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 80038ae:	687b      	ldr	r3, [r7, #4]
 80038b0:	2b00      	cmp	r3, #0
 80038b2:	d101      	bne.n	80038b8 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 80038b4:	2301      	movs	r3, #1
 80038b6:	e099      	b.n	80039ec <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	2202      	movs	r2, #2
 80038bc:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	2200      	movs	r2, #0
 80038c4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	681b      	ldr	r3, [r3, #0]
 80038cc:	681a      	ldr	r2, [r3, #0]
 80038ce:	687b      	ldr	r3, [r7, #4]
 80038d0:	681b      	ldr	r3, [r3, #0]
 80038d2:	f022 0201 	bic.w	r2, r2, #1
 80038d6:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80038d8:	e00f      	b.n	80038fa <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80038da:	f7ff fa47 	bl	8002d6c <HAL_GetTick>
 80038de:	4602      	mov	r2, r0
 80038e0:	693b      	ldr	r3, [r7, #16]
 80038e2:	1ad3      	subs	r3, r2, r3
 80038e4:	2b05      	cmp	r3, #5
 80038e6:	d908      	bls.n	80038fa <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	2220      	movs	r2, #32
 80038ec:	655a      	str	r2, [r3, #84]	@ 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	2203      	movs	r2, #3
 80038f2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
      
      return HAL_TIMEOUT;
 80038f6:	2303      	movs	r3, #3
 80038f8:	e078      	b.n	80039ec <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	f003 0301 	and.w	r3, r3, #1
 8003904:	2b00      	cmp	r3, #0
 8003906:	d1e8      	bne.n	80038da <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	681b      	ldr	r3, [r3, #0]
 800390e:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003910:	697a      	ldr	r2, [r7, #20]
 8003912:	4b38      	ldr	r3, [pc, #224]	@ (80039f4 <HAL_DMA_Init+0x158>)
 8003914:	4013      	ands	r3, r2
 8003916:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	685a      	ldr	r2, [r3, #4]
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	689b      	ldr	r3, [r3, #8]
 8003920:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003926:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	691b      	ldr	r3, [r3, #16]
 800392c:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003932:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	699b      	ldr	r3, [r3, #24]
 8003938:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800393e:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	6a1b      	ldr	r3, [r3, #32]
 8003944:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003946:	697a      	ldr	r2, [r7, #20]
 8003948:	4313      	orrs	r3, r2
 800394a:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003950:	2b04      	cmp	r3, #4
 8003952:	d107      	bne.n	8003964 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800395c:	4313      	orrs	r3, r2
 800395e:	697a      	ldr	r2, [r7, #20]
 8003960:	4313      	orrs	r3, r2
 8003962:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	681b      	ldr	r3, [r3, #0]
 8003968:	697a      	ldr	r2, [r7, #20]
 800396a:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	681b      	ldr	r3, [r3, #0]
 8003970:	695b      	ldr	r3, [r3, #20]
 8003972:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003974:	697b      	ldr	r3, [r7, #20]
 8003976:	f023 0307 	bic.w	r3, r3, #7
 800397a:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003980:	697a      	ldr	r2, [r7, #20]
 8003982:	4313      	orrs	r3, r2
 8003984:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800398a:	2b04      	cmp	r3, #4
 800398c:	d117      	bne.n	80039be <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 800398e:	687b      	ldr	r3, [r7, #4]
 8003990:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003992:	697a      	ldr	r2, [r7, #20]
 8003994:	4313      	orrs	r3, r2
 8003996:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800399c:	2b00      	cmp	r3, #0
 800399e:	d00e      	beq.n	80039be <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 80039a0:	6878      	ldr	r0, [r7, #4]
 80039a2:	f000 fb0d 	bl	8003fc0 <DMA_CheckFifoParam>
 80039a6:	4603      	mov	r3, r0
 80039a8:	2b00      	cmp	r3, #0
 80039aa:	d008      	beq.n	80039be <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	2240      	movs	r2, #64	@ 0x40
 80039b0:	655a      	str	r2, [r3, #84]	@ 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	2201      	movs	r2, #1
 80039b6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
        
        return HAL_ERROR; 
 80039ba:	2301      	movs	r3, #1
 80039bc:	e016      	b.n	80039ec <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	681b      	ldr	r3, [r3, #0]
 80039c2:	697a      	ldr	r2, [r7, #20]
 80039c4:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80039c6:	6878      	ldr	r0, [r7, #4]
 80039c8:	f000 fac4 	bl	8003f54 <DMA_CalcBaseAndBitshift>
 80039cc:	4603      	mov	r3, r0
 80039ce:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80039d0:	687b      	ldr	r3, [r7, #4]
 80039d2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039d4:	223f      	movs	r2, #63	@ 0x3f
 80039d6:	409a      	lsls	r2, r3
 80039d8:	68fb      	ldr	r3, [r7, #12]
 80039da:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80039dc:	687b      	ldr	r3, [r7, #4]
 80039de:	2200      	movs	r2, #0
 80039e0:	655a      	str	r2, [r3, #84]	@ 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	2201      	movs	r2, #1
 80039e6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  return HAL_OK;
 80039ea:	2300      	movs	r3, #0
}
 80039ec:	4618      	mov	r0, r3
 80039ee:	3718      	adds	r7, #24
 80039f0:	46bd      	mov	sp, r7
 80039f2:	bd80      	pop	{r7, pc}
 80039f4:	f010803f 	.word	0xf010803f

080039f8 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 80039f8:	b580      	push	{r7, lr}
 80039fa:	b086      	sub	sp, #24
 80039fc:	af00      	add	r7, sp, #0
 80039fe:	60f8      	str	r0, [r7, #12]
 8003a00:	60b9      	str	r1, [r7, #8]
 8003a02:	607a      	str	r2, [r7, #4]
 8003a04:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8003a06:	2300      	movs	r3, #0
 8003a08:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003a0a:	68fb      	ldr	r3, [r7, #12]
 8003a0c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003a0e:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 8003a10:	68fb      	ldr	r3, [r7, #12]
 8003a12:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8003a16:	2b01      	cmp	r3, #1
 8003a18:	d101      	bne.n	8003a1e <HAL_DMA_Start_IT+0x26>
 8003a1a:	2302      	movs	r3, #2
 8003a1c:	e040      	b.n	8003aa0 <HAL_DMA_Start_IT+0xa8>
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	2201      	movs	r2, #1
 8003a22:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 8003a26:	68fb      	ldr	r3, [r7, #12]
 8003a28:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003a2c:	b2db      	uxtb	r3, r3
 8003a2e:	2b01      	cmp	r3, #1
 8003a30:	d12f      	bne.n	8003a92 <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8003a32:	68fb      	ldr	r3, [r7, #12]
 8003a34:	2202      	movs	r2, #2
 8003a36:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003a3a:	68fb      	ldr	r3, [r7, #12]
 8003a3c:	2200      	movs	r2, #0
 8003a3e:	655a      	str	r2, [r3, #84]	@ 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 8003a40:	683b      	ldr	r3, [r7, #0]
 8003a42:	687a      	ldr	r2, [r7, #4]
 8003a44:	68b9      	ldr	r1, [r7, #8]
 8003a46:	68f8      	ldr	r0, [r7, #12]
 8003a48:	f000 fa56 	bl	8003ef8 <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003a4c:	68fb      	ldr	r3, [r7, #12]
 8003a4e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a50:	223f      	movs	r2, #63	@ 0x3f
 8003a52:	409a      	lsls	r2, r3
 8003a54:	693b      	ldr	r3, [r7, #16]
 8003a56:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8003a58:	68fb      	ldr	r3, [r7, #12]
 8003a5a:	681b      	ldr	r3, [r3, #0]
 8003a5c:	681a      	ldr	r2, [r3, #0]
 8003a5e:	68fb      	ldr	r3, [r7, #12]
 8003a60:	681b      	ldr	r3, [r3, #0]
 8003a62:	f042 0216 	orr.w	r2, r2, #22
 8003a66:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 8003a68:	68fb      	ldr	r3, [r7, #12]
 8003a6a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a6c:	2b00      	cmp	r3, #0
 8003a6e:	d007      	beq.n	8003a80 <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 8003a70:	68fb      	ldr	r3, [r7, #12]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	681a      	ldr	r2, [r3, #0]
 8003a76:	68fb      	ldr	r3, [r7, #12]
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	f042 0208 	orr.w	r2, r2, #8
 8003a7e:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 8003a80:	68fb      	ldr	r3, [r7, #12]
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	681a      	ldr	r2, [r3, #0]
 8003a86:	68fb      	ldr	r3, [r7, #12]
 8003a88:	681b      	ldr	r3, [r3, #0]
 8003a8a:	f042 0201 	orr.w	r2, r2, #1
 8003a8e:	601a      	str	r2, [r3, #0]
 8003a90:	e005      	b.n	8003a9e <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 8003a92:	68fb      	ldr	r3, [r7, #12]
 8003a94:	2200      	movs	r2, #0
 8003a96:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 8003a9a:	2302      	movs	r3, #2
 8003a9c:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 8003a9e:	7dfb      	ldrb	r3, [r7, #23]
}
 8003aa0:	4618      	mov	r0, r3
 8003aa2:	3718      	adds	r7, #24
 8003aa4:	46bd      	mov	sp, r7
 8003aa6:	bd80      	pop	{r7, pc}

08003aa8 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8003aa8:	b580      	push	{r7, lr}
 8003aaa:	b084      	sub	sp, #16
 8003aac:	af00      	add	r7, sp, #0
 8003aae:	6078      	str	r0, [r7, #4]
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003ab4:	60fb      	str	r3, [r7, #12]
  
  uint32_t tickstart = HAL_GetTick();
 8003ab6:	f7ff f959 	bl	8002d6c <HAL_GetTick>
 8003aba:	60b8      	str	r0, [r7, #8]
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003ac2:	b2db      	uxtb	r3, r3
 8003ac4:	2b02      	cmp	r3, #2
 8003ac6:	d008      	beq.n	8003ada <HAL_DMA_Abort+0x32>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	2280      	movs	r2, #128	@ 0x80
 8003acc:	655a      	str	r2, [r3, #84]	@ 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	2200      	movs	r2, #0
 8003ad2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    
    return HAL_ERROR;
 8003ad6:	2301      	movs	r3, #1
 8003ad8:	e052      	b.n	8003b80 <HAL_DMA_Abort+0xd8>
  }
  else
  {
    /* Disable all the transfer interrupts */
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	681b      	ldr	r3, [r3, #0]
 8003ade:	681a      	ldr	r2, [r3, #0]
 8003ae0:	687b      	ldr	r3, [r7, #4]
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	f022 0216 	bic.w	r2, r2, #22
 8003ae8:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	695a      	ldr	r2, [r3, #20]
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003af8:	615a      	str	r2, [r3, #20]
    
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003afe:	2b00      	cmp	r3, #0
 8003b00:	d103      	bne.n	8003b0a <HAL_DMA_Abort+0x62>
 8003b02:	687b      	ldr	r3, [r7, #4]
 8003b04:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	d007      	beq.n	8003b1a <HAL_DMA_Abort+0x72>
    {
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	681b      	ldr	r3, [r3, #0]
 8003b0e:	681a      	ldr	r2, [r3, #0]
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	681b      	ldr	r3, [r3, #0]
 8003b14:	f022 0208 	bic.w	r2, r2, #8
 8003b18:	601a      	str	r2, [r3, #0]
    }
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8003b1a:	687b      	ldr	r3, [r7, #4]
 8003b1c:	681b      	ldr	r3, [r3, #0]
 8003b1e:	681a      	ldr	r2, [r3, #0]
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	f022 0201 	bic.w	r2, r2, #1
 8003b28:	601a      	str	r2, [r3, #0]
    
    /* Check if the DMA Stream is effectively disabled */
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003b2a:	e013      	b.n	8003b54 <HAL_DMA_Abort+0xac>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003b2c:	f7ff f91e 	bl	8002d6c <HAL_GetTick>
 8003b30:	4602      	mov	r2, r0
 8003b32:	68bb      	ldr	r3, [r7, #8]
 8003b34:	1ad3      	subs	r3, r2, r3
 8003b36:	2b05      	cmp	r3, #5
 8003b38:	d90c      	bls.n	8003b54 <HAL_DMA_Abort+0xac>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	2220      	movs	r2, #32
 8003b3e:	655a      	str	r2, [r3, #84]	@ 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003b40:	687b      	ldr	r3, [r7, #4]
 8003b42:	2203      	movs	r2, #3
 8003b44:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
        
        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	2200      	movs	r2, #0
 8003b4c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        
        return HAL_TIMEOUT;
 8003b50:	2303      	movs	r3, #3
 8003b52:	e015      	b.n	8003b80 <HAL_DMA_Abort+0xd8>
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	681b      	ldr	r3, [r3, #0]
 8003b5a:	f003 0301 	and.w	r3, r3, #1
 8003b5e:	2b00      	cmp	r3, #0
 8003b60:	d1e4      	bne.n	8003b2c <HAL_DMA_Abort+0x84>
      }
    }
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003b62:	687b      	ldr	r3, [r7, #4]
 8003b64:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b66:	223f      	movs	r2, #63	@ 0x3f
 8003b68:	409a      	lsls	r2, r3
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	609a      	str	r2, [r3, #8]
    
    /* Change the DMA state*/
    hdma->State = HAL_DMA_STATE_READY;
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	2201      	movs	r2, #1
 8003b72:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8003b76:	687b      	ldr	r3, [r7, #4]
 8003b78:	2200      	movs	r2, #0
 8003b7a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  }
  return HAL_OK;
 8003b7e:	2300      	movs	r3, #0
}
 8003b80:	4618      	mov	r0, r3
 8003b82:	3710      	adds	r7, #16
 8003b84:	46bd      	mov	sp, r7
 8003b86:	bd80      	pop	{r7, pc}

08003b88 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8003b88:	b480      	push	{r7}
 8003b8a:	b083      	sub	sp, #12
 8003b8c:	af00      	add	r7, sp, #0
 8003b8e:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003b96:	b2db      	uxtb	r3, r3
 8003b98:	2b02      	cmp	r3, #2
 8003b9a:	d004      	beq.n	8003ba6 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	2280      	movs	r2, #128	@ 0x80
 8003ba0:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_ERROR;
 8003ba2:	2301      	movs	r3, #1
 8003ba4:	e00c      	b.n	8003bc0 <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	2205      	movs	r2, #5
 8003baa:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	681b      	ldr	r3, [r3, #0]
 8003bb2:	681a      	ldr	r2, [r3, #0]
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	681b      	ldr	r3, [r3, #0]
 8003bb8:	f022 0201 	bic.w	r2, r2, #1
 8003bbc:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 8003bbe:	2300      	movs	r3, #0
}
 8003bc0:	4618      	mov	r0, r3
 8003bc2:	370c      	adds	r7, #12
 8003bc4:	46bd      	mov	sp, r7
 8003bc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bca:	4770      	bx	lr

08003bcc <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 8003bcc:	b580      	push	{r7, lr}
 8003bce:	b086      	sub	sp, #24
 8003bd0:	af00      	add	r7, sp, #0
 8003bd2:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 8003bd4:	2300      	movs	r3, #0
 8003bd6:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 8003bd8:	4b8e      	ldr	r3, [pc, #568]	@ (8003e14 <HAL_DMA_IRQHandler+0x248>)
 8003bda:	681b      	ldr	r3, [r3, #0]
 8003bdc:	4a8e      	ldr	r2, [pc, #568]	@ (8003e18 <HAL_DMA_IRQHandler+0x24c>)
 8003bde:	fba2 2303 	umull	r2, r3, r2, r3
 8003be2:	0a9b      	lsrs	r3, r3, #10
 8003be4:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003bea:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 8003bec:	693b      	ldr	r3, [r7, #16]
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003bf6:	2208      	movs	r2, #8
 8003bf8:	409a      	lsls	r2, r3
 8003bfa:	68fb      	ldr	r3, [r7, #12]
 8003bfc:	4013      	ands	r3, r2
 8003bfe:	2b00      	cmp	r3, #0
 8003c00:	d01a      	beq.n	8003c38 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	681b      	ldr	r3, [r3, #0]
 8003c08:	f003 0304 	and.w	r3, r3, #4
 8003c0c:	2b00      	cmp	r3, #0
 8003c0e:	d013      	beq.n	8003c38 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	681a      	ldr	r2, [r3, #0]
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	681b      	ldr	r3, [r3, #0]
 8003c1a:	f022 0204 	bic.w	r2, r2, #4
 8003c1e:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c24:	2208      	movs	r2, #8
 8003c26:	409a      	lsls	r2, r3
 8003c28:	693b      	ldr	r3, [r7, #16]
 8003c2a:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003c30:	f043 0201 	orr.w	r2, r3, #1
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c3c:	2201      	movs	r2, #1
 8003c3e:	409a      	lsls	r2, r3
 8003c40:	68fb      	ldr	r3, [r7, #12]
 8003c42:	4013      	ands	r3, r2
 8003c44:	2b00      	cmp	r3, #0
 8003c46:	d012      	beq.n	8003c6e <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	681b      	ldr	r3, [r3, #0]
 8003c4c:	695b      	ldr	r3, [r3, #20]
 8003c4e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003c52:	2b00      	cmp	r3, #0
 8003c54:	d00b      	beq.n	8003c6e <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c5a:	2201      	movs	r2, #1
 8003c5c:	409a      	lsls	r2, r3
 8003c5e:	693b      	ldr	r3, [r7, #16]
 8003c60:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8003c62:	687b      	ldr	r3, [r7, #4]
 8003c64:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003c66:	f043 0202 	orr.w	r2, r3, #2
 8003c6a:	687b      	ldr	r3, [r7, #4]
 8003c6c:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c72:	2204      	movs	r2, #4
 8003c74:	409a      	lsls	r2, r3
 8003c76:	68fb      	ldr	r3, [r7, #12]
 8003c78:	4013      	ands	r3, r2
 8003c7a:	2b00      	cmp	r3, #0
 8003c7c:	d012      	beq.n	8003ca4 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	681b      	ldr	r3, [r3, #0]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	f003 0302 	and.w	r3, r3, #2
 8003c88:	2b00      	cmp	r3, #0
 8003c8a:	d00b      	beq.n	8003ca4 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8003c8c:	687b      	ldr	r3, [r7, #4]
 8003c8e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c90:	2204      	movs	r2, #4
 8003c92:	409a      	lsls	r2, r3
 8003c94:	693b      	ldr	r3, [r7, #16]
 8003c96:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003c9c:	f043 0204 	orr.w	r2, r3, #4
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ca8:	2210      	movs	r2, #16
 8003caa:	409a      	lsls	r2, r3
 8003cac:	68fb      	ldr	r3, [r7, #12]
 8003cae:	4013      	ands	r3, r2
 8003cb0:	2b00      	cmp	r3, #0
 8003cb2:	d043      	beq.n	8003d3c <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	f003 0308 	and.w	r3, r3, #8
 8003cbe:	2b00      	cmp	r3, #0
 8003cc0:	d03c      	beq.n	8003d3c <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003cc6:	2210      	movs	r2, #16
 8003cc8:	409a      	lsls	r2, r3
 8003cca:	693b      	ldr	r3, [r7, #16]
 8003ccc:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	681b      	ldr	r3, [r3, #0]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003cd8:	2b00      	cmp	r3, #0
 8003cda:	d018      	beq.n	8003d0e <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	681b      	ldr	r3, [r3, #0]
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003ce6:	2b00      	cmp	r3, #0
 8003ce8:	d108      	bne.n	8003cfc <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8003cea:	687b      	ldr	r3, [r7, #4]
 8003cec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	d024      	beq.n	8003d3c <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003cf6:	6878      	ldr	r0, [r7, #4]
 8003cf8:	4798      	blx	r3
 8003cfa:	e01f      	b.n	8003d3c <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003d00:	2b00      	cmp	r3, #0
 8003d02:	d01b      	beq.n	8003d3c <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003d08:	6878      	ldr	r0, [r7, #4]
 8003d0a:	4798      	blx	r3
 8003d0c:	e016      	b.n	8003d3c <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003d0e:	687b      	ldr	r3, [r7, #4]
 8003d10:	681b      	ldr	r3, [r3, #0]
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003d18:	2b00      	cmp	r3, #0
 8003d1a:	d107      	bne.n	8003d2c <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	681a      	ldr	r2, [r3, #0]
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	681b      	ldr	r3, [r3, #0]
 8003d26:	f022 0208 	bic.w	r2, r2, #8
 8003d2a:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d30:	2b00      	cmp	r3, #0
 8003d32:	d003      	beq.n	8003d3c <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d38:	6878      	ldr	r0, [r7, #4]
 8003d3a:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d40:	2220      	movs	r2, #32
 8003d42:	409a      	lsls	r2, r3
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	4013      	ands	r3, r2
 8003d48:	2b00      	cmp	r3, #0
 8003d4a:	f000 808f 	beq.w	8003e6c <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	681b      	ldr	r3, [r3, #0]
 8003d54:	f003 0310 	and.w	r3, r3, #16
 8003d58:	2b00      	cmp	r3, #0
 8003d5a:	f000 8087 	beq.w	8003e6c <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d62:	2220      	movs	r2, #32
 8003d64:	409a      	lsls	r2, r3
 8003d66:	693b      	ldr	r3, [r7, #16]
 8003d68:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003d70:	b2db      	uxtb	r3, r3
 8003d72:	2b05      	cmp	r3, #5
 8003d74:	d136      	bne.n	8003de4 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	681a      	ldr	r2, [r3, #0]
 8003d7c:	687b      	ldr	r3, [r7, #4]
 8003d7e:	681b      	ldr	r3, [r3, #0]
 8003d80:	f022 0216 	bic.w	r2, r2, #22
 8003d84:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003d86:	687b      	ldr	r3, [r7, #4]
 8003d88:	681b      	ldr	r3, [r3, #0]
 8003d8a:	695a      	ldr	r2, [r3, #20]
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003d94:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	d103      	bne.n	8003da6 <HAL_DMA_IRQHandler+0x1da>
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003da2:	2b00      	cmp	r3, #0
 8003da4:	d007      	beq.n	8003db6 <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	681b      	ldr	r3, [r3, #0]
 8003daa:	681a      	ldr	r2, [r3, #0]
 8003dac:	687b      	ldr	r3, [r7, #4]
 8003dae:	681b      	ldr	r3, [r3, #0]
 8003db0:	f022 0208 	bic.w	r2, r2, #8
 8003db4:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003dba:	223f      	movs	r2, #63	@ 0x3f
 8003dbc:	409a      	lsls	r2, r3
 8003dbe:	693b      	ldr	r3, [r7, #16]
 8003dc0:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	2201      	movs	r2, #1
 8003dc6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	2200      	movs	r2, #0
 8003dce:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34

        if(hdma->XferAbortCallback != NULL)
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003dd6:	2b00      	cmp	r3, #0
 8003dd8:	d07e      	beq.n	8003ed8 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003dde:	6878      	ldr	r0, [r7, #4]
 8003de0:	4798      	blx	r3
        }
        return;
 8003de2:	e079      	b.n	8003ed8 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	681b      	ldr	r3, [r3, #0]
 8003de8:	681b      	ldr	r3, [r3, #0]
 8003dea:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003dee:	2b00      	cmp	r3, #0
 8003df0:	d01d      	beq.n	8003e2e <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	681b      	ldr	r3, [r3, #0]
 8003df6:	681b      	ldr	r3, [r3, #0]
 8003df8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003dfc:	2b00      	cmp	r3, #0
 8003dfe:	d10d      	bne.n	8003e1c <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	d031      	beq.n	8003e6c <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003e0c:	6878      	ldr	r0, [r7, #4]
 8003e0e:	4798      	blx	r3
 8003e10:	e02c      	b.n	8003e6c <HAL_DMA_IRQHandler+0x2a0>
 8003e12:	bf00      	nop
 8003e14:	20000018 	.word	0x20000018
 8003e18:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003e20:	2b00      	cmp	r3, #0
 8003e22:	d023      	beq.n	8003e6c <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003e28:	6878      	ldr	r0, [r7, #4]
 8003e2a:	4798      	blx	r3
 8003e2c:	e01e      	b.n	8003e6c <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	681b      	ldr	r3, [r3, #0]
 8003e34:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e38:	2b00      	cmp	r3, #0
 8003e3a:	d10f      	bne.n	8003e5c <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	681a      	ldr	r2, [r3, #0]
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	f022 0210 	bic.w	r2, r2, #16
 8003e4a:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	2201      	movs	r2, #1
 8003e50:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	2200      	movs	r2, #0
 8003e58:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003e60:	2b00      	cmp	r3, #0
 8003e62:	d003      	beq.n	8003e6c <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003e68:	6878      	ldr	r0, [r7, #4]
 8003e6a:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8003e6c:	687b      	ldr	r3, [r7, #4]
 8003e6e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003e70:	2b00      	cmp	r3, #0
 8003e72:	d032      	beq.n	8003eda <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003e78:	f003 0301 	and.w	r3, r3, #1
 8003e7c:	2b00      	cmp	r3, #0
 8003e7e:	d022      	beq.n	8003ec6 <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	2205      	movs	r2, #5
 8003e84:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	681a      	ldr	r2, [r3, #0]
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	f022 0201 	bic.w	r2, r2, #1
 8003e96:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8003e98:	68bb      	ldr	r3, [r7, #8]
 8003e9a:	3301      	adds	r3, #1
 8003e9c:	60bb      	str	r3, [r7, #8]
 8003e9e:	697a      	ldr	r2, [r7, #20]
 8003ea0:	429a      	cmp	r2, r3
 8003ea2:	d307      	bcc.n	8003eb4 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	681b      	ldr	r3, [r3, #0]
 8003eaa:	f003 0301 	and.w	r3, r3, #1
 8003eae:	2b00      	cmp	r3, #0
 8003eb0:	d1f2      	bne.n	8003e98 <HAL_DMA_IRQHandler+0x2cc>
 8003eb2:	e000      	b.n	8003eb6 <HAL_DMA_IRQHandler+0x2ea>
          break;
 8003eb4:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	2201      	movs	r2, #1
 8003eba:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	2200      	movs	r2, #0
 8003ec2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003eca:	2b00      	cmp	r3, #0
 8003ecc:	d005      	beq.n	8003eda <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003ed2:	6878      	ldr	r0, [r7, #4]
 8003ed4:	4798      	blx	r3
 8003ed6:	e000      	b.n	8003eda <HAL_DMA_IRQHandler+0x30e>
        return;
 8003ed8:	bf00      	nop
    }
  }
}
 8003eda:	3718      	adds	r7, #24
 8003edc:	46bd      	mov	sp, r7
 8003ede:	bd80      	pop	{r7, pc}

08003ee0 <HAL_DMA_GetError>:
  * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
  *              the configuration information for the specified DMA Stream.
  * @retval DMA Error Code
  */
uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
{
 8003ee0:	b480      	push	{r7}
 8003ee2:	b083      	sub	sp, #12
 8003ee4:	af00      	add	r7, sp, #0
 8003ee6:	6078      	str	r0, [r7, #4]
  return hdma->ErrorCode;
 8003ee8:	687b      	ldr	r3, [r7, #4]
 8003eea:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
}
 8003eec:	4618      	mov	r0, r3
 8003eee:	370c      	adds	r7, #12
 8003ef0:	46bd      	mov	sp, r7
 8003ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ef6:	4770      	bx	lr

08003ef8 <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003ef8:	b480      	push	{r7}
 8003efa:	b085      	sub	sp, #20
 8003efc:	af00      	add	r7, sp, #0
 8003efe:	60f8      	str	r0, [r7, #12]
 8003f00:	60b9      	str	r1, [r7, #8]
 8003f02:	607a      	str	r2, [r7, #4]
 8003f04:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003f06:	68fb      	ldr	r3, [r7, #12]
 8003f08:	681b      	ldr	r3, [r3, #0]
 8003f0a:	681a      	ldr	r2, [r3, #0]
 8003f0c:	68fb      	ldr	r3, [r7, #12]
 8003f0e:	681b      	ldr	r3, [r3, #0]
 8003f10:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003f14:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8003f16:	68fb      	ldr	r3, [r7, #12]
 8003f18:	681b      	ldr	r3, [r3, #0]
 8003f1a:	683a      	ldr	r2, [r7, #0]
 8003f1c:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003f1e:	68fb      	ldr	r3, [r7, #12]
 8003f20:	689b      	ldr	r3, [r3, #8]
 8003f22:	2b40      	cmp	r3, #64	@ 0x40
 8003f24:	d108      	bne.n	8003f38 <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8003f26:	68fb      	ldr	r3, [r7, #12]
 8003f28:	681b      	ldr	r3, [r3, #0]
 8003f2a:	687a      	ldr	r2, [r7, #4]
 8003f2c:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8003f2e:	68fb      	ldr	r3, [r7, #12]
 8003f30:	681b      	ldr	r3, [r3, #0]
 8003f32:	68ba      	ldr	r2, [r7, #8]
 8003f34:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8003f36:	e007      	b.n	8003f48 <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8003f38:	68fb      	ldr	r3, [r7, #12]
 8003f3a:	681b      	ldr	r3, [r3, #0]
 8003f3c:	68ba      	ldr	r2, [r7, #8]
 8003f3e:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8003f40:	68fb      	ldr	r3, [r7, #12]
 8003f42:	681b      	ldr	r3, [r3, #0]
 8003f44:	687a      	ldr	r2, [r7, #4]
 8003f46:	60da      	str	r2, [r3, #12]
}
 8003f48:	bf00      	nop
 8003f4a:	3714      	adds	r7, #20
 8003f4c:	46bd      	mov	sp, r7
 8003f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f52:	4770      	bx	lr

08003f54 <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8003f54:	b480      	push	{r7}
 8003f56:	b085      	sub	sp, #20
 8003f58:	af00      	add	r7, sp, #0
 8003f5a:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003f5c:	687b      	ldr	r3, [r7, #4]
 8003f5e:	681b      	ldr	r3, [r3, #0]
 8003f60:	b2db      	uxtb	r3, r3
 8003f62:	3b10      	subs	r3, #16
 8003f64:	4a14      	ldr	r2, [pc, #80]	@ (8003fb8 <DMA_CalcBaseAndBitshift+0x64>)
 8003f66:	fba2 2303 	umull	r2, r3, r2, r3
 8003f6a:	091b      	lsrs	r3, r3, #4
 8003f6c:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003f6e:	4a13      	ldr	r2, [pc, #76]	@ (8003fbc <DMA_CalcBaseAndBitshift+0x68>)
 8003f70:	68fb      	ldr	r3, [r7, #12]
 8003f72:	4413      	add	r3, r2
 8003f74:	781b      	ldrb	r3, [r3, #0]
 8003f76:	461a      	mov	r2, r3
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	65da      	str	r2, [r3, #92]	@ 0x5c
  
  if (stream_number > 3U)
 8003f7c:	68fb      	ldr	r3, [r7, #12]
 8003f7e:	2b03      	cmp	r3, #3
 8003f80:	d909      	bls.n	8003f96 <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003f8a:	f023 0303 	bic.w	r3, r3, #3
 8003f8e:	1d1a      	adds	r2, r3, #4
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	659a      	str	r2, [r3, #88]	@ 0x58
 8003f94:	e007      	b.n	8003fa6 <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003f9e:	f023 0303 	bic.w	r3, r3, #3
 8003fa2:	687a      	ldr	r2, [r7, #4]
 8003fa4:	6593      	str	r3, [r2, #88]	@ 0x58
  }
  
  return hdma->StreamBaseAddress;
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
}
 8003faa:	4618      	mov	r0, r3
 8003fac:	3714      	adds	r7, #20
 8003fae:	46bd      	mov	sp, r7
 8003fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fb4:	4770      	bx	lr
 8003fb6:	bf00      	nop
 8003fb8:	aaaaaaab 	.word	0xaaaaaaab
 8003fbc:	08028910 	.word	0x08028910

08003fc0 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8003fc0:	b480      	push	{r7}
 8003fc2:	b085      	sub	sp, #20
 8003fc4:	af00      	add	r7, sp, #0
 8003fc6:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003fc8:	2300      	movs	r3, #0
 8003fca:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003fd0:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003fd2:	687b      	ldr	r3, [r7, #4]
 8003fd4:	699b      	ldr	r3, [r3, #24]
 8003fd6:	2b00      	cmp	r3, #0
 8003fd8:	d11f      	bne.n	800401a <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 8003fda:	68bb      	ldr	r3, [r7, #8]
 8003fdc:	2b03      	cmp	r3, #3
 8003fde:	d856      	bhi.n	800408e <DMA_CheckFifoParam+0xce>
 8003fe0:	a201      	add	r2, pc, #4	@ (adr r2, 8003fe8 <DMA_CheckFifoParam+0x28>)
 8003fe2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003fe6:	bf00      	nop
 8003fe8:	08003ff9 	.word	0x08003ff9
 8003fec:	0800400b 	.word	0x0800400b
 8003ff0:	08003ff9 	.word	0x08003ff9
 8003ff4:	0800408f 	.word	0x0800408f
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003ff8:	687b      	ldr	r3, [r7, #4]
 8003ffa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ffc:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004000:	2b00      	cmp	r3, #0
 8004002:	d046      	beq.n	8004092 <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8004004:	2301      	movs	r3, #1
 8004006:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8004008:	e043      	b.n	8004092 <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800400a:	687b      	ldr	r3, [r7, #4]
 800400c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800400e:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8004012:	d140      	bne.n	8004096 <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8004014:	2301      	movs	r3, #1
 8004016:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8004018:	e03d      	b.n	8004096 <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	699b      	ldr	r3, [r3, #24]
 800401e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004022:	d121      	bne.n	8004068 <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8004024:	68bb      	ldr	r3, [r7, #8]
 8004026:	2b03      	cmp	r3, #3
 8004028:	d837      	bhi.n	800409a <DMA_CheckFifoParam+0xda>
 800402a:	a201      	add	r2, pc, #4	@ (adr r2, 8004030 <DMA_CheckFifoParam+0x70>)
 800402c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004030:	08004041 	.word	0x08004041
 8004034:	08004047 	.word	0x08004047
 8004038:	08004041 	.word	0x08004041
 800403c:	08004059 	.word	0x08004059
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8004040:	2301      	movs	r3, #1
 8004042:	73fb      	strb	r3, [r7, #15]
      break;
 8004044:	e030      	b.n	80040a8 <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800404a:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800404e:	2b00      	cmp	r3, #0
 8004050:	d025      	beq.n	800409e <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 8004052:	2301      	movs	r3, #1
 8004054:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8004056:	e022      	b.n	800409e <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8004058:	687b      	ldr	r3, [r7, #4]
 800405a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800405c:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8004060:	d11f      	bne.n	80040a2 <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 8004062:	2301      	movs	r3, #1
 8004064:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 8004066:	e01c      	b.n	80040a2 <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8004068:	68bb      	ldr	r3, [r7, #8]
 800406a:	2b02      	cmp	r3, #2
 800406c:	d903      	bls.n	8004076 <DMA_CheckFifoParam+0xb6>
 800406e:	68bb      	ldr	r3, [r7, #8]
 8004070:	2b03      	cmp	r3, #3
 8004072:	d003      	beq.n	800407c <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 8004074:	e018      	b.n	80040a8 <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 8004076:	2301      	movs	r3, #1
 8004078:	73fb      	strb	r3, [r7, #15]
      break;
 800407a:	e015      	b.n	80040a8 <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004080:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004084:	2b00      	cmp	r3, #0
 8004086:	d00e      	beq.n	80040a6 <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8004088:	2301      	movs	r3, #1
 800408a:	73fb      	strb	r3, [r7, #15]
      break;
 800408c:	e00b      	b.n	80040a6 <DMA_CheckFifoParam+0xe6>
      break;
 800408e:	bf00      	nop
 8004090:	e00a      	b.n	80040a8 <DMA_CheckFifoParam+0xe8>
      break;
 8004092:	bf00      	nop
 8004094:	e008      	b.n	80040a8 <DMA_CheckFifoParam+0xe8>
      break;
 8004096:	bf00      	nop
 8004098:	e006      	b.n	80040a8 <DMA_CheckFifoParam+0xe8>
      break;
 800409a:	bf00      	nop
 800409c:	e004      	b.n	80040a8 <DMA_CheckFifoParam+0xe8>
      break;
 800409e:	bf00      	nop
 80040a0:	e002      	b.n	80040a8 <DMA_CheckFifoParam+0xe8>
      break;   
 80040a2:	bf00      	nop
 80040a4:	e000      	b.n	80040a8 <DMA_CheckFifoParam+0xe8>
      break;
 80040a6:	bf00      	nop
    }
  } 
  
  return status; 
 80040a8:	7bfb      	ldrb	r3, [r7, #15]
}
 80040aa:	4618      	mov	r0, r3
 80040ac:	3714      	adds	r7, #20
 80040ae:	46bd      	mov	sp, r7
 80040b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040b4:	4770      	bx	lr
 80040b6:	bf00      	nop

080040b8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80040b8:	b480      	push	{r7}
 80040ba:	b089      	sub	sp, #36	@ 0x24
 80040bc:	af00      	add	r7, sp, #0
 80040be:	6078      	str	r0, [r7, #4]
 80040c0:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 80040c2:	2300      	movs	r3, #0
 80040c4:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 80040c6:	2300      	movs	r3, #0
 80040c8:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 80040ca:	2300      	movs	r3, #0
 80040cc:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 80040ce:	2300      	movs	r3, #0
 80040d0:	61fb      	str	r3, [r7, #28]
 80040d2:	e165      	b.n	80043a0 <HAL_GPIO_Init+0x2e8>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 80040d4:	2201      	movs	r2, #1
 80040d6:	69fb      	ldr	r3, [r7, #28]
 80040d8:	fa02 f303 	lsl.w	r3, r2, r3
 80040dc:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80040de:	683b      	ldr	r3, [r7, #0]
 80040e0:	681b      	ldr	r3, [r3, #0]
 80040e2:	697a      	ldr	r2, [r7, #20]
 80040e4:	4013      	ands	r3, r2
 80040e6:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 80040e8:	693a      	ldr	r2, [r7, #16]
 80040ea:	697b      	ldr	r3, [r7, #20]
 80040ec:	429a      	cmp	r2, r3
 80040ee:	f040 8154 	bne.w	800439a <HAL_GPIO_Init+0x2e2>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80040f2:	683b      	ldr	r3, [r7, #0]
 80040f4:	685b      	ldr	r3, [r3, #4]
 80040f6:	f003 0303 	and.w	r3, r3, #3
 80040fa:	2b01      	cmp	r3, #1
 80040fc:	d005      	beq.n	800410a <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80040fe:	683b      	ldr	r3, [r7, #0]
 8004100:	685b      	ldr	r3, [r3, #4]
 8004102:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004106:	2b02      	cmp	r3, #2
 8004108:	d130      	bne.n	800416c <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	689b      	ldr	r3, [r3, #8]
 800410e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004110:	69fb      	ldr	r3, [r7, #28]
 8004112:	005b      	lsls	r3, r3, #1
 8004114:	2203      	movs	r2, #3
 8004116:	fa02 f303 	lsl.w	r3, r2, r3
 800411a:	43db      	mvns	r3, r3
 800411c:	69ba      	ldr	r2, [r7, #24]
 800411e:	4013      	ands	r3, r2
 8004120:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004122:	683b      	ldr	r3, [r7, #0]
 8004124:	68da      	ldr	r2, [r3, #12]
 8004126:	69fb      	ldr	r3, [r7, #28]
 8004128:	005b      	lsls	r3, r3, #1
 800412a:	fa02 f303 	lsl.w	r3, r2, r3
 800412e:	69ba      	ldr	r2, [r7, #24]
 8004130:	4313      	orrs	r3, r2
 8004132:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	69ba      	ldr	r2, [r7, #24]
 8004138:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	685b      	ldr	r3, [r3, #4]
 800413e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004140:	2201      	movs	r2, #1
 8004142:	69fb      	ldr	r3, [r7, #28]
 8004144:	fa02 f303 	lsl.w	r3, r2, r3
 8004148:	43db      	mvns	r3, r3
 800414a:	69ba      	ldr	r2, [r7, #24]
 800414c:	4013      	ands	r3, r2
 800414e:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004150:	683b      	ldr	r3, [r7, #0]
 8004152:	685b      	ldr	r3, [r3, #4]
 8004154:	091b      	lsrs	r3, r3, #4
 8004156:	f003 0201 	and.w	r2, r3, #1
 800415a:	69fb      	ldr	r3, [r7, #28]
 800415c:	fa02 f303 	lsl.w	r3, r2, r3
 8004160:	69ba      	ldr	r2, [r7, #24]
 8004162:	4313      	orrs	r3, r2
 8004164:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	69ba      	ldr	r2, [r7, #24]
 800416a:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800416c:	683b      	ldr	r3, [r7, #0]
 800416e:	685b      	ldr	r3, [r3, #4]
 8004170:	f003 0303 	and.w	r3, r3, #3
 8004174:	2b03      	cmp	r3, #3
 8004176:	d017      	beq.n	80041a8 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	68db      	ldr	r3, [r3, #12]
 800417c:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800417e:	69fb      	ldr	r3, [r7, #28]
 8004180:	005b      	lsls	r3, r3, #1
 8004182:	2203      	movs	r2, #3
 8004184:	fa02 f303 	lsl.w	r3, r2, r3
 8004188:	43db      	mvns	r3, r3
 800418a:	69ba      	ldr	r2, [r7, #24]
 800418c:	4013      	ands	r3, r2
 800418e:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004190:	683b      	ldr	r3, [r7, #0]
 8004192:	689a      	ldr	r2, [r3, #8]
 8004194:	69fb      	ldr	r3, [r7, #28]
 8004196:	005b      	lsls	r3, r3, #1
 8004198:	fa02 f303 	lsl.w	r3, r2, r3
 800419c:	69ba      	ldr	r2, [r7, #24]
 800419e:	4313      	orrs	r3, r2
 80041a0:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 80041a2:	687b      	ldr	r3, [r7, #4]
 80041a4:	69ba      	ldr	r2, [r7, #24]
 80041a6:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80041a8:	683b      	ldr	r3, [r7, #0]
 80041aa:	685b      	ldr	r3, [r3, #4]
 80041ac:	f003 0303 	and.w	r3, r3, #3
 80041b0:	2b02      	cmp	r3, #2
 80041b2:	d123      	bne.n	80041fc <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 80041b4:	69fb      	ldr	r3, [r7, #28]
 80041b6:	08da      	lsrs	r2, r3, #3
 80041b8:	687b      	ldr	r3, [r7, #4]
 80041ba:	3208      	adds	r2, #8
 80041bc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80041c0:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80041c2:	69fb      	ldr	r3, [r7, #28]
 80041c4:	f003 0307 	and.w	r3, r3, #7
 80041c8:	009b      	lsls	r3, r3, #2
 80041ca:	220f      	movs	r2, #15
 80041cc:	fa02 f303 	lsl.w	r3, r2, r3
 80041d0:	43db      	mvns	r3, r3
 80041d2:	69ba      	ldr	r2, [r7, #24]
 80041d4:	4013      	ands	r3, r2
 80041d6:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80041d8:	683b      	ldr	r3, [r7, #0]
 80041da:	691a      	ldr	r2, [r3, #16]
 80041dc:	69fb      	ldr	r3, [r7, #28]
 80041de:	f003 0307 	and.w	r3, r3, #7
 80041e2:	009b      	lsls	r3, r3, #2
 80041e4:	fa02 f303 	lsl.w	r3, r2, r3
 80041e8:	69ba      	ldr	r2, [r7, #24]
 80041ea:	4313      	orrs	r3, r2
 80041ec:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 80041ee:	69fb      	ldr	r3, [r7, #28]
 80041f0:	08da      	lsrs	r2, r3, #3
 80041f2:	687b      	ldr	r3, [r7, #4]
 80041f4:	3208      	adds	r2, #8
 80041f6:	69b9      	ldr	r1, [r7, #24]
 80041f8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	681b      	ldr	r3, [r3, #0]
 8004200:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004202:	69fb      	ldr	r3, [r7, #28]
 8004204:	005b      	lsls	r3, r3, #1
 8004206:	2203      	movs	r2, #3
 8004208:	fa02 f303 	lsl.w	r3, r2, r3
 800420c:	43db      	mvns	r3, r3
 800420e:	69ba      	ldr	r2, [r7, #24]
 8004210:	4013      	ands	r3, r2
 8004212:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004214:	683b      	ldr	r3, [r7, #0]
 8004216:	685b      	ldr	r3, [r3, #4]
 8004218:	f003 0203 	and.w	r2, r3, #3
 800421c:	69fb      	ldr	r3, [r7, #28]
 800421e:	005b      	lsls	r3, r3, #1
 8004220:	fa02 f303 	lsl.w	r3, r2, r3
 8004224:	69ba      	ldr	r2, [r7, #24]
 8004226:	4313      	orrs	r3, r2
 8004228:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	69ba      	ldr	r2, [r7, #24]
 800422e:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004230:	683b      	ldr	r3, [r7, #0]
 8004232:	685b      	ldr	r3, [r3, #4]
 8004234:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004238:	2b00      	cmp	r3, #0
 800423a:	f000 80ae 	beq.w	800439a <HAL_GPIO_Init+0x2e2>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800423e:	2300      	movs	r3, #0
 8004240:	60fb      	str	r3, [r7, #12]
 8004242:	4b5d      	ldr	r3, [pc, #372]	@ (80043b8 <HAL_GPIO_Init+0x300>)
 8004244:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004246:	4a5c      	ldr	r2, [pc, #368]	@ (80043b8 <HAL_GPIO_Init+0x300>)
 8004248:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800424c:	6453      	str	r3, [r2, #68]	@ 0x44
 800424e:	4b5a      	ldr	r3, [pc, #360]	@ (80043b8 <HAL_GPIO_Init+0x300>)
 8004250:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004252:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004256:	60fb      	str	r3, [r7, #12]
 8004258:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 800425a:	4a58      	ldr	r2, [pc, #352]	@ (80043bc <HAL_GPIO_Init+0x304>)
 800425c:	69fb      	ldr	r3, [r7, #28]
 800425e:	089b      	lsrs	r3, r3, #2
 8004260:	3302      	adds	r3, #2
 8004262:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004266:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004268:	69fb      	ldr	r3, [r7, #28]
 800426a:	f003 0303 	and.w	r3, r3, #3
 800426e:	009b      	lsls	r3, r3, #2
 8004270:	220f      	movs	r2, #15
 8004272:	fa02 f303 	lsl.w	r3, r2, r3
 8004276:	43db      	mvns	r3, r3
 8004278:	69ba      	ldr	r2, [r7, #24]
 800427a:	4013      	ands	r3, r2
 800427c:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800427e:	687b      	ldr	r3, [r7, #4]
 8004280:	4a4f      	ldr	r2, [pc, #316]	@ (80043c0 <HAL_GPIO_Init+0x308>)
 8004282:	4293      	cmp	r3, r2
 8004284:	d025      	beq.n	80042d2 <HAL_GPIO_Init+0x21a>
 8004286:	687b      	ldr	r3, [r7, #4]
 8004288:	4a4e      	ldr	r2, [pc, #312]	@ (80043c4 <HAL_GPIO_Init+0x30c>)
 800428a:	4293      	cmp	r3, r2
 800428c:	d01f      	beq.n	80042ce <HAL_GPIO_Init+0x216>
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	4a4d      	ldr	r2, [pc, #308]	@ (80043c8 <HAL_GPIO_Init+0x310>)
 8004292:	4293      	cmp	r3, r2
 8004294:	d019      	beq.n	80042ca <HAL_GPIO_Init+0x212>
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	4a4c      	ldr	r2, [pc, #304]	@ (80043cc <HAL_GPIO_Init+0x314>)
 800429a:	4293      	cmp	r3, r2
 800429c:	d013      	beq.n	80042c6 <HAL_GPIO_Init+0x20e>
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	4a4b      	ldr	r2, [pc, #300]	@ (80043d0 <HAL_GPIO_Init+0x318>)
 80042a2:	4293      	cmp	r3, r2
 80042a4:	d00d      	beq.n	80042c2 <HAL_GPIO_Init+0x20a>
 80042a6:	687b      	ldr	r3, [r7, #4]
 80042a8:	4a4a      	ldr	r2, [pc, #296]	@ (80043d4 <HAL_GPIO_Init+0x31c>)
 80042aa:	4293      	cmp	r3, r2
 80042ac:	d007      	beq.n	80042be <HAL_GPIO_Init+0x206>
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	4a49      	ldr	r2, [pc, #292]	@ (80043d8 <HAL_GPIO_Init+0x320>)
 80042b2:	4293      	cmp	r3, r2
 80042b4:	d101      	bne.n	80042ba <HAL_GPIO_Init+0x202>
 80042b6:	2306      	movs	r3, #6
 80042b8:	e00c      	b.n	80042d4 <HAL_GPIO_Init+0x21c>
 80042ba:	2307      	movs	r3, #7
 80042bc:	e00a      	b.n	80042d4 <HAL_GPIO_Init+0x21c>
 80042be:	2305      	movs	r3, #5
 80042c0:	e008      	b.n	80042d4 <HAL_GPIO_Init+0x21c>
 80042c2:	2304      	movs	r3, #4
 80042c4:	e006      	b.n	80042d4 <HAL_GPIO_Init+0x21c>
 80042c6:	2303      	movs	r3, #3
 80042c8:	e004      	b.n	80042d4 <HAL_GPIO_Init+0x21c>
 80042ca:	2302      	movs	r3, #2
 80042cc:	e002      	b.n	80042d4 <HAL_GPIO_Init+0x21c>
 80042ce:	2301      	movs	r3, #1
 80042d0:	e000      	b.n	80042d4 <HAL_GPIO_Init+0x21c>
 80042d2:	2300      	movs	r3, #0
 80042d4:	69fa      	ldr	r2, [r7, #28]
 80042d6:	f002 0203 	and.w	r2, r2, #3
 80042da:	0092      	lsls	r2, r2, #2
 80042dc:	4093      	lsls	r3, r2
 80042de:	69ba      	ldr	r2, [r7, #24]
 80042e0:	4313      	orrs	r3, r2
 80042e2:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 80042e4:	4935      	ldr	r1, [pc, #212]	@ (80043bc <HAL_GPIO_Init+0x304>)
 80042e6:	69fb      	ldr	r3, [r7, #28]
 80042e8:	089b      	lsrs	r3, r3, #2
 80042ea:	3302      	adds	r3, #2
 80042ec:	69ba      	ldr	r2, [r7, #24]
 80042ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80042f2:	4b3a      	ldr	r3, [pc, #232]	@ (80043dc <HAL_GPIO_Init+0x324>)
 80042f4:	689b      	ldr	r3, [r3, #8]
 80042f6:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80042f8:	693b      	ldr	r3, [r7, #16]
 80042fa:	43db      	mvns	r3, r3
 80042fc:	69ba      	ldr	r2, [r7, #24]
 80042fe:	4013      	ands	r3, r2
 8004300:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004302:	683b      	ldr	r3, [r7, #0]
 8004304:	685b      	ldr	r3, [r3, #4]
 8004306:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800430a:	2b00      	cmp	r3, #0
 800430c:	d003      	beq.n	8004316 <HAL_GPIO_Init+0x25e>
        {
          temp |= iocurrent;
 800430e:	69ba      	ldr	r2, [r7, #24]
 8004310:	693b      	ldr	r3, [r7, #16]
 8004312:	4313      	orrs	r3, r2
 8004314:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8004316:	4a31      	ldr	r2, [pc, #196]	@ (80043dc <HAL_GPIO_Init+0x324>)
 8004318:	69bb      	ldr	r3, [r7, #24]
 800431a:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 800431c:	4b2f      	ldr	r3, [pc, #188]	@ (80043dc <HAL_GPIO_Init+0x324>)
 800431e:	68db      	ldr	r3, [r3, #12]
 8004320:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004322:	693b      	ldr	r3, [r7, #16]
 8004324:	43db      	mvns	r3, r3
 8004326:	69ba      	ldr	r2, [r7, #24]
 8004328:	4013      	ands	r3, r2
 800432a:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800432c:	683b      	ldr	r3, [r7, #0]
 800432e:	685b      	ldr	r3, [r3, #4]
 8004330:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004334:	2b00      	cmp	r3, #0
 8004336:	d003      	beq.n	8004340 <HAL_GPIO_Init+0x288>
        {
          temp |= iocurrent;
 8004338:	69ba      	ldr	r2, [r7, #24]
 800433a:	693b      	ldr	r3, [r7, #16]
 800433c:	4313      	orrs	r3, r2
 800433e:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8004340:	4a26      	ldr	r2, [pc, #152]	@ (80043dc <HAL_GPIO_Init+0x324>)
 8004342:	69bb      	ldr	r3, [r7, #24]
 8004344:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8004346:	4b25      	ldr	r3, [pc, #148]	@ (80043dc <HAL_GPIO_Init+0x324>)
 8004348:	685b      	ldr	r3, [r3, #4]
 800434a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800434c:	693b      	ldr	r3, [r7, #16]
 800434e:	43db      	mvns	r3, r3
 8004350:	69ba      	ldr	r2, [r7, #24]
 8004352:	4013      	ands	r3, r2
 8004354:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004356:	683b      	ldr	r3, [r7, #0]
 8004358:	685b      	ldr	r3, [r3, #4]
 800435a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800435e:	2b00      	cmp	r3, #0
 8004360:	d003      	beq.n	800436a <HAL_GPIO_Init+0x2b2>
        {
          temp |= iocurrent;
 8004362:	69ba      	ldr	r2, [r7, #24]
 8004364:	693b      	ldr	r3, [r7, #16]
 8004366:	4313      	orrs	r3, r2
 8004368:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 800436a:	4a1c      	ldr	r2, [pc, #112]	@ (80043dc <HAL_GPIO_Init+0x324>)
 800436c:	69bb      	ldr	r3, [r7, #24]
 800436e:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004370:	4b1a      	ldr	r3, [pc, #104]	@ (80043dc <HAL_GPIO_Init+0x324>)
 8004372:	681b      	ldr	r3, [r3, #0]
 8004374:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004376:	693b      	ldr	r3, [r7, #16]
 8004378:	43db      	mvns	r3, r3
 800437a:	69ba      	ldr	r2, [r7, #24]
 800437c:	4013      	ands	r3, r2
 800437e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004380:	683b      	ldr	r3, [r7, #0]
 8004382:	685b      	ldr	r3, [r3, #4]
 8004384:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004388:	2b00      	cmp	r3, #0
 800438a:	d003      	beq.n	8004394 <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 800438c:	69ba      	ldr	r2, [r7, #24]
 800438e:	693b      	ldr	r3, [r7, #16]
 8004390:	4313      	orrs	r3, r2
 8004392:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8004394:	4a11      	ldr	r2, [pc, #68]	@ (80043dc <HAL_GPIO_Init+0x324>)
 8004396:	69bb      	ldr	r3, [r7, #24]
 8004398:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800439a:	69fb      	ldr	r3, [r7, #28]
 800439c:	3301      	adds	r3, #1
 800439e:	61fb      	str	r3, [r7, #28]
 80043a0:	69fb      	ldr	r3, [r7, #28]
 80043a2:	2b0f      	cmp	r3, #15
 80043a4:	f67f ae96 	bls.w	80040d4 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 80043a8:	bf00      	nop
 80043aa:	bf00      	nop
 80043ac:	3724      	adds	r7, #36	@ 0x24
 80043ae:	46bd      	mov	sp, r7
 80043b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043b4:	4770      	bx	lr
 80043b6:	bf00      	nop
 80043b8:	40023800 	.word	0x40023800
 80043bc:	40013800 	.word	0x40013800
 80043c0:	40020000 	.word	0x40020000
 80043c4:	40020400 	.word	0x40020400
 80043c8:	40020800 	.word	0x40020800
 80043cc:	40020c00 	.word	0x40020c00
 80043d0:	40021000 	.word	0x40021000
 80043d4:	40021400 	.word	0x40021400
 80043d8:	40021800 	.word	0x40021800
 80043dc:	40013c00 	.word	0x40013c00

080043e0 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 80043e0:	b480      	push	{r7}
 80043e2:	b085      	sub	sp, #20
 80043e4:	af00      	add	r7, sp, #0
 80043e6:	6078      	str	r0, [r7, #4]
 80043e8:	460b      	mov	r3, r1
 80043ea:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	691a      	ldr	r2, [r3, #16]
 80043f0:	887b      	ldrh	r3, [r7, #2]
 80043f2:	4013      	ands	r3, r2
 80043f4:	2b00      	cmp	r3, #0
 80043f6:	d002      	beq.n	80043fe <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 80043f8:	2301      	movs	r3, #1
 80043fa:	73fb      	strb	r3, [r7, #15]
 80043fc:	e001      	b.n	8004402 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80043fe:	2300      	movs	r3, #0
 8004400:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8004402:	7bfb      	ldrb	r3, [r7, #15]
}
 8004404:	4618      	mov	r0, r3
 8004406:	3714      	adds	r7, #20
 8004408:	46bd      	mov	sp, r7
 800440a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800440e:	4770      	bx	lr

08004410 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8004410:	b480      	push	{r7}
 8004412:	b083      	sub	sp, #12
 8004414:	af00      	add	r7, sp, #0
 8004416:	6078      	str	r0, [r7, #4]
 8004418:	460b      	mov	r3, r1
 800441a:	807b      	strh	r3, [r7, #2]
 800441c:	4613      	mov	r3, r2
 800441e:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004420:	787b      	ldrb	r3, [r7, #1]
 8004422:	2b00      	cmp	r3, #0
 8004424:	d003      	beq.n	800442e <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8004426:	887a      	ldrh	r2, [r7, #2]
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 800442c:	e003      	b.n	8004436 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800442e:	887b      	ldrh	r3, [r7, #2]
 8004430:	041a      	lsls	r2, r3, #16
 8004432:	687b      	ldr	r3, [r7, #4]
 8004434:	619a      	str	r2, [r3, #24]
}
 8004436:	bf00      	nop
 8004438:	370c      	adds	r7, #12
 800443a:	46bd      	mov	sp, r7
 800443c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004440:	4770      	bx	lr
	...

08004444 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8004444:	b580      	push	{r7, lr}
 8004446:	b082      	sub	sp, #8
 8004448:	af00      	add	r7, sp, #0
 800444a:	4603      	mov	r3, r0
 800444c:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800444e:	4b08      	ldr	r3, [pc, #32]	@ (8004470 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004450:	695a      	ldr	r2, [r3, #20]
 8004452:	88fb      	ldrh	r3, [r7, #6]
 8004454:	4013      	ands	r3, r2
 8004456:	2b00      	cmp	r3, #0
 8004458:	d006      	beq.n	8004468 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800445a:	4a05      	ldr	r2, [pc, #20]	@ (8004470 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800445c:	88fb      	ldrh	r3, [r7, #6]
 800445e:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8004460:	88fb      	ldrh	r3, [r7, #6]
 8004462:	4618      	mov	r0, r3
 8004464:	f7fe f9fa 	bl	800285c <HAL_GPIO_EXTI_Callback>
  }
}
 8004468:	bf00      	nop
 800446a:	3708      	adds	r7, #8
 800446c:	46bd      	mov	sp, r7
 800446e:	bd80      	pop	{r7, pc}
 8004470:	40013c00 	.word	0x40013c00

08004474 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8004474:	b580      	push	{r7, lr}
 8004476:	b082      	sub	sp, #8
 8004478:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 800447a:	2300      	movs	r3, #0
 800447c:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 800447e:	2300      	movs	r3, #0
 8004480:	603b      	str	r3, [r7, #0]
 8004482:	4b20      	ldr	r3, [pc, #128]	@ (8004504 <HAL_PWREx_EnableOverDrive+0x90>)
 8004484:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004486:	4a1f      	ldr	r2, [pc, #124]	@ (8004504 <HAL_PWREx_EnableOverDrive+0x90>)
 8004488:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800448c:	6413      	str	r3, [r2, #64]	@ 0x40
 800448e:	4b1d      	ldr	r3, [pc, #116]	@ (8004504 <HAL_PWREx_EnableOverDrive+0x90>)
 8004490:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004492:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004496:	603b      	str	r3, [r7, #0]
 8004498:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 800449a:	4b1b      	ldr	r3, [pc, #108]	@ (8004508 <HAL_PWREx_EnableOverDrive+0x94>)
 800449c:	2201      	movs	r2, #1
 800449e:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80044a0:	f7fe fc64 	bl	8002d6c <HAL_GetTick>
 80044a4:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80044a6:	e009      	b.n	80044bc <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80044a8:	f7fe fc60 	bl	8002d6c <HAL_GetTick>
 80044ac:	4602      	mov	r2, r0
 80044ae:	687b      	ldr	r3, [r7, #4]
 80044b0:	1ad3      	subs	r3, r2, r3
 80044b2:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80044b6:	d901      	bls.n	80044bc <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 80044b8:	2303      	movs	r3, #3
 80044ba:	e01f      	b.n	80044fc <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80044bc:	4b13      	ldr	r3, [pc, #76]	@ (800450c <HAL_PWREx_EnableOverDrive+0x98>)
 80044be:	685b      	ldr	r3, [r3, #4]
 80044c0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80044c4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80044c8:	d1ee      	bne.n	80044a8 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80044ca:	4b11      	ldr	r3, [pc, #68]	@ (8004510 <HAL_PWREx_EnableOverDrive+0x9c>)
 80044cc:	2201      	movs	r2, #1
 80044ce:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80044d0:	f7fe fc4c 	bl	8002d6c <HAL_GetTick>
 80044d4:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80044d6:	e009      	b.n	80044ec <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80044d8:	f7fe fc48 	bl	8002d6c <HAL_GetTick>
 80044dc:	4602      	mov	r2, r0
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	1ad3      	subs	r3, r2, r3
 80044e2:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80044e6:	d901      	bls.n	80044ec <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 80044e8:	2303      	movs	r3, #3
 80044ea:	e007      	b.n	80044fc <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80044ec:	4b07      	ldr	r3, [pc, #28]	@ (800450c <HAL_PWREx_EnableOverDrive+0x98>)
 80044ee:	685b      	ldr	r3, [r3, #4]
 80044f0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80044f4:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80044f8:	d1ee      	bne.n	80044d8 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 80044fa:	2300      	movs	r3, #0
}
 80044fc:	4618      	mov	r0, r3
 80044fe:	3708      	adds	r7, #8
 8004500:	46bd      	mov	sp, r7
 8004502:	bd80      	pop	{r7, pc}
 8004504:	40023800 	.word	0x40023800
 8004508:	420e0040 	.word	0x420e0040
 800450c:	40007000 	.word	0x40007000
 8004510:	420e0044 	.word	0x420e0044

08004514 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004514:	b580      	push	{r7, lr}
 8004516:	b084      	sub	sp, #16
 8004518:	af00      	add	r7, sp, #0
 800451a:	6078      	str	r0, [r7, #4]
 800451c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 800451e:	687b      	ldr	r3, [r7, #4]
 8004520:	2b00      	cmp	r3, #0
 8004522:	d101      	bne.n	8004528 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8004524:	2301      	movs	r3, #1
 8004526:	e0cc      	b.n	80046c2 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8004528:	4b68      	ldr	r3, [pc, #416]	@ (80046cc <HAL_RCC_ClockConfig+0x1b8>)
 800452a:	681b      	ldr	r3, [r3, #0]
 800452c:	f003 030f 	and.w	r3, r3, #15
 8004530:	683a      	ldr	r2, [r7, #0]
 8004532:	429a      	cmp	r2, r3
 8004534:	d90c      	bls.n	8004550 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004536:	4b65      	ldr	r3, [pc, #404]	@ (80046cc <HAL_RCC_ClockConfig+0x1b8>)
 8004538:	683a      	ldr	r2, [r7, #0]
 800453a:	b2d2      	uxtb	r2, r2
 800453c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800453e:	4b63      	ldr	r3, [pc, #396]	@ (80046cc <HAL_RCC_ClockConfig+0x1b8>)
 8004540:	681b      	ldr	r3, [r3, #0]
 8004542:	f003 030f 	and.w	r3, r3, #15
 8004546:	683a      	ldr	r2, [r7, #0]
 8004548:	429a      	cmp	r2, r3
 800454a:	d001      	beq.n	8004550 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 800454c:	2301      	movs	r3, #1
 800454e:	e0b8      	b.n	80046c2 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	681b      	ldr	r3, [r3, #0]
 8004554:	f003 0302 	and.w	r3, r3, #2
 8004558:	2b00      	cmp	r3, #0
 800455a:	d020      	beq.n	800459e <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	f003 0304 	and.w	r3, r3, #4
 8004564:	2b00      	cmp	r3, #0
 8004566:	d005      	beq.n	8004574 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8004568:	4b59      	ldr	r3, [pc, #356]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 800456a:	689b      	ldr	r3, [r3, #8]
 800456c:	4a58      	ldr	r2, [pc, #352]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 800456e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8004572:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	681b      	ldr	r3, [r3, #0]
 8004578:	f003 0308 	and.w	r3, r3, #8
 800457c:	2b00      	cmp	r3, #0
 800457e:	d005      	beq.n	800458c <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8004580:	4b53      	ldr	r3, [pc, #332]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 8004582:	689b      	ldr	r3, [r3, #8]
 8004584:	4a52      	ldr	r2, [pc, #328]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 8004586:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800458a:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800458c:	4b50      	ldr	r3, [pc, #320]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 800458e:	689b      	ldr	r3, [r3, #8]
 8004590:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	689b      	ldr	r3, [r3, #8]
 8004598:	494d      	ldr	r1, [pc, #308]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 800459a:	4313      	orrs	r3, r2
 800459c:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800459e:	687b      	ldr	r3, [r7, #4]
 80045a0:	681b      	ldr	r3, [r3, #0]
 80045a2:	f003 0301 	and.w	r3, r3, #1
 80045a6:	2b00      	cmp	r3, #0
 80045a8:	d044      	beq.n	8004634 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80045aa:	687b      	ldr	r3, [r7, #4]
 80045ac:	685b      	ldr	r3, [r3, #4]
 80045ae:	2b01      	cmp	r3, #1
 80045b0:	d107      	bne.n	80045c2 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80045b2:	4b47      	ldr	r3, [pc, #284]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 80045b4:	681b      	ldr	r3, [r3, #0]
 80045b6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80045ba:	2b00      	cmp	r3, #0
 80045bc:	d119      	bne.n	80045f2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80045be:	2301      	movs	r3, #1
 80045c0:	e07f      	b.n	80046c2 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	685b      	ldr	r3, [r3, #4]
 80045c6:	2b02      	cmp	r3, #2
 80045c8:	d003      	beq.n	80045d2 <HAL_RCC_ClockConfig+0xbe>
             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	685b      	ldr	r3, [r3, #4]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80045ce:	2b03      	cmp	r3, #3
 80045d0:	d107      	bne.n	80045e2 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80045d2:	4b3f      	ldr	r3, [pc, #252]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 80045d4:	681b      	ldr	r3, [r3, #0]
 80045d6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80045da:	2b00      	cmp	r3, #0
 80045dc:	d109      	bne.n	80045f2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80045de:	2301      	movs	r3, #1
 80045e0:	e06f      	b.n	80046c2 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80045e2:	4b3b      	ldr	r3, [pc, #236]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 80045e4:	681b      	ldr	r3, [r3, #0]
 80045e6:	f003 0302 	and.w	r3, r3, #2
 80045ea:	2b00      	cmp	r3, #0
 80045ec:	d101      	bne.n	80045f2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80045ee:	2301      	movs	r3, #1
 80045f0:	e067      	b.n	80046c2 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80045f2:	4b37      	ldr	r3, [pc, #220]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 80045f4:	689b      	ldr	r3, [r3, #8]
 80045f6:	f023 0203 	bic.w	r2, r3, #3
 80045fa:	687b      	ldr	r3, [r7, #4]
 80045fc:	685b      	ldr	r3, [r3, #4]
 80045fe:	4934      	ldr	r1, [pc, #208]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 8004600:	4313      	orrs	r3, r2
 8004602:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8004604:	f7fe fbb2 	bl	8002d6c <HAL_GetTick>
 8004608:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800460a:	e00a      	b.n	8004622 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800460c:	f7fe fbae 	bl	8002d6c <HAL_GetTick>
 8004610:	4602      	mov	r2, r0
 8004612:	68fb      	ldr	r3, [r7, #12]
 8004614:	1ad3      	subs	r3, r2, r3
 8004616:	f241 3288 	movw	r2, #5000	@ 0x1388
 800461a:	4293      	cmp	r3, r2
 800461c:	d901      	bls.n	8004622 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800461e:	2303      	movs	r3, #3
 8004620:	e04f      	b.n	80046c2 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004622:	4b2b      	ldr	r3, [pc, #172]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 8004624:	689b      	ldr	r3, [r3, #8]
 8004626:	f003 020c 	and.w	r2, r3, #12
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	685b      	ldr	r3, [r3, #4]
 800462e:	009b      	lsls	r3, r3, #2
 8004630:	429a      	cmp	r2, r3
 8004632:	d1eb      	bne.n	800460c <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8004634:	4b25      	ldr	r3, [pc, #148]	@ (80046cc <HAL_RCC_ClockConfig+0x1b8>)
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	f003 030f 	and.w	r3, r3, #15
 800463c:	683a      	ldr	r2, [r7, #0]
 800463e:	429a      	cmp	r2, r3
 8004640:	d20c      	bcs.n	800465c <HAL_RCC_ClockConfig+0x148>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004642:	4b22      	ldr	r3, [pc, #136]	@ (80046cc <HAL_RCC_ClockConfig+0x1b8>)
 8004644:	683a      	ldr	r2, [r7, #0]
 8004646:	b2d2      	uxtb	r2, r2
 8004648:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800464a:	4b20      	ldr	r3, [pc, #128]	@ (80046cc <HAL_RCC_ClockConfig+0x1b8>)
 800464c:	681b      	ldr	r3, [r3, #0]
 800464e:	f003 030f 	and.w	r3, r3, #15
 8004652:	683a      	ldr	r2, [r7, #0]
 8004654:	429a      	cmp	r2, r3
 8004656:	d001      	beq.n	800465c <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8004658:	2301      	movs	r3, #1
 800465a:	e032      	b.n	80046c2 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	f003 0304 	and.w	r3, r3, #4
 8004664:	2b00      	cmp	r3, #0
 8004666:	d008      	beq.n	800467a <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8004668:	4b19      	ldr	r3, [pc, #100]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 800466a:	689b      	ldr	r3, [r3, #8]
 800466c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	68db      	ldr	r3, [r3, #12]
 8004674:	4916      	ldr	r1, [pc, #88]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 8004676:	4313      	orrs	r3, r2
 8004678:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	681b      	ldr	r3, [r3, #0]
 800467e:	f003 0308 	and.w	r3, r3, #8
 8004682:	2b00      	cmp	r3, #0
 8004684:	d009      	beq.n	800469a <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8004686:	4b12      	ldr	r3, [pc, #72]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 8004688:	689b      	ldr	r3, [r3, #8]
 800468a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	691b      	ldr	r3, [r3, #16]
 8004692:	00db      	lsls	r3, r3, #3
 8004694:	490e      	ldr	r1, [pc, #56]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 8004696:	4313      	orrs	r3, r2
 8004698:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800469a:	f000 f855 	bl	8004748 <HAL_RCC_GetSysClockFreq>
 800469e:	4602      	mov	r2, r0
 80046a0:	4b0b      	ldr	r3, [pc, #44]	@ (80046d0 <HAL_RCC_ClockConfig+0x1bc>)
 80046a2:	689b      	ldr	r3, [r3, #8]
 80046a4:	091b      	lsrs	r3, r3, #4
 80046a6:	f003 030f 	and.w	r3, r3, #15
 80046aa:	490a      	ldr	r1, [pc, #40]	@ (80046d4 <HAL_RCC_ClockConfig+0x1c0>)
 80046ac:	5ccb      	ldrb	r3, [r1, r3]
 80046ae:	fa22 f303 	lsr.w	r3, r2, r3
 80046b2:	4a09      	ldr	r2, [pc, #36]	@ (80046d8 <HAL_RCC_ClockConfig+0x1c4>)
 80046b4:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick(uwTickPrio);
 80046b6:	4b09      	ldr	r3, [pc, #36]	@ (80046dc <HAL_RCC_ClockConfig+0x1c8>)
 80046b8:	681b      	ldr	r3, [r3, #0]
 80046ba:	4618      	mov	r0, r3
 80046bc:	f7fe fb12 	bl	8002ce4 <HAL_InitTick>

  return HAL_OK;
 80046c0:	2300      	movs	r3, #0
}
 80046c2:	4618      	mov	r0, r3
 80046c4:	3710      	adds	r7, #16
 80046c6:	46bd      	mov	sp, r7
 80046c8:	bd80      	pop	{r7, pc}
 80046ca:	bf00      	nop
 80046cc:	40023c00 	.word	0x40023c00
 80046d0:	40023800 	.word	0x40023800
 80046d4:	080288f8 	.word	0x080288f8
 80046d8:	20000018 	.word	0x20000018
 80046dc:	20000020 	.word	0x20000020

080046e0 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80046e0:	b480      	push	{r7}
 80046e2:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80046e4:	4b03      	ldr	r3, [pc, #12]	@ (80046f4 <HAL_RCC_GetHCLKFreq+0x14>)
 80046e6:	681b      	ldr	r3, [r3, #0]
}
 80046e8:	4618      	mov	r0, r3
 80046ea:	46bd      	mov	sp, r7
 80046ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046f0:	4770      	bx	lr
 80046f2:	bf00      	nop
 80046f4:	20000018 	.word	0x20000018

080046f8 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80046f8:	b580      	push	{r7, lr}
 80046fa:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80046fc:	f7ff fff0 	bl	80046e0 <HAL_RCC_GetHCLKFreq>
 8004700:	4602      	mov	r2, r0
 8004702:	4b05      	ldr	r3, [pc, #20]	@ (8004718 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004704:	689b      	ldr	r3, [r3, #8]
 8004706:	0a9b      	lsrs	r3, r3, #10
 8004708:	f003 0307 	and.w	r3, r3, #7
 800470c:	4903      	ldr	r1, [pc, #12]	@ (800471c <HAL_RCC_GetPCLK1Freq+0x24>)
 800470e:	5ccb      	ldrb	r3, [r1, r3]
 8004710:	fa22 f303 	lsr.w	r3, r2, r3
}
 8004714:	4618      	mov	r0, r3
 8004716:	bd80      	pop	{r7, pc}
 8004718:	40023800 	.word	0x40023800
 800471c:	08028908 	.word	0x08028908

08004720 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8004720:	b580      	push	{r7, lr}
 8004722:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8004724:	f7ff ffdc 	bl	80046e0 <HAL_RCC_GetHCLKFreq>
 8004728:	4602      	mov	r2, r0
 800472a:	4b05      	ldr	r3, [pc, #20]	@ (8004740 <HAL_RCC_GetPCLK2Freq+0x20>)
 800472c:	689b      	ldr	r3, [r3, #8]
 800472e:	0b5b      	lsrs	r3, r3, #13
 8004730:	f003 0307 	and.w	r3, r3, #7
 8004734:	4903      	ldr	r1, [pc, #12]	@ (8004744 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004736:	5ccb      	ldrb	r3, [r1, r3]
 8004738:	fa22 f303 	lsr.w	r3, r2, r3
}
 800473c:	4618      	mov	r0, r3
 800473e:	bd80      	pop	{r7, pc}
 8004740:	40023800 	.word	0x40023800
 8004744:	08028908 	.word	0x08028908

08004748 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8004748:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800474c:	b0ae      	sub	sp, #184	@ 0xb8
 800474e:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U;
 8004750:	2300      	movs	r3, #0
 8004752:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
  uint32_t pllvco = 0U;
 8004756:	2300      	movs	r3, #0
 8004758:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
  uint32_t pllp = 0U;
 800475c:	2300      	movs	r3, #0
 800475e:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
  uint32_t pllr = 0U;
 8004762:	2300      	movs	r3, #0
 8004764:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
  uint32_t sysclockfreq = 0U;
 8004768:	2300      	movs	r3, #0
 800476a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800476e:	4bcb      	ldr	r3, [pc, #812]	@ (8004a9c <HAL_RCC_GetSysClockFreq+0x354>)
 8004770:	689b      	ldr	r3, [r3, #8]
 8004772:	f003 030c 	and.w	r3, r3, #12
 8004776:	2b0c      	cmp	r3, #12
 8004778:	f200 8206 	bhi.w	8004b88 <HAL_RCC_GetSysClockFreq+0x440>
 800477c:	a201      	add	r2, pc, #4	@ (adr r2, 8004784 <HAL_RCC_GetSysClockFreq+0x3c>)
 800477e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004782:	bf00      	nop
 8004784:	080047b9 	.word	0x080047b9
 8004788:	08004b89 	.word	0x08004b89
 800478c:	08004b89 	.word	0x08004b89
 8004790:	08004b89 	.word	0x08004b89
 8004794:	080047c1 	.word	0x080047c1
 8004798:	08004b89 	.word	0x08004b89
 800479c:	08004b89 	.word	0x08004b89
 80047a0:	08004b89 	.word	0x08004b89
 80047a4:	080047c9 	.word	0x080047c9
 80047a8:	08004b89 	.word	0x08004b89
 80047ac:	08004b89 	.word	0x08004b89
 80047b0:	08004b89 	.word	0x08004b89
 80047b4:	080049b9 	.word	0x080049b9
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80047b8:	4bb9      	ldr	r3, [pc, #740]	@ (8004aa0 <HAL_RCC_GetSysClockFreq+0x358>)
 80047ba:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80047be:	e1e7      	b.n	8004b90 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 80047c0:	4bb8      	ldr	r3, [pc, #736]	@ (8004aa4 <HAL_RCC_GetSysClockFreq+0x35c>)
 80047c2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80047c6:	e1e3      	b.n	8004b90 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL/PLLP used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80047c8:	4bb4      	ldr	r3, [pc, #720]	@ (8004a9c <HAL_RCC_GetSysClockFreq+0x354>)
 80047ca:	685b      	ldr	r3, [r3, #4]
 80047cc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80047d0:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80047d4:	4bb1      	ldr	r3, [pc, #708]	@ (8004a9c <HAL_RCC_GetSysClockFreq+0x354>)
 80047d6:	685b      	ldr	r3, [r3, #4]
 80047d8:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80047dc:	2b00      	cmp	r3, #0
 80047de:	d071      	beq.n	80048c4 <HAL_RCC_GetSysClockFreq+0x17c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80047e0:	4bae      	ldr	r3, [pc, #696]	@ (8004a9c <HAL_RCC_GetSysClockFreq+0x354>)
 80047e2:	685b      	ldr	r3, [r3, #4]
 80047e4:	099b      	lsrs	r3, r3, #6
 80047e6:	2200      	movs	r2, #0
 80047e8:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80047ec:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 80047f0:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80047f4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80047f8:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80047fc:	2300      	movs	r3, #0
 80047fe:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8004802:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8004806:	4622      	mov	r2, r4
 8004808:	462b      	mov	r3, r5
 800480a:	f04f 0000 	mov.w	r0, #0
 800480e:	f04f 0100 	mov.w	r1, #0
 8004812:	0159      	lsls	r1, r3, #5
 8004814:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004818:	0150      	lsls	r0, r2, #5
 800481a:	4602      	mov	r2, r0
 800481c:	460b      	mov	r3, r1
 800481e:	4621      	mov	r1, r4
 8004820:	1a51      	subs	r1, r2, r1
 8004822:	6439      	str	r1, [r7, #64]	@ 0x40
 8004824:	4629      	mov	r1, r5
 8004826:	eb63 0301 	sbc.w	r3, r3, r1
 800482a:	647b      	str	r3, [r7, #68]	@ 0x44
 800482c:	f04f 0200 	mov.w	r2, #0
 8004830:	f04f 0300 	mov.w	r3, #0
 8004834:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 8004838:	4649      	mov	r1, r9
 800483a:	018b      	lsls	r3, r1, #6
 800483c:	4641      	mov	r1, r8
 800483e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004842:	4641      	mov	r1, r8
 8004844:	018a      	lsls	r2, r1, #6
 8004846:	4641      	mov	r1, r8
 8004848:	1a51      	subs	r1, r2, r1
 800484a:	63b9      	str	r1, [r7, #56]	@ 0x38
 800484c:	4649      	mov	r1, r9
 800484e:	eb63 0301 	sbc.w	r3, r3, r1
 8004852:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004854:	f04f 0200 	mov.w	r2, #0
 8004858:	f04f 0300 	mov.w	r3, #0
 800485c:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8004860:	4649      	mov	r1, r9
 8004862:	00cb      	lsls	r3, r1, #3
 8004864:	4641      	mov	r1, r8
 8004866:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800486a:	4641      	mov	r1, r8
 800486c:	00ca      	lsls	r2, r1, #3
 800486e:	4610      	mov	r0, r2
 8004870:	4619      	mov	r1, r3
 8004872:	4603      	mov	r3, r0
 8004874:	4622      	mov	r2, r4
 8004876:	189b      	adds	r3, r3, r2
 8004878:	633b      	str	r3, [r7, #48]	@ 0x30
 800487a:	462b      	mov	r3, r5
 800487c:	460a      	mov	r2, r1
 800487e:	eb42 0303 	adc.w	r3, r2, r3
 8004882:	637b      	str	r3, [r7, #52]	@ 0x34
 8004884:	f04f 0200 	mov.w	r2, #0
 8004888:	f04f 0300 	mov.w	r3, #0
 800488c:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8004890:	4629      	mov	r1, r5
 8004892:	024b      	lsls	r3, r1, #9
 8004894:	4621      	mov	r1, r4
 8004896:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800489a:	4621      	mov	r1, r4
 800489c:	024a      	lsls	r2, r1, #9
 800489e:	4610      	mov	r0, r2
 80048a0:	4619      	mov	r1, r3
 80048a2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80048a6:	2200      	movs	r2, #0
 80048a8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80048ac:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80048b0:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 80048b4:	f7fc f9e8 	bl	8000c88 <__aeabi_uldivmod>
 80048b8:	4602      	mov	r2, r0
 80048ba:	460b      	mov	r3, r1
 80048bc:	4613      	mov	r3, r2
 80048be:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80048c2:	e067      	b.n	8004994 <HAL_RCC_GetSysClockFreq+0x24c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80048c4:	4b75      	ldr	r3, [pc, #468]	@ (8004a9c <HAL_RCC_GetSysClockFreq+0x354>)
 80048c6:	685b      	ldr	r3, [r3, #4]
 80048c8:	099b      	lsrs	r3, r3, #6
 80048ca:	2200      	movs	r2, #0
 80048cc:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80048d0:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 80048d4:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 80048d8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80048dc:	67bb      	str	r3, [r7, #120]	@ 0x78
 80048de:	2300      	movs	r3, #0
 80048e0:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80048e2:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 80048e6:	4622      	mov	r2, r4
 80048e8:	462b      	mov	r3, r5
 80048ea:	f04f 0000 	mov.w	r0, #0
 80048ee:	f04f 0100 	mov.w	r1, #0
 80048f2:	0159      	lsls	r1, r3, #5
 80048f4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80048f8:	0150      	lsls	r0, r2, #5
 80048fa:	4602      	mov	r2, r0
 80048fc:	460b      	mov	r3, r1
 80048fe:	4621      	mov	r1, r4
 8004900:	1a51      	subs	r1, r2, r1
 8004902:	62b9      	str	r1, [r7, #40]	@ 0x28
 8004904:	4629      	mov	r1, r5
 8004906:	eb63 0301 	sbc.w	r3, r3, r1
 800490a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800490c:	f04f 0200 	mov.w	r2, #0
 8004910:	f04f 0300 	mov.w	r3, #0
 8004914:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 8004918:	4649      	mov	r1, r9
 800491a:	018b      	lsls	r3, r1, #6
 800491c:	4641      	mov	r1, r8
 800491e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004922:	4641      	mov	r1, r8
 8004924:	018a      	lsls	r2, r1, #6
 8004926:	4641      	mov	r1, r8
 8004928:	ebb2 0a01 	subs.w	sl, r2, r1
 800492c:	4649      	mov	r1, r9
 800492e:	eb63 0b01 	sbc.w	fp, r3, r1
 8004932:	f04f 0200 	mov.w	r2, #0
 8004936:	f04f 0300 	mov.w	r3, #0
 800493a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800493e:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8004942:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004946:	4692      	mov	sl, r2
 8004948:	469b      	mov	fp, r3
 800494a:	4623      	mov	r3, r4
 800494c:	eb1a 0303 	adds.w	r3, sl, r3
 8004950:	623b      	str	r3, [r7, #32]
 8004952:	462b      	mov	r3, r5
 8004954:	eb4b 0303 	adc.w	r3, fp, r3
 8004958:	627b      	str	r3, [r7, #36]	@ 0x24
 800495a:	f04f 0200 	mov.w	r2, #0
 800495e:	f04f 0300 	mov.w	r3, #0
 8004962:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8004966:	4629      	mov	r1, r5
 8004968:	028b      	lsls	r3, r1, #10
 800496a:	4621      	mov	r1, r4
 800496c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004970:	4621      	mov	r1, r4
 8004972:	028a      	lsls	r2, r1, #10
 8004974:	4610      	mov	r0, r2
 8004976:	4619      	mov	r1, r3
 8004978:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800497c:	2200      	movs	r2, #0
 800497e:	673b      	str	r3, [r7, #112]	@ 0x70
 8004980:	677a      	str	r2, [r7, #116]	@ 0x74
 8004982:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8004986:	f7fc f97f 	bl	8000c88 <__aeabi_uldivmod>
 800498a:	4602      	mov	r2, r0
 800498c:	460b      	mov	r3, r1
 800498e:	4613      	mov	r3, r2
 8004990:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8004994:	4b41      	ldr	r3, [pc, #260]	@ (8004a9c <HAL_RCC_GetSysClockFreq+0x354>)
 8004996:	685b      	ldr	r3, [r3, #4]
 8004998:	0c1b      	lsrs	r3, r3, #16
 800499a:	f003 0303 	and.w	r3, r3, #3
 800499e:	3301      	adds	r3, #1
 80049a0:	005b      	lsls	r3, r3, #1
 80049a2:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8

      sysclockfreq = pllvco / pllp;
 80049a6:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80049aa:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 80049ae:	fbb2 f3f3 	udiv	r3, r2, r3
 80049b2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80049b6:	e0eb      	b.n	8004b90 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLLR:  /* PLL/PLLR used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80049b8:	4b38      	ldr	r3, [pc, #224]	@ (8004a9c <HAL_RCC_GetSysClockFreq+0x354>)
 80049ba:	685b      	ldr	r3, [r3, #4]
 80049bc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80049c0:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80049c4:	4b35      	ldr	r3, [pc, #212]	@ (8004a9c <HAL_RCC_GetSysClockFreq+0x354>)
 80049c6:	685b      	ldr	r3, [r3, #4]
 80049c8:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80049cc:	2b00      	cmp	r3, #0
 80049ce:	d06b      	beq.n	8004aa8 <HAL_RCC_GetSysClockFreq+0x360>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80049d0:	4b32      	ldr	r3, [pc, #200]	@ (8004a9c <HAL_RCC_GetSysClockFreq+0x354>)
 80049d2:	685b      	ldr	r3, [r3, #4]
 80049d4:	099b      	lsrs	r3, r3, #6
 80049d6:	2200      	movs	r2, #0
 80049d8:	66bb      	str	r3, [r7, #104]	@ 0x68
 80049da:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80049dc:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80049de:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80049e2:	663b      	str	r3, [r7, #96]	@ 0x60
 80049e4:	2300      	movs	r3, #0
 80049e6:	667b      	str	r3, [r7, #100]	@ 0x64
 80049e8:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 80049ec:	4622      	mov	r2, r4
 80049ee:	462b      	mov	r3, r5
 80049f0:	f04f 0000 	mov.w	r0, #0
 80049f4:	f04f 0100 	mov.w	r1, #0
 80049f8:	0159      	lsls	r1, r3, #5
 80049fa:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80049fe:	0150      	lsls	r0, r2, #5
 8004a00:	4602      	mov	r2, r0
 8004a02:	460b      	mov	r3, r1
 8004a04:	4621      	mov	r1, r4
 8004a06:	1a51      	subs	r1, r2, r1
 8004a08:	61b9      	str	r1, [r7, #24]
 8004a0a:	4629      	mov	r1, r5
 8004a0c:	eb63 0301 	sbc.w	r3, r3, r1
 8004a10:	61fb      	str	r3, [r7, #28]
 8004a12:	f04f 0200 	mov.w	r2, #0
 8004a16:	f04f 0300 	mov.w	r3, #0
 8004a1a:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8004a1e:	4659      	mov	r1, fp
 8004a20:	018b      	lsls	r3, r1, #6
 8004a22:	4651      	mov	r1, sl
 8004a24:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004a28:	4651      	mov	r1, sl
 8004a2a:	018a      	lsls	r2, r1, #6
 8004a2c:	4651      	mov	r1, sl
 8004a2e:	ebb2 0801 	subs.w	r8, r2, r1
 8004a32:	4659      	mov	r1, fp
 8004a34:	eb63 0901 	sbc.w	r9, r3, r1
 8004a38:	f04f 0200 	mov.w	r2, #0
 8004a3c:	f04f 0300 	mov.w	r3, #0
 8004a40:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004a44:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004a48:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004a4c:	4690      	mov	r8, r2
 8004a4e:	4699      	mov	r9, r3
 8004a50:	4623      	mov	r3, r4
 8004a52:	eb18 0303 	adds.w	r3, r8, r3
 8004a56:	613b      	str	r3, [r7, #16]
 8004a58:	462b      	mov	r3, r5
 8004a5a:	eb49 0303 	adc.w	r3, r9, r3
 8004a5e:	617b      	str	r3, [r7, #20]
 8004a60:	f04f 0200 	mov.w	r2, #0
 8004a64:	f04f 0300 	mov.w	r3, #0
 8004a68:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8004a6c:	4629      	mov	r1, r5
 8004a6e:	024b      	lsls	r3, r1, #9
 8004a70:	4621      	mov	r1, r4
 8004a72:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8004a76:	4621      	mov	r1, r4
 8004a78:	024a      	lsls	r2, r1, #9
 8004a7a:	4610      	mov	r0, r2
 8004a7c:	4619      	mov	r1, r3
 8004a7e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8004a82:	2200      	movs	r2, #0
 8004a84:	65bb      	str	r3, [r7, #88]	@ 0x58
 8004a86:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8004a88:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8004a8c:	f7fc f8fc 	bl	8000c88 <__aeabi_uldivmod>
 8004a90:	4602      	mov	r2, r0
 8004a92:	460b      	mov	r3, r1
 8004a94:	4613      	mov	r3, r2
 8004a96:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004a9a:	e065      	b.n	8004b68 <HAL_RCC_GetSysClockFreq+0x420>
 8004a9c:	40023800 	.word	0x40023800
 8004aa0:	00f42400 	.word	0x00f42400
 8004aa4:	007a1200 	.word	0x007a1200
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004aa8:	4b3d      	ldr	r3, [pc, #244]	@ (8004ba0 <HAL_RCC_GetSysClockFreq+0x458>)
 8004aaa:	685b      	ldr	r3, [r3, #4]
 8004aac:	099b      	lsrs	r3, r3, #6
 8004aae:	2200      	movs	r2, #0
 8004ab0:	4618      	mov	r0, r3
 8004ab2:	4611      	mov	r1, r2
 8004ab4:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8004ab8:	653b      	str	r3, [r7, #80]	@ 0x50
 8004aba:	2300      	movs	r3, #0
 8004abc:	657b      	str	r3, [r7, #84]	@ 0x54
 8004abe:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8004ac2:	4642      	mov	r2, r8
 8004ac4:	464b      	mov	r3, r9
 8004ac6:	f04f 0000 	mov.w	r0, #0
 8004aca:	f04f 0100 	mov.w	r1, #0
 8004ace:	0159      	lsls	r1, r3, #5
 8004ad0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004ad4:	0150      	lsls	r0, r2, #5
 8004ad6:	4602      	mov	r2, r0
 8004ad8:	460b      	mov	r3, r1
 8004ada:	4641      	mov	r1, r8
 8004adc:	1a51      	subs	r1, r2, r1
 8004ade:	60b9      	str	r1, [r7, #8]
 8004ae0:	4649      	mov	r1, r9
 8004ae2:	eb63 0301 	sbc.w	r3, r3, r1
 8004ae6:	60fb      	str	r3, [r7, #12]
 8004ae8:	f04f 0200 	mov.w	r2, #0
 8004aec:	f04f 0300 	mov.w	r3, #0
 8004af0:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8004af4:	4659      	mov	r1, fp
 8004af6:	018b      	lsls	r3, r1, #6
 8004af8:	4651      	mov	r1, sl
 8004afa:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004afe:	4651      	mov	r1, sl
 8004b00:	018a      	lsls	r2, r1, #6
 8004b02:	4651      	mov	r1, sl
 8004b04:	1a54      	subs	r4, r2, r1
 8004b06:	4659      	mov	r1, fp
 8004b08:	eb63 0501 	sbc.w	r5, r3, r1
 8004b0c:	f04f 0200 	mov.w	r2, #0
 8004b10:	f04f 0300 	mov.w	r3, #0
 8004b14:	00eb      	lsls	r3, r5, #3
 8004b16:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004b1a:	00e2      	lsls	r2, r4, #3
 8004b1c:	4614      	mov	r4, r2
 8004b1e:	461d      	mov	r5, r3
 8004b20:	4643      	mov	r3, r8
 8004b22:	18e3      	adds	r3, r4, r3
 8004b24:	603b      	str	r3, [r7, #0]
 8004b26:	464b      	mov	r3, r9
 8004b28:	eb45 0303 	adc.w	r3, r5, r3
 8004b2c:	607b      	str	r3, [r7, #4]
 8004b2e:	f04f 0200 	mov.w	r2, #0
 8004b32:	f04f 0300 	mov.w	r3, #0
 8004b36:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004b3a:	4629      	mov	r1, r5
 8004b3c:	028b      	lsls	r3, r1, #10
 8004b3e:	4621      	mov	r1, r4
 8004b40:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004b44:	4621      	mov	r1, r4
 8004b46:	028a      	lsls	r2, r1, #10
 8004b48:	4610      	mov	r0, r2
 8004b4a:	4619      	mov	r1, r3
 8004b4c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8004b50:	2200      	movs	r2, #0
 8004b52:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004b54:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8004b56:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8004b5a:	f7fc f895 	bl	8000c88 <__aeabi_uldivmod>
 8004b5e:	4602      	mov	r2, r0
 8004b60:	460b      	mov	r3, r1
 8004b62:	4613      	mov	r3, r2
 8004b64:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllr = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos);
 8004b68:	4b0d      	ldr	r3, [pc, #52]	@ (8004ba0 <HAL_RCC_GetSysClockFreq+0x458>)
 8004b6a:	685b      	ldr	r3, [r3, #4]
 8004b6c:	0f1b      	lsrs	r3, r3, #28
 8004b6e:	f003 0307 	and.w	r3, r3, #7
 8004b72:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4

      sysclockfreq = pllvco / pllr;
 8004b76:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8004b7a:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8004b7e:	fbb2 f3f3 	udiv	r3, r2, r3
 8004b82:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8004b86:	e003      	b.n	8004b90 <HAL_RCC_GetSysClockFreq+0x448>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8004b88:	4b06      	ldr	r3, [pc, #24]	@ (8004ba4 <HAL_RCC_GetSysClockFreq+0x45c>)
 8004b8a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8004b8e:	bf00      	nop
    }
  }
  return sysclockfreq;
 8004b90:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
}
 8004b94:	4618      	mov	r0, r3
 8004b96:	37b8      	adds	r7, #184	@ 0xb8
 8004b98:	46bd      	mov	sp, r7
 8004b9a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004b9e:	bf00      	nop
 8004ba0:	40023800 	.word	0x40023800
 8004ba4:	00f42400 	.word	0x00f42400

08004ba8 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004ba8:	b580      	push	{r7, lr}
 8004baa:	b086      	sub	sp, #24
 8004bac:	af00      	add	r7, sp, #0
 8004bae:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	2b00      	cmp	r3, #0
 8004bb4:	d101      	bne.n	8004bba <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8004bb6:	2301      	movs	r3, #1
 8004bb8:	e28d      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004bba:	687b      	ldr	r3, [r7, #4]
 8004bbc:	681b      	ldr	r3, [r3, #0]
 8004bbe:	f003 0301 	and.w	r3, r3, #1
 8004bc2:	2b00      	cmp	r3, #0
 8004bc4:	f000 8083 	beq.w	8004cce <HAL_RCC_OscConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 8004bc8:	4b94      	ldr	r3, [pc, #592]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004bca:	689b      	ldr	r3, [r3, #8]
 8004bcc:	f003 030c 	and.w	r3, r3, #12
 8004bd0:	2b04      	cmp	r3, #4
 8004bd2:	d019      	beq.n	8004c08 <HAL_RCC_OscConfig+0x60>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8004bd4:	4b91      	ldr	r3, [pc, #580]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004bd6:	689b      	ldr	r3, [r3, #8]
 8004bd8:	f003 030c 	and.w	r3, r3, #12
        || \
 8004bdc:	2b08      	cmp	r3, #8
 8004bde:	d106      	bne.n	8004bee <HAL_RCC_OscConfig+0x46>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8004be0:	4b8e      	ldr	r3, [pc, #568]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004be2:	685b      	ldr	r3, [r3, #4]
 8004be4:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004be8:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004bec:	d00c      	beq.n	8004c08 <HAL_RCC_OscConfig+0x60>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8004bee:	4b8b      	ldr	r3, [pc, #556]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004bf0:	689b      	ldr	r3, [r3, #8]
 8004bf2:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8004bf6:	2b0c      	cmp	r3, #12
 8004bf8:	d112      	bne.n	8004c20 <HAL_RCC_OscConfig+0x78>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8004bfa:	4b88      	ldr	r3, [pc, #544]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004bfc:	685b      	ldr	r3, [r3, #4]
 8004bfe:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004c02:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004c06:	d10b      	bne.n	8004c20 <HAL_RCC_OscConfig+0x78>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
#endif /* STM32F446xx */
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004c08:	4b84      	ldr	r3, [pc, #528]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004c10:	2b00      	cmp	r3, #0
 8004c12:	d05b      	beq.n	8004ccc <HAL_RCC_OscConfig+0x124>
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	685b      	ldr	r3, [r3, #4]
 8004c18:	2b00      	cmp	r3, #0
 8004c1a:	d157      	bne.n	8004ccc <HAL_RCC_OscConfig+0x124>
      {
        return HAL_ERROR;
 8004c1c:	2301      	movs	r3, #1
 8004c1e:	e25a      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	685b      	ldr	r3, [r3, #4]
 8004c24:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004c28:	d106      	bne.n	8004c38 <HAL_RCC_OscConfig+0x90>
 8004c2a:	4b7c      	ldr	r3, [pc, #496]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	4a7b      	ldr	r2, [pc, #492]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004c30:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004c34:	6013      	str	r3, [r2, #0]
 8004c36:	e01d      	b.n	8004c74 <HAL_RCC_OscConfig+0xcc>
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	685b      	ldr	r3, [r3, #4]
 8004c3c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004c40:	d10c      	bne.n	8004c5c <HAL_RCC_OscConfig+0xb4>
 8004c42:	4b76      	ldr	r3, [pc, #472]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	4a75      	ldr	r2, [pc, #468]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004c48:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004c4c:	6013      	str	r3, [r2, #0]
 8004c4e:	4b73      	ldr	r3, [pc, #460]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004c50:	681b      	ldr	r3, [r3, #0]
 8004c52:	4a72      	ldr	r2, [pc, #456]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004c54:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004c58:	6013      	str	r3, [r2, #0]
 8004c5a:	e00b      	b.n	8004c74 <HAL_RCC_OscConfig+0xcc>
 8004c5c:	4b6f      	ldr	r3, [pc, #444]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004c5e:	681b      	ldr	r3, [r3, #0]
 8004c60:	4a6e      	ldr	r2, [pc, #440]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004c62:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004c66:	6013      	str	r3, [r2, #0]
 8004c68:	4b6c      	ldr	r3, [pc, #432]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004c6a:	681b      	ldr	r3, [r3, #0]
 8004c6c:	4a6b      	ldr	r2, [pc, #428]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004c6e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004c72:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	685b      	ldr	r3, [r3, #4]
 8004c78:	2b00      	cmp	r3, #0
 8004c7a:	d013      	beq.n	8004ca4 <HAL_RCC_OscConfig+0xfc>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004c7c:	f7fe f876 	bl	8002d6c <HAL_GetTick>
 8004c80:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004c82:	e008      	b.n	8004c96 <HAL_RCC_OscConfig+0xee>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8004c84:	f7fe f872 	bl	8002d6c <HAL_GetTick>
 8004c88:	4602      	mov	r2, r0
 8004c8a:	693b      	ldr	r3, [r7, #16]
 8004c8c:	1ad3      	subs	r3, r2, r3
 8004c8e:	2b64      	cmp	r3, #100	@ 0x64
 8004c90:	d901      	bls.n	8004c96 <HAL_RCC_OscConfig+0xee>
          {
            return HAL_TIMEOUT;
 8004c92:	2303      	movs	r3, #3
 8004c94:	e21f      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004c96:	4b61      	ldr	r3, [pc, #388]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004c9e:	2b00      	cmp	r3, #0
 8004ca0:	d0f0      	beq.n	8004c84 <HAL_RCC_OscConfig+0xdc>
 8004ca2:	e014      	b.n	8004cce <HAL_RCC_OscConfig+0x126>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004ca4:	f7fe f862 	bl	8002d6c <HAL_GetTick>
 8004ca8:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004caa:	e008      	b.n	8004cbe <HAL_RCC_OscConfig+0x116>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8004cac:	f7fe f85e 	bl	8002d6c <HAL_GetTick>
 8004cb0:	4602      	mov	r2, r0
 8004cb2:	693b      	ldr	r3, [r7, #16]
 8004cb4:	1ad3      	subs	r3, r2, r3
 8004cb6:	2b64      	cmp	r3, #100	@ 0x64
 8004cb8:	d901      	bls.n	8004cbe <HAL_RCC_OscConfig+0x116>
          {
            return HAL_TIMEOUT;
 8004cba:	2303      	movs	r3, #3
 8004cbc:	e20b      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004cbe:	4b57      	ldr	r3, [pc, #348]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004cc6:	2b00      	cmp	r3, #0
 8004cc8:	d1f0      	bne.n	8004cac <HAL_RCC_OscConfig+0x104>
 8004cca:	e000      	b.n	8004cce <HAL_RCC_OscConfig+0x126>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004ccc:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	f003 0302 	and.w	r3, r3, #2
 8004cd6:	2b00      	cmp	r3, #0
 8004cd8:	d06f      	beq.n	8004dba <HAL_RCC_OscConfig+0x212>
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 8004cda:	4b50      	ldr	r3, [pc, #320]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004cdc:	689b      	ldr	r3, [r3, #8]
 8004cde:	f003 030c 	and.w	r3, r3, #12
 8004ce2:	2b00      	cmp	r3, #0
 8004ce4:	d017      	beq.n	8004d16 <HAL_RCC_OscConfig+0x16e>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8004ce6:	4b4d      	ldr	r3, [pc, #308]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004ce8:	689b      	ldr	r3, [r3, #8]
 8004cea:	f003 030c 	and.w	r3, r3, #12
        || \
 8004cee:	2b08      	cmp	r3, #8
 8004cf0:	d105      	bne.n	8004cfe <HAL_RCC_OscConfig+0x156>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8004cf2:	4b4a      	ldr	r3, [pc, #296]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004cf4:	685b      	ldr	r3, [r3, #4]
 8004cf6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004cfa:	2b00      	cmp	r3, #0
 8004cfc:	d00b      	beq.n	8004d16 <HAL_RCC_OscConfig+0x16e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004cfe:	4b47      	ldr	r3, [pc, #284]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004d00:	689b      	ldr	r3, [r3, #8]
 8004d02:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8004d06:	2b0c      	cmp	r3, #12
 8004d08:	d11c      	bne.n	8004d44 <HAL_RCC_OscConfig+0x19c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004d0a:	4b44      	ldr	r3, [pc, #272]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004d0c:	685b      	ldr	r3, [r3, #4]
 8004d0e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004d12:	2b00      	cmp	r3, #0
 8004d14:	d116      	bne.n	8004d44 <HAL_RCC_OscConfig+0x19c>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
#endif /* STM32F446xx */
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004d16:	4b41      	ldr	r3, [pc, #260]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	f003 0302 	and.w	r3, r3, #2
 8004d1e:	2b00      	cmp	r3, #0
 8004d20:	d005      	beq.n	8004d2e <HAL_RCC_OscConfig+0x186>
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	68db      	ldr	r3, [r3, #12]
 8004d26:	2b01      	cmp	r3, #1
 8004d28:	d001      	beq.n	8004d2e <HAL_RCC_OscConfig+0x186>
      {
        return HAL_ERROR;
 8004d2a:	2301      	movs	r3, #1
 8004d2c:	e1d3      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004d2e:	4b3b      	ldr	r3, [pc, #236]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004d30:	681b      	ldr	r3, [r3, #0]
 8004d32:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004d36:	687b      	ldr	r3, [r7, #4]
 8004d38:	691b      	ldr	r3, [r3, #16]
 8004d3a:	00db      	lsls	r3, r3, #3
 8004d3c:	4937      	ldr	r1, [pc, #220]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004d3e:	4313      	orrs	r3, r2
 8004d40:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004d42:	e03a      	b.n	8004dba <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	68db      	ldr	r3, [r3, #12]
 8004d48:	2b00      	cmp	r3, #0
 8004d4a:	d020      	beq.n	8004d8e <HAL_RCC_OscConfig+0x1e6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8004d4c:	4b34      	ldr	r3, [pc, #208]	@ (8004e20 <HAL_RCC_OscConfig+0x278>)
 8004d4e:	2201      	movs	r2, #1
 8004d50:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004d52:	f7fe f80b 	bl	8002d6c <HAL_GetTick>
 8004d56:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004d58:	e008      	b.n	8004d6c <HAL_RCC_OscConfig+0x1c4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8004d5a:	f7fe f807 	bl	8002d6c <HAL_GetTick>
 8004d5e:	4602      	mov	r2, r0
 8004d60:	693b      	ldr	r3, [r7, #16]
 8004d62:	1ad3      	subs	r3, r2, r3
 8004d64:	2b02      	cmp	r3, #2
 8004d66:	d901      	bls.n	8004d6c <HAL_RCC_OscConfig+0x1c4>
          {
            return HAL_TIMEOUT;
 8004d68:	2303      	movs	r3, #3
 8004d6a:	e1b4      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004d6c:	4b2b      	ldr	r3, [pc, #172]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004d6e:	681b      	ldr	r3, [r3, #0]
 8004d70:	f003 0302 	and.w	r3, r3, #2
 8004d74:	2b00      	cmp	r3, #0
 8004d76:	d0f0      	beq.n	8004d5a <HAL_RCC_OscConfig+0x1b2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004d78:	4b28      	ldr	r3, [pc, #160]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	691b      	ldr	r3, [r3, #16]
 8004d84:	00db      	lsls	r3, r3, #3
 8004d86:	4925      	ldr	r1, [pc, #148]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004d88:	4313      	orrs	r3, r2
 8004d8a:	600b      	str	r3, [r1, #0]
 8004d8c:	e015      	b.n	8004dba <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8004d8e:	4b24      	ldr	r3, [pc, #144]	@ (8004e20 <HAL_RCC_OscConfig+0x278>)
 8004d90:	2200      	movs	r2, #0
 8004d92:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004d94:	f7fd ffea 	bl	8002d6c <HAL_GetTick>
 8004d98:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004d9a:	e008      	b.n	8004dae <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8004d9c:	f7fd ffe6 	bl	8002d6c <HAL_GetTick>
 8004da0:	4602      	mov	r2, r0
 8004da2:	693b      	ldr	r3, [r7, #16]
 8004da4:	1ad3      	subs	r3, r2, r3
 8004da6:	2b02      	cmp	r3, #2
 8004da8:	d901      	bls.n	8004dae <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 8004daa:	2303      	movs	r3, #3
 8004dac:	e193      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004dae:	4b1b      	ldr	r3, [pc, #108]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004db0:	681b      	ldr	r3, [r3, #0]
 8004db2:	f003 0302 	and.w	r3, r3, #2
 8004db6:	2b00      	cmp	r3, #0
 8004db8:	d1f0      	bne.n	8004d9c <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	681b      	ldr	r3, [r3, #0]
 8004dbe:	f003 0308 	and.w	r3, r3, #8
 8004dc2:	2b00      	cmp	r3, #0
 8004dc4:	d036      	beq.n	8004e34 <HAL_RCC_OscConfig+0x28c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8004dc6:	687b      	ldr	r3, [r7, #4]
 8004dc8:	695b      	ldr	r3, [r3, #20]
 8004dca:	2b00      	cmp	r3, #0
 8004dcc:	d016      	beq.n	8004dfc <HAL_RCC_OscConfig+0x254>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004dce:	4b15      	ldr	r3, [pc, #84]	@ (8004e24 <HAL_RCC_OscConfig+0x27c>)
 8004dd0:	2201      	movs	r2, #1
 8004dd2:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004dd4:	f7fd ffca 	bl	8002d6c <HAL_GetTick>
 8004dd8:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004dda:	e008      	b.n	8004dee <HAL_RCC_OscConfig+0x246>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004ddc:	f7fd ffc6 	bl	8002d6c <HAL_GetTick>
 8004de0:	4602      	mov	r2, r0
 8004de2:	693b      	ldr	r3, [r7, #16]
 8004de4:	1ad3      	subs	r3, r2, r3
 8004de6:	2b02      	cmp	r3, #2
 8004de8:	d901      	bls.n	8004dee <HAL_RCC_OscConfig+0x246>
        {
          return HAL_TIMEOUT;
 8004dea:	2303      	movs	r3, #3
 8004dec:	e173      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004dee:	4b0b      	ldr	r3, [pc, #44]	@ (8004e1c <HAL_RCC_OscConfig+0x274>)
 8004df0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004df2:	f003 0302 	and.w	r3, r3, #2
 8004df6:	2b00      	cmp	r3, #0
 8004df8:	d0f0      	beq.n	8004ddc <HAL_RCC_OscConfig+0x234>
 8004dfa:	e01b      	b.n	8004e34 <HAL_RCC_OscConfig+0x28c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8004dfc:	4b09      	ldr	r3, [pc, #36]	@ (8004e24 <HAL_RCC_OscConfig+0x27c>)
 8004dfe:	2200      	movs	r2, #0
 8004e00:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004e02:	f7fd ffb3 	bl	8002d6c <HAL_GetTick>
 8004e06:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004e08:	e00e      	b.n	8004e28 <HAL_RCC_OscConfig+0x280>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004e0a:	f7fd ffaf 	bl	8002d6c <HAL_GetTick>
 8004e0e:	4602      	mov	r2, r0
 8004e10:	693b      	ldr	r3, [r7, #16]
 8004e12:	1ad3      	subs	r3, r2, r3
 8004e14:	2b02      	cmp	r3, #2
 8004e16:	d907      	bls.n	8004e28 <HAL_RCC_OscConfig+0x280>
        {
          return HAL_TIMEOUT;
 8004e18:	2303      	movs	r3, #3
 8004e1a:	e15c      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
 8004e1c:	40023800 	.word	0x40023800
 8004e20:	42470000 	.word	0x42470000
 8004e24:	42470e80 	.word	0x42470e80
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004e28:	4b8a      	ldr	r3, [pc, #552]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004e2a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004e2c:	f003 0302 	and.w	r3, r3, #2
 8004e30:	2b00      	cmp	r3, #0
 8004e32:	d1ea      	bne.n	8004e0a <HAL_RCC_OscConfig+0x262>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004e34:	687b      	ldr	r3, [r7, #4]
 8004e36:	681b      	ldr	r3, [r3, #0]
 8004e38:	f003 0304 	and.w	r3, r3, #4
 8004e3c:	2b00      	cmp	r3, #0
 8004e3e:	f000 8097 	beq.w	8004f70 <HAL_RCC_OscConfig+0x3c8>
  {
    FlagStatus       pwrclkchanged = RESET;
 8004e42:	2300      	movs	r3, #0
 8004e44:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004e46:	4b83      	ldr	r3, [pc, #524]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004e48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e4a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004e4e:	2b00      	cmp	r3, #0
 8004e50:	d10f      	bne.n	8004e72 <HAL_RCC_OscConfig+0x2ca>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004e52:	2300      	movs	r3, #0
 8004e54:	60bb      	str	r3, [r7, #8]
 8004e56:	4b7f      	ldr	r3, [pc, #508]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004e58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e5a:	4a7e      	ldr	r2, [pc, #504]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004e5c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004e60:	6413      	str	r3, [r2, #64]	@ 0x40
 8004e62:	4b7c      	ldr	r3, [pc, #496]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004e64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e66:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004e6a:	60bb      	str	r3, [r7, #8]
 8004e6c:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8004e6e:	2301      	movs	r3, #1
 8004e70:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004e72:	4b79      	ldr	r3, [pc, #484]	@ (8005058 <HAL_RCC_OscConfig+0x4b0>)
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004e7a:	2b00      	cmp	r3, #0
 8004e7c:	d118      	bne.n	8004eb0 <HAL_RCC_OscConfig+0x308>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004e7e:	4b76      	ldr	r3, [pc, #472]	@ (8005058 <HAL_RCC_OscConfig+0x4b0>)
 8004e80:	681b      	ldr	r3, [r3, #0]
 8004e82:	4a75      	ldr	r2, [pc, #468]	@ (8005058 <HAL_RCC_OscConfig+0x4b0>)
 8004e84:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004e88:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004e8a:	f7fd ff6f 	bl	8002d6c <HAL_GetTick>
 8004e8e:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004e90:	e008      	b.n	8004ea4 <HAL_RCC_OscConfig+0x2fc>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004e92:	f7fd ff6b 	bl	8002d6c <HAL_GetTick>
 8004e96:	4602      	mov	r2, r0
 8004e98:	693b      	ldr	r3, [r7, #16]
 8004e9a:	1ad3      	subs	r3, r2, r3
 8004e9c:	2b02      	cmp	r3, #2
 8004e9e:	d901      	bls.n	8004ea4 <HAL_RCC_OscConfig+0x2fc>
        {
          return HAL_TIMEOUT;
 8004ea0:	2303      	movs	r3, #3
 8004ea2:	e118      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004ea4:	4b6c      	ldr	r3, [pc, #432]	@ (8005058 <HAL_RCC_OscConfig+0x4b0>)
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004eac:	2b00      	cmp	r3, #0
 8004eae:	d0f0      	beq.n	8004e92 <HAL_RCC_OscConfig+0x2ea>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	689b      	ldr	r3, [r3, #8]
 8004eb4:	2b01      	cmp	r3, #1
 8004eb6:	d106      	bne.n	8004ec6 <HAL_RCC_OscConfig+0x31e>
 8004eb8:	4b66      	ldr	r3, [pc, #408]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004eba:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ebc:	4a65      	ldr	r2, [pc, #404]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004ebe:	f043 0301 	orr.w	r3, r3, #1
 8004ec2:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ec4:	e01c      	b.n	8004f00 <HAL_RCC_OscConfig+0x358>
 8004ec6:	687b      	ldr	r3, [r7, #4]
 8004ec8:	689b      	ldr	r3, [r3, #8]
 8004eca:	2b05      	cmp	r3, #5
 8004ecc:	d10c      	bne.n	8004ee8 <HAL_RCC_OscConfig+0x340>
 8004ece:	4b61      	ldr	r3, [pc, #388]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004ed0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ed2:	4a60      	ldr	r2, [pc, #384]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004ed4:	f043 0304 	orr.w	r3, r3, #4
 8004ed8:	6713      	str	r3, [r2, #112]	@ 0x70
 8004eda:	4b5e      	ldr	r3, [pc, #376]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004edc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ede:	4a5d      	ldr	r2, [pc, #372]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004ee0:	f043 0301 	orr.w	r3, r3, #1
 8004ee4:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ee6:	e00b      	b.n	8004f00 <HAL_RCC_OscConfig+0x358>
 8004ee8:	4b5a      	ldr	r3, [pc, #360]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004eea:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004eec:	4a59      	ldr	r2, [pc, #356]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004eee:	f023 0301 	bic.w	r3, r3, #1
 8004ef2:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ef4:	4b57      	ldr	r3, [pc, #348]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004ef6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ef8:	4a56      	ldr	r2, [pc, #344]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004efa:	f023 0304 	bic.w	r3, r3, #4
 8004efe:	6713      	str	r3, [r2, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	689b      	ldr	r3, [r3, #8]
 8004f04:	2b00      	cmp	r3, #0
 8004f06:	d015      	beq.n	8004f34 <HAL_RCC_OscConfig+0x38c>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004f08:	f7fd ff30 	bl	8002d6c <HAL_GetTick>
 8004f0c:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004f0e:	e00a      	b.n	8004f26 <HAL_RCC_OscConfig+0x37e>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004f10:	f7fd ff2c 	bl	8002d6c <HAL_GetTick>
 8004f14:	4602      	mov	r2, r0
 8004f16:	693b      	ldr	r3, [r7, #16]
 8004f18:	1ad3      	subs	r3, r2, r3
 8004f1a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004f1e:	4293      	cmp	r3, r2
 8004f20:	d901      	bls.n	8004f26 <HAL_RCC_OscConfig+0x37e>
        {
          return HAL_TIMEOUT;
 8004f22:	2303      	movs	r3, #3
 8004f24:	e0d7      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004f26:	4b4b      	ldr	r3, [pc, #300]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004f28:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004f2a:	f003 0302 	and.w	r3, r3, #2
 8004f2e:	2b00      	cmp	r3, #0
 8004f30:	d0ee      	beq.n	8004f10 <HAL_RCC_OscConfig+0x368>
 8004f32:	e014      	b.n	8004f5e <HAL_RCC_OscConfig+0x3b6>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004f34:	f7fd ff1a 	bl	8002d6c <HAL_GetTick>
 8004f38:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004f3a:	e00a      	b.n	8004f52 <HAL_RCC_OscConfig+0x3aa>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004f3c:	f7fd ff16 	bl	8002d6c <HAL_GetTick>
 8004f40:	4602      	mov	r2, r0
 8004f42:	693b      	ldr	r3, [r7, #16]
 8004f44:	1ad3      	subs	r3, r2, r3
 8004f46:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004f4a:	4293      	cmp	r3, r2
 8004f4c:	d901      	bls.n	8004f52 <HAL_RCC_OscConfig+0x3aa>
        {
          return HAL_TIMEOUT;
 8004f4e:	2303      	movs	r3, #3
 8004f50:	e0c1      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004f52:	4b40      	ldr	r3, [pc, #256]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004f54:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004f56:	f003 0302 	and.w	r3, r3, #2
 8004f5a:	2b00      	cmp	r3, #0
 8004f5c:	d1ee      	bne.n	8004f3c <HAL_RCC_OscConfig+0x394>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8004f5e:	7dfb      	ldrb	r3, [r7, #23]
 8004f60:	2b01      	cmp	r3, #1
 8004f62:	d105      	bne.n	8004f70 <HAL_RCC_OscConfig+0x3c8>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004f64:	4b3b      	ldr	r3, [pc, #236]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004f66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004f68:	4a3a      	ldr	r2, [pc, #232]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004f6a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004f6e:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	699b      	ldr	r3, [r3, #24]
 8004f74:	2b00      	cmp	r3, #0
 8004f76:	f000 80ad 	beq.w	80050d4 <HAL_RCC_OscConfig+0x52c>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8004f7a:	4b36      	ldr	r3, [pc, #216]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004f7c:	689b      	ldr	r3, [r3, #8]
 8004f7e:	f003 030c 	and.w	r3, r3, #12
 8004f82:	2b08      	cmp	r3, #8
 8004f84:	d060      	beq.n	8005048 <HAL_RCC_OscConfig+0x4a0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004f86:	687b      	ldr	r3, [r7, #4]
 8004f88:	699b      	ldr	r3, [r3, #24]
 8004f8a:	2b02      	cmp	r3, #2
 8004f8c:	d145      	bne.n	800501a <HAL_RCC_OscConfig+0x472>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004f8e:	4b33      	ldr	r3, [pc, #204]	@ (800505c <HAL_RCC_OscConfig+0x4b4>)
 8004f90:	2200      	movs	r2, #0
 8004f92:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004f94:	f7fd feea 	bl	8002d6c <HAL_GetTick>
 8004f98:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004f9a:	e008      	b.n	8004fae <HAL_RCC_OscConfig+0x406>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004f9c:	f7fd fee6 	bl	8002d6c <HAL_GetTick>
 8004fa0:	4602      	mov	r2, r0
 8004fa2:	693b      	ldr	r3, [r7, #16]
 8004fa4:	1ad3      	subs	r3, r2, r3
 8004fa6:	2b02      	cmp	r3, #2
 8004fa8:	d901      	bls.n	8004fae <HAL_RCC_OscConfig+0x406>
          {
            return HAL_TIMEOUT;
 8004faa:	2303      	movs	r3, #3
 8004fac:	e093      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004fae:	4b29      	ldr	r3, [pc, #164]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004fb0:	681b      	ldr	r3, [r3, #0]
 8004fb2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004fb6:	2b00      	cmp	r3, #0
 8004fb8:	d1f0      	bne.n	8004f9c <HAL_RCC_OscConfig+0x3f4>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8004fba:	687b      	ldr	r3, [r7, #4]
 8004fbc:	69da      	ldr	r2, [r3, #28]
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	6a1b      	ldr	r3, [r3, #32]
 8004fc2:	431a      	orrs	r2, r3
 8004fc4:	687b      	ldr	r3, [r7, #4]
 8004fc6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fc8:	019b      	lsls	r3, r3, #6
 8004fca:	431a      	orrs	r2, r3
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004fd0:	085b      	lsrs	r3, r3, #1
 8004fd2:	3b01      	subs	r3, #1
 8004fd4:	041b      	lsls	r3, r3, #16
 8004fd6:	431a      	orrs	r2, r3
 8004fd8:	687b      	ldr	r3, [r7, #4]
 8004fda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004fdc:	061b      	lsls	r3, r3, #24
 8004fde:	431a      	orrs	r2, r3
 8004fe0:	687b      	ldr	r3, [r7, #4]
 8004fe2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004fe4:	071b      	lsls	r3, r3, #28
 8004fe6:	491b      	ldr	r1, [pc, #108]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 8004fe8:	4313      	orrs	r3, r2
 8004fea:	604b      	str	r3, [r1, #4]
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)                       | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)        | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)                       | \
                                 (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8004fec:	4b1b      	ldr	r3, [pc, #108]	@ (800505c <HAL_RCC_OscConfig+0x4b4>)
 8004fee:	2201      	movs	r2, #1
 8004ff0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004ff2:	f7fd febb 	bl	8002d6c <HAL_GetTick>
 8004ff6:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004ff8:	e008      	b.n	800500c <HAL_RCC_OscConfig+0x464>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004ffa:	f7fd feb7 	bl	8002d6c <HAL_GetTick>
 8004ffe:	4602      	mov	r2, r0
 8005000:	693b      	ldr	r3, [r7, #16]
 8005002:	1ad3      	subs	r3, r2, r3
 8005004:	2b02      	cmp	r3, #2
 8005006:	d901      	bls.n	800500c <HAL_RCC_OscConfig+0x464>
          {
            return HAL_TIMEOUT;
 8005008:	2303      	movs	r3, #3
 800500a:	e064      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800500c:	4b11      	ldr	r3, [pc, #68]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005014:	2b00      	cmp	r3, #0
 8005016:	d0f0      	beq.n	8004ffa <HAL_RCC_OscConfig+0x452>
 8005018:	e05c      	b.n	80050d4 <HAL_RCC_OscConfig+0x52c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800501a:	4b10      	ldr	r3, [pc, #64]	@ (800505c <HAL_RCC_OscConfig+0x4b4>)
 800501c:	2200      	movs	r2, #0
 800501e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005020:	f7fd fea4 	bl	8002d6c <HAL_GetTick>
 8005024:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005026:	e008      	b.n	800503a <HAL_RCC_OscConfig+0x492>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005028:	f7fd fea0 	bl	8002d6c <HAL_GetTick>
 800502c:	4602      	mov	r2, r0
 800502e:	693b      	ldr	r3, [r7, #16]
 8005030:	1ad3      	subs	r3, r2, r3
 8005032:	2b02      	cmp	r3, #2
 8005034:	d901      	bls.n	800503a <HAL_RCC_OscConfig+0x492>
          {
            return HAL_TIMEOUT;
 8005036:	2303      	movs	r3, #3
 8005038:	e04d      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800503a:	4b06      	ldr	r3, [pc, #24]	@ (8005054 <HAL_RCC_OscConfig+0x4ac>)
 800503c:	681b      	ldr	r3, [r3, #0]
 800503e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005042:	2b00      	cmp	r3, #0
 8005044:	d1f0      	bne.n	8005028 <HAL_RCC_OscConfig+0x480>
 8005046:	e045      	b.n	80050d4 <HAL_RCC_OscConfig+0x52c>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005048:	687b      	ldr	r3, [r7, #4]
 800504a:	699b      	ldr	r3, [r3, #24]
 800504c:	2b01      	cmp	r3, #1
 800504e:	d107      	bne.n	8005060 <HAL_RCC_OscConfig+0x4b8>
      {
        return HAL_ERROR;
 8005050:	2301      	movs	r3, #1
 8005052:	e040      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
 8005054:	40023800 	.word	0x40023800
 8005058:	40007000 	.word	0x40007000
 800505c:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8005060:	4b1f      	ldr	r3, [pc, #124]	@ (80050e0 <HAL_RCC_OscConfig+0x538>)
 8005062:	685b      	ldr	r3, [r3, #4]
 8005064:	60fb      	str	r3, [r7, #12]
#if defined (RCC_PLLCFGR_PLLR)
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	699b      	ldr	r3, [r3, #24]
 800506a:	2b01      	cmp	r3, #1
 800506c:	d030      	beq.n	80050d0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800506e:	68fb      	ldr	r3, [r7, #12]
 8005070:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005078:	429a      	cmp	r2, r3
 800507a:	d129      	bne.n	80050d0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800507c:	68fb      	ldr	r3, [r7, #12]
 800507e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8005082:	687b      	ldr	r3, [r7, #4]
 8005084:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005086:	429a      	cmp	r2, r3
 8005088:	d122      	bne.n	80050d0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800508a:	68fa      	ldr	r2, [r7, #12]
 800508c:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8005090:	4013      	ands	r3, r2
 8005092:	687a      	ldr	r2, [r7, #4]
 8005094:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005096:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005098:	4293      	cmp	r3, r2
 800509a:	d119      	bne.n	80050d0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800509c:	68fb      	ldr	r3, [r7, #12]
 800509e:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80050a2:	687b      	ldr	r3, [r7, #4]
 80050a4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80050a6:	085b      	lsrs	r3, r3, #1
 80050a8:	3b01      	subs	r3, #1
 80050aa:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80050ac:	429a      	cmp	r2, r3
 80050ae:	d10f      	bne.n	80050d0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80050b0:	68fb      	ldr	r3, [r7, #12]
 80050b2:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80050ba:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80050bc:	429a      	cmp	r2, r3
 80050be:	d107      	bne.n	80050d0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 80050c0:	68fb      	ldr	r3, [r7, #12]
 80050c2:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80050ca:	071b      	lsls	r3, r3, #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80050cc:	429a      	cmp	r2, r3
 80050ce:	d001      	beq.n	80050d4 <HAL_RCC_OscConfig+0x52c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
#endif /* RCC_PLLCFGR_PLLR */
        {
          return HAL_ERROR;
 80050d0:	2301      	movs	r3, #1
 80050d2:	e000      	b.n	80050d6 <HAL_RCC_OscConfig+0x52e>
        }
      }
    }
  }
  return HAL_OK;
 80050d4:	2300      	movs	r3, #0
}
 80050d6:	4618      	mov	r0, r3
 80050d8:	3718      	adds	r7, #24
 80050da:	46bd      	mov	sp, r7
 80050dc:	bd80      	pop	{r7, pc}
 80050de:	bf00      	nop
 80050e0:	40023800 	.word	0x40023800

080050e4 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 80050e4:	b580      	push	{r7, lr}
 80050e6:	b082      	sub	sp, #8
 80050e8:	af00      	add	r7, sp, #0
 80050ea:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 80050ec:	687b      	ldr	r3, [r7, #4]
 80050ee:	2b00      	cmp	r3, #0
 80050f0:	d101      	bne.n	80050f6 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 80050f2:	2301      	movs	r3, #1
 80050f4:	e07b      	b.n	80051ee <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80050fa:	2b00      	cmp	r3, #0
 80050fc:	d108      	bne.n	8005110 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	685b      	ldr	r3, [r3, #4]
 8005102:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005106:	d009      	beq.n	800511c <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	2200      	movs	r2, #0
 800510c:	61da      	str	r2, [r3, #28]
 800510e:	e005      	b.n	800511c <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	2200      	movs	r2, #0
 8005114:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	2200      	movs	r2, #0
 800511a:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800511c:	687b      	ldr	r3, [r7, #4]
 800511e:	2200      	movs	r2, #0
 8005120:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005128:	b2db      	uxtb	r3, r3
 800512a:	2b00      	cmp	r3, #0
 800512c:	d106      	bne.n	800513c <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800512e:	687b      	ldr	r3, [r7, #4]
 8005130:	2200      	movs	r2, #0
 8005132:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8005136:	6878      	ldr	r0, [r7, #4]
 8005138:	f7fc fcf6 	bl	8001b28 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	2202      	movs	r2, #2
 8005140:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	681b      	ldr	r3, [r3, #0]
 8005148:	681a      	ldr	r2, [r3, #0]
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	681b      	ldr	r3, [r3, #0]
 800514e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005152:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	685b      	ldr	r3, [r3, #4]
 8005158:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	689b      	ldr	r3, [r3, #8]
 8005160:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8005164:	431a      	orrs	r2, r3
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	68db      	ldr	r3, [r3, #12]
 800516a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800516e:	431a      	orrs	r2, r3
 8005170:	687b      	ldr	r3, [r7, #4]
 8005172:	691b      	ldr	r3, [r3, #16]
 8005174:	f003 0302 	and.w	r3, r3, #2
 8005178:	431a      	orrs	r2, r3
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	695b      	ldr	r3, [r3, #20]
 800517e:	f003 0301 	and.w	r3, r3, #1
 8005182:	431a      	orrs	r2, r3
 8005184:	687b      	ldr	r3, [r7, #4]
 8005186:	699b      	ldr	r3, [r3, #24]
 8005188:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800518c:	431a      	orrs	r2, r3
 800518e:	687b      	ldr	r3, [r7, #4]
 8005190:	69db      	ldr	r3, [r3, #28]
 8005192:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8005196:	431a      	orrs	r2, r3
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	6a1b      	ldr	r3, [r3, #32]
 800519c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80051a0:	ea42 0103 	orr.w	r1, r2, r3
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80051a8:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	681b      	ldr	r3, [r3, #0]
 80051b0:	430a      	orrs	r2, r1
 80051b2:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	699b      	ldr	r3, [r3, #24]
 80051b8:	0c1b      	lsrs	r3, r3, #16
 80051ba:	f003 0104 	and.w	r1, r3, #4
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80051c2:	f003 0210 	and.w	r2, r3, #16
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	681b      	ldr	r3, [r3, #0]
 80051ca:	430a      	orrs	r2, r1
 80051cc:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	681b      	ldr	r3, [r3, #0]
 80051d2:	69da      	ldr	r2, [r3, #28]
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80051dc:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	2200      	movs	r2, #0
 80051e2:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80051e4:	687b      	ldr	r3, [r7, #4]
 80051e6:	2201      	movs	r2, #1
 80051e8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  return HAL_OK;
 80051ec:	2300      	movs	r3, #0
}
 80051ee:	4618      	mov	r0, r3
 80051f0:	3708      	adds	r7, #8
 80051f2:	46bd      	mov	sp, r7
 80051f4:	bd80      	pop	{r7, pc}

080051f6 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80051f6:	b580      	push	{r7, lr}
 80051f8:	b088      	sub	sp, #32
 80051fa:	af00      	add	r7, sp, #0
 80051fc:	60f8      	str	r0, [r7, #12]
 80051fe:	60b9      	str	r1, [r7, #8]
 8005200:	603b      	str	r3, [r7, #0]
 8005202:	4613      	mov	r3, r2
 8005204:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005206:	f7fd fdb1 	bl	8002d6c <HAL_GetTick>
 800520a:	61f8      	str	r0, [r7, #28]
  initial_TxXferCount = Size;
 800520c:	88fb      	ldrh	r3, [r7, #6]
 800520e:	837b      	strh	r3, [r7, #26]

  if (hspi->State != HAL_SPI_STATE_READY)
 8005210:	68fb      	ldr	r3, [r7, #12]
 8005212:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005216:	b2db      	uxtb	r3, r3
 8005218:	2b01      	cmp	r3, #1
 800521a:	d001      	beq.n	8005220 <HAL_SPI_Transmit+0x2a>
  {
    return HAL_BUSY;
 800521c:	2302      	movs	r3, #2
 800521e:	e12a      	b.n	8005476 <HAL_SPI_Transmit+0x280>
  }

  if ((pData == NULL) || (Size == 0U))
 8005220:	68bb      	ldr	r3, [r7, #8]
 8005222:	2b00      	cmp	r3, #0
 8005224:	d002      	beq.n	800522c <HAL_SPI_Transmit+0x36>
 8005226:	88fb      	ldrh	r3, [r7, #6]
 8005228:	2b00      	cmp	r3, #0
 800522a:	d101      	bne.n	8005230 <HAL_SPI_Transmit+0x3a>
  {
    return HAL_ERROR;
 800522c:	2301      	movs	r3, #1
 800522e:	e122      	b.n	8005476 <HAL_SPI_Transmit+0x280>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005230:	68fb      	ldr	r3, [r7, #12]
 8005232:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005236:	2b01      	cmp	r3, #1
 8005238:	d101      	bne.n	800523e <HAL_SPI_Transmit+0x48>
 800523a:	2302      	movs	r3, #2
 800523c:	e11b      	b.n	8005476 <HAL_SPI_Transmit+0x280>
 800523e:	68fb      	ldr	r3, [r7, #12]
 8005240:	2201      	movs	r2, #1
 8005242:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005246:	68fb      	ldr	r3, [r7, #12]
 8005248:	2203      	movs	r2, #3
 800524a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800524e:	68fb      	ldr	r3, [r7, #12]
 8005250:	2200      	movs	r2, #0
 8005252:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8005254:	68fb      	ldr	r3, [r7, #12]
 8005256:	68ba      	ldr	r2, [r7, #8]
 8005258:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 800525a:	68fb      	ldr	r3, [r7, #12]
 800525c:	88fa      	ldrh	r2, [r7, #6]
 800525e:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8005260:	68fb      	ldr	r3, [r7, #12]
 8005262:	88fa      	ldrh	r2, [r7, #6]
 8005264:	86da      	strh	r2, [r3, #54]	@ 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005266:	68fb      	ldr	r3, [r7, #12]
 8005268:	2200      	movs	r2, #0
 800526a:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 800526c:	68fb      	ldr	r3, [r7, #12]
 800526e:	2200      	movs	r2, #0
 8005270:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8005272:	68fb      	ldr	r3, [r7, #12]
 8005274:	2200      	movs	r2, #0
 8005276:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxISR       = NULL;
 8005278:	68fb      	ldr	r3, [r7, #12]
 800527a:	2200      	movs	r2, #0
 800527c:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 800527e:	68fb      	ldr	r3, [r7, #12]
 8005280:	2200      	movs	r2, #0
 8005282:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005284:	68fb      	ldr	r3, [r7, #12]
 8005286:	689b      	ldr	r3, [r3, #8]
 8005288:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800528c:	d10f      	bne.n	80052ae <HAL_SPI_Transmit+0xb8>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 800528e:	68fb      	ldr	r3, [r7, #12]
 8005290:	681b      	ldr	r3, [r3, #0]
 8005292:	681a      	ldr	r2, [r3, #0]
 8005294:	68fb      	ldr	r3, [r7, #12]
 8005296:	681b      	ldr	r3, [r3, #0]
 8005298:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800529c:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 800529e:	68fb      	ldr	r3, [r7, #12]
 80052a0:	681b      	ldr	r3, [r3, #0]
 80052a2:	681a      	ldr	r2, [r3, #0]
 80052a4:	68fb      	ldr	r3, [r7, #12]
 80052a6:	681b      	ldr	r3, [r3, #0]
 80052a8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80052ac:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80052ae:	68fb      	ldr	r3, [r7, #12]
 80052b0:	681b      	ldr	r3, [r3, #0]
 80052b2:	681b      	ldr	r3, [r3, #0]
 80052b4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80052b8:	2b40      	cmp	r3, #64	@ 0x40
 80052ba:	d007      	beq.n	80052cc <HAL_SPI_Transmit+0xd6>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80052bc:	68fb      	ldr	r3, [r7, #12]
 80052be:	681b      	ldr	r3, [r3, #0]
 80052c0:	681a      	ldr	r2, [r3, #0]
 80052c2:	68fb      	ldr	r3, [r7, #12]
 80052c4:	681b      	ldr	r3, [r3, #0]
 80052c6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80052ca:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80052cc:	68fb      	ldr	r3, [r7, #12]
 80052ce:	68db      	ldr	r3, [r3, #12]
 80052d0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80052d4:	d152      	bne.n	800537c <HAL_SPI_Transmit+0x186>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	685b      	ldr	r3, [r3, #4]
 80052da:	2b00      	cmp	r3, #0
 80052dc:	d002      	beq.n	80052e4 <HAL_SPI_Transmit+0xee>
 80052de:	8b7b      	ldrh	r3, [r7, #26]
 80052e0:	2b01      	cmp	r3, #1
 80052e2:	d145      	bne.n	8005370 <HAL_SPI_Transmit+0x17a>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80052e4:	68fb      	ldr	r3, [r7, #12]
 80052e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80052e8:	881a      	ldrh	r2, [r3, #0]
 80052ea:	68fb      	ldr	r3, [r7, #12]
 80052ec:	681b      	ldr	r3, [r3, #0]
 80052ee:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80052f0:	68fb      	ldr	r3, [r7, #12]
 80052f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80052f4:	1c9a      	adds	r2, r3, #2
 80052f6:	68fb      	ldr	r3, [r7, #12]
 80052f8:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80052fa:	68fb      	ldr	r3, [r7, #12]
 80052fc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80052fe:	b29b      	uxth	r3, r3
 8005300:	3b01      	subs	r3, #1
 8005302:	b29a      	uxth	r2, r3
 8005304:	68fb      	ldr	r3, [r7, #12]
 8005306:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8005308:	e032      	b.n	8005370 <HAL_SPI_Transmit+0x17a>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800530a:	68fb      	ldr	r3, [r7, #12]
 800530c:	681b      	ldr	r3, [r3, #0]
 800530e:	689b      	ldr	r3, [r3, #8]
 8005310:	f003 0302 	and.w	r3, r3, #2
 8005314:	2b02      	cmp	r3, #2
 8005316:	d112      	bne.n	800533e <HAL_SPI_Transmit+0x148>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005318:	68fb      	ldr	r3, [r7, #12]
 800531a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800531c:	881a      	ldrh	r2, [r3, #0]
 800531e:	68fb      	ldr	r3, [r7, #12]
 8005320:	681b      	ldr	r3, [r3, #0]
 8005322:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005324:	68fb      	ldr	r3, [r7, #12]
 8005326:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005328:	1c9a      	adds	r2, r3, #2
 800532a:	68fb      	ldr	r3, [r7, #12]
 800532c:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 800532e:	68fb      	ldr	r3, [r7, #12]
 8005330:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005332:	b29b      	uxth	r3, r3
 8005334:	3b01      	subs	r3, #1
 8005336:	b29a      	uxth	r2, r3
 8005338:	68fb      	ldr	r3, [r7, #12]
 800533a:	86da      	strh	r2, [r3, #54]	@ 0x36
 800533c:	e018      	b.n	8005370 <HAL_SPI_Transmit+0x17a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800533e:	f7fd fd15 	bl	8002d6c <HAL_GetTick>
 8005342:	4602      	mov	r2, r0
 8005344:	69fb      	ldr	r3, [r7, #28]
 8005346:	1ad3      	subs	r3, r2, r3
 8005348:	683a      	ldr	r2, [r7, #0]
 800534a:	429a      	cmp	r2, r3
 800534c:	d803      	bhi.n	8005356 <HAL_SPI_Transmit+0x160>
 800534e:	683b      	ldr	r3, [r7, #0]
 8005350:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005354:	d102      	bne.n	800535c <HAL_SPI_Transmit+0x166>
 8005356:	683b      	ldr	r3, [r7, #0]
 8005358:	2b00      	cmp	r3, #0
 800535a:	d109      	bne.n	8005370 <HAL_SPI_Transmit+0x17a>
        {
          hspi->State = HAL_SPI_STATE_READY;
 800535c:	68fb      	ldr	r3, [r7, #12]
 800535e:	2201      	movs	r2, #1
 8005360:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8005364:	68fb      	ldr	r3, [r7, #12]
 8005366:	2200      	movs	r2, #0
 8005368:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 800536c:	2303      	movs	r3, #3
 800536e:	e082      	b.n	8005476 <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 8005370:	68fb      	ldr	r3, [r7, #12]
 8005372:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005374:	b29b      	uxth	r3, r3
 8005376:	2b00      	cmp	r3, #0
 8005378:	d1c7      	bne.n	800530a <HAL_SPI_Transmit+0x114>
 800537a:	e053      	b.n	8005424 <HAL_SPI_Transmit+0x22e>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800537c:	68fb      	ldr	r3, [r7, #12]
 800537e:	685b      	ldr	r3, [r3, #4]
 8005380:	2b00      	cmp	r3, #0
 8005382:	d002      	beq.n	800538a <HAL_SPI_Transmit+0x194>
 8005384:	8b7b      	ldrh	r3, [r7, #26]
 8005386:	2b01      	cmp	r3, #1
 8005388:	d147      	bne.n	800541a <HAL_SPI_Transmit+0x224>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800538a:	68fb      	ldr	r3, [r7, #12]
 800538c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800538e:	68fb      	ldr	r3, [r7, #12]
 8005390:	681b      	ldr	r3, [r3, #0]
 8005392:	330c      	adds	r3, #12
 8005394:	7812      	ldrb	r2, [r2, #0]
 8005396:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005398:	68fb      	ldr	r3, [r7, #12]
 800539a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800539c:	1c5a      	adds	r2, r3, #1
 800539e:	68fb      	ldr	r3, [r7, #12]
 80053a0:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80053a2:	68fb      	ldr	r3, [r7, #12]
 80053a4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80053a6:	b29b      	uxth	r3, r3
 80053a8:	3b01      	subs	r3, #1
 80053aa:	b29a      	uxth	r2, r3
 80053ac:	68fb      	ldr	r3, [r7, #12]
 80053ae:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    while (hspi->TxXferCount > 0U)
 80053b0:	e033      	b.n	800541a <HAL_SPI_Transmit+0x224>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80053b2:	68fb      	ldr	r3, [r7, #12]
 80053b4:	681b      	ldr	r3, [r3, #0]
 80053b6:	689b      	ldr	r3, [r3, #8]
 80053b8:	f003 0302 	and.w	r3, r3, #2
 80053bc:	2b02      	cmp	r3, #2
 80053be:	d113      	bne.n	80053e8 <HAL_SPI_Transmit+0x1f2>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80053c0:	68fb      	ldr	r3, [r7, #12]
 80053c2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80053c4:	68fb      	ldr	r3, [r7, #12]
 80053c6:	681b      	ldr	r3, [r3, #0]
 80053c8:	330c      	adds	r3, #12
 80053ca:	7812      	ldrb	r2, [r2, #0]
 80053cc:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80053ce:	68fb      	ldr	r3, [r7, #12]
 80053d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80053d2:	1c5a      	adds	r2, r3, #1
 80053d4:	68fb      	ldr	r3, [r7, #12]
 80053d6:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80053d8:	68fb      	ldr	r3, [r7, #12]
 80053da:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80053dc:	b29b      	uxth	r3, r3
 80053de:	3b01      	subs	r3, #1
 80053e0:	b29a      	uxth	r2, r3
 80053e2:	68fb      	ldr	r3, [r7, #12]
 80053e4:	86da      	strh	r2, [r3, #54]	@ 0x36
 80053e6:	e018      	b.n	800541a <HAL_SPI_Transmit+0x224>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80053e8:	f7fd fcc0 	bl	8002d6c <HAL_GetTick>
 80053ec:	4602      	mov	r2, r0
 80053ee:	69fb      	ldr	r3, [r7, #28]
 80053f0:	1ad3      	subs	r3, r2, r3
 80053f2:	683a      	ldr	r2, [r7, #0]
 80053f4:	429a      	cmp	r2, r3
 80053f6:	d803      	bhi.n	8005400 <HAL_SPI_Transmit+0x20a>
 80053f8:	683b      	ldr	r3, [r7, #0]
 80053fa:	f1b3 3fff 	cmp.w	r3, #4294967295
 80053fe:	d102      	bne.n	8005406 <HAL_SPI_Transmit+0x210>
 8005400:	683b      	ldr	r3, [r7, #0]
 8005402:	2b00      	cmp	r3, #0
 8005404:	d109      	bne.n	800541a <HAL_SPI_Transmit+0x224>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8005406:	68fb      	ldr	r3, [r7, #12]
 8005408:	2201      	movs	r2, #1
 800540a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800540e:	68fb      	ldr	r3, [r7, #12]
 8005410:	2200      	movs	r2, #0
 8005412:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8005416:	2303      	movs	r3, #3
 8005418:	e02d      	b.n	8005476 <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 800541a:	68fb      	ldr	r3, [r7, #12]
 800541c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800541e:	b29b      	uxth	r3, r3
 8005420:	2b00      	cmp	r3, #0
 8005422:	d1c6      	bne.n	80053b2 <HAL_SPI_Transmit+0x1bc>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005424:	69fa      	ldr	r2, [r7, #28]
 8005426:	6839      	ldr	r1, [r7, #0]
 8005428:	68f8      	ldr	r0, [r7, #12]
 800542a:	f000 fe1f 	bl	800606c <SPI_EndRxTxTransaction>
 800542e:	4603      	mov	r3, r0
 8005430:	2b00      	cmp	r3, #0
 8005432:	d002      	beq.n	800543a <HAL_SPI_Transmit+0x244>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005434:	68fb      	ldr	r3, [r7, #12]
 8005436:	2220      	movs	r2, #32
 8005438:	655a      	str	r2, [r3, #84]	@ 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800543a:	68fb      	ldr	r3, [r7, #12]
 800543c:	689b      	ldr	r3, [r3, #8]
 800543e:	2b00      	cmp	r3, #0
 8005440:	d10a      	bne.n	8005458 <HAL_SPI_Transmit+0x262>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005442:	2300      	movs	r3, #0
 8005444:	617b      	str	r3, [r7, #20]
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	68db      	ldr	r3, [r3, #12]
 800544c:	617b      	str	r3, [r7, #20]
 800544e:	68fb      	ldr	r3, [r7, #12]
 8005450:	681b      	ldr	r3, [r3, #0]
 8005452:	689b      	ldr	r3, [r3, #8]
 8005454:	617b      	str	r3, [r7, #20]
 8005456:	697b      	ldr	r3, [r7, #20]
  }

  hspi->State = HAL_SPI_STATE_READY;
 8005458:	68fb      	ldr	r3, [r7, #12]
 800545a:	2201      	movs	r2, #1
 800545c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8005460:	68fb      	ldr	r3, [r7, #12]
 8005462:	2200      	movs	r2, #0
 8005464:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005468:	68fb      	ldr	r3, [r7, #12]
 800546a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800546c:	2b00      	cmp	r3, #0
 800546e:	d001      	beq.n	8005474 <HAL_SPI_Transmit+0x27e>
  {
    return HAL_ERROR;
 8005470:	2301      	movs	r3, #1
 8005472:	e000      	b.n	8005476 <HAL_SPI_Transmit+0x280>
  }
  else
  {
    return HAL_OK;
 8005474:	2300      	movs	r3, #0
  }
}
 8005476:	4618      	mov	r0, r3
 8005478:	3720      	adds	r7, #32
 800547a:	46bd      	mov	sp, r7
 800547c:	bd80      	pop	{r7, pc}

0800547e <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800547e:	b580      	push	{r7, lr}
 8005480:	b088      	sub	sp, #32
 8005482:	af02      	add	r7, sp, #8
 8005484:	60f8      	str	r0, [r7, #12]
 8005486:	60b9      	str	r1, [r7, #8]
 8005488:	603b      	str	r3, [r7, #0]
 800548a:	4613      	mov	r3, r2
 800548c:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;

  if (hspi->State != HAL_SPI_STATE_READY)
 800548e:	68fb      	ldr	r3, [r7, #12]
 8005490:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005494:	b2db      	uxtb	r3, r3
 8005496:	2b01      	cmp	r3, #1
 8005498:	d001      	beq.n	800549e <HAL_SPI_Receive+0x20>
  {
    return HAL_BUSY;
 800549a:	2302      	movs	r3, #2
 800549c:	e104      	b.n	80056a8 <HAL_SPI_Receive+0x22a>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800549e:	68fb      	ldr	r3, [r7, #12]
 80054a0:	685b      	ldr	r3, [r3, #4]
 80054a2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80054a6:	d112      	bne.n	80054ce <HAL_SPI_Receive+0x50>
 80054a8:	68fb      	ldr	r3, [r7, #12]
 80054aa:	689b      	ldr	r3, [r3, #8]
 80054ac:	2b00      	cmp	r3, #0
 80054ae:	d10e      	bne.n	80054ce <HAL_SPI_Receive+0x50>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80054b0:	68fb      	ldr	r3, [r7, #12]
 80054b2:	2204      	movs	r2, #4
 80054b4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80054b8:	88fa      	ldrh	r2, [r7, #6]
 80054ba:	683b      	ldr	r3, [r7, #0]
 80054bc:	9300      	str	r3, [sp, #0]
 80054be:	4613      	mov	r3, r2
 80054c0:	68ba      	ldr	r2, [r7, #8]
 80054c2:	68b9      	ldr	r1, [r7, #8]
 80054c4:	68f8      	ldr	r0, [r7, #12]
 80054c6:	f000 f8f3 	bl	80056b0 <HAL_SPI_TransmitReceive>
 80054ca:	4603      	mov	r3, r0
 80054cc:	e0ec      	b.n	80056a8 <HAL_SPI_Receive+0x22a>
  }

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80054ce:	f7fd fc4d 	bl	8002d6c <HAL_GetTick>
 80054d2:	6178      	str	r0, [r7, #20]

  if ((pData == NULL) || (Size == 0U))
 80054d4:	68bb      	ldr	r3, [r7, #8]
 80054d6:	2b00      	cmp	r3, #0
 80054d8:	d002      	beq.n	80054e0 <HAL_SPI_Receive+0x62>
 80054da:	88fb      	ldrh	r3, [r7, #6]
 80054dc:	2b00      	cmp	r3, #0
 80054de:	d101      	bne.n	80054e4 <HAL_SPI_Receive+0x66>
  {
    return HAL_ERROR;
 80054e0:	2301      	movs	r3, #1
 80054e2:	e0e1      	b.n	80056a8 <HAL_SPI_Receive+0x22a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80054e4:	68fb      	ldr	r3, [r7, #12]
 80054e6:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80054ea:	2b01      	cmp	r3, #1
 80054ec:	d101      	bne.n	80054f2 <HAL_SPI_Receive+0x74>
 80054ee:	2302      	movs	r3, #2
 80054f0:	e0da      	b.n	80056a8 <HAL_SPI_Receive+0x22a>
 80054f2:	68fb      	ldr	r3, [r7, #12]
 80054f4:	2201      	movs	r2, #1
 80054f6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80054fa:	68fb      	ldr	r3, [r7, #12]
 80054fc:	2204      	movs	r2, #4
 80054fe:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005502:	68fb      	ldr	r3, [r7, #12]
 8005504:	2200      	movs	r2, #0
 8005506:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8005508:	68fb      	ldr	r3, [r7, #12]
 800550a:	68ba      	ldr	r2, [r7, #8]
 800550c:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = Size;
 800550e:	68fb      	ldr	r3, [r7, #12]
 8005510:	88fa      	ldrh	r2, [r7, #6]
 8005512:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = Size;
 8005514:	68fb      	ldr	r3, [r7, #12]
 8005516:	88fa      	ldrh	r2, [r7, #6]
 8005518:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800551a:	68fb      	ldr	r3, [r7, #12]
 800551c:	2200      	movs	r2, #0
 800551e:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8005520:	68fb      	ldr	r3, [r7, #12]
 8005522:	2200      	movs	r2, #0
 8005524:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8005526:	68fb      	ldr	r3, [r7, #12]
 8005528:	2200      	movs	r2, #0
 800552a:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->RxISR       = NULL;
 800552c:	68fb      	ldr	r3, [r7, #12]
 800552e:	2200      	movs	r2, #0
 8005530:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 8005532:	68fb      	ldr	r3, [r7, #12]
 8005534:	2200      	movs	r2, #0
 8005536:	645a      	str	r2, [r3, #68]	@ 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005538:	68fb      	ldr	r3, [r7, #12]
 800553a:	689b      	ldr	r3, [r3, #8]
 800553c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005540:	d10f      	bne.n	8005562 <HAL_SPI_Receive+0xe4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8005542:	68fb      	ldr	r3, [r7, #12]
 8005544:	681b      	ldr	r3, [r3, #0]
 8005546:	681a      	ldr	r2, [r3, #0]
 8005548:	68fb      	ldr	r3, [r7, #12]
 800554a:	681b      	ldr	r3, [r3, #0]
 800554c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005550:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8005552:	68fb      	ldr	r3, [r7, #12]
 8005554:	681b      	ldr	r3, [r3, #0]
 8005556:	681a      	ldr	r2, [r3, #0]
 8005558:	68fb      	ldr	r3, [r7, #12]
 800555a:	681b      	ldr	r3, [r3, #0]
 800555c:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8005560:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005562:	68fb      	ldr	r3, [r7, #12]
 8005564:	681b      	ldr	r3, [r3, #0]
 8005566:	681b      	ldr	r3, [r3, #0]
 8005568:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800556c:	2b40      	cmp	r3, #64	@ 0x40
 800556e:	d007      	beq.n	8005580 <HAL_SPI_Receive+0x102>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005570:	68fb      	ldr	r3, [r7, #12]
 8005572:	681b      	ldr	r3, [r3, #0]
 8005574:	681a      	ldr	r2, [r3, #0]
 8005576:	68fb      	ldr	r3, [r7, #12]
 8005578:	681b      	ldr	r3, [r3, #0]
 800557a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800557e:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8005580:	68fb      	ldr	r3, [r7, #12]
 8005582:	68db      	ldr	r3, [r3, #12]
 8005584:	2b00      	cmp	r3, #0
 8005586:	d170      	bne.n	800566a <HAL_SPI_Receive+0x1ec>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 8005588:	e035      	b.n	80055f6 <HAL_SPI_Receive+0x178>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800558a:	68fb      	ldr	r3, [r7, #12]
 800558c:	681b      	ldr	r3, [r3, #0]
 800558e:	689b      	ldr	r3, [r3, #8]
 8005590:	f003 0301 	and.w	r3, r3, #1
 8005594:	2b01      	cmp	r3, #1
 8005596:	d115      	bne.n	80055c4 <HAL_SPI_Receive+0x146>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8005598:	68fb      	ldr	r3, [r7, #12]
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	f103 020c 	add.w	r2, r3, #12
 80055a0:	68fb      	ldr	r3, [r7, #12]
 80055a2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80055a4:	7812      	ldrb	r2, [r2, #0]
 80055a6:	b2d2      	uxtb	r2, r2
 80055a8:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80055aa:	68fb      	ldr	r3, [r7, #12]
 80055ac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80055ae:	1c5a      	adds	r2, r3, #1
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80055b4:	68fb      	ldr	r3, [r7, #12]
 80055b6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80055b8:	b29b      	uxth	r3, r3
 80055ba:	3b01      	subs	r3, #1
 80055bc:	b29a      	uxth	r2, r3
 80055be:	68fb      	ldr	r3, [r7, #12]
 80055c0:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80055c2:	e018      	b.n	80055f6 <HAL_SPI_Receive+0x178>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80055c4:	f7fd fbd2 	bl	8002d6c <HAL_GetTick>
 80055c8:	4602      	mov	r2, r0
 80055ca:	697b      	ldr	r3, [r7, #20]
 80055cc:	1ad3      	subs	r3, r2, r3
 80055ce:	683a      	ldr	r2, [r7, #0]
 80055d0:	429a      	cmp	r2, r3
 80055d2:	d803      	bhi.n	80055dc <HAL_SPI_Receive+0x15e>
 80055d4:	683b      	ldr	r3, [r7, #0]
 80055d6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80055da:	d102      	bne.n	80055e2 <HAL_SPI_Receive+0x164>
 80055dc:	683b      	ldr	r3, [r7, #0]
 80055de:	2b00      	cmp	r3, #0
 80055e0:	d109      	bne.n	80055f6 <HAL_SPI_Receive+0x178>
        {
          hspi->State = HAL_SPI_STATE_READY;
 80055e2:	68fb      	ldr	r3, [r7, #12]
 80055e4:	2201      	movs	r2, #1
 80055e6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80055ea:	68fb      	ldr	r3, [r7, #12]
 80055ec:	2200      	movs	r2, #0
 80055ee:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 80055f2:	2303      	movs	r3, #3
 80055f4:	e058      	b.n	80056a8 <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 80055f6:	68fb      	ldr	r3, [r7, #12]
 80055f8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80055fa:	b29b      	uxth	r3, r3
 80055fc:	2b00      	cmp	r3, #0
 80055fe:	d1c4      	bne.n	800558a <HAL_SPI_Receive+0x10c>
 8005600:	e038      	b.n	8005674 <HAL_SPI_Receive+0x1f6>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005602:	68fb      	ldr	r3, [r7, #12]
 8005604:	681b      	ldr	r3, [r3, #0]
 8005606:	689b      	ldr	r3, [r3, #8]
 8005608:	f003 0301 	and.w	r3, r3, #1
 800560c:	2b01      	cmp	r3, #1
 800560e:	d113      	bne.n	8005638 <HAL_SPI_Receive+0x1ba>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005610:	68fb      	ldr	r3, [r7, #12]
 8005612:	681b      	ldr	r3, [r3, #0]
 8005614:	68da      	ldr	r2, [r3, #12]
 8005616:	68fb      	ldr	r3, [r7, #12]
 8005618:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800561a:	b292      	uxth	r2, r2
 800561c:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800561e:	68fb      	ldr	r3, [r7, #12]
 8005620:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005622:	1c9a      	adds	r2, r3, #2
 8005624:	68fb      	ldr	r3, [r7, #12]
 8005626:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8005628:	68fb      	ldr	r3, [r7, #12]
 800562a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800562c:	b29b      	uxth	r3, r3
 800562e:	3b01      	subs	r3, #1
 8005630:	b29a      	uxth	r2, r3
 8005632:	68fb      	ldr	r3, [r7, #12]
 8005634:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005636:	e018      	b.n	800566a <HAL_SPI_Receive+0x1ec>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005638:	f7fd fb98 	bl	8002d6c <HAL_GetTick>
 800563c:	4602      	mov	r2, r0
 800563e:	697b      	ldr	r3, [r7, #20]
 8005640:	1ad3      	subs	r3, r2, r3
 8005642:	683a      	ldr	r2, [r7, #0]
 8005644:	429a      	cmp	r2, r3
 8005646:	d803      	bhi.n	8005650 <HAL_SPI_Receive+0x1d2>
 8005648:	683b      	ldr	r3, [r7, #0]
 800564a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800564e:	d102      	bne.n	8005656 <HAL_SPI_Receive+0x1d8>
 8005650:	683b      	ldr	r3, [r7, #0]
 8005652:	2b00      	cmp	r3, #0
 8005654:	d109      	bne.n	800566a <HAL_SPI_Receive+0x1ec>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8005656:	68fb      	ldr	r3, [r7, #12]
 8005658:	2201      	movs	r2, #1
 800565a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800565e:	68fb      	ldr	r3, [r7, #12]
 8005660:	2200      	movs	r2, #0
 8005662:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8005666:	2303      	movs	r3, #3
 8005668:	e01e      	b.n	80056a8 <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 800566a:	68fb      	ldr	r3, [r7, #12]
 800566c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800566e:	b29b      	uxth	r3, r3
 8005670:	2b00      	cmp	r3, #0
 8005672:	d1c6      	bne.n	8005602 <HAL_SPI_Receive+0x184>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005674:	697a      	ldr	r2, [r7, #20]
 8005676:	6839      	ldr	r1, [r7, #0]
 8005678:	68f8      	ldr	r0, [r7, #12]
 800567a:	f000 fc91 	bl	8005fa0 <SPI_EndRxTransaction>
 800567e:	4603      	mov	r3, r0
 8005680:	2b00      	cmp	r3, #0
 8005682:	d002      	beq.n	800568a <HAL_SPI_Receive+0x20c>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005684:	68fb      	ldr	r3, [r7, #12]
 8005686:	2220      	movs	r2, #32
 8005688:	655a      	str	r2, [r3, #84]	@ 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  hspi->State = HAL_SPI_STATE_READY;
 800568a:	68fb      	ldr	r3, [r7, #12]
 800568c:	2201      	movs	r2, #1
 800568e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 8005692:	68fb      	ldr	r3, [r7, #12]
 8005694:	2200      	movs	r2, #0
 8005696:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800569a:	68fb      	ldr	r3, [r7, #12]
 800569c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800569e:	2b00      	cmp	r3, #0
 80056a0:	d001      	beq.n	80056a6 <HAL_SPI_Receive+0x228>
  {
    return HAL_ERROR;
 80056a2:	2301      	movs	r3, #1
 80056a4:	e000      	b.n	80056a8 <HAL_SPI_Receive+0x22a>
  }
  else
  {
    return HAL_OK;
 80056a6:	2300      	movs	r3, #0
  }
}
 80056a8:	4618      	mov	r0, r3
 80056aa:	3718      	adds	r7, #24
 80056ac:	46bd      	mov	sp, r7
 80056ae:	bd80      	pop	{r7, pc}

080056b0 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint8_t *pRxData,
                                          uint16_t Size, uint32_t Timeout)
{
 80056b0:	b580      	push	{r7, lr}
 80056b2:	b08a      	sub	sp, #40	@ 0x28
 80056b4:	af00      	add	r7, sp, #0
 80056b6:	60f8      	str	r0, [r7, #12]
 80056b8:	60b9      	str	r1, [r7, #8]
 80056ba:	607a      	str	r2, [r7, #4]
 80056bc:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 80056be:	2301      	movs	r3, #1
 80056c0:	627b      	str	r3, [r7, #36]	@ 0x24

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80056c2:	f7fd fb53 	bl	8002d6c <HAL_GetTick>
 80056c6:	6238      	str	r0, [r7, #32]

  /* Init temporary variables */
  tmp_state           = hspi->State;
 80056c8:	68fb      	ldr	r3, [r7, #12]
 80056ca:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80056ce:	77fb      	strb	r3, [r7, #31]
  tmp_mode            = hspi->Init.Mode;
 80056d0:	68fb      	ldr	r3, [r7, #12]
 80056d2:	685b      	ldr	r3, [r3, #4]
 80056d4:	61bb      	str	r3, [r7, #24]
  initial_TxXferCount = Size;
 80056d6:	887b      	ldrh	r3, [r7, #2]
 80056d8:	82fb      	strh	r3, [r7, #22]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80056da:	7ffb      	ldrb	r3, [r7, #31]
 80056dc:	2b01      	cmp	r3, #1
 80056de:	d00c      	beq.n	80056fa <HAL_SPI_TransmitReceive+0x4a>
 80056e0:	69bb      	ldr	r3, [r7, #24]
 80056e2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80056e6:	d106      	bne.n	80056f6 <HAL_SPI_TransmitReceive+0x46>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80056e8:	68fb      	ldr	r3, [r7, #12]
 80056ea:	689b      	ldr	r3, [r3, #8]
 80056ec:	2b00      	cmp	r3, #0
 80056ee:	d102      	bne.n	80056f6 <HAL_SPI_TransmitReceive+0x46>
 80056f0:	7ffb      	ldrb	r3, [r7, #31]
 80056f2:	2b04      	cmp	r3, #4
 80056f4:	d001      	beq.n	80056fa <HAL_SPI_TransmitReceive+0x4a>
  {
    return HAL_BUSY;
 80056f6:	2302      	movs	r3, #2
 80056f8:	e17f      	b.n	80059fa <HAL_SPI_TransmitReceive+0x34a>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80056fa:	68bb      	ldr	r3, [r7, #8]
 80056fc:	2b00      	cmp	r3, #0
 80056fe:	d005      	beq.n	800570c <HAL_SPI_TransmitReceive+0x5c>
 8005700:	687b      	ldr	r3, [r7, #4]
 8005702:	2b00      	cmp	r3, #0
 8005704:	d002      	beq.n	800570c <HAL_SPI_TransmitReceive+0x5c>
 8005706:	887b      	ldrh	r3, [r7, #2]
 8005708:	2b00      	cmp	r3, #0
 800570a:	d101      	bne.n	8005710 <HAL_SPI_TransmitReceive+0x60>
  {
    return HAL_ERROR;
 800570c:	2301      	movs	r3, #1
 800570e:	e174      	b.n	80059fa <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005710:	68fb      	ldr	r3, [r7, #12]
 8005712:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005716:	2b01      	cmp	r3, #1
 8005718:	d101      	bne.n	800571e <HAL_SPI_TransmitReceive+0x6e>
 800571a:	2302      	movs	r3, #2
 800571c:	e16d      	b.n	80059fa <HAL_SPI_TransmitReceive+0x34a>
 800571e:	68fb      	ldr	r3, [r7, #12]
 8005720:	2201      	movs	r2, #1
 8005722:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005726:	68fb      	ldr	r3, [r7, #12]
 8005728:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800572c:	b2db      	uxtb	r3, r3
 800572e:	2b04      	cmp	r3, #4
 8005730:	d003      	beq.n	800573a <HAL_SPI_TransmitReceive+0x8a>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8005732:	68fb      	ldr	r3, [r7, #12]
 8005734:	2205      	movs	r2, #5
 8005736:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800573a:	68fb      	ldr	r3, [r7, #12]
 800573c:	2200      	movs	r2, #0
 800573e:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8005740:	68fb      	ldr	r3, [r7, #12]
 8005742:	687a      	ldr	r2, [r7, #4]
 8005744:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferCount = Size;
 8005746:	68fb      	ldr	r3, [r7, #12]
 8005748:	887a      	ldrh	r2, [r7, #2]
 800574a:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 800574c:	68fb      	ldr	r3, [r7, #12]
 800574e:	887a      	ldrh	r2, [r7, #2]
 8005750:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8005752:	68fb      	ldr	r3, [r7, #12]
 8005754:	68ba      	ldr	r2, [r7, #8]
 8005756:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferCount = Size;
 8005758:	68fb      	ldr	r3, [r7, #12]
 800575a:	887a      	ldrh	r2, [r7, #2]
 800575c:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->TxXferSize  = Size;
 800575e:	68fb      	ldr	r3, [r7, #12]
 8005760:	887a      	ldrh	r2, [r7, #2]
 8005762:	869a      	strh	r2, [r3, #52]	@ 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 8005764:	68fb      	ldr	r3, [r7, #12]
 8005766:	2200      	movs	r2, #0
 8005768:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 800576a:	68fb      	ldr	r3, [r7, #12]
 800576c:	2200      	movs	r2, #0
 800576e:	645a      	str	r2, [r3, #68]	@ 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005770:	68fb      	ldr	r3, [r7, #12]
 8005772:	681b      	ldr	r3, [r3, #0]
 8005774:	681b      	ldr	r3, [r3, #0]
 8005776:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800577a:	2b40      	cmp	r3, #64	@ 0x40
 800577c:	d007      	beq.n	800578e <HAL_SPI_TransmitReceive+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800577e:	68fb      	ldr	r3, [r7, #12]
 8005780:	681b      	ldr	r3, [r3, #0]
 8005782:	681a      	ldr	r2, [r3, #0]
 8005784:	68fb      	ldr	r3, [r7, #12]
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800578c:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800578e:	68fb      	ldr	r3, [r7, #12]
 8005790:	68db      	ldr	r3, [r3, #12]
 8005792:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005796:	d17e      	bne.n	8005896 <HAL_SPI_TransmitReceive+0x1e6>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005798:	68fb      	ldr	r3, [r7, #12]
 800579a:	685b      	ldr	r3, [r3, #4]
 800579c:	2b00      	cmp	r3, #0
 800579e:	d002      	beq.n	80057a6 <HAL_SPI_TransmitReceive+0xf6>
 80057a0:	8afb      	ldrh	r3, [r7, #22]
 80057a2:	2b01      	cmp	r3, #1
 80057a4:	d16c      	bne.n	8005880 <HAL_SPI_TransmitReceive+0x1d0>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80057a6:	68fb      	ldr	r3, [r7, #12]
 80057a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80057aa:	881a      	ldrh	r2, [r3, #0]
 80057ac:	68fb      	ldr	r3, [r7, #12]
 80057ae:	681b      	ldr	r3, [r3, #0]
 80057b0:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80057b2:	68fb      	ldr	r3, [r7, #12]
 80057b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80057b6:	1c9a      	adds	r2, r3, #2
 80057b8:	68fb      	ldr	r3, [r7, #12]
 80057ba:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80057bc:	68fb      	ldr	r3, [r7, #12]
 80057be:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80057c0:	b29b      	uxth	r3, r3
 80057c2:	3b01      	subs	r3, #1
 80057c4:	b29a      	uxth	r2, r3
 80057c6:	68fb      	ldr	r3, [r7, #12]
 80057c8:	86da      	strh	r2, [r3, #54]	@ 0x36
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80057ca:	e059      	b.n	8005880 <HAL_SPI_TransmitReceive+0x1d0>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80057cc:	68fb      	ldr	r3, [r7, #12]
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	689b      	ldr	r3, [r3, #8]
 80057d2:	f003 0302 	and.w	r3, r3, #2
 80057d6:	2b02      	cmp	r3, #2
 80057d8:	d11b      	bne.n	8005812 <HAL_SPI_TransmitReceive+0x162>
 80057da:	68fb      	ldr	r3, [r7, #12]
 80057dc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80057de:	b29b      	uxth	r3, r3
 80057e0:	2b00      	cmp	r3, #0
 80057e2:	d016      	beq.n	8005812 <HAL_SPI_TransmitReceive+0x162>
 80057e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80057e6:	2b01      	cmp	r3, #1
 80057e8:	d113      	bne.n	8005812 <HAL_SPI_TransmitReceive+0x162>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80057ea:	68fb      	ldr	r3, [r7, #12]
 80057ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80057ee:	881a      	ldrh	r2, [r3, #0]
 80057f0:	68fb      	ldr	r3, [r7, #12]
 80057f2:	681b      	ldr	r3, [r3, #0]
 80057f4:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80057f6:	68fb      	ldr	r3, [r7, #12]
 80057f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80057fa:	1c9a      	adds	r2, r3, #2
 80057fc:	68fb      	ldr	r3, [r7, #12]
 80057fe:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8005800:	68fb      	ldr	r3, [r7, #12]
 8005802:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005804:	b29b      	uxth	r3, r3
 8005806:	3b01      	subs	r3, #1
 8005808:	b29a      	uxth	r2, r3
 800580a:	68fb      	ldr	r3, [r7, #12]
 800580c:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 800580e:	2300      	movs	r3, #0
 8005810:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005812:	68fb      	ldr	r3, [r7, #12]
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	689b      	ldr	r3, [r3, #8]
 8005818:	f003 0301 	and.w	r3, r3, #1
 800581c:	2b01      	cmp	r3, #1
 800581e:	d119      	bne.n	8005854 <HAL_SPI_TransmitReceive+0x1a4>
 8005820:	68fb      	ldr	r3, [r7, #12]
 8005822:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005824:	b29b      	uxth	r3, r3
 8005826:	2b00      	cmp	r3, #0
 8005828:	d014      	beq.n	8005854 <HAL_SPI_TransmitReceive+0x1a4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800582a:	68fb      	ldr	r3, [r7, #12]
 800582c:	681b      	ldr	r3, [r3, #0]
 800582e:	68da      	ldr	r2, [r3, #12]
 8005830:	68fb      	ldr	r3, [r7, #12]
 8005832:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005834:	b292      	uxth	r2, r2
 8005836:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005838:	68fb      	ldr	r3, [r7, #12]
 800583a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800583c:	1c9a      	adds	r2, r3, #2
 800583e:	68fb      	ldr	r3, [r7, #12]
 8005840:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8005842:	68fb      	ldr	r3, [r7, #12]
 8005844:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005846:	b29b      	uxth	r3, r3
 8005848:	3b01      	subs	r3, #1
 800584a:	b29a      	uxth	r2, r3
 800584c:	68fb      	ldr	r3, [r7, #12]
 800584e:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8005850:	2301      	movs	r3, #1
 8005852:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8005854:	f7fd fa8a 	bl	8002d6c <HAL_GetTick>
 8005858:	4602      	mov	r2, r0
 800585a:	6a3b      	ldr	r3, [r7, #32]
 800585c:	1ad3      	subs	r3, r2, r3
 800585e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005860:	429a      	cmp	r2, r3
 8005862:	d80d      	bhi.n	8005880 <HAL_SPI_TransmitReceive+0x1d0>
 8005864:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005866:	f1b3 3fff 	cmp.w	r3, #4294967295
 800586a:	d009      	beq.n	8005880 <HAL_SPI_TransmitReceive+0x1d0>
      {
        hspi->State = HAL_SPI_STATE_READY;
 800586c:	68fb      	ldr	r3, [r7, #12]
 800586e:	2201      	movs	r2, #1
 8005870:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8005874:	68fb      	ldr	r3, [r7, #12]
 8005876:	2200      	movs	r2, #0
 8005878:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 800587c:	2303      	movs	r3, #3
 800587e:	e0bc      	b.n	80059fa <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005880:	68fb      	ldr	r3, [r7, #12]
 8005882:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005884:	b29b      	uxth	r3, r3
 8005886:	2b00      	cmp	r3, #0
 8005888:	d1a0      	bne.n	80057cc <HAL_SPI_TransmitReceive+0x11c>
 800588a:	68fb      	ldr	r3, [r7, #12]
 800588c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800588e:	b29b      	uxth	r3, r3
 8005890:	2b00      	cmp	r3, #0
 8005892:	d19b      	bne.n	80057cc <HAL_SPI_TransmitReceive+0x11c>
 8005894:	e082      	b.n	800599c <HAL_SPI_TransmitReceive+0x2ec>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005896:	68fb      	ldr	r3, [r7, #12]
 8005898:	685b      	ldr	r3, [r3, #4]
 800589a:	2b00      	cmp	r3, #0
 800589c:	d002      	beq.n	80058a4 <HAL_SPI_TransmitReceive+0x1f4>
 800589e:	8afb      	ldrh	r3, [r7, #22]
 80058a0:	2b01      	cmp	r3, #1
 80058a2:	d171      	bne.n	8005988 <HAL_SPI_TransmitReceive+0x2d8>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80058a4:	68fb      	ldr	r3, [r7, #12]
 80058a6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80058a8:	68fb      	ldr	r3, [r7, #12]
 80058aa:	681b      	ldr	r3, [r3, #0]
 80058ac:	330c      	adds	r3, #12
 80058ae:	7812      	ldrb	r2, [r2, #0]
 80058b0:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80058b2:	68fb      	ldr	r3, [r7, #12]
 80058b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80058b6:	1c5a      	adds	r2, r3, #1
 80058b8:	68fb      	ldr	r3, [r7, #12]
 80058ba:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80058bc:	68fb      	ldr	r3, [r7, #12]
 80058be:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80058c0:	b29b      	uxth	r3, r3
 80058c2:	3b01      	subs	r3, #1
 80058c4:	b29a      	uxth	r2, r3
 80058c6:	68fb      	ldr	r3, [r7, #12]
 80058c8:	86da      	strh	r2, [r3, #54]	@ 0x36
      {
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80058ca:	e05d      	b.n	8005988 <HAL_SPI_TransmitReceive+0x2d8>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80058cc:	68fb      	ldr	r3, [r7, #12]
 80058ce:	681b      	ldr	r3, [r3, #0]
 80058d0:	689b      	ldr	r3, [r3, #8]
 80058d2:	f003 0302 	and.w	r3, r3, #2
 80058d6:	2b02      	cmp	r3, #2
 80058d8:	d11c      	bne.n	8005914 <HAL_SPI_TransmitReceive+0x264>
 80058da:	68fb      	ldr	r3, [r7, #12]
 80058dc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80058de:	b29b      	uxth	r3, r3
 80058e0:	2b00      	cmp	r3, #0
 80058e2:	d017      	beq.n	8005914 <HAL_SPI_TransmitReceive+0x264>
 80058e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80058e6:	2b01      	cmp	r3, #1
 80058e8:	d114      	bne.n	8005914 <HAL_SPI_TransmitReceive+0x264>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 80058ea:	68fb      	ldr	r3, [r7, #12]
 80058ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80058ee:	68fb      	ldr	r3, [r7, #12]
 80058f0:	681b      	ldr	r3, [r3, #0]
 80058f2:	330c      	adds	r3, #12
 80058f4:	7812      	ldrb	r2, [r2, #0]
 80058f6:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 80058f8:	68fb      	ldr	r3, [r7, #12]
 80058fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80058fc:	1c5a      	adds	r2, r3, #1
 80058fe:	68fb      	ldr	r3, [r7, #12]
 8005900:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8005902:	68fb      	ldr	r3, [r7, #12]
 8005904:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005906:	b29b      	uxth	r3, r3
 8005908:	3b01      	subs	r3, #1
 800590a:	b29a      	uxth	r2, r3
 800590c:	68fb      	ldr	r3, [r7, #12]
 800590e:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8005910:	2300      	movs	r3, #0
 8005912:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005914:	68fb      	ldr	r3, [r7, #12]
 8005916:	681b      	ldr	r3, [r3, #0]
 8005918:	689b      	ldr	r3, [r3, #8]
 800591a:	f003 0301 	and.w	r3, r3, #1
 800591e:	2b01      	cmp	r3, #1
 8005920:	d119      	bne.n	8005956 <HAL_SPI_TransmitReceive+0x2a6>
 8005922:	68fb      	ldr	r3, [r7, #12]
 8005924:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005926:	b29b      	uxth	r3, r3
 8005928:	2b00      	cmp	r3, #0
 800592a:	d014      	beq.n	8005956 <HAL_SPI_TransmitReceive+0x2a6>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800592c:	68fb      	ldr	r3, [r7, #12]
 800592e:	681b      	ldr	r3, [r3, #0]
 8005930:	68da      	ldr	r2, [r3, #12]
 8005932:	68fb      	ldr	r3, [r7, #12]
 8005934:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005936:	b2d2      	uxtb	r2, r2
 8005938:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800593a:	68fb      	ldr	r3, [r7, #12]
 800593c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800593e:	1c5a      	adds	r2, r3, #1
 8005940:	68fb      	ldr	r3, [r7, #12]
 8005942:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8005944:	68fb      	ldr	r3, [r7, #12]
 8005946:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005948:	b29b      	uxth	r3, r3
 800594a:	3b01      	subs	r3, #1
 800594c:	b29a      	uxth	r2, r3
 800594e:	68fb      	ldr	r3, [r7, #12]
 8005950:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8005952:	2301      	movs	r3, #1
 8005954:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8005956:	f7fd fa09 	bl	8002d6c <HAL_GetTick>
 800595a:	4602      	mov	r2, r0
 800595c:	6a3b      	ldr	r3, [r7, #32]
 800595e:	1ad3      	subs	r3, r2, r3
 8005960:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005962:	429a      	cmp	r2, r3
 8005964:	d803      	bhi.n	800596e <HAL_SPI_TransmitReceive+0x2be>
 8005966:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005968:	f1b3 3fff 	cmp.w	r3, #4294967295
 800596c:	d102      	bne.n	8005974 <HAL_SPI_TransmitReceive+0x2c4>
 800596e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005970:	2b00      	cmp	r3, #0
 8005972:	d109      	bne.n	8005988 <HAL_SPI_TransmitReceive+0x2d8>
      {
        hspi->State = HAL_SPI_STATE_READY;
 8005974:	68fb      	ldr	r3, [r7, #12]
 8005976:	2201      	movs	r2, #1
 8005978:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800597c:	68fb      	ldr	r3, [r7, #12]
 800597e:	2200      	movs	r2, #0
 8005980:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 8005984:	2303      	movs	r3, #3
 8005986:	e038      	b.n	80059fa <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005988:	68fb      	ldr	r3, [r7, #12]
 800598a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800598c:	b29b      	uxth	r3, r3
 800598e:	2b00      	cmp	r3, #0
 8005990:	d19c      	bne.n	80058cc <HAL_SPI_TransmitReceive+0x21c>
 8005992:	68fb      	ldr	r3, [r7, #12]
 8005994:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005996:	b29b      	uxth	r3, r3
 8005998:	2b00      	cmp	r3, #0
 800599a:	d197      	bne.n	80058cc <HAL_SPI_TransmitReceive+0x21c>
    return HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800599c:	6a3a      	ldr	r2, [r7, #32]
 800599e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80059a0:	68f8      	ldr	r0, [r7, #12]
 80059a2:	f000 fb63 	bl	800606c <SPI_EndRxTxTransaction>
 80059a6:	4603      	mov	r3, r0
 80059a8:	2b00      	cmp	r3, #0
 80059aa:	d008      	beq.n	80059be <HAL_SPI_TransmitReceive+0x30e>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80059ac:	68fb      	ldr	r3, [r7, #12]
 80059ae:	2220      	movs	r2, #32
 80059b0:	655a      	str	r2, [r3, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 80059b2:	68fb      	ldr	r3, [r7, #12]
 80059b4:	2200      	movs	r2, #0
 80059b6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 80059ba:	2301      	movs	r3, #1
 80059bc:	e01d      	b.n	80059fa <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80059be:	68fb      	ldr	r3, [r7, #12]
 80059c0:	689b      	ldr	r3, [r3, #8]
 80059c2:	2b00      	cmp	r3, #0
 80059c4:	d10a      	bne.n	80059dc <HAL_SPI_TransmitReceive+0x32c>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80059c6:	2300      	movs	r3, #0
 80059c8:	613b      	str	r3, [r7, #16]
 80059ca:	68fb      	ldr	r3, [r7, #12]
 80059cc:	681b      	ldr	r3, [r3, #0]
 80059ce:	68db      	ldr	r3, [r3, #12]
 80059d0:	613b      	str	r3, [r7, #16]
 80059d2:	68fb      	ldr	r3, [r7, #12]
 80059d4:	681b      	ldr	r3, [r3, #0]
 80059d6:	689b      	ldr	r3, [r3, #8]
 80059d8:	613b      	str	r3, [r7, #16]
 80059da:	693b      	ldr	r3, [r7, #16]
  }


  hspi->State = HAL_SPI_STATE_READY;
 80059dc:	68fb      	ldr	r3, [r7, #12]
 80059de:	2201      	movs	r2, #1
 80059e0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 80059e4:	68fb      	ldr	r3, [r7, #12]
 80059e6:	2200      	movs	r2, #0
 80059e8:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80059ec:	68fb      	ldr	r3, [r7, #12]
 80059ee:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80059f0:	2b00      	cmp	r3, #0
 80059f2:	d001      	beq.n	80059f8 <HAL_SPI_TransmitReceive+0x348>
  {
    return HAL_ERROR;
 80059f4:	2301      	movs	r3, #1
 80059f6:	e000      	b.n	80059fa <HAL_SPI_TransmitReceive+0x34a>
  }
  else
  {
    return HAL_OK;
 80059f8:	2300      	movs	r3, #0
  }
}
 80059fa:	4618      	mov	r0, r3
 80059fc:	3728      	adds	r7, #40	@ 0x28
 80059fe:	46bd      	mov	sp, r7
 8005a00:	bd80      	pop	{r7, pc}
	...

08005a04 <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 8005a04:	b580      	push	{r7, lr}
 8005a06:	b084      	sub	sp, #16
 8005a08:	af00      	add	r7, sp, #0
 8005a0a:	60f8      	str	r0, [r7, #12]
 8005a0c:	60b9      	str	r1, [r7, #8]
 8005a0e:	4613      	mov	r3, r2
 8005a10:	80fb      	strh	r3, [r7, #6]
  assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  if (hspi->State != HAL_SPI_STATE_READY)
 8005a12:	68fb      	ldr	r3, [r7, #12]
 8005a14:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005a18:	b2db      	uxtb	r3, r3
 8005a1a:	2b01      	cmp	r3, #1
 8005a1c:	d001      	beq.n	8005a22 <HAL_SPI_Transmit_DMA+0x1e>
  {
    return HAL_BUSY;
 8005a1e:	2302      	movs	r3, #2
 8005a20:	e097      	b.n	8005b52 <HAL_SPI_Transmit_DMA+0x14e>
  }

  if ((pData == NULL) || (Size == 0U))
 8005a22:	68bb      	ldr	r3, [r7, #8]
 8005a24:	2b00      	cmp	r3, #0
 8005a26:	d002      	beq.n	8005a2e <HAL_SPI_Transmit_DMA+0x2a>
 8005a28:	88fb      	ldrh	r3, [r7, #6]
 8005a2a:	2b00      	cmp	r3, #0
 8005a2c:	d101      	bne.n	8005a32 <HAL_SPI_Transmit_DMA+0x2e>
  {
    return HAL_ERROR;
 8005a2e:	2301      	movs	r3, #1
 8005a30:	e08f      	b.n	8005b52 <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005a32:	68fb      	ldr	r3, [r7, #12]
 8005a34:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005a38:	2b01      	cmp	r3, #1
 8005a3a:	d101      	bne.n	8005a40 <HAL_SPI_Transmit_DMA+0x3c>
 8005a3c:	2302      	movs	r3, #2
 8005a3e:	e088      	b.n	8005b52 <HAL_SPI_Transmit_DMA+0x14e>
 8005a40:	68fb      	ldr	r3, [r7, #12]
 8005a42:	2201      	movs	r2, #1
 8005a44:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005a48:	68fb      	ldr	r3, [r7, #12]
 8005a4a:	2203      	movs	r2, #3
 8005a4c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005a50:	68fb      	ldr	r3, [r7, #12]
 8005a52:	2200      	movs	r2, #0
 8005a54:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8005a56:	68fb      	ldr	r3, [r7, #12]
 8005a58:	68ba      	ldr	r2, [r7, #8]
 8005a5a:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8005a5c:	68fb      	ldr	r3, [r7, #12]
 8005a5e:	88fa      	ldrh	r2, [r7, #6]
 8005a60:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8005a62:	68fb      	ldr	r3, [r7, #12]
 8005a64:	88fa      	ldrh	r2, [r7, #6]
 8005a66:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005a68:	68fb      	ldr	r3, [r7, #12]
 8005a6a:	2200      	movs	r2, #0
 8005a6c:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->TxISR       = NULL;
 8005a6e:	68fb      	ldr	r3, [r7, #12]
 8005a70:	2200      	movs	r2, #0
 8005a72:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 8005a74:	68fb      	ldr	r3, [r7, #12]
 8005a76:	2200      	movs	r2, #0
 8005a78:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->RxXferSize  = 0U;
 8005a7a:	68fb      	ldr	r3, [r7, #12]
 8005a7c:	2200      	movs	r2, #0
 8005a7e:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8005a80:	68fb      	ldr	r3, [r7, #12]
 8005a82:	2200      	movs	r2, #0
 8005a84:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005a86:	68fb      	ldr	r3, [r7, #12]
 8005a88:	689b      	ldr	r3, [r3, #8]
 8005a8a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005a8e:	d10f      	bne.n	8005ab0 <HAL_SPI_Transmit_DMA+0xac>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8005a90:	68fb      	ldr	r3, [r7, #12]
 8005a92:	681b      	ldr	r3, [r3, #0]
 8005a94:	681a      	ldr	r2, [r3, #0]
 8005a96:	68fb      	ldr	r3, [r7, #12]
 8005a98:	681b      	ldr	r3, [r3, #0]
 8005a9a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005a9e:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8005aa0:	68fb      	ldr	r3, [r7, #12]
 8005aa2:	681b      	ldr	r3, [r3, #0]
 8005aa4:	681a      	ldr	r2, [r3, #0]
 8005aa6:	68fb      	ldr	r3, [r7, #12]
 8005aa8:	681b      	ldr	r3, [r3, #0]
 8005aaa:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005aae:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 8005ab0:	68fb      	ldr	r3, [r7, #12]
 8005ab2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005ab4:	4a29      	ldr	r2, [pc, #164]	@ (8005b5c <HAL_SPI_Transmit_DMA+0x158>)
 8005ab6:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 8005ab8:	68fb      	ldr	r3, [r7, #12]
 8005aba:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005abc:	4a28      	ldr	r2, [pc, #160]	@ (8005b60 <HAL_SPI_Transmit_DMA+0x15c>)
 8005abe:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8005ac0:	68fb      	ldr	r3, [r7, #12]
 8005ac2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005ac4:	4a27      	ldr	r2, [pc, #156]	@ (8005b64 <HAL_SPI_Transmit_DMA+0x160>)
 8005ac6:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8005ac8:	68fb      	ldr	r3, [r7, #12]
 8005aca:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005acc:	2200      	movs	r2, #0
 8005ace:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8005ad0:	68fb      	ldr	r3, [r7, #12]
 8005ad2:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 8005ad4:	68fb      	ldr	r3, [r7, #12]
 8005ad6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005ad8:	4619      	mov	r1, r3
 8005ada:	68fb      	ldr	r3, [r7, #12]
 8005adc:	681b      	ldr	r3, [r3, #0]
 8005ade:	330c      	adds	r3, #12
 8005ae0:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 8005ae2:	68fb      	ldr	r3, [r7, #12]
 8005ae4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005ae6:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8005ae8:	f7fd ff86 	bl	80039f8 <HAL_DMA_Start_IT>
 8005aec:	4603      	mov	r3, r0
 8005aee:	2b00      	cmp	r3, #0
 8005af0:	d00b      	beq.n	8005b0a <HAL_SPI_Transmit_DMA+0x106>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8005af2:	68fb      	ldr	r3, [r7, #12]
 8005af4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005af6:	f043 0210 	orr.w	r2, r3, #16
 8005afa:	68fb      	ldr	r3, [r7, #12]
 8005afc:	655a      	str	r2, [r3, #84]	@ 0x54
    /* Process Unlocked */
    __HAL_UNLOCK(hspi);
 8005afe:	68fb      	ldr	r3, [r7, #12]
 8005b00:	2200      	movs	r2, #0
 8005b02:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 8005b06:	2301      	movs	r3, #1
 8005b08:	e023      	b.n	8005b52 <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005b0a:	68fb      	ldr	r3, [r7, #12]
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	681b      	ldr	r3, [r3, #0]
 8005b10:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005b14:	2b40      	cmp	r3, #64	@ 0x40
 8005b16:	d007      	beq.n	8005b28 <HAL_SPI_Transmit_DMA+0x124>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005b18:	68fb      	ldr	r3, [r7, #12]
 8005b1a:	681b      	ldr	r3, [r3, #0]
 8005b1c:	681a      	ldr	r2, [r3, #0]
 8005b1e:	68fb      	ldr	r3, [r7, #12]
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005b26:	601a      	str	r2, [r3, #0]
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8005b28:	68fb      	ldr	r3, [r7, #12]
 8005b2a:	2200      	movs	r2, #0
 8005b2c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 8005b30:	68fb      	ldr	r3, [r7, #12]
 8005b32:	681b      	ldr	r3, [r3, #0]
 8005b34:	685a      	ldr	r2, [r3, #4]
 8005b36:	68fb      	ldr	r3, [r7, #12]
 8005b38:	681b      	ldr	r3, [r3, #0]
 8005b3a:	f042 0220 	orr.w	r2, r2, #32
 8005b3e:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8005b40:	68fb      	ldr	r3, [r7, #12]
 8005b42:	681b      	ldr	r3, [r3, #0]
 8005b44:	685a      	ldr	r2, [r3, #4]
 8005b46:	68fb      	ldr	r3, [r7, #12]
 8005b48:	681b      	ldr	r3, [r3, #0]
 8005b4a:	f042 0202 	orr.w	r2, r2, #2
 8005b4e:	605a      	str	r2, [r3, #4]

  return HAL_OK;
 8005b50:	2300      	movs	r3, #0
}
 8005b52:	4618      	mov	r0, r3
 8005b54:	3710      	adds	r7, #16
 8005b56:	46bd      	mov	sp, r7
 8005b58:	bd80      	pop	{r7, pc}
 8005b5a:	bf00      	nop
 8005b5c:	08005e0d 	.word	0x08005e0d
 8005b60:	08005d65 	.word	0x08005d65
 8005b64:	08005e29 	.word	0x08005e29

08005b68 <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 8005b68:	b580      	push	{r7, lr}
 8005b6a:	b088      	sub	sp, #32
 8005b6c:	af00      	add	r7, sp, #0
 8005b6e:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 8005b70:	687b      	ldr	r3, [r7, #4]
 8005b72:	681b      	ldr	r3, [r3, #0]
 8005b74:	685b      	ldr	r3, [r3, #4]
 8005b76:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	681b      	ldr	r3, [r3, #0]
 8005b7c:	689b      	ldr	r3, [r3, #8]
 8005b7e:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8005b80:	69bb      	ldr	r3, [r7, #24]
 8005b82:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005b86:	2b00      	cmp	r3, #0
 8005b88:	d10e      	bne.n	8005ba8 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8005b8a:	69bb      	ldr	r3, [r7, #24]
 8005b8c:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8005b90:	2b00      	cmp	r3, #0
 8005b92:	d009      	beq.n	8005ba8 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8005b94:	69fb      	ldr	r3, [r7, #28]
 8005b96:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005b9a:	2b00      	cmp	r3, #0
 8005b9c:	d004      	beq.n	8005ba8 <HAL_SPI_IRQHandler+0x40>
  {
    hspi->RxISR(hspi);
 8005b9e:	687b      	ldr	r3, [r7, #4]
 8005ba0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005ba2:	6878      	ldr	r0, [r7, #4]
 8005ba4:	4798      	blx	r3
    return;
 8005ba6:	e0ce      	b.n	8005d46 <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 8005ba8:	69bb      	ldr	r3, [r7, #24]
 8005baa:	f003 0302 	and.w	r3, r3, #2
 8005bae:	2b00      	cmp	r3, #0
 8005bb0:	d009      	beq.n	8005bc6 <HAL_SPI_IRQHandler+0x5e>
 8005bb2:	69fb      	ldr	r3, [r7, #28]
 8005bb4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005bb8:	2b00      	cmp	r3, #0
 8005bba:	d004      	beq.n	8005bc6 <HAL_SPI_IRQHandler+0x5e>
  {
    hspi->TxISR(hspi);
 8005bbc:	687b      	ldr	r3, [r7, #4]
 8005bbe:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005bc0:	6878      	ldr	r0, [r7, #4]
 8005bc2:	4798      	blx	r3
    return;
 8005bc4:	e0bf      	b.n	8005d46 <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8005bc6:	69bb      	ldr	r3, [r7, #24]
 8005bc8:	f003 0320 	and.w	r3, r3, #32
 8005bcc:	2b00      	cmp	r3, #0
 8005bce:	d10a      	bne.n	8005be6 <HAL_SPI_IRQHandler+0x7e>
 8005bd0:	69bb      	ldr	r3, [r7, #24]
 8005bd2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005bd6:	2b00      	cmp	r3, #0
 8005bd8:	d105      	bne.n	8005be6 <HAL_SPI_IRQHandler+0x7e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8005bda:	69bb      	ldr	r3, [r7, #24]
 8005bdc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005be0:	2b00      	cmp	r3, #0
 8005be2:	f000 80b0 	beq.w	8005d46 <HAL_SPI_IRQHandler+0x1de>
 8005be6:	69fb      	ldr	r3, [r7, #28]
 8005be8:	f003 0320 	and.w	r3, r3, #32
 8005bec:	2b00      	cmp	r3, #0
 8005bee:	f000 80aa 	beq.w	8005d46 <HAL_SPI_IRQHandler+0x1de>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8005bf2:	69bb      	ldr	r3, [r7, #24]
 8005bf4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005bf8:	2b00      	cmp	r3, #0
 8005bfa:	d023      	beq.n	8005c44 <HAL_SPI_IRQHandler+0xdc>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005c02:	b2db      	uxtb	r3, r3
 8005c04:	2b03      	cmp	r3, #3
 8005c06:	d011      	beq.n	8005c2c <HAL_SPI_IRQHandler+0xc4>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8005c08:	687b      	ldr	r3, [r7, #4]
 8005c0a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005c0c:	f043 0204 	orr.w	r2, r3, #4
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	655a      	str	r2, [r3, #84]	@ 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005c14:	2300      	movs	r3, #0
 8005c16:	617b      	str	r3, [r7, #20]
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	681b      	ldr	r3, [r3, #0]
 8005c1c:	68db      	ldr	r3, [r3, #12]
 8005c1e:	617b      	str	r3, [r7, #20]
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	681b      	ldr	r3, [r3, #0]
 8005c24:	689b      	ldr	r3, [r3, #8]
 8005c26:	617b      	str	r3, [r7, #20]
 8005c28:	697b      	ldr	r3, [r7, #20]
 8005c2a:	e00b      	b.n	8005c44 <HAL_SPI_IRQHandler+0xdc>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005c2c:	2300      	movs	r3, #0
 8005c2e:	613b      	str	r3, [r7, #16]
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	68db      	ldr	r3, [r3, #12]
 8005c36:	613b      	str	r3, [r7, #16]
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	681b      	ldr	r3, [r3, #0]
 8005c3c:	689b      	ldr	r3, [r3, #8]
 8005c3e:	613b      	str	r3, [r7, #16]
 8005c40:	693b      	ldr	r3, [r7, #16]
        return;
 8005c42:	e080      	b.n	8005d46 <HAL_SPI_IRQHandler+0x1de>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8005c44:	69bb      	ldr	r3, [r7, #24]
 8005c46:	f003 0320 	and.w	r3, r3, #32
 8005c4a:	2b00      	cmp	r3, #0
 8005c4c:	d014      	beq.n	8005c78 <HAL_SPI_IRQHandler+0x110>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005c52:	f043 0201 	orr.w	r2, r3, #1
 8005c56:	687b      	ldr	r3, [r7, #4]
 8005c58:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8005c5a:	2300      	movs	r3, #0
 8005c5c:	60fb      	str	r3, [r7, #12]
 8005c5e:	687b      	ldr	r3, [r7, #4]
 8005c60:	681b      	ldr	r3, [r3, #0]
 8005c62:	689b      	ldr	r3, [r3, #8]
 8005c64:	60fb      	str	r3, [r7, #12]
 8005c66:	687b      	ldr	r3, [r7, #4]
 8005c68:	681b      	ldr	r3, [r3, #0]
 8005c6a:	681a      	ldr	r2, [r3, #0]
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005c74:	601a      	str	r2, [r3, #0]
 8005c76:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 8005c78:	69bb      	ldr	r3, [r7, #24]
 8005c7a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005c7e:	2b00      	cmp	r3, #0
 8005c80:	d00c      	beq.n	8005c9c <HAL_SPI_IRQHandler+0x134>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005c86:	f043 0208 	orr.w	r2, r3, #8
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8005c8e:	2300      	movs	r3, #0
 8005c90:	60bb      	str	r3, [r7, #8]
 8005c92:	687b      	ldr	r3, [r7, #4]
 8005c94:	681b      	ldr	r3, [r3, #0]
 8005c96:	689b      	ldr	r3, [r3, #8]
 8005c98:	60bb      	str	r3, [r7, #8]
 8005c9a:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005ca0:	2b00      	cmp	r3, #0
 8005ca2:	d04f      	beq.n	8005d44 <HAL_SPI_IRQHandler+0x1dc>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 8005ca4:	687b      	ldr	r3, [r7, #4]
 8005ca6:	681b      	ldr	r3, [r3, #0]
 8005ca8:	685a      	ldr	r2, [r3, #4]
 8005caa:	687b      	ldr	r3, [r7, #4]
 8005cac:	681b      	ldr	r3, [r3, #0]
 8005cae:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005cb2:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	2201      	movs	r2, #1
 8005cb8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 8005cbc:	69fb      	ldr	r3, [r7, #28]
 8005cbe:	f003 0302 	and.w	r3, r3, #2
 8005cc2:	2b00      	cmp	r3, #0
 8005cc4:	d104      	bne.n	8005cd0 <HAL_SPI_IRQHandler+0x168>
 8005cc6:	69fb      	ldr	r3, [r7, #28]
 8005cc8:	f003 0301 	and.w	r3, r3, #1
 8005ccc:	2b00      	cmp	r3, #0
 8005cce:	d034      	beq.n	8005d3a <HAL_SPI_IRQHandler+0x1d2>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8005cd0:	687b      	ldr	r3, [r7, #4]
 8005cd2:	681b      	ldr	r3, [r3, #0]
 8005cd4:	685a      	ldr	r2, [r3, #4]
 8005cd6:	687b      	ldr	r3, [r7, #4]
 8005cd8:	681b      	ldr	r3, [r3, #0]
 8005cda:	f022 0203 	bic.w	r2, r2, #3
 8005cde:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005ce4:	2b00      	cmp	r3, #0
 8005ce6:	d011      	beq.n	8005d0c <HAL_SPI_IRQHandler+0x1a4>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005cec:	4a17      	ldr	r2, [pc, #92]	@ (8005d4c <HAL_SPI_IRQHandler+0x1e4>)
 8005cee:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005cf4:	4618      	mov	r0, r3
 8005cf6:	f7fd ff47 	bl	8003b88 <HAL_DMA_Abort_IT>
 8005cfa:	4603      	mov	r3, r0
 8005cfc:	2b00      	cmp	r3, #0
 8005cfe:	d005      	beq.n	8005d0c <HAL_SPI_IRQHandler+0x1a4>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8005d00:	687b      	ldr	r3, [r7, #4]
 8005d02:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005d04:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	655a      	str	r2, [r3, #84]	@ 0x54
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 8005d0c:	687b      	ldr	r3, [r7, #4]
 8005d0e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005d10:	2b00      	cmp	r3, #0
 8005d12:	d016      	beq.n	8005d42 <HAL_SPI_IRQHandler+0x1da>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005d18:	4a0c      	ldr	r2, [pc, #48]	@ (8005d4c <HAL_SPI_IRQHandler+0x1e4>)
 8005d1a:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8005d1c:	687b      	ldr	r3, [r7, #4]
 8005d1e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005d20:	4618      	mov	r0, r3
 8005d22:	f7fd ff31 	bl	8003b88 <HAL_DMA_Abort_IT>
 8005d26:	4603      	mov	r3, r0
 8005d28:	2b00      	cmp	r3, #0
 8005d2a:	d00a      	beq.n	8005d42 <HAL_SPI_IRQHandler+0x1da>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8005d2c:	687b      	ldr	r3, [r7, #4]
 8005d2e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005d30:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	655a      	str	r2, [r3, #84]	@ 0x54
        if (hspi->hdmatx != NULL)
 8005d38:	e003      	b.n	8005d42 <HAL_SPI_IRQHandler+0x1da>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 8005d3a:	6878      	ldr	r0, [r7, #4]
 8005d3c:	f7fc fcec 	bl	8002718 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 8005d40:	e000      	b.n	8005d44 <HAL_SPI_IRQHandler+0x1dc>
        if (hspi->hdmatx != NULL)
 8005d42:	bf00      	nop
    return;
 8005d44:	bf00      	nop
  }
}
 8005d46:	3720      	adds	r7, #32
 8005d48:	46bd      	mov	sp, r7
 8005d4a:	bd80      	pop	{r7, pc}
 8005d4c:	08005e69 	.word	0x08005e69

08005d50 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8005d50:	b480      	push	{r7}
 8005d52:	b083      	sub	sp, #12
 8005d54:	af00      	add	r7, sp, #0
 8005d56:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8005d58:	bf00      	nop
 8005d5a:	370c      	adds	r7, #12
 8005d5c:	46bd      	mov	sp, r7
 8005d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d62:	4770      	bx	lr

08005d64 <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8005d64:	b580      	push	{r7, lr}
 8005d66:	b086      	sub	sp, #24
 8005d68:	af00      	add	r7, sp, #0
 8005d6a:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005d70:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005d72:	f7fc fffb 	bl	8002d6c <HAL_GetTick>
 8005d76:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 8005d78:	687b      	ldr	r3, [r7, #4]
 8005d7a:	681b      	ldr	r3, [r3, #0]
 8005d7c:	681b      	ldr	r3, [r3, #0]
 8005d7e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005d82:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005d86:	d03b      	beq.n	8005e00 <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 8005d88:	697b      	ldr	r3, [r7, #20]
 8005d8a:	681b      	ldr	r3, [r3, #0]
 8005d8c:	685a      	ldr	r2, [r3, #4]
 8005d8e:	697b      	ldr	r3, [r7, #20]
 8005d90:	681b      	ldr	r3, [r3, #0]
 8005d92:	f022 0220 	bic.w	r2, r2, #32
 8005d96:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8005d98:	697b      	ldr	r3, [r7, #20]
 8005d9a:	681b      	ldr	r3, [r3, #0]
 8005d9c:	685a      	ldr	r2, [r3, #4]
 8005d9e:	697b      	ldr	r3, [r7, #20]
 8005da0:	681b      	ldr	r3, [r3, #0]
 8005da2:	f022 0202 	bic.w	r2, r2, #2
 8005da6:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 8005da8:	693a      	ldr	r2, [r7, #16]
 8005daa:	2164      	movs	r1, #100	@ 0x64
 8005dac:	6978      	ldr	r0, [r7, #20]
 8005dae:	f000 f95d 	bl	800606c <SPI_EndRxTxTransaction>
 8005db2:	4603      	mov	r3, r0
 8005db4:	2b00      	cmp	r3, #0
 8005db6:	d005      	beq.n	8005dc4 <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005db8:	697b      	ldr	r3, [r7, #20]
 8005dba:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005dbc:	f043 0220 	orr.w	r2, r3, #32
 8005dc0:	697b      	ldr	r3, [r7, #20]
 8005dc2:	655a      	str	r2, [r3, #84]	@ 0x54
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005dc4:	697b      	ldr	r3, [r7, #20]
 8005dc6:	689b      	ldr	r3, [r3, #8]
 8005dc8:	2b00      	cmp	r3, #0
 8005dca:	d10a      	bne.n	8005de2 <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005dcc:	2300      	movs	r3, #0
 8005dce:	60fb      	str	r3, [r7, #12]
 8005dd0:	697b      	ldr	r3, [r7, #20]
 8005dd2:	681b      	ldr	r3, [r3, #0]
 8005dd4:	68db      	ldr	r3, [r3, #12]
 8005dd6:	60fb      	str	r3, [r7, #12]
 8005dd8:	697b      	ldr	r3, [r7, #20]
 8005dda:	681b      	ldr	r3, [r3, #0]
 8005ddc:	689b      	ldr	r3, [r3, #8]
 8005dde:	60fb      	str	r3, [r7, #12]
 8005de0:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 8005de2:	697b      	ldr	r3, [r7, #20]
 8005de4:	2200      	movs	r2, #0
 8005de6:	86da      	strh	r2, [r3, #54]	@ 0x36
    hspi->State = HAL_SPI_STATE_READY;
 8005de8:	697b      	ldr	r3, [r7, #20]
 8005dea:	2201      	movs	r2, #1
 8005dec:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005df0:	697b      	ldr	r3, [r7, #20]
 8005df2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005df4:	2b00      	cmp	r3, #0
 8005df6:	d003      	beq.n	8005e00 <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8005df8:	6978      	ldr	r0, [r7, #20]
 8005dfa:	f7fc fc8d 	bl	8002718 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8005dfe:	e002      	b.n	8005e06 <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 8005e00:	6978      	ldr	r0, [r7, #20]
 8005e02:	f7fc fc9f 	bl	8002744 <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8005e06:	3718      	adds	r7, #24
 8005e08:	46bd      	mov	sp, r7
 8005e0a:	bd80      	pop	{r7, pc}

08005e0c <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8005e0c:	b580      	push	{r7, lr}
 8005e0e:	b084      	sub	sp, #16
 8005e10:	af00      	add	r7, sp, #0
 8005e12:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005e18:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8005e1a:	68f8      	ldr	r0, [r7, #12]
 8005e1c:	f7ff ff98 	bl	8005d50 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8005e20:	bf00      	nop
 8005e22:	3710      	adds	r7, #16
 8005e24:	46bd      	mov	sp, r7
 8005e26:	bd80      	pop	{r7, pc}

08005e28 <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8005e28:	b580      	push	{r7, lr}
 8005e2a:	b084      	sub	sp, #16
 8005e2c:	af00      	add	r7, sp, #0
 8005e2e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005e34:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8005e36:	68fb      	ldr	r3, [r7, #12]
 8005e38:	681b      	ldr	r3, [r3, #0]
 8005e3a:	685a      	ldr	r2, [r3, #4]
 8005e3c:	68fb      	ldr	r3, [r7, #12]
 8005e3e:	681b      	ldr	r3, [r3, #0]
 8005e40:	f022 0203 	bic.w	r2, r2, #3
 8005e44:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8005e46:	68fb      	ldr	r3, [r7, #12]
 8005e48:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005e4a:	f043 0210 	orr.w	r2, r3, #16
 8005e4e:	68fb      	ldr	r3, [r7, #12]
 8005e50:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State = HAL_SPI_STATE_READY;
 8005e52:	68fb      	ldr	r3, [r7, #12]
 8005e54:	2201      	movs	r2, #1
 8005e56:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8005e5a:	68f8      	ldr	r0, [r7, #12]
 8005e5c:	f7fc fc5c 	bl	8002718 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8005e60:	bf00      	nop
 8005e62:	3710      	adds	r7, #16
 8005e64:	46bd      	mov	sp, r7
 8005e66:	bd80      	pop	{r7, pc}

08005e68 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8005e68:	b580      	push	{r7, lr}
 8005e6a:	b084      	sub	sp, #16
 8005e6c:	af00      	add	r7, sp, #0
 8005e6e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8005e70:	687b      	ldr	r3, [r7, #4]
 8005e72:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005e74:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 8005e76:	68fb      	ldr	r3, [r7, #12]
 8005e78:	2200      	movs	r2, #0
 8005e7a:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxXferCount = 0U;
 8005e7c:	68fb      	ldr	r3, [r7, #12]
 8005e7e:	2200      	movs	r2, #0
 8005e80:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8005e82:	68f8      	ldr	r0, [r7, #12]
 8005e84:	f7fc fc48 	bl	8002718 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8005e88:	bf00      	nop
 8005e8a:	3710      	adds	r7, #16
 8005e8c:	46bd      	mov	sp, r7
 8005e8e:	bd80      	pop	{r7, pc}

08005e90 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8005e90:	b580      	push	{r7, lr}
 8005e92:	b088      	sub	sp, #32
 8005e94:	af00      	add	r7, sp, #0
 8005e96:	60f8      	str	r0, [r7, #12]
 8005e98:	60b9      	str	r1, [r7, #8]
 8005e9a:	603b      	str	r3, [r7, #0]
 8005e9c:	4613      	mov	r3, r2
 8005e9e:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8005ea0:	f7fc ff64 	bl	8002d6c <HAL_GetTick>
 8005ea4:	4602      	mov	r2, r0
 8005ea6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005ea8:	1a9b      	subs	r3, r3, r2
 8005eaa:	683a      	ldr	r2, [r7, #0]
 8005eac:	4413      	add	r3, r2
 8005eae:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8005eb0:	f7fc ff5c 	bl	8002d6c <HAL_GetTick>
 8005eb4:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8005eb6:	4b39      	ldr	r3, [pc, #228]	@ (8005f9c <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8005eb8:	681b      	ldr	r3, [r3, #0]
 8005eba:	015b      	lsls	r3, r3, #5
 8005ebc:	0d1b      	lsrs	r3, r3, #20
 8005ebe:	69fa      	ldr	r2, [r7, #28]
 8005ec0:	fb02 f303 	mul.w	r3, r2, r3
 8005ec4:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005ec6:	e054      	b.n	8005f72 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8005ec8:	683b      	ldr	r3, [r7, #0]
 8005eca:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005ece:	d050      	beq.n	8005f72 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8005ed0:	f7fc ff4c 	bl	8002d6c <HAL_GetTick>
 8005ed4:	4602      	mov	r2, r0
 8005ed6:	69bb      	ldr	r3, [r7, #24]
 8005ed8:	1ad3      	subs	r3, r2, r3
 8005eda:	69fa      	ldr	r2, [r7, #28]
 8005edc:	429a      	cmp	r2, r3
 8005ede:	d902      	bls.n	8005ee6 <SPI_WaitFlagStateUntilTimeout+0x56>
 8005ee0:	69fb      	ldr	r3, [r7, #28]
 8005ee2:	2b00      	cmp	r3, #0
 8005ee4:	d13d      	bne.n	8005f62 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005ee6:	68fb      	ldr	r3, [r7, #12]
 8005ee8:	681b      	ldr	r3, [r3, #0]
 8005eea:	685a      	ldr	r2, [r3, #4]
 8005eec:	68fb      	ldr	r3, [r7, #12]
 8005eee:	681b      	ldr	r3, [r3, #0]
 8005ef0:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005ef4:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005ef6:	68fb      	ldr	r3, [r7, #12]
 8005ef8:	685b      	ldr	r3, [r3, #4]
 8005efa:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005efe:	d111      	bne.n	8005f24 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005f00:	68fb      	ldr	r3, [r7, #12]
 8005f02:	689b      	ldr	r3, [r3, #8]
 8005f04:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005f08:	d004      	beq.n	8005f14 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005f0a:	68fb      	ldr	r3, [r7, #12]
 8005f0c:	689b      	ldr	r3, [r3, #8]
 8005f0e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005f12:	d107      	bne.n	8005f24 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8005f14:	68fb      	ldr	r3, [r7, #12]
 8005f16:	681b      	ldr	r3, [r3, #0]
 8005f18:	681a      	ldr	r2, [r3, #0]
 8005f1a:	68fb      	ldr	r3, [r7, #12]
 8005f1c:	681b      	ldr	r3, [r3, #0]
 8005f1e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005f22:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005f24:	68fb      	ldr	r3, [r7, #12]
 8005f26:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005f28:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005f2c:	d10f      	bne.n	8005f4e <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8005f2e:	68fb      	ldr	r3, [r7, #12]
 8005f30:	681b      	ldr	r3, [r3, #0]
 8005f32:	681a      	ldr	r2, [r3, #0]
 8005f34:	68fb      	ldr	r3, [r7, #12]
 8005f36:	681b      	ldr	r3, [r3, #0]
 8005f38:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005f3c:	601a      	str	r2, [r3, #0]
 8005f3e:	68fb      	ldr	r3, [r7, #12]
 8005f40:	681b      	ldr	r3, [r3, #0]
 8005f42:	681a      	ldr	r2, [r3, #0]
 8005f44:	68fb      	ldr	r3, [r7, #12]
 8005f46:	681b      	ldr	r3, [r3, #0]
 8005f48:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005f4c:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8005f4e:	68fb      	ldr	r3, [r7, #12]
 8005f50:	2201      	movs	r2, #1
 8005f52:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8005f56:	68fb      	ldr	r3, [r7, #12]
 8005f58:	2200      	movs	r2, #0
 8005f5a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

        return HAL_TIMEOUT;
 8005f5e:	2303      	movs	r3, #3
 8005f60:	e017      	b.n	8005f92 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8005f62:	697b      	ldr	r3, [r7, #20]
 8005f64:	2b00      	cmp	r3, #0
 8005f66:	d101      	bne.n	8005f6c <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8005f68:	2300      	movs	r3, #0
 8005f6a:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8005f6c:	697b      	ldr	r3, [r7, #20]
 8005f6e:	3b01      	subs	r3, #1
 8005f70:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005f72:	68fb      	ldr	r3, [r7, #12]
 8005f74:	681b      	ldr	r3, [r3, #0]
 8005f76:	689a      	ldr	r2, [r3, #8]
 8005f78:	68bb      	ldr	r3, [r7, #8]
 8005f7a:	4013      	ands	r3, r2
 8005f7c:	68ba      	ldr	r2, [r7, #8]
 8005f7e:	429a      	cmp	r2, r3
 8005f80:	bf0c      	ite	eq
 8005f82:	2301      	moveq	r3, #1
 8005f84:	2300      	movne	r3, #0
 8005f86:	b2db      	uxtb	r3, r3
 8005f88:	461a      	mov	r2, r3
 8005f8a:	79fb      	ldrb	r3, [r7, #7]
 8005f8c:	429a      	cmp	r2, r3
 8005f8e:	d19b      	bne.n	8005ec8 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8005f90:	2300      	movs	r3, #0
}
 8005f92:	4618      	mov	r0, r3
 8005f94:	3720      	adds	r7, #32
 8005f96:	46bd      	mov	sp, r7
 8005f98:	bd80      	pop	{r7, pc}
 8005f9a:	bf00      	nop
 8005f9c:	20000018 	.word	0x20000018

08005fa0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8005fa0:	b580      	push	{r7, lr}
 8005fa2:	b086      	sub	sp, #24
 8005fa4:	af02      	add	r7, sp, #8
 8005fa6:	60f8      	str	r0, [r7, #12]
 8005fa8:	60b9      	str	r1, [r7, #8]
 8005faa:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005fac:	68fb      	ldr	r3, [r7, #12]
 8005fae:	685b      	ldr	r3, [r3, #4]
 8005fb0:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005fb4:	d111      	bne.n	8005fda <SPI_EndRxTransaction+0x3a>
 8005fb6:	68fb      	ldr	r3, [r7, #12]
 8005fb8:	689b      	ldr	r3, [r3, #8]
 8005fba:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005fbe:	d004      	beq.n	8005fca <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005fc0:	68fb      	ldr	r3, [r7, #12]
 8005fc2:	689b      	ldr	r3, [r3, #8]
 8005fc4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005fc8:	d107      	bne.n	8005fda <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8005fca:	68fb      	ldr	r3, [r7, #12]
 8005fcc:	681b      	ldr	r3, [r3, #0]
 8005fce:	681a      	ldr	r2, [r3, #0]
 8005fd0:	68fb      	ldr	r3, [r7, #12]
 8005fd2:	681b      	ldr	r3, [r3, #0]
 8005fd4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005fd8:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005fda:	68fb      	ldr	r3, [r7, #12]
 8005fdc:	685b      	ldr	r3, [r3, #4]
 8005fde:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005fe2:	d12a      	bne.n	800603a <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005fe4:	68fb      	ldr	r3, [r7, #12]
 8005fe6:	689b      	ldr	r3, [r3, #8]
 8005fe8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005fec:	d012      	beq.n	8006014 <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005fee:	687b      	ldr	r3, [r7, #4]
 8005ff0:	9300      	str	r3, [sp, #0]
 8005ff2:	68bb      	ldr	r3, [r7, #8]
 8005ff4:	2200      	movs	r2, #0
 8005ff6:	2180      	movs	r1, #128	@ 0x80
 8005ff8:	68f8      	ldr	r0, [r7, #12]
 8005ffa:	f7ff ff49 	bl	8005e90 <SPI_WaitFlagStateUntilTimeout>
 8005ffe:	4603      	mov	r3, r0
 8006000:	2b00      	cmp	r3, #0
 8006002:	d02d      	beq.n	8006060 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006004:	68fb      	ldr	r3, [r7, #12]
 8006006:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006008:	f043 0220 	orr.w	r2, r3, #32
 800600c:	68fb      	ldr	r3, [r7, #12]
 800600e:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006010:	2303      	movs	r3, #3
 8006012:	e026      	b.n	8006062 <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006014:	687b      	ldr	r3, [r7, #4]
 8006016:	9300      	str	r3, [sp, #0]
 8006018:	68bb      	ldr	r3, [r7, #8]
 800601a:	2200      	movs	r2, #0
 800601c:	2101      	movs	r1, #1
 800601e:	68f8      	ldr	r0, [r7, #12]
 8006020:	f7ff ff36 	bl	8005e90 <SPI_WaitFlagStateUntilTimeout>
 8006024:	4603      	mov	r3, r0
 8006026:	2b00      	cmp	r3, #0
 8006028:	d01a      	beq.n	8006060 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800602a:	68fb      	ldr	r3, [r7, #12]
 800602c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800602e:	f043 0220 	orr.w	r2, r3, #32
 8006032:	68fb      	ldr	r3, [r7, #12]
 8006034:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006036:	2303      	movs	r3, #3
 8006038:	e013      	b.n	8006062 <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800603a:	687b      	ldr	r3, [r7, #4]
 800603c:	9300      	str	r3, [sp, #0]
 800603e:	68bb      	ldr	r3, [r7, #8]
 8006040:	2200      	movs	r2, #0
 8006042:	2101      	movs	r1, #1
 8006044:	68f8      	ldr	r0, [r7, #12]
 8006046:	f7ff ff23 	bl	8005e90 <SPI_WaitFlagStateUntilTimeout>
 800604a:	4603      	mov	r3, r0
 800604c:	2b00      	cmp	r3, #0
 800604e:	d007      	beq.n	8006060 <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006050:	68fb      	ldr	r3, [r7, #12]
 8006052:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006054:	f043 0220 	orr.w	r2, r3, #32
 8006058:	68fb      	ldr	r3, [r7, #12]
 800605a:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 800605c:	2303      	movs	r3, #3
 800605e:	e000      	b.n	8006062 <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8006060:	2300      	movs	r3, #0
}
 8006062:	4618      	mov	r0, r3
 8006064:	3710      	adds	r7, #16
 8006066:	46bd      	mov	sp, r7
 8006068:	bd80      	pop	{r7, pc}
	...

0800606c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800606c:	b580      	push	{r7, lr}
 800606e:	b088      	sub	sp, #32
 8006070:	af02      	add	r7, sp, #8
 8006072:	60f8      	str	r0, [r7, #12]
 8006074:	60b9      	str	r1, [r7, #8]
 8006076:	607a      	str	r2, [r7, #4]
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006078:	687b      	ldr	r3, [r7, #4]
 800607a:	9300      	str	r3, [sp, #0]
 800607c:	68bb      	ldr	r3, [r7, #8]
 800607e:	2201      	movs	r2, #1
 8006080:	2102      	movs	r1, #2
 8006082:	68f8      	ldr	r0, [r7, #12]
 8006084:	f7ff ff04 	bl	8005e90 <SPI_WaitFlagStateUntilTimeout>
 8006088:	4603      	mov	r3, r0
 800608a:	2b00      	cmp	r3, #0
 800608c:	d007      	beq.n	800609e <SPI_EndRxTxTransaction+0x32>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800608e:	68fb      	ldr	r3, [r7, #12]
 8006090:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006092:	f043 0220 	orr.w	r2, r3, #32
 8006096:	68fb      	ldr	r3, [r7, #12]
 8006098:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_TIMEOUT;
 800609a:	2303      	movs	r3, #3
 800609c:	e032      	b.n	8006104 <SPI_EndRxTxTransaction+0x98>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800609e:	4b1b      	ldr	r3, [pc, #108]	@ (800610c <SPI_EndRxTxTransaction+0xa0>)
 80060a0:	681b      	ldr	r3, [r3, #0]
 80060a2:	4a1b      	ldr	r2, [pc, #108]	@ (8006110 <SPI_EndRxTxTransaction+0xa4>)
 80060a4:	fba2 2303 	umull	r2, r3, r2, r3
 80060a8:	0d5b      	lsrs	r3, r3, #21
 80060aa:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80060ae:	fb02 f303 	mul.w	r3, r2, r3
 80060b2:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80060b4:	68fb      	ldr	r3, [r7, #12]
 80060b6:	685b      	ldr	r3, [r3, #4]
 80060b8:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80060bc:	d112      	bne.n	80060e4 <SPI_EndRxTxTransaction+0x78>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80060be:	687b      	ldr	r3, [r7, #4]
 80060c0:	9300      	str	r3, [sp, #0]
 80060c2:	68bb      	ldr	r3, [r7, #8]
 80060c4:	2200      	movs	r2, #0
 80060c6:	2180      	movs	r1, #128	@ 0x80
 80060c8:	68f8      	ldr	r0, [r7, #12]
 80060ca:	f7ff fee1 	bl	8005e90 <SPI_WaitFlagStateUntilTimeout>
 80060ce:	4603      	mov	r3, r0
 80060d0:	2b00      	cmp	r3, #0
 80060d2:	d016      	beq.n	8006102 <SPI_EndRxTxTransaction+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80060d4:	68fb      	ldr	r3, [r7, #12]
 80060d6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80060d8:	f043 0220 	orr.w	r2, r3, #32
 80060dc:	68fb      	ldr	r3, [r7, #12]
 80060de:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 80060e0:	2303      	movs	r3, #3
 80060e2:	e00f      	b.n	8006104 <SPI_EndRxTxTransaction+0x98>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 80060e4:	697b      	ldr	r3, [r7, #20]
 80060e6:	2b00      	cmp	r3, #0
 80060e8:	d00a      	beq.n	8006100 <SPI_EndRxTxTransaction+0x94>
      {
        break;
      }
      count--;
 80060ea:	697b      	ldr	r3, [r7, #20]
 80060ec:	3b01      	subs	r3, #1
 80060ee:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 80060f0:	68fb      	ldr	r3, [r7, #12]
 80060f2:	681b      	ldr	r3, [r3, #0]
 80060f4:	689b      	ldr	r3, [r3, #8]
 80060f6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80060fa:	2b80      	cmp	r3, #128	@ 0x80
 80060fc:	d0f2      	beq.n	80060e4 <SPI_EndRxTxTransaction+0x78>
 80060fe:	e000      	b.n	8006102 <SPI_EndRxTxTransaction+0x96>
        break;
 8006100:	bf00      	nop
  }

  return HAL_OK;
 8006102:	2300      	movs	r3, #0
}
 8006104:	4618      	mov	r0, r3
 8006106:	3718      	adds	r7, #24
 8006108:	46bd      	mov	sp, r7
 800610a:	bd80      	pop	{r7, pc}
 800610c:	20000018 	.word	0x20000018
 8006110:	165e9f81 	.word	0x165e9f81

08006114 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8006114:	b580      	push	{r7, lr}
 8006116:	b082      	sub	sp, #8
 8006118:	af00      	add	r7, sp, #0
 800611a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800611c:	687b      	ldr	r3, [r7, #4]
 800611e:	2b00      	cmp	r3, #0
 8006120:	d101      	bne.n	8006126 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8006122:	2301      	movs	r3, #1
 8006124:	e041      	b.n	80061aa <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006126:	687b      	ldr	r3, [r7, #4]
 8006128:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800612c:	b2db      	uxtb	r3, r3
 800612e:	2b00      	cmp	r3, #0
 8006130:	d106      	bne.n	8006140 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006132:	687b      	ldr	r3, [r7, #4]
 8006134:	2200      	movs	r2, #0
 8006136:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800613a:	6878      	ldr	r0, [r7, #4]
 800613c:	f7fb ffcc 	bl	80020d8 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006140:	687b      	ldr	r3, [r7, #4]
 8006142:	2202      	movs	r2, #2
 8006144:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006148:	687b      	ldr	r3, [r7, #4]
 800614a:	681a      	ldr	r2, [r3, #0]
 800614c:	687b      	ldr	r3, [r7, #4]
 800614e:	3304      	adds	r3, #4
 8006150:	4619      	mov	r1, r3
 8006152:	4610      	mov	r0, r2
 8006154:	f000 fa7e 	bl	8006654 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	2201      	movs	r2, #1
 800615c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006160:	687b      	ldr	r3, [r7, #4]
 8006162:	2201      	movs	r2, #1
 8006164:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006168:	687b      	ldr	r3, [r7, #4]
 800616a:	2201      	movs	r2, #1
 800616c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006170:	687b      	ldr	r3, [r7, #4]
 8006172:	2201      	movs	r2, #1
 8006174:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006178:	687b      	ldr	r3, [r7, #4]
 800617a:	2201      	movs	r2, #1
 800617c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006180:	687b      	ldr	r3, [r7, #4]
 8006182:	2201      	movs	r2, #1
 8006184:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006188:	687b      	ldr	r3, [r7, #4]
 800618a:	2201      	movs	r2, #1
 800618c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006190:	687b      	ldr	r3, [r7, #4]
 8006192:	2201      	movs	r2, #1
 8006194:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	2201      	movs	r2, #1
 800619c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80061a0:	687b      	ldr	r3, [r7, #4]
 80061a2:	2201      	movs	r2, #1
 80061a4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 80061a8:	2300      	movs	r3, #0
}
 80061aa:	4618      	mov	r0, r3
 80061ac:	3708      	adds	r7, #8
 80061ae:	46bd      	mov	sp, r7
 80061b0:	bd80      	pop	{r7, pc}
	...

080061b4 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 80061b4:	b480      	push	{r7}
 80061b6:	b085      	sub	sp, #20
 80061b8:	af00      	add	r7, sp, #0
 80061ba:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80061bc:	687b      	ldr	r3, [r7, #4]
 80061be:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80061c2:	b2db      	uxtb	r3, r3
 80061c4:	2b01      	cmp	r3, #1
 80061c6:	d001      	beq.n	80061cc <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 80061c8:	2301      	movs	r3, #1
 80061ca:	e04e      	b.n	800626a <HAL_TIM_Base_Start_IT+0xb6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	2202      	movs	r2, #2
 80061d0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	681b      	ldr	r3, [r3, #0]
 80061d8:	68da      	ldr	r2, [r3, #12]
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	681b      	ldr	r3, [r3, #0]
 80061de:	f042 0201 	orr.w	r2, r2, #1
 80061e2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	681b      	ldr	r3, [r3, #0]
 80061e8:	4a23      	ldr	r2, [pc, #140]	@ (8006278 <HAL_TIM_Base_Start_IT+0xc4>)
 80061ea:	4293      	cmp	r3, r2
 80061ec:	d022      	beq.n	8006234 <HAL_TIM_Base_Start_IT+0x80>
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80061f6:	d01d      	beq.n	8006234 <HAL_TIM_Base_Start_IT+0x80>
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	4a1f      	ldr	r2, [pc, #124]	@ (800627c <HAL_TIM_Base_Start_IT+0xc8>)
 80061fe:	4293      	cmp	r3, r2
 8006200:	d018      	beq.n	8006234 <HAL_TIM_Base_Start_IT+0x80>
 8006202:	687b      	ldr	r3, [r7, #4]
 8006204:	681b      	ldr	r3, [r3, #0]
 8006206:	4a1e      	ldr	r2, [pc, #120]	@ (8006280 <HAL_TIM_Base_Start_IT+0xcc>)
 8006208:	4293      	cmp	r3, r2
 800620a:	d013      	beq.n	8006234 <HAL_TIM_Base_Start_IT+0x80>
 800620c:	687b      	ldr	r3, [r7, #4]
 800620e:	681b      	ldr	r3, [r3, #0]
 8006210:	4a1c      	ldr	r2, [pc, #112]	@ (8006284 <HAL_TIM_Base_Start_IT+0xd0>)
 8006212:	4293      	cmp	r3, r2
 8006214:	d00e      	beq.n	8006234 <HAL_TIM_Base_Start_IT+0x80>
 8006216:	687b      	ldr	r3, [r7, #4]
 8006218:	681b      	ldr	r3, [r3, #0]
 800621a:	4a1b      	ldr	r2, [pc, #108]	@ (8006288 <HAL_TIM_Base_Start_IT+0xd4>)
 800621c:	4293      	cmp	r3, r2
 800621e:	d009      	beq.n	8006234 <HAL_TIM_Base_Start_IT+0x80>
 8006220:	687b      	ldr	r3, [r7, #4]
 8006222:	681b      	ldr	r3, [r3, #0]
 8006224:	4a19      	ldr	r2, [pc, #100]	@ (800628c <HAL_TIM_Base_Start_IT+0xd8>)
 8006226:	4293      	cmp	r3, r2
 8006228:	d004      	beq.n	8006234 <HAL_TIM_Base_Start_IT+0x80>
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	681b      	ldr	r3, [r3, #0]
 800622e:	4a18      	ldr	r2, [pc, #96]	@ (8006290 <HAL_TIM_Base_Start_IT+0xdc>)
 8006230:	4293      	cmp	r3, r2
 8006232:	d111      	bne.n	8006258 <HAL_TIM_Base_Start_IT+0xa4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	681b      	ldr	r3, [r3, #0]
 8006238:	689b      	ldr	r3, [r3, #8]
 800623a:	f003 0307 	and.w	r3, r3, #7
 800623e:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006240:	68fb      	ldr	r3, [r7, #12]
 8006242:	2b06      	cmp	r3, #6
 8006244:	d010      	beq.n	8006268 <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 8006246:	687b      	ldr	r3, [r7, #4]
 8006248:	681b      	ldr	r3, [r3, #0]
 800624a:	681a      	ldr	r2, [r3, #0]
 800624c:	687b      	ldr	r3, [r7, #4]
 800624e:	681b      	ldr	r3, [r3, #0]
 8006250:	f042 0201 	orr.w	r2, r2, #1
 8006254:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006256:	e007      	b.n	8006268 <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006258:	687b      	ldr	r3, [r7, #4]
 800625a:	681b      	ldr	r3, [r3, #0]
 800625c:	681a      	ldr	r2, [r3, #0]
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	f042 0201 	orr.w	r2, r2, #1
 8006266:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8006268:	2300      	movs	r3, #0
}
 800626a:	4618      	mov	r0, r3
 800626c:	3714      	adds	r7, #20
 800626e:	46bd      	mov	sp, r7
 8006270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006274:	4770      	bx	lr
 8006276:	bf00      	nop
 8006278:	40010000 	.word	0x40010000
 800627c:	40000400 	.word	0x40000400
 8006280:	40000800 	.word	0x40000800
 8006284:	40000c00 	.word	0x40000c00
 8006288:	40010400 	.word	0x40010400
 800628c:	40014000 	.word	0x40014000
 8006290:	40001800 	.word	0x40001800

08006294 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8006294:	b580      	push	{r7, lr}
 8006296:	b084      	sub	sp, #16
 8006298:	af00      	add	r7, sp, #0
 800629a:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 800629c:	687b      	ldr	r3, [r7, #4]
 800629e:	681b      	ldr	r3, [r3, #0]
 80062a0:	68db      	ldr	r3, [r3, #12]
 80062a2:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	681b      	ldr	r3, [r3, #0]
 80062a8:	691b      	ldr	r3, [r3, #16]
 80062aa:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80062ac:	68bb      	ldr	r3, [r7, #8]
 80062ae:	f003 0302 	and.w	r3, r3, #2
 80062b2:	2b00      	cmp	r3, #0
 80062b4:	d020      	beq.n	80062f8 <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 80062b6:	68fb      	ldr	r3, [r7, #12]
 80062b8:	f003 0302 	and.w	r3, r3, #2
 80062bc:	2b00      	cmp	r3, #0
 80062be:	d01b      	beq.n	80062f8 <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 80062c0:	687b      	ldr	r3, [r7, #4]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	f06f 0202 	mvn.w	r2, #2
 80062c8:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80062ca:	687b      	ldr	r3, [r7, #4]
 80062cc:	2201      	movs	r2, #1
 80062ce:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80062d0:	687b      	ldr	r3, [r7, #4]
 80062d2:	681b      	ldr	r3, [r3, #0]
 80062d4:	699b      	ldr	r3, [r3, #24]
 80062d6:	f003 0303 	and.w	r3, r3, #3
 80062da:	2b00      	cmp	r3, #0
 80062dc:	d003      	beq.n	80062e6 <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80062de:	6878      	ldr	r0, [r7, #4]
 80062e0:	f000 f999 	bl	8006616 <HAL_TIM_IC_CaptureCallback>
 80062e4:	e005      	b.n	80062f2 <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80062e6:	6878      	ldr	r0, [r7, #4]
 80062e8:	f000 f98b 	bl	8006602 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80062ec:	6878      	ldr	r0, [r7, #4]
 80062ee:	f000 f99c 	bl	800662a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80062f2:	687b      	ldr	r3, [r7, #4]
 80062f4:	2200      	movs	r2, #0
 80062f6:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 80062f8:	68bb      	ldr	r3, [r7, #8]
 80062fa:	f003 0304 	and.w	r3, r3, #4
 80062fe:	2b00      	cmp	r3, #0
 8006300:	d020      	beq.n	8006344 <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8006302:	68fb      	ldr	r3, [r7, #12]
 8006304:	f003 0304 	and.w	r3, r3, #4
 8006308:	2b00      	cmp	r3, #0
 800630a:	d01b      	beq.n	8006344 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800630c:	687b      	ldr	r3, [r7, #4]
 800630e:	681b      	ldr	r3, [r3, #0]
 8006310:	f06f 0204 	mvn.w	r2, #4
 8006314:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006316:	687b      	ldr	r3, [r7, #4]
 8006318:	2202      	movs	r2, #2
 800631a:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800631c:	687b      	ldr	r3, [r7, #4]
 800631e:	681b      	ldr	r3, [r3, #0]
 8006320:	699b      	ldr	r3, [r3, #24]
 8006322:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006326:	2b00      	cmp	r3, #0
 8006328:	d003      	beq.n	8006332 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800632a:	6878      	ldr	r0, [r7, #4]
 800632c:	f000 f973 	bl	8006616 <HAL_TIM_IC_CaptureCallback>
 8006330:	e005      	b.n	800633e <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006332:	6878      	ldr	r0, [r7, #4]
 8006334:	f000 f965 	bl	8006602 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006338:	6878      	ldr	r0, [r7, #4]
 800633a:	f000 f976 	bl	800662a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800633e:	687b      	ldr	r3, [r7, #4]
 8006340:	2200      	movs	r2, #0
 8006342:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8006344:	68bb      	ldr	r3, [r7, #8]
 8006346:	f003 0308 	and.w	r3, r3, #8
 800634a:	2b00      	cmp	r3, #0
 800634c:	d020      	beq.n	8006390 <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800634e:	68fb      	ldr	r3, [r7, #12]
 8006350:	f003 0308 	and.w	r3, r3, #8
 8006354:	2b00      	cmp	r3, #0
 8006356:	d01b      	beq.n	8006390 <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8006358:	687b      	ldr	r3, [r7, #4]
 800635a:	681b      	ldr	r3, [r3, #0]
 800635c:	f06f 0208 	mvn.w	r2, #8
 8006360:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006362:	687b      	ldr	r3, [r7, #4]
 8006364:	2204      	movs	r2, #4
 8006366:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006368:	687b      	ldr	r3, [r7, #4]
 800636a:	681b      	ldr	r3, [r3, #0]
 800636c:	69db      	ldr	r3, [r3, #28]
 800636e:	f003 0303 	and.w	r3, r3, #3
 8006372:	2b00      	cmp	r3, #0
 8006374:	d003      	beq.n	800637e <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006376:	6878      	ldr	r0, [r7, #4]
 8006378:	f000 f94d 	bl	8006616 <HAL_TIM_IC_CaptureCallback>
 800637c:	e005      	b.n	800638a <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800637e:	6878      	ldr	r0, [r7, #4]
 8006380:	f000 f93f 	bl	8006602 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006384:	6878      	ldr	r0, [r7, #4]
 8006386:	f000 f950 	bl	800662a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800638a:	687b      	ldr	r3, [r7, #4]
 800638c:	2200      	movs	r2, #0
 800638e:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8006390:	68bb      	ldr	r3, [r7, #8]
 8006392:	f003 0310 	and.w	r3, r3, #16
 8006396:	2b00      	cmp	r3, #0
 8006398:	d020      	beq.n	80063dc <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 800639a:	68fb      	ldr	r3, [r7, #12]
 800639c:	f003 0310 	and.w	r3, r3, #16
 80063a0:	2b00      	cmp	r3, #0
 80063a2:	d01b      	beq.n	80063dc <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80063a4:	687b      	ldr	r3, [r7, #4]
 80063a6:	681b      	ldr	r3, [r3, #0]
 80063a8:	f06f 0210 	mvn.w	r2, #16
 80063ac:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	2208      	movs	r2, #8
 80063b2:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	681b      	ldr	r3, [r3, #0]
 80063b8:	69db      	ldr	r3, [r3, #28]
 80063ba:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80063be:	2b00      	cmp	r3, #0
 80063c0:	d003      	beq.n	80063ca <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80063c2:	6878      	ldr	r0, [r7, #4]
 80063c4:	f000 f927 	bl	8006616 <HAL_TIM_IC_CaptureCallback>
 80063c8:	e005      	b.n	80063d6 <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80063ca:	6878      	ldr	r0, [r7, #4]
 80063cc:	f000 f919 	bl	8006602 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80063d0:	6878      	ldr	r0, [r7, #4]
 80063d2:	f000 f92a 	bl	800662a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80063d6:	687b      	ldr	r3, [r7, #4]
 80063d8:	2200      	movs	r2, #0
 80063da:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80063dc:	68bb      	ldr	r3, [r7, #8]
 80063de:	f003 0301 	and.w	r3, r3, #1
 80063e2:	2b00      	cmp	r3, #0
 80063e4:	d00c      	beq.n	8006400 <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 80063e6:	68fb      	ldr	r3, [r7, #12]
 80063e8:	f003 0301 	and.w	r3, r3, #1
 80063ec:	2b00      	cmp	r3, #0
 80063ee:	d007      	beq.n	8006400 <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 80063f0:	687b      	ldr	r3, [r7, #4]
 80063f2:	681b      	ldr	r3, [r3, #0]
 80063f4:	f06f 0201 	mvn.w	r2, #1
 80063f8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80063fa:	6878      	ldr	r0, [r7, #4]
 80063fc:	f7fb fb48 	bl	8001a90 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8006400:	68bb      	ldr	r3, [r7, #8]
 8006402:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006406:	2b00      	cmp	r3, #0
 8006408:	d00c      	beq.n	8006424 <HAL_TIM_IRQHandler+0x190>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800640a:	68fb      	ldr	r3, [r7, #12]
 800640c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006410:	2b00      	cmp	r3, #0
 8006412:	d007      	beq.n	8006424 <HAL_TIM_IRQHandler+0x190>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8006414:	687b      	ldr	r3, [r7, #4]
 8006416:	681b      	ldr	r3, [r3, #0]
 8006418:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800641c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800641e:	6878      	ldr	r0, [r7, #4]
 8006420:	f000 fae4 	bl	80069ec <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8006424:	68bb      	ldr	r3, [r7, #8]
 8006426:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800642a:	2b00      	cmp	r3, #0
 800642c:	d00c      	beq.n	8006448 <HAL_TIM_IRQHandler+0x1b4>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800642e:	68fb      	ldr	r3, [r7, #12]
 8006430:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006434:	2b00      	cmp	r3, #0
 8006436:	d007      	beq.n	8006448 <HAL_TIM_IRQHandler+0x1b4>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8006438:	687b      	ldr	r3, [r7, #4]
 800643a:	681b      	ldr	r3, [r3, #0]
 800643c:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006440:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006442:	6878      	ldr	r0, [r7, #4]
 8006444:	f000 f8fb 	bl	800663e <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8006448:	68bb      	ldr	r3, [r7, #8]
 800644a:	f003 0320 	and.w	r3, r3, #32
 800644e:	2b00      	cmp	r3, #0
 8006450:	d00c      	beq.n	800646c <HAL_TIM_IRQHandler+0x1d8>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8006452:	68fb      	ldr	r3, [r7, #12]
 8006454:	f003 0320 	and.w	r3, r3, #32
 8006458:	2b00      	cmp	r3, #0
 800645a:	d007      	beq.n	800646c <HAL_TIM_IRQHandler+0x1d8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800645c:	687b      	ldr	r3, [r7, #4]
 800645e:	681b      	ldr	r3, [r3, #0]
 8006460:	f06f 0220 	mvn.w	r2, #32
 8006464:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006466:	6878      	ldr	r0, [r7, #4]
 8006468:	f000 fab6 	bl	80069d8 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800646c:	bf00      	nop
 800646e:	3710      	adds	r7, #16
 8006470:	46bd      	mov	sp, r7
 8006472:	bd80      	pop	{r7, pc}

08006474 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8006474:	b580      	push	{r7, lr}
 8006476:	b084      	sub	sp, #16
 8006478:	af00      	add	r7, sp, #0
 800647a:	6078      	str	r0, [r7, #4]
 800647c:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800647e:	2300      	movs	r3, #0
 8006480:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 8006482:	687b      	ldr	r3, [r7, #4]
 8006484:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006488:	2b01      	cmp	r3, #1
 800648a:	d101      	bne.n	8006490 <HAL_TIM_ConfigClockSource+0x1c>
 800648c:	2302      	movs	r3, #2
 800648e:	e0b4      	b.n	80065fa <HAL_TIM_ConfigClockSource+0x186>
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	2201      	movs	r2, #1
 8006494:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8006498:	687b      	ldr	r3, [r7, #4]
 800649a:	2202      	movs	r2, #2
 800649c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 80064a0:	687b      	ldr	r3, [r7, #4]
 80064a2:	681b      	ldr	r3, [r3, #0]
 80064a4:	689b      	ldr	r3, [r3, #8]
 80064a6:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 80064a8:	68bb      	ldr	r3, [r7, #8]
 80064aa:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80064ae:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80064b0:	68bb      	ldr	r3, [r7, #8]
 80064b2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80064b6:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 80064b8:	687b      	ldr	r3, [r7, #4]
 80064ba:	681b      	ldr	r3, [r3, #0]
 80064bc:	68ba      	ldr	r2, [r7, #8]
 80064be:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 80064c0:	683b      	ldr	r3, [r7, #0]
 80064c2:	681b      	ldr	r3, [r3, #0]
 80064c4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80064c8:	d03e      	beq.n	8006548 <HAL_TIM_ConfigClockSource+0xd4>
 80064ca:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80064ce:	f200 8087 	bhi.w	80065e0 <HAL_TIM_ConfigClockSource+0x16c>
 80064d2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80064d6:	f000 8086 	beq.w	80065e6 <HAL_TIM_ConfigClockSource+0x172>
 80064da:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80064de:	d87f      	bhi.n	80065e0 <HAL_TIM_ConfigClockSource+0x16c>
 80064e0:	2b70      	cmp	r3, #112	@ 0x70
 80064e2:	d01a      	beq.n	800651a <HAL_TIM_ConfigClockSource+0xa6>
 80064e4:	2b70      	cmp	r3, #112	@ 0x70
 80064e6:	d87b      	bhi.n	80065e0 <HAL_TIM_ConfigClockSource+0x16c>
 80064e8:	2b60      	cmp	r3, #96	@ 0x60
 80064ea:	d050      	beq.n	800658e <HAL_TIM_ConfigClockSource+0x11a>
 80064ec:	2b60      	cmp	r3, #96	@ 0x60
 80064ee:	d877      	bhi.n	80065e0 <HAL_TIM_ConfigClockSource+0x16c>
 80064f0:	2b50      	cmp	r3, #80	@ 0x50
 80064f2:	d03c      	beq.n	800656e <HAL_TIM_ConfigClockSource+0xfa>
 80064f4:	2b50      	cmp	r3, #80	@ 0x50
 80064f6:	d873      	bhi.n	80065e0 <HAL_TIM_ConfigClockSource+0x16c>
 80064f8:	2b40      	cmp	r3, #64	@ 0x40
 80064fa:	d058      	beq.n	80065ae <HAL_TIM_ConfigClockSource+0x13a>
 80064fc:	2b40      	cmp	r3, #64	@ 0x40
 80064fe:	d86f      	bhi.n	80065e0 <HAL_TIM_ConfigClockSource+0x16c>
 8006500:	2b30      	cmp	r3, #48	@ 0x30
 8006502:	d064      	beq.n	80065ce <HAL_TIM_ConfigClockSource+0x15a>
 8006504:	2b30      	cmp	r3, #48	@ 0x30
 8006506:	d86b      	bhi.n	80065e0 <HAL_TIM_ConfigClockSource+0x16c>
 8006508:	2b20      	cmp	r3, #32
 800650a:	d060      	beq.n	80065ce <HAL_TIM_ConfigClockSource+0x15a>
 800650c:	2b20      	cmp	r3, #32
 800650e:	d867      	bhi.n	80065e0 <HAL_TIM_ConfigClockSource+0x16c>
 8006510:	2b00      	cmp	r3, #0
 8006512:	d05c      	beq.n	80065ce <HAL_TIM_ConfigClockSource+0x15a>
 8006514:	2b10      	cmp	r3, #16
 8006516:	d05a      	beq.n	80065ce <HAL_TIM_ConfigClockSource+0x15a>
 8006518:	e062      	b.n	80065e0 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800651e:	683b      	ldr	r3, [r7, #0]
 8006520:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 8006522:	683b      	ldr	r3, [r7, #0]
 8006524:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8006526:	683b      	ldr	r3, [r7, #0]
 8006528:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 800652a:	f000 f9b9 	bl	80068a0 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 800652e:	687b      	ldr	r3, [r7, #4]
 8006530:	681b      	ldr	r3, [r3, #0]
 8006532:	689b      	ldr	r3, [r3, #8]
 8006534:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8006536:	68bb      	ldr	r3, [r7, #8]
 8006538:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 800653c:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 800653e:	687b      	ldr	r3, [r7, #4]
 8006540:	681b      	ldr	r3, [r3, #0]
 8006542:	68ba      	ldr	r2, [r7, #8]
 8006544:	609a      	str	r2, [r3, #8]
      break;
 8006546:	e04f      	b.n	80065e8 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8006548:	687b      	ldr	r3, [r7, #4]
 800654a:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800654c:	683b      	ldr	r3, [r7, #0]
 800654e:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 8006550:	683b      	ldr	r3, [r7, #0]
 8006552:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8006554:	683b      	ldr	r3, [r7, #0]
 8006556:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8006558:	f000 f9a2 	bl	80068a0 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800655c:	687b      	ldr	r3, [r7, #4]
 800655e:	681b      	ldr	r3, [r3, #0]
 8006560:	689a      	ldr	r2, [r3, #8]
 8006562:	687b      	ldr	r3, [r7, #4]
 8006564:	681b      	ldr	r3, [r3, #0]
 8006566:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800656a:	609a      	str	r2, [r3, #8]
      break;
 800656c:	e03c      	b.n	80065e8 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800656e:	687b      	ldr	r3, [r7, #4]
 8006570:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8006572:	683b      	ldr	r3, [r7, #0]
 8006574:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8006576:	683b      	ldr	r3, [r7, #0]
 8006578:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800657a:	461a      	mov	r2, r3
 800657c:	f000 f916 	bl	80067ac <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8006580:	687b      	ldr	r3, [r7, #4]
 8006582:	681b      	ldr	r3, [r3, #0]
 8006584:	2150      	movs	r1, #80	@ 0x50
 8006586:	4618      	mov	r0, r3
 8006588:	f000 f96f 	bl	800686a <TIM_ITRx_SetConfig>
      break;
 800658c:	e02c      	b.n	80065e8 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 800658e:	687b      	ldr	r3, [r7, #4]
 8006590:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8006592:	683b      	ldr	r3, [r7, #0]
 8006594:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8006596:	683b      	ldr	r3, [r7, #0]
 8006598:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800659a:	461a      	mov	r2, r3
 800659c:	f000 f935 	bl	800680a <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 80065a0:	687b      	ldr	r3, [r7, #4]
 80065a2:	681b      	ldr	r3, [r3, #0]
 80065a4:	2160      	movs	r1, #96	@ 0x60
 80065a6:	4618      	mov	r0, r3
 80065a8:	f000 f95f 	bl	800686a <TIM_ITRx_SetConfig>
      break;
 80065ac:	e01c      	b.n	80065e8 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80065ae:	687b      	ldr	r3, [r7, #4]
 80065b0:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80065b2:	683b      	ldr	r3, [r7, #0]
 80065b4:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80065b6:	683b      	ldr	r3, [r7, #0]
 80065b8:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80065ba:	461a      	mov	r2, r3
 80065bc:	f000 f8f6 	bl	80067ac <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 80065c0:	687b      	ldr	r3, [r7, #4]
 80065c2:	681b      	ldr	r3, [r3, #0]
 80065c4:	2140      	movs	r1, #64	@ 0x40
 80065c6:	4618      	mov	r0, r3
 80065c8:	f000 f94f 	bl	800686a <TIM_ITRx_SetConfig>
      break;
 80065cc:	e00c      	b.n	80065e8 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	681a      	ldr	r2, [r3, #0]
 80065d2:	683b      	ldr	r3, [r7, #0]
 80065d4:	681b      	ldr	r3, [r3, #0]
 80065d6:	4619      	mov	r1, r3
 80065d8:	4610      	mov	r0, r2
 80065da:	f000 f946 	bl	800686a <TIM_ITRx_SetConfig>
      break;
 80065de:	e003      	b.n	80065e8 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 80065e0:	2301      	movs	r3, #1
 80065e2:	73fb      	strb	r3, [r7, #15]
      break;
 80065e4:	e000      	b.n	80065e8 <HAL_TIM_ConfigClockSource+0x174>
      break;
 80065e6:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 80065e8:	687b      	ldr	r3, [r7, #4]
 80065ea:	2201      	movs	r2, #1
 80065ec:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	2200      	movs	r2, #0
 80065f4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 80065f8:	7bfb      	ldrb	r3, [r7, #15]
}
 80065fa:	4618      	mov	r0, r3
 80065fc:	3710      	adds	r7, #16
 80065fe:	46bd      	mov	sp, r7
 8006600:	bd80      	pop	{r7, pc}

08006602 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8006602:	b480      	push	{r7}
 8006604:	b083      	sub	sp, #12
 8006606:	af00      	add	r7, sp, #0
 8006608:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 800660a:	bf00      	nop
 800660c:	370c      	adds	r7, #12
 800660e:	46bd      	mov	sp, r7
 8006610:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006614:	4770      	bx	lr

08006616 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8006616:	b480      	push	{r7}
 8006618:	b083      	sub	sp, #12
 800661a:	af00      	add	r7, sp, #0
 800661c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800661e:	bf00      	nop
 8006620:	370c      	adds	r7, #12
 8006622:	46bd      	mov	sp, r7
 8006624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006628:	4770      	bx	lr

0800662a <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 800662a:	b480      	push	{r7}
 800662c:	b083      	sub	sp, #12
 800662e:	af00      	add	r7, sp, #0
 8006630:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 8006632:	bf00      	nop
 8006634:	370c      	adds	r7, #12
 8006636:	46bd      	mov	sp, r7
 8006638:	f85d 7b04 	ldr.w	r7, [sp], #4
 800663c:	4770      	bx	lr

0800663e <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800663e:	b480      	push	{r7}
 8006640:	b083      	sub	sp, #12
 8006642:	af00      	add	r7, sp, #0
 8006644:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8006646:	bf00      	nop
 8006648:	370c      	adds	r7, #12
 800664a:	46bd      	mov	sp, r7
 800664c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006650:	4770      	bx	lr
	...

08006654 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 8006654:	b480      	push	{r7}
 8006656:	b085      	sub	sp, #20
 8006658:	af00      	add	r7, sp, #0
 800665a:	6078      	str	r0, [r7, #4]
 800665c:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800665e:	687b      	ldr	r3, [r7, #4]
 8006660:	681b      	ldr	r3, [r3, #0]
 8006662:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	4a46      	ldr	r2, [pc, #280]	@ (8006780 <TIM_Base_SetConfig+0x12c>)
 8006668:	4293      	cmp	r3, r2
 800666a:	d013      	beq.n	8006694 <TIM_Base_SetConfig+0x40>
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006672:	d00f      	beq.n	8006694 <TIM_Base_SetConfig+0x40>
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	4a43      	ldr	r2, [pc, #268]	@ (8006784 <TIM_Base_SetConfig+0x130>)
 8006678:	4293      	cmp	r3, r2
 800667a:	d00b      	beq.n	8006694 <TIM_Base_SetConfig+0x40>
 800667c:	687b      	ldr	r3, [r7, #4]
 800667e:	4a42      	ldr	r2, [pc, #264]	@ (8006788 <TIM_Base_SetConfig+0x134>)
 8006680:	4293      	cmp	r3, r2
 8006682:	d007      	beq.n	8006694 <TIM_Base_SetConfig+0x40>
 8006684:	687b      	ldr	r3, [r7, #4]
 8006686:	4a41      	ldr	r2, [pc, #260]	@ (800678c <TIM_Base_SetConfig+0x138>)
 8006688:	4293      	cmp	r3, r2
 800668a:	d003      	beq.n	8006694 <TIM_Base_SetConfig+0x40>
 800668c:	687b      	ldr	r3, [r7, #4]
 800668e:	4a40      	ldr	r2, [pc, #256]	@ (8006790 <TIM_Base_SetConfig+0x13c>)
 8006690:	4293      	cmp	r3, r2
 8006692:	d108      	bne.n	80066a6 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006694:	68fb      	ldr	r3, [r7, #12]
 8006696:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800669a:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 800669c:	683b      	ldr	r3, [r7, #0]
 800669e:	685b      	ldr	r3, [r3, #4]
 80066a0:	68fa      	ldr	r2, [r7, #12]
 80066a2:	4313      	orrs	r3, r2
 80066a4:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80066a6:	687b      	ldr	r3, [r7, #4]
 80066a8:	4a35      	ldr	r2, [pc, #212]	@ (8006780 <TIM_Base_SetConfig+0x12c>)
 80066aa:	4293      	cmp	r3, r2
 80066ac:	d02b      	beq.n	8006706 <TIM_Base_SetConfig+0xb2>
 80066ae:	687b      	ldr	r3, [r7, #4]
 80066b0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80066b4:	d027      	beq.n	8006706 <TIM_Base_SetConfig+0xb2>
 80066b6:	687b      	ldr	r3, [r7, #4]
 80066b8:	4a32      	ldr	r2, [pc, #200]	@ (8006784 <TIM_Base_SetConfig+0x130>)
 80066ba:	4293      	cmp	r3, r2
 80066bc:	d023      	beq.n	8006706 <TIM_Base_SetConfig+0xb2>
 80066be:	687b      	ldr	r3, [r7, #4]
 80066c0:	4a31      	ldr	r2, [pc, #196]	@ (8006788 <TIM_Base_SetConfig+0x134>)
 80066c2:	4293      	cmp	r3, r2
 80066c4:	d01f      	beq.n	8006706 <TIM_Base_SetConfig+0xb2>
 80066c6:	687b      	ldr	r3, [r7, #4]
 80066c8:	4a30      	ldr	r2, [pc, #192]	@ (800678c <TIM_Base_SetConfig+0x138>)
 80066ca:	4293      	cmp	r3, r2
 80066cc:	d01b      	beq.n	8006706 <TIM_Base_SetConfig+0xb2>
 80066ce:	687b      	ldr	r3, [r7, #4]
 80066d0:	4a2f      	ldr	r2, [pc, #188]	@ (8006790 <TIM_Base_SetConfig+0x13c>)
 80066d2:	4293      	cmp	r3, r2
 80066d4:	d017      	beq.n	8006706 <TIM_Base_SetConfig+0xb2>
 80066d6:	687b      	ldr	r3, [r7, #4]
 80066d8:	4a2e      	ldr	r2, [pc, #184]	@ (8006794 <TIM_Base_SetConfig+0x140>)
 80066da:	4293      	cmp	r3, r2
 80066dc:	d013      	beq.n	8006706 <TIM_Base_SetConfig+0xb2>
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	4a2d      	ldr	r2, [pc, #180]	@ (8006798 <TIM_Base_SetConfig+0x144>)
 80066e2:	4293      	cmp	r3, r2
 80066e4:	d00f      	beq.n	8006706 <TIM_Base_SetConfig+0xb2>
 80066e6:	687b      	ldr	r3, [r7, #4]
 80066e8:	4a2c      	ldr	r2, [pc, #176]	@ (800679c <TIM_Base_SetConfig+0x148>)
 80066ea:	4293      	cmp	r3, r2
 80066ec:	d00b      	beq.n	8006706 <TIM_Base_SetConfig+0xb2>
 80066ee:	687b      	ldr	r3, [r7, #4]
 80066f0:	4a2b      	ldr	r2, [pc, #172]	@ (80067a0 <TIM_Base_SetConfig+0x14c>)
 80066f2:	4293      	cmp	r3, r2
 80066f4:	d007      	beq.n	8006706 <TIM_Base_SetConfig+0xb2>
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	4a2a      	ldr	r2, [pc, #168]	@ (80067a4 <TIM_Base_SetConfig+0x150>)
 80066fa:	4293      	cmp	r3, r2
 80066fc:	d003      	beq.n	8006706 <TIM_Base_SetConfig+0xb2>
 80066fe:	687b      	ldr	r3, [r7, #4]
 8006700:	4a29      	ldr	r2, [pc, #164]	@ (80067a8 <TIM_Base_SetConfig+0x154>)
 8006702:	4293      	cmp	r3, r2
 8006704:	d108      	bne.n	8006718 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8006706:	68fb      	ldr	r3, [r7, #12]
 8006708:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800670c:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800670e:	683b      	ldr	r3, [r7, #0]
 8006710:	68db      	ldr	r3, [r3, #12]
 8006712:	68fa      	ldr	r2, [r7, #12]
 8006714:	4313      	orrs	r3, r2
 8006716:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006718:	68fb      	ldr	r3, [r7, #12]
 800671a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800671e:	683b      	ldr	r3, [r7, #0]
 8006720:	695b      	ldr	r3, [r3, #20]
 8006722:	4313      	orrs	r3, r2
 8006724:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8006726:	687b      	ldr	r3, [r7, #4]
 8006728:	68fa      	ldr	r2, [r7, #12]
 800672a:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800672c:	683b      	ldr	r3, [r7, #0]
 800672e:	689a      	ldr	r2, [r3, #8]
 8006730:	687b      	ldr	r3, [r7, #4]
 8006732:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006734:	683b      	ldr	r3, [r7, #0]
 8006736:	681a      	ldr	r2, [r3, #0]
 8006738:	687b      	ldr	r3, [r7, #4]
 800673a:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800673c:	687b      	ldr	r3, [r7, #4]
 800673e:	4a10      	ldr	r2, [pc, #64]	@ (8006780 <TIM_Base_SetConfig+0x12c>)
 8006740:	4293      	cmp	r3, r2
 8006742:	d003      	beq.n	800674c <TIM_Base_SetConfig+0xf8>
 8006744:	687b      	ldr	r3, [r7, #4]
 8006746:	4a12      	ldr	r2, [pc, #72]	@ (8006790 <TIM_Base_SetConfig+0x13c>)
 8006748:	4293      	cmp	r3, r2
 800674a:	d103      	bne.n	8006754 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800674c:	683b      	ldr	r3, [r7, #0]
 800674e:	691a      	ldr	r2, [r3, #16]
 8006750:	687b      	ldr	r3, [r7, #4]
 8006752:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	2201      	movs	r2, #1
 8006758:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800675a:	687b      	ldr	r3, [r7, #4]
 800675c:	691b      	ldr	r3, [r3, #16]
 800675e:	f003 0301 	and.w	r3, r3, #1
 8006762:	2b01      	cmp	r3, #1
 8006764:	d105      	bne.n	8006772 <TIM_Base_SetConfig+0x11e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8006766:	687b      	ldr	r3, [r7, #4]
 8006768:	691b      	ldr	r3, [r3, #16]
 800676a:	f023 0201 	bic.w	r2, r3, #1
 800676e:	687b      	ldr	r3, [r7, #4]
 8006770:	611a      	str	r2, [r3, #16]
  }
}
 8006772:	bf00      	nop
 8006774:	3714      	adds	r7, #20
 8006776:	46bd      	mov	sp, r7
 8006778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800677c:	4770      	bx	lr
 800677e:	bf00      	nop
 8006780:	40010000 	.word	0x40010000
 8006784:	40000400 	.word	0x40000400
 8006788:	40000800 	.word	0x40000800
 800678c:	40000c00 	.word	0x40000c00
 8006790:	40010400 	.word	0x40010400
 8006794:	40014000 	.word	0x40014000
 8006798:	40014400 	.word	0x40014400
 800679c:	40014800 	.word	0x40014800
 80067a0:	40001800 	.word	0x40001800
 80067a4:	40001c00 	.word	0x40001c00
 80067a8:	40002000 	.word	0x40002000

080067ac <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 80067ac:	b480      	push	{r7}
 80067ae:	b087      	sub	sp, #28
 80067b0:	af00      	add	r7, sp, #0
 80067b2:	60f8      	str	r0, [r7, #12]
 80067b4:	60b9      	str	r1, [r7, #8]
 80067b6:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 80067b8:	68fb      	ldr	r3, [r7, #12]
 80067ba:	6a1b      	ldr	r3, [r3, #32]
 80067bc:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80067be:	68fb      	ldr	r3, [r7, #12]
 80067c0:	6a1b      	ldr	r3, [r3, #32]
 80067c2:	f023 0201 	bic.w	r2, r3, #1
 80067c6:	68fb      	ldr	r3, [r7, #12]
 80067c8:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80067ca:	68fb      	ldr	r3, [r7, #12]
 80067cc:	699b      	ldr	r3, [r3, #24]
 80067ce:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 80067d0:	693b      	ldr	r3, [r7, #16]
 80067d2:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80067d6:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 80067d8:	687b      	ldr	r3, [r7, #4]
 80067da:	011b      	lsls	r3, r3, #4
 80067dc:	693a      	ldr	r2, [r7, #16]
 80067de:	4313      	orrs	r3, r2
 80067e0:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80067e2:	697b      	ldr	r3, [r7, #20]
 80067e4:	f023 030a 	bic.w	r3, r3, #10
 80067e8:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 80067ea:	697a      	ldr	r2, [r7, #20]
 80067ec:	68bb      	ldr	r3, [r7, #8]
 80067ee:	4313      	orrs	r3, r2
 80067f0:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 80067f2:	68fb      	ldr	r3, [r7, #12]
 80067f4:	693a      	ldr	r2, [r7, #16]
 80067f6:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80067f8:	68fb      	ldr	r3, [r7, #12]
 80067fa:	697a      	ldr	r2, [r7, #20]
 80067fc:	621a      	str	r2, [r3, #32]
}
 80067fe:	bf00      	nop
 8006800:	371c      	adds	r7, #28
 8006802:	46bd      	mov	sp, r7
 8006804:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006808:	4770      	bx	lr

0800680a <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 800680a:	b480      	push	{r7}
 800680c:	b087      	sub	sp, #28
 800680e:	af00      	add	r7, sp, #0
 8006810:	60f8      	str	r0, [r7, #12]
 8006812:	60b9      	str	r1, [r7, #8]
 8006814:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8006816:	68fb      	ldr	r3, [r7, #12]
 8006818:	6a1b      	ldr	r3, [r3, #32]
 800681a:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800681c:	68fb      	ldr	r3, [r7, #12]
 800681e:	6a1b      	ldr	r3, [r3, #32]
 8006820:	f023 0210 	bic.w	r2, r3, #16
 8006824:	68fb      	ldr	r3, [r7, #12]
 8006826:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006828:	68fb      	ldr	r3, [r7, #12]
 800682a:	699b      	ldr	r3, [r3, #24]
 800682c:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800682e:	693b      	ldr	r3, [r7, #16]
 8006830:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006834:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8006836:	687b      	ldr	r3, [r7, #4]
 8006838:	031b      	lsls	r3, r3, #12
 800683a:	693a      	ldr	r2, [r7, #16]
 800683c:	4313      	orrs	r3, r2
 800683e:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8006840:	697b      	ldr	r3, [r7, #20]
 8006842:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8006846:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8006848:	68bb      	ldr	r3, [r7, #8]
 800684a:	011b      	lsls	r3, r3, #4
 800684c:	697a      	ldr	r2, [r7, #20]
 800684e:	4313      	orrs	r3, r2
 8006850:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8006852:	68fb      	ldr	r3, [r7, #12]
 8006854:	693a      	ldr	r2, [r7, #16]
 8006856:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006858:	68fb      	ldr	r3, [r7, #12]
 800685a:	697a      	ldr	r2, [r7, #20]
 800685c:	621a      	str	r2, [r3, #32]
}
 800685e:	bf00      	nop
 8006860:	371c      	adds	r7, #28
 8006862:	46bd      	mov	sp, r7
 8006864:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006868:	4770      	bx	lr

0800686a <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 800686a:	b480      	push	{r7}
 800686c:	b085      	sub	sp, #20
 800686e:	af00      	add	r7, sp, #0
 8006870:	6078      	str	r0, [r7, #4]
 8006872:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8006874:	687b      	ldr	r3, [r7, #4]
 8006876:	689b      	ldr	r3, [r3, #8]
 8006878:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800687a:	68fb      	ldr	r3, [r7, #12]
 800687c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006880:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8006882:	683a      	ldr	r2, [r7, #0]
 8006884:	68fb      	ldr	r3, [r7, #12]
 8006886:	4313      	orrs	r3, r2
 8006888:	f043 0307 	orr.w	r3, r3, #7
 800688c:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800688e:	687b      	ldr	r3, [r7, #4]
 8006890:	68fa      	ldr	r2, [r7, #12]
 8006892:	609a      	str	r2, [r3, #8]
}
 8006894:	bf00      	nop
 8006896:	3714      	adds	r7, #20
 8006898:	46bd      	mov	sp, r7
 800689a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800689e:	4770      	bx	lr

080068a0 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 80068a0:	b480      	push	{r7}
 80068a2:	b087      	sub	sp, #28
 80068a4:	af00      	add	r7, sp, #0
 80068a6:	60f8      	str	r0, [r7, #12]
 80068a8:	60b9      	str	r1, [r7, #8]
 80068aa:	607a      	str	r2, [r7, #4]
 80068ac:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 80068ae:	68fb      	ldr	r3, [r7, #12]
 80068b0:	689b      	ldr	r3, [r3, #8]
 80068b2:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80068b4:	697b      	ldr	r3, [r7, #20]
 80068b6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80068ba:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80068bc:	683b      	ldr	r3, [r7, #0]
 80068be:	021a      	lsls	r2, r3, #8
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	431a      	orrs	r2, r3
 80068c4:	68bb      	ldr	r3, [r7, #8]
 80068c6:	4313      	orrs	r3, r2
 80068c8:	697a      	ldr	r2, [r7, #20]
 80068ca:	4313      	orrs	r3, r2
 80068cc:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80068ce:	68fb      	ldr	r3, [r7, #12]
 80068d0:	697a      	ldr	r2, [r7, #20]
 80068d2:	609a      	str	r2, [r3, #8]
}
 80068d4:	bf00      	nop
 80068d6:	371c      	adds	r7, #28
 80068d8:	46bd      	mov	sp, r7
 80068da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068de:	4770      	bx	lr

080068e0 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 80068e0:	b480      	push	{r7}
 80068e2:	b085      	sub	sp, #20
 80068e4:	af00      	add	r7, sp, #0
 80068e6:	6078      	str	r0, [r7, #4]
 80068e8:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80068ea:	687b      	ldr	r3, [r7, #4]
 80068ec:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80068f0:	2b01      	cmp	r3, #1
 80068f2:	d101      	bne.n	80068f8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80068f4:	2302      	movs	r3, #2
 80068f6:	e05a      	b.n	80069ae <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80068f8:	687b      	ldr	r3, [r7, #4]
 80068fa:	2201      	movs	r2, #1
 80068fc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006900:	687b      	ldr	r3, [r7, #4]
 8006902:	2202      	movs	r2, #2
 8006904:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	681b      	ldr	r3, [r3, #0]
 800690c:	685b      	ldr	r3, [r3, #4]
 800690e:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	681b      	ldr	r3, [r3, #0]
 8006914:	689b      	ldr	r3, [r3, #8]
 8006916:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8006918:	68fb      	ldr	r3, [r7, #12]
 800691a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800691e:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8006920:	683b      	ldr	r3, [r7, #0]
 8006922:	681b      	ldr	r3, [r3, #0]
 8006924:	68fa      	ldr	r2, [r7, #12]
 8006926:	4313      	orrs	r3, r2
 8006928:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800692a:	687b      	ldr	r3, [r7, #4]
 800692c:	681b      	ldr	r3, [r3, #0]
 800692e:	68fa      	ldr	r2, [r7, #12]
 8006930:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	681b      	ldr	r3, [r3, #0]
 8006936:	4a21      	ldr	r2, [pc, #132]	@ (80069bc <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8006938:	4293      	cmp	r3, r2
 800693a:	d022      	beq.n	8006982 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	681b      	ldr	r3, [r3, #0]
 8006940:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006944:	d01d      	beq.n	8006982 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006946:	687b      	ldr	r3, [r7, #4]
 8006948:	681b      	ldr	r3, [r3, #0]
 800694a:	4a1d      	ldr	r2, [pc, #116]	@ (80069c0 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800694c:	4293      	cmp	r3, r2
 800694e:	d018      	beq.n	8006982 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006950:	687b      	ldr	r3, [r7, #4]
 8006952:	681b      	ldr	r3, [r3, #0]
 8006954:	4a1b      	ldr	r2, [pc, #108]	@ (80069c4 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8006956:	4293      	cmp	r3, r2
 8006958:	d013      	beq.n	8006982 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800695a:	687b      	ldr	r3, [r7, #4]
 800695c:	681b      	ldr	r3, [r3, #0]
 800695e:	4a1a      	ldr	r2, [pc, #104]	@ (80069c8 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8006960:	4293      	cmp	r3, r2
 8006962:	d00e      	beq.n	8006982 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006964:	687b      	ldr	r3, [r7, #4]
 8006966:	681b      	ldr	r3, [r3, #0]
 8006968:	4a18      	ldr	r2, [pc, #96]	@ (80069cc <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800696a:	4293      	cmp	r3, r2
 800696c:	d009      	beq.n	8006982 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800696e:	687b      	ldr	r3, [r7, #4]
 8006970:	681b      	ldr	r3, [r3, #0]
 8006972:	4a17      	ldr	r2, [pc, #92]	@ (80069d0 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8006974:	4293      	cmp	r3, r2
 8006976:	d004      	beq.n	8006982 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	681b      	ldr	r3, [r3, #0]
 800697c:	4a15      	ldr	r2, [pc, #84]	@ (80069d4 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800697e:	4293      	cmp	r3, r2
 8006980:	d10c      	bne.n	800699c <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8006982:	68bb      	ldr	r3, [r7, #8]
 8006984:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006988:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800698a:	683b      	ldr	r3, [r7, #0]
 800698c:	685b      	ldr	r3, [r3, #4]
 800698e:	68ba      	ldr	r2, [r7, #8]
 8006990:	4313      	orrs	r3, r2
 8006992:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8006994:	687b      	ldr	r3, [r7, #4]
 8006996:	681b      	ldr	r3, [r3, #0]
 8006998:	68ba      	ldr	r2, [r7, #8]
 800699a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800699c:	687b      	ldr	r3, [r7, #4]
 800699e:	2201      	movs	r2, #1
 80069a0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 80069a4:	687b      	ldr	r3, [r7, #4]
 80069a6:	2200      	movs	r2, #0
 80069a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 80069ac:	2300      	movs	r3, #0
}
 80069ae:	4618      	mov	r0, r3
 80069b0:	3714      	adds	r7, #20
 80069b2:	46bd      	mov	sp, r7
 80069b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069b8:	4770      	bx	lr
 80069ba:	bf00      	nop
 80069bc:	40010000 	.word	0x40010000
 80069c0:	40000400 	.word	0x40000400
 80069c4:	40000800 	.word	0x40000800
 80069c8:	40000c00 	.word	0x40000c00
 80069cc:	40010400 	.word	0x40010400
 80069d0:	40014000 	.word	0x40014000
 80069d4:	40001800 	.word	0x40001800

080069d8 <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 80069d8:	b480      	push	{r7}
 80069da:	b083      	sub	sp, #12
 80069dc:	af00      	add	r7, sp, #0
 80069de:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 80069e0:	bf00      	nop
 80069e2:	370c      	adds	r7, #12
 80069e4:	46bd      	mov	sp, r7
 80069e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069ea:	4770      	bx	lr

080069ec <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 80069ec:	b480      	push	{r7}
 80069ee:	b083      	sub	sp, #12
 80069f0:	af00      	add	r7, sp, #0
 80069f2:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 80069f4:	bf00      	nop
 80069f6:	370c      	adds	r7, #12
 80069f8:	46bd      	mov	sp, r7
 80069fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069fe:	4770      	bx	lr

08006a00 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8006a00:	b580      	push	{r7, lr}
 8006a02:	b082      	sub	sp, #8
 8006a04:	af00      	add	r7, sp, #0
 8006a06:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8006a08:	687b      	ldr	r3, [r7, #4]
 8006a0a:	2b00      	cmp	r3, #0
 8006a0c:	d101      	bne.n	8006a12 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8006a0e:	2301      	movs	r3, #1
 8006a10:	e042      	b.n	8006a98 <HAL_UART_Init+0x98>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 8006a12:	687b      	ldr	r3, [r7, #4]
 8006a14:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006a18:	b2db      	uxtb	r3, r3
 8006a1a:	2b00      	cmp	r3, #0
 8006a1c:	d106      	bne.n	8006a2c <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8006a1e:	687b      	ldr	r3, [r7, #4]
 8006a20:	2200      	movs	r2, #0
 8006a22:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8006a26:	6878      	ldr	r0, [r7, #4]
 8006a28:	f7fb fbd2 	bl	80021d0 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8006a2c:	687b      	ldr	r3, [r7, #4]
 8006a2e:	2224      	movs	r2, #36	@ 0x24
 8006a30:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	681b      	ldr	r3, [r3, #0]
 8006a38:	68da      	ldr	r2, [r3, #12]
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	681b      	ldr	r3, [r3, #0]
 8006a3e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006a42:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 8006a44:	6878      	ldr	r0, [r7, #4]
 8006a46:	f001 f8ab 	bl	8007ba0 <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006a4a:	687b      	ldr	r3, [r7, #4]
 8006a4c:	681b      	ldr	r3, [r3, #0]
 8006a4e:	691a      	ldr	r2, [r3, #16]
 8006a50:	687b      	ldr	r3, [r7, #4]
 8006a52:	681b      	ldr	r3, [r3, #0]
 8006a54:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8006a58:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	681b      	ldr	r3, [r3, #0]
 8006a5e:	695a      	ldr	r2, [r3, #20]
 8006a60:	687b      	ldr	r3, [r7, #4]
 8006a62:	681b      	ldr	r3, [r3, #0]
 8006a64:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8006a68:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 8006a6a:	687b      	ldr	r3, [r7, #4]
 8006a6c:	681b      	ldr	r3, [r3, #0]
 8006a6e:	68da      	ldr	r2, [r3, #12]
 8006a70:	687b      	ldr	r3, [r7, #4]
 8006a72:	681b      	ldr	r3, [r3, #0]
 8006a74:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006a78:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006a7a:	687b      	ldr	r3, [r7, #4]
 8006a7c:	2200      	movs	r2, #0
 8006a7e:	645a      	str	r2, [r3, #68]	@ 0x44
  huart->gState = HAL_UART_STATE_READY;
 8006a80:	687b      	ldr	r3, [r7, #4]
 8006a82:	2220      	movs	r2, #32
 8006a84:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8006a88:	687b      	ldr	r3, [r7, #4]
 8006a8a:	2220      	movs	r2, #32
 8006a8c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8006a90:	687b      	ldr	r3, [r7, #4]
 8006a92:	2200      	movs	r2, #0
 8006a94:	635a      	str	r2, [r3, #52]	@ 0x34

  return HAL_OK;
 8006a96:	2300      	movs	r3, #0
}
 8006a98:	4618      	mov	r0, r3
 8006a9a:	3708      	adds	r7, #8
 8006a9c:	46bd      	mov	sp, r7
 8006a9e:	bd80      	pop	{r7, pc}

08006aa0 <HAL_UART_Transmit_DMA>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size)
{
 8006aa0:	b580      	push	{r7, lr}
 8006aa2:	b08c      	sub	sp, #48	@ 0x30
 8006aa4:	af00      	add	r7, sp, #0
 8006aa6:	60f8      	str	r0, [r7, #12]
 8006aa8:	60b9      	str	r1, [r7, #8]
 8006aaa:	4613      	mov	r3, r2
 8006aac:	80fb      	strh	r3, [r7, #6]
  const uint32_t *tmp;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8006aae:	68fb      	ldr	r3, [r7, #12]
 8006ab0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006ab4:	b2db      	uxtb	r3, r3
 8006ab6:	2b20      	cmp	r3, #32
 8006ab8:	d156      	bne.n	8006b68 <HAL_UART_Transmit_DMA+0xc8>
  {
    if ((pData == NULL) || (Size == 0U))
 8006aba:	68bb      	ldr	r3, [r7, #8]
 8006abc:	2b00      	cmp	r3, #0
 8006abe:	d002      	beq.n	8006ac6 <HAL_UART_Transmit_DMA+0x26>
 8006ac0:	88fb      	ldrh	r3, [r7, #6]
 8006ac2:	2b00      	cmp	r3, #0
 8006ac4:	d101      	bne.n	8006aca <HAL_UART_Transmit_DMA+0x2a>
    {
      return HAL_ERROR;
 8006ac6:	2301      	movs	r3, #1
 8006ac8:	e04f      	b.n	8006b6a <HAL_UART_Transmit_DMA+0xca>
    }

    huart->pTxBuffPtr = pData;
 8006aca:	68ba      	ldr	r2, [r7, #8]
 8006acc:	68fb      	ldr	r3, [r7, #12]
 8006ace:	621a      	str	r2, [r3, #32]
    huart->TxXferSize = Size;
 8006ad0:	68fb      	ldr	r3, [r7, #12]
 8006ad2:	88fa      	ldrh	r2, [r7, #6]
 8006ad4:	849a      	strh	r2, [r3, #36]	@ 0x24
    huart->TxXferCount = Size;
 8006ad6:	68fb      	ldr	r3, [r7, #12]
 8006ad8:	88fa      	ldrh	r2, [r7, #6]
 8006ada:	84da      	strh	r2, [r3, #38]	@ 0x26

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006adc:	68fb      	ldr	r3, [r7, #12]
 8006ade:	2200      	movs	r2, #0
 8006ae0:	645a      	str	r2, [r3, #68]	@ 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006ae2:	68fb      	ldr	r3, [r7, #12]
 8006ae4:	2221      	movs	r2, #33	@ 0x21
 8006ae6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Set the UART DMA transfer complete callback */
    huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 8006aea:	68fb      	ldr	r3, [r7, #12]
 8006aec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006aee:	4a21      	ldr	r2, [pc, #132]	@ (8006b74 <HAL_UART_Transmit_DMA+0xd4>)
 8006af0:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Set the UART DMA Half transfer complete callback */
    huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 8006af2:	68fb      	ldr	r3, [r7, #12]
 8006af4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006af6:	4a20      	ldr	r2, [pc, #128]	@ (8006b78 <HAL_UART_Transmit_DMA+0xd8>)
 8006af8:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set the DMA error callback */
    huart->hdmatx->XferErrorCallback = UART_DMAError;
 8006afa:	68fb      	ldr	r3, [r7, #12]
 8006afc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006afe:	4a1f      	ldr	r2, [pc, #124]	@ (8006b7c <HAL_UART_Transmit_DMA+0xdc>)
 8006b00:	64da      	str	r2, [r3, #76]	@ 0x4c

    /* Set the DMA abort callback */
    huart->hdmatx->XferAbortCallback = NULL;
 8006b02:	68fb      	ldr	r3, [r7, #12]
 8006b04:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006b06:	2200      	movs	r2, #0
 8006b08:	651a      	str	r2, [r3, #80]	@ 0x50

    /* Enable the UART transmit DMA stream */
    tmp = (const uint32_t *)&pData;
 8006b0a:	f107 0308 	add.w	r3, r7, #8
 8006b0e:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_DMA_Start_IT(huart->hdmatx, *(const uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
 8006b10:	68fb      	ldr	r3, [r7, #12]
 8006b12:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8006b14:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006b16:	6819      	ldr	r1, [r3, #0]
 8006b18:	68fb      	ldr	r3, [r7, #12]
 8006b1a:	681b      	ldr	r3, [r3, #0]
 8006b1c:	3304      	adds	r3, #4
 8006b1e:	461a      	mov	r2, r3
 8006b20:	88fb      	ldrh	r3, [r7, #6]
 8006b22:	f7fc ff69 	bl	80039f8 <HAL_DMA_Start_IT>

    /* Clear the TC flag in the SR register by writing 0 to it */
    __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 8006b26:	68fb      	ldr	r3, [r7, #12]
 8006b28:	681b      	ldr	r3, [r3, #0]
 8006b2a:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006b2e:	601a      	str	r2, [r3, #0]

    /* Enable the DMA transfer for transmit request by setting the DMAT bit
       in the UART CR3 register */
    ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 8006b30:	68fb      	ldr	r3, [r7, #12]
 8006b32:	681b      	ldr	r3, [r3, #0]
 8006b34:	3314      	adds	r3, #20
 8006b36:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006b38:	69bb      	ldr	r3, [r7, #24]
 8006b3a:	e853 3f00 	ldrex	r3, [r3]
 8006b3e:	617b      	str	r3, [r7, #20]
   return(result);
 8006b40:	697b      	ldr	r3, [r7, #20]
 8006b42:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006b46:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006b48:	68fb      	ldr	r3, [r7, #12]
 8006b4a:	681b      	ldr	r3, [r3, #0]
 8006b4c:	3314      	adds	r3, #20
 8006b4e:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8006b50:	627a      	str	r2, [r7, #36]	@ 0x24
 8006b52:	623b      	str	r3, [r7, #32]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006b54:	6a39      	ldr	r1, [r7, #32]
 8006b56:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006b58:	e841 2300 	strex	r3, r2, [r1]
 8006b5c:	61fb      	str	r3, [r7, #28]
   return(result);
 8006b5e:	69fb      	ldr	r3, [r7, #28]
 8006b60:	2b00      	cmp	r3, #0
 8006b62:	d1e5      	bne.n	8006b30 <HAL_UART_Transmit_DMA+0x90>

    return HAL_OK;
 8006b64:	2300      	movs	r3, #0
 8006b66:	e000      	b.n	8006b6a <HAL_UART_Transmit_DMA+0xca>
  }
  else
  {
    return HAL_BUSY;
 8006b68:	2302      	movs	r3, #2
  }
}
 8006b6a:	4618      	mov	r0, r3
 8006b6c:	3730      	adds	r7, #48	@ 0x30
 8006b6e:	46bd      	mov	sp, r7
 8006b70:	bd80      	pop	{r7, pc}
 8006b72:	bf00      	nop
 8006b74:	0800742d 	.word	0x0800742d
 8006b78:	080074c7 	.word	0x080074c7
 8006b7c:	0800764b 	.word	0x0800764b

08006b80 <HAL_UARTEx_ReceiveToIdle_DMA>:
  * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
  * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8006b80:	b580      	push	{r7, lr}
 8006b82:	b08c      	sub	sp, #48	@ 0x30
 8006b84:	af00      	add	r7, sp, #0
 8006b86:	60f8      	str	r0, [r7, #12]
 8006b88:	60b9      	str	r1, [r7, #8]
 8006b8a:	4613      	mov	r3, r2
 8006b8c:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef status;

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8006b8e:	68fb      	ldr	r3, [r7, #12]
 8006b90:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006b94:	b2db      	uxtb	r3, r3
 8006b96:	2b20      	cmp	r3, #32
 8006b98:	d14a      	bne.n	8006c30 <HAL_UARTEx_ReceiveToIdle_DMA+0xb0>
  {
    if ((pData == NULL) || (Size == 0U))
 8006b9a:	68bb      	ldr	r3, [r7, #8]
 8006b9c:	2b00      	cmp	r3, #0
 8006b9e:	d002      	beq.n	8006ba6 <HAL_UARTEx_ReceiveToIdle_DMA+0x26>
 8006ba0:	88fb      	ldrh	r3, [r7, #6]
 8006ba2:	2b00      	cmp	r3, #0
 8006ba4:	d101      	bne.n	8006baa <HAL_UARTEx_ReceiveToIdle_DMA+0x2a>
    {
      return HAL_ERROR;
 8006ba6:	2301      	movs	r3, #1
 8006ba8:	e043      	b.n	8006c32 <HAL_UARTEx_ReceiveToIdle_DMA+0xb2>
    }

    /* Set Reception type to reception till IDLE Event*/
    huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 8006baa:	68fb      	ldr	r3, [r7, #12]
 8006bac:	2201      	movs	r2, #1
 8006bae:	631a      	str	r2, [r3, #48]	@ 0x30
    huart->RxEventType = HAL_UART_RXEVENT_TC;
 8006bb0:	68fb      	ldr	r3, [r7, #12]
 8006bb2:	2200      	movs	r2, #0
 8006bb4:	635a      	str	r2, [r3, #52]	@ 0x34

    status =  UART_Start_Receive_DMA(huart, pData, Size);
 8006bb6:	88fb      	ldrh	r3, [r7, #6]
 8006bb8:	461a      	mov	r2, r3
 8006bba:	68b9      	ldr	r1, [r7, #8]
 8006bbc:	68f8      	ldr	r0, [r7, #12]
 8006bbe:	f000 fd8f 	bl	80076e0 <UART_Start_Receive_DMA>
 8006bc2:	4603      	mov	r3, r0
 8006bc4:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f

    /* Check Rx process has been successfully started */
    if (status == HAL_OK)
 8006bc8:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8006bcc:	2b00      	cmp	r3, #0
 8006bce:	d12c      	bne.n	8006c2a <HAL_UARTEx_ReceiveToIdle_DMA+0xaa>
    {
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006bd0:	68fb      	ldr	r3, [r7, #12]
 8006bd2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006bd4:	2b01      	cmp	r3, #1
 8006bd6:	d125      	bne.n	8006c24 <HAL_UARTEx_ReceiveToIdle_DMA+0xa4>
      {
        __HAL_UART_CLEAR_IDLEFLAG(huart);
 8006bd8:	2300      	movs	r3, #0
 8006bda:	613b      	str	r3, [r7, #16]
 8006bdc:	68fb      	ldr	r3, [r7, #12]
 8006bde:	681b      	ldr	r3, [r3, #0]
 8006be0:	681b      	ldr	r3, [r3, #0]
 8006be2:	613b      	str	r3, [r7, #16]
 8006be4:	68fb      	ldr	r3, [r7, #12]
 8006be6:	681b      	ldr	r3, [r3, #0]
 8006be8:	685b      	ldr	r3, [r3, #4]
 8006bea:	613b      	str	r3, [r7, #16]
 8006bec:	693b      	ldr	r3, [r7, #16]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006bee:	68fb      	ldr	r3, [r7, #12]
 8006bf0:	681b      	ldr	r3, [r3, #0]
 8006bf2:	330c      	adds	r3, #12
 8006bf4:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006bf6:	69bb      	ldr	r3, [r7, #24]
 8006bf8:	e853 3f00 	ldrex	r3, [r3]
 8006bfc:	617b      	str	r3, [r7, #20]
   return(result);
 8006bfe:	697b      	ldr	r3, [r7, #20]
 8006c00:	f043 0310 	orr.w	r3, r3, #16
 8006c04:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006c06:	68fb      	ldr	r3, [r7, #12]
 8006c08:	681b      	ldr	r3, [r3, #0]
 8006c0a:	330c      	adds	r3, #12
 8006c0c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8006c0e:	627a      	str	r2, [r7, #36]	@ 0x24
 8006c10:	623b      	str	r3, [r7, #32]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006c12:	6a39      	ldr	r1, [r7, #32]
 8006c14:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006c16:	e841 2300 	strex	r3, r2, [r1]
 8006c1a:	61fb      	str	r3, [r7, #28]
   return(result);
 8006c1c:	69fb      	ldr	r3, [r7, #28]
 8006c1e:	2b00      	cmp	r3, #0
 8006c20:	d1e5      	bne.n	8006bee <HAL_UARTEx_ReceiveToIdle_DMA+0x6e>
 8006c22:	e002      	b.n	8006c2a <HAL_UARTEx_ReceiveToIdle_DMA+0xaa>
      {
        /* In case of errors already pending when reception is started,
           Interrupts may have already been raised and lead to reception abortion.
           (Overrun error for instance).
           In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
        status = HAL_ERROR;
 8006c24:	2301      	movs	r3, #1
 8006c26:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
      }
    }

    return status;
 8006c2a:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8006c2e:	e000      	b.n	8006c32 <HAL_UARTEx_ReceiveToIdle_DMA+0xb2>
  }
  else
  {
    return HAL_BUSY;
 8006c30:	2302      	movs	r3, #2
  }
}
 8006c32:	4618      	mov	r0, r3
 8006c34:	3730      	adds	r7, #48	@ 0x30
 8006c36:	46bd      	mov	sp, r7
 8006c38:	bd80      	pop	{r7, pc}

08006c3a <HAL_UART_AbortTransmit>:
  *           - Set handle State to READY
  * @note   This procedure is executed in blocking mode : when exiting function, Abort is considered as completed.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
{
 8006c3a:	b580      	push	{r7, lr}
 8006c3c:	b08e      	sub	sp, #56	@ 0x38
 8006c3e:	af00      	add	r7, sp, #0
 8006c40:	6078      	str	r0, [r7, #4]
  /* Disable TXEIE and TCIE interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 8006c42:	687b      	ldr	r3, [r7, #4]
 8006c44:	681b      	ldr	r3, [r3, #0]
 8006c46:	330c      	adds	r3, #12
 8006c48:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006c4a:	6a3b      	ldr	r3, [r7, #32]
 8006c4c:	e853 3f00 	ldrex	r3, [r3]
 8006c50:	61fb      	str	r3, [r7, #28]
   return(result);
 8006c52:	69fb      	ldr	r3, [r7, #28]
 8006c54:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8006c58:	637b      	str	r3, [r7, #52]	@ 0x34
 8006c5a:	687b      	ldr	r3, [r7, #4]
 8006c5c:	681b      	ldr	r3, [r3, #0]
 8006c5e:	330c      	adds	r3, #12
 8006c60:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8006c62:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8006c64:	62bb      	str	r3, [r7, #40]	@ 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006c66:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8006c68:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8006c6a:	e841 2300 	strex	r3, r2, [r1]
 8006c6e:	627b      	str	r3, [r7, #36]	@ 0x24
   return(result);
 8006c70:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006c72:	2b00      	cmp	r3, #0
 8006c74:	d1e5      	bne.n	8006c42 <HAL_UART_AbortTransmit+0x8>

  /* Disable the UART DMA Tx request if enabled */
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	681b      	ldr	r3, [r3, #0]
 8006c7a:	695b      	ldr	r3, [r3, #20]
 8006c7c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006c80:	2b80      	cmp	r3, #128	@ 0x80
 8006c82:	d136      	bne.n	8006cf2 <HAL_UART_AbortTransmit+0xb8>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 8006c84:	687b      	ldr	r3, [r7, #4]
 8006c86:	681b      	ldr	r3, [r3, #0]
 8006c88:	3314      	adds	r3, #20
 8006c8a:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006c8c:	68fb      	ldr	r3, [r7, #12]
 8006c8e:	e853 3f00 	ldrex	r3, [r3]
 8006c92:	60bb      	str	r3, [r7, #8]
   return(result);
 8006c94:	68bb      	ldr	r3, [r7, #8]
 8006c96:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006c9a:	633b      	str	r3, [r7, #48]	@ 0x30
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	681b      	ldr	r3, [r3, #0]
 8006ca0:	3314      	adds	r3, #20
 8006ca2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006ca4:	61ba      	str	r2, [r7, #24]
 8006ca6:	617b      	str	r3, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006ca8:	6979      	ldr	r1, [r7, #20]
 8006caa:	69ba      	ldr	r2, [r7, #24]
 8006cac:	e841 2300 	strex	r3, r2, [r1]
 8006cb0:	613b      	str	r3, [r7, #16]
   return(result);
 8006cb2:	693b      	ldr	r3, [r7, #16]
 8006cb4:	2b00      	cmp	r3, #0
 8006cb6:	d1e5      	bne.n	8006c84 <HAL_UART_AbortTransmit+0x4a>

    /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
    if (huart->hdmatx != NULL)
 8006cb8:	687b      	ldr	r3, [r7, #4]
 8006cba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006cbc:	2b00      	cmp	r3, #0
 8006cbe:	d018      	beq.n	8006cf2 <HAL_UART_AbortTransmit+0xb8>
    {
      /* Set the UART DMA Abort callback to Null.
         No call back execution at end of DMA abort procedure */
      huart->hdmatx->XferAbortCallback = NULL;
 8006cc0:	687b      	ldr	r3, [r7, #4]
 8006cc2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006cc4:	2200      	movs	r2, #0
 8006cc6:	651a      	str	r2, [r3, #80]	@ 0x50

      if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 8006cc8:	687b      	ldr	r3, [r7, #4]
 8006cca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006ccc:	4618      	mov	r0, r3
 8006cce:	f7fc feeb 	bl	8003aa8 <HAL_DMA_Abort>
 8006cd2:	4603      	mov	r3, r0
 8006cd4:	2b00      	cmp	r3, #0
 8006cd6:	d00c      	beq.n	8006cf2 <HAL_UART_AbortTransmit+0xb8>
      {
        if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 8006cd8:	687b      	ldr	r3, [r7, #4]
 8006cda:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006cdc:	4618      	mov	r0, r3
 8006cde:	f7fd f8ff 	bl	8003ee0 <HAL_DMA_GetError>
 8006ce2:	4603      	mov	r3, r0
 8006ce4:	2b20      	cmp	r3, #32
 8006ce6:	d104      	bne.n	8006cf2 <HAL_UART_AbortTransmit+0xb8>
        {
          /* Set error code to DMA */
          huart->ErrorCode = HAL_UART_ERROR_DMA;
 8006ce8:	687b      	ldr	r3, [r7, #4]
 8006cea:	2210      	movs	r2, #16
 8006cec:	645a      	str	r2, [r3, #68]	@ 0x44

          return HAL_TIMEOUT;
 8006cee:	2303      	movs	r3, #3
 8006cf0:	e007      	b.n	8006d02 <HAL_UART_AbortTransmit+0xc8>
      }
    }
  }

  /* Reset Tx transfer counter */
  huart->TxXferCount = 0x00U;
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	2200      	movs	r2, #0
 8006cf6:	84da      	strh	r2, [r3, #38]	@ 0x26

  /* Restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8006cf8:	687b      	ldr	r3, [r7, #4]
 8006cfa:	2220      	movs	r2, #32
 8006cfc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  return HAL_OK;
 8006d00:	2300      	movs	r3, #0
}
 8006d02:	4618      	mov	r0, r3
 8006d04:	3738      	adds	r7, #56	@ 0x38
 8006d06:	46bd      	mov	sp, r7
 8006d08:	bd80      	pop	{r7, pc}

08006d0a <HAL_UART_AbortReceive>:
  *           - Set handle State to READY
  * @note   This procedure is executed in blocking mode : when exiting function, Abort is considered as completed.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
{
 8006d0a:	b580      	push	{r7, lr}
 8006d0c:	b09a      	sub	sp, #104	@ 0x68
 8006d0e:	af00      	add	r7, sp, #0
 8006d10:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	681b      	ldr	r3, [r3, #0]
 8006d16:	330c      	adds	r3, #12
 8006d18:	64bb      	str	r3, [r7, #72]	@ 0x48
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006d1a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006d1c:	e853 3f00 	ldrex	r3, [r3]
 8006d20:	647b      	str	r3, [r7, #68]	@ 0x44
   return(result);
 8006d22:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8006d24:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006d28:	667b      	str	r3, [r7, #100]	@ 0x64
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	681b      	ldr	r3, [r3, #0]
 8006d2e:	330c      	adds	r3, #12
 8006d30:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 8006d32:	657a      	str	r2, [r7, #84]	@ 0x54
 8006d34:	653b      	str	r3, [r7, #80]	@ 0x50
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006d36:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 8006d38:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8006d3a:	e841 2300 	strex	r3, r2, [r1]
 8006d3e:	64fb      	str	r3, [r7, #76]	@ 0x4c
   return(result);
 8006d40:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006d42:	2b00      	cmp	r3, #0
 8006d44:	d1e5      	bne.n	8006d12 <HAL_UART_AbortReceive+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006d46:	687b      	ldr	r3, [r7, #4]
 8006d48:	681b      	ldr	r3, [r3, #0]
 8006d4a:	3314      	adds	r3, #20
 8006d4c:	637b      	str	r3, [r7, #52]	@ 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006d4e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006d50:	e853 3f00 	ldrex	r3, [r3]
 8006d54:	633b      	str	r3, [r7, #48]	@ 0x30
   return(result);
 8006d56:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006d58:	f023 0301 	bic.w	r3, r3, #1
 8006d5c:	663b      	str	r3, [r7, #96]	@ 0x60
 8006d5e:	687b      	ldr	r3, [r7, #4]
 8006d60:	681b      	ldr	r3, [r3, #0]
 8006d62:	3314      	adds	r3, #20
 8006d64:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8006d66:	643a      	str	r2, [r7, #64]	@ 0x40
 8006d68:	63fb      	str	r3, [r7, #60]	@ 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006d6a:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8006d6c:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8006d6e:	e841 2300 	strex	r3, r2, [r1]
 8006d72:	63bb      	str	r3, [r7, #56]	@ 0x38
   return(result);
 8006d74:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006d76:	2b00      	cmp	r3, #0
 8006d78:	d1e5      	bne.n	8006d46 <HAL_UART_AbortReceive+0x3c>

  /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006d7a:	687b      	ldr	r3, [r7, #4]
 8006d7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006d7e:	2b01      	cmp	r3, #1
 8006d80:	d119      	bne.n	8006db6 <HAL_UART_AbortReceive+0xac>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 8006d82:	687b      	ldr	r3, [r7, #4]
 8006d84:	681b      	ldr	r3, [r3, #0]
 8006d86:	330c      	adds	r3, #12
 8006d88:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006d8a:	6a3b      	ldr	r3, [r7, #32]
 8006d8c:	e853 3f00 	ldrex	r3, [r3]
 8006d90:	61fb      	str	r3, [r7, #28]
   return(result);
 8006d92:	69fb      	ldr	r3, [r7, #28]
 8006d94:	f023 0310 	bic.w	r3, r3, #16
 8006d98:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006d9a:	687b      	ldr	r3, [r7, #4]
 8006d9c:	681b      	ldr	r3, [r3, #0]
 8006d9e:	330c      	adds	r3, #12
 8006da0:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8006da2:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8006da4:	62bb      	str	r3, [r7, #40]	@ 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006da6:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8006da8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8006daa:	e841 2300 	strex	r3, r2, [r1]
 8006dae:	627b      	str	r3, [r7, #36]	@ 0x24
   return(result);
 8006db0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006db2:	2b00      	cmp	r3, #0
 8006db4:	d1e5      	bne.n	8006d82 <HAL_UART_AbortReceive+0x78>
  }

  /* Disable the UART DMA Rx request if enabled */
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006db6:	687b      	ldr	r3, [r7, #4]
 8006db8:	681b      	ldr	r3, [r3, #0]
 8006dba:	695b      	ldr	r3, [r3, #20]
 8006dbc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006dc0:	2b40      	cmp	r3, #64	@ 0x40
 8006dc2:	d136      	bne.n	8006e32 <HAL_UART_AbortReceive+0x128>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8006dc4:	687b      	ldr	r3, [r7, #4]
 8006dc6:	681b      	ldr	r3, [r3, #0]
 8006dc8:	3314      	adds	r3, #20
 8006dca:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006dcc:	68fb      	ldr	r3, [r7, #12]
 8006dce:	e853 3f00 	ldrex	r3, [r3]
 8006dd2:	60bb      	str	r3, [r7, #8]
   return(result);
 8006dd4:	68bb      	ldr	r3, [r7, #8]
 8006dd6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006dda:	65bb      	str	r3, [r7, #88]	@ 0x58
 8006ddc:	687b      	ldr	r3, [r7, #4]
 8006dde:	681b      	ldr	r3, [r3, #0]
 8006de0:	3314      	adds	r3, #20
 8006de2:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8006de4:	61ba      	str	r2, [r7, #24]
 8006de6:	617b      	str	r3, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006de8:	6979      	ldr	r1, [r7, #20]
 8006dea:	69ba      	ldr	r2, [r7, #24]
 8006dec:	e841 2300 	strex	r3, r2, [r1]
 8006df0:	613b      	str	r3, [r7, #16]
   return(result);
 8006df2:	693b      	ldr	r3, [r7, #16]
 8006df4:	2b00      	cmp	r3, #0
 8006df6:	d1e5      	bne.n	8006dc4 <HAL_UART_AbortReceive+0xba>

    /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
    if (huart->hdmarx != NULL)
 8006df8:	687b      	ldr	r3, [r7, #4]
 8006dfa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006dfc:	2b00      	cmp	r3, #0
 8006dfe:	d018      	beq.n	8006e32 <HAL_UART_AbortReceive+0x128>
    {
      /* Set the UART DMA Abort callback to Null.
         No call back execution at end of DMA abort procedure */
      huart->hdmarx->XferAbortCallback = NULL;
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006e04:	2200      	movs	r2, #0
 8006e06:	651a      	str	r2, [r3, #80]	@ 0x50

      if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 8006e08:	687b      	ldr	r3, [r7, #4]
 8006e0a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006e0c:	4618      	mov	r0, r3
 8006e0e:	f7fc fe4b 	bl	8003aa8 <HAL_DMA_Abort>
 8006e12:	4603      	mov	r3, r0
 8006e14:	2b00      	cmp	r3, #0
 8006e16:	d00c      	beq.n	8006e32 <HAL_UART_AbortReceive+0x128>
      {
        if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006e1c:	4618      	mov	r0, r3
 8006e1e:	f7fd f85f 	bl	8003ee0 <HAL_DMA_GetError>
 8006e22:	4603      	mov	r3, r0
 8006e24:	2b20      	cmp	r3, #32
 8006e26:	d104      	bne.n	8006e32 <HAL_UART_AbortReceive+0x128>
        {
          /* Set error code to DMA */
          huart->ErrorCode = HAL_UART_ERROR_DMA;
 8006e28:	687b      	ldr	r3, [r7, #4]
 8006e2a:	2210      	movs	r2, #16
 8006e2c:	645a      	str	r2, [r3, #68]	@ 0x44

          return HAL_TIMEOUT;
 8006e2e:	2303      	movs	r3, #3
 8006e30:	e00a      	b.n	8006e48 <HAL_UART_AbortReceive+0x13e>
      }
    }
  }

  /* Reset Rx transfer counter */
  huart->RxXferCount = 0x00U;
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	2200      	movs	r2, #0
 8006e36:	85da      	strh	r2, [r3, #46]	@ 0x2e

  /* Restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8006e38:	687b      	ldr	r3, [r7, #4]
 8006e3a:	2220      	movs	r2, #32
 8006e3c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	2200      	movs	r2, #0
 8006e44:	631a      	str	r2, [r3, #48]	@ 0x30

  return HAL_OK;
 8006e46:	2300      	movs	r3, #0
}
 8006e48:	4618      	mov	r0, r3
 8006e4a:	3768      	adds	r7, #104	@ 0x68
 8006e4c:	46bd      	mov	sp, r7
 8006e4e:	bd80      	pop	{r7, pc}

08006e50 <HAL_UART_IRQHandler>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 8006e50:	b580      	push	{r7, lr}
 8006e52:	b0ba      	sub	sp, #232	@ 0xe8
 8006e54:	af00      	add	r7, sp, #0
 8006e56:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8006e58:	687b      	ldr	r3, [r7, #4]
 8006e5a:	681b      	ldr	r3, [r3, #0]
 8006e5c:	681b      	ldr	r3, [r3, #0]
 8006e5e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8006e62:	687b      	ldr	r3, [r7, #4]
 8006e64:	681b      	ldr	r3, [r3, #0]
 8006e66:	68db      	ldr	r3, [r3, #12]
 8006e68:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8006e6c:	687b      	ldr	r3, [r7, #4]
 8006e6e:	681b      	ldr	r3, [r3, #0]
 8006e70:	695b      	ldr	r3, [r3, #20]
 8006e72:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
  uint32_t errorflags = 0x00U;
 8006e76:	2300      	movs	r3, #0
 8006e78:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
  uint32_t dmarequest = 0x00U;
 8006e7c:	2300      	movs	r3, #0
 8006e7e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 8006e82:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006e86:	f003 030f 	and.w	r3, r3, #15
 8006e8a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
  if (errorflags == RESET)
 8006e8e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8006e92:	2b00      	cmp	r3, #0
 8006e94:	d10f      	bne.n	8006eb6 <HAL_UART_IRQHandler+0x66>
  {
    /* UART in mode Receiver -------------------------------------------------*/
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8006e96:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006e9a:	f003 0320 	and.w	r3, r3, #32
 8006e9e:	2b00      	cmp	r3, #0
 8006ea0:	d009      	beq.n	8006eb6 <HAL_UART_IRQHandler+0x66>
 8006ea2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006ea6:	f003 0320 	and.w	r3, r3, #32
 8006eaa:	2b00      	cmp	r3, #0
 8006eac:	d003      	beq.n	8006eb6 <HAL_UART_IRQHandler+0x66>
    {
      UART_Receive_IT(huart);
 8006eae:	6878      	ldr	r0, [r7, #4]
 8006eb0:	f000 fdb7 	bl	8007a22 <UART_Receive_IT>
      return;
 8006eb4:	e25b      	b.n	800736e <HAL_UART_IRQHandler+0x51e>
    }
  }

  /* If some errors occur */
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 8006eb6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8006eba:	2b00      	cmp	r3, #0
 8006ebc:	f000 80de 	beq.w	800707c <HAL_UART_IRQHandler+0x22c>
 8006ec0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006ec4:	f003 0301 	and.w	r3, r3, #1
 8006ec8:	2b00      	cmp	r3, #0
 8006eca:	d106      	bne.n	8006eda <HAL_UART_IRQHandler+0x8a>
                                || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8006ecc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006ed0:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8006ed4:	2b00      	cmp	r3, #0
 8006ed6:	f000 80d1 	beq.w	800707c <HAL_UART_IRQHandler+0x22c>
  {
    /* UART parity error interrupt occurred ----------------------------------*/
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8006eda:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006ede:	f003 0301 	and.w	r3, r3, #1
 8006ee2:	2b00      	cmp	r3, #0
 8006ee4:	d00b      	beq.n	8006efe <HAL_UART_IRQHandler+0xae>
 8006ee6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006eea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006eee:	2b00      	cmp	r3, #0
 8006ef0:	d005      	beq.n	8006efe <HAL_UART_IRQHandler+0xae>
    {
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8006ef2:	687b      	ldr	r3, [r7, #4]
 8006ef4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006ef6:	f043 0201 	orr.w	r2, r3, #1
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* UART noise error interrupt occurred -----------------------------------*/
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8006efe:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006f02:	f003 0304 	and.w	r3, r3, #4
 8006f06:	2b00      	cmp	r3, #0
 8006f08:	d00b      	beq.n	8006f22 <HAL_UART_IRQHandler+0xd2>
 8006f0a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006f0e:	f003 0301 	and.w	r3, r3, #1
 8006f12:	2b00      	cmp	r3, #0
 8006f14:	d005      	beq.n	8006f22 <HAL_UART_IRQHandler+0xd2>
    {
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8006f16:	687b      	ldr	r3, [r7, #4]
 8006f18:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006f1a:	f043 0202 	orr.w	r2, r3, #2
 8006f1e:	687b      	ldr	r3, [r7, #4]
 8006f20:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* UART frame error interrupt occurred -----------------------------------*/
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8006f22:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006f26:	f003 0302 	and.w	r3, r3, #2
 8006f2a:	2b00      	cmp	r3, #0
 8006f2c:	d00b      	beq.n	8006f46 <HAL_UART_IRQHandler+0xf6>
 8006f2e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006f32:	f003 0301 	and.w	r3, r3, #1
 8006f36:	2b00      	cmp	r3, #0
 8006f38:	d005      	beq.n	8006f46 <HAL_UART_IRQHandler+0xf6>
    {
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8006f3a:	687b      	ldr	r3, [r7, #4]
 8006f3c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006f3e:	f043 0204 	orr.w	r2, r3, #4
 8006f42:	687b      	ldr	r3, [r7, #4]
 8006f44:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* UART Over-Run interrupt occurred --------------------------------------*/
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 8006f46:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006f4a:	f003 0308 	and.w	r3, r3, #8
 8006f4e:	2b00      	cmp	r3, #0
 8006f50:	d011      	beq.n	8006f76 <HAL_UART_IRQHandler+0x126>
 8006f52:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006f56:	f003 0320 	and.w	r3, r3, #32
 8006f5a:	2b00      	cmp	r3, #0
 8006f5c:	d105      	bne.n	8006f6a <HAL_UART_IRQHandler+0x11a>
                                                 || ((cr3its & USART_CR3_EIE) != RESET)))
 8006f5e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006f62:	f003 0301 	and.w	r3, r3, #1
 8006f66:	2b00      	cmp	r3, #0
 8006f68:	d005      	beq.n	8006f76 <HAL_UART_IRQHandler+0x126>
    {
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8006f6a:	687b      	ldr	r3, [r7, #4]
 8006f6c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006f6e:	f043 0208 	orr.w	r2, r3, #8
 8006f72:	687b      	ldr	r3, [r7, #4]
 8006f74:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Call UART Error Call back function if need be --------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8006f76:	687b      	ldr	r3, [r7, #4]
 8006f78:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006f7a:	2b00      	cmp	r3, #0
 8006f7c:	f000 81f2 	beq.w	8007364 <HAL_UART_IRQHandler+0x514>
    {
      /* UART in mode Receiver -----------------------------------------------*/
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8006f80:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006f84:	f003 0320 	and.w	r3, r3, #32
 8006f88:	2b00      	cmp	r3, #0
 8006f8a:	d008      	beq.n	8006f9e <HAL_UART_IRQHandler+0x14e>
 8006f8c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006f90:	f003 0320 	and.w	r3, r3, #32
 8006f94:	2b00      	cmp	r3, #0
 8006f96:	d002      	beq.n	8006f9e <HAL_UART_IRQHandler+0x14e>
      {
        UART_Receive_IT(huart);
 8006f98:	6878      	ldr	r0, [r7, #4]
 8006f9a:	f000 fd42 	bl	8007a22 <UART_Receive_IT>
      }

      /* If Overrun error occurs, or if any error occurs in DMA mode reception,
         consider error as blocking */
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8006f9e:	687b      	ldr	r3, [r7, #4]
 8006fa0:	681b      	ldr	r3, [r3, #0]
 8006fa2:	695b      	ldr	r3, [r3, #20]
 8006fa4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006fa8:	2b40      	cmp	r3, #64	@ 0x40
 8006faa:	bf0c      	ite	eq
 8006fac:	2301      	moveq	r3, #1
 8006fae:	2300      	movne	r3, #0
 8006fb0:	b2db      	uxtb	r3, r3
 8006fb2:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8006fb6:	687b      	ldr	r3, [r7, #4]
 8006fb8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006fba:	f003 0308 	and.w	r3, r3, #8
 8006fbe:	2b00      	cmp	r3, #0
 8006fc0:	d103      	bne.n	8006fca <HAL_UART_IRQHandler+0x17a>
 8006fc2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8006fc6:	2b00      	cmp	r3, #0
 8006fc8:	d04f      	beq.n	800706a <HAL_UART_IRQHandler+0x21a>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 8006fca:	6878      	ldr	r0, [r7, #4]
 8006fcc:	f000 fc4a 	bl	8007864 <UART_EndRxTransfer>

        /* Disable the UART DMA Rx request if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006fd0:	687b      	ldr	r3, [r7, #4]
 8006fd2:	681b      	ldr	r3, [r3, #0]
 8006fd4:	695b      	ldr	r3, [r3, #20]
 8006fd6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006fda:	2b40      	cmp	r3, #64	@ 0x40
 8006fdc:	d141      	bne.n	8007062 <HAL_UART_IRQHandler+0x212>
        {
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8006fde:	687b      	ldr	r3, [r7, #4]
 8006fe0:	681b      	ldr	r3, [r3, #0]
 8006fe2:	3314      	adds	r3, #20
 8006fe4:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006fe8:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8006fec:	e853 3f00 	ldrex	r3, [r3]
 8006ff0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
   return(result);
 8006ff4:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8006ff8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006ffc:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8007000:	687b      	ldr	r3, [r7, #4]
 8007002:	681b      	ldr	r3, [r3, #0]
 8007004:	3314      	adds	r3, #20
 8007006:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 800700a:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800700e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007012:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8007016:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800701a:	e841 2300 	strex	r3, r2, [r1]
 800701e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
   return(result);
 8007022:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8007026:	2b00      	cmp	r3, #0
 8007028:	d1d9      	bne.n	8006fde <HAL_UART_IRQHandler+0x18e>

          /* Abort the UART DMA Rx stream */
          if (huart->hdmarx != NULL)
 800702a:	687b      	ldr	r3, [r7, #4]
 800702c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800702e:	2b00      	cmp	r3, #0
 8007030:	d013      	beq.n	800705a <HAL_UART_IRQHandler+0x20a>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8007032:	687b      	ldr	r3, [r7, #4]
 8007034:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007036:	4a7e      	ldr	r2, [pc, #504]	@ (8007230 <HAL_UART_IRQHandler+0x3e0>)
 8007038:	651a      	str	r2, [r3, #80]	@ 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 800703a:	687b      	ldr	r3, [r7, #4]
 800703c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800703e:	4618      	mov	r0, r3
 8007040:	f7fc fda2 	bl	8003b88 <HAL_DMA_Abort_IT>
 8007044:	4603      	mov	r3, r0
 8007046:	2b00      	cmp	r3, #0
 8007048:	d016      	beq.n	8007078 <HAL_UART_IRQHandler+0x228>
            {
              /* Call Directly XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 800704a:	687b      	ldr	r3, [r7, #4]
 800704c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800704e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007050:	687a      	ldr	r2, [r7, #4]
 8007052:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8007054:	4610      	mov	r0, r2
 8007056:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007058:	e00e      	b.n	8007078 <HAL_UART_IRQHandler+0x228>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 800705a:	6878      	ldr	r0, [r7, #4]
 800705c:	f000 f9b2 	bl	80073c4 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007060:	e00a      	b.n	8007078 <HAL_UART_IRQHandler+0x228>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 8007062:	6878      	ldr	r0, [r7, #4]
 8007064:	f000 f9ae 	bl	80073c4 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007068:	e006      	b.n	8007078 <HAL_UART_IRQHandler+0x228>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 800706a:	6878      	ldr	r0, [r7, #4]
 800706c:	f000 f9aa 	bl	80073c4 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */

        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007070:	687b      	ldr	r3, [r7, #4]
 8007072:	2200      	movs	r2, #0
 8007074:	645a      	str	r2, [r3, #68]	@ 0x44
      }
    }
    return;
 8007076:	e175      	b.n	8007364 <HAL_UART_IRQHandler+0x514>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007078:	bf00      	nop
    return;
 800707a:	e173      	b.n	8007364 <HAL_UART_IRQHandler+0x514>
  } /* End if some error occurs */

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : */
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800707c:	687b      	ldr	r3, [r7, #4]
 800707e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007080:	2b01      	cmp	r3, #1
 8007082:	f040 814f 	bne.w	8007324 <HAL_UART_IRQHandler+0x4d4>
      && ((isrflags & USART_SR_IDLE) != 0U)
 8007086:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800708a:	f003 0310 	and.w	r3, r3, #16
 800708e:	2b00      	cmp	r3, #0
 8007090:	f000 8148 	beq.w	8007324 <HAL_UART_IRQHandler+0x4d4>
      && ((cr1its & USART_SR_IDLE) != 0U))
 8007094:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007098:	f003 0310 	and.w	r3, r3, #16
 800709c:	2b00      	cmp	r3, #0
 800709e:	f000 8141 	beq.w	8007324 <HAL_UART_IRQHandler+0x4d4>
  {
    __HAL_UART_CLEAR_IDLEFLAG(huart);
 80070a2:	2300      	movs	r3, #0
 80070a4:	60bb      	str	r3, [r7, #8]
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	681b      	ldr	r3, [r3, #0]
 80070aa:	681b      	ldr	r3, [r3, #0]
 80070ac:	60bb      	str	r3, [r7, #8]
 80070ae:	687b      	ldr	r3, [r7, #4]
 80070b0:	681b      	ldr	r3, [r3, #0]
 80070b2:	685b      	ldr	r3, [r3, #4]
 80070b4:	60bb      	str	r3, [r7, #8]
 80070b6:	68bb      	ldr	r3, [r7, #8]

    /* Check if DMA mode is enabled in UART */
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80070b8:	687b      	ldr	r3, [r7, #4]
 80070ba:	681b      	ldr	r3, [r3, #0]
 80070bc:	695b      	ldr	r3, [r3, #20]
 80070be:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80070c2:	2b40      	cmp	r3, #64	@ 0x40
 80070c4:	f040 80b6 	bne.w	8007234 <HAL_UART_IRQHandler+0x3e4>
    {
      /* DMA mode enabled */
      /* Check received length : If all expected data are received, do nothing,
         (DMA cplt callback will be called).
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 80070c8:	687b      	ldr	r3, [r7, #4]
 80070ca:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80070cc:	681b      	ldr	r3, [r3, #0]
 80070ce:	685b      	ldr	r3, [r3, #4]
 80070d0:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
      if ((nb_remaining_rx_data > 0U)
 80070d4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 80070d8:	2b00      	cmp	r3, #0
 80070da:	f000 8145 	beq.w	8007368 <HAL_UART_IRQHandler+0x518>
          && (nb_remaining_rx_data < huart->RxXferSize))
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80070e2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80070e6:	429a      	cmp	r2, r3
 80070e8:	f080 813e 	bcs.w	8007368 <HAL_UART_IRQHandler+0x518>
      {
        /* Reception is not complete */
        huart->RxXferCount = nb_remaining_rx_data;
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80070f2:	85da      	strh	r2, [r3, #46]	@ 0x2e

        /* In Normal mode, end DMA xfer and HAL UART Rx process*/
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 80070f4:	687b      	ldr	r3, [r7, #4]
 80070f6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80070f8:	69db      	ldr	r3, [r3, #28]
 80070fa:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80070fe:	f000 8088 	beq.w	8007212 <HAL_UART_IRQHandler+0x3c2>
        {
          /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8007102:	687b      	ldr	r3, [r7, #4]
 8007104:	681b      	ldr	r3, [r3, #0]
 8007106:	330c      	adds	r3, #12
 8007108:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800710c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8007110:	e853 3f00 	ldrex	r3, [r3]
 8007114:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
   return(result);
 8007118:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800711c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007120:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	681b      	ldr	r3, [r3, #0]
 8007128:	330c      	adds	r3, #12
 800712a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800712e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8007132:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007136:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800713a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800713e:	e841 2300 	strex	r3, r2, [r1]
 8007142:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
   return(result);
 8007146:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800714a:	2b00      	cmp	r3, #0
 800714c:	d1d9      	bne.n	8007102 <HAL_UART_IRQHandler+0x2b2>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800714e:	687b      	ldr	r3, [r7, #4]
 8007150:	681b      	ldr	r3, [r3, #0]
 8007152:	3314      	adds	r3, #20
 8007154:	677b      	str	r3, [r7, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007156:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8007158:	e853 3f00 	ldrex	r3, [r3]
 800715c:	673b      	str	r3, [r7, #112]	@ 0x70
   return(result);
 800715e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8007160:	f023 0301 	bic.w	r3, r3, #1
 8007164:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8007168:	687b      	ldr	r3, [r7, #4]
 800716a:	681b      	ldr	r3, [r3, #0]
 800716c:	3314      	adds	r3, #20
 800716e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8007172:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8007176:	67fb      	str	r3, [r7, #124]	@ 0x7c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007178:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800717a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800717e:	e841 2300 	strex	r3, r2, [r1]
 8007182:	67bb      	str	r3, [r7, #120]	@ 0x78
   return(result);
 8007184:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8007186:	2b00      	cmp	r3, #0
 8007188:	d1e1      	bne.n	800714e <HAL_UART_IRQHandler+0x2fe>

          /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
             in the UART CR3 register */
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800718a:	687b      	ldr	r3, [r7, #4]
 800718c:	681b      	ldr	r3, [r3, #0]
 800718e:	3314      	adds	r3, #20
 8007190:	663b      	str	r3, [r7, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007192:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8007194:	e853 3f00 	ldrex	r3, [r3]
 8007198:	65fb      	str	r3, [r7, #92]	@ 0x5c
   return(result);
 800719a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800719c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80071a0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80071a4:	687b      	ldr	r3, [r7, #4]
 80071a6:	681b      	ldr	r3, [r3, #0]
 80071a8:	3314      	adds	r3, #20
 80071aa:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80071ae:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80071b0:	66bb      	str	r3, [r7, #104]	@ 0x68
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80071b2:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80071b4:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80071b6:	e841 2300 	strex	r3, r2, [r1]
 80071ba:	667b      	str	r3, [r7, #100]	@ 0x64
   return(result);
 80071bc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80071be:	2b00      	cmp	r3, #0
 80071c0:	d1e3      	bne.n	800718a <HAL_UART_IRQHandler+0x33a>

          /* At end of Rx process, restore huart->RxState to Ready */
          huart->RxState = HAL_UART_STATE_READY;
 80071c2:	687b      	ldr	r3, [r7, #4]
 80071c4:	2220      	movs	r2, #32
 80071c6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80071ca:	687b      	ldr	r3, [r7, #4]
 80071cc:	2200      	movs	r2, #0
 80071ce:	631a      	str	r2, [r3, #48]	@ 0x30

          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80071d0:	687b      	ldr	r3, [r7, #4]
 80071d2:	681b      	ldr	r3, [r3, #0]
 80071d4:	330c      	adds	r3, #12
 80071d6:	64fb      	str	r3, [r7, #76]	@ 0x4c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80071d8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80071da:	e853 3f00 	ldrex	r3, [r3]
 80071de:	64bb      	str	r3, [r7, #72]	@ 0x48
   return(result);
 80071e0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80071e2:	f023 0310 	bic.w	r3, r3, #16
 80071e6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80071ea:	687b      	ldr	r3, [r7, #4]
 80071ec:	681b      	ldr	r3, [r3, #0]
 80071ee:	330c      	adds	r3, #12
 80071f0:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 80071f4:	65ba      	str	r2, [r7, #88]	@ 0x58
 80071f6:	657b      	str	r3, [r7, #84]	@ 0x54
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80071f8:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80071fa:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80071fc:	e841 2300 	strex	r3, r2, [r1]
 8007200:	653b      	str	r3, [r7, #80]	@ 0x50
   return(result);
 8007202:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8007204:	2b00      	cmp	r3, #0
 8007206:	d1e3      	bne.n	80071d0 <HAL_UART_IRQHandler+0x380>

          /* Last bytes received, so no need as the abort is immediate */
          (void)HAL_DMA_Abort(huart->hdmarx);
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800720c:	4618      	mov	r0, r3
 800720e:	f7fc fc4b 	bl	8003aa8 <HAL_DMA_Abort>
        }

        /* Initialize type of RxEvent that correspond to RxEvent callback execution;
        In this case, Rx Event type is Idle Event */
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8007212:	687b      	ldr	r3, [r7, #4]
 8007214:	2202      	movs	r2, #2
 8007216:	635a      	str	r2, [r3, #52]	@ 0x34
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8007218:	687b      	ldr	r3, [r7, #4]
 800721a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800721c:	687b      	ldr	r3, [r7, #4]
 800721e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8007220:	b29b      	uxth	r3, r3
 8007222:	1ad3      	subs	r3, r2, r3
 8007224:	b29b      	uxth	r3, r3
 8007226:	4619      	mov	r1, r3
 8007228:	6878      	ldr	r0, [r7, #4]
 800722a:	f7f9 ffa1 	bl	8001170 <HAL_UARTEx_RxEventCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      return;
 800722e:	e09b      	b.n	8007368 <HAL_UART_IRQHandler+0x518>
 8007230:	0800792b 	.word	0x0800792b
    else
    {
      /* DMA mode not enabled */
      /* Check received length : If all expected data are received, do nothing.
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8007234:	687b      	ldr	r3, [r7, #4]
 8007236:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8007238:	687b      	ldr	r3, [r7, #4]
 800723a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800723c:	b29b      	uxth	r3, r3
 800723e:	1ad3      	subs	r3, r2, r3
 8007240:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
      if ((huart->RxXferCount > 0U)
 8007244:	687b      	ldr	r3, [r7, #4]
 8007246:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8007248:	b29b      	uxth	r3, r3
 800724a:	2b00      	cmp	r3, #0
 800724c:	f000 808e 	beq.w	800736c <HAL_UART_IRQHandler+0x51c>
          && (nb_rx_data > 0U))
 8007250:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8007254:	2b00      	cmp	r3, #0
 8007256:	f000 8089 	beq.w	800736c <HAL_UART_IRQHandler+0x51c>
      {
        /* Disable the UART Parity Error Interrupt and RXNE interrupts */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800725a:	687b      	ldr	r3, [r7, #4]
 800725c:	681b      	ldr	r3, [r3, #0]
 800725e:	330c      	adds	r3, #12
 8007260:	63bb      	str	r3, [r7, #56]	@ 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007262:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007264:	e853 3f00 	ldrex	r3, [r3]
 8007268:	637b      	str	r3, [r7, #52]	@ 0x34
   return(result);
 800726a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800726c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007270:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8007274:	687b      	ldr	r3, [r7, #4]
 8007276:	681b      	ldr	r3, [r3, #0]
 8007278:	330c      	adds	r3, #12
 800727a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 800727e:	647a      	str	r2, [r7, #68]	@ 0x44
 8007280:	643b      	str	r3, [r7, #64]	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007282:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8007284:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8007286:	e841 2300 	strex	r3, r2, [r1]
 800728a:	63fb      	str	r3, [r7, #60]	@ 0x3c
   return(result);
 800728c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800728e:	2b00      	cmp	r3, #0
 8007290:	d1e3      	bne.n	800725a <HAL_UART_IRQHandler+0x40a>

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007292:	687b      	ldr	r3, [r7, #4]
 8007294:	681b      	ldr	r3, [r3, #0]
 8007296:	3314      	adds	r3, #20
 8007298:	627b      	str	r3, [r7, #36]	@ 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800729a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800729c:	e853 3f00 	ldrex	r3, [r3]
 80072a0:	623b      	str	r3, [r7, #32]
   return(result);
 80072a2:	6a3b      	ldr	r3, [r7, #32]
 80072a4:	f023 0301 	bic.w	r3, r3, #1
 80072a8:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80072ac:	687b      	ldr	r3, [r7, #4]
 80072ae:	681b      	ldr	r3, [r3, #0]
 80072b0:	3314      	adds	r3, #20
 80072b2:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 80072b6:	633a      	str	r2, [r7, #48]	@ 0x30
 80072b8:	62fb      	str	r3, [r7, #44]	@ 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80072ba:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80072bc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80072be:	e841 2300 	strex	r3, r2, [r1]
 80072c2:	62bb      	str	r3, [r7, #40]	@ 0x28
   return(result);
 80072c4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80072c6:	2b00      	cmp	r3, #0
 80072c8:	d1e3      	bne.n	8007292 <HAL_UART_IRQHandler+0x442>

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 80072ca:	687b      	ldr	r3, [r7, #4]
 80072cc:	2220      	movs	r2, #32
 80072ce:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	2200      	movs	r2, #0
 80072d6:	631a      	str	r2, [r3, #48]	@ 0x30

        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80072d8:	687b      	ldr	r3, [r7, #4]
 80072da:	681b      	ldr	r3, [r3, #0]
 80072dc:	330c      	adds	r3, #12
 80072de:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80072e0:	693b      	ldr	r3, [r7, #16]
 80072e2:	e853 3f00 	ldrex	r3, [r3]
 80072e6:	60fb      	str	r3, [r7, #12]
   return(result);
 80072e8:	68fb      	ldr	r3, [r7, #12]
 80072ea:	f023 0310 	bic.w	r3, r3, #16
 80072ee:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80072f2:	687b      	ldr	r3, [r7, #4]
 80072f4:	681b      	ldr	r3, [r3, #0]
 80072f6:	330c      	adds	r3, #12
 80072f8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 80072fc:	61fa      	str	r2, [r7, #28]
 80072fe:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007300:	69b9      	ldr	r1, [r7, #24]
 8007302:	69fa      	ldr	r2, [r7, #28]
 8007304:	e841 2300 	strex	r3, r2, [r1]
 8007308:	617b      	str	r3, [r7, #20]
   return(result);
 800730a:	697b      	ldr	r3, [r7, #20]
 800730c:	2b00      	cmp	r3, #0
 800730e:	d1e3      	bne.n	80072d8 <HAL_UART_IRQHandler+0x488>

        /* Initialize type of RxEvent that correspond to RxEvent callback execution;
           In this case, Rx Event type is Idle Event */
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8007310:	687b      	ldr	r3, [r7, #4]
 8007312:	2202      	movs	r2, #2
 8007314:	635a      	str	r2, [r3, #52]	@ 0x34
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxEventCallback(huart, nb_rx_data);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8007316:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800731a:	4619      	mov	r1, r3
 800731c:	6878      	ldr	r0, [r7, #4]
 800731e:	f7f9 ff27 	bl	8001170 <HAL_UARTEx_RxEventCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      return;
 8007322:	e023      	b.n	800736c <HAL_UART_IRQHandler+0x51c>
    }
  }

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 8007324:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007328:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800732c:	2b00      	cmp	r3, #0
 800732e:	d009      	beq.n	8007344 <HAL_UART_IRQHandler+0x4f4>
 8007330:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007334:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007338:	2b00      	cmp	r3, #0
 800733a:	d003      	beq.n	8007344 <HAL_UART_IRQHandler+0x4f4>
  {
    UART_Transmit_IT(huart);
 800733c:	6878      	ldr	r0, [r7, #4]
 800733e:	f000 fb08 	bl	8007952 <UART_Transmit_IT>
    return;
 8007342:	e014      	b.n	800736e <HAL_UART_IRQHandler+0x51e>
  }

  /* UART in mode Transmitter end --------------------------------------------*/
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8007344:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007348:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800734c:	2b00      	cmp	r3, #0
 800734e:	d00e      	beq.n	800736e <HAL_UART_IRQHandler+0x51e>
 8007350:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007354:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007358:	2b00      	cmp	r3, #0
 800735a:	d008      	beq.n	800736e <HAL_UART_IRQHandler+0x51e>
  {
    UART_EndTransmit_IT(huart);
 800735c:	6878      	ldr	r0, [r7, #4]
 800735e:	f000 fb48 	bl	80079f2 <UART_EndTransmit_IT>
    return;
 8007362:	e004      	b.n	800736e <HAL_UART_IRQHandler+0x51e>
    return;
 8007364:	bf00      	nop
 8007366:	e002      	b.n	800736e <HAL_UART_IRQHandler+0x51e>
      return;
 8007368:	bf00      	nop
 800736a:	e000      	b.n	800736e <HAL_UART_IRQHandler+0x51e>
      return;
 800736c:	bf00      	nop
  }
}
 800736e:	37e8      	adds	r7, #232	@ 0xe8
 8007370:	46bd      	mov	sp, r7
 8007372:	bd80      	pop	{r7, pc}

08007374 <HAL_UART_TxCpltCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8007374:	b480      	push	{r7}
 8007376:	b083      	sub	sp, #12
 8007378:	af00      	add	r7, sp, #0
 800737a:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_TxCpltCallback could be implemented in the user file
   */
}
 800737c:	bf00      	nop
 800737e:	370c      	adds	r7, #12
 8007380:	46bd      	mov	sp, r7
 8007382:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007386:	4770      	bx	lr

08007388 <HAL_UART_TxHalfCpltCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
{
 8007388:	b480      	push	{r7}
 800738a:	b083      	sub	sp, #12
 800738c:	af00      	add	r7, sp, #0
 800738e:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_TxHalfCpltCallback could be implemented in the user file
   */
}
 8007390:	bf00      	nop
 8007392:	370c      	adds	r7, #12
 8007394:	46bd      	mov	sp, r7
 8007396:	f85d 7b04 	ldr.w	r7, [sp], #4
 800739a:	4770      	bx	lr

0800739c <HAL_UART_RxCpltCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 800739c:	b480      	push	{r7}
 800739e:	b083      	sub	sp, #12
 80073a0:	af00      	add	r7, sp, #0
 80073a2:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_RxCpltCallback could be implemented in the user file
   */
}
 80073a4:	bf00      	nop
 80073a6:	370c      	adds	r7, #12
 80073a8:	46bd      	mov	sp, r7
 80073aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073ae:	4770      	bx	lr

080073b0 <HAL_UART_RxHalfCpltCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
{
 80073b0:	b480      	push	{r7}
 80073b2:	b083      	sub	sp, #12
 80073b4:	af00      	add	r7, sp, #0
 80073b6:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_RxHalfCpltCallback could be implemented in the user file
   */
}
 80073b8:	bf00      	nop
 80073ba:	370c      	adds	r7, #12
 80073bc:	46bd      	mov	sp, r7
 80073be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073c2:	4770      	bx	lr

080073c4 <HAL_UART_ErrorCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 80073c4:	b480      	push	{r7}
 80073c6:	b083      	sub	sp, #12
 80073c8:	af00      	add	r7, sp, #0
 80073ca:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_ErrorCallback could be implemented in the user file
   */
}
 80073cc:	bf00      	nop
 80073ce:	370c      	adds	r7, #12
 80073d0:	46bd      	mov	sp, r7
 80073d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073d6:	4770      	bx	lr

080073d8 <HAL_UART_GetState>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL state
  */
HAL_UART_StateTypeDef HAL_UART_GetState(const UART_HandleTypeDef *huart)
{
 80073d8:	b480      	push	{r7}
 80073da:	b085      	sub	sp, #20
 80073dc:	af00      	add	r7, sp, #0
 80073de:	6078      	str	r0, [r7, #4]
  uint32_t temp1 = 0x00U, temp2 = 0x00U;
 80073e0:	2300      	movs	r3, #0
 80073e2:	60fb      	str	r3, [r7, #12]
 80073e4:	2300      	movs	r3, #0
 80073e6:	60bb      	str	r3, [r7, #8]
  temp1 = huart->gState;
 80073e8:	687b      	ldr	r3, [r7, #4]
 80073ea:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80073ee:	b2db      	uxtb	r3, r3
 80073f0:	60fb      	str	r3, [r7, #12]
  temp2 = huart->RxState;
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80073f8:	b2db      	uxtb	r3, r3
 80073fa:	60bb      	str	r3, [r7, #8]

  return (HAL_UART_StateTypeDef)(temp1 | temp2);
 80073fc:	68fb      	ldr	r3, [r7, #12]
 80073fe:	b2da      	uxtb	r2, r3
 8007400:	68bb      	ldr	r3, [r7, #8]
 8007402:	b2db      	uxtb	r3, r3
 8007404:	4313      	orrs	r3, r2
 8007406:	b2db      	uxtb	r3, r3
}
 8007408:	4618      	mov	r0, r3
 800740a:	3714      	adds	r7, #20
 800740c:	46bd      	mov	sp, r7
 800740e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007412:	4770      	bx	lr

08007414 <HAL_UART_GetError>:
  * @param  huart Pointer to a UART_HandleTypeDef structure that contains
  *               the configuration information for the specified UART.
  * @retval UART Error Code
  */
uint32_t HAL_UART_GetError(const UART_HandleTypeDef *huart)
{
 8007414:	b480      	push	{r7}
 8007416:	b083      	sub	sp, #12
 8007418:	af00      	add	r7, sp, #0
 800741a:	6078      	str	r0, [r7, #4]
  return huart->ErrorCode;
 800741c:	687b      	ldr	r3, [r7, #4]
 800741e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
}
 8007420:	4618      	mov	r0, r3
 8007422:	370c      	adds	r7, #12
 8007424:	46bd      	mov	sp, r7
 8007426:	f85d 7b04 	ldr.w	r7, [sp], #4
 800742a:	4770      	bx	lr

0800742c <UART_DMATransmitCplt>:
  * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 800742c:	b580      	push	{r7, lr}
 800742e:	b090      	sub	sp, #64	@ 0x40
 8007430:	af00      	add	r7, sp, #0
 8007432:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007434:	687b      	ldr	r3, [r7, #4]
 8007436:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007438:	63fb      	str	r3, [r7, #60]	@ 0x3c
  /* DMA Normal mode*/
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 800743a:	687b      	ldr	r3, [r7, #4]
 800743c:	681b      	ldr	r3, [r3, #0]
 800743e:	681b      	ldr	r3, [r3, #0]
 8007440:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007444:	2b00      	cmp	r3, #0
 8007446:	d137      	bne.n	80074b8 <UART_DMATransmitCplt+0x8c>
  {
    huart->TxXferCount = 0x00U;
 8007448:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800744a:	2200      	movs	r2, #0
 800744c:	84da      	strh	r2, [r3, #38]	@ 0x26

    /* Disable the DMA transfer for transmit request by setting the DMAT bit
       in the UART CR3 register */
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 800744e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007450:	681b      	ldr	r3, [r3, #0]
 8007452:	3314      	adds	r3, #20
 8007454:	627b      	str	r3, [r7, #36]	@ 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007456:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007458:	e853 3f00 	ldrex	r3, [r3]
 800745c:	623b      	str	r3, [r7, #32]
   return(result);
 800745e:	6a3b      	ldr	r3, [r7, #32]
 8007460:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007464:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007466:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007468:	681b      	ldr	r3, [r3, #0]
 800746a:	3314      	adds	r3, #20
 800746c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800746e:	633a      	str	r2, [r7, #48]	@ 0x30
 8007470:	62fb      	str	r3, [r7, #44]	@ 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007472:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007474:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007476:	e841 2300 	strex	r3, r2, [r1]
 800747a:	62bb      	str	r3, [r7, #40]	@ 0x28
   return(result);
 800747c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800747e:	2b00      	cmp	r3, #0
 8007480:	d1e5      	bne.n	800744e <UART_DMATransmitCplt+0x22>

    /* Enable the UART Transmit Complete Interrupt */
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8007482:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007484:	681b      	ldr	r3, [r3, #0]
 8007486:	330c      	adds	r3, #12
 8007488:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800748a:	693b      	ldr	r3, [r7, #16]
 800748c:	e853 3f00 	ldrex	r3, [r3]
 8007490:	60fb      	str	r3, [r7, #12]
   return(result);
 8007492:	68fb      	ldr	r3, [r7, #12]
 8007494:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007498:	637b      	str	r3, [r7, #52]	@ 0x34
 800749a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800749c:	681b      	ldr	r3, [r3, #0]
 800749e:	330c      	adds	r3, #12
 80074a0:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80074a2:	61fa      	str	r2, [r7, #28]
 80074a4:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80074a6:	69b9      	ldr	r1, [r7, #24]
 80074a8:	69fa      	ldr	r2, [r7, #28]
 80074aa:	e841 2300 	strex	r3, r2, [r1]
 80074ae:	617b      	str	r3, [r7, #20]
   return(result);
 80074b0:	697b      	ldr	r3, [r7, #20]
 80074b2:	2b00      	cmp	r3, #0
 80074b4:	d1e5      	bne.n	8007482 <UART_DMATransmitCplt+0x56>
#else
    /*Call legacy weak Tx complete callback*/
    HAL_UART_TxCpltCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
  }
}
 80074b6:	e002      	b.n	80074be <UART_DMATransmitCplt+0x92>
    HAL_UART_TxCpltCallback(huart);
 80074b8:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 80074ba:	f7ff ff5b 	bl	8007374 <HAL_UART_TxCpltCallback>
}
 80074be:	bf00      	nop
 80074c0:	3740      	adds	r7, #64	@ 0x40
 80074c2:	46bd      	mov	sp, r7
 80074c4:	bd80      	pop	{r7, pc}

080074c6 <UART_DMATxHalfCplt>:
  * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
{
 80074c6:	b580      	push	{r7, lr}
 80074c8:	b084      	sub	sp, #16
 80074ca:	af00      	add	r7, sp, #0
 80074cc:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80074ce:	687b      	ldr	r3, [r7, #4]
 80074d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80074d2:	60fb      	str	r3, [r7, #12]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxHalfCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxHalfCpltCallback(huart);
 80074d4:	68f8      	ldr	r0, [r7, #12]
 80074d6:	f7ff ff57 	bl	8007388 <HAL_UART_TxHalfCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80074da:	bf00      	nop
 80074dc:	3710      	adds	r7, #16
 80074de:	46bd      	mov	sp, r7
 80074e0:	bd80      	pop	{r7, pc}

080074e2 <UART_DMAReceiveCplt>:
  * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
{
 80074e2:	b580      	push	{r7, lr}
 80074e4:	b09c      	sub	sp, #112	@ 0x70
 80074e6:	af00      	add	r7, sp, #0
 80074e8:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80074ea:	687b      	ldr	r3, [r7, #4]
 80074ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80074ee:	66fb      	str	r3, [r7, #108]	@ 0x6c

  /* DMA Normal mode*/
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 80074f0:	687b      	ldr	r3, [r7, #4]
 80074f2:	681b      	ldr	r3, [r3, #0]
 80074f4:	681b      	ldr	r3, [r3, #0]
 80074f6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80074fa:	2b00      	cmp	r3, #0
 80074fc:	d172      	bne.n	80075e4 <UART_DMAReceiveCplt+0x102>
  {
    huart->RxXferCount = 0U;
 80074fe:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007500:	2200      	movs	r2, #0
 8007502:	85da      	strh	r2, [r3, #46]	@ 0x2e

    /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8007504:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007506:	681b      	ldr	r3, [r3, #0]
 8007508:	330c      	adds	r3, #12
 800750a:	64fb      	str	r3, [r7, #76]	@ 0x4c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800750c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800750e:	e853 3f00 	ldrex	r3, [r3]
 8007512:	64bb      	str	r3, [r7, #72]	@ 0x48
   return(result);
 8007514:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007516:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800751a:	66bb      	str	r3, [r7, #104]	@ 0x68
 800751c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800751e:	681b      	ldr	r3, [r3, #0]
 8007520:	330c      	adds	r3, #12
 8007522:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 8007524:	65ba      	str	r2, [r7, #88]	@ 0x58
 8007526:	657b      	str	r3, [r7, #84]	@ 0x54
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007528:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800752a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800752c:	e841 2300 	strex	r3, r2, [r1]
 8007530:	653b      	str	r3, [r7, #80]	@ 0x50
   return(result);
 8007532:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8007534:	2b00      	cmp	r3, #0
 8007536:	d1e5      	bne.n	8007504 <UART_DMAReceiveCplt+0x22>
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007538:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800753a:	681b      	ldr	r3, [r3, #0]
 800753c:	3314      	adds	r3, #20
 800753e:	63bb      	str	r3, [r7, #56]	@ 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007540:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007542:	e853 3f00 	ldrex	r3, [r3]
 8007546:	637b      	str	r3, [r7, #52]	@ 0x34
   return(result);
 8007548:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800754a:	f023 0301 	bic.w	r3, r3, #1
 800754e:	667b      	str	r3, [r7, #100]	@ 0x64
 8007550:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007552:	681b      	ldr	r3, [r3, #0]
 8007554:	3314      	adds	r3, #20
 8007556:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 8007558:	647a      	str	r2, [r7, #68]	@ 0x44
 800755a:	643b      	str	r3, [r7, #64]	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800755c:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800755e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8007560:	e841 2300 	strex	r3, r2, [r1]
 8007564:	63fb      	str	r3, [r7, #60]	@ 0x3c
   return(result);
 8007566:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007568:	2b00      	cmp	r3, #0
 800756a:	d1e5      	bne.n	8007538 <UART_DMAReceiveCplt+0x56>

    /* Disable the DMA transfer for the receiver request by setting the DMAR bit
       in the UART CR3 register */
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800756c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800756e:	681b      	ldr	r3, [r3, #0]
 8007570:	3314      	adds	r3, #20
 8007572:	627b      	str	r3, [r7, #36]	@ 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007574:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007576:	e853 3f00 	ldrex	r3, [r3]
 800757a:	623b      	str	r3, [r7, #32]
   return(result);
 800757c:	6a3b      	ldr	r3, [r7, #32]
 800757e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007582:	663b      	str	r3, [r7, #96]	@ 0x60
 8007584:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007586:	681b      	ldr	r3, [r3, #0]
 8007588:	3314      	adds	r3, #20
 800758a:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 800758c:	633a      	str	r2, [r7, #48]	@ 0x30
 800758e:	62fb      	str	r3, [r7, #44]	@ 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007590:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007592:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007594:	e841 2300 	strex	r3, r2, [r1]
 8007598:	62bb      	str	r3, [r7, #40]	@ 0x28
   return(result);
 800759a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800759c:	2b00      	cmp	r3, #0
 800759e:	d1e5      	bne.n	800756c <UART_DMAReceiveCplt+0x8a>

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 80075a0:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80075a2:	2220      	movs	r2, #32
 80075a4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

    /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
    if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80075a8:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80075aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80075ac:	2b01      	cmp	r3, #1
 80075ae:	d119      	bne.n	80075e4 <UART_DMAReceiveCplt+0x102>
    {
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80075b0:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80075b2:	681b      	ldr	r3, [r3, #0]
 80075b4:	330c      	adds	r3, #12
 80075b6:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80075b8:	693b      	ldr	r3, [r7, #16]
 80075ba:	e853 3f00 	ldrex	r3, [r3]
 80075be:	60fb      	str	r3, [r7, #12]
   return(result);
 80075c0:	68fb      	ldr	r3, [r7, #12]
 80075c2:	f023 0310 	bic.w	r3, r3, #16
 80075c6:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80075c8:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80075ca:	681b      	ldr	r3, [r3, #0]
 80075cc:	330c      	adds	r3, #12
 80075ce:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 80075d0:	61fa      	str	r2, [r7, #28]
 80075d2:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80075d4:	69b9      	ldr	r1, [r7, #24]
 80075d6:	69fa      	ldr	r2, [r7, #28]
 80075d8:	e841 2300 	strex	r3, r2, [r1]
 80075dc:	617b      	str	r3, [r7, #20]
   return(result);
 80075de:	697b      	ldr	r3, [r7, #20]
 80075e0:	2b00      	cmp	r3, #0
 80075e2:	d1e5      	bne.n	80075b0 <UART_DMAReceiveCplt+0xce>
    }
  }

  /* Initialize type of RxEvent that correspond to RxEvent callback execution;
   In this case, Rx Event type is Transfer Complete */
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 80075e4:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80075e6:	2200      	movs	r2, #0
 80075e8:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : use Rx Event callback */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80075ea:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80075ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80075ee:	2b01      	cmp	r3, #1
 80075f0:	d106      	bne.n	8007600 <UART_DMAReceiveCplt+0x11e>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    /*Call registered Rx Event callback*/
    huart->RxEventCallback(huart, huart->RxXferSize);
#else
    /*Call legacy weak Rx Event callback*/
    HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 80075f2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80075f4:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80075f6:	4619      	mov	r1, r3
 80075f8:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 80075fa:	f7f9 fdb9 	bl	8001170 <HAL_UARTEx_RxEventCallback>
#else
    /*Call legacy weak Rx complete callback*/
    HAL_UART_RxCpltCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
  }
}
 80075fe:	e002      	b.n	8007606 <UART_DMAReceiveCplt+0x124>
    HAL_UART_RxCpltCallback(huart);
 8007600:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8007602:	f7ff fecb 	bl	800739c <HAL_UART_RxCpltCallback>
}
 8007606:	bf00      	nop
 8007608:	3770      	adds	r7, #112	@ 0x70
 800760a:	46bd      	mov	sp, r7
 800760c:	bd80      	pop	{r7, pc}

0800760e <UART_DMARxHalfCplt>:
  * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
{
 800760e:	b580      	push	{r7, lr}
 8007610:	b084      	sub	sp, #16
 8007612:	af00      	add	r7, sp, #0
 8007614:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007616:	687b      	ldr	r3, [r7, #4]
 8007618:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800761a:	60fb      	str	r3, [r7, #12]

  /* Initialize type of RxEvent that correspond to RxEvent callback execution;
     In this case, Rx Event type is Half Transfer */
  huart->RxEventType = HAL_UART_RXEVENT_HT;
 800761c:	68fb      	ldr	r3, [r7, #12]
 800761e:	2201      	movs	r2, #1
 8007620:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : use Rx Event callback */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8007622:	68fb      	ldr	r3, [r7, #12]
 8007624:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007626:	2b01      	cmp	r3, #1
 8007628:	d108      	bne.n	800763c <UART_DMARxHalfCplt+0x2e>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    /*Call registered Rx Event callback*/
    huart->RxEventCallback(huart, huart->RxXferSize / 2U);
#else
    /*Call legacy weak Rx Event callback*/
    HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
 800762a:	68fb      	ldr	r3, [r7, #12]
 800762c:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800762e:	085b      	lsrs	r3, r3, #1
 8007630:	b29b      	uxth	r3, r3
 8007632:	4619      	mov	r1, r3
 8007634:	68f8      	ldr	r0, [r7, #12]
 8007636:	f7f9 fd9b 	bl	8001170 <HAL_UARTEx_RxEventCallback>
#else
    /*Call legacy weak Rx Half complete callback*/
    HAL_UART_RxHalfCpltCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
  }
}
 800763a:	e002      	b.n	8007642 <UART_DMARxHalfCplt+0x34>
    HAL_UART_RxHalfCpltCallback(huart);
 800763c:	68f8      	ldr	r0, [r7, #12]
 800763e:	f7ff feb7 	bl	80073b0 <HAL_UART_RxHalfCpltCallback>
}
 8007642:	bf00      	nop
 8007644:	3710      	adds	r7, #16
 8007646:	46bd      	mov	sp, r7
 8007648:	bd80      	pop	{r7, pc}

0800764a <UART_DMAError>:
  * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void UART_DMAError(DMA_HandleTypeDef *hdma)
{
 800764a:	b580      	push	{r7, lr}
 800764c:	b084      	sub	sp, #16
 800764e:	af00      	add	r7, sp, #0
 8007650:	6078      	str	r0, [r7, #4]
  uint32_t dmarequest = 0x00U;
 8007652:	2300      	movs	r3, #0
 8007654:	60fb      	str	r3, [r7, #12]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007656:	687b      	ldr	r3, [r7, #4]
 8007658:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800765a:	60bb      	str	r3, [r7, #8]

  /* Stop UART DMA Tx request if ongoing */
  dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 800765c:	68bb      	ldr	r3, [r7, #8]
 800765e:	681b      	ldr	r3, [r3, #0]
 8007660:	695b      	ldr	r3, [r3, #20]
 8007662:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007666:	2b80      	cmp	r3, #128	@ 0x80
 8007668:	bf0c      	ite	eq
 800766a:	2301      	moveq	r3, #1
 800766c:	2300      	movne	r3, #0
 800766e:	b2db      	uxtb	r3, r3
 8007670:	60fb      	str	r3, [r7, #12]
  if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 8007672:	68bb      	ldr	r3, [r7, #8]
 8007674:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007678:	b2db      	uxtb	r3, r3
 800767a:	2b21      	cmp	r3, #33	@ 0x21
 800767c:	d108      	bne.n	8007690 <UART_DMAError+0x46>
 800767e:	68fb      	ldr	r3, [r7, #12]
 8007680:	2b00      	cmp	r3, #0
 8007682:	d005      	beq.n	8007690 <UART_DMAError+0x46>
  {
    huart->TxXferCount = 0x00U;
 8007684:	68bb      	ldr	r3, [r7, #8]
 8007686:	2200      	movs	r2, #0
 8007688:	84da      	strh	r2, [r3, #38]	@ 0x26
    UART_EndTxTransfer(huart);
 800768a:	68b8      	ldr	r0, [r7, #8]
 800768c:	f000 f8c2 	bl	8007814 <UART_EndTxTransfer>
  }

  /* Stop UART DMA Rx request if ongoing */
  dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8007690:	68bb      	ldr	r3, [r7, #8]
 8007692:	681b      	ldr	r3, [r3, #0]
 8007694:	695b      	ldr	r3, [r3, #20]
 8007696:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800769a:	2b40      	cmp	r3, #64	@ 0x40
 800769c:	bf0c      	ite	eq
 800769e:	2301      	moveq	r3, #1
 80076a0:	2300      	movne	r3, #0
 80076a2:	b2db      	uxtb	r3, r3
 80076a4:	60fb      	str	r3, [r7, #12]
  if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 80076a6:	68bb      	ldr	r3, [r7, #8]
 80076a8:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80076ac:	b2db      	uxtb	r3, r3
 80076ae:	2b22      	cmp	r3, #34	@ 0x22
 80076b0:	d108      	bne.n	80076c4 <UART_DMAError+0x7a>
 80076b2:	68fb      	ldr	r3, [r7, #12]
 80076b4:	2b00      	cmp	r3, #0
 80076b6:	d005      	beq.n	80076c4 <UART_DMAError+0x7a>
  {
    huart->RxXferCount = 0x00U;
 80076b8:	68bb      	ldr	r3, [r7, #8]
 80076ba:	2200      	movs	r2, #0
 80076bc:	85da      	strh	r2, [r3, #46]	@ 0x2e
    UART_EndRxTransfer(huart);
 80076be:	68b8      	ldr	r0, [r7, #8]
 80076c0:	f000 f8d0 	bl	8007864 <UART_EndRxTransfer>
  }

  huart->ErrorCode |= HAL_UART_ERROR_DMA;
 80076c4:	68bb      	ldr	r3, [r7, #8]
 80076c6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80076c8:	f043 0210 	orr.w	r2, r3, #16
 80076cc:	68bb      	ldr	r3, [r7, #8]
 80076ce:	645a      	str	r2, [r3, #68]	@ 0x44
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 80076d0:	68b8      	ldr	r0, [r7, #8]
 80076d2:	f7ff fe77 	bl	80073c4 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80076d6:	bf00      	nop
 80076d8:	3710      	adds	r7, #16
 80076da:	46bd      	mov	sp, r7
 80076dc:	bd80      	pop	{r7, pc}
	...

080076e0 <UART_Start_Receive_DMA>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 80076e0:	b580      	push	{r7, lr}
 80076e2:	b098      	sub	sp, #96	@ 0x60
 80076e4:	af00      	add	r7, sp, #0
 80076e6:	60f8      	str	r0, [r7, #12]
 80076e8:	60b9      	str	r1, [r7, #8]
 80076ea:	4613      	mov	r3, r2
 80076ec:	80fb      	strh	r3, [r7, #6]
  uint32_t *tmp;

  huart->pRxBuffPtr = pData;
 80076ee:	68ba      	ldr	r2, [r7, #8]
 80076f0:	68fb      	ldr	r3, [r7, #12]
 80076f2:	629a      	str	r2, [r3, #40]	@ 0x28
  huart->RxXferSize = Size;
 80076f4:	68fb      	ldr	r3, [r7, #12]
 80076f6:	88fa      	ldrh	r2, [r7, #6]
 80076f8:	859a      	strh	r2, [r3, #44]	@ 0x2c

  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80076fa:	68fb      	ldr	r3, [r7, #12]
 80076fc:	2200      	movs	r2, #0
 80076fe:	645a      	str	r2, [r3, #68]	@ 0x44
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8007700:	68fb      	ldr	r3, [r7, #12]
 8007702:	2222      	movs	r2, #34	@ 0x22
 8007704:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

  /* Set the UART DMA transfer complete callback */
  huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 8007708:	68fb      	ldr	r3, [r7, #12]
 800770a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800770c:	4a3e      	ldr	r2, [pc, #248]	@ (8007808 <UART_Start_Receive_DMA+0x128>)
 800770e:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Set the UART DMA Half transfer complete callback */
  huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 8007710:	68fb      	ldr	r3, [r7, #12]
 8007712:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007714:	4a3d      	ldr	r2, [pc, #244]	@ (800780c <UART_Start_Receive_DMA+0x12c>)
 8007716:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Set the DMA error callback */
  huart->hdmarx->XferErrorCallback = UART_DMAError;
 8007718:	68fb      	ldr	r3, [r7, #12]
 800771a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800771c:	4a3c      	ldr	r2, [pc, #240]	@ (8007810 <UART_Start_Receive_DMA+0x130>)
 800771e:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Set the DMA abort callback */
  huart->hdmarx->XferAbortCallback = NULL;
 8007720:	68fb      	ldr	r3, [r7, #12]
 8007722:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007724:	2200      	movs	r2, #0
 8007726:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Enable the DMA stream */
  tmp = (uint32_t *)&pData;
 8007728:	f107 0308 	add.w	r3, r7, #8
 800772c:	65fb      	str	r3, [r7, #92]	@ 0x5c
  HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 800772e:	68fb      	ldr	r3, [r7, #12]
 8007730:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
 8007732:	68fb      	ldr	r3, [r7, #12]
 8007734:	681b      	ldr	r3, [r3, #0]
 8007736:	3304      	adds	r3, #4
 8007738:	4619      	mov	r1, r3
 800773a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800773c:	681a      	ldr	r2, [r3, #0]
 800773e:	88fb      	ldrh	r3, [r7, #6]
 8007740:	f7fc f95a 	bl	80039f8 <HAL_DMA_Start_IT>

  /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the second transfer */
  __HAL_UART_CLEAR_OREFLAG(huart);
 8007744:	2300      	movs	r3, #0
 8007746:	613b      	str	r3, [r7, #16]
 8007748:	68fb      	ldr	r3, [r7, #12]
 800774a:	681b      	ldr	r3, [r3, #0]
 800774c:	681b      	ldr	r3, [r3, #0]
 800774e:	613b      	str	r3, [r7, #16]
 8007750:	68fb      	ldr	r3, [r7, #12]
 8007752:	681b      	ldr	r3, [r3, #0]
 8007754:	685b      	ldr	r3, [r3, #4]
 8007756:	613b      	str	r3, [r7, #16]
 8007758:	693b      	ldr	r3, [r7, #16]

  if (huart->Init.Parity != UART_PARITY_NONE)
 800775a:	68fb      	ldr	r3, [r7, #12]
 800775c:	691b      	ldr	r3, [r3, #16]
 800775e:	2b00      	cmp	r3, #0
 8007760:	d019      	beq.n	8007796 <UART_Start_Receive_DMA+0xb6>
  {
    /* Enable the UART Parity Error Interrupt */
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8007762:	68fb      	ldr	r3, [r7, #12]
 8007764:	681b      	ldr	r3, [r3, #0]
 8007766:	330c      	adds	r3, #12
 8007768:	643b      	str	r3, [r7, #64]	@ 0x40
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800776a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800776c:	e853 3f00 	ldrex	r3, [r3]
 8007770:	63fb      	str	r3, [r7, #60]	@ 0x3c
   return(result);
 8007772:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007774:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007778:	65bb      	str	r3, [r7, #88]	@ 0x58
 800777a:	68fb      	ldr	r3, [r7, #12]
 800777c:	681b      	ldr	r3, [r3, #0]
 800777e:	330c      	adds	r3, #12
 8007780:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8007782:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8007784:	64bb      	str	r3, [r7, #72]	@ 0x48
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007786:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8007788:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800778a:	e841 2300 	strex	r3, r2, [r1]
 800778e:	647b      	str	r3, [r7, #68]	@ 0x44
   return(result);
 8007790:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8007792:	2b00      	cmp	r3, #0
 8007794:	d1e5      	bne.n	8007762 <UART_Start_Receive_DMA+0x82>
  }

  /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007796:	68fb      	ldr	r3, [r7, #12]
 8007798:	681b      	ldr	r3, [r3, #0]
 800779a:	3314      	adds	r3, #20
 800779c:	62fb      	str	r3, [r7, #44]	@ 0x2c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800779e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80077a0:	e853 3f00 	ldrex	r3, [r3]
 80077a4:	62bb      	str	r3, [r7, #40]	@ 0x28
   return(result);
 80077a6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80077a8:	f043 0301 	orr.w	r3, r3, #1
 80077ac:	657b      	str	r3, [r7, #84]	@ 0x54
 80077ae:	68fb      	ldr	r3, [r7, #12]
 80077b0:	681b      	ldr	r3, [r3, #0]
 80077b2:	3314      	adds	r3, #20
 80077b4:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 80077b6:	63ba      	str	r2, [r7, #56]	@ 0x38
 80077b8:	637b      	str	r3, [r7, #52]	@ 0x34
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80077ba:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 80077bc:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80077be:	e841 2300 	strex	r3, r2, [r1]
 80077c2:	633b      	str	r3, [r7, #48]	@ 0x30
   return(result);
 80077c4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80077c6:	2b00      	cmp	r3, #0
 80077c8:	d1e5      	bne.n	8007796 <UART_Start_Receive_DMA+0xb6>

  /* Enable the DMA transfer for the receiver request by setting the DMAR bit
  in the UART CR3 register */
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80077ca:	68fb      	ldr	r3, [r7, #12]
 80077cc:	681b      	ldr	r3, [r3, #0]
 80077ce:	3314      	adds	r3, #20
 80077d0:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80077d2:	69bb      	ldr	r3, [r7, #24]
 80077d4:	e853 3f00 	ldrex	r3, [r3]
 80077d8:	617b      	str	r3, [r7, #20]
   return(result);
 80077da:	697b      	ldr	r3, [r7, #20]
 80077dc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80077e0:	653b      	str	r3, [r7, #80]	@ 0x50
 80077e2:	68fb      	ldr	r3, [r7, #12]
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	3314      	adds	r3, #20
 80077e8:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 80077ea:	627a      	str	r2, [r7, #36]	@ 0x24
 80077ec:	623b      	str	r3, [r7, #32]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80077ee:	6a39      	ldr	r1, [r7, #32]
 80077f0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80077f2:	e841 2300 	strex	r3, r2, [r1]
 80077f6:	61fb      	str	r3, [r7, #28]
   return(result);
 80077f8:	69fb      	ldr	r3, [r7, #28]
 80077fa:	2b00      	cmp	r3, #0
 80077fc:	d1e5      	bne.n	80077ca <UART_Start_Receive_DMA+0xea>

  return HAL_OK;
 80077fe:	2300      	movs	r3, #0
}
 8007800:	4618      	mov	r0, r3
 8007802:	3760      	adds	r7, #96	@ 0x60
 8007804:	46bd      	mov	sp, r7
 8007806:	bd80      	pop	{r7, pc}
 8007808:	080074e3 	.word	0x080074e3
 800780c:	0800760f 	.word	0x0800760f
 8007810:	0800764b 	.word	0x0800764b

08007814 <UART_EndTxTransfer>:
  * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
{
 8007814:	b480      	push	{r7}
 8007816:	b089      	sub	sp, #36	@ 0x24
 8007818:	af00      	add	r7, sp, #0
 800781a:	6078      	str	r0, [r7, #4]
  /* Disable TXEIE and TCIE interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 800781c:	687b      	ldr	r3, [r7, #4]
 800781e:	681b      	ldr	r3, [r3, #0]
 8007820:	330c      	adds	r3, #12
 8007822:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007824:	68fb      	ldr	r3, [r7, #12]
 8007826:	e853 3f00 	ldrex	r3, [r3]
 800782a:	60bb      	str	r3, [r7, #8]
   return(result);
 800782c:	68bb      	ldr	r3, [r7, #8]
 800782e:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8007832:	61fb      	str	r3, [r7, #28]
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	681b      	ldr	r3, [r3, #0]
 8007838:	330c      	adds	r3, #12
 800783a:	69fa      	ldr	r2, [r7, #28]
 800783c:	61ba      	str	r2, [r7, #24]
 800783e:	617b      	str	r3, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007840:	6979      	ldr	r1, [r7, #20]
 8007842:	69ba      	ldr	r2, [r7, #24]
 8007844:	e841 2300 	strex	r3, r2, [r1]
 8007848:	613b      	str	r3, [r7, #16]
   return(result);
 800784a:	693b      	ldr	r3, [r7, #16]
 800784c:	2b00      	cmp	r3, #0
 800784e:	d1e5      	bne.n	800781c <UART_EndTxTransfer+0x8>

  /* At end of Tx process, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8007850:	687b      	ldr	r3, [r7, #4]
 8007852:	2220      	movs	r2, #32
 8007854:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
}
 8007858:	bf00      	nop
 800785a:	3724      	adds	r7, #36	@ 0x24
 800785c:	46bd      	mov	sp, r7
 800785e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007862:	4770      	bx	lr

08007864 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8007864:	b480      	push	{r7}
 8007866:	b095      	sub	sp, #84	@ 0x54
 8007868:	af00      	add	r7, sp, #0
 800786a:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800786c:	687b      	ldr	r3, [r7, #4]
 800786e:	681b      	ldr	r3, [r3, #0]
 8007870:	330c      	adds	r3, #12
 8007872:	637b      	str	r3, [r7, #52]	@ 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007874:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007876:	e853 3f00 	ldrex	r3, [r3]
 800787a:	633b      	str	r3, [r7, #48]	@ 0x30
   return(result);
 800787c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800787e:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007882:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007884:	687b      	ldr	r3, [r7, #4]
 8007886:	681b      	ldr	r3, [r3, #0]
 8007888:	330c      	adds	r3, #12
 800788a:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800788c:	643a      	str	r2, [r7, #64]	@ 0x40
 800788e:	63fb      	str	r3, [r7, #60]	@ 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007890:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8007892:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8007894:	e841 2300 	strex	r3, r2, [r1]
 8007898:	63bb      	str	r3, [r7, #56]	@ 0x38
   return(result);
 800789a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800789c:	2b00      	cmp	r3, #0
 800789e:	d1e5      	bne.n	800786c <UART_EndRxTransfer+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80078a0:	687b      	ldr	r3, [r7, #4]
 80078a2:	681b      	ldr	r3, [r3, #0]
 80078a4:	3314      	adds	r3, #20
 80078a6:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80078a8:	6a3b      	ldr	r3, [r7, #32]
 80078aa:	e853 3f00 	ldrex	r3, [r3]
 80078ae:	61fb      	str	r3, [r7, #28]
   return(result);
 80078b0:	69fb      	ldr	r3, [r7, #28]
 80078b2:	f023 0301 	bic.w	r3, r3, #1
 80078b6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80078b8:	687b      	ldr	r3, [r7, #4]
 80078ba:	681b      	ldr	r3, [r3, #0]
 80078bc:	3314      	adds	r3, #20
 80078be:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80078c0:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80078c2:	62bb      	str	r3, [r7, #40]	@ 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80078c4:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80078c6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80078c8:	e841 2300 	strex	r3, r2, [r1]
 80078cc:	627b      	str	r3, [r7, #36]	@ 0x24
   return(result);
 80078ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80078d0:	2b00      	cmp	r3, #0
 80078d2:	d1e5      	bne.n	80078a0 <UART_EndRxTransfer+0x3c>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80078d4:	687b      	ldr	r3, [r7, #4]
 80078d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80078d8:	2b01      	cmp	r3, #1
 80078da:	d119      	bne.n	8007910 <UART_EndRxTransfer+0xac>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	330c      	adds	r3, #12
 80078e2:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80078e4:	68fb      	ldr	r3, [r7, #12]
 80078e6:	e853 3f00 	ldrex	r3, [r3]
 80078ea:	60bb      	str	r3, [r7, #8]
   return(result);
 80078ec:	68bb      	ldr	r3, [r7, #8]
 80078ee:	f023 0310 	bic.w	r3, r3, #16
 80078f2:	647b      	str	r3, [r7, #68]	@ 0x44
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	681b      	ldr	r3, [r3, #0]
 80078f8:	330c      	adds	r3, #12
 80078fa:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80078fc:	61ba      	str	r2, [r7, #24]
 80078fe:	617b      	str	r3, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007900:	6979      	ldr	r1, [r7, #20]
 8007902:	69ba      	ldr	r2, [r7, #24]
 8007904:	e841 2300 	strex	r3, r2, [r1]
 8007908:	613b      	str	r3, [r7, #16]
   return(result);
 800790a:	693b      	ldr	r3, [r7, #16]
 800790c:	2b00      	cmp	r3, #0
 800790e:	d1e5      	bne.n	80078dc <UART_EndRxTransfer+0x78>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8007910:	687b      	ldr	r3, [r7, #4]
 8007912:	2220      	movs	r2, #32
 8007914:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007918:	687b      	ldr	r3, [r7, #4]
 800791a:	2200      	movs	r2, #0
 800791c:	631a      	str	r2, [r3, #48]	@ 0x30
}
 800791e:	bf00      	nop
 8007920:	3754      	adds	r7, #84	@ 0x54
 8007922:	46bd      	mov	sp, r7
 8007924:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007928:	4770      	bx	lr

0800792a <UART_DMAAbortOnError>:
  * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 800792a:	b580      	push	{r7, lr}
 800792c:	b084      	sub	sp, #16
 800792e:	af00      	add	r7, sp, #0
 8007930:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007936:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0x00U;
 8007938:	68fb      	ldr	r3, [r7, #12]
 800793a:	2200      	movs	r2, #0
 800793c:	85da      	strh	r2, [r3, #46]	@ 0x2e
  huart->TxXferCount = 0x00U;
 800793e:	68fb      	ldr	r3, [r7, #12]
 8007940:	2200      	movs	r2, #0
 8007942:	84da      	strh	r2, [r3, #38]	@ 0x26
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8007944:	68f8      	ldr	r0, [r7, #12]
 8007946:	f7ff fd3d 	bl	80073c4 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 800794a:	bf00      	nop
 800794c:	3710      	adds	r7, #16
 800794e:	46bd      	mov	sp, r7
 8007950:	bd80      	pop	{r7, pc}

08007952 <UART_Transmit_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
 8007952:	b480      	push	{r7}
 8007954:	b085      	sub	sp, #20
 8007956:	af00      	add	r7, sp, #0
 8007958:	6078      	str	r0, [r7, #4]
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 800795a:	687b      	ldr	r3, [r7, #4]
 800795c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007960:	b2db      	uxtb	r3, r3
 8007962:	2b21      	cmp	r3, #33	@ 0x21
 8007964:	d13e      	bne.n	80079e4 <UART_Transmit_IT+0x92>
  {
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007966:	687b      	ldr	r3, [r7, #4]
 8007968:	689b      	ldr	r3, [r3, #8]
 800796a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800796e:	d114      	bne.n	800799a <UART_Transmit_IT+0x48>
 8007970:	687b      	ldr	r3, [r7, #4]
 8007972:	691b      	ldr	r3, [r3, #16]
 8007974:	2b00      	cmp	r3, #0
 8007976:	d110      	bne.n	800799a <UART_Transmit_IT+0x48>
    {
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 8007978:	687b      	ldr	r3, [r7, #4]
 800797a:	6a1b      	ldr	r3, [r3, #32]
 800797c:	60fb      	str	r3, [r7, #12]
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 800797e:	68fb      	ldr	r3, [r7, #12]
 8007980:	881b      	ldrh	r3, [r3, #0]
 8007982:	461a      	mov	r2, r3
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	681b      	ldr	r3, [r3, #0]
 8007988:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800798c:	605a      	str	r2, [r3, #4]
      huart->pTxBuffPtr += 2U;
 800798e:	687b      	ldr	r3, [r7, #4]
 8007990:	6a1b      	ldr	r3, [r3, #32]
 8007992:	1c9a      	adds	r2, r3, #2
 8007994:	687b      	ldr	r3, [r7, #4]
 8007996:	621a      	str	r2, [r3, #32]
 8007998:	e008      	b.n	80079ac <UART_Transmit_IT+0x5a>
    }
    else
    {
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	6a1b      	ldr	r3, [r3, #32]
 800799e:	1c59      	adds	r1, r3, #1
 80079a0:	687a      	ldr	r2, [r7, #4]
 80079a2:	6211      	str	r1, [r2, #32]
 80079a4:	781a      	ldrb	r2, [r3, #0]
 80079a6:	687b      	ldr	r3, [r7, #4]
 80079a8:	681b      	ldr	r3, [r3, #0]
 80079aa:	605a      	str	r2, [r3, #4]
    }

    if (--huart->TxXferCount == 0U)
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80079b0:	b29b      	uxth	r3, r3
 80079b2:	3b01      	subs	r3, #1
 80079b4:	b29b      	uxth	r3, r3
 80079b6:	687a      	ldr	r2, [r7, #4]
 80079b8:	4619      	mov	r1, r3
 80079ba:	84d1      	strh	r1, [r2, #38]	@ 0x26
 80079bc:	2b00      	cmp	r3, #0
 80079be:	d10f      	bne.n	80079e0 <UART_Transmit_IT+0x8e>
    {
      /* Disable the UART Transmit Data Register Empty Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 80079c0:	687b      	ldr	r3, [r7, #4]
 80079c2:	681b      	ldr	r3, [r3, #0]
 80079c4:	68da      	ldr	r2, [r3, #12]
 80079c6:	687b      	ldr	r3, [r7, #4]
 80079c8:	681b      	ldr	r3, [r3, #0]
 80079ca:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80079ce:	60da      	str	r2, [r3, #12]

      /* Enable the UART Transmit Complete Interrupt */
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	681b      	ldr	r3, [r3, #0]
 80079d4:	68da      	ldr	r2, [r3, #12]
 80079d6:	687b      	ldr	r3, [r7, #4]
 80079d8:	681b      	ldr	r3, [r3, #0]
 80079da:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80079de:	60da      	str	r2, [r3, #12]
    }
    return HAL_OK;
 80079e0:	2300      	movs	r3, #0
 80079e2:	e000      	b.n	80079e6 <UART_Transmit_IT+0x94>
  }
  else
  {
    return HAL_BUSY;
 80079e4:	2302      	movs	r3, #2
  }
}
 80079e6:	4618      	mov	r0, r3
 80079e8:	3714      	adds	r7, #20
 80079ea:	46bd      	mov	sp, r7
 80079ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079f0:	4770      	bx	lr

080079f2 <UART_EndTransmit_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 80079f2:	b580      	push	{r7, lr}
 80079f4:	b082      	sub	sp, #8
 80079f6:	af00      	add	r7, sp, #0
 80079f8:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 80079fa:	687b      	ldr	r3, [r7, #4]
 80079fc:	681b      	ldr	r3, [r3, #0]
 80079fe:	68da      	ldr	r2, [r3, #12]
 8007a00:	687b      	ldr	r3, [r7, #4]
 8007a02:	681b      	ldr	r3, [r3, #0]
 8007a04:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007a08:	60da      	str	r2, [r3, #12]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	2220      	movs	r2, #32
 8007a0e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 8007a12:	6878      	ldr	r0, [r7, #4]
 8007a14:	f7ff fcae 	bl	8007374 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */

  return HAL_OK;
 8007a18:	2300      	movs	r3, #0
}
 8007a1a:	4618      	mov	r0, r3
 8007a1c:	3708      	adds	r7, #8
 8007a1e:	46bd      	mov	sp, r7
 8007a20:	bd80      	pop	{r7, pc}

08007a22 <UART_Receive_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
{
 8007a22:	b580      	push	{r7, lr}
 8007a24:	b08c      	sub	sp, #48	@ 0x30
 8007a26:	af00      	add	r7, sp, #0
 8007a28:	6078      	str	r0, [r7, #4]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8007a2a:	687b      	ldr	r3, [r7, #4]
 8007a2c:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8007a30:	b2db      	uxtb	r3, r3
 8007a32:	2b22      	cmp	r3, #34	@ 0x22
 8007a34:	f040 80ae 	bne.w	8007b94 <UART_Receive_IT+0x172>
  {
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007a38:	687b      	ldr	r3, [r7, #4]
 8007a3a:	689b      	ldr	r3, [r3, #8]
 8007a3c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007a40:	d117      	bne.n	8007a72 <UART_Receive_IT+0x50>
 8007a42:	687b      	ldr	r3, [r7, #4]
 8007a44:	691b      	ldr	r3, [r3, #16]
 8007a46:	2b00      	cmp	r3, #0
 8007a48:	d113      	bne.n	8007a72 <UART_Receive_IT+0x50>
    {
      pdata8bits  = NULL;
 8007a4a:	2300      	movs	r3, #0
 8007a4c:	62fb      	str	r3, [r7, #44]	@ 0x2c
      pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007a52:	62bb      	str	r3, [r7, #40]	@ 0x28
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	681b      	ldr	r3, [r3, #0]
 8007a58:	685b      	ldr	r3, [r3, #4]
 8007a5a:	b29b      	uxth	r3, r3
 8007a5c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007a60:	b29a      	uxth	r2, r3
 8007a62:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007a64:	801a      	strh	r2, [r3, #0]
      huart->pRxBuffPtr += 2U;
 8007a66:	687b      	ldr	r3, [r7, #4]
 8007a68:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007a6a:	1c9a      	adds	r2, r3, #2
 8007a6c:	687b      	ldr	r3, [r7, #4]
 8007a6e:	629a      	str	r2, [r3, #40]	@ 0x28
 8007a70:	e026      	b.n	8007ac0 <UART_Receive_IT+0x9e>
    }
    else
    {
      pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 8007a72:	687b      	ldr	r3, [r7, #4]
 8007a74:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007a76:	62fb      	str	r3, [r7, #44]	@ 0x2c
      pdata16bits  = NULL;
 8007a78:	2300      	movs	r3, #0
 8007a7a:	62bb      	str	r3, [r7, #40]	@ 0x28

      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8007a7c:	687b      	ldr	r3, [r7, #4]
 8007a7e:	689b      	ldr	r3, [r3, #8]
 8007a80:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007a84:	d007      	beq.n	8007a96 <UART_Receive_IT+0x74>
 8007a86:	687b      	ldr	r3, [r7, #4]
 8007a88:	689b      	ldr	r3, [r3, #8]
 8007a8a:	2b00      	cmp	r3, #0
 8007a8c:	d10a      	bne.n	8007aa4 <UART_Receive_IT+0x82>
 8007a8e:	687b      	ldr	r3, [r7, #4]
 8007a90:	691b      	ldr	r3, [r3, #16]
 8007a92:	2b00      	cmp	r3, #0
 8007a94:	d106      	bne.n	8007aa4 <UART_Receive_IT+0x82>
      {
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8007a96:	687b      	ldr	r3, [r7, #4]
 8007a98:	681b      	ldr	r3, [r3, #0]
 8007a9a:	685b      	ldr	r3, [r3, #4]
 8007a9c:	b2da      	uxtb	r2, r3
 8007a9e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007aa0:	701a      	strb	r2, [r3, #0]
 8007aa2:	e008      	b.n	8007ab6 <UART_Receive_IT+0x94>
      }
      else
      {
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8007aa4:	687b      	ldr	r3, [r7, #4]
 8007aa6:	681b      	ldr	r3, [r3, #0]
 8007aa8:	685b      	ldr	r3, [r3, #4]
 8007aaa:	b2db      	uxtb	r3, r3
 8007aac:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8007ab0:	b2da      	uxtb	r2, r3
 8007ab2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007ab4:	701a      	strb	r2, [r3, #0]
      }
      huart->pRxBuffPtr += 1U;
 8007ab6:	687b      	ldr	r3, [r7, #4]
 8007ab8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007aba:	1c5a      	adds	r2, r3, #1
 8007abc:	687b      	ldr	r3, [r7, #4]
 8007abe:	629a      	str	r2, [r3, #40]	@ 0x28
    }

    if (--huart->RxXferCount == 0U)
 8007ac0:	687b      	ldr	r3, [r7, #4]
 8007ac2:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8007ac4:	b29b      	uxth	r3, r3
 8007ac6:	3b01      	subs	r3, #1
 8007ac8:	b29b      	uxth	r3, r3
 8007aca:	687a      	ldr	r2, [r7, #4]
 8007acc:	4619      	mov	r1, r3
 8007ace:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8007ad0:	2b00      	cmp	r3, #0
 8007ad2:	d15d      	bne.n	8007b90 <UART_Receive_IT+0x16e>
    {
      /* Disable the UART Data Register not empty Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8007ad4:	687b      	ldr	r3, [r7, #4]
 8007ad6:	681b      	ldr	r3, [r3, #0]
 8007ad8:	68da      	ldr	r2, [r3, #12]
 8007ada:	687b      	ldr	r3, [r7, #4]
 8007adc:	681b      	ldr	r3, [r3, #0]
 8007ade:	f022 0220 	bic.w	r2, r2, #32
 8007ae2:	60da      	str	r2, [r3, #12]

      /* Disable the UART Parity Error Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8007ae4:	687b      	ldr	r3, [r7, #4]
 8007ae6:	681b      	ldr	r3, [r3, #0]
 8007ae8:	68da      	ldr	r2, [r3, #12]
 8007aea:	687b      	ldr	r3, [r7, #4]
 8007aec:	681b      	ldr	r3, [r3, #0]
 8007aee:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8007af2:	60da      	str	r2, [r3, #12]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8007af4:	687b      	ldr	r3, [r7, #4]
 8007af6:	681b      	ldr	r3, [r3, #0]
 8007af8:	695a      	ldr	r2, [r3, #20]
 8007afa:	687b      	ldr	r3, [r7, #4]
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	f022 0201 	bic.w	r2, r2, #1
 8007b02:	615a      	str	r2, [r3, #20]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8007b04:	687b      	ldr	r3, [r7, #4]
 8007b06:	2220      	movs	r2, #32
 8007b08:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	2200      	movs	r2, #0
 8007b10:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8007b12:	687b      	ldr	r3, [r7, #4]
 8007b14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007b16:	2b01      	cmp	r3, #1
 8007b18:	d135      	bne.n	8007b86 <UART_Receive_IT+0x164>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007b1a:	687b      	ldr	r3, [r7, #4]
 8007b1c:	2200      	movs	r2, #0
 8007b1e:	631a      	str	r2, [r3, #48]	@ 0x30

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8007b20:	687b      	ldr	r3, [r7, #4]
 8007b22:	681b      	ldr	r3, [r3, #0]
 8007b24:	330c      	adds	r3, #12
 8007b26:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007b28:	697b      	ldr	r3, [r7, #20]
 8007b2a:	e853 3f00 	ldrex	r3, [r3]
 8007b2e:	613b      	str	r3, [r7, #16]
   return(result);
 8007b30:	693b      	ldr	r3, [r7, #16]
 8007b32:	f023 0310 	bic.w	r3, r3, #16
 8007b36:	627b      	str	r3, [r7, #36]	@ 0x24
 8007b38:	687b      	ldr	r3, [r7, #4]
 8007b3a:	681b      	ldr	r3, [r3, #0]
 8007b3c:	330c      	adds	r3, #12
 8007b3e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8007b40:	623a      	str	r2, [r7, #32]
 8007b42:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007b44:	69f9      	ldr	r1, [r7, #28]
 8007b46:	6a3a      	ldr	r2, [r7, #32]
 8007b48:	e841 2300 	strex	r3, r2, [r1]
 8007b4c:	61bb      	str	r3, [r7, #24]
   return(result);
 8007b4e:	69bb      	ldr	r3, [r7, #24]
 8007b50:	2b00      	cmp	r3, #0
 8007b52:	d1e5      	bne.n	8007b20 <UART_Receive_IT+0xfe>

        /* Check if IDLE flag is set */
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 8007b54:	687b      	ldr	r3, [r7, #4]
 8007b56:	681b      	ldr	r3, [r3, #0]
 8007b58:	681b      	ldr	r3, [r3, #0]
 8007b5a:	f003 0310 	and.w	r3, r3, #16
 8007b5e:	2b10      	cmp	r3, #16
 8007b60:	d10a      	bne.n	8007b78 <UART_Receive_IT+0x156>
        {
          /* Clear IDLE flag in ISR */
          __HAL_UART_CLEAR_IDLEFLAG(huart);
 8007b62:	2300      	movs	r3, #0
 8007b64:	60fb      	str	r3, [r7, #12]
 8007b66:	687b      	ldr	r3, [r7, #4]
 8007b68:	681b      	ldr	r3, [r3, #0]
 8007b6a:	681b      	ldr	r3, [r3, #0]
 8007b6c:	60fb      	str	r3, [r7, #12]
 8007b6e:	687b      	ldr	r3, [r7, #4]
 8007b70:	681b      	ldr	r3, [r3, #0]
 8007b72:	685b      	ldr	r3, [r3, #4]
 8007b74:	60fb      	str	r3, [r7, #12]
 8007b76:	68fb      	ldr	r3, [r7, #12]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8007b78:	687b      	ldr	r3, [r7, #4]
 8007b7a:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8007b7c:	4619      	mov	r1, r3
 8007b7e:	6878      	ldr	r0, [r7, #4]
 8007b80:	f7f9 faf6 	bl	8001170 <HAL_UARTEx_RxEventCallback>
 8007b84:	e002      	b.n	8007b8c <UART_Receive_IT+0x16a>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxCpltCallback(huart);
#else
        /*Call legacy weak Rx complete callback*/
        HAL_UART_RxCpltCallback(huart);
 8007b86:	6878      	ldr	r0, [r7, #4]
 8007b88:	f7ff fc08 	bl	800739c <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }

      return HAL_OK;
 8007b8c:	2300      	movs	r3, #0
 8007b8e:	e002      	b.n	8007b96 <UART_Receive_IT+0x174>
    }
    return HAL_OK;
 8007b90:	2300      	movs	r3, #0
 8007b92:	e000      	b.n	8007b96 <UART_Receive_IT+0x174>
  }
  else
  {
    return HAL_BUSY;
 8007b94:	2302      	movs	r3, #2
  }
}
 8007b96:	4618      	mov	r0, r3
 8007b98:	3730      	adds	r7, #48	@ 0x30
 8007b9a:	46bd      	mov	sp, r7
 8007b9c:	bd80      	pop	{r7, pc}
	...

08007ba0 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8007ba0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007ba4:	b0c0      	sub	sp, #256	@ 0x100
 8007ba6:	af00      	add	r7, sp, #0
 8007ba8:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8007bac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007bb0:	681b      	ldr	r3, [r3, #0]
 8007bb2:	691b      	ldr	r3, [r3, #16]
 8007bb4:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8007bb8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007bbc:	68d9      	ldr	r1, [r3, #12]
 8007bbe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007bc2:	681a      	ldr	r2, [r3, #0]
 8007bc4:	ea40 0301 	orr.w	r3, r0, r1
 8007bc8:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8007bca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007bce:	689a      	ldr	r2, [r3, #8]
 8007bd0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007bd4:	691b      	ldr	r3, [r3, #16]
 8007bd6:	431a      	orrs	r2, r3
 8007bd8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007bdc:	695b      	ldr	r3, [r3, #20]
 8007bde:	431a      	orrs	r2, r3
 8007be0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007be4:	69db      	ldr	r3, [r3, #28]
 8007be6:	4313      	orrs	r3, r2
 8007be8:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
  MODIFY_REG(huart->Instance->CR1,
 8007bec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007bf0:	681b      	ldr	r3, [r3, #0]
 8007bf2:	68db      	ldr	r3, [r3, #12]
 8007bf4:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8007bf8:	f021 010c 	bic.w	r1, r1, #12
 8007bfc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007c00:	681a      	ldr	r2, [r3, #0]
 8007c02:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8007c06:	430b      	orrs	r3, r1
 8007c08:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8007c0a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	695b      	ldr	r3, [r3, #20]
 8007c12:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8007c16:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007c1a:	6999      	ldr	r1, [r3, #24]
 8007c1c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007c20:	681a      	ldr	r2, [r3, #0]
 8007c22:	ea40 0301 	orr.w	r3, r0, r1
 8007c26:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8007c28:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007c2c:	681a      	ldr	r2, [r3, #0]
 8007c2e:	4b8f      	ldr	r3, [pc, #572]	@ (8007e6c <UART_SetConfig+0x2cc>)
 8007c30:	429a      	cmp	r2, r3
 8007c32:	d005      	beq.n	8007c40 <UART_SetConfig+0xa0>
 8007c34:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007c38:	681a      	ldr	r2, [r3, #0]
 8007c3a:	4b8d      	ldr	r3, [pc, #564]	@ (8007e70 <UART_SetConfig+0x2d0>)
 8007c3c:	429a      	cmp	r2, r3
 8007c3e:	d104      	bne.n	8007c4a <UART_SetConfig+0xaa>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8007c40:	f7fc fd6e 	bl	8004720 <HAL_RCC_GetPCLK2Freq>
 8007c44:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8007c48:	e003      	b.n	8007c52 <UART_SetConfig+0xb2>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8007c4a:	f7fc fd55 	bl	80046f8 <HAL_RCC_GetPCLK1Freq>
 8007c4e:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007c52:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007c56:	69db      	ldr	r3, [r3, #28]
 8007c58:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007c5c:	f040 810c 	bne.w	8007e78 <UART_SetConfig+0x2d8>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8007c60:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007c64:	2200      	movs	r2, #0
 8007c66:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8007c6a:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8007c6e:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8007c72:	4622      	mov	r2, r4
 8007c74:	462b      	mov	r3, r5
 8007c76:	1891      	adds	r1, r2, r2
 8007c78:	65b9      	str	r1, [r7, #88]	@ 0x58
 8007c7a:	415b      	adcs	r3, r3
 8007c7c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8007c7e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8007c82:	4621      	mov	r1, r4
 8007c84:	eb12 0801 	adds.w	r8, r2, r1
 8007c88:	4629      	mov	r1, r5
 8007c8a:	eb43 0901 	adc.w	r9, r3, r1
 8007c8e:	f04f 0200 	mov.w	r2, #0
 8007c92:	f04f 0300 	mov.w	r3, #0
 8007c96:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8007c9a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8007c9e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8007ca2:	4690      	mov	r8, r2
 8007ca4:	4699      	mov	r9, r3
 8007ca6:	4623      	mov	r3, r4
 8007ca8:	eb18 0303 	adds.w	r3, r8, r3
 8007cac:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8007cb0:	462b      	mov	r3, r5
 8007cb2:	eb49 0303 	adc.w	r3, r9, r3
 8007cb6:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8007cba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007cbe:	685b      	ldr	r3, [r3, #4]
 8007cc0:	2200      	movs	r2, #0
 8007cc2:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8007cc6:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8007cca:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8007cce:	460b      	mov	r3, r1
 8007cd0:	18db      	adds	r3, r3, r3
 8007cd2:	653b      	str	r3, [r7, #80]	@ 0x50
 8007cd4:	4613      	mov	r3, r2
 8007cd6:	eb42 0303 	adc.w	r3, r2, r3
 8007cda:	657b      	str	r3, [r7, #84]	@ 0x54
 8007cdc:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8007ce0:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007ce4:	f7f8 ffd0 	bl	8000c88 <__aeabi_uldivmod>
 8007ce8:	4602      	mov	r2, r0
 8007cea:	460b      	mov	r3, r1
 8007cec:	4b61      	ldr	r3, [pc, #388]	@ (8007e74 <UART_SetConfig+0x2d4>)
 8007cee:	fba3 2302 	umull	r2, r3, r3, r2
 8007cf2:	095b      	lsrs	r3, r3, #5
 8007cf4:	011c      	lsls	r4, r3, #4
 8007cf6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007cfa:	2200      	movs	r2, #0
 8007cfc:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8007d00:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8007d04:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8007d08:	4642      	mov	r2, r8
 8007d0a:	464b      	mov	r3, r9
 8007d0c:	1891      	adds	r1, r2, r2
 8007d0e:	64b9      	str	r1, [r7, #72]	@ 0x48
 8007d10:	415b      	adcs	r3, r3
 8007d12:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007d14:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007d18:	4641      	mov	r1, r8
 8007d1a:	eb12 0a01 	adds.w	sl, r2, r1
 8007d1e:	4649      	mov	r1, r9
 8007d20:	eb43 0b01 	adc.w	fp, r3, r1
 8007d24:	f04f 0200 	mov.w	r2, #0
 8007d28:	f04f 0300 	mov.w	r3, #0
 8007d2c:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8007d30:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8007d34:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8007d38:	4692      	mov	sl, r2
 8007d3a:	469b      	mov	fp, r3
 8007d3c:	4643      	mov	r3, r8
 8007d3e:	eb1a 0303 	adds.w	r3, sl, r3
 8007d42:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8007d46:	464b      	mov	r3, r9
 8007d48:	eb4b 0303 	adc.w	r3, fp, r3
 8007d4c:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8007d50:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007d54:	685b      	ldr	r3, [r3, #4]
 8007d56:	2200      	movs	r2, #0
 8007d58:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8007d5c:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8007d60:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8007d64:	460b      	mov	r3, r1
 8007d66:	18db      	adds	r3, r3, r3
 8007d68:	643b      	str	r3, [r7, #64]	@ 0x40
 8007d6a:	4613      	mov	r3, r2
 8007d6c:	eb42 0303 	adc.w	r3, r2, r3
 8007d70:	647b      	str	r3, [r7, #68]	@ 0x44
 8007d72:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8007d76:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8007d7a:	f7f8 ff85 	bl	8000c88 <__aeabi_uldivmod>
 8007d7e:	4602      	mov	r2, r0
 8007d80:	460b      	mov	r3, r1
 8007d82:	4611      	mov	r1, r2
 8007d84:	4b3b      	ldr	r3, [pc, #236]	@ (8007e74 <UART_SetConfig+0x2d4>)
 8007d86:	fba3 2301 	umull	r2, r3, r3, r1
 8007d8a:	095b      	lsrs	r3, r3, #5
 8007d8c:	2264      	movs	r2, #100	@ 0x64
 8007d8e:	fb02 f303 	mul.w	r3, r2, r3
 8007d92:	1acb      	subs	r3, r1, r3
 8007d94:	00db      	lsls	r3, r3, #3
 8007d96:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8007d9a:	4b36      	ldr	r3, [pc, #216]	@ (8007e74 <UART_SetConfig+0x2d4>)
 8007d9c:	fba3 2302 	umull	r2, r3, r3, r2
 8007da0:	095b      	lsrs	r3, r3, #5
 8007da2:	005b      	lsls	r3, r3, #1
 8007da4:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8007da8:	441c      	add	r4, r3
 8007daa:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007dae:	2200      	movs	r2, #0
 8007db0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8007db4:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8007db8:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8007dbc:	4642      	mov	r2, r8
 8007dbe:	464b      	mov	r3, r9
 8007dc0:	1891      	adds	r1, r2, r2
 8007dc2:	63b9      	str	r1, [r7, #56]	@ 0x38
 8007dc4:	415b      	adcs	r3, r3
 8007dc6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007dc8:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8007dcc:	4641      	mov	r1, r8
 8007dce:	1851      	adds	r1, r2, r1
 8007dd0:	6339      	str	r1, [r7, #48]	@ 0x30
 8007dd2:	4649      	mov	r1, r9
 8007dd4:	414b      	adcs	r3, r1
 8007dd6:	637b      	str	r3, [r7, #52]	@ 0x34
 8007dd8:	f04f 0200 	mov.w	r2, #0
 8007ddc:	f04f 0300 	mov.w	r3, #0
 8007de0:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8007de4:	4659      	mov	r1, fp
 8007de6:	00cb      	lsls	r3, r1, #3
 8007de8:	4651      	mov	r1, sl
 8007dea:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007dee:	4651      	mov	r1, sl
 8007df0:	00ca      	lsls	r2, r1, #3
 8007df2:	4610      	mov	r0, r2
 8007df4:	4619      	mov	r1, r3
 8007df6:	4603      	mov	r3, r0
 8007df8:	4642      	mov	r2, r8
 8007dfa:	189b      	adds	r3, r3, r2
 8007dfc:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8007e00:	464b      	mov	r3, r9
 8007e02:	460a      	mov	r2, r1
 8007e04:	eb42 0303 	adc.w	r3, r2, r3
 8007e08:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8007e0c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007e10:	685b      	ldr	r3, [r3, #4]
 8007e12:	2200      	movs	r2, #0
 8007e14:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8007e18:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8007e1c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8007e20:	460b      	mov	r3, r1
 8007e22:	18db      	adds	r3, r3, r3
 8007e24:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007e26:	4613      	mov	r3, r2
 8007e28:	eb42 0303 	adc.w	r3, r2, r3
 8007e2c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007e2e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8007e32:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8007e36:	f7f8 ff27 	bl	8000c88 <__aeabi_uldivmod>
 8007e3a:	4602      	mov	r2, r0
 8007e3c:	460b      	mov	r3, r1
 8007e3e:	4b0d      	ldr	r3, [pc, #52]	@ (8007e74 <UART_SetConfig+0x2d4>)
 8007e40:	fba3 1302 	umull	r1, r3, r3, r2
 8007e44:	095b      	lsrs	r3, r3, #5
 8007e46:	2164      	movs	r1, #100	@ 0x64
 8007e48:	fb01 f303 	mul.w	r3, r1, r3
 8007e4c:	1ad3      	subs	r3, r2, r3
 8007e4e:	00db      	lsls	r3, r3, #3
 8007e50:	3332      	adds	r3, #50	@ 0x32
 8007e52:	4a08      	ldr	r2, [pc, #32]	@ (8007e74 <UART_SetConfig+0x2d4>)
 8007e54:	fba2 2303 	umull	r2, r3, r2, r3
 8007e58:	095b      	lsrs	r3, r3, #5
 8007e5a:	f003 0207 	and.w	r2, r3, #7
 8007e5e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007e62:	681b      	ldr	r3, [r3, #0]
 8007e64:	4422      	add	r2, r4
 8007e66:	609a      	str	r2, [r3, #8]
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
  }
}
 8007e68:	e106      	b.n	8008078 <UART_SetConfig+0x4d8>
 8007e6a:	bf00      	nop
 8007e6c:	40011000 	.word	0x40011000
 8007e70:	40011400 	.word	0x40011400
 8007e74:	51eb851f 	.word	0x51eb851f
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8007e78:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007e7c:	2200      	movs	r2, #0
 8007e7e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8007e82:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8007e86:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8007e8a:	4642      	mov	r2, r8
 8007e8c:	464b      	mov	r3, r9
 8007e8e:	1891      	adds	r1, r2, r2
 8007e90:	6239      	str	r1, [r7, #32]
 8007e92:	415b      	adcs	r3, r3
 8007e94:	627b      	str	r3, [r7, #36]	@ 0x24
 8007e96:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8007e9a:	4641      	mov	r1, r8
 8007e9c:	1854      	adds	r4, r2, r1
 8007e9e:	4649      	mov	r1, r9
 8007ea0:	eb43 0501 	adc.w	r5, r3, r1
 8007ea4:	f04f 0200 	mov.w	r2, #0
 8007ea8:	f04f 0300 	mov.w	r3, #0
 8007eac:	00eb      	lsls	r3, r5, #3
 8007eae:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8007eb2:	00e2      	lsls	r2, r4, #3
 8007eb4:	4614      	mov	r4, r2
 8007eb6:	461d      	mov	r5, r3
 8007eb8:	4643      	mov	r3, r8
 8007eba:	18e3      	adds	r3, r4, r3
 8007ebc:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8007ec0:	464b      	mov	r3, r9
 8007ec2:	eb45 0303 	adc.w	r3, r5, r3
 8007ec6:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8007eca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007ece:	685b      	ldr	r3, [r3, #4]
 8007ed0:	2200      	movs	r2, #0
 8007ed2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8007ed6:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8007eda:	f04f 0200 	mov.w	r2, #0
 8007ede:	f04f 0300 	mov.w	r3, #0
 8007ee2:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8007ee6:	4629      	mov	r1, r5
 8007ee8:	008b      	lsls	r3, r1, #2
 8007eea:	4621      	mov	r1, r4
 8007eec:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007ef0:	4621      	mov	r1, r4
 8007ef2:	008a      	lsls	r2, r1, #2
 8007ef4:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8007ef8:	f7f8 fec6 	bl	8000c88 <__aeabi_uldivmod>
 8007efc:	4602      	mov	r2, r0
 8007efe:	460b      	mov	r3, r1
 8007f00:	4b60      	ldr	r3, [pc, #384]	@ (8008084 <UART_SetConfig+0x4e4>)
 8007f02:	fba3 2302 	umull	r2, r3, r3, r2
 8007f06:	095b      	lsrs	r3, r3, #5
 8007f08:	011c      	lsls	r4, r3, #4
 8007f0a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007f0e:	2200      	movs	r2, #0
 8007f10:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8007f14:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8007f18:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8007f1c:	4642      	mov	r2, r8
 8007f1e:	464b      	mov	r3, r9
 8007f20:	1891      	adds	r1, r2, r2
 8007f22:	61b9      	str	r1, [r7, #24]
 8007f24:	415b      	adcs	r3, r3
 8007f26:	61fb      	str	r3, [r7, #28]
 8007f28:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007f2c:	4641      	mov	r1, r8
 8007f2e:	1851      	adds	r1, r2, r1
 8007f30:	6139      	str	r1, [r7, #16]
 8007f32:	4649      	mov	r1, r9
 8007f34:	414b      	adcs	r3, r1
 8007f36:	617b      	str	r3, [r7, #20]
 8007f38:	f04f 0200 	mov.w	r2, #0
 8007f3c:	f04f 0300 	mov.w	r3, #0
 8007f40:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8007f44:	4659      	mov	r1, fp
 8007f46:	00cb      	lsls	r3, r1, #3
 8007f48:	4651      	mov	r1, sl
 8007f4a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007f4e:	4651      	mov	r1, sl
 8007f50:	00ca      	lsls	r2, r1, #3
 8007f52:	4610      	mov	r0, r2
 8007f54:	4619      	mov	r1, r3
 8007f56:	4603      	mov	r3, r0
 8007f58:	4642      	mov	r2, r8
 8007f5a:	189b      	adds	r3, r3, r2
 8007f5c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8007f60:	464b      	mov	r3, r9
 8007f62:	460a      	mov	r2, r1
 8007f64:	eb42 0303 	adc.w	r3, r2, r3
 8007f68:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8007f6c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007f70:	685b      	ldr	r3, [r3, #4]
 8007f72:	2200      	movs	r2, #0
 8007f74:	67bb      	str	r3, [r7, #120]	@ 0x78
 8007f76:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8007f78:	f04f 0200 	mov.w	r2, #0
 8007f7c:	f04f 0300 	mov.w	r3, #0
 8007f80:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8007f84:	4649      	mov	r1, r9
 8007f86:	008b      	lsls	r3, r1, #2
 8007f88:	4641      	mov	r1, r8
 8007f8a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007f8e:	4641      	mov	r1, r8
 8007f90:	008a      	lsls	r2, r1, #2
 8007f92:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8007f96:	f7f8 fe77 	bl	8000c88 <__aeabi_uldivmod>
 8007f9a:	4602      	mov	r2, r0
 8007f9c:	460b      	mov	r3, r1
 8007f9e:	4611      	mov	r1, r2
 8007fa0:	4b38      	ldr	r3, [pc, #224]	@ (8008084 <UART_SetConfig+0x4e4>)
 8007fa2:	fba3 2301 	umull	r2, r3, r3, r1
 8007fa6:	095b      	lsrs	r3, r3, #5
 8007fa8:	2264      	movs	r2, #100	@ 0x64
 8007faa:	fb02 f303 	mul.w	r3, r2, r3
 8007fae:	1acb      	subs	r3, r1, r3
 8007fb0:	011b      	lsls	r3, r3, #4
 8007fb2:	3332      	adds	r3, #50	@ 0x32
 8007fb4:	4a33      	ldr	r2, [pc, #204]	@ (8008084 <UART_SetConfig+0x4e4>)
 8007fb6:	fba2 2303 	umull	r2, r3, r2, r3
 8007fba:	095b      	lsrs	r3, r3, #5
 8007fbc:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8007fc0:	441c      	add	r4, r3
 8007fc2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007fc6:	2200      	movs	r2, #0
 8007fc8:	673b      	str	r3, [r7, #112]	@ 0x70
 8007fca:	677a      	str	r2, [r7, #116]	@ 0x74
 8007fcc:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8007fd0:	4642      	mov	r2, r8
 8007fd2:	464b      	mov	r3, r9
 8007fd4:	1891      	adds	r1, r2, r2
 8007fd6:	60b9      	str	r1, [r7, #8]
 8007fd8:	415b      	adcs	r3, r3
 8007fda:	60fb      	str	r3, [r7, #12]
 8007fdc:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007fe0:	4641      	mov	r1, r8
 8007fe2:	1851      	adds	r1, r2, r1
 8007fe4:	6039      	str	r1, [r7, #0]
 8007fe6:	4649      	mov	r1, r9
 8007fe8:	414b      	adcs	r3, r1
 8007fea:	607b      	str	r3, [r7, #4]
 8007fec:	f04f 0200 	mov.w	r2, #0
 8007ff0:	f04f 0300 	mov.w	r3, #0
 8007ff4:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8007ff8:	4659      	mov	r1, fp
 8007ffa:	00cb      	lsls	r3, r1, #3
 8007ffc:	4651      	mov	r1, sl
 8007ffe:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008002:	4651      	mov	r1, sl
 8008004:	00ca      	lsls	r2, r1, #3
 8008006:	4610      	mov	r0, r2
 8008008:	4619      	mov	r1, r3
 800800a:	4603      	mov	r3, r0
 800800c:	4642      	mov	r2, r8
 800800e:	189b      	adds	r3, r3, r2
 8008010:	66bb      	str	r3, [r7, #104]	@ 0x68
 8008012:	464b      	mov	r3, r9
 8008014:	460a      	mov	r2, r1
 8008016:	eb42 0303 	adc.w	r3, r2, r3
 800801a:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800801c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008020:	685b      	ldr	r3, [r3, #4]
 8008022:	2200      	movs	r2, #0
 8008024:	663b      	str	r3, [r7, #96]	@ 0x60
 8008026:	667a      	str	r2, [r7, #100]	@ 0x64
 8008028:	f04f 0200 	mov.w	r2, #0
 800802c:	f04f 0300 	mov.w	r3, #0
 8008030:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8008034:	4649      	mov	r1, r9
 8008036:	008b      	lsls	r3, r1, #2
 8008038:	4641      	mov	r1, r8
 800803a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800803e:	4641      	mov	r1, r8
 8008040:	008a      	lsls	r2, r1, #2
 8008042:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8008046:	f7f8 fe1f 	bl	8000c88 <__aeabi_uldivmod>
 800804a:	4602      	mov	r2, r0
 800804c:	460b      	mov	r3, r1
 800804e:	4b0d      	ldr	r3, [pc, #52]	@ (8008084 <UART_SetConfig+0x4e4>)
 8008050:	fba3 1302 	umull	r1, r3, r3, r2
 8008054:	095b      	lsrs	r3, r3, #5
 8008056:	2164      	movs	r1, #100	@ 0x64
 8008058:	fb01 f303 	mul.w	r3, r1, r3
 800805c:	1ad3      	subs	r3, r2, r3
 800805e:	011b      	lsls	r3, r3, #4
 8008060:	3332      	adds	r3, #50	@ 0x32
 8008062:	4a08      	ldr	r2, [pc, #32]	@ (8008084 <UART_SetConfig+0x4e4>)
 8008064:	fba2 2303 	umull	r2, r3, r2, r3
 8008068:	095b      	lsrs	r3, r3, #5
 800806a:	f003 020f 	and.w	r2, r3, #15
 800806e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008072:	681b      	ldr	r3, [r3, #0]
 8008074:	4422      	add	r2, r4
 8008076:	609a      	str	r2, [r3, #8]
}
 8008078:	bf00      	nop
 800807a:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 800807e:	46bd      	mov	sp, r7
 8008080:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008084:	51eb851f 	.word	0x51eb851f

08008088 <ATC_Malloc>:
void              ATC_TempCallback(const char *str);

/***********************************************************************************************************/

void* ATC_Malloc(size_t size)
{
 8008088:	b580      	push	{r7, lr}
 800808a:	b084      	sub	sp, #16
 800808c:	af00      	add	r7, sp, #0
 800808e:	6078      	str	r0, [r7, #4]
  void *ptr = NULL;
 8008090:	2300      	movs	r3, #0
 8008092:	60fb      	str	r3, [r7, #12]
#if ATC_RTOS == ATC_RTOS_DISABLE
  ptr = malloc(size);
 8008094:	6878      	ldr	r0, [r7, #4]
 8008096:	f01c f911 	bl	80242bc <malloc>
 800809a:	4603      	mov	r3, r0
 800809c:	60fb      	str	r3, [r7, #12]
#elif (ATC_RTOS == ATC_RTOS_CMSIS_V1) || (ATC_RTOS == ATC_RTOS_CMSIS_V2)
  ptr = pvPortMalloc(size);
#elif ATC_RTOS == ATC_RTOS_THREADX
  ??
#endif
  return ptr;
 800809e:	68fb      	ldr	r3, [r7, #12]
}
 80080a0:	4618      	mov	r0, r3
 80080a2:	3710      	adds	r7, #16
 80080a4:	46bd      	mov	sp, r7
 80080a6:	bd80      	pop	{r7, pc}

080080a8 <ATC_Free>:

/***********************************************************************************************************/

void ATC_Free(void** ptr)
{
 80080a8:	b580      	push	{r7, lr}
 80080aa:	b082      	sub	sp, #8
 80080ac:	af00      	add	r7, sp, #0
 80080ae:	6078      	str	r0, [r7, #4]
  if (ptr != NULL && *ptr != NULL)
 80080b0:	687b      	ldr	r3, [r7, #4]
 80080b2:	2b00      	cmp	r3, #0
 80080b4:	d00b      	beq.n	80080ce <ATC_Free+0x26>
 80080b6:	687b      	ldr	r3, [r7, #4]
 80080b8:	681b      	ldr	r3, [r3, #0]
 80080ba:	2b00      	cmp	r3, #0
 80080bc:	d007      	beq.n	80080ce <ATC_Free+0x26>
  {
#if ATC_RTOS == ATC_RTOS_DISABLE
    free(*ptr);
 80080be:	687b      	ldr	r3, [r7, #4]
 80080c0:	681b      	ldr	r3, [r3, #0]
 80080c2:	4618      	mov	r0, r3
 80080c4:	f01c f902 	bl	80242cc <free>
#elif (ATC_RTOS == ATC_RTOS_CMSIS_V1) || (ATC_RTOS == ATC_RTOS_CMSIS_V2)
    vPortFree(*ptr);
#elif ATC_RTOS == ATC_RTOS_THREADX
    ??
#endif
     *ptr = NULL;
 80080c8:	687b      	ldr	r3, [r7, #4]
 80080ca:	2200      	movs	r2, #0
 80080cc:	601a      	str	r2, [r3, #0]
  }
}
 80080ce:	bf00      	nop
 80080d0:	3708      	adds	r7, #8
 80080d2:	46bd      	mov	sp, r7
 80080d4:	bd80      	pop	{r7, pc}

080080d6 <ATC_RxFlush>:

/***********************************************************************************************************/

void ATC_RxFlush(ATC_HandleTypeDef* hAtc)
{
 80080d6:	b580      	push	{r7, lr}
 80080d8:	b082      	sub	sp, #8
 80080da:	af00      	add	r7, sp, #0
 80080dc:	6078      	str	r0, [r7, #4]
  hAtc->RxIndex = 0;
 80080de:	687b      	ldr	r3, [r7, #4]
 80080e0:	2200      	movs	r2, #0
 80080e2:	831a      	strh	r2, [r3, #24]
  memset(hAtc->pReadBuff, 0, hAtc->Size);
 80080e4:	687b      	ldr	r3, [r7, #4]
 80080e6:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 80080e8:	687b      	ldr	r3, [r7, #4]
 80080ea:	8a9b      	ldrh	r3, [r3, #20]
 80080ec:	461a      	mov	r2, r3
 80080ee:	2100      	movs	r1, #0
 80080f0:	f01d f84c 	bl	802518c <memset>
}
 80080f4:	bf00      	nop
 80080f6:	3708      	adds	r7, #8
 80080f8:	46bd      	mov	sp, r7
 80080fa:	bd80      	pop	{r7, pc}

080080fc <ATC_TxRaw>:

/***********************************************************************************************************/

bool ATC_TxRaw(ATC_HandleTypeDef* hAtc, const uint8_t* Data, uint16_t Len)
{
 80080fc:	b580      	push	{r7, lr}
 80080fe:	b086      	sub	sp, #24
 8008100:	af00      	add	r7, sp, #0
 8008102:	60f8      	str	r0, [r7, #12]
 8008104:	60b9      	str	r1, [r7, #8]
 8008106:	4613      	mov	r3, r2
 8008108:	80fb      	strh	r3, [r7, #6]
  bool answer = false;
 800810a:	2300      	movs	r3, #0
 800810c:	75fb      	strb	r3, [r7, #23]
  do
  {
#if ATC_DEBUG == ATC_DEBUG_ENABLE
    dprintf("ATC<%s> - TX: ", hAtc->Name);
 800810e:	68fb      	ldr	r3, [r7, #12]
 8008110:	3304      	adds	r3, #4
 8008112:	4619      	mov	r1, r3
 8008114:	4816      	ldr	r0, [pc, #88]	@ (8008170 <ATC_TxRaw+0x74>)
 8008116:	f01c fec9 	bl	8024eac <iprintf>
    for (uint16_t i = 0 ; i < Len; i++)
 800811a:	2300      	movs	r3, #0
 800811c:	82bb      	strh	r3, [r7, #20]
 800811e:	e009      	b.n	8008134 <ATC_TxRaw+0x38>
    {
      dprintf("%c", Data[i]);
 8008120:	8abb      	ldrh	r3, [r7, #20]
 8008122:	68ba      	ldr	r2, [r7, #8]
 8008124:	4413      	add	r3, r2
 8008126:	781b      	ldrb	r3, [r3, #0]
 8008128:	4618      	mov	r0, r3
 800812a:	f01c fed1 	bl	8024ed0 <putchar>
    for (uint16_t i = 0 ; i < Len; i++)
 800812e:	8abb      	ldrh	r3, [r7, #20]
 8008130:	3301      	adds	r3, #1
 8008132:	82bb      	strh	r3, [r7, #20]
 8008134:	8aba      	ldrh	r2, [r7, #20]
 8008136:	88fb      	ldrh	r3, [r7, #6]
 8008138:	429a      	cmp	r2, r3
 800813a:	d3f1      	bcc.n	8008120 <ATC_TxRaw+0x24>
    }
    dprintf("\r\n");
 800813c:	480d      	ldr	r0, [pc, #52]	@ (8008174 <ATC_TxRaw+0x78>)
 800813e:	f01c ff25 	bl	8024f8c <puts>
#endif
    hAtc->TxLen = Len;
 8008142:	68fb      	ldr	r3, [r7, #12]
 8008144:	88fa      	ldrh	r2, [r7, #6]
 8008146:	835a      	strh	r2, [r3, #26]
    if (HAL_UART_Transmit_DMA(hAtc->hUart, Data, Len) != HAL_OK)
 8008148:	68fb      	ldr	r3, [r7, #12]
 800814a:	681b      	ldr	r3, [r3, #0]
 800814c:	88fa      	ldrh	r2, [r7, #6]
 800814e:	68b9      	ldr	r1, [r7, #8]
 8008150:	4618      	mov	r0, r3
 8008152:	f7fe fca5 	bl	8006aa0 <HAL_UART_Transmit_DMA>
 8008156:	4603      	mov	r3, r0
 8008158:	2b00      	cmp	r3, #0
 800815a:	d102      	bne.n	8008162 <ATC_TxRaw+0x66>
    {
      break;
    }
    answer = true;
 800815c:	2301      	movs	r3, #1
 800815e:	75fb      	strb	r3, [r7, #23]
 8008160:	e000      	b.n	8008164 <ATC_TxRaw+0x68>
      break;
 8008162:	bf00      	nop

  } while (0);

  return answer;
 8008164:	7dfb      	ldrb	r3, [r7, #23]
}
 8008166:	4618      	mov	r0, r3
 8008168:	3718      	adds	r7, #24
 800816a:	46bd      	mov	sp, r7
 800816c:	bd80      	pop	{r7, pc}
 800816e:	bf00      	nop
 8008170:	08027450 	.word	0x08027450
 8008174:	08027460 	.word	0x08027460

08008178 <ATC_TxBusy>:

/***********************************************************************************************************/

bool ATC_TxBusy(ATC_HandleTypeDef* hAtc)
{
 8008178:	b580      	push	{r7, lr}
 800817a:	b082      	sub	sp, #8
 800817c:	af00      	add	r7, sp, #0
 800817e:	6078      	str	r0, [r7, #4]
  if ((HAL_UART_GetState(hAtc->hUart) == HAL_UART_STATE_BUSY_TX) || (HAL_UART_GetState(hAtc->hUart) == HAL_UART_STATE_BUSY_TX_RX))
 8008180:	687b      	ldr	r3, [r7, #4]
 8008182:	681b      	ldr	r3, [r3, #0]
 8008184:	4618      	mov	r0, r3
 8008186:	f7ff f927 	bl	80073d8 <HAL_UART_GetState>
 800818a:	4603      	mov	r3, r0
 800818c:	2b21      	cmp	r3, #33	@ 0x21
 800818e:	d007      	beq.n	80081a0 <ATC_TxBusy+0x28>
 8008190:	687b      	ldr	r3, [r7, #4]
 8008192:	681b      	ldr	r3, [r3, #0]
 8008194:	4618      	mov	r0, r3
 8008196:	f7ff f91f 	bl	80073d8 <HAL_UART_GetState>
 800819a:	4603      	mov	r3, r0
 800819c:	2b23      	cmp	r3, #35	@ 0x23
 800819e:	d101      	bne.n	80081a4 <ATC_TxBusy+0x2c>
  {
    return true;
 80081a0:	2301      	movs	r3, #1
 80081a2:	e000      	b.n	80081a6 <ATC_TxBusy+0x2e>
  }
  else
  {
    return false;
 80081a4:	2300      	movs	r3, #0
  }
}
 80081a6:	4618      	mov	r0, r3
 80081a8:	3708      	adds	r7, #8
 80081aa:	46bd      	mov	sp, r7
 80081ac:	bd80      	pop	{r7, pc}

080081ae <ATC_TxWait>:

/***********************************************************************************************************/

bool ATC_TxWait(ATC_HandleTypeDef* hAtc, uint32_t Timeout)
{
 80081ae:	b580      	push	{r7, lr}
 80081b0:	b084      	sub	sp, #16
 80081b2:	af00      	add	r7, sp, #0
 80081b4:	6078      	str	r0, [r7, #4]
 80081b6:	6039      	str	r1, [r7, #0]
  bool answer = false;
 80081b8:	2300      	movs	r3, #0
 80081ba:	73fb      	strb	r3, [r7, #15]
  uint32_t start_time = HAL_GetTick();
 80081bc:	f7fa fdd6 	bl	8002d6c <HAL_GetTick>
 80081c0:	60b8      	str	r0, [r7, #8]
  while (1)
  {
    ATC_Delay(1);
 80081c2:	2001      	movs	r0, #1
 80081c4:	f000 fb6a 	bl	800889c <ATC_Delay>
    if ((HAL_UART_GetState(hAtc->hUart) == HAL_UART_STATE_BUSY_RX) || (HAL_UART_GetState(hAtc->hUart) == HAL_UART_STATE_READY))
 80081c8:	687b      	ldr	r3, [r7, #4]
 80081ca:	681b      	ldr	r3, [r3, #0]
 80081cc:	4618      	mov	r0, r3
 80081ce:	f7ff f903 	bl	80073d8 <HAL_UART_GetState>
 80081d2:	4603      	mov	r3, r0
 80081d4:	2b22      	cmp	r3, #34	@ 0x22
 80081d6:	d007      	beq.n	80081e8 <ATC_TxWait+0x3a>
 80081d8:	687b      	ldr	r3, [r7, #4]
 80081da:	681b      	ldr	r3, [r3, #0]
 80081dc:	4618      	mov	r0, r3
 80081de:	f7ff f8fb 	bl	80073d8 <HAL_UART_GetState>
 80081e2:	4603      	mov	r3, r0
 80081e4:	2b20      	cmp	r3, #32
 80081e6:	d102      	bne.n	80081ee <ATC_TxWait+0x40>
    {
      answer = true;
 80081e8:	2301      	movs	r3, #1
 80081ea:	73fb      	strb	r3, [r7, #15]
      break;
 80081ec:	e01c      	b.n	8008228 <ATC_TxWait+0x7a>
    }
    if ((HAL_UART_GetState(hAtc->hUart) == HAL_UART_STATE_ERROR) || (HAL_UART_GetState(hAtc->hUart) == HAL_UART_STATE_TIMEOUT))
 80081ee:	687b      	ldr	r3, [r7, #4]
 80081f0:	681b      	ldr	r3, [r3, #0]
 80081f2:	4618      	mov	r0, r3
 80081f4:	f7ff f8f0 	bl	80073d8 <HAL_UART_GetState>
 80081f8:	4603      	mov	r3, r0
 80081fa:	2be0      	cmp	r3, #224	@ 0xe0
 80081fc:	d014      	beq.n	8008228 <ATC_TxWait+0x7a>
 80081fe:	687b      	ldr	r3, [r7, #4]
 8008200:	681b      	ldr	r3, [r3, #0]
 8008202:	4618      	mov	r0, r3
 8008204:	f7ff f8e8 	bl	80073d8 <HAL_UART_GetState>
 8008208:	4603      	mov	r3, r0
 800820a:	2ba0      	cmp	r3, #160	@ 0xa0
 800820c:	d00c      	beq.n	8008228 <ATC_TxWait+0x7a>
    {
      break;
    }
    if (HAL_GetTick() - start_time >= Timeout)
 800820e:	f7fa fdad 	bl	8002d6c <HAL_GetTick>
 8008212:	4602      	mov	r2, r0
 8008214:	68bb      	ldr	r3, [r7, #8]
 8008216:	1ad3      	subs	r3, r2, r3
 8008218:	683a      	ldr	r2, [r7, #0]
 800821a:	429a      	cmp	r2, r3
 800821c:	d8d1      	bhi.n	80081c2 <ATC_TxWait+0x14>
    {
      HAL_UART_AbortTransmit(hAtc->hUart);
 800821e:	687b      	ldr	r3, [r7, #4]
 8008220:	681b      	ldr	r3, [r3, #0]
 8008222:	4618      	mov	r0, r3
 8008224:	f7fe fd09 	bl	8006c3a <HAL_UART_AbortTransmit>
      break;
    }
  }

  return answer;
 8008228:	7bfb      	ldrb	r3, [r7, #15]
}
 800822a:	4618      	mov	r0, r3
 800822c:	3710      	adds	r7, #16
 800822e:	46bd      	mov	sp, r7
 8008230:	bd80      	pop	{r7, pc}

08008232 <ATC_CheckEvents>:

/***********************************************************************************************************/

void ATC_CheckEvents(ATC_HandleTypeDef* hAtc)
{
 8008232:	b580      	push	{r7, lr}
 8008234:	b084      	sub	sp, #16
 8008236:	af00      	add	r7, sp, #0
 8008238:	6078      	str	r0, [r7, #4]
  if (hAtc->RxIndex > 0)
 800823a:	687b      	ldr	r3, [r7, #4]
 800823c:	8b1b      	ldrh	r3, [r3, #24]
 800823e:	2b00      	cmp	r3, #0
 8008240:	d024      	beq.n	800828c <ATC_CheckEvents+0x5a>
  {
    for (uint32_t ev = 0; ev < hAtc->Events; ev++)
 8008242:	2300      	movs	r3, #0
 8008244:	60fb      	str	r3, [r7, #12]
 8008246:	e019      	b.n	800827c <ATC_CheckEvents+0x4a>
    {
      char *found = strstr((char*)hAtc->pReadBuff, hAtc->psEvents[ev].Event);
 8008248:	687b      	ldr	r3, [r7, #4]
 800824a:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800824c:	687b      	ldr	r3, [r7, #4]
 800824e:	68da      	ldr	r2, [r3, #12]
 8008250:	68fb      	ldr	r3, [r7, #12]
 8008252:	00db      	lsls	r3, r3, #3
 8008254:	4413      	add	r3, r2
 8008256:	681b      	ldr	r3, [r3, #0]
 8008258:	4619      	mov	r1, r3
 800825a:	f01c ffb2 	bl	80251c2 <strstr>
 800825e:	60b8      	str	r0, [r7, #8]
      if (found != NULL)
 8008260:	68bb      	ldr	r3, [r7, #8]
 8008262:	2b00      	cmp	r3, #0
 8008264:	d007      	beq.n	8008276 <ATC_CheckEvents+0x44>
      {
        hAtc->psEvents[ev].EventCallback(found);
 8008266:	687b      	ldr	r3, [r7, #4]
 8008268:	68da      	ldr	r2, [r3, #12]
 800826a:	68fb      	ldr	r3, [r7, #12]
 800826c:	00db      	lsls	r3, r3, #3
 800826e:	4413      	add	r3, r2
 8008270:	685b      	ldr	r3, [r3, #4]
 8008272:	68b8      	ldr	r0, [r7, #8]
 8008274:	4798      	blx	r3
    for (uint32_t ev = 0; ev < hAtc->Events; ev++)
 8008276:	68fb      	ldr	r3, [r7, #12]
 8008278:	3301      	adds	r3, #1
 800827a:	60fb      	str	r3, [r7, #12]
 800827c:	687b      	ldr	r3, [r7, #4]
 800827e:	691b      	ldr	r3, [r3, #16]
 8008280:	68fa      	ldr	r2, [r7, #12]
 8008282:	429a      	cmp	r2, r3
 8008284:	d3e0      	bcc.n	8008248 <ATC_CheckEvents+0x16>
      }
    }
    ATC_RxFlush(hAtc);
 8008286:	6878      	ldr	r0, [r7, #4]
 8008288:	f7ff ff25 	bl	80080d6 <ATC_RxFlush>
  }
}
 800828c:	bf00      	nop
 800828e:	3710      	adds	r7, #16
 8008290:	46bd      	mov	sp, r7
 8008292:	bd80      	pop	{r7, pc}

08008294 <ATC_CheckResponse>:

/***********************************************************************************************************/

uint8_t ATC_CheckResponse(ATC_HandleTypeDef* hAtc, char** ppFound)
{
 8008294:	b580      	push	{r7, lr}
 8008296:	b084      	sub	sp, #16
 8008298:	af00      	add	r7, sp, #0
 800829a:	6078      	str	r0, [r7, #4]
 800829c:	6039      	str	r1, [r7, #0]
  uint8_t index = 0;
 800829e:	2300      	movs	r3, #0
 80082a0:	73fb      	strb	r3, [r7, #15]
  if (hAtc->RxIndex > 0)
 80082a2:	687b      	ldr	r3, [r7, #4]
 80082a4:	8b1b      	ldrh	r3, [r3, #24]
 80082a6:	2b00      	cmp	r3, #0
 80082a8:	d023      	beq.n	80082f2 <ATC_CheckResponse+0x5e>
  {
    for (uint16_t i = 0; i < hAtc->RespCount; i++)
 80082aa:	2300      	movs	r3, #0
 80082ac:	81bb      	strh	r3, [r7, #12]
 80082ae:	e01b      	b.n	80082e8 <ATC_CheckResponse+0x54>
    {
      char *found = strstr((char*)hAtc->pReadBuff, (char*)hAtc->ppResp[i]);
 80082b0:	687b      	ldr	r3, [r7, #4]
 80082b2:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 80082b4:	89ba      	ldrh	r2, [r7, #12]
 80082b6:	687b      	ldr	r3, [r7, #4]
 80082b8:	320a      	adds	r2, #10
 80082ba:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80082be:	4619      	mov	r1, r3
 80082c0:	f01c ff7f 	bl	80251c2 <strstr>
 80082c4:	60b8      	str	r0, [r7, #8]
      if (found != NULL)
 80082c6:	68bb      	ldr	r3, [r7, #8]
 80082c8:	2b00      	cmp	r3, #0
 80082ca:	d00a      	beq.n	80082e2 <ATC_CheckResponse+0x4e>
      {
        if (ppFound != NULL)
 80082cc:	683b      	ldr	r3, [r7, #0]
 80082ce:	2b00      	cmp	r3, #0
 80082d0:	d002      	beq.n	80082d8 <ATC_CheckResponse+0x44>
        {
          *ppFound = found;
 80082d2:	683b      	ldr	r3, [r7, #0]
 80082d4:	68ba      	ldr	r2, [r7, #8]
 80082d6:	601a      	str	r2, [r3, #0]
        }
        index = i + 1;
 80082d8:	89bb      	ldrh	r3, [r7, #12]
 80082da:	b2db      	uxtb	r3, r3
 80082dc:	3301      	adds	r3, #1
 80082de:	73fb      	strb	r3, [r7, #15]
        break;
 80082e0:	e007      	b.n	80082f2 <ATC_CheckResponse+0x5e>
    for (uint16_t i = 0; i < hAtc->RespCount; i++)
 80082e2:	89bb      	ldrh	r3, [r7, #12]
 80082e4:	3301      	adds	r3, #1
 80082e6:	81bb      	strh	r3, [r7, #12]
 80082e8:	687b      	ldr	r3, [r7, #4]
 80082ea:	8adb      	ldrh	r3, [r3, #22]
 80082ec:	89ba      	ldrh	r2, [r7, #12]
 80082ee:	429a      	cmp	r2, r3
 80082f0:	d3de      	bcc.n	80082b0 <ATC_CheckResponse+0x1c>
      }
    }
  }
  return index;
 80082f2:	7bfb      	ldrb	r3, [r7, #15]
}
 80082f4:	4618      	mov	r0, r3
 80082f6:	3710      	adds	r7, #16
 80082f8:	46bd      	mov	sp, r7
 80082fa:	bd80      	pop	{r7, pc}

080082fc <ATC_CheckErrors>:

/***********************************************************************************************************/

void ATC_CheckErrors(ATC_HandleTypeDef* hAtc)
{
 80082fc:	b580      	push	{r7, lr}
 80082fe:	b082      	sub	sp, #8
 8008300:	af00      	add	r7, sp, #0
 8008302:	6078      	str	r0, [r7, #4]
  if (HAL_UART_GetError(hAtc->hUart) != HAL_UART_ERROR_NONE)
 8008304:	687b      	ldr	r3, [r7, #4]
 8008306:	681b      	ldr	r3, [r3, #0]
 8008308:	4618      	mov	r0, r3
 800830a:	f7ff f883 	bl	8007414 <HAL_UART_GetError>
 800830e:	4603      	mov	r3, r0
 8008310:	2b00      	cmp	r3, #0
 8008312:	d01e      	beq.n	8008352 <ATC_CheckErrors+0x56>
  {
    __HAL_UART_CLEAR_FLAG(hAtc->hUart, 0xFFFFFFFF);
 8008314:	687b      	ldr	r3, [r7, #4]
 8008316:	681b      	ldr	r3, [r3, #0]
 8008318:	681b      	ldr	r3, [r3, #0]
 800831a:	2200      	movs	r2, #0
 800831c:	601a      	str	r2, [r3, #0]
    HAL_UART_AbortReceive(hAtc->hUart);
 800831e:	687b      	ldr	r3, [r7, #4]
 8008320:	681b      	ldr	r3, [r3, #0]
 8008322:	4618      	mov	r0, r3
 8008324:	f7fe fcf1 	bl	8006d0a <HAL_UART_AbortReceive>
    HAL_UARTEx_ReceiveToIdle_DMA(hAtc->hUart, hAtc->pRxBuff, hAtc->Size);
 8008328:	687b      	ldr	r3, [r7, #4]
 800832a:	6818      	ldr	r0, [r3, #0]
 800832c:	687b      	ldr	r3, [r7, #4]
 800832e:	69d9      	ldr	r1, [r3, #28]
 8008330:	687b      	ldr	r3, [r7, #4]
 8008332:	8a9b      	ldrh	r3, [r3, #20]
 8008334:	461a      	mov	r2, r3
 8008336:	f7fe fc23 	bl	8006b80 <HAL_UARTEx_ReceiveToIdle_DMA>
    __HAL_DMA_DISABLE_IT(hAtc->hUart->hdmarx, DMA_IT_HT);
 800833a:	687b      	ldr	r3, [r7, #4]
 800833c:	681b      	ldr	r3, [r3, #0]
 800833e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008340:	681b      	ldr	r3, [r3, #0]
 8008342:	681a      	ldr	r2, [r3, #0]
 8008344:	687b      	ldr	r3, [r7, #4]
 8008346:	681b      	ldr	r3, [r3, #0]
 8008348:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800834a:	681b      	ldr	r3, [r3, #0]
 800834c:	f022 0208 	bic.w	r2, r2, #8
 8008350:	601a      	str	r2, [r3, #0]
  }
  if (!((HAL_UART_GetState(hAtc->hUart) == HAL_UART_STATE_BUSY_RX) ||
 8008352:	687b      	ldr	r3, [r7, #4]
 8008354:	681b      	ldr	r3, [r3, #0]
 8008356:	4618      	mov	r0, r3
 8008358:	f7ff f83e 	bl	80073d8 <HAL_UART_GetState>
 800835c:	4603      	mov	r3, r0
 800835e:	2b22      	cmp	r3, #34	@ 0x22
 8008360:	d026      	beq.n	80083b0 <ATC_CheckErrors+0xb4>
      (HAL_UART_GetState(hAtc->hUart) == HAL_UART_STATE_BUSY_TX_RX)))
 8008362:	687b      	ldr	r3, [r7, #4]
 8008364:	681b      	ldr	r3, [r3, #0]
 8008366:	4618      	mov	r0, r3
 8008368:	f7ff f836 	bl	80073d8 <HAL_UART_GetState>
 800836c:	4603      	mov	r3, r0
  if (!((HAL_UART_GetState(hAtc->hUart) == HAL_UART_STATE_BUSY_RX) ||
 800836e:	2b23      	cmp	r3, #35	@ 0x23
 8008370:	d01e      	beq.n	80083b0 <ATC_CheckErrors+0xb4>
  {
    __HAL_UART_CLEAR_FLAG(hAtc->hUart, 0xFFFFFFFF);
 8008372:	687b      	ldr	r3, [r7, #4]
 8008374:	681b      	ldr	r3, [r3, #0]
 8008376:	681b      	ldr	r3, [r3, #0]
 8008378:	2200      	movs	r2, #0
 800837a:	601a      	str	r2, [r3, #0]
    HAL_UART_AbortReceive(hAtc->hUart);
 800837c:	687b      	ldr	r3, [r7, #4]
 800837e:	681b      	ldr	r3, [r3, #0]
 8008380:	4618      	mov	r0, r3
 8008382:	f7fe fcc2 	bl	8006d0a <HAL_UART_AbortReceive>
    HAL_UARTEx_ReceiveToIdle_DMA(hAtc->hUart, hAtc->pRxBuff, hAtc->Size);
 8008386:	687b      	ldr	r3, [r7, #4]
 8008388:	6818      	ldr	r0, [r3, #0]
 800838a:	687b      	ldr	r3, [r7, #4]
 800838c:	69d9      	ldr	r1, [r3, #28]
 800838e:	687b      	ldr	r3, [r7, #4]
 8008390:	8a9b      	ldrh	r3, [r3, #20]
 8008392:	461a      	mov	r2, r3
 8008394:	f7fe fbf4 	bl	8006b80 <HAL_UARTEx_ReceiveToIdle_DMA>
    __HAL_DMA_DISABLE_IT(hAtc->hUart->hdmarx, DMA_IT_HT);
 8008398:	687b      	ldr	r3, [r7, #4]
 800839a:	681b      	ldr	r3, [r3, #0]
 800839c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800839e:	681b      	ldr	r3, [r3, #0]
 80083a0:	681a      	ldr	r2, [r3, #0]
 80083a2:	687b      	ldr	r3, [r7, #4]
 80083a4:	681b      	ldr	r3, [r3, #0]
 80083a6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80083a8:	681b      	ldr	r3, [r3, #0]
 80083aa:	f022 0208 	bic.w	r2, r2, #8
 80083ae:	601a      	str	r2, [r3, #0]
  }
}
 80083b0:	bf00      	nop
 80083b2:	3708      	adds	r7, #8
 80083b4:	46bd      	mov	sp, r7
 80083b6:	bd80      	pop	{r7, pc}

080083b8 <ATC_Init>:
  * @param  BufferSize: Size of the RX buffer. It needs 2X memory.
  * @param  pName: Name identifier for the ATC.
  * @retval true if initialization is successful, false otherwise.
  */
bool ATC_Init(ATC_HandleTypeDef* hAtc, UART_HandleTypeDef* hUart, uint16_t BufferSize, const char* pName)
{
 80083b8:	b580      	push	{r7, lr}
 80083ba:	b086      	sub	sp, #24
 80083bc:	af00      	add	r7, sp, #0
 80083be:	60f8      	str	r0, [r7, #12]
 80083c0:	60b9      	str	r1, [r7, #8]
 80083c2:	603b      	str	r3, [r7, #0]
 80083c4:	4613      	mov	r3, r2
 80083c6:	80fb      	strh	r3, [r7, #6]
  bool answer = false;
 80083c8:	2300      	movs	r3, #0
 80083ca:	75fb      	strb	r3, [r7, #23]
  do
  {
    if (hAtc == NULL || hUart == NULL)
 80083cc:	68fb      	ldr	r3, [r7, #12]
 80083ce:	2b00      	cmp	r3, #0
 80083d0:	f000 808d 	beq.w	80084ee <ATC_Init+0x136>
 80083d4:	68bb      	ldr	r3, [r7, #8]
 80083d6:	2b00      	cmp	r3, #0
 80083d8:	f000 8089 	beq.w	80084ee <ATC_Init+0x136>
    {
      break;
    }
    memset(hAtc, 0, sizeof(ATC_HandleTypeDef));
 80083dc:	223c      	movs	r2, #60	@ 0x3c
 80083de:	2100      	movs	r1, #0
 80083e0:	68f8      	ldr	r0, [r7, #12]
 80083e2:	f01c fed3 	bl	802518c <memset>
    if (pName != NULL)
 80083e6:	683b      	ldr	r3, [r7, #0]
 80083e8:	2b00      	cmp	r3, #0
 80083ea:	d006      	beq.n	80083fa <ATC_Init+0x42>
    {
      strncpy(hAtc->Name, pName, sizeof(hAtc->Name) - 1);
 80083ec:	68fb      	ldr	r3, [r7, #12]
 80083ee:	3304      	adds	r3, #4
 80083f0:	2207      	movs	r2, #7
 80083f2:	6839      	ldr	r1, [r7, #0]
 80083f4:	4618      	mov	r0, r3
 80083f6:	f01c fed1 	bl	802519c <strncpy>
    }
    hAtc->hUart = hUart;
 80083fa:	68fb      	ldr	r3, [r7, #12]
 80083fc:	68ba      	ldr	r2, [r7, #8]
 80083fe:	601a      	str	r2, [r3, #0]
    hAtc->pRxBuff = ATC_Malloc(BufferSize);
 8008400:	88fb      	ldrh	r3, [r7, #6]
 8008402:	4618      	mov	r0, r3
 8008404:	f7ff fe40 	bl	8008088 <ATC_Malloc>
 8008408:	4602      	mov	r2, r0
 800840a:	68fb      	ldr	r3, [r7, #12]
 800840c:	61da      	str	r2, [r3, #28]
    if (hAtc->pRxBuff != NULL)
 800840e:	68fb      	ldr	r3, [r7, #12]
 8008410:	69db      	ldr	r3, [r3, #28]
 8008412:	2b00      	cmp	r3, #0
 8008414:	d012      	beq.n	800843c <ATC_Init+0x84>
    {
      memset(hAtc->pRxBuff, 0, BufferSize);
 8008416:	68fb      	ldr	r3, [r7, #12]
 8008418:	69db      	ldr	r3, [r3, #28]
 800841a:	88fa      	ldrh	r2, [r7, #6]
 800841c:	2100      	movs	r1, #0
 800841e:	4618      	mov	r0, r3
 8008420:	f01c feb4 	bl	802518c <memset>
    else
    {
      dprintf("ATC<%s> - ERROR MALLOC RX BUFF\r\n", hAtc->Name);
      break;
    }
    hAtc->pTxBuff = ATC_Malloc(BufferSize);
 8008424:	88fb      	ldrh	r3, [r7, #6]
 8008426:	4618      	mov	r0, r3
 8008428:	f7ff fe2e 	bl	8008088 <ATC_Malloc>
 800842c:	4602      	mov	r2, r0
 800842e:	68fb      	ldr	r3, [r7, #12]
 8008430:	621a      	str	r2, [r3, #32]
    if (hAtc->pTxBuff != NULL)
 8008432:	68fb      	ldr	r3, [r7, #12]
 8008434:	6a1b      	ldr	r3, [r3, #32]
 8008436:	2b00      	cmp	r3, #0
 8008438:	d01a      	beq.n	8008470 <ATC_Init+0xb8>
 800843a:	e006      	b.n	800844a <ATC_Init+0x92>
      dprintf("ATC<%s> - ERROR MALLOC RX BUFF\r\n", hAtc->Name);
 800843c:	68fb      	ldr	r3, [r7, #12]
 800843e:	3304      	adds	r3, #4
 8008440:	4619      	mov	r1, r3
 8008442:	483f      	ldr	r0, [pc, #252]	@ (8008540 <ATC_Init+0x188>)
 8008444:	f01c fd32 	bl	8024eac <iprintf>
      break;
 8008448:	e051      	b.n	80084ee <ATC_Init+0x136>
    {
      memset(hAtc->pTxBuff, 0, BufferSize);
 800844a:	68fb      	ldr	r3, [r7, #12]
 800844c:	6a1b      	ldr	r3, [r3, #32]
 800844e:	88fa      	ldrh	r2, [r7, #6]
 8008450:	2100      	movs	r1, #0
 8008452:	4618      	mov	r0, r3
 8008454:	f01c fe9a 	bl	802518c <memset>
    else
    {
      dprintf("ATC<%s> - ERROR MALLOC TX BUFF\r\n", hAtc->Name);
      break;
    }
    hAtc->pReadBuff = ATC_Malloc(BufferSize);
 8008458:	88fb      	ldrh	r3, [r7, #6]
 800845a:	4618      	mov	r0, r3
 800845c:	f7ff fe14 	bl	8008088 <ATC_Malloc>
 8008460:	4602      	mov	r2, r0
 8008462:	68fb      	ldr	r3, [r7, #12]
 8008464:	625a      	str	r2, [r3, #36]	@ 0x24
    if (hAtc->pReadBuff != NULL)
 8008466:	68fb      	ldr	r3, [r7, #12]
 8008468:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800846a:	2b00      	cmp	r3, #0
 800846c:	d023      	beq.n	80084b6 <ATC_Init+0xfe>
 800846e:	e006      	b.n	800847e <ATC_Init+0xc6>
      dprintf("ATC<%s> - ERROR MALLOC TX BUFF\r\n", hAtc->Name);
 8008470:	68fb      	ldr	r3, [r7, #12]
 8008472:	3304      	adds	r3, #4
 8008474:	4619      	mov	r1, r3
 8008476:	4833      	ldr	r0, [pc, #204]	@ (8008544 <ATC_Init+0x18c>)
 8008478:	f01c fd18 	bl	8024eac <iprintf>
      break;
 800847c:	e037      	b.n	80084ee <ATC_Init+0x136>
    {
      memset(hAtc->pReadBuff, 0, BufferSize);
 800847e:	68fb      	ldr	r3, [r7, #12]
 8008480:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008482:	88fa      	ldrh	r2, [r7, #6]
 8008484:	2100      	movs	r1, #0
 8008486:	4618      	mov	r0, r3
 8008488:	f01c fe80 	bl	802518c <memset>
    else
    {
      dprintf("ATC<%s> - ERROR MALLOC READ BUFF\r\n", hAtc->Name);
      break;
    }
    hAtc->Size = BufferSize;
 800848c:	68fb      	ldr	r3, [r7, #12]
 800848e:	88fa      	ldrh	r2, [r7, #6]
 8008490:	829a      	strh	r2, [r3, #20]
    __HAL_UART_CLEAR_FLAG(hAtc->hUart, 0xFFFFFFFF);
 8008492:	68fb      	ldr	r3, [r7, #12]
 8008494:	681b      	ldr	r3, [r3, #0]
 8008496:	681b      	ldr	r3, [r3, #0]
 8008498:	2200      	movs	r2, #0
 800849a:	601a      	str	r2, [r3, #0]
    if (HAL_UARTEx_ReceiveToIdle_DMA(hAtc->hUart, hAtc->pRxBuff, hAtc->Size) != HAL_OK)
 800849c:	68fb      	ldr	r3, [r7, #12]
 800849e:	6818      	ldr	r0, [r3, #0]
 80084a0:	68fb      	ldr	r3, [r7, #12]
 80084a2:	69d9      	ldr	r1, [r3, #28]
 80084a4:	68fb      	ldr	r3, [r7, #12]
 80084a6:	8a9b      	ldrh	r3, [r3, #20]
 80084a8:	461a      	mov	r2, r3
 80084aa:	f7fe fb69 	bl	8006b80 <HAL_UARTEx_ReceiveToIdle_DMA>
 80084ae:	4603      	mov	r3, r0
 80084b0:	2b00      	cmp	r3, #0
 80084b2:	d00e      	beq.n	80084d2 <ATC_Init+0x11a>
 80084b4:	e006      	b.n	80084c4 <ATC_Init+0x10c>
      dprintf("ATC<%s> - ERROR MALLOC READ BUFF\r\n", hAtc->Name);
 80084b6:	68fb      	ldr	r3, [r7, #12]
 80084b8:	3304      	adds	r3, #4
 80084ba:	4619      	mov	r1, r3
 80084bc:	4822      	ldr	r0, [pc, #136]	@ (8008548 <ATC_Init+0x190>)
 80084be:	f01c fcf5 	bl	8024eac <iprintf>
      break;
 80084c2:	e014      	b.n	80084ee <ATC_Init+0x136>
    {
      dprintf("ATC<%s> - ERROR ENABLE RX DMA\r\n", hAtc->Name);
 80084c4:	68fb      	ldr	r3, [r7, #12]
 80084c6:	3304      	adds	r3, #4
 80084c8:	4619      	mov	r1, r3
 80084ca:	4820      	ldr	r0, [pc, #128]	@ (800854c <ATC_Init+0x194>)
 80084cc:	f01c fcee 	bl	8024eac <iprintf>
      break;
 80084d0:	e00d      	b.n	80084ee <ATC_Init+0x136>
    }
    __HAL_DMA_DISABLE_IT(hAtc->hUart->hdmarx, DMA_IT_HT);
 80084d2:	68fb      	ldr	r3, [r7, #12]
 80084d4:	681b      	ldr	r3, [r3, #0]
 80084d6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80084d8:	681b      	ldr	r3, [r3, #0]
 80084da:	681a      	ldr	r2, [r3, #0]
 80084dc:	68fb      	ldr	r3, [r7, #12]
 80084de:	681b      	ldr	r3, [r3, #0]
 80084e0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80084e2:	681b      	ldr	r3, [r3, #0]
 80084e4:	f022 0208 	bic.w	r2, r2, #8
 80084e8:	601a      	str	r2, [r3, #0]
    answer = true;
 80084ea:	2301      	movs	r3, #1
 80084ec:	75fb      	strb	r3, [r7, #23]

  } while (0);

  if (answer == false)
 80084ee:	7dfb      	ldrb	r3, [r7, #23]
 80084f0:	f083 0301 	eor.w	r3, r3, #1
 80084f4:	b2db      	uxtb	r3, r3
 80084f6:	2b00      	cmp	r3, #0
 80084f8:	d017      	beq.n	800852a <ATC_Init+0x172>
  {
    if (hAtc->pRxBuff != NULL)
 80084fa:	68fb      	ldr	r3, [r7, #12]
 80084fc:	69db      	ldr	r3, [r3, #28]
 80084fe:	2b00      	cmp	r3, #0
 8008500:	d004      	beq.n	800850c <ATC_Init+0x154>
    {
      ATC_Free((void**)&hAtc->pRxBuff);
 8008502:	68fb      	ldr	r3, [r7, #12]
 8008504:	331c      	adds	r3, #28
 8008506:	4618      	mov	r0, r3
 8008508:	f7ff fdce 	bl	80080a8 <ATC_Free>
    }
    if (hAtc->pReadBuff != NULL)
 800850c:	68fb      	ldr	r3, [r7, #12]
 800850e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008510:	2b00      	cmp	r3, #0
 8008512:	d004      	beq.n	800851e <ATC_Init+0x166>
    {
      ATC_Free((void**)&hAtc->pReadBuff);
 8008514:	68fb      	ldr	r3, [r7, #12]
 8008516:	3324      	adds	r3, #36	@ 0x24
 8008518:	4618      	mov	r0, r3
 800851a:	f7ff fdc5 	bl	80080a8 <ATC_Free>
    }
    memset(hAtc, 0, sizeof(ATC_HandleTypeDef));
 800851e:	223c      	movs	r2, #60	@ 0x3c
 8008520:	2100      	movs	r1, #0
 8008522:	68f8      	ldr	r0, [r7, #12]
 8008524:	f01c fe32 	bl	802518c <memset>
 8008528:	e005      	b.n	8008536 <ATC_Init+0x17e>
  }
  else
  {
    dprintf("ATC<%s> - INIT DONE\r\n", hAtc->Name);
 800852a:	68fb      	ldr	r3, [r7, #12]
 800852c:	3304      	adds	r3, #4
 800852e:	4619      	mov	r1, r3
 8008530:	4807      	ldr	r0, [pc, #28]	@ (8008550 <ATC_Init+0x198>)
 8008532:	f01c fcbb 	bl	8024eac <iprintf>
  }
  return answer;
 8008536:	7dfb      	ldrb	r3, [r7, #23]
}
 8008538:	4618      	mov	r0, r3
 800853a:	3718      	adds	r7, #24
 800853c:	46bd      	mov	sp, r7
 800853e:	bd80      	pop	{r7, pc}
 8008540:	08027464 	.word	0x08027464
 8008544:	08027488 	.word	0x08027488
 8008548:	080274ac 	.word	0x080274ac
 800854c:	080274d0 	.word	0x080274d0
 8008550:	080274f0 	.word	0x080274f0

08008554 <ATC_SetEvents>:
  * @param  hAtc: Pointer to the ATC handle.
  * @param  psEvents: Pointer to the event handler structure.
  * @retval true if events are set successfully, false otherwise.
  */
bool ATC_SetEvents(ATC_HandleTypeDef* hAtc, const ATC_EventTypeDef* psEvents)
{
 8008554:	b480      	push	{r7}
 8008556:	b085      	sub	sp, #20
 8008558:	af00      	add	r7, sp, #0
 800855a:	6078      	str	r0, [r7, #4]
 800855c:	6039      	str	r1, [r7, #0]
  bool answer = false;
 800855e:	2300      	movs	r3, #0
 8008560:	73fb      	strb	r3, [r7, #15]
  uint32_t ev = 0;
 8008562:	2300      	movs	r3, #0
 8008564:	60bb      	str	r3, [r7, #8]
  do
  {
    if (hAtc == NULL)
 8008566:	687b      	ldr	r3, [r7, #4]
 8008568:	2b00      	cmp	r3, #0
 800856a:	d01d      	beq.n	80085a8 <ATC_SetEvents+0x54>
    {
      break;
    }
    if (psEvents == NULL)
 800856c:	683b      	ldr	r3, [r7, #0]
 800856e:	2b00      	cmp	r3, #0
 8008570:	d01c      	beq.n	80085ac <ATC_SetEvents+0x58>
    {
      break;
    }
    while ((psEvents[ev].Event != NULL) && (psEvents[ev].EventCallback != NULL))
 8008572:	e002      	b.n	800857a <ATC_SetEvents+0x26>
    {
      ev++;
 8008574:	68bb      	ldr	r3, [r7, #8]
 8008576:	3301      	adds	r3, #1
 8008578:	60bb      	str	r3, [r7, #8]
    while ((psEvents[ev].Event != NULL) && (psEvents[ev].EventCallback != NULL))
 800857a:	68bb      	ldr	r3, [r7, #8]
 800857c:	00db      	lsls	r3, r3, #3
 800857e:	683a      	ldr	r2, [r7, #0]
 8008580:	4413      	add	r3, r2
 8008582:	681b      	ldr	r3, [r3, #0]
 8008584:	2b00      	cmp	r3, #0
 8008586:	d006      	beq.n	8008596 <ATC_SetEvents+0x42>
 8008588:	68bb      	ldr	r3, [r7, #8]
 800858a:	00db      	lsls	r3, r3, #3
 800858c:	683a      	ldr	r2, [r7, #0]
 800858e:	4413      	add	r3, r2
 8008590:	685b      	ldr	r3, [r3, #4]
 8008592:	2b00      	cmp	r3, #0
 8008594:	d1ee      	bne.n	8008574 <ATC_SetEvents+0x20>
    }
    hAtc->psEvents = (ATC_EventTypeDef*)psEvents;
 8008596:	687b      	ldr	r3, [r7, #4]
 8008598:	683a      	ldr	r2, [r7, #0]
 800859a:	60da      	str	r2, [r3, #12]
    hAtc->Events = ev;
 800859c:	687b      	ldr	r3, [r7, #4]
 800859e:	68ba      	ldr	r2, [r7, #8]
 80085a0:	611a      	str	r2, [r3, #16]
    answer = true;
 80085a2:	2301      	movs	r3, #1
 80085a4:	73fb      	strb	r3, [r7, #15]
 80085a6:	e002      	b.n	80085ae <ATC_SetEvents+0x5a>
      break;
 80085a8:	bf00      	nop
 80085aa:	e000      	b.n	80085ae <ATC_SetEvents+0x5a>
      break;
 80085ac:	bf00      	nop

  } while (0);

  return answer;
 80085ae:	7bfb      	ldrb	r3, [r7, #15]
}
 80085b0:	4618      	mov	r0, r3
 80085b2:	3714      	adds	r7, #20
 80085b4:	46bd      	mov	sp, r7
 80085b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085ba:	4770      	bx	lr

080085bc <ATC_Loop>:
  * @brief  Main loop for processing ATC events and errors.
  * @param  hAtc: Pointer to the ATC handle.
  * @retval None.
  */
void ATC_Loop(ATC_HandleTypeDef* hAtc)
{
 80085bc:	b580      	push	{r7, lr}
 80085be:	b082      	sub	sp, #8
 80085c0:	af00      	add	r7, sp, #0
 80085c2:	6078      	str	r0, [r7, #4]
  ATC_CheckErrors(hAtc);
 80085c4:	6878      	ldr	r0, [r7, #4]
 80085c6:	f7ff fe99 	bl	80082fc <ATC_CheckErrors>
  ATC_CheckEvents(hAtc);
 80085ca:	6878      	ldr	r0, [r7, #4]
 80085cc:	f7ff fe31 	bl	8008232 <ATC_CheckEvents>
}
 80085d0:	bf00      	nop
 80085d2:	3708      	adds	r7, #8
 80085d4:	46bd      	mov	sp, r7
 80085d6:	bd80      	pop	{r7, pc}

080085d8 <ATC_SendReceive>:
  * @param  Items: Number of String for Searching
  * @param  ...: Variable arguments for expected responses.
  * @retval Response index if found, error code otherwise.
  */
int ATC_SendReceive(ATC_HandleTypeDef* hAtc, const char* pCommand, uint32_t TxTimeout, char** ppResp, uint32_t RxTimeout, uint8_t Items, ...)
{
 80085d8:	b590      	push	{r4, r7, lr}
 80085da:	b08d      	sub	sp, #52	@ 0x34
 80085dc:	af00      	add	r7, sp, #0
 80085de:	60f8      	str	r0, [r7, #12]
 80085e0:	60b9      	str	r1, [r7, #8]
 80085e2:	607a      	str	r2, [r7, #4]
 80085e4:	603b      	str	r3, [r7, #0]
  int answer = ATC_RESP_NOT_FOUND;
 80085e6:	2300      	movs	r3, #0
 80085e8:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (ATC_TxBusy(hAtc) == true)
 80085ea:	68f8      	ldr	r0, [r7, #12]
 80085ec:	f7ff fdc4 	bl	8008178 <ATC_TxBusy>
 80085f0:	4603      	mov	r3, r0
 80085f2:	2b00      	cmp	r3, #0
 80085f4:	d002      	beq.n	80085fc <ATC_SendReceive+0x24>
  {
    return ATC_RESP_TX_BUSY;
 80085f6:	f06f 0303 	mvn.w	r3, #3
 80085fa:	e0c8      	b.n	800878e <ATC_SendReceive+0x1b6>
  }
  if (Items > ATC_RESP_MAX)
 80085fc:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 8008600:	2b05      	cmp	r3, #5
 8008602:	d902      	bls.n	800860a <ATC_SendReceive+0x32>
  {
    return ATC_RESP_ITEMS;
 8008604:	f06f 0304 	mvn.w	r3, #4
 8008608:	e0c1      	b.n	800878e <ATC_SendReceive+0x1b6>
  }
  ATC_CheckErrors(hAtc);
 800860a:	68f8      	ldr	r0, [r7, #12]
 800860c:	f7ff fe76 	bl	80082fc <ATC_CheckErrors>
  va_list args;
  va_start(args, Items);
 8008610:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8008614:	617b      	str	r3, [r7, #20]
  for (int i = 0; i < Items; i++)
 8008616:	2300      	movs	r3, #0
 8008618:	62bb      	str	r3, [r7, #40]	@ 0x28
 800861a:	e04b      	b.n	80086b4 <ATC_SendReceive+0xdc>
  {
    char *arg = va_arg(args, char*);
 800861c:	697b      	ldr	r3, [r7, #20]
 800861e:	1d1a      	adds	r2, r3, #4
 8008620:	617a      	str	r2, [r7, #20]
 8008622:	681b      	ldr	r3, [r3, #0]
 8008624:	61bb      	str	r3, [r7, #24]
    hAtc->ppResp[i] = (uint8_t*) ATC_Malloc(strlen(arg) + 1);
 8008626:	69b8      	ldr	r0, [r7, #24]
 8008628:	f7f7 fe42 	bl	80002b0 <strlen>
 800862c:	4603      	mov	r3, r0
 800862e:	3301      	adds	r3, #1
 8008630:	4618      	mov	r0, r3
 8008632:	f7ff fd29 	bl	8008088 <ATC_Malloc>
 8008636:	4601      	mov	r1, r0
 8008638:	68fb      	ldr	r3, [r7, #12]
 800863a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800863c:	320a      	adds	r2, #10
 800863e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    if (hAtc->ppResp[i] == NULL)
 8008642:	68fb      	ldr	r3, [r7, #12]
 8008644:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8008646:	320a      	adds	r2, #10
 8008648:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800864c:	2b00      	cmp	r3, #0
 800864e:	d119      	bne.n	8008684 <ATC_SendReceive+0xac>
    {
      for (uint8_t j = 0; j < i; j++)
 8008650:	2300      	movs	r3, #0
 8008652:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8008656:	e00d      	b.n	8008674 <ATC_SendReceive+0x9c>
      {
        ATC_Free((void**)&hAtc->ppResp[j]);
 8008658:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800865c:	330a      	adds	r3, #10
 800865e:	009b      	lsls	r3, r3, #2
 8008660:	68fa      	ldr	r2, [r7, #12]
 8008662:	4413      	add	r3, r2
 8008664:	4618      	mov	r0, r3
 8008666:	f7ff fd1f 	bl	80080a8 <ATC_Free>
      for (uint8_t j = 0; j < i; j++)
 800866a:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800866e:	3301      	adds	r3, #1
 8008670:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8008674:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8008678:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800867a:	429a      	cmp	r2, r3
 800867c:	dcec      	bgt.n	8008658 <ATC_SendReceive+0x80>
      }
      return ATC_RESP_MEM_ERROR;
 800867e:	f06f 0302 	mvn.w	r3, #2
 8008682:	e084      	b.n	800878e <ATC_SendReceive+0x1b6>
    }
    strcpy((char*) hAtc->ppResp[i], arg);
 8008684:	68fb      	ldr	r3, [r7, #12]
 8008686:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8008688:	320a      	adds	r2, #10
 800868a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800868e:	69b9      	ldr	r1, [r7, #24]
 8008690:	4618      	mov	r0, r3
 8008692:	f01c fe78 	bl	8025386 <strcpy>
    hAtc->ppResp[i][strlen(arg)] = 0;
 8008696:	68fb      	ldr	r3, [r7, #12]
 8008698:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800869a:	320a      	adds	r2, #10
 800869c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80086a0:	69b8      	ldr	r0, [r7, #24]
 80086a2:	f7f7 fe05 	bl	80002b0 <strlen>
 80086a6:	4603      	mov	r3, r0
 80086a8:	4423      	add	r3, r4
 80086aa:	2200      	movs	r2, #0
 80086ac:	701a      	strb	r2, [r3, #0]
  for (int i = 0; i < Items; i++)
 80086ae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80086b0:	3301      	adds	r3, #1
 80086b2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80086b4:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 80086b8:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80086ba:	429a      	cmp	r2, r3
 80086bc:	dbae      	blt.n	800861c <ATC_SendReceive+0x44>
  }
  va_end(args);

  do
  {
    ATC_RxFlush(hAtc);
 80086be:	68f8      	ldr	r0, [r7, #12]
 80086c0:	f7ff fd09 	bl	80080d6 <ATC_RxFlush>
    if (ATC_TxRaw(hAtc, (const uint8_t*)pCommand, strlen((char*)pCommand)) == false)
 80086c4:	68b8      	ldr	r0, [r7, #8]
 80086c6:	f7f7 fdf3 	bl	80002b0 <strlen>
 80086ca:	4603      	mov	r3, r0
 80086cc:	b29b      	uxth	r3, r3
 80086ce:	461a      	mov	r2, r3
 80086d0:	68b9      	ldr	r1, [r7, #8]
 80086d2:	68f8      	ldr	r0, [r7, #12]
 80086d4:	f7ff fd12 	bl	80080fc <ATC_TxRaw>
 80086d8:	4603      	mov	r3, r0
 80086da:	f083 0301 	eor.w	r3, r3, #1
 80086de:	b2db      	uxtb	r3, r3
 80086e0:	2b00      	cmp	r3, #0
 80086e2:	d003      	beq.n	80086ec <ATC_SendReceive+0x114>
    {
      answer = ATC_RESP_SENDING_ERROR;
 80086e4:	f04f 33ff 	mov.w	r3, #4294967295
 80086e8:	62fb      	str	r3, [r7, #44]	@ 0x2c
      break;
 80086ea:	e00d      	b.n	8008708 <ATC_SendReceive+0x130>
    }
    if (ATC_TxWait(hAtc, TxTimeout) == false)
 80086ec:	6879      	ldr	r1, [r7, #4]
 80086ee:	68f8      	ldr	r0, [r7, #12]
 80086f0:	f7ff fd5d 	bl	80081ae <ATC_TxWait>
 80086f4:	4603      	mov	r3, r0
 80086f6:	f083 0301 	eor.w	r3, r3, #1
 80086fa:	b2db      	uxtb	r3, r3
 80086fc:	2b00      	cmp	r3, #0
 80086fe:	d003      	beq.n	8008708 <ATC_SendReceive+0x130>
    {
      answer = ATC_RESP_SENDING_TIMEOUT;
 8008700:	f06f 0301 	mvn.w	r3, #1
 8008704:	62fb      	str	r3, [r7, #44]	@ 0x2c
      break;
 8008706:	bf00      	nop
    }

  } while (0);

  if ((Items > 0) && (answer == ATC_RESP_NOT_FOUND))
 8008708:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 800870c:	2b00      	cmp	r3, #0
 800870e:	d022      	beq.n	8008756 <ATC_SendReceive+0x17e>
 8008710:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008712:	2b00      	cmp	r3, #0
 8008714:	d11f      	bne.n	8008756 <ATC_SendReceive+0x17e>
  {
    uint32_t start_time = HAL_GetTick();
 8008716:	f7fa fb29 	bl	8002d6c <HAL_GetTick>
 800871a:	6238      	str	r0, [r7, #32]
    hAtc->RespCount = Items;
 800871c:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 8008720:	b29a      	uxth	r2, r3
 8008722:	68fb      	ldr	r3, [r7, #12]
 8008724:	82da      	strh	r2, [r3, #22]
    while (HAL_GetTick() - start_time < RxTimeout)
 8008726:	e00e      	b.n	8008746 <ATC_SendReceive+0x16e>
    {
      ATC_Delay(1);
 8008728:	2001      	movs	r0, #1
 800872a:	f000 f8b7 	bl	800889c <ATC_Delay>
      uint8_t found_index = ATC_CheckResponse(hAtc, ppResp);
 800872e:	6839      	ldr	r1, [r7, #0]
 8008730:	68f8      	ldr	r0, [r7, #12]
 8008732:	f7ff fdaf 	bl	8008294 <ATC_CheckResponse>
 8008736:	4603      	mov	r3, r0
 8008738:	77fb      	strb	r3, [r7, #31]
      if (found_index > 0)
 800873a:	7ffb      	ldrb	r3, [r7, #31]
 800873c:	2b00      	cmp	r3, #0
 800873e:	d002      	beq.n	8008746 <ATC_SendReceive+0x16e>
      {
        answer = found_index;
 8008740:	7ffb      	ldrb	r3, [r7, #31]
 8008742:	62fb      	str	r3, [r7, #44]	@ 0x2c
        break;
 8008744:	e007      	b.n	8008756 <ATC_SendReceive+0x17e>
    while (HAL_GetTick() - start_time < RxTimeout)
 8008746:	f7fa fb11 	bl	8002d6c <HAL_GetTick>
 800874a:	4602      	mov	r2, r0
 800874c:	6a3b      	ldr	r3, [r7, #32]
 800874e:	1ad3      	subs	r3, r2, r3
 8008750:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8008752:	429a      	cmp	r2, r3
 8008754:	d8e8      	bhi.n	8008728 <ATC_SendReceive+0x150>
      }
    }
  }
  hAtc->RespCount = 0;
 8008756:	68fb      	ldr	r3, [r7, #12]
 8008758:	2200      	movs	r2, #0
 800875a:	82da      	strh	r2, [r3, #22]
  for (uint8_t i = 0; i < Items; i++)
 800875c:	2300      	movs	r3, #0
 800875e:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8008762:	e00d      	b.n	8008780 <ATC_SendReceive+0x1a8>
  {
    ATC_Free((void**)&hAtc->ppResp[i]);
 8008764:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8008768:	330a      	adds	r3, #10
 800876a:	009b      	lsls	r3, r3, #2
 800876c:	68fa      	ldr	r2, [r7, #12]
 800876e:	4413      	add	r3, r2
 8008770:	4618      	mov	r0, r3
 8008772:	f7ff fc99 	bl	80080a8 <ATC_Free>
  for (uint8_t i = 0; i < Items; i++)
 8008776:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800877a:	3301      	adds	r3, #1
 800877c:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8008780:	f897 2026 	ldrb.w	r2, [r7, #38]	@ 0x26
 8008784:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 8008788:	429a      	cmp	r2, r3
 800878a:	d3eb      	bcc.n	8008764 <ATC_SendReceive+0x18c>
  }
  return answer;
 800878c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800878e:	4618      	mov	r0, r3
 8008790:	3734      	adds	r7, #52	@ 0x34
 8008792:	46bd      	mov	sp, r7
 8008794:	bd90      	pop	{r4, r7, pc}
	...

08008798 <ATC_IdleLineCallback>:
  * @param  hAtc: Pointer to the ATC handle.
  * @param  Len: Length of received data.
  * @retval None.
  */
inline void ATC_IdleLineCallback(ATC_HandleTypeDef* hAtc, uint16_t Len)
{
 8008798:	b580      	push	{r7, lr}
 800879a:	b084      	sub	sp, #16
 800879c:	af00      	add	r7, sp, #0
 800879e:	6078      	str	r0, [r7, #4]
 80087a0:	460b      	mov	r3, r1
 80087a2:	807b      	strh	r3, [r7, #2]
  if (Len > hAtc->Size - hAtc->RxIndex)
 80087a4:	887a      	ldrh	r2, [r7, #2]
 80087a6:	687b      	ldr	r3, [r7, #4]
 80087a8:	8a9b      	ldrh	r3, [r3, #20]
 80087aa:	4619      	mov	r1, r3
 80087ac:	687b      	ldr	r3, [r7, #4]
 80087ae:	8b1b      	ldrh	r3, [r3, #24]
 80087b0:	1acb      	subs	r3, r1, r3
 80087b2:	429a      	cmp	r2, r3
 80087b4:	dd05      	ble.n	80087c2 <ATC_IdleLineCallback+0x2a>
  {
    Len = hAtc->Size - hAtc->RxIndex;
 80087b6:	687b      	ldr	r3, [r7, #4]
 80087b8:	8a9a      	ldrh	r2, [r3, #20]
 80087ba:	687b      	ldr	r3, [r7, #4]
 80087bc:	8b1b      	ldrh	r3, [r3, #24]
 80087be:	1ad3      	subs	r3, r2, r3
 80087c0:	807b      	strh	r3, [r7, #2]
  }
  memcpy(&hAtc->pReadBuff[hAtc->RxIndex], hAtc->pRxBuff, Len);
 80087c2:	687b      	ldr	r3, [r7, #4]
 80087c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80087c6:	687a      	ldr	r2, [r7, #4]
 80087c8:	8b12      	ldrh	r2, [r2, #24]
 80087ca:	1898      	adds	r0, r3, r2
 80087cc:	687b      	ldr	r3, [r7, #4]
 80087ce:	69db      	ldr	r3, [r3, #28]
 80087d0:	887a      	ldrh	r2, [r7, #2]
 80087d2:	4619      	mov	r1, r3
 80087d4:	f01c fddf 	bl	8025396 <memcpy>
#if ATC_DEBUG == ATC_DEBUG_ENABLE
  dprintf("ATC<%s> - RX: ", hAtc->Name);
 80087d8:	687b      	ldr	r3, [r7, #4]
 80087da:	3304      	adds	r3, #4
 80087dc:	4619      	mov	r1, r3
 80087de:	482d      	ldr	r0, [pc, #180]	@ (8008894 <ATC_IdleLineCallback+0xfc>)
 80087e0:	f01c fb64 	bl	8024eac <iprintf>
  for (int i = 0; i < Len; i++)
 80087e4:	2300      	movs	r3, #0
 80087e6:	60fb      	str	r3, [r7, #12]
 80087e8:	e00a      	b.n	8008800 <ATC_IdleLineCallback+0x68>
  {
    dprintf("%c", hAtc->pRxBuff[i]);
 80087ea:	687b      	ldr	r3, [r7, #4]
 80087ec:	69da      	ldr	r2, [r3, #28]
 80087ee:	68fb      	ldr	r3, [r7, #12]
 80087f0:	4413      	add	r3, r2
 80087f2:	781b      	ldrb	r3, [r3, #0]
 80087f4:	4618      	mov	r0, r3
 80087f6:	f01c fb6b 	bl	8024ed0 <putchar>
  for (int i = 0; i < Len; i++)
 80087fa:	68fb      	ldr	r3, [r7, #12]
 80087fc:	3301      	adds	r3, #1
 80087fe:	60fb      	str	r3, [r7, #12]
 8008800:	887b      	ldrh	r3, [r7, #2]
 8008802:	68fa      	ldr	r2, [r7, #12]
 8008804:	429a      	cmp	r2, r3
 8008806:	dbf0      	blt.n	80087ea <ATC_IdleLineCallback+0x52>
  }
  dprintf("\r\n");
 8008808:	4823      	ldr	r0, [pc, #140]	@ (8008898 <ATC_IdleLineCallback+0x100>)
 800880a:	f01c fbbf 	bl	8024f8c <puts>
#endif
  hAtc->RxIndex += Len;
 800880e:	687b      	ldr	r3, [r7, #4]
 8008810:	8b1a      	ldrh	r2, [r3, #24]
 8008812:	887b      	ldrh	r3, [r7, #2]
 8008814:	4413      	add	r3, r2
 8008816:	b29a      	uxth	r2, r3
 8008818:	687b      	ldr	r3, [r7, #4]
 800881a:	831a      	strh	r2, [r3, #24]
  if (HAL_UARTEx_ReceiveToIdle_DMA(hAtc->hUart, hAtc->pRxBuff, hAtc->Size) == HAL_OK)
 800881c:	687b      	ldr	r3, [r7, #4]
 800881e:	6818      	ldr	r0, [r3, #0]
 8008820:	687b      	ldr	r3, [r7, #4]
 8008822:	69d9      	ldr	r1, [r3, #28]
 8008824:	687b      	ldr	r3, [r7, #4]
 8008826:	8a9b      	ldrh	r3, [r3, #20]
 8008828:	461a      	mov	r2, r3
 800882a:	f7fe f9a9 	bl	8006b80 <HAL_UARTEx_ReceiveToIdle_DMA>
 800882e:	4603      	mov	r3, r0
 8008830:	2b00      	cmp	r3, #0
 8008832:	d10c      	bne.n	800884e <ATC_IdleLineCallback+0xb6>
  {
    __HAL_DMA_DISABLE_IT(hAtc->hUart->hdmarx, DMA_IT_HT);
 8008834:	687b      	ldr	r3, [r7, #4]
 8008836:	681b      	ldr	r3, [r3, #0]
 8008838:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800883a:	681b      	ldr	r3, [r3, #0]
 800883c:	681a      	ldr	r2, [r3, #0]
 800883e:	687b      	ldr	r3, [r7, #4]
 8008840:	681b      	ldr	r3, [r3, #0]
 8008842:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008844:	681b      	ldr	r3, [r3, #0]
 8008846:	f022 0208 	bic.w	r2, r2, #8
 800884a:	601a      	str	r2, [r3, #0]
    __HAL_UART_CLEAR_FLAG(hAtc->hUart, 0xFFFFFFFF);
    HAL_UART_AbortReceive(hAtc->hUart);
    HAL_UARTEx_ReceiveToIdle_DMA(hAtc->hUart, hAtc->pRxBuff, hAtc->Size);
    __HAL_DMA_DISABLE_IT(hAtc->hUart->hdmarx, DMA_IT_HT);
  }
}
 800884c:	e01e      	b.n	800888c <ATC_IdleLineCallback+0xf4>
    __HAL_UART_CLEAR_FLAG(hAtc->hUart, 0xFFFFFFFF);
 800884e:	687b      	ldr	r3, [r7, #4]
 8008850:	681b      	ldr	r3, [r3, #0]
 8008852:	681b      	ldr	r3, [r3, #0]
 8008854:	2200      	movs	r2, #0
 8008856:	601a      	str	r2, [r3, #0]
    HAL_UART_AbortReceive(hAtc->hUart);
 8008858:	687b      	ldr	r3, [r7, #4]
 800885a:	681b      	ldr	r3, [r3, #0]
 800885c:	4618      	mov	r0, r3
 800885e:	f7fe fa54 	bl	8006d0a <HAL_UART_AbortReceive>
    HAL_UARTEx_ReceiveToIdle_DMA(hAtc->hUart, hAtc->pRxBuff, hAtc->Size);
 8008862:	687b      	ldr	r3, [r7, #4]
 8008864:	6818      	ldr	r0, [r3, #0]
 8008866:	687b      	ldr	r3, [r7, #4]
 8008868:	69d9      	ldr	r1, [r3, #28]
 800886a:	687b      	ldr	r3, [r7, #4]
 800886c:	8a9b      	ldrh	r3, [r3, #20]
 800886e:	461a      	mov	r2, r3
 8008870:	f7fe f986 	bl	8006b80 <HAL_UARTEx_ReceiveToIdle_DMA>
    __HAL_DMA_DISABLE_IT(hAtc->hUart->hdmarx, DMA_IT_HT);
 8008874:	687b      	ldr	r3, [r7, #4]
 8008876:	681b      	ldr	r3, [r3, #0]
 8008878:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800887a:	681b      	ldr	r3, [r3, #0]
 800887c:	681a      	ldr	r2, [r3, #0]
 800887e:	687b      	ldr	r3, [r7, #4]
 8008880:	681b      	ldr	r3, [r3, #0]
 8008882:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008884:	681b      	ldr	r3, [r3, #0]
 8008886:	f022 0208 	bic.w	r2, r2, #8
 800888a:	601a      	str	r2, [r3, #0]
}
 800888c:	bf00      	nop
 800888e:	3710      	adds	r7, #16
 8008890:	46bd      	mov	sp, r7
 8008892:	bd80      	pop	{r7, pc}
 8008894:	08027508 	.word	0x08027508
 8008898:	08027460 	.word	0x08027460

0800889c <ATC_Delay>:
  * @brief  Delay function.
  * @param  Delay: delay in milisecond..
  * @retval None.
  */
void ATC_Delay(uint32_t Delay)
{
 800889c:	b580      	push	{r7, lr}
 800889e:	b082      	sub	sp, #8
 80088a0:	af00      	add	r7, sp, #0
 80088a2:	6078      	str	r0, [r7, #4]
#if ATC_RTOS == ATC_RTOS_DISABLE
  HAL_Delay(Delay);
 80088a4:	6878      	ldr	r0, [r7, #4]
 80088a6:	f7fa fa6d 	bl	8002d84 <HAL_Delay>
  uint32_t d = (TX_TIMER_TICKS_PER_SECOND * Delay) / 1000;
  if (d == 0)
    d = 1;
  tx_thread_sleep(d);
#endif
}
 80088aa:	bf00      	nop
 80088ac:	3708      	adds	r7, #8
 80088ae:	46bd      	mov	sp, r7
 80088b0:	bd80      	pop	{r7, pc}

080088b2 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80088b2:	b580      	push	{r7, lr}
 80088b4:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80088b6:	f005 ff8f 	bl	800e7d8 <touchgfx_components_init>
  touchgfx_init();
 80088ba:	f005 ff63 	bl	800e784 <touchgfx_init>
}
 80088be:	bf00      	nop
 80088c0:	bd80      	pop	{r7, pc}

080088c2 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 80088c2:	b580      	push	{r7, lr}
 80088c4:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80088c6:	f005 ff8f 	bl	800e7e8 <touchgfx_taskEntry>
}
 80088ca:	bf00      	nop
 80088cc:	bd80      	pop	{r7, pc}
	...

080088d0 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 80088d0:	b480      	push	{r7}
 80088d2:	b083      	sub	sp, #12
 80088d4:	af00      	add	r7, sp, #0
 80088d6:	6078      	str	r0, [r7, #4]
    {
 80088d8:	4a04      	ldr	r2, [pc, #16]	@ (80088ec <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 80088da:	687b      	ldr	r3, [r7, #4]
 80088dc:	601a      	str	r2, [r3, #0]
    }
 80088de:	687b      	ldr	r3, [r7, #4]
 80088e0:	4618      	mov	r0, r3
 80088e2:	370c      	adds	r7, #12
 80088e4:	46bd      	mov	sp, r7
 80088e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088ea:	4770      	bx	lr
 80088ec:	08028934 	.word	0x08028934

080088f0 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 80088f0:	b580      	push	{r7, lr}
 80088f2:	b082      	sub	sp, #8
 80088f4:	af00      	add	r7, sp, #0
 80088f6:	6078      	str	r0, [r7, #4]
    }
 80088f8:	6878      	ldr	r0, [r7, #4]
 80088fa:	f7ff ffe9 	bl	80088d0 <_ZN8touchgfx12FontProviderD1Ev>
 80088fe:	2104      	movs	r1, #4
 8008900:	6878      	ldr	r0, [r7, #4]
 8008902:	f01b fa88 	bl	8023e16 <_ZdlPvj>
 8008906:	687b      	ldr	r3, [r7, #4]
 8008908:	4618      	mov	r0, r3
 800890a:	3708      	adds	r7, #8
 800890c:	46bd      	mov	sp, r7
 800890e:	bd80      	pop	{r7, pc}

08008910 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8008910:	b580      	push	{r7, lr}
 8008912:	b082      	sub	sp, #8
 8008914:	af00      	add	r7, sp, #0
 8008916:	6078      	str	r0, [r7, #4]
 8008918:	460b      	mov	r3, r1
 800891a:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800891c:	887b      	ldrh	r3, [r7, #2]
 800891e:	2b02      	cmp	r3, #2
 8008920:	d010      	beq.n	8008944 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 8008922:	2b02      	cmp	r3, #2
 8008924:	dc13      	bgt.n	800894e <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 8008926:	2b00      	cmp	r3, #0
 8008928:	d002      	beq.n	8008930 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 800892a:	2b01      	cmp	r3, #1
 800892c:	d005      	beq.n	800893a <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 800892e:	e00e      	b.n	800894e <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8008930:	f004 fb62 	bl	800cff8 <_ZN17TypedTextDatabase8getFontsEv>
 8008934:	4603      	mov	r3, r0
 8008936:	681b      	ldr	r3, [r3, #0]
 8008938:	e00a      	b.n	8008950 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800893a:	f004 fb5d 	bl	800cff8 <_ZN17TypedTextDatabase8getFontsEv>
 800893e:	4603      	mov	r3, r0
 8008940:	685b      	ldr	r3, [r3, #4]
 8008942:	e005      	b.n	8008950 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8008944:	f004 fb58 	bl	800cff8 <_ZN17TypedTextDatabase8getFontsEv>
 8008948:	4603      	mov	r3, r0
 800894a:	689b      	ldr	r3, [r3, #8]
 800894c:	e000      	b.n	8008950 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 800894e:	2300      	movs	r3, #0
    }
}
 8008950:	4618      	mov	r0, r3
 8008952:	3708      	adds	r7, #8
 8008954:	46bd      	mov	sp, r7
 8008956:	bd80      	pop	{r7, pc}

08008958 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8008958:	b580      	push	{r7, lr}
 800895a:	b082      	sub	sp, #8
 800895c:	af00      	add	r7, sp, #0
 800895e:	6078      	str	r0, [r7, #4]
 8008960:	4a05      	ldr	r2, [pc, #20]	@ (8008978 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8008962:	687b      	ldr	r3, [r7, #4]
 8008964:	601a      	str	r2, [r3, #0]
 8008966:	687b      	ldr	r3, [r7, #4]
 8008968:	4618      	mov	r0, r3
 800896a:	f7ff ffb1 	bl	80088d0 <_ZN8touchgfx12FontProviderD1Ev>
 800896e:	687b      	ldr	r3, [r7, #4]
 8008970:	4618      	mov	r0, r3
 8008972:	3708      	adds	r7, #8
 8008974:	46bd      	mov	sp, r7
 8008976:	bd80      	pop	{r7, pc}
 8008978:	08028920 	.word	0x08028920

0800897c <_ZN23ApplicationFontProviderD0Ev>:
 800897c:	b580      	push	{r7, lr}
 800897e:	b082      	sub	sp, #8
 8008980:	af00      	add	r7, sp, #0
 8008982:	6078      	str	r0, [r7, #4]
 8008984:	6878      	ldr	r0, [r7, #4]
 8008986:	f7ff ffe7 	bl	8008958 <_ZN23ApplicationFontProviderD1Ev>
 800898a:	2104      	movs	r1, #4
 800898c:	6878      	ldr	r0, [r7, #4]
 800898e:	f01b fa42 	bl	8023e16 <_ZdlPvj>
 8008992:	687b      	ldr	r3, [r7, #4]
 8008994:	4618      	mov	r0, r3
 8008996:	3708      	adds	r7, #8
 8008998:	46bd      	mov	sp, r7
 800899a:	bd80      	pop	{r7, pc}

0800899c <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800899c:	b480      	push	{r7}
 800899e:	b083      	sub	sp, #12
 80089a0:	af00      	add	r7, sp, #0
 80089a2:	6078      	str	r0, [r7, #4]
    {
 80089a4:	4a04      	ldr	r2, [pc, #16]	@ (80089b8 <_ZN8touchgfx4FontD1Ev+0x1c>)
 80089a6:	687b      	ldr	r3, [r7, #4]
 80089a8:	601a      	str	r2, [r3, #0]
    }
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	4618      	mov	r0, r3
 80089ae:	370c      	adds	r7, #12
 80089b0:	46bd      	mov	sp, r7
 80089b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089b6:	4770      	bx	lr
 80089b8:	08029024 	.word	0x08029024

080089bc <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 80089bc:	b580      	push	{r7, lr}
 80089be:	b082      	sub	sp, #8
 80089c0:	af00      	add	r7, sp, #0
 80089c2:	6078      	str	r0, [r7, #4]
    }
 80089c4:	6878      	ldr	r0, [r7, #4]
 80089c6:	f7ff ffe9 	bl	800899c <_ZN8touchgfx4FontD1Ev>
 80089ca:	2114      	movs	r1, #20
 80089cc:	6878      	ldr	r0, [r7, #4]
 80089ce:	f01b fa22 	bl	8023e16 <_ZdlPvj>
 80089d2:	687b      	ldr	r3, [r7, #4]
 80089d4:	4618      	mov	r0, r3
 80089d6:	3708      	adds	r7, #8
 80089d8:	46bd      	mov	sp, r7
 80089da:	bd80      	pop	{r7, pc}

080089dc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80089dc:	b590      	push	{r4, r7, lr}
 80089de:	b087      	sub	sp, #28
 80089e0:	af00      	add	r7, sp, #0
 80089e2:	6078      	str	r0, [r7, #4]
 80089e4:	460b      	mov	r3, r1
 80089e6:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 80089e8:	887b      	ldrh	r3, [r7, #2]
 80089ea:	2b00      	cmp	r3, #0
 80089ec:	d101      	bne.n	80089f2 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 80089ee:	2300      	movs	r3, #0
 80089f0:	e010      	b.n	8008a14 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 80089f2:	2300      	movs	r3, #0
 80089f4:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 80089f6:	2300      	movs	r3, #0
 80089f8:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80089fa:	687b      	ldr	r3, [r7, #4]
 80089fc:	681b      	ldr	r3, [r3, #0]
 80089fe:	3308      	adds	r3, #8
 8008a00:	681c      	ldr	r4, [r3, #0]
 8008a02:	f107 030f 	add.w	r3, r7, #15
 8008a06:	f107 0210 	add.w	r2, r7, #16
 8008a0a:	8879      	ldrh	r1, [r7, #2]
 8008a0c:	6878      	ldr	r0, [r7, #4]
 8008a0e:	47a0      	blx	r4
 8008a10:	6178      	str	r0, [r7, #20]
        return glyph;
 8008a12:	697b      	ldr	r3, [r7, #20]
    }
 8008a14:	4618      	mov	r0, r3
 8008a16:	371c      	adds	r7, #28
 8008a18:	46bd      	mov	sp, r7
 8008a1a:	bd90      	pop	{r4, r7, pc}

08008a1c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8008a1c:	b480      	push	{r7}
 8008a1e:	b083      	sub	sp, #12
 8008a20:	af00      	add	r7, sp, #0
 8008a22:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 8008a24:	687b      	ldr	r3, [r7, #4]
 8008a26:	89db      	ldrh	r3, [r3, #14]
    }
 8008a28:	4618      	mov	r0, r3
 8008a2a:	370c      	adds	r7, #12
 8008a2c:	46bd      	mov	sp, r7
 8008a2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a32:	4770      	bx	lr

08008a34 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8008a34:	b480      	push	{r7}
 8008a36:	b083      	sub	sp, #12
 8008a38:	af00      	add	r7, sp, #0
 8008a3a:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8008a3c:	687b      	ldr	r3, [r7, #4]
 8008a3e:	8a1b      	ldrh	r3, [r3, #16]
    }
 8008a40:	4618      	mov	r0, r3
 8008a42:	370c      	adds	r7, #12
 8008a44:	46bd      	mov	sp, r7
 8008a46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a4a:	4770      	bx	lr

08008a4c <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 8008a4c:	b480      	push	{r7}
 8008a4e:	b083      	sub	sp, #12
 8008a50:	af00      	add	r7, sp, #0
 8008a52:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 8008a54:	687b      	ldr	r3, [r7, #4]
 8008a56:	88db      	ldrh	r3, [r3, #6]
    }
 8008a58:	4618      	mov	r0, r3
 8008a5a:	370c      	adds	r7, #12
 8008a5c:	46bd      	mov	sp, r7
 8008a5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a62:	4770      	bx	lr

08008a64 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 8008a64:	b480      	push	{r7}
 8008a66:	b083      	sub	sp, #12
 8008a68:	af00      	add	r7, sp, #0
 8008a6a:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8008a6c:	687b      	ldr	r3, [r7, #4]
 8008a6e:	889b      	ldrh	r3, [r3, #4]
    }
 8008a70:	4618      	mov	r0, r3
 8008a72:	370c      	adds	r7, #12
 8008a74:	46bd      	mov	sp, r7
 8008a76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a7a:	4770      	bx	lr

08008a7c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 8008a7c:	b480      	push	{r7}
 8008a7e:	b083      	sub	sp, #12
 8008a80:	af00      	add	r7, sp, #0
 8008a82:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8008a84:	687b      	ldr	r3, [r7, #4]
 8008a86:	7a9b      	ldrb	r3, [r3, #10]
 8008a88:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8008a8c:	b2db      	uxtb	r3, r3
    }
 8008a8e:	4618      	mov	r0, r3
 8008a90:	370c      	adds	r7, #12
 8008a92:	46bd      	mov	sp, r7
 8008a94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a98:	4770      	bx	lr

08008a9a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 8008a9a:	b480      	push	{r7}
 8008a9c:	b083      	sub	sp, #12
 8008a9e:	af00      	add	r7, sp, #0
 8008aa0:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 8008aa2:	687b      	ldr	r3, [r7, #4]
 8008aa4:	7a9b      	ldrb	r3, [r3, #10]
 8008aa6:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8008aaa:	b2db      	uxtb	r3, r3
    }
 8008aac:	4618      	mov	r0, r3
 8008aae:	370c      	adds	r7, #12
 8008ab0:	46bd      	mov	sp, r7
 8008ab2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ab6:	4770      	bx	lr

08008ab8 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8008ab8:	b580      	push	{r7, lr}
 8008aba:	b082      	sub	sp, #8
 8008abc:	af00      	add	r7, sp, #0
 8008abe:	6078      	str	r0, [r7, #4]
 8008ac0:	4a05      	ldr	r2, [pc, #20]	@ (8008ad8 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8008ac2:	687b      	ldr	r3, [r7, #4]
 8008ac4:	601a      	str	r2, [r3, #0]
 8008ac6:	687b      	ldr	r3, [r7, #4]
 8008ac8:	4618      	mov	r0, r3
 8008aca:	f7ff ff67 	bl	800899c <_ZN8touchgfx4FontD1Ev>
 8008ace:	687b      	ldr	r3, [r7, #4]
 8008ad0:	4618      	mov	r0, r3
 8008ad2:	3708      	adds	r7, #8
 8008ad4:	46bd      	mov	sp, r7
 8008ad6:	bd80      	pop	{r7, pc}
 8008ad8:	08029ce8 	.word	0x08029ce8

08008adc <_ZN8touchgfx9ConstFontD0Ev>:
 8008adc:	b580      	push	{r7, lr}
 8008ade:	b082      	sub	sp, #8
 8008ae0:	af00      	add	r7, sp, #0
 8008ae2:	6078      	str	r0, [r7, #4]
 8008ae4:	6878      	ldr	r0, [r7, #4]
 8008ae6:	f7ff ffe7 	bl	8008ab8 <_ZN8touchgfx9ConstFontD1Ev>
 8008aea:	211c      	movs	r1, #28
 8008aec:	6878      	ldr	r0, [r7, #4]
 8008aee:	f01b f992 	bl	8023e16 <_ZdlPvj>
 8008af2:	687b      	ldr	r3, [r7, #4]
 8008af4:	4618      	mov	r0, r3
 8008af6:	3708      	adds	r7, #8
 8008af8:	46bd      	mov	sp, r7
 8008afa:	bd80      	pop	{r7, pc}

08008afc <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 8008afc:	b580      	push	{r7, lr}
 8008afe:	b082      	sub	sp, #8
 8008b00:	af00      	add	r7, sp, #0
 8008b02:	6078      	str	r0, [r7, #4]
 8008b04:	4a05      	ldr	r2, [pc, #20]	@ (8008b1c <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8008b06:	687b      	ldr	r3, [r7, #4]
 8008b08:	601a      	str	r2, [r3, #0]
 8008b0a:	687b      	ldr	r3, [r7, #4]
 8008b0c:	4618      	mov	r0, r3
 8008b0e:	f7ff ffd3 	bl	8008ab8 <_ZN8touchgfx9ConstFontD1Ev>
 8008b12:	687b      	ldr	r3, [r7, #4]
 8008b14:	4618      	mov	r0, r3
 8008b16:	3708      	adds	r7, #8
 8008b18:	46bd      	mov	sp, r7
 8008b1a:	bd80      	pop	{r7, pc}
 8008b1c:	08028958 	.word	0x08028958

08008b20 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8008b20:	b580      	push	{r7, lr}
 8008b22:	b082      	sub	sp, #8
 8008b24:	af00      	add	r7, sp, #0
 8008b26:	6078      	str	r0, [r7, #4]
 8008b28:	6878      	ldr	r0, [r7, #4]
 8008b2a:	f7ff ffe7 	bl	8008afc <_ZN8touchgfx13GeneratedFontD1Ev>
 8008b2e:	212c      	movs	r1, #44	@ 0x2c
 8008b30:	6878      	ldr	r0, [r7, #4]
 8008b32:	f01b f970 	bl	8023e16 <_ZdlPvj>
 8008b36:	687b      	ldr	r3, [r7, #4]
 8008b38:	4618      	mov	r0, r3
 8008b3a:	3708      	adds	r7, #8
 8008b3c:	46bd      	mov	sp, r7
 8008b3e:	bd80      	pop	{r7, pc}

08008b40 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 8008b40:	b480      	push	{r7}
 8008b42:	b083      	sub	sp, #12
 8008b44:	af00      	add	r7, sp, #0
 8008b46:	6078      	str	r0, [r7, #4]
    {
 8008b48:	4a04      	ldr	r2, [pc, #16]	@ (8008b5c <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 8008b4a:	687b      	ldr	r3, [r7, #4]
 8008b4c:	601a      	str	r2, [r3, #0]
    }
 8008b4e:	687b      	ldr	r3, [r7, #4]
 8008b50:	4618      	mov	r0, r3
 8008b52:	370c      	adds	r7, #12
 8008b54:	46bd      	mov	sp, r7
 8008b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b5a:	4770      	bx	lr
 8008b5c:	08028948 	.word	0x08028948

08008b60 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8008b60:	b580      	push	{r7, lr}
 8008b62:	b082      	sub	sp, #8
 8008b64:	af00      	add	r7, sp, #0
 8008b66:	6078      	str	r0, [r7, #4]
    }
 8008b68:	6878      	ldr	r0, [r7, #4]
 8008b6a:	f7ff ffe9 	bl	8008b40 <_ZN8touchgfx9TypedTextD1Ev>
 8008b6e:	2108      	movs	r1, #8
 8008b70:	6878      	ldr	r0, [r7, #4]
 8008b72:	f01b f950 	bl	8023e16 <_ZdlPvj>
 8008b76:	687b      	ldr	r3, [r7, #4]
 8008b78:	4618      	mov	r0, r3
 8008b7a:	3708      	adds	r7, #8
 8008b7c:	46bd      	mov	sp, r7
 8008b7e:	bd80      	pop	{r7, pc}

08008b80 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 8008b80:	b480      	push	{r7}
 8008b82:	b083      	sub	sp, #12
 8008b84:	af00      	add	r7, sp, #0
 8008b86:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 8008b88:	687b      	ldr	r3, [r7, #4]
 8008b8a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 8008b8c:	4618      	mov	r0, r3
 8008b8e:	370c      	adds	r7, #12
 8008b90:	46bd      	mov	sp, r7
 8008b92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b96:	4770      	bx	lr

08008b98 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 8008b98:	b480      	push	{r7}
 8008b9a:	b083      	sub	sp, #12
 8008b9c:	af00      	add	r7, sp, #0
 8008b9e:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 8008ba0:	687b      	ldr	r3, [r7, #4]
 8008ba2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 8008ba4:	4618      	mov	r0, r3
 8008ba6:	370c      	adds	r7, #12
 8008ba8:	46bd      	mov	sp, r7
 8008baa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bae:	4770      	bx	lr

08008bb0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8008bb0:	b580      	push	{r7, lr}
 8008bb2:	b08e      	sub	sp, #56	@ 0x38
 8008bb4:	af0a      	add	r7, sp, #40	@ 0x28
 8008bb6:	60f8      	str	r0, [r7, #12]
 8008bb8:	60b9      	str	r1, [r7, #8]
 8008bba:	4611      	mov	r1, r2
 8008bbc:	461a      	mov	r2, r3
 8008bbe:	460b      	mov	r3, r1
 8008bc0:	80fb      	strh	r3, [r7, #6]
 8008bc2:	4613      	mov	r3, r2
 8008bc4:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 8008bc6:	68f8      	ldr	r0, [r7, #12]
 8008bc8:	88b9      	ldrh	r1, [r7, #4]
 8008bca:	88fa      	ldrh	r2, [r7, #6]
 8008bcc:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8008bd0:	9308      	str	r3, [sp, #32]
 8008bd2:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8008bd4:	9307      	str	r3, [sp, #28]
 8008bd6:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 8008bda:	9306      	str	r3, [sp, #24]
 8008bdc:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8008be0:	9305      	str	r3, [sp, #20]
 8008be2:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8008be6:	9304      	str	r3, [sp, #16]
 8008be8:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8008bec:	9303      	str	r3, [sp, #12]
 8008bee:	f897 3020 	ldrb.w	r3, [r7, #32]
 8008bf2:	9302      	str	r3, [sp, #8]
 8008bf4:	7f3b      	ldrb	r3, [r7, #28]
 8008bf6:	9301      	str	r3, [sp, #4]
 8008bf8:	8b3b      	ldrh	r3, [r7, #24]
 8008bfa:	9300      	str	r3, [sp, #0]
 8008bfc:	460b      	mov	r3, r1
 8008bfe:	68b9      	ldr	r1, [r7, #8]
 8008c00:	f00b fb76 	bl	80142f0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8008c04:	4a09      	ldr	r2, [pc, #36]	@ (8008c2c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 8008c06:	68fb      	ldr	r3, [r7, #12]
 8008c08:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 8008c0a:	68fb      	ldr	r3, [r7, #12]
 8008c0c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008c0e:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 8008c10:	68fb      	ldr	r3, [r7, #12]
 8008c12:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8008c14:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 8008c16:	68fb      	ldr	r3, [r7, #12]
 8008c18:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8008c1a:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 8008c1c:	68fb      	ldr	r3, [r7, #12]
 8008c1e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8008c20:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 8008c22:	68fb      	ldr	r3, [r7, #12]
 8008c24:	4618      	mov	r0, r3
 8008c26:	3710      	adds	r7, #16
 8008c28:	46bd      	mov	sp, r7
 8008c2a:	bd80      	pop	{r7, pc}
 8008c2c:	08028958 	.word	0x08028958

08008c30 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8008c30:	b480      	push	{r7}
 8008c32:	b085      	sub	sp, #20
 8008c34:	af00      	add	r7, sp, #0
 8008c36:	6078      	str	r0, [r7, #4]
 8008c38:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8008c3a:	687b      	ldr	r3, [r7, #4]
 8008c3c:	69db      	ldr	r3, [r3, #28]
 8008c3e:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8008c40:	683b      	ldr	r3, [r7, #0]
 8008c42:	889b      	ldrh	r3, [r3, #4]
 8008c44:	0adb      	lsrs	r3, r3, #11
 8008c46:	b29b      	uxth	r3, r3
 8008c48:	009b      	lsls	r3, r3, #2
 8008c4a:	68fa      	ldr	r2, [r7, #12]
 8008c4c:	4413      	add	r3, r2
 8008c4e:	681a      	ldr	r2, [r3, #0]
 8008c50:	683b      	ldr	r3, [r7, #0]
 8008c52:	681b      	ldr	r3, [r3, #0]
 8008c54:	4413      	add	r3, r2
}
 8008c56:	4618      	mov	r0, r3
 8008c58:	3714      	adds	r7, #20
 8008c5a:	46bd      	mov	sp, r7
 8008c5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c60:	4770      	bx	lr

08008c62 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8008c62:	b480      	push	{r7}
 8008c64:	b089      	sub	sp, #36	@ 0x24
 8008c66:	af00      	add	r7, sp, #0
 8008c68:	60f8      	str	r0, [r7, #12]
 8008c6a:	460b      	mov	r3, r1
 8008c6c:	607a      	str	r2, [r7, #4]
 8008c6e:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8008c70:	687b      	ldr	r3, [r7, #4]
 8008c72:	2b00      	cmp	r3, #0
 8008c74:	d003      	beq.n	8008c7e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8008c76:	687b      	ldr	r3, [r7, #4]
 8008c78:	7b1b      	ldrb	r3, [r3, #12]
 8008c7a:	2b00      	cmp	r3, #0
 8008c7c:	d101      	bne.n	8008c82 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8008c7e:	2300      	movs	r3, #0
 8008c80:	e031      	b.n	8008ce6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8008c82:	68fb      	ldr	r3, [r7, #12]
 8008c84:	6a1a      	ldr	r2, [r3, #32]
 8008c86:	687b      	ldr	r3, [r7, #4]
 8008c88:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8008c8a:	697b      	ldr	r3, [r7, #20]
 8008c8c:	7b5b      	ldrb	r3, [r3, #13]
 8008c8e:	021b      	lsls	r3, r3, #8
 8008c90:	b21b      	sxth	r3, r3
 8008c92:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8008c96:	b219      	sxth	r1, r3
 8008c98:	697b      	ldr	r3, [r7, #20]
 8008c9a:	7adb      	ldrb	r3, [r3, #11]
 8008c9c:	b21b      	sxth	r3, r3
 8008c9e:	430b      	orrs	r3, r1
 8008ca0:	b21b      	sxth	r3, r3
 8008ca2:	b29b      	uxth	r3, r3
 8008ca4:	009b      	lsls	r3, r3, #2
 8008ca6:	4413      	add	r3, r2
 8008ca8:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8008caa:	687b      	ldr	r3, [r7, #4]
 8008cac:	7b1b      	ldrb	r3, [r3, #12]
 8008cae:	837b      	strh	r3, [r7, #26]
 8008cb0:	e013      	b.n	8008cda <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 8008cb2:	69fb      	ldr	r3, [r7, #28]
 8008cb4:	881b      	ldrh	r3, [r3, #0]
 8008cb6:	897a      	ldrh	r2, [r7, #10]
 8008cb8:	429a      	cmp	r2, r3
 8008cba:	d103      	bne.n	8008cc4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 8008cbc:	69fb      	ldr	r3, [r7, #28]
 8008cbe:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8008cc2:	e010      	b.n	8008ce6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8008cc4:	69fb      	ldr	r3, [r7, #28]
 8008cc6:	881b      	ldrh	r3, [r3, #0]
 8008cc8:	897a      	ldrh	r2, [r7, #10]
 8008cca:	429a      	cmp	r2, r3
 8008ccc:	d309      	bcc.n	8008ce2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8008cce:	8b7b      	ldrh	r3, [r7, #26]
 8008cd0:	3b01      	subs	r3, #1
 8008cd2:	837b      	strh	r3, [r7, #26]
 8008cd4:	69fb      	ldr	r3, [r7, #28]
 8008cd6:	3304      	adds	r3, #4
 8008cd8:	61fb      	str	r3, [r7, #28]
 8008cda:	8b7b      	ldrh	r3, [r7, #26]
 8008cdc:	2b00      	cmp	r3, #0
 8008cde:	d1e8      	bne.n	8008cb2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 8008ce0:	e000      	b.n	8008ce4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 8008ce2:	bf00      	nop
        }
    }
    return 0;
 8008ce4:	2300      	movs	r3, #0
}
 8008ce6:	4618      	mov	r0, r3
 8008ce8:	3724      	adds	r7, #36	@ 0x24
 8008cea:	46bd      	mov	sp, r7
 8008cec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cf0:	4770      	bx	lr
	...

08008cf4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008cf4:	b580      	push	{r7, lr}
 8008cf6:	af00      	add	r7, sp, #0
 8008cf8:	4801      	ldr	r0, [pc, #4]	@ (8008d00 <__tcf_0+0xc>)
 8008cfa:	f7ff feff 	bl	8008afc <_ZN8touchgfx13GeneratedFontD1Ev>
 8008cfe:	bd80      	pop	{r7, pc}
 8008d00:	200005d0 	.word	0x200005d0

08008d04 <_Z23getFont_verdana_10_4bppv>:
{
 8008d04:	b580      	push	{r7, lr}
 8008d06:	b08e      	sub	sp, #56	@ 0x38
 8008d08:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008d0a:	4b21      	ldr	r3, [pc, #132]	@ (8008d90 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8008d0c:	681b      	ldr	r3, [r3, #0]
 8008d0e:	f3bf 8f5b 	dmb	ish
 8008d12:	f003 0301 	and.w	r3, r3, #1
 8008d16:	2b00      	cmp	r3, #0
 8008d18:	bf0c      	ite	eq
 8008d1a:	2301      	moveq	r3, #1
 8008d1c:	2300      	movne	r3, #0
 8008d1e:	b2db      	uxtb	r3, r3
 8008d20:	2b00      	cmp	r3, #0
 8008d22:	d030      	beq.n	8008d86 <_Z23getFont_verdana_10_4bppv+0x82>
 8008d24:	481a      	ldr	r0, [pc, #104]	@ (8008d90 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8008d26:	f01b f878 	bl	8023e1a <__cxa_guard_acquire>
 8008d2a:	4603      	mov	r3, r0
 8008d2c:	2b00      	cmp	r3, #0
 8008d2e:	bf14      	ite	ne
 8008d30:	2301      	movne	r3, #1
 8008d32:	2300      	moveq	r3, #0
 8008d34:	b2db      	uxtb	r3, r3
 8008d36:	2b00      	cmp	r3, #0
 8008d38:	d025      	beq.n	8008d86 <_Z23getFont_verdana_10_4bppv+0x82>
 8008d3a:	2300      	movs	r3, #0
 8008d3c:	930c      	str	r3, [sp, #48]	@ 0x30
 8008d3e:	2300      	movs	r3, #0
 8008d40:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008d42:	2300      	movs	r3, #0
 8008d44:	930a      	str	r3, [sp, #40]	@ 0x28
 8008d46:	233f      	movs	r3, #63	@ 0x3f
 8008d48:	9309      	str	r3, [sp, #36]	@ 0x24
 8008d4a:	4b12      	ldr	r3, [pc, #72]	@ (8008d94 <_Z23getFont_verdana_10_4bppv+0x90>)
 8008d4c:	9308      	str	r3, [sp, #32]
 8008d4e:	4b12      	ldr	r3, [pc, #72]	@ (8008d98 <_Z23getFont_verdana_10_4bppv+0x94>)
 8008d50:	9307      	str	r3, [sp, #28]
 8008d52:	2300      	movs	r3, #0
 8008d54:	9306      	str	r3, [sp, #24]
 8008d56:	2300      	movs	r3, #0
 8008d58:	9305      	str	r3, [sp, #20]
 8008d5a:	2301      	movs	r3, #1
 8008d5c:	9304      	str	r3, [sp, #16]
 8008d5e:	2304      	movs	r3, #4
 8008d60:	9303      	str	r3, [sp, #12]
 8008d62:	2300      	movs	r3, #0
 8008d64:	9302      	str	r3, [sp, #8]
 8008d66:	2300      	movs	r3, #0
 8008d68:	9301      	str	r3, [sp, #4]
 8008d6a:	230a      	movs	r3, #10
 8008d6c:	9300      	str	r3, [sp, #0]
 8008d6e:	230a      	movs	r3, #10
 8008d70:	2201      	movs	r2, #1
 8008d72:	490a      	ldr	r1, [pc, #40]	@ (8008d9c <_Z23getFont_verdana_10_4bppv+0x98>)
 8008d74:	480a      	ldr	r0, [pc, #40]	@ (8008da0 <_Z23getFont_verdana_10_4bppv+0x9c>)
 8008d76:	f7ff ff1b 	bl	8008bb0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008d7a:	480a      	ldr	r0, [pc, #40]	@ (8008da4 <_Z23getFont_verdana_10_4bppv+0xa0>)
 8008d7c:	f01b fa98 	bl	80242b0 <atexit>
 8008d80:	4803      	ldr	r0, [pc, #12]	@ (8008d90 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8008d82:	f01b f856 	bl	8023e32 <__cxa_guard_release>
    return verdana_10_4bpp;
 8008d86:	4b06      	ldr	r3, [pc, #24]	@ (8008da0 <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 8008d88:	4618      	mov	r0, r3
 8008d8a:	46bd      	mov	sp, r7
 8008d8c:	bd80      	pop	{r7, pc}
 8008d8e:	bf00      	nop
 8008d90:	200005fc 	.word	0x200005fc
 8008d94:	08032f7c 	.word	0x08032f7c
 8008d98:	08033400 	.word	0x08033400
 8008d9c:	08032568 	.word	0x08032568
 8008da0:	200005d0 	.word	0x200005d0
 8008da4:	08008cf5 	.word	0x08008cf5

08008da8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 91, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8008da8:	b580      	push	{r7, lr}
 8008daa:	af00      	add	r7, sp, #0
 8008dac:	4801      	ldr	r0, [pc, #4]	@ (8008db4 <__tcf_0+0xc>)
 8008dae:	f7ff fea5 	bl	8008afc <_ZN8touchgfx13GeneratedFontD1Ev>
 8008db2:	bd80      	pop	{r7, pc}
 8008db4:	20000600 	.word	0x20000600

08008db8 <_Z23getFont_verdana_20_4bppv>:
{
 8008db8:	b580      	push	{r7, lr}
 8008dba:	b08e      	sub	sp, #56	@ 0x38
 8008dbc:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 91, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8008dbe:	4b21      	ldr	r3, [pc, #132]	@ (8008e44 <_Z23getFont_verdana_20_4bppv+0x8c>)
 8008dc0:	681b      	ldr	r3, [r3, #0]
 8008dc2:	f3bf 8f5b 	dmb	ish
 8008dc6:	f003 0301 	and.w	r3, r3, #1
 8008dca:	2b00      	cmp	r3, #0
 8008dcc:	bf0c      	ite	eq
 8008dce:	2301      	moveq	r3, #1
 8008dd0:	2300      	movne	r3, #0
 8008dd2:	b2db      	uxtb	r3, r3
 8008dd4:	2b00      	cmp	r3, #0
 8008dd6:	d030      	beq.n	8008e3a <_Z23getFont_verdana_20_4bppv+0x82>
 8008dd8:	481a      	ldr	r0, [pc, #104]	@ (8008e44 <_Z23getFont_verdana_20_4bppv+0x8c>)
 8008dda:	f01b f81e 	bl	8023e1a <__cxa_guard_acquire>
 8008dde:	4603      	mov	r3, r0
 8008de0:	2b00      	cmp	r3, #0
 8008de2:	bf14      	ite	ne
 8008de4:	2301      	movne	r3, #1
 8008de6:	2300      	moveq	r3, #0
 8008de8:	b2db      	uxtb	r3, r3
 8008dea:	2b00      	cmp	r3, #0
 8008dec:	d025      	beq.n	8008e3a <_Z23getFont_verdana_20_4bppv+0x82>
 8008dee:	2300      	movs	r3, #0
 8008df0:	930c      	str	r3, [sp, #48]	@ 0x30
 8008df2:	2300      	movs	r3, #0
 8008df4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008df6:	2300      	movs	r3, #0
 8008df8:	930a      	str	r3, [sp, #40]	@ 0x28
 8008dfa:	233f      	movs	r3, #63	@ 0x3f
 8008dfc:	9309      	str	r3, [sp, #36]	@ 0x24
 8008dfe:	4b12      	ldr	r3, [pc, #72]	@ (8008e48 <_Z23getFont_verdana_20_4bppv+0x90>)
 8008e00:	9308      	str	r3, [sp, #32]
 8008e02:	4b12      	ldr	r3, [pc, #72]	@ (8008e4c <_Z23getFont_verdana_20_4bppv+0x94>)
 8008e04:	9307      	str	r3, [sp, #28]
 8008e06:	2301      	movs	r3, #1
 8008e08:	9306      	str	r3, [sp, #24]
 8008e0a:	2301      	movs	r3, #1
 8008e0c:	9305      	str	r3, [sp, #20]
 8008e0e:	2301      	movs	r3, #1
 8008e10:	9304      	str	r3, [sp, #16]
 8008e12:	2304      	movs	r3, #4
 8008e14:	9303      	str	r3, [sp, #12]
 8008e16:	2300      	movs	r3, #0
 8008e18:	9302      	str	r3, [sp, #8]
 8008e1a:	2300      	movs	r3, #0
 8008e1c:	9301      	str	r3, [sp, #4]
 8008e1e:	2314      	movs	r3, #20
 8008e20:	9300      	str	r3, [sp, #0]
 8008e22:	2318      	movs	r3, #24
 8008e24:	225b      	movs	r2, #91	@ 0x5b
 8008e26:	490a      	ldr	r1, [pc, #40]	@ (8008e50 <_Z23getFont_verdana_20_4bppv+0x98>)
 8008e28:	480a      	ldr	r0, [pc, #40]	@ (8008e54 <_Z23getFont_verdana_20_4bppv+0x9c>)
 8008e2a:	f7ff fec1 	bl	8008bb0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008e2e:	480a      	ldr	r0, [pc, #40]	@ (8008e58 <_Z23getFont_verdana_20_4bppv+0xa0>)
 8008e30:	f01b fa3e 	bl	80242b0 <atexit>
 8008e34:	4803      	ldr	r0, [pc, #12]	@ (8008e44 <_Z23getFont_verdana_20_4bppv+0x8c>)
 8008e36:	f01a fffc 	bl	8023e32 <__cxa_guard_release>
    return verdana_20_4bpp;
 8008e3a:	4b06      	ldr	r3, [pc, #24]	@ (8008e54 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 8008e3c:	4618      	mov	r0, r3
 8008e3e:	46bd      	mov	sp, r7
 8008e40:	bd80      	pop	{r7, pc}
 8008e42:	bf00      	nop
 8008e44:	2000062c 	.word	0x2000062c
 8008e48:	08032f80 	.word	0x08032f80
 8008e4c:	08033404 	.word	0x08033404
 8008e50:	08032578 	.word	0x08032578
 8008e54:	20000600 	.word	0x20000600
 8008e58:	08008da9 	.word	0x08008da9

08008e5c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 92, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008e5c:	b580      	push	{r7, lr}
 8008e5e:	af00      	add	r7, sp, #0
 8008e60:	4801      	ldr	r0, [pc, #4]	@ (8008e68 <__tcf_0+0xc>)
 8008e62:	f7ff fe4b 	bl	8008afc <_ZN8touchgfx13GeneratedFontD1Ev>
 8008e66:	bd80      	pop	{r7, pc}
 8008e68:	20000630 	.word	0x20000630

08008e6c <_Z23getFont_verdana_40_4bppv>:
{
 8008e6c:	b580      	push	{r7, lr}
 8008e6e:	b08e      	sub	sp, #56	@ 0x38
 8008e70:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 92, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008e72:	4b21      	ldr	r3, [pc, #132]	@ (8008ef8 <_Z23getFont_verdana_40_4bppv+0x8c>)
 8008e74:	681b      	ldr	r3, [r3, #0]
 8008e76:	f3bf 8f5b 	dmb	ish
 8008e7a:	f003 0301 	and.w	r3, r3, #1
 8008e7e:	2b00      	cmp	r3, #0
 8008e80:	bf0c      	ite	eq
 8008e82:	2301      	moveq	r3, #1
 8008e84:	2300      	movne	r3, #0
 8008e86:	b2db      	uxtb	r3, r3
 8008e88:	2b00      	cmp	r3, #0
 8008e8a:	d030      	beq.n	8008eee <_Z23getFont_verdana_40_4bppv+0x82>
 8008e8c:	481a      	ldr	r0, [pc, #104]	@ (8008ef8 <_Z23getFont_verdana_40_4bppv+0x8c>)
 8008e8e:	f01a ffc4 	bl	8023e1a <__cxa_guard_acquire>
 8008e92:	4603      	mov	r3, r0
 8008e94:	2b00      	cmp	r3, #0
 8008e96:	bf14      	ite	ne
 8008e98:	2301      	movne	r3, #1
 8008e9a:	2300      	moveq	r3, #0
 8008e9c:	b2db      	uxtb	r3, r3
 8008e9e:	2b00      	cmp	r3, #0
 8008ea0:	d025      	beq.n	8008eee <_Z23getFont_verdana_40_4bppv+0x82>
 8008ea2:	2300      	movs	r3, #0
 8008ea4:	930c      	str	r3, [sp, #48]	@ 0x30
 8008ea6:	2300      	movs	r3, #0
 8008ea8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008eaa:	2300      	movs	r3, #0
 8008eac:	930a      	str	r3, [sp, #40]	@ 0x28
 8008eae:	233f      	movs	r3, #63	@ 0x3f
 8008eb0:	9309      	str	r3, [sp, #36]	@ 0x24
 8008eb2:	4b12      	ldr	r3, [pc, #72]	@ (8008efc <_Z23getFont_verdana_40_4bppv+0x90>)
 8008eb4:	9308      	str	r3, [sp, #32]
 8008eb6:	4b12      	ldr	r3, [pc, #72]	@ (8008f00 <_Z23getFont_verdana_40_4bppv+0x94>)
 8008eb8:	9307      	str	r3, [sp, #28]
 8008eba:	2302      	movs	r3, #2
 8008ebc:	9306      	str	r3, [sp, #24]
 8008ebe:	2302      	movs	r3, #2
 8008ec0:	9305      	str	r3, [sp, #20]
 8008ec2:	2301      	movs	r3, #1
 8008ec4:	9304      	str	r3, [sp, #16]
 8008ec6:	2304      	movs	r3, #4
 8008ec8:	9303      	str	r3, [sp, #12]
 8008eca:	2300      	movs	r3, #0
 8008ecc:	9302      	str	r3, [sp, #8]
 8008ece:	2300      	movs	r3, #0
 8008ed0:	9301      	str	r3, [sp, #4]
 8008ed2:	2328      	movs	r3, #40	@ 0x28
 8008ed4:	9300      	str	r3, [sp, #0]
 8008ed6:	2330      	movs	r3, #48	@ 0x30
 8008ed8:	225c      	movs	r2, #92	@ 0x5c
 8008eda:	490a      	ldr	r1, [pc, #40]	@ (8008f04 <_Z23getFont_verdana_40_4bppv+0x98>)
 8008edc:	480a      	ldr	r0, [pc, #40]	@ (8008f08 <_Z23getFont_verdana_40_4bppv+0x9c>)
 8008ede:	f7ff fe67 	bl	8008bb0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008ee2:	480a      	ldr	r0, [pc, #40]	@ (8008f0c <_Z23getFont_verdana_40_4bppv+0xa0>)
 8008ee4:	f01b f9e4 	bl	80242b0 <atexit>
 8008ee8:	4803      	ldr	r0, [pc, #12]	@ (8008ef8 <_Z23getFont_verdana_40_4bppv+0x8c>)
 8008eea:	f01a ffa2 	bl	8023e32 <__cxa_guard_release>
    return verdana_40_4bpp;
 8008eee:	4b06      	ldr	r3, [pc, #24]	@ (8008f08 <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 8008ef0:	4618      	mov	r0, r3
 8008ef2:	46bd      	mov	sp, r7
 8008ef4:	bd80      	pop	{r7, pc}
 8008ef6:	bf00      	nop
 8008ef8:	2000065c 	.word	0x2000065c
 8008efc:	08033120 	.word	0x08033120
 8008f00:	08033408 	.word	0x08033408
 8008f04:	08032a74 	.word	0x08032a74
 8008f08:	20000630 	.word	0x20000630
 8008f0c:	08008e5d 	.word	0x08008e5d

08008f10 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8008f10:	b480      	push	{r7}
 8008f12:	b083      	sub	sp, #12
 8008f14:	af00      	add	r7, sp, #0
 8008f16:	6078      	str	r0, [r7, #4]
 8008f18:	6039      	str	r1, [r7, #0]
 8008f1a:	683b      	ldr	r3, [r7, #0]
 8008f1c:	4618      	mov	r0, r3
 8008f1e:	370c      	adds	r7, #12
 8008f20:	46bd      	mov	sp, r7
 8008f22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f26:	4770      	bx	lr

08008f28 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8008f28:	b480      	push	{r7}
 8008f2a:	b083      	sub	sp, #12
 8008f2c:	af00      	add	r7, sp, #0
 8008f2e:	6078      	str	r0, [r7, #4]
 8008f30:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008f32:	bf00      	nop
 8008f34:	370c      	adds	r7, #12
 8008f36:	46bd      	mov	sp, r7
 8008f38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f3c:	4770      	bx	lr

08008f3e <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8008f3e:	b480      	push	{r7}
 8008f40:	b083      	sub	sp, #12
 8008f42:	af00      	add	r7, sp, #0
 8008f44:	6078      	str	r0, [r7, #4]
 8008f46:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008f48:	bf00      	nop
 8008f4a:	370c      	adds	r7, #12
 8008f4c:	46bd      	mov	sp, r7
 8008f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f52:	4770      	bx	lr

08008f54 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8008f54:	b480      	push	{r7}
 8008f56:	b083      	sub	sp, #12
 8008f58:	af00      	add	r7, sp, #0
 8008f5a:	6078      	str	r0, [r7, #4]
 8008f5c:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008f5e:	bf00      	nop
 8008f60:	370c      	adds	r7, #12
 8008f62:	46bd      	mov	sp, r7
 8008f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f68:	4770      	bx	lr

08008f6a <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 8008f6a:	b480      	push	{r7}
 8008f6c:	b083      	sub	sp, #12
 8008f6e:	af00      	add	r7, sp, #0
 8008f70:	6078      	str	r0, [r7, #4]
 8008f72:	460b      	mov	r3, r1
 8008f74:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 8008f76:	bf00      	nop
 8008f78:	370c      	adds	r7, #12
 8008f7a:	46bd      	mov	sp, r7
 8008f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f80:	4770      	bx	lr

08008f82 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 8008f82:	b480      	push	{r7}
 8008f84:	b083      	sub	sp, #12
 8008f86:	af00      	add	r7, sp, #0
 8008f88:	6078      	str	r0, [r7, #4]
    {
    }
 8008f8a:	bf00      	nop
 8008f8c:	370c      	adds	r7, #12
 8008f8e:	46bd      	mov	sp, r7
 8008f90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f94:	4770      	bx	lr

08008f96 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 8008f96:	b480      	push	{r7}
 8008f98:	b083      	sub	sp, #12
 8008f9a:	af00      	add	r7, sp, #0
 8008f9c:	6078      	str	r0, [r7, #4]
    {
    }
 8008f9e:	bf00      	nop
 8008fa0:	370c      	adds	r7, #12
 8008fa2:	46bd      	mov	sp, r7
 8008fa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fa8:	4770      	bx	lr
	...

08008fac <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 8008fac:	b480      	push	{r7}
 8008fae:	b083      	sub	sp, #12
 8008fb0:	af00      	add	r7, sp, #0
 8008fb2:	6078      	str	r0, [r7, #4]
    {
 8008fb4:	4a04      	ldr	r2, [pc, #16]	@ (8008fc8 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 8008fb6:	687b      	ldr	r3, [r7, #4]
 8008fb8:	601a      	str	r2, [r3, #0]
    }
 8008fba:	687b      	ldr	r3, [r7, #4]
 8008fbc:	4618      	mov	r0, r3
 8008fbe:	370c      	adds	r7, #12
 8008fc0:	46bd      	mov	sp, r7
 8008fc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fc6:	4770      	bx	lr
 8008fc8:	08028ad8 	.word	0x08028ad8

08008fcc <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8008fcc:	b580      	push	{r7, lr}
 8008fce:	b082      	sub	sp, #8
 8008fd0:	af00      	add	r7, sp, #0
 8008fd2:	6078      	str	r0, [r7, #4]
    }
 8008fd4:	6878      	ldr	r0, [r7, #4]
 8008fd6:	f7ff ffe9 	bl	8008fac <_ZN8touchgfx15UIEventListenerD1Ev>
 8008fda:	2104      	movs	r1, #4
 8008fdc:	6878      	ldr	r0, [r7, #4]
 8008fde:	f01a ff1a 	bl	8023e16 <_ZdlPvj>
 8008fe2:	687b      	ldr	r3, [r7, #4]
 8008fe4:	4618      	mov	r0, r3
 8008fe6:	3708      	adds	r7, #8
 8008fe8:	46bd      	mov	sp, r7
 8008fea:	bd80      	pop	{r7, pc}

08008fec <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 8008fec:	b480      	push	{r7}
 8008fee:	b083      	sub	sp, #12
 8008ff0:	af00      	add	r7, sp, #0
 8008ff2:	6078      	str	r0, [r7, #4]
    {
    }
 8008ff4:	bf00      	nop
 8008ff6:	370c      	adds	r7, #12
 8008ff8:	46bd      	mov	sp, r7
 8008ffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ffe:	4770      	bx	lr

08009000 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8009000:	b480      	push	{r7}
 8009002:	b083      	sub	sp, #12
 8009004:	af00      	add	r7, sp, #0
 8009006:	6078      	str	r0, [r7, #4]
 8009008:	460b      	mov	r3, r1
 800900a:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800900c:	bf00      	nop
 800900e:	370c      	adds	r7, #12
 8009010:	46bd      	mov	sp, r7
 8009012:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009016:	4770      	bx	lr

08009018 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8009018:	b480      	push	{r7}
 800901a:	b083      	sub	sp, #12
 800901c:	af00      	add	r7, sp, #0
 800901e:	6078      	str	r0, [r7, #4]
 8009020:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 8009022:	687b      	ldr	r3, [r7, #4]
 8009024:	683a      	ldr	r2, [r7, #0]
 8009026:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 800902a:	6810      	ldr	r0, [r2, #0]
 800902c:	6851      	ldr	r1, [r2, #4]
 800902e:	c303      	stmia	r3!, {r0, r1}
    }
 8009030:	bf00      	nop
 8009032:	370c      	adds	r7, #12
 8009034:	46bd      	mov	sp, r7
 8009036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800903a:	4770      	bx	lr

0800903c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800903c:	b580      	push	{r7, lr}
 800903e:	b082      	sub	sp, #8
 8009040:	af00      	add	r7, sp, #0
 8009042:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 8009044:	687b      	ldr	r3, [r7, #4]
 8009046:	3304      	adds	r3, #4
 8009048:	4618      	mov	r0, r3
 800904a:	f00a f852 	bl	80130f2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800904e:	bf00      	nop
 8009050:	3708      	adds	r7, #8
 8009052:	46bd      	mov	sp, r7
 8009054:	bd80      	pop	{r7, pc}
	...

08009058 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 8009058:	b480      	push	{r7}
 800905a:	b083      	sub	sp, #12
 800905c:	af00      	add	r7, sp, #0
 800905e:	6078      	str	r0, [r7, #4]
    {
 8009060:	4a04      	ldr	r2, [pc, #16]	@ (8009074 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 8009062:	687b      	ldr	r3, [r7, #4]
 8009064:	601a      	str	r2, [r3, #0]
    }
 8009066:	687b      	ldr	r3, [r7, #4]
 8009068:	4618      	mov	r0, r3
 800906a:	370c      	adds	r7, #12
 800906c:	46bd      	mov	sp, r7
 800906e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009072:	4770      	bx	lr
 8009074:	08028ac0 	.word	0x08028ac0

08009078 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 8009078:	b580      	push	{r7, lr}
 800907a:	b082      	sub	sp, #8
 800907c:	af00      	add	r7, sp, #0
 800907e:	6078      	str	r0, [r7, #4]
    }
 8009080:	6878      	ldr	r0, [r7, #4]
 8009082:	f7ff ffe9 	bl	8009058 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8009086:	2104      	movs	r1, #4
 8009088:	6878      	ldr	r0, [r7, #4]
 800908a:	f01a fec4 	bl	8023e16 <_ZdlPvj>
 800908e:	687b      	ldr	r3, [r7, #4]
 8009090:	4618      	mov	r0, r3
 8009092:	3708      	adds	r7, #8
 8009094:	46bd      	mov	sp, r7
 8009096:	bd80      	pop	{r7, pc}

08009098 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 8009098:	b480      	push	{r7}
 800909a:	af00      	add	r7, sp, #0
    {
        return instance;
 800909c:	4b03      	ldr	r3, [pc, #12]	@ (80090ac <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800909e:	681b      	ldr	r3, [r3, #0]
    }
 80090a0:	4618      	mov	r0, r3
 80090a2:	46bd      	mov	sp, r7
 80090a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090a8:	4770      	bx	lr
 80090aa:	bf00      	nop
 80090ac:	200023a8 	.word	0x200023a8

080090b0 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 80090b0:	b480      	push	{r7}
 80090b2:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80090b4:	4b0b      	ldr	r3, [pc, #44]	@ (80090e4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80090b6:	681b      	ldr	r3, [r3, #0]
 80090b8:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 80090bc:	2b00      	cmp	r3, #0
 80090be:	d008      	beq.n	80090d2 <_ZN8touchgfx3HAL3lcdEv+0x22>
 80090c0:	4b08      	ldr	r3, [pc, #32]	@ (80090e4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80090c2:	681b      	ldr	r3, [r3, #0]
 80090c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80090c6:	2b00      	cmp	r3, #0
 80090c8:	d003      	beq.n	80090d2 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 80090ca:	4b06      	ldr	r3, [pc, #24]	@ (80090e4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80090cc:	681b      	ldr	r3, [r3, #0]
 80090ce:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80090d0:	e002      	b.n	80090d8 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 80090d2:	4b04      	ldr	r3, [pc, #16]	@ (80090e4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80090d4:	681b      	ldr	r3, [r3, #0]
 80090d6:	689b      	ldr	r3, [r3, #8]
    }
 80090d8:	4618      	mov	r0, r3
 80090da:	46bd      	mov	sp, r7
 80090dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090e0:	4770      	bx	lr
 80090e2:	bf00      	nop
 80090e4:	200023a8 	.word	0x200023a8

080090e8 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 80090e8:	b480      	push	{r7}
 80090ea:	b083      	sub	sp, #12
 80090ec:	af00      	add	r7, sp, #0
 80090ee:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 80090f0:	4a07      	ldr	r2, [pc, #28]	@ (8009110 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 80090f2:	687b      	ldr	r3, [r7, #4]
 80090f4:	601a      	str	r2, [r3, #0]
 80090f6:	687b      	ldr	r3, [r7, #4]
 80090f8:	2200      	movs	r2, #0
 80090fa:	605a      	str	r2, [r3, #4]
 80090fc:	687b      	ldr	r3, [r7, #4]
 80090fe:	2200      	movs	r2, #0
 8009100:	721a      	strb	r2, [r3, #8]
    {
    }
 8009102:	687b      	ldr	r3, [r7, #4]
 8009104:	4618      	mov	r0, r3
 8009106:	370c      	adds	r7, #12
 8009108:	46bd      	mov	sp, r7
 800910a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800910e:	4770      	bx	lr
 8009110:	08028a9c 	.word	0x08028a9c

08009114 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 8009114:	b480      	push	{r7}
 8009116:	b083      	sub	sp, #12
 8009118:	af00      	add	r7, sp, #0
 800911a:	6078      	str	r0, [r7, #4]
    {
 800911c:	4a04      	ldr	r2, [pc, #16]	@ (8009130 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800911e:	687b      	ldr	r3, [r7, #4]
 8009120:	601a      	str	r2, [r3, #0]
    }
 8009122:	687b      	ldr	r3, [r7, #4]
 8009124:	4618      	mov	r0, r3
 8009126:	370c      	adds	r7, #12
 8009128:	46bd      	mov	sp, r7
 800912a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800912e:	4770      	bx	lr
 8009130:	08028a9c 	.word	0x08028a9c

08009134 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8009134:	b580      	push	{r7, lr}
 8009136:	b082      	sub	sp, #8
 8009138:	af00      	add	r7, sp, #0
 800913a:	6078      	str	r0, [r7, #4]
    }
 800913c:	6878      	ldr	r0, [r7, #4]
 800913e:	f7ff ffe9 	bl	8009114 <_ZN8touchgfx10TransitionD1Ev>
 8009142:	210c      	movs	r1, #12
 8009144:	6878      	ldr	r0, [r7, #4]
 8009146:	f01a fe66 	bl	8023e16 <_ZdlPvj>
 800914a:	687b      	ldr	r3, [r7, #4]
 800914c:	4618      	mov	r0, r3
 800914e:	3708      	adds	r7, #8
 8009150:	46bd      	mov	sp, r7
 8009152:	bd80      	pop	{r7, pc}

08009154 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 8009154:	b480      	push	{r7}
 8009156:	b083      	sub	sp, #12
 8009158:	af00      	add	r7, sp, #0
 800915a:	6078      	str	r0, [r7, #4]
    {
    }
 800915c:	bf00      	nop
 800915e:	370c      	adds	r7, #12
 8009160:	46bd      	mov	sp, r7
 8009162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009166:	4770      	bx	lr

08009168 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 8009168:	b480      	push	{r7}
 800916a:	b083      	sub	sp, #12
 800916c:	af00      	add	r7, sp, #0
 800916e:	6078      	str	r0, [r7, #4]
    {
    }
 8009170:	bf00      	nop
 8009172:	370c      	adds	r7, #12
 8009174:	46bd      	mov	sp, r7
 8009176:	f85d 7b04 	ldr.w	r7, [sp], #4
 800917a:	4770      	bx	lr

0800917c <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800917c:	b480      	push	{r7}
 800917e:	b083      	sub	sp, #12
 8009180:	af00      	add	r7, sp, #0
 8009182:	6078      	str	r0, [r7, #4]
    {
    }
 8009184:	bf00      	nop
 8009186:	370c      	adds	r7, #12
 8009188:	46bd      	mov	sp, r7
 800918a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800918e:	4770      	bx	lr

08009190 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 8009190:	b580      	push	{r7, lr}
 8009192:	b082      	sub	sp, #8
 8009194:	af00      	add	r7, sp, #0
 8009196:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 8009198:	f009 ff86 	bl	80130a8 <_ZN8touchgfx11Application11getInstanceEv>
 800919c:	4603      	mov	r3, r0
 800919e:	681a      	ldr	r2, [r3, #0]
 80091a0:	323c      	adds	r2, #60	@ 0x3c
 80091a2:	6812      	ldr	r2, [r2, #0]
 80091a4:	4618      	mov	r0, r3
 80091a6:	4790      	blx	r2
    }
 80091a8:	bf00      	nop
 80091aa:	3708      	adds	r7, #8
 80091ac:	46bd      	mov	sp, r7
 80091ae:	bd80      	pop	{r7, pc}

080091b0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 80091b0:	b480      	push	{r7}
 80091b2:	b083      	sub	sp, #12
 80091b4:	af00      	add	r7, sp, #0
 80091b6:	6078      	str	r0, [r7, #4]
 80091b8:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 80091ba:	687b      	ldr	r3, [r7, #4]
 80091bc:	683a      	ldr	r2, [r7, #0]
 80091be:	605a      	str	r2, [r3, #4]
    }
 80091c0:	bf00      	nop
 80091c2:	370c      	adds	r7, #12
 80091c4:	46bd      	mov	sp, r7
 80091c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091ca:	4770      	bx	lr

080091cc <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 80091cc:	b580      	push	{r7, lr}
 80091ce:	b082      	sub	sp, #8
 80091d0:	af00      	add	r7, sp, #0
 80091d2:	6078      	str	r0, [r7, #4]
 80091d4:	4a05      	ldr	r2, [pc, #20]	@ (80091ec <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 80091d6:	687b      	ldr	r3, [r7, #4]
 80091d8:	601a      	str	r2, [r3, #0]
 80091da:	687b      	ldr	r3, [r7, #4]
 80091dc:	4618      	mov	r0, r3
 80091de:	f7ff fee5 	bl	8008fac <_ZN8touchgfx15UIEventListenerD1Ev>
 80091e2:	687b      	ldr	r3, [r7, #4]
 80091e4:	4618      	mov	r0, r3
 80091e6:	3708      	adds	r7, #8
 80091e8:	46bd      	mov	sp, r7
 80091ea:	bd80      	pop	{r7, pc}
 80091ec:	08029c2c 	.word	0x08029c2c

080091f0 <_ZN8touchgfx11ApplicationD0Ev>:
 80091f0:	b580      	push	{r7, lr}
 80091f2:	b082      	sub	sp, #8
 80091f4:	af00      	add	r7, sp, #0
 80091f6:	6078      	str	r0, [r7, #4]
 80091f8:	6878      	ldr	r0, [r7, #4]
 80091fa:	f7ff ffe7 	bl	80091cc <_ZN8touchgfx11ApplicationD1Ev>
 80091fe:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 8009202:	6878      	ldr	r0, [r7, #4]
 8009204:	f01a fe07 	bl	8023e16 <_ZdlPvj>
 8009208:	687b      	ldr	r3, [r7, #4]
 800920a:	4618      	mov	r0, r3
 800920c:	3708      	adds	r7, #8
 800920e:	46bd      	mov	sp, r7
 8009210:	bd80      	pop	{r7, pc}
	...

08009214 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 8009214:	b580      	push	{r7, lr}
 8009216:	b082      	sub	sp, #8
 8009218:	af00      	add	r7, sp, #0
 800921a:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800921c:	687b      	ldr	r3, [r7, #4]
 800921e:	4618      	mov	r0, r3
 8009220:	f00a f804 	bl	801322c <_ZN8touchgfx11ApplicationC1Ev>
 8009224:	4a09      	ldr	r2, [pc, #36]	@ (800924c <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 8009226:	687b      	ldr	r3, [r7, #4]
 8009228:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800922a:	687b      	ldr	r3, [r7, #4]
 800922c:	2200      	movs	r2, #0
 800922e:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 8009232:	687b      	ldr	r3, [r7, #4]
 8009234:	2200      	movs	r2, #0
 8009236:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 800923a:	687b      	ldr	r3, [r7, #4]
 800923c:	4a04      	ldr	r2, [pc, #16]	@ (8009250 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800923e:	6013      	str	r3, [r2, #0]
    }
 8009240:	687b      	ldr	r3, [r7, #4]
 8009242:	4618      	mov	r0, r3
 8009244:	3708      	adds	r7, #8
 8009246:	46bd      	mov	sp, r7
 8009248:	bd80      	pop	{r7, pc}
 800924a:	bf00      	nop
 800924c:	08028a48 	.word	0x08028a48
 8009250:	200023f4 	.word	0x200023f4

08009254 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8009254:	b580      	push	{r7, lr}
 8009256:	b082      	sub	sp, #8
 8009258:	af00      	add	r7, sp, #0
 800925a:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800925c:	6878      	ldr	r0, [r7, #4]
 800925e:	f000 f804 	bl	800926a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 8009262:	bf00      	nop
 8009264:	3708      	adds	r7, #8
 8009266:	46bd      	mov	sp, r7
 8009268:	bd80      	pop	{r7, pc}

0800926a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800926a:	b580      	push	{r7, lr}
 800926c:	b082      	sub	sp, #8
 800926e:	af00      	add	r7, sp, #0
 8009270:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8009272:	687b      	ldr	r3, [r7, #4]
 8009274:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8009278:	2b00      	cmp	r3, #0
 800927a:	d00f      	beq.n	800929c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800927c:	687b      	ldr	r3, [r7, #4]
 800927e:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 8009282:	687b      	ldr	r3, [r7, #4]
 8009284:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8009288:	681b      	ldr	r3, [r3, #0]
 800928a:	330c      	adds	r3, #12
 800928c:	681b      	ldr	r3, [r3, #0]
 800928e:	4610      	mov	r0, r2
 8009290:	4798      	blx	r3
 8009292:	4603      	mov	r3, r0
 8009294:	2b00      	cmp	r3, #0
 8009296:	d001      	beq.n	800929c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8009298:	2301      	movs	r3, #1
 800929a:	e000      	b.n	800929e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800929c:	2300      	movs	r3, #0
 800929e:	2b00      	cmp	r3, #0
 80092a0:	d00e      	beq.n	80092c0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 80092a2:	687b      	ldr	r3, [r7, #4]
 80092a4:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 80092a8:	687b      	ldr	r3, [r7, #4]
 80092aa:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 80092ae:	681b      	ldr	r3, [r3, #0]
 80092b0:	3308      	adds	r3, #8
 80092b2:	681b      	ldr	r3, [r3, #0]
 80092b4:	4610      	mov	r0, r2
 80092b6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80092b8:	687b      	ldr	r3, [r7, #4]
 80092ba:	2200      	movs	r2, #0
 80092bc:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 80092c0:	bf00      	nop
 80092c2:	3708      	adds	r7, #8
 80092c4:	46bd      	mov	sp, r7
 80092c6:	bd80      	pop	{r7, pc}

080092c8 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 80092c8:	b480      	push	{r7}
 80092ca:	b083      	sub	sp, #12
 80092cc:	af00      	add	r7, sp, #0
 80092ce:	6078      	str	r0, [r7, #4]
 80092d0:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 80092d2:	687b      	ldr	r3, [r7, #4]
 80092d4:	683a      	ldr	r2, [r7, #0]
 80092d6:	601a      	str	r2, [r3, #0]
    }
 80092d8:	bf00      	nop
 80092da:	370c      	adds	r7, #12
 80092dc:	46bd      	mov	sp, r7
 80092de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092e2:	4770      	bx	lr

080092e4 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 80092e4:	b580      	push	{r7, lr}
 80092e6:	b082      	sub	sp, #8
 80092e8:	af00      	add	r7, sp, #0
 80092ea:	6078      	str	r0, [r7, #4]
 80092ec:	4a05      	ldr	r2, [pc, #20]	@ (8009304 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 80092ee:	687b      	ldr	r3, [r7, #4]
 80092f0:	601a      	str	r2, [r3, #0]
 80092f2:	687b      	ldr	r3, [r7, #4]
 80092f4:	4618      	mov	r0, r3
 80092f6:	f7ff ff69 	bl	80091cc <_ZN8touchgfx11ApplicationD1Ev>
 80092fa:	687b      	ldr	r3, [r7, #4]
 80092fc:	4618      	mov	r0, r3
 80092fe:	3708      	adds	r7, #8
 8009300:	46bd      	mov	sp, r7
 8009302:	bd80      	pop	{r7, pc}
 8009304:	08028a48 	.word	0x08028a48

08009308 <_ZN8touchgfx14MVPApplicationD0Ev>:
 8009308:	b580      	push	{r7, lr}
 800930a:	b082      	sub	sp, #8
 800930c:	af00      	add	r7, sp, #0
 800930e:	6078      	str	r0, [r7, #4]
 8009310:	6878      	ldr	r0, [r7, #4]
 8009312:	f7ff ffe7 	bl	80092e4 <_ZN8touchgfx14MVPApplicationD1Ev>
 8009316:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 800931a:	6878      	ldr	r0, [r7, #4]
 800931c:	f01a fd7b 	bl	8023e16 <_ZdlPvj>
 8009320:	687b      	ldr	r3, [r7, #4]
 8009322:	4618      	mov	r0, r3
 8009324:	3708      	adds	r7, #8
 8009326:	46bd      	mov	sp, r7
 8009328:	bd80      	pop	{r7, pc}
	...

0800932c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800932c:	b580      	push	{r7, lr}
 800932e:	b082      	sub	sp, #8
 8009330:	af00      	add	r7, sp, #0
 8009332:	6078      	str	r0, [r7, #4]
 8009334:	4a08      	ldr	r2, [pc, #32]	@ (8009358 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8009336:	687b      	ldr	r3, [r7, #4]
 8009338:	601a      	str	r2, [r3, #0]
 800933a:	687b      	ldr	r3, [r7, #4]
 800933c:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8009340:	4618      	mov	r0, r3
 8009342:	f000 fc61 	bl	8009c08 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8009346:	687b      	ldr	r3, [r7, #4]
 8009348:	4618      	mov	r0, r3
 800934a:	f7ff ffcb 	bl	80092e4 <_ZN8touchgfx14MVPApplicationD1Ev>
 800934e:	687b      	ldr	r3, [r7, #4]
 8009350:	4618      	mov	r0, r3
 8009352:	3708      	adds	r7, #8
 8009354:	46bd      	mov	sp, r7
 8009356:	bd80      	pop	{r7, pc}
 8009358:	080289dc 	.word	0x080289dc

0800935c <_ZN23FrontendApplicationBaseD0Ev>:
 800935c:	b580      	push	{r7, lr}
 800935e:	b082      	sub	sp, #8
 8009360:	af00      	add	r7, sp, #0
 8009362:	6078      	str	r0, [r7, #4]
 8009364:	6878      	ldr	r0, [r7, #4]
 8009366:	f7ff ffe1 	bl	800932c <_ZN23FrontendApplicationBaseD1Ev>
 800936a:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800936e:	6878      	ldr	r0, [r7, #4]
 8009370:	f01a fd51 	bl	8023e16 <_ZdlPvj>
 8009374:	687b      	ldr	r3, [r7, #4]
 8009376:	4618      	mov	r0, r3
 8009378:	3708      	adds	r7, #8
 800937a:	46bd      	mov	sp, r7
 800937c:	bd80      	pop	{r7, pc}

0800937e <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800937e:	b580      	push	{r7, lr}
 8009380:	b082      	sub	sp, #8
 8009382:	af00      	add	r7, sp, #0
 8009384:	6078      	str	r0, [r7, #4]
    {
        gotoScreen1ScreenNoTransition();
 8009386:	6878      	ldr	r0, [r7, #4]
 8009388:	f000 f882 	bl	8009490 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800938c:	bf00      	nop
 800938e:	3708      	adds	r7, #8
 8009390:	46bd      	mov	sp, r7
 8009392:	bd80      	pop	{r7, pc}

08009394 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 8009394:	b480      	push	{r7}
 8009396:	b083      	sub	sp, #12
 8009398:	af00      	add	r7, sp, #0
 800939a:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800939c:	687b      	ldr	r3, [r7, #4]
 800939e:	2201      	movs	r2, #1
 80093a0:	721a      	strb	r2, [r3, #8]
    }
 80093a2:	bf00      	nop
 80093a4:	370c      	adds	r7, #12
 80093a6:	46bd      	mov	sp, r7
 80093a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093ac:	4770      	bx	lr

080093ae <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 80093ae:	b480      	push	{r7}
 80093b0:	b083      	sub	sp, #12
 80093b2:	af00      	add	r7, sp, #0
 80093b4:	6078      	str	r0, [r7, #4]
 80093b6:	6039      	str	r1, [r7, #0]
    {
        model = m;
 80093b8:	687b      	ldr	r3, [r7, #4]
 80093ba:	683a      	ldr	r2, [r7, #0]
 80093bc:	605a      	str	r2, [r3, #4]
    }
 80093be:	bf00      	nop
 80093c0:	370c      	adds	r7, #12
 80093c2:	46bd      	mov	sp, r7
 80093c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093c8:	4770      	bx	lr
	...

080093cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/settings_screen/SettingsView.hpp>
#include <gui/settings_screen/SettingsPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80093cc:	b580      	push	{r7, lr}
 80093ce:	b084      	sub	sp, #16
 80093d0:	af00      	add	r7, sp, #0
 80093d2:	60f8      	str	r0, [r7, #12]
 80093d4:	60b9      	str	r1, [r7, #8]
 80093d6:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 80093d8:	68fb      	ldr	r3, [r7, #12]
 80093da:	4618      	mov	r0, r3
 80093dc:	f7ff ff1a 	bl	8009214 <_ZN8touchgfx14MVPApplicationC1Ev>
 80093e0:	4a16      	ldr	r2, [pc, #88]	@ (800943c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 80093e2:	68fb      	ldr	r3, [r7, #12]
 80093e4:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 80093e6:	68fb      	ldr	r3, [r7, #12]
 80093e8:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 80093ec:	4618      	mov	r0, r3
 80093ee:	f000 f8eb 	bl	80095c8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 80093f2:	68fb      	ldr	r3, [r7, #12]
 80093f4:	687a      	ldr	r2, [r7, #4]
 80093f6:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 80093fa:	68fb      	ldr	r3, [r7, #12]
 80093fc:	68ba      	ldr	r2, [r7, #8]
 80093fe:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8009402:	f7ff fe49 	bl	8009098 <_ZN8touchgfx3HAL11getInstanceEv>
 8009406:	4603      	mov	r3, r0
 8009408:	681a      	ldr	r2, [r3, #0]
 800940a:	3208      	adds	r2, #8
 800940c:	6812      	ldr	r2, [r2, #0]
 800940e:	2100      	movs	r1, #0
 8009410:	4618      	mov	r0, r3
 8009412:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8009414:	2000      	movs	r0, #0
 8009416:	f003 fd77 	bl	800cf08 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800941a:	f7ff fe49 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 800941e:	4603      	mov	r3, r0
 8009420:	4618      	mov	r0, r3
 8009422:	f013 f9a6 	bl	801c772 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8009426:	f7ff fe43 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 800942a:	4603      	mov	r3, r0
 800942c:	4618      	mov	r0, r3
 800942e:	f013 fa1b 	bl	801c868 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8009432:	68fb      	ldr	r3, [r7, #12]
 8009434:	4618      	mov	r0, r3
 8009436:	3710      	adds	r7, #16
 8009438:	46bd      	mov	sp, r7
 800943a:	bd80      	pop	{r7, pc}
 800943c:	080289dc 	.word	0x080289dc

08009440 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8009440:	b480      	push	{r7}
 8009442:	b083      	sub	sp, #12
 8009444:	af00      	add	r7, sp, #0
 8009446:	6078      	str	r0, [r7, #4]
 8009448:	6039      	str	r1, [r7, #0]
 800944a:	687b      	ldr	r3, [r7, #4]
 800944c:	4618      	mov	r0, r3
 800944e:	370c      	adds	r7, #12
 8009450:	46bd      	mov	sp, r7
 8009452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009456:	4770      	bx	lr

08009458 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8009458:	b580      	push	{r7, lr}
 800945a:	b082      	sub	sp, #8
 800945c:	af00      	add	r7, sp, #0
 800945e:	6078      	str	r0, [r7, #4]
 8009460:	6039      	str	r1, [r7, #0]
 8009462:	687b      	ldr	r3, [r7, #4]
 8009464:	683a      	ldr	r2, [r7, #0]
 8009466:	4611      	mov	r1, r2
 8009468:	4618      	mov	r0, r3
 800946a:	f7ff ffe9 	bl	8009440 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800946e:	683b      	ldr	r3, [r7, #0]
 8009470:	685a      	ldr	r2, [r3, #4]
 8009472:	687b      	ldr	r3, [r7, #4]
 8009474:	605a      	str	r2, [r3, #4]
 8009476:	687b      	ldr	r3, [r7, #4]
 8009478:	683a      	ldr	r2, [r7, #0]
 800947a:	3308      	adds	r3, #8
 800947c:	3208      	adds	r2, #8
 800947e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009482:	e883 0003 	stmia.w	r3, {r0, r1}
 8009486:	687b      	ldr	r3, [r7, #4]
 8009488:	4618      	mov	r0, r3
 800948a:	3708      	adds	r7, #8
 800948c:	46bd      	mov	sp, r7
 800948e:	bd80      	pop	{r7, pc}

08009490 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 8009490:	b590      	push	{r4, r7, lr}
 8009492:	b089      	sub	sp, #36	@ 0x24
 8009494:	af00      	add	r7, sp, #0
 8009496:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
 8009498:	687b      	ldr	r3, [r7, #4]
 800949a:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 800949e:	4b10      	ldr	r3, [pc, #64]	@ (80094e0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 80094a0:	61bb      	str	r3, [r7, #24]
 80094a2:	2300      	movs	r3, #0
 80094a4:	61fb      	str	r3, [r7, #28]
 80094a6:	f107 0008 	add.w	r0, r7, #8
 80094aa:	f107 0318 	add.w	r3, r7, #24
 80094ae:	cb0c      	ldmia	r3, {r2, r3}
 80094b0:	6879      	ldr	r1, [r7, #4]
 80094b2:	f000 f8a5 	bl	8009600 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 80094b6:	f107 0308 	add.w	r3, r7, #8
 80094ba:	4619      	mov	r1, r3
 80094bc:	4620      	mov	r0, r4
 80094be:	f7ff ffcb 	bl	8009458 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 80094c2:	f107 0308 	add.w	r3, r7, #8
 80094c6:	4618      	mov	r0, r3
 80094c8:	f000 fb9e 	bl	8009c08 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 80094cc:	687b      	ldr	r3, [r7, #4]
 80094ce:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 80094d2:	687b      	ldr	r3, [r7, #4]
 80094d4:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 80094d8:	bf00      	nop
 80094da:	3724      	adds	r7, #36	@ 0x24
 80094dc:	46bd      	mov	sp, r7
 80094de:	bd90      	pop	{r4, r7, pc}
 80094e0:	080094e5 	.word	0x080094e5

080094e4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80094e4:	b580      	push	{r7, lr}
 80094e6:	b084      	sub	sp, #16
 80094e8:	af02      	add	r7, sp, #8
 80094ea:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80094ec:	687b      	ldr	r3, [r7, #4]
 80094ee:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 80094f2:	687b      	ldr	r3, [r7, #4]
 80094f4:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 80094f8:	461a      	mov	r2, r3
 80094fa:	687b      	ldr	r3, [r7, #4]
 80094fc:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8009500:	9300      	str	r3, [sp, #0]
 8009502:	4b04      	ldr	r3, [pc, #16]	@ (8009514 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 8009504:	4804      	ldr	r0, [pc, #16]	@ (8009518 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 8009506:	f000 f8ad 	bl	8009664 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800950a:	bf00      	nop
 800950c:	3708      	adds	r7, #8
 800950e:	46bd      	mov	sp, r7
 8009510:	bd80      	pop	{r7, pc}
 8009512:	bf00      	nop
 8009514:	200023e8 	.word	0x200023e8
 8009518:	200023e4 	.word	0x200023e4

0800951c <_ZN23FrontendApplicationBase30gotoSettingsScreenNoTransitionEv>:

// Settings

void FrontendApplicationBase::gotoSettingsScreenNoTransition()
{
 800951c:	b590      	push	{r4, r7, lr}
 800951e:	b089      	sub	sp, #36	@ 0x24
 8009520:	af00      	add	r7, sp, #0
 8009522:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSettingsScreenNoTransitionImpl);
 8009524:	687b      	ldr	r3, [r7, #4]
 8009526:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 800952a:	4b10      	ldr	r3, [pc, #64]	@ (800956c <_ZN23FrontendApplicationBase30gotoSettingsScreenNoTransitionEv+0x50>)
 800952c:	61bb      	str	r3, [r7, #24]
 800952e:	2300      	movs	r3, #0
 8009530:	61fb      	str	r3, [r7, #28]
 8009532:	f107 0008 	add.w	r0, r7, #8
 8009536:	f107 0318 	add.w	r3, r7, #24
 800953a:	cb0c      	ldmia	r3, {r2, r3}
 800953c:	6879      	ldr	r1, [r7, #4]
 800953e:	f000 f85f 	bl	8009600 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8009542:	f107 0308 	add.w	r3, r7, #8
 8009546:	4619      	mov	r1, r3
 8009548:	4620      	mov	r0, r4
 800954a:	f7ff ff85 	bl	8009458 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800954e:	f107 0308 	add.w	r3, r7, #8
 8009552:	4618      	mov	r0, r3
 8009554:	f000 fb58 	bl	8009c08 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8009558:	687b      	ldr	r3, [r7, #4]
 800955a:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 800955e:	687b      	ldr	r3, [r7, #4]
 8009560:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8009564:	bf00      	nop
 8009566:	3724      	adds	r7, #36	@ 0x24
 8009568:	46bd      	mov	sp, r7
 800956a:	bd90      	pop	{r4, r7, pc}
 800956c:	08009571 	.word	0x08009571

08009570 <_ZN23FrontendApplicationBase34gotoSettingsScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoSettingsScreenNoTransitionImpl()
{
 8009570:	b580      	push	{r7, lr}
 8009572:	b084      	sub	sp, #16
 8009574:	af02      	add	r7, sp, #8
 8009576:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<SettingsView, SettingsPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8009578:	687b      	ldr	r3, [r7, #4]
 800957a:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 800957e:	687b      	ldr	r3, [r7, #4]
 8009580:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8009584:	461a      	mov	r2, r3
 8009586:	687b      	ldr	r3, [r7, #4]
 8009588:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800958c:	9300      	str	r3, [sp, #0]
 800958e:	4b04      	ldr	r3, [pc, #16]	@ (80095a0 <_ZN23FrontendApplicationBase34gotoSettingsScreenNoTransitionImplEv+0x30>)
 8009590:	4804      	ldr	r0, [pc, #16]	@ (80095a4 <_ZN23FrontendApplicationBase34gotoSettingsScreenNoTransitionImplEv+0x34>)
 8009592:	f000 f981 	bl	8009898 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8009596:	bf00      	nop
 8009598:	3708      	adds	r7, #8
 800959a:	46bd      	mov	sp, r7
 800959c:	bd80      	pop	{r7, pc}
 800959e:	bf00      	nop
 80095a0:	200023e8 	.word	0x200023e8
 80095a4:	200023e4 	.word	0x200023e4

080095a8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 80095a8:	b480      	push	{r7}
 80095aa:	b083      	sub	sp, #12
 80095ac:	af00      	add	r7, sp, #0
 80095ae:	6078      	str	r0, [r7, #4]
 80095b0:	4a04      	ldr	r2, [pc, #16]	@ (80095c4 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 80095b2:	687b      	ldr	r3, [r7, #4]
 80095b4:	601a      	str	r2, [r3, #0]
 80095b6:	687b      	ldr	r3, [r7, #4]
 80095b8:	4618      	mov	r0, r3
 80095ba:	370c      	adds	r7, #12
 80095bc:	46bd      	mov	sp, r7
 80095be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095c2:	4770      	bx	lr
 80095c4:	08028ac0 	.word	0x08028ac0

080095c8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 80095c8:	b580      	push	{r7, lr}
 80095ca:	b082      	sub	sp, #8
 80095cc:	af00      	add	r7, sp, #0
 80095ce:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 80095d0:	687b      	ldr	r3, [r7, #4]
 80095d2:	4618      	mov	r0, r3
 80095d4:	f7ff ffe8 	bl	80095a8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 80095d8:	4a08      	ldr	r2, [pc, #32]	@ (80095fc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 80095da:	687b      	ldr	r3, [r7, #4]
 80095dc:	601a      	str	r2, [r3, #0]
 80095de:	687b      	ldr	r3, [r7, #4]
 80095e0:	2200      	movs	r2, #0
 80095e2:	605a      	str	r2, [r3, #4]
 80095e4:	687b      	ldr	r3, [r7, #4]
 80095e6:	2200      	movs	r2, #0
 80095e8:	609a      	str	r2, [r3, #8]
 80095ea:	687b      	ldr	r3, [r7, #4]
 80095ec:	2200      	movs	r2, #0
 80095ee:	60da      	str	r2, [r3, #12]
    {
    }
 80095f0:	687b      	ldr	r3, [r7, #4]
 80095f2:	4618      	mov	r0, r3
 80095f4:	3708      	adds	r7, #8
 80095f6:	46bd      	mov	sp, r7
 80095f8:	bd80      	pop	{r7, pc}
 80095fa:	bf00      	nop
 80095fc:	08028a30 	.word	0x08028a30

08009600 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 8009600:	b580      	push	{r7, lr}
 8009602:	b084      	sub	sp, #16
 8009604:	af00      	add	r7, sp, #0
 8009606:	60f8      	str	r0, [r7, #12]
 8009608:	60b9      	str	r1, [r7, #8]
 800960a:	4639      	mov	r1, r7
 800960c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 8009610:	68fb      	ldr	r3, [r7, #12]
 8009612:	4618      	mov	r0, r3
 8009614:	f7ff ffc8 	bl	80095a8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8009618:	4a08      	ldr	r2, [pc, #32]	@ (800963c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800961a:	68fb      	ldr	r3, [r7, #12]
 800961c:	601a      	str	r2, [r3, #0]
 800961e:	68fb      	ldr	r3, [r7, #12]
 8009620:	68ba      	ldr	r2, [r7, #8]
 8009622:	605a      	str	r2, [r3, #4]
 8009624:	68fb      	ldr	r3, [r7, #12]
 8009626:	3308      	adds	r3, #8
 8009628:	463a      	mov	r2, r7
 800962a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800962e:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 8009632:	68fb      	ldr	r3, [r7, #12]
 8009634:	4618      	mov	r0, r3
 8009636:	3710      	adds	r7, #16
 8009638:	46bd      	mov	sp, r7
 800963a:	bd80      	pop	{r7, pc}
 800963c:	08028a30 	.word	0x08028a30

08009640 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 8009640:	b580      	push	{r7, lr}
 8009642:	b082      	sub	sp, #8
 8009644:	af00      	add	r7, sp, #0
 8009646:	6078      	str	r0, [r7, #4]
 8009648:	687b      	ldr	r3, [r7, #4]
 800964a:	4618      	mov	r0, r3
 800964c:	f7ff fd4c 	bl	80090e8 <_ZN8touchgfx10TransitionC1Ev>
 8009650:	4a03      	ldr	r2, [pc, #12]	@ (8009660 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8009652:	687b      	ldr	r3, [r7, #4]
 8009654:	601a      	str	r2, [r3, #0]
 8009656:	687b      	ldr	r3, [r7, #4]
 8009658:	4618      	mov	r0, r3
 800965a:	3708      	adds	r7, #8
 800965c:	46bd      	mov	sp, r7
 800965e:	bd80      	pop	{r7, pc}
 8009660:	080289b8 	.word	0x080289b8

08009664 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8009664:	b590      	push	{r4, r7, lr}
 8009666:	b08f      	sub	sp, #60	@ 0x3c
 8009668:	af00      	add	r7, sp, #0
 800966a:	60f8      	str	r0, [r7, #12]
 800966c:	60b9      	str	r1, [r7, #8]
 800966e:	607a      	str	r2, [r7, #4]
 8009670:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8009672:	687b      	ldr	r3, [r7, #4]
 8009674:	689a      	ldr	r2, [r3, #8]
 8009676:	687b      	ldr	r3, [r7, #4]
 8009678:	689b      	ldr	r3, [r3, #8]
 800967a:	681b      	ldr	r3, [r3, #0]
 800967c:	3320      	adds	r3, #32
 800967e:	681b      	ldr	r3, [r3, #0]
 8009680:	4610      	mov	r0, r2
 8009682:	4798      	blx	r3
 8009684:	4603      	mov	r3, r0
 8009686:	f5b3 7fe8 	cmp.w	r3, #464	@ 0x1d0
 800968a:	d205      	bcs.n	8009698 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800968c:	4b7d      	ldr	r3, [pc, #500]	@ (8009884 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800968e:	4a7e      	ldr	r2, [pc, #504]	@ (8009888 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009690:	21a3      	movs	r1, #163	@ 0xa3
 8009692:	487e      	ldr	r0, [pc, #504]	@ (800988c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009694:	f01a fdee 	bl	8024274 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8009698:	687b      	ldr	r3, [r7, #4]
 800969a:	685a      	ldr	r2, [r3, #4]
 800969c:	687b      	ldr	r3, [r7, #4]
 800969e:	685b      	ldr	r3, [r3, #4]
 80096a0:	681b      	ldr	r3, [r3, #0]
 80096a2:	3320      	adds	r3, #32
 80096a4:	681b      	ldr	r3, [r3, #0]
 80096a6:	4610      	mov	r0, r2
 80096a8:	4798      	blx	r3
 80096aa:	4603      	mov	r3, r0
 80096ac:	2b0f      	cmp	r3, #15
 80096ae:	d805      	bhi.n	80096bc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 80096b0:	4b77      	ldr	r3, [pc, #476]	@ (8009890 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 80096b2:	4a75      	ldr	r2, [pc, #468]	@ (8009888 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80096b4:	21a4      	movs	r1, #164	@ 0xa4
 80096b6:	4875      	ldr	r0, [pc, #468]	@ (800988c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80096b8:	f01a fddc 	bl	8024274 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80096bc:	687b      	ldr	r3, [r7, #4]
 80096be:	68da      	ldr	r2, [r3, #12]
 80096c0:	687b      	ldr	r3, [r7, #4]
 80096c2:	68db      	ldr	r3, [r3, #12]
 80096c4:	681b      	ldr	r3, [r3, #0]
 80096c6:	3320      	adds	r3, #32
 80096c8:	681b      	ldr	r3, [r3, #0]
 80096ca:	4610      	mov	r0, r2
 80096cc:	4798      	blx	r3
 80096ce:	4603      	mov	r3, r0
 80096d0:	2b0b      	cmp	r3, #11
 80096d2:	d805      	bhi.n	80096e0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 80096d4:	4b6f      	ldr	r3, [pc, #444]	@ (8009894 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 80096d6:	4a6c      	ldr	r2, [pc, #432]	@ (8009888 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80096d8:	21a5      	movs	r1, #165	@ 0xa5
 80096da:	486c      	ldr	r0, [pc, #432]	@ (800988c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80096dc:	f01a fdca 	bl	8024274 <__assert_func>
 80096e0:	68fb      	ldr	r3, [r7, #12]
 80096e2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80096e4:	68bb      	ldr	r3, [r7, #8]
 80096e6:	627b      	str	r3, [r7, #36]	@ 0x24
 80096e8:	683b      	ldr	r3, [r7, #0]
 80096ea:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 80096ec:	f009 fcdc 	bl	80130a8 <_ZN8touchgfx11Application11getInstanceEv>
 80096f0:	4603      	mov	r3, r0
 80096f2:	4618      	mov	r0, r3
 80096f4:	f7ff fca2 	bl	800903c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80096f8:	6a3b      	ldr	r3, [r7, #32]
 80096fa:	681b      	ldr	r3, [r3, #0]
 80096fc:	2b00      	cmp	r3, #0
 80096fe:	d008      	beq.n	8009712 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8009700:	6a3b      	ldr	r3, [r7, #32]
 8009702:	681a      	ldr	r2, [r3, #0]
 8009704:	6a3b      	ldr	r3, [r7, #32]
 8009706:	681b      	ldr	r3, [r3, #0]
 8009708:	681b      	ldr	r3, [r3, #0]
 800970a:	330c      	adds	r3, #12
 800970c:	681b      	ldr	r3, [r3, #0]
 800970e:	4610      	mov	r0, r2
 8009710:	4798      	blx	r3
    if (*currentTrans)
 8009712:	6a3b      	ldr	r3, [r7, #32]
 8009714:	681b      	ldr	r3, [r3, #0]
 8009716:	2b00      	cmp	r3, #0
 8009718:	d007      	beq.n	800972a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800971a:	6a3b      	ldr	r3, [r7, #32]
 800971c:	681a      	ldr	r2, [r3, #0]
 800971e:	6a3b      	ldr	r3, [r7, #32]
 8009720:	681b      	ldr	r3, [r3, #0]
 8009722:	681b      	ldr	r3, [r3, #0]
 8009724:	681b      	ldr	r3, [r3, #0]
 8009726:	4610      	mov	r0, r2
 8009728:	4798      	blx	r3
    if (*currentScreen)
 800972a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800972c:	681b      	ldr	r3, [r3, #0]
 800972e:	2b00      	cmp	r3, #0
 8009730:	d008      	beq.n	8009744 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8009732:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009734:	681a      	ldr	r2, [r3, #0]
 8009736:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009738:	681b      	ldr	r3, [r3, #0]
 800973a:	681b      	ldr	r3, [r3, #0]
 800973c:	3314      	adds	r3, #20
 800973e:	681b      	ldr	r3, [r3, #0]
 8009740:	4610      	mov	r0, r2
 8009742:	4798      	blx	r3
    if (*currentPresenter)
 8009744:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009746:	681b      	ldr	r3, [r3, #0]
 8009748:	2b00      	cmp	r3, #0
 800974a:	d008      	beq.n	800975e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800974c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800974e:	681a      	ldr	r2, [r3, #0]
 8009750:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009752:	681b      	ldr	r3, [r3, #0]
 8009754:	681b      	ldr	r3, [r3, #0]
 8009756:	3304      	adds	r3, #4
 8009758:	681b      	ldr	r3, [r3, #0]
 800975a:	4610      	mov	r0, r2
 800975c:	4798      	blx	r3
    if (*currentScreen)
 800975e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009760:	681b      	ldr	r3, [r3, #0]
 8009762:	2b00      	cmp	r3, #0
 8009764:	d007      	beq.n	8009776 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8009766:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009768:	681a      	ldr	r2, [r3, #0]
 800976a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800976c:	681b      	ldr	r3, [r3, #0]
 800976e:	681b      	ldr	r3, [r3, #0]
 8009770:	681b      	ldr	r3, [r3, #0]
 8009772:	4610      	mov	r0, r2
 8009774:	4798      	blx	r3
    if (*currentPresenter)
 8009776:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009778:	681b      	ldr	r3, [r3, #0]
 800977a:	2b00      	cmp	r3, #0
 800977c:	d008      	beq.n	8009790 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800977e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009780:	681a      	ldr	r2, [r3, #0]
 8009782:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009784:	681b      	ldr	r3, [r3, #0]
 8009786:	681b      	ldr	r3, [r3, #0]
 8009788:	3308      	adds	r3, #8
 800978a:	681b      	ldr	r3, [r3, #0]
 800978c:	4610      	mov	r0, r2
 800978e:	4798      	blx	r3
}
 8009790:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8009792:	687b      	ldr	r3, [r7, #4]
 8009794:	68db      	ldr	r3, [r3, #12]
 8009796:	2100      	movs	r1, #0
 8009798:	4618      	mov	r0, r3
 800979a:	f000 f997 	bl	8009acc <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800979e:	4603      	mov	r3, r0
 80097a0:	4619      	mov	r1, r3
 80097a2:	200c      	movs	r0, #12
 80097a4:	f7ff fbb4 	bl	8008f10 <_ZnwjPv>
 80097a8:	4604      	mov	r4, r0
 80097aa:	4620      	mov	r0, r4
 80097ac:	f7ff ff48 	bl	8009640 <_ZN8touchgfx12NoTransitionC1Ev>
 80097b0:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80097b2:	687b      	ldr	r3, [r7, #4]
 80097b4:	689b      	ldr	r3, [r3, #8]
 80097b6:	2100      	movs	r1, #0
 80097b8:	4618      	mov	r0, r3
 80097ba:	f000 f99a 	bl	8009af2 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 80097be:	4603      	mov	r3, r0
 80097c0:	4619      	mov	r1, r3
 80097c2:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 80097c6:	f7ff fba3 	bl	8008f10 <_ZnwjPv>
 80097ca:	4604      	mov	r4, r0
 80097cc:	4620      	mov	r0, r4
 80097ce:	f003 fed1 	bl	800d574 <_ZN11Screen1ViewC1Ev>
 80097d2:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80097d4:	687b      	ldr	r3, [r7, #4]
 80097d6:	685b      	ldr	r3, [r3, #4]
 80097d8:	2100      	movs	r1, #0
 80097da:	4618      	mov	r0, r3
 80097dc:	f000 f99c 	bl	8009b18 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 80097e0:	4603      	mov	r3, r0
 80097e2:	4619      	mov	r1, r3
 80097e4:	2010      	movs	r0, #16
 80097e6:	f7ff fb93 	bl	8008f10 <_ZnwjPv>
 80097ea:	4604      	mov	r4, r0
 80097ec:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80097ee:	4620      	mov	r0, r4
 80097f0:	f003 fe14 	bl	800d41c <_ZN16Screen1PresenterC1ER11Screen1View>
 80097f4:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 80097f6:	683b      	ldr	r3, [r7, #0]
 80097f8:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80097fa:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 80097fc:	68bb      	ldr	r3, [r7, #8]
 80097fe:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8009800:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8009802:	68fb      	ldr	r3, [r7, #12]
 8009804:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009806:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8009808:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800980a:	2b00      	cmp	r3, #0
 800980c:	d002      	beq.n	8009814 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800980e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009810:	3304      	adds	r3, #4
 8009812:	e000      	b.n	8009816 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8009814:	2300      	movs	r3, #0
 8009816:	4619      	mov	r1, r3
 8009818:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 800981a:	f7ff fd55 	bl	80092c8 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800981e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009820:	3304      	adds	r3, #4
 8009822:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8009824:	4618      	mov	r0, r3
 8009826:	f7ff fdc2 	bl	80093ae <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800982a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800982c:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800982e:	4618      	mov	r0, r3
 8009830:	f000 f985 	bl	8009b3e <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>
 8009834:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009836:	61fb      	str	r3, [r7, #28]
 8009838:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800983a:	61bb      	str	r3, [r7, #24]
 800983c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800983e:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009840:	69fb      	ldr	r3, [r7, #28]
 8009842:	681b      	ldr	r3, [r3, #0]
 8009844:	330c      	adds	r3, #12
 8009846:	681b      	ldr	r3, [r3, #0]
 8009848:	69f8      	ldr	r0, [r7, #28]
 800984a:	4798      	blx	r3
    newPresenter->activate();
 800984c:	69bb      	ldr	r3, [r7, #24]
 800984e:	681b      	ldr	r3, [r3, #0]
 8009850:	681b      	ldr	r3, [r3, #0]
 8009852:	69b8      	ldr	r0, [r7, #24]
 8009854:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8009856:	6979      	ldr	r1, [r7, #20]
 8009858:	69f8      	ldr	r0, [r7, #28]
 800985a:	f00b f8e7 	bl	8014a2c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800985e:	697b      	ldr	r3, [r7, #20]
 8009860:	681b      	ldr	r3, [r3, #0]
 8009862:	3310      	adds	r3, #16
 8009864:	681b      	ldr	r3, [r3, #0]
 8009866:	6978      	ldr	r0, [r7, #20]
 8009868:	4798      	blx	r3
    newTransition->invalidate();
 800986a:	697b      	ldr	r3, [r7, #20]
 800986c:	681b      	ldr	r3, [r3, #0]
 800986e:	3314      	adds	r3, #20
 8009870:	681b      	ldr	r3, [r3, #0]
 8009872:	6978      	ldr	r0, [r7, #20]
 8009874:	4798      	blx	r3
}
 8009876:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 8009878:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800987a:	4618      	mov	r0, r3
 800987c:	373c      	adds	r7, #60	@ 0x3c
 800987e:	46bd      	mov	sp, r7
 8009880:	bd90      	pop	{r4, r7, pc}
 8009882:	bf00      	nop
 8009884:	08027518 	.word	0x08027518
 8009888:	080275a8 	.word	0x080275a8
 800988c:	0802767c 	.word	0x0802767c
 8009890:	080276c0 	.word	0x080276c0
 8009894:	08027764 	.word	0x08027764

08009898 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8009898:	b590      	push	{r4, r7, lr}
 800989a:	b08f      	sub	sp, #60	@ 0x3c
 800989c:	af00      	add	r7, sp, #0
 800989e:	60f8      	str	r0, [r7, #12]
 80098a0:	60b9      	str	r1, [r7, #8]
 80098a2:	607a      	str	r2, [r7, #4]
 80098a4:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80098a6:	687b      	ldr	r3, [r7, #4]
 80098a8:	689a      	ldr	r2, [r3, #8]
 80098aa:	687b      	ldr	r3, [r7, #4]
 80098ac:	689b      	ldr	r3, [r3, #8]
 80098ae:	681b      	ldr	r3, [r3, #0]
 80098b0:	3320      	adds	r3, #32
 80098b2:	681b      	ldr	r3, [r3, #0]
 80098b4:	4610      	mov	r0, r2
 80098b6:	4798      	blx	r3
 80098b8:	4603      	mov	r3, r0
 80098ba:	f5b3 7f5e 	cmp.w	r3, #888	@ 0x378
 80098be:	d205      	bcs.n	80098cc <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 80098c0:	4b7d      	ldr	r3, [pc, #500]	@ (8009ab8 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 80098c2:	4a7e      	ldr	r2, [pc, #504]	@ (8009abc <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80098c4:	21a3      	movs	r1, #163	@ 0xa3
 80098c6:	487e      	ldr	r0, [pc, #504]	@ (8009ac0 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80098c8:	f01a fcd4 	bl	8024274 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80098cc:	687b      	ldr	r3, [r7, #4]
 80098ce:	685a      	ldr	r2, [r3, #4]
 80098d0:	687b      	ldr	r3, [r7, #4]
 80098d2:	685b      	ldr	r3, [r3, #4]
 80098d4:	681b      	ldr	r3, [r3, #0]
 80098d6:	3320      	adds	r3, #32
 80098d8:	681b      	ldr	r3, [r3, #0]
 80098da:	4610      	mov	r0, r2
 80098dc:	4798      	blx	r3
 80098de:	4603      	mov	r3, r0
 80098e0:	2b0f      	cmp	r3, #15
 80098e2:	d805      	bhi.n	80098f0 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 80098e4:	4b77      	ldr	r3, [pc, #476]	@ (8009ac4 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 80098e6:	4a75      	ldr	r2, [pc, #468]	@ (8009abc <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80098e8:	21a4      	movs	r1, #164	@ 0xa4
 80098ea:	4875      	ldr	r0, [pc, #468]	@ (8009ac0 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80098ec:	f01a fcc2 	bl	8024274 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80098f0:	687b      	ldr	r3, [r7, #4]
 80098f2:	68da      	ldr	r2, [r3, #12]
 80098f4:	687b      	ldr	r3, [r7, #4]
 80098f6:	68db      	ldr	r3, [r3, #12]
 80098f8:	681b      	ldr	r3, [r3, #0]
 80098fa:	3320      	adds	r3, #32
 80098fc:	681b      	ldr	r3, [r3, #0]
 80098fe:	4610      	mov	r0, r2
 8009900:	4798      	blx	r3
 8009902:	4603      	mov	r3, r0
 8009904:	2b0b      	cmp	r3, #11
 8009906:	d805      	bhi.n	8009914 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8009908:	4b6f      	ldr	r3, [pc, #444]	@ (8009ac8 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800990a:	4a6c      	ldr	r2, [pc, #432]	@ (8009abc <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800990c:	21a5      	movs	r1, #165	@ 0xa5
 800990e:	486c      	ldr	r0, [pc, #432]	@ (8009ac0 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009910:	f01a fcb0 	bl	8024274 <__assert_func>
 8009914:	68fb      	ldr	r3, [r7, #12]
 8009916:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009918:	68bb      	ldr	r3, [r7, #8]
 800991a:	627b      	str	r3, [r7, #36]	@ 0x24
 800991c:	683b      	ldr	r3, [r7, #0]
 800991e:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8009920:	f009 fbc2 	bl	80130a8 <_ZN8touchgfx11Application11getInstanceEv>
 8009924:	4603      	mov	r3, r0
 8009926:	4618      	mov	r0, r3
 8009928:	f7ff fb88 	bl	800903c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800992c:	6a3b      	ldr	r3, [r7, #32]
 800992e:	681b      	ldr	r3, [r3, #0]
 8009930:	2b00      	cmp	r3, #0
 8009932:	d008      	beq.n	8009946 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8009934:	6a3b      	ldr	r3, [r7, #32]
 8009936:	681a      	ldr	r2, [r3, #0]
 8009938:	6a3b      	ldr	r3, [r7, #32]
 800993a:	681b      	ldr	r3, [r3, #0]
 800993c:	681b      	ldr	r3, [r3, #0]
 800993e:	330c      	adds	r3, #12
 8009940:	681b      	ldr	r3, [r3, #0]
 8009942:	4610      	mov	r0, r2
 8009944:	4798      	blx	r3
    if (*currentTrans)
 8009946:	6a3b      	ldr	r3, [r7, #32]
 8009948:	681b      	ldr	r3, [r3, #0]
 800994a:	2b00      	cmp	r3, #0
 800994c:	d007      	beq.n	800995e <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800994e:	6a3b      	ldr	r3, [r7, #32]
 8009950:	681a      	ldr	r2, [r3, #0]
 8009952:	6a3b      	ldr	r3, [r7, #32]
 8009954:	681b      	ldr	r3, [r3, #0]
 8009956:	681b      	ldr	r3, [r3, #0]
 8009958:	681b      	ldr	r3, [r3, #0]
 800995a:	4610      	mov	r0, r2
 800995c:	4798      	blx	r3
    if (*currentScreen)
 800995e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009960:	681b      	ldr	r3, [r3, #0]
 8009962:	2b00      	cmp	r3, #0
 8009964:	d008      	beq.n	8009978 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8009966:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009968:	681a      	ldr	r2, [r3, #0]
 800996a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800996c:	681b      	ldr	r3, [r3, #0]
 800996e:	681b      	ldr	r3, [r3, #0]
 8009970:	3314      	adds	r3, #20
 8009972:	681b      	ldr	r3, [r3, #0]
 8009974:	4610      	mov	r0, r2
 8009976:	4798      	blx	r3
    if (*currentPresenter)
 8009978:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800997a:	681b      	ldr	r3, [r3, #0]
 800997c:	2b00      	cmp	r3, #0
 800997e:	d008      	beq.n	8009992 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8009980:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009982:	681a      	ldr	r2, [r3, #0]
 8009984:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009986:	681b      	ldr	r3, [r3, #0]
 8009988:	681b      	ldr	r3, [r3, #0]
 800998a:	3304      	adds	r3, #4
 800998c:	681b      	ldr	r3, [r3, #0]
 800998e:	4610      	mov	r0, r2
 8009990:	4798      	blx	r3
    if (*currentScreen)
 8009992:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009994:	681b      	ldr	r3, [r3, #0]
 8009996:	2b00      	cmp	r3, #0
 8009998:	d007      	beq.n	80099aa <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800999a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800999c:	681a      	ldr	r2, [r3, #0]
 800999e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80099a0:	681b      	ldr	r3, [r3, #0]
 80099a2:	681b      	ldr	r3, [r3, #0]
 80099a4:	681b      	ldr	r3, [r3, #0]
 80099a6:	4610      	mov	r0, r2
 80099a8:	4798      	blx	r3
    if (*currentPresenter)
 80099aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80099ac:	681b      	ldr	r3, [r3, #0]
 80099ae:	2b00      	cmp	r3, #0
 80099b0:	d008      	beq.n	80099c4 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 80099b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80099b4:	681a      	ldr	r2, [r3, #0]
 80099b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80099b8:	681b      	ldr	r3, [r3, #0]
 80099ba:	681b      	ldr	r3, [r3, #0]
 80099bc:	3308      	adds	r3, #8
 80099be:	681b      	ldr	r3, [r3, #0]
 80099c0:	4610      	mov	r0, r2
 80099c2:	4798      	blx	r3
}
 80099c4:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80099c6:	687b      	ldr	r3, [r7, #4]
 80099c8:	68db      	ldr	r3, [r3, #12]
 80099ca:	2100      	movs	r1, #0
 80099cc:	4618      	mov	r0, r3
 80099ce:	f000 f87d 	bl	8009acc <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80099d2:	4603      	mov	r3, r0
 80099d4:	4619      	mov	r1, r3
 80099d6:	200c      	movs	r0, #12
 80099d8:	f7ff fa9a 	bl	8008f10 <_ZnwjPv>
 80099dc:	4604      	mov	r4, r0
 80099de:	4620      	mov	r0, r4
 80099e0:	f7ff fe2e 	bl	8009640 <_ZN8touchgfx12NoTransitionC1Ev>
 80099e4:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80099e6:	687b      	ldr	r3, [r7, #4]
 80099e8:	689b      	ldr	r3, [r3, #8]
 80099ea:	2100      	movs	r1, #0
 80099ec:	4618      	mov	r0, r3
 80099ee:	f000 f8b4 	bl	8009b5a <_ZN8touchgfx17AbstractPartition2atI12SettingsViewEERT_t>
 80099f2:	4603      	mov	r3, r0
 80099f4:	4619      	mov	r1, r3
 80099f6:	f44f 705e 	mov.w	r0, #888	@ 0x378
 80099fa:	f7ff fa89 	bl	8008f10 <_ZnwjPv>
 80099fe:	4604      	mov	r4, r0
 8009a00:	4620      	mov	r0, r4
 8009a02:	f003 fee1 	bl	800d7c8 <_ZN12SettingsViewC1Ev>
 8009a06:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8009a08:	687b      	ldr	r3, [r7, #4]
 8009a0a:	685b      	ldr	r3, [r3, #4]
 8009a0c:	2100      	movs	r1, #0
 8009a0e:	4618      	mov	r0, r3
 8009a10:	f000 f8b6 	bl	8009b80 <_ZN8touchgfx17AbstractPartition2atI17SettingsPresenterEERT_t>
 8009a14:	4603      	mov	r3, r0
 8009a16:	4619      	mov	r1, r3
 8009a18:	2010      	movs	r0, #16
 8009a1a:	f7ff fa79 	bl	8008f10 <_ZnwjPv>
 8009a1e:	4604      	mov	r4, r0
 8009a20:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8009a22:	4620      	mov	r0, r4
 8009a24:	f003 fe54 	bl	800d6d0 <_ZN17SettingsPresenterC1ER12SettingsView>
 8009a28:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 8009a2a:	683b      	ldr	r3, [r7, #0]
 8009a2c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8009a2e:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8009a30:	68bb      	ldr	r3, [r7, #8]
 8009a32:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8009a34:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8009a36:	68fb      	ldr	r3, [r7, #12]
 8009a38:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009a3a:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8009a3c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009a3e:	2b00      	cmp	r3, #0
 8009a40:	d002      	beq.n	8009a48 <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8009a42:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009a44:	3304      	adds	r3, #4
 8009a46:	e000      	b.n	8009a4a <_ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8009a48:	2300      	movs	r3, #0
 8009a4a:	4619      	mov	r1, r3
 8009a4c:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8009a4e:	f7ff fc3b 	bl	80092c8 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8009a52:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009a54:	3304      	adds	r3, #4
 8009a56:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8009a58:	4618      	mov	r0, r3
 8009a5a:	f7ff fca8 	bl	80093ae <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8009a5e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009a60:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8009a62:	4618      	mov	r0, r3
 8009a64:	f000 f89f 	bl	8009ba6 <_ZN8touchgfx4ViewI17SettingsPresenterE4bindERS1_>
 8009a68:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009a6a:	61fb      	str	r3, [r7, #28]
 8009a6c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009a6e:	61bb      	str	r3, [r7, #24]
 8009a70:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009a72:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009a74:	69fb      	ldr	r3, [r7, #28]
 8009a76:	681b      	ldr	r3, [r3, #0]
 8009a78:	330c      	adds	r3, #12
 8009a7a:	681b      	ldr	r3, [r3, #0]
 8009a7c:	69f8      	ldr	r0, [r7, #28]
 8009a7e:	4798      	blx	r3
    newPresenter->activate();
 8009a80:	69bb      	ldr	r3, [r7, #24]
 8009a82:	681b      	ldr	r3, [r3, #0]
 8009a84:	681b      	ldr	r3, [r3, #0]
 8009a86:	69b8      	ldr	r0, [r7, #24]
 8009a88:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8009a8a:	6979      	ldr	r1, [r7, #20]
 8009a8c:	69f8      	ldr	r0, [r7, #28]
 8009a8e:	f00a ffcd 	bl	8014a2c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8009a92:	697b      	ldr	r3, [r7, #20]
 8009a94:	681b      	ldr	r3, [r3, #0]
 8009a96:	3310      	adds	r3, #16
 8009a98:	681b      	ldr	r3, [r3, #0]
 8009a9a:	6978      	ldr	r0, [r7, #20]
 8009a9c:	4798      	blx	r3
    newTransition->invalidate();
 8009a9e:	697b      	ldr	r3, [r7, #20]
 8009aa0:	681b      	ldr	r3, [r3, #0]
 8009aa2:	3314      	adds	r3, #20
 8009aa4:	681b      	ldr	r3, [r3, #0]
 8009aa6:	6978      	ldr	r0, [r7, #20]
 8009aa8:	4798      	blx	r3
}
 8009aaa:	bf00      	nop
    return newPresenter;
 8009aac:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8009aae:	4618      	mov	r0, r3
 8009ab0:	373c      	adds	r7, #60	@ 0x3c
 8009ab2:	46bd      	mov	sp, r7
 8009ab4:	bd90      	pop	{r4, r7, pc}
 8009ab6:	bf00      	nop
 8009ab8:	08027518 	.word	0x08027518
 8009abc:	08027808 	.word	0x08027808
 8009ac0:	0802767c 	.word	0x0802767c
 8009ac4:	080276c0 	.word	0x080276c0
 8009ac8:	08027764 	.word	0x08027764

08009acc <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 8009acc:	b580      	push	{r7, lr}
 8009ace:	b082      	sub	sp, #8
 8009ad0:	af00      	add	r7, sp, #0
 8009ad2:	6078      	str	r0, [r7, #4]
 8009ad4:	460b      	mov	r3, r1
 8009ad6:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8009ad8:	687b      	ldr	r3, [r7, #4]
 8009ada:	681b      	ldr	r3, [r3, #0]
 8009adc:	3324      	adds	r3, #36	@ 0x24
 8009ade:	681b      	ldr	r3, [r3, #0]
 8009ae0:	887a      	ldrh	r2, [r7, #2]
 8009ae2:	4611      	mov	r1, r2
 8009ae4:	6878      	ldr	r0, [r7, #4]
 8009ae6:	4798      	blx	r3
 8009ae8:	4603      	mov	r3, r0
    }
 8009aea:	4618      	mov	r0, r3
 8009aec:	3708      	adds	r7, #8
 8009aee:	46bd      	mov	sp, r7
 8009af0:	bd80      	pop	{r7, pc}

08009af2 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 8009af2:	b580      	push	{r7, lr}
 8009af4:	b082      	sub	sp, #8
 8009af6:	af00      	add	r7, sp, #0
 8009af8:	6078      	str	r0, [r7, #4]
 8009afa:	460b      	mov	r3, r1
 8009afc:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009afe:	687b      	ldr	r3, [r7, #4]
 8009b00:	681b      	ldr	r3, [r3, #0]
 8009b02:	3324      	adds	r3, #36	@ 0x24
 8009b04:	681b      	ldr	r3, [r3, #0]
 8009b06:	887a      	ldrh	r2, [r7, #2]
 8009b08:	4611      	mov	r1, r2
 8009b0a:	6878      	ldr	r0, [r7, #4]
 8009b0c:	4798      	blx	r3
 8009b0e:	4603      	mov	r3, r0
    }
 8009b10:	4618      	mov	r0, r3
 8009b12:	3708      	adds	r7, #8
 8009b14:	46bd      	mov	sp, r7
 8009b16:	bd80      	pop	{r7, pc}

08009b18 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 8009b18:	b580      	push	{r7, lr}
 8009b1a:	b082      	sub	sp, #8
 8009b1c:	af00      	add	r7, sp, #0
 8009b1e:	6078      	str	r0, [r7, #4]
 8009b20:	460b      	mov	r3, r1
 8009b22:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009b24:	687b      	ldr	r3, [r7, #4]
 8009b26:	681b      	ldr	r3, [r3, #0]
 8009b28:	3324      	adds	r3, #36	@ 0x24
 8009b2a:	681b      	ldr	r3, [r3, #0]
 8009b2c:	887a      	ldrh	r2, [r7, #2]
 8009b2e:	4611      	mov	r1, r2
 8009b30:	6878      	ldr	r0, [r7, #4]
 8009b32:	4798      	blx	r3
 8009b34:	4603      	mov	r3, r0
    }
 8009b36:	4618      	mov	r0, r3
 8009b38:	3708      	adds	r7, #8
 8009b3a:	46bd      	mov	sp, r7
 8009b3c:	bd80      	pop	{r7, pc}

08009b3e <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 8009b3e:	b480      	push	{r7}
 8009b40:	b083      	sub	sp, #12
 8009b42:	af00      	add	r7, sp, #0
 8009b44:	6078      	str	r0, [r7, #4]
 8009b46:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 8009b48:	687b      	ldr	r3, [r7, #4]
 8009b4a:	683a      	ldr	r2, [r7, #0]
 8009b4c:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8009b4e:	bf00      	nop
 8009b50:	370c      	adds	r7, #12
 8009b52:	46bd      	mov	sp, r7
 8009b54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b58:	4770      	bx	lr

08009b5a <_ZN8touchgfx17AbstractPartition2atI12SettingsViewEERT_t>:
    T& at(const uint16_t index)
 8009b5a:	b580      	push	{r7, lr}
 8009b5c:	b082      	sub	sp, #8
 8009b5e:	af00      	add	r7, sp, #0
 8009b60:	6078      	str	r0, [r7, #4]
 8009b62:	460b      	mov	r3, r1
 8009b64:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	681b      	ldr	r3, [r3, #0]
 8009b6a:	3324      	adds	r3, #36	@ 0x24
 8009b6c:	681b      	ldr	r3, [r3, #0]
 8009b6e:	887a      	ldrh	r2, [r7, #2]
 8009b70:	4611      	mov	r1, r2
 8009b72:	6878      	ldr	r0, [r7, #4]
 8009b74:	4798      	blx	r3
 8009b76:	4603      	mov	r3, r0
    }
 8009b78:	4618      	mov	r0, r3
 8009b7a:	3708      	adds	r7, #8
 8009b7c:	46bd      	mov	sp, r7
 8009b7e:	bd80      	pop	{r7, pc}

08009b80 <_ZN8touchgfx17AbstractPartition2atI17SettingsPresenterEERT_t>:
    T& at(const uint16_t index)
 8009b80:	b580      	push	{r7, lr}
 8009b82:	b082      	sub	sp, #8
 8009b84:	af00      	add	r7, sp, #0
 8009b86:	6078      	str	r0, [r7, #4]
 8009b88:	460b      	mov	r3, r1
 8009b8a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009b8c:	687b      	ldr	r3, [r7, #4]
 8009b8e:	681b      	ldr	r3, [r3, #0]
 8009b90:	3324      	adds	r3, #36	@ 0x24
 8009b92:	681b      	ldr	r3, [r3, #0]
 8009b94:	887a      	ldrh	r2, [r7, #2]
 8009b96:	4611      	mov	r1, r2
 8009b98:	6878      	ldr	r0, [r7, #4]
 8009b9a:	4798      	blx	r3
 8009b9c:	4603      	mov	r3, r0
    }
 8009b9e:	4618      	mov	r0, r3
 8009ba0:	3708      	adds	r7, #8
 8009ba2:	46bd      	mov	sp, r7
 8009ba4:	bd80      	pop	{r7, pc}

08009ba6 <_ZN8touchgfx4ViewI17SettingsPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 8009ba6:	b480      	push	{r7}
 8009ba8:	b083      	sub	sp, #12
 8009baa:	af00      	add	r7, sp, #0
 8009bac:	6078      	str	r0, [r7, #4]
 8009bae:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 8009bb0:	687b      	ldr	r3, [r7, #4]
 8009bb2:	683a      	ldr	r2, [r7, #0]
 8009bb4:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8009bb6:	bf00      	nop
 8009bb8:	370c      	adds	r7, #12
 8009bba:	46bd      	mov	sp, r7
 8009bbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bc0:	4770      	bx	lr
	...

08009bc4 <_ZN8touchgfx12NoTransitionD1Ev>:
 8009bc4:	b580      	push	{r7, lr}
 8009bc6:	b082      	sub	sp, #8
 8009bc8:	af00      	add	r7, sp, #0
 8009bca:	6078      	str	r0, [r7, #4]
 8009bcc:	4a05      	ldr	r2, [pc, #20]	@ (8009be4 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 8009bce:	687b      	ldr	r3, [r7, #4]
 8009bd0:	601a      	str	r2, [r3, #0]
 8009bd2:	687b      	ldr	r3, [r7, #4]
 8009bd4:	4618      	mov	r0, r3
 8009bd6:	f7ff fa9d 	bl	8009114 <_ZN8touchgfx10TransitionD1Ev>
 8009bda:	687b      	ldr	r3, [r7, #4]
 8009bdc:	4618      	mov	r0, r3
 8009bde:	3708      	adds	r7, #8
 8009be0:	46bd      	mov	sp, r7
 8009be2:	bd80      	pop	{r7, pc}
 8009be4:	080289b8 	.word	0x080289b8

08009be8 <_ZN8touchgfx12NoTransitionD0Ev>:
 8009be8:	b580      	push	{r7, lr}
 8009bea:	b082      	sub	sp, #8
 8009bec:	af00      	add	r7, sp, #0
 8009bee:	6078      	str	r0, [r7, #4]
 8009bf0:	6878      	ldr	r0, [r7, #4]
 8009bf2:	f7ff ffe7 	bl	8009bc4 <_ZN8touchgfx12NoTransitionD1Ev>
 8009bf6:	210c      	movs	r1, #12
 8009bf8:	6878      	ldr	r0, [r7, #4]
 8009bfa:	f01a f90c 	bl	8023e16 <_ZdlPvj>
 8009bfe:	687b      	ldr	r3, [r7, #4]
 8009c00:	4618      	mov	r0, r3
 8009c02:	3708      	adds	r7, #8
 8009c04:	46bd      	mov	sp, r7
 8009c06:	bd80      	pop	{r7, pc}

08009c08 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8009c08:	b580      	push	{r7, lr}
 8009c0a:	b082      	sub	sp, #8
 8009c0c:	af00      	add	r7, sp, #0
 8009c0e:	6078      	str	r0, [r7, #4]
 8009c10:	4a05      	ldr	r2, [pc, #20]	@ (8009c28 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8009c12:	687b      	ldr	r3, [r7, #4]
 8009c14:	601a      	str	r2, [r3, #0]
 8009c16:	687b      	ldr	r3, [r7, #4]
 8009c18:	4618      	mov	r0, r3
 8009c1a:	f7ff fa1d 	bl	8009058 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8009c1e:	687b      	ldr	r3, [r7, #4]
 8009c20:	4618      	mov	r0, r3
 8009c22:	3708      	adds	r7, #8
 8009c24:	46bd      	mov	sp, r7
 8009c26:	bd80      	pop	{r7, pc}
 8009c28:	08028a30 	.word	0x08028a30

08009c2c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8009c2c:	b580      	push	{r7, lr}
 8009c2e:	b082      	sub	sp, #8
 8009c30:	af00      	add	r7, sp, #0
 8009c32:	6078      	str	r0, [r7, #4]
 8009c34:	6878      	ldr	r0, [r7, #4]
 8009c36:	f7ff ffe7 	bl	8009c08 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8009c3a:	2110      	movs	r1, #16
 8009c3c:	6878      	ldr	r0, [r7, #4]
 8009c3e:	f01a f8ea 	bl	8023e16 <_ZdlPvj>
 8009c42:	687b      	ldr	r3, [r7, #4]
 8009c44:	4618      	mov	r0, r3
 8009c46:	3708      	adds	r7, #8
 8009c48:	46bd      	mov	sp, r7
 8009c4a:	bd80      	pop	{r7, pc}

08009c4c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8009c4c:	b580      	push	{r7, lr}
 8009c4e:	b082      	sub	sp, #8
 8009c50:	af00      	add	r7, sp, #0
 8009c52:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 8009c54:	687b      	ldr	r3, [r7, #4]
 8009c56:	685b      	ldr	r3, [r3, #4]
 8009c58:	687a      	ldr	r2, [r7, #4]
 8009c5a:	68d2      	ldr	r2, [r2, #12]
 8009c5c:	1052      	asrs	r2, r2, #1
 8009c5e:	1899      	adds	r1, r3, r2
 8009c60:	687b      	ldr	r3, [r7, #4]
 8009c62:	68db      	ldr	r3, [r3, #12]
 8009c64:	f003 0301 	and.w	r3, r3, #1
 8009c68:	2b00      	cmp	r3, #0
 8009c6a:	d102      	bne.n	8009c72 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 8009c6c:	687b      	ldr	r3, [r7, #4]
 8009c6e:	689b      	ldr	r3, [r3, #8]
 8009c70:	e00a      	b.n	8009c88 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8009c72:	687b      	ldr	r3, [r7, #4]
 8009c74:	685b      	ldr	r3, [r3, #4]
 8009c76:	687a      	ldr	r2, [r7, #4]
 8009c78:	68d2      	ldr	r2, [r2, #12]
 8009c7a:	1052      	asrs	r2, r2, #1
 8009c7c:	4413      	add	r3, r2
 8009c7e:	681b      	ldr	r3, [r3, #0]
 8009c80:	687a      	ldr	r2, [r7, #4]
 8009c82:	6892      	ldr	r2, [r2, #8]
 8009c84:	4413      	add	r3, r2
 8009c86:	681b      	ldr	r3, [r3, #0]
 8009c88:	4608      	mov	r0, r1
 8009c8a:	4798      	blx	r3
    }
 8009c8c:	bf00      	nop
 8009c8e:	3708      	adds	r7, #8
 8009c90:	46bd      	mov	sp, r7
 8009c92:	bd80      	pop	{r7, pc}

08009c94 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8009c94:	b480      	push	{r7}
 8009c96:	b083      	sub	sp, #12
 8009c98:	af00      	add	r7, sp, #0
 8009c9a:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 8009c9c:	687b      	ldr	r3, [r7, #4]
 8009c9e:	685b      	ldr	r3, [r3, #4]
 8009ca0:	2b00      	cmp	r3, #0
 8009ca2:	d010      	beq.n	8009cc6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009ca4:	687b      	ldr	r3, [r7, #4]
 8009ca6:	689b      	ldr	r3, [r3, #8]
 8009ca8:	2b00      	cmp	r3, #0
 8009caa:	d107      	bne.n	8009cbc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009cac:	687b      	ldr	r3, [r7, #4]
 8009cae:	68db      	ldr	r3, [r3, #12]
 8009cb0:	f003 0301 	and.w	r3, r3, #1
 8009cb4:	2b00      	cmp	r3, #0
 8009cb6:	d101      	bne.n	8009cbc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009cb8:	2301      	movs	r3, #1
 8009cba:	e000      	b.n	8009cbe <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8009cbc:	2300      	movs	r3, #0
 8009cbe:	2b01      	cmp	r3, #1
 8009cc0:	d001      	beq.n	8009cc6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009cc2:	2301      	movs	r3, #1
 8009cc4:	e000      	b.n	8009cc8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8009cc6:	2300      	movs	r3, #0
    }
 8009cc8:	4618      	mov	r0, r3
 8009cca:	370c      	adds	r7, #12
 8009ccc:	46bd      	mov	sp, r7
 8009cce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cd2:	4770      	bx	lr

08009cd4 <_ZN8touchgfx9colortypeC1Ev>:
 * extract a 24/32-bit color from this type, use the getColor32 function.
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
 8009cd4:	b480      	push	{r7}
 8009cd6:	b083      	sub	sp, #12
 8009cd8:	af00      	add	r7, sp, #0
 8009cda:	6078      	str	r0, [r7, #4]
        : color(0)
 8009cdc:	687b      	ldr	r3, [r7, #4]
 8009cde:	2200      	movs	r2, #0
 8009ce0:	601a      	str	r2, [r3, #0]
    {
    }
 8009ce2:	687b      	ldr	r3, [r7, #4]
 8009ce4:	4618      	mov	r0, r3
 8009ce6:	370c      	adds	r7, #12
 8009ce8:	46bd      	mov	sp, r7
 8009cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cee:	4770      	bx	lr

08009cf0 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 8009cf0:	b480      	push	{r7}
 8009cf2:	b083      	sub	sp, #12
 8009cf4:	af00      	add	r7, sp, #0
 8009cf6:	6078      	str	r0, [r7, #4]
 8009cf8:	6039      	str	r1, [r7, #0]
        : color(col)
 8009cfa:	687b      	ldr	r3, [r7, #4]
 8009cfc:	683a      	ldr	r2, [r7, #0]
 8009cfe:	601a      	str	r2, [r3, #0]
    {
    }
 8009d00:	687b      	ldr	r3, [r7, #4]
 8009d02:	4618      	mov	r0, r3
 8009d04:	370c      	adds	r7, #12
 8009d06:	46bd      	mov	sp, r7
 8009d08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d0c:	4770      	bx	lr

08009d0e <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 8009d0e:	b480      	push	{r7}
 8009d10:	b083      	sub	sp, #12
 8009d12:	af00      	add	r7, sp, #0
 8009d14:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 8009d16:	687b      	ldr	r3, [r7, #4]
 8009d18:	2200      	movs	r2, #0
 8009d1a:	801a      	strh	r2, [r3, #0]
 8009d1c:	687b      	ldr	r3, [r7, #4]
 8009d1e:	2200      	movs	r2, #0
 8009d20:	805a      	strh	r2, [r3, #2]
 8009d22:	687b      	ldr	r3, [r7, #4]
 8009d24:	2200      	movs	r2, #0
 8009d26:	809a      	strh	r2, [r3, #4]
 8009d28:	687b      	ldr	r3, [r7, #4]
 8009d2a:	2200      	movs	r2, #0
 8009d2c:	80da      	strh	r2, [r3, #6]
    {
    }
 8009d2e:	687b      	ldr	r3, [r7, #4]
 8009d30:	4618      	mov	r0, r3
 8009d32:	370c      	adds	r7, #12
 8009d34:	46bd      	mov	sp, r7
 8009d36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d3a:	4770      	bx	lr

08009d3c <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 8009d3c:	b480      	push	{r7}
 8009d3e:	b085      	sub	sp, #20
 8009d40:	af00      	add	r7, sp, #0
 8009d42:	60f8      	str	r0, [r7, #12]
 8009d44:	4608      	mov	r0, r1
 8009d46:	4611      	mov	r1, r2
 8009d48:	461a      	mov	r2, r3
 8009d4a:	4603      	mov	r3, r0
 8009d4c:	817b      	strh	r3, [r7, #10]
 8009d4e:	460b      	mov	r3, r1
 8009d50:	813b      	strh	r3, [r7, #8]
 8009d52:	4613      	mov	r3, r2
 8009d54:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8009d56:	68fb      	ldr	r3, [r7, #12]
 8009d58:	897a      	ldrh	r2, [r7, #10]
 8009d5a:	801a      	strh	r2, [r3, #0]
 8009d5c:	68fb      	ldr	r3, [r7, #12]
 8009d5e:	893a      	ldrh	r2, [r7, #8]
 8009d60:	805a      	strh	r2, [r3, #2]
 8009d62:	68fb      	ldr	r3, [r7, #12]
 8009d64:	88fa      	ldrh	r2, [r7, #6]
 8009d66:	809a      	strh	r2, [r3, #4]
 8009d68:	68fb      	ldr	r3, [r7, #12]
 8009d6a:	8b3a      	ldrh	r2, [r7, #24]
 8009d6c:	80da      	strh	r2, [r3, #6]
    {
    }
 8009d6e:	68fb      	ldr	r3, [r7, #12]
 8009d70:	4618      	mov	r0, r3
 8009d72:	3714      	adds	r7, #20
 8009d74:	46bd      	mov	sp, r7
 8009d76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d7a:	4770      	bx	lr

08009d7c <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 8009d7c:	b480      	push	{r7}
 8009d7e:	b083      	sub	sp, #12
 8009d80:	af00      	add	r7, sp, #0
 8009d82:	6078      	str	r0, [r7, #4]
 8009d84:	460b      	mov	r3, r1
 8009d86:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8009d88:	687b      	ldr	r3, [r7, #4]
 8009d8a:	887a      	ldrh	r2, [r7, #2]
 8009d8c:	801a      	strh	r2, [r3, #0]
    {
    }
 8009d8e:	687b      	ldr	r3, [r7, #4]
 8009d90:	4618      	mov	r0, r3
 8009d92:	370c      	adds	r7, #12
 8009d94:	46bd      	mov	sp, r7
 8009d96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d9a:	4770      	bx	lr

08009d9c <_ZNK8touchgfx10ClickEvent7getTypeEv>:
    /**
     * Gets the click type of this event.
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
 8009d9c:	b480      	push	{r7}
 8009d9e:	b083      	sub	sp, #12
 8009da0:	af00      	add	r7, sp, #0
 8009da2:	6078      	str	r0, [r7, #4]
    {
        return clickEventType;
 8009da4:	687b      	ldr	r3, [r7, #4]
 8009da6:	791b      	ldrb	r3, [r3, #4]
    }
 8009da8:	4618      	mov	r0, r3
 8009daa:	370c      	adds	r7, #12
 8009dac:	46bd      	mov	sp, r7
 8009dae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009db2:	4770      	bx	lr

08009db4 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 8009db4:	b580      	push	{r7, lr}
 8009db6:	b082      	sub	sp, #8
 8009db8:	af00      	add	r7, sp, #0
 8009dba:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 8009dbc:	4a14      	ldr	r2, [pc, #80]	@ (8009e10 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 8009dbe:	687b      	ldr	r3, [r7, #4]
 8009dc0:	601a      	str	r2, [r3, #0]
        : rect(),
 8009dc2:	687b      	ldr	r3, [r7, #4]
 8009dc4:	3304      	adds	r3, #4
 8009dc6:	4618      	mov	r0, r3
 8009dc8:	f7ff ffa1 	bl	8009d0e <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 8009dcc:	687b      	ldr	r3, [r7, #4]
 8009dce:	330c      	adds	r3, #12
 8009dd0:	4618      	mov	r0, r3
 8009dd2:	f7ff ff9c 	bl	8009d0e <_ZN8touchgfx4RectC1Ev>
          parent(0),
 8009dd6:	687b      	ldr	r3, [r7, #4]
 8009dd8:	2200      	movs	r2, #0
 8009dda:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 8009ddc:	687b      	ldr	r3, [r7, #4]
 8009dde:	2200      	movs	r2, #0
 8009de0:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 8009de2:	687b      	ldr	r3, [r7, #4]
 8009de4:	2200      	movs	r2, #0
 8009de6:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 8009de8:	687b      	ldr	r3, [r7, #4]
 8009dea:	2200      	movs	r2, #0
 8009dec:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 8009dee:	687b      	ldr	r3, [r7, #4]
 8009df0:	2200      	movs	r2, #0
 8009df2:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 8009df4:	687b      	ldr	r3, [r7, #4]
 8009df6:	2200      	movs	r2, #0
 8009df8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 8009dfc:	687b      	ldr	r3, [r7, #4]
 8009dfe:	2201      	movs	r2, #1
 8009e00:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 8009e04:	687b      	ldr	r3, [r7, #4]
 8009e06:	4618      	mov	r0, r3
 8009e08:	3708      	adds	r7, #8
 8009e0a:	46bd      	mov	sp, r7
 8009e0c:	bd80      	pop	{r7, pc}
 8009e0e:	bf00      	nop
 8009e10:	08029c80 	.word	0x08029c80

08009e14 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8009e14:	b480      	push	{r7}
 8009e16:	b083      	sub	sp, #12
 8009e18:	af00      	add	r7, sp, #0
 8009e1a:	6078      	str	r0, [r7, #4]
    {
 8009e1c:	4a04      	ldr	r2, [pc, #16]	@ (8009e30 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8009e1e:	687b      	ldr	r3, [r7, #4]
 8009e20:	601a      	str	r2, [r3, #0]
    }
 8009e22:	687b      	ldr	r3, [r7, #4]
 8009e24:	4618      	mov	r0, r3
 8009e26:	370c      	adds	r7, #12
 8009e28:	46bd      	mov	sp, r7
 8009e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e2e:	4770      	bx	lr
 8009e30:	08029c80 	.word	0x08029c80

08009e34 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 8009e34:	b580      	push	{r7, lr}
 8009e36:	b082      	sub	sp, #8
 8009e38:	af00      	add	r7, sp, #0
 8009e3a:	6078      	str	r0, [r7, #4]
    }
 8009e3c:	6878      	ldr	r0, [r7, #4]
 8009e3e:	f7ff ffe9 	bl	8009e14 <_ZN8touchgfx8DrawableD1Ev>
 8009e42:	2128      	movs	r1, #40	@ 0x28
 8009e44:	6878      	ldr	r0, [r7, #4]
 8009e46:	f019 ffe6 	bl	8023e16 <_ZdlPvj>
 8009e4a:	687b      	ldr	r3, [r7, #4]
 8009e4c:	4618      	mov	r0, r3
 8009e4e:	3708      	adds	r7, #8
 8009e50:	46bd      	mov	sp, r7
 8009e52:	bd80      	pop	{r7, pc}

08009e54 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 8009e54:	b580      	push	{r7, lr}
 8009e56:	b082      	sub	sp, #8
 8009e58:	af00      	add	r7, sp, #0
 8009e5a:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 8009e5c:	687b      	ldr	r3, [r7, #4]
 8009e5e:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8009e62:	2b00      	cmp	r3, #0
 8009e64:	d005      	beq.n	8009e72 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 8009e66:	687b      	ldr	r3, [r7, #4]
 8009e68:	681b      	ldr	r3, [r3, #0]
 8009e6a:	3314      	adds	r3, #20
 8009e6c:	681b      	ldr	r3, [r3, #0]
 8009e6e:	6878      	ldr	r0, [r7, #4]
 8009e70:	4798      	blx	r3
        }
    }
 8009e72:	bf00      	nop
 8009e74:	3708      	adds	r7, #8
 8009e76:	46bd      	mov	sp, r7
 8009e78:	bd80      	pop	{r7, pc}

08009e7a <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 8009e7a:	b480      	push	{r7}
 8009e7c:	b083      	sub	sp, #12
 8009e7e:	af00      	add	r7, sp, #0
 8009e80:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009e82:	2300      	movs	r3, #0
    }
 8009e84:	4618      	mov	r0, r3
 8009e86:	370c      	adds	r7, #12
 8009e88:	46bd      	mov	sp, r7
 8009e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e8e:	4770      	bx	lr

08009e90 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8009e90:	b580      	push	{r7, lr}
 8009e92:	b084      	sub	sp, #16
 8009e94:	af00      	add	r7, sp, #0
 8009e96:	60f8      	str	r0, [r7, #12]
 8009e98:	4608      	mov	r0, r1
 8009e9a:	4611      	mov	r1, r2
 8009e9c:	461a      	mov	r2, r3
 8009e9e:	4603      	mov	r3, r0
 8009ea0:	817b      	strh	r3, [r7, #10]
 8009ea2:	460b      	mov	r3, r1
 8009ea4:	813b      	strh	r3, [r7, #8]
 8009ea6:	4613      	mov	r3, r2
 8009ea8:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8009eaa:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8009eae:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8009eb2:	4619      	mov	r1, r3
 8009eb4:	68f8      	ldr	r0, [r7, #12]
 8009eb6:	f000 f82a 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8009eba:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8009ebe:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8009ec2:	4619      	mov	r1, r3
 8009ec4:	68f8      	ldr	r0, [r7, #12]
 8009ec6:	f000 f87e 	bl	8009fc6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8009eca:	bf00      	nop
 8009ecc:	3710      	adds	r7, #16
 8009ece:	46bd      	mov	sp, r7
 8009ed0:	bd80      	pop	{r7, pc}

08009ed2 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 8009ed2:	b480      	push	{r7}
 8009ed4:	b083      	sub	sp, #12
 8009ed6:	af00      	add	r7, sp, #0
 8009ed8:	6078      	str	r0, [r7, #4]
 8009eda:	460b      	mov	r3, r1
 8009edc:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 8009ede:	687b      	ldr	r3, [r7, #4]
 8009ee0:	887a      	ldrh	r2, [r7, #2]
 8009ee2:	809a      	strh	r2, [r3, #4]
    }
 8009ee4:	bf00      	nop
 8009ee6:	370c      	adds	r7, #12
 8009ee8:	46bd      	mov	sp, r7
 8009eea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009eee:	4770      	bx	lr

08009ef0 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 8009ef0:	b480      	push	{r7}
 8009ef2:	b083      	sub	sp, #12
 8009ef4:	af00      	add	r7, sp, #0
 8009ef6:	6078      	str	r0, [r7, #4]
 8009ef8:	460b      	mov	r3, r1
 8009efa:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8009efc:	687b      	ldr	r3, [r7, #4]
 8009efe:	887a      	ldrh	r2, [r7, #2]
 8009f00:	80da      	strh	r2, [r3, #6]
    }
 8009f02:	bf00      	nop
 8009f04:	370c      	adds	r7, #12
 8009f06:	46bd      	mov	sp, r7
 8009f08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f0c:	4770      	bx	lr

08009f0e <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 8009f0e:	b580      	push	{r7, lr}
 8009f10:	b082      	sub	sp, #8
 8009f12:	af00      	add	r7, sp, #0
 8009f14:	6078      	str	r0, [r7, #4]
 8009f16:	460b      	mov	r3, r1
 8009f18:	807b      	strh	r3, [r7, #2]
 8009f1a:	4613      	mov	r3, r2
 8009f1c:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8009f1e:	687b      	ldr	r3, [r7, #4]
 8009f20:	681b      	ldr	r3, [r3, #0]
 8009f22:	3330      	adds	r3, #48	@ 0x30
 8009f24:	681b      	ldr	r3, [r3, #0]
 8009f26:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009f2a:	4611      	mov	r1, r2
 8009f2c:	6878      	ldr	r0, [r7, #4]
 8009f2e:	4798      	blx	r3
        setY(y);
 8009f30:	687b      	ldr	r3, [r7, #4]
 8009f32:	681b      	ldr	r3, [r3, #0]
 8009f34:	3334      	adds	r3, #52	@ 0x34
 8009f36:	681b      	ldr	r3, [r3, #0]
 8009f38:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009f3c:	4611      	mov	r1, r2
 8009f3e:	6878      	ldr	r0, [r7, #4]
 8009f40:	4798      	blx	r3
    }
 8009f42:	bf00      	nop
 8009f44:	3708      	adds	r7, #8
 8009f46:	46bd      	mov	sp, r7
 8009f48:	bd80      	pop	{r7, pc}

08009f4a <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 8009f4a:	b480      	push	{r7}
 8009f4c:	b083      	sub	sp, #12
 8009f4e:	af00      	add	r7, sp, #0
 8009f50:	6078      	str	r0, [r7, #4]
 8009f52:	460b      	mov	r3, r1
 8009f54:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8009f56:	687b      	ldr	r3, [r7, #4]
 8009f58:	887a      	ldrh	r2, [r7, #2]
 8009f5a:	811a      	strh	r2, [r3, #8]
    }
 8009f5c:	bf00      	nop
 8009f5e:	370c      	adds	r7, #12
 8009f60:	46bd      	mov	sp, r7
 8009f62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f66:	4770      	bx	lr

08009f68 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 8009f68:	b480      	push	{r7}
 8009f6a:	b083      	sub	sp, #12
 8009f6c:	af00      	add	r7, sp, #0
 8009f6e:	6078      	str	r0, [r7, #4]
 8009f70:	460b      	mov	r3, r1
 8009f72:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8009f74:	687b      	ldr	r3, [r7, #4]
 8009f76:	887a      	ldrh	r2, [r7, #2]
 8009f78:	815a      	strh	r2, [r3, #10]
    }
 8009f7a:	bf00      	nop
 8009f7c:	370c      	adds	r7, #12
 8009f7e:	46bd      	mov	sp, r7
 8009f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f84:	4770      	bx	lr

08009f86 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 8009f86:	b480      	push	{r7}
 8009f88:	b083      	sub	sp, #12
 8009f8a:	af00      	add	r7, sp, #0
 8009f8c:	6078      	str	r0, [r7, #4]
    {
    }
 8009f8e:	bf00      	nop
 8009f90:	370c      	adds	r7, #12
 8009f92:	46bd      	mov	sp, r7
 8009f94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f98:	4770      	bx	lr

08009f9a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8009f9a:	b480      	push	{r7}
 8009f9c:	b083      	sub	sp, #12
 8009f9e:	af00      	add	r7, sp, #0
 8009fa0:	6078      	str	r0, [r7, #4]
 8009fa2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009fa4:	bf00      	nop
 8009fa6:	370c      	adds	r7, #12
 8009fa8:	46bd      	mov	sp, r7
 8009faa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fae:	4770      	bx	lr

08009fb0 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8009fb0:	b480      	push	{r7}
 8009fb2:	b083      	sub	sp, #12
 8009fb4:	af00      	add	r7, sp, #0
 8009fb6:	6078      	str	r0, [r7, #4]
 8009fb8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009fba:	bf00      	nop
 8009fbc:	370c      	adds	r7, #12
 8009fbe:	46bd      	mov	sp, r7
 8009fc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fc4:	4770      	bx	lr

08009fc6 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 8009fc6:	b580      	push	{r7, lr}
 8009fc8:	b082      	sub	sp, #8
 8009fca:	af00      	add	r7, sp, #0
 8009fcc:	6078      	str	r0, [r7, #4]
 8009fce:	460b      	mov	r3, r1
 8009fd0:	807b      	strh	r3, [r7, #2]
 8009fd2:	4613      	mov	r3, r2
 8009fd4:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 8009fd6:	687b      	ldr	r3, [r7, #4]
 8009fd8:	681b      	ldr	r3, [r3, #0]
 8009fda:	3338      	adds	r3, #56	@ 0x38
 8009fdc:	681b      	ldr	r3, [r3, #0]
 8009fde:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009fe2:	4611      	mov	r1, r2
 8009fe4:	6878      	ldr	r0, [r7, #4]
 8009fe6:	4798      	blx	r3
        setHeight(height);
 8009fe8:	687b      	ldr	r3, [r7, #4]
 8009fea:	681b      	ldr	r3, [r3, #0]
 8009fec:	333c      	adds	r3, #60	@ 0x3c
 8009fee:	681b      	ldr	r3, [r3, #0]
 8009ff0:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009ff4:	4611      	mov	r1, r2
 8009ff6:	6878      	ldr	r0, [r7, #4]
 8009ff8:	4798      	blx	r3
    }
 8009ffa:	bf00      	nop
 8009ffc:	3708      	adds	r7, #8
 8009ffe:	46bd      	mov	sp, r7
 800a000:	bd80      	pop	{r7, pc}

0800a002 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800a002:	b480      	push	{r7}
 800a004:	b083      	sub	sp, #12
 800a006:	af00      	add	r7, sp, #0
 800a008:	6078      	str	r0, [r7, #4]
 800a00a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a00c:	bf00      	nop
 800a00e:	370c      	adds	r7, #12
 800a010:	46bd      	mov	sp, r7
 800a012:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a016:	4770      	bx	lr

0800a018 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800a018:	b480      	push	{r7}
 800a01a:	b083      	sub	sp, #12
 800a01c:	af00      	add	r7, sp, #0
 800a01e:	6078      	str	r0, [r7, #4]
    {
    }
 800a020:	bf00      	nop
 800a022:	370c      	adds	r7, #12
 800a024:	46bd      	mov	sp, r7
 800a026:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a02a:	4770      	bx	lr

0800a02c <_ZN8touchgfx8Drawable10setVisibleEb>:
     * @param  vis true if this Drawable should be visible. By default, drawables are visible
     *             unless this function has been called with false as argument.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setVisible(bool vis)
 800a02c:	b480      	push	{r7}
 800a02e:	b083      	sub	sp, #12
 800a030:	af00      	add	r7, sp, #0
 800a032:	6078      	str	r0, [r7, #4]
 800a034:	460b      	mov	r3, r1
 800a036:	70fb      	strb	r3, [r7, #3]
    {
        visible = vis;
 800a038:	687b      	ldr	r3, [r7, #4]
 800a03a:	78fa      	ldrb	r2, [r7, #3]
 800a03c:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    }
 800a040:	bf00      	nop
 800a042:	370c      	adds	r7, #12
 800a044:	46bd      	mov	sp, r7
 800a046:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a04a:	4770      	bx	lr

0800a04c <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 800a04c:	b480      	push	{r7}
 800a04e:	b083      	sub	sp, #12
 800a050:	af00      	add	r7, sp, #0
 800a052:	6078      	str	r0, [r7, #4]
 800a054:	460b      	mov	r3, r1
 800a056:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 800a058:	687b      	ldr	r3, [r7, #4]
 800a05a:	78fa      	ldrb	r2, [r7, #3]
 800a05c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
    }
 800a060:	bf00      	nop
 800a062:	370c      	adds	r7, #12
 800a064:	46bd      	mov	sp, r7
 800a066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a06a:	4770      	bx	lr

0800a06c <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800a06c:	b480      	push	{r7}
 800a06e:	b083      	sub	sp, #12
 800a070:	af00      	add	r7, sp, #0
 800a072:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800a074:	687b      	ldr	r3, [r7, #4]
 800a076:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 800a07a:	4618      	mov	r0, r3
 800a07c:	370c      	adds	r7, #12
 800a07e:	46bd      	mov	sp, r7
 800a080:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a084:	4770      	bx	lr

0800a086 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800a086:	b480      	push	{r7}
 800a088:	b083      	sub	sp, #12
 800a08a:	af00      	add	r7, sp, #0
 800a08c:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800a08e:	687b      	ldr	r3, [r7, #4]
 800a090:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 800a094:	4618      	mov	r0, r3
 800a096:	370c      	adds	r7, #12
 800a098:	46bd      	mov	sp, r7
 800a09a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a09e:	4770      	bx	lr

0800a0a0 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800a0a0:	b580      	push	{r7, lr}
 800a0a2:	b082      	sub	sp, #8
 800a0a4:	af00      	add	r7, sp, #0
 800a0a6:	6078      	str	r0, [r7, #4]
 800a0a8:	460b      	mov	r3, r1
 800a0aa:	807b      	strh	r3, [r7, #2]
 800a0ac:	4613      	mov	r3, r2
 800a0ae:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800a0b0:	687b      	ldr	r3, [r7, #4]
 800a0b2:	681b      	ldr	r3, [r3, #0]
 800a0b4:	3354      	adds	r3, #84	@ 0x54
 800a0b6:	681b      	ldr	r3, [r3, #0]
 800a0b8:	8879      	ldrh	r1, [r7, #2]
 800a0ba:	687a      	ldr	r2, [r7, #4]
 800a0bc:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800a0c0:	b292      	uxth	r2, r2
 800a0c2:	1a8a      	subs	r2, r1, r2
 800a0c4:	b292      	uxth	r2, r2
 800a0c6:	b210      	sxth	r0, r2
 800a0c8:	8839      	ldrh	r1, [r7, #0]
 800a0ca:	687a      	ldr	r2, [r7, #4]
 800a0cc:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800a0d0:	b292      	uxth	r2, r2
 800a0d2:	1a8a      	subs	r2, r1, r2
 800a0d4:	b292      	uxth	r2, r2
 800a0d6:	b212      	sxth	r2, r2
 800a0d8:	4601      	mov	r1, r0
 800a0da:	6878      	ldr	r0, [r7, #4]
 800a0dc:	4798      	blx	r3
    }
 800a0de:	bf00      	nop
 800a0e0:	3708      	adds	r7, #8
 800a0e2:	46bd      	mov	sp, r7
 800a0e4:	bd80      	pop	{r7, pc}

0800a0e6 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800a0e6:	b480      	push	{r7}
 800a0e8:	b083      	sub	sp, #12
 800a0ea:	af00      	add	r7, sp, #0
 800a0ec:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800a0ee:	687b      	ldr	r3, [r7, #4]
 800a0f0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800a0f4:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800a0f6:	687b      	ldr	r3, [r7, #4]
 800a0f8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800a0fc:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800a0fe:	687b      	ldr	r3, [r7, #4]
 800a100:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800a104:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 800a106:	bf00      	nop
 800a108:	370c      	adds	r7, #12
 800a10a:	46bd      	mov	sp, r7
 800a10c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a110:	4770      	bx	lr

0800a112 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800a112:	b580      	push	{r7, lr}
 800a114:	b084      	sub	sp, #16
 800a116:	af00      	add	r7, sp, #0
 800a118:	60f8      	str	r0, [r7, #12]
 800a11a:	60b9      	str	r1, [r7, #8]
 800a11c:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800a11e:	68f8      	ldr	r0, [r7, #12]
 800a120:	f7ff ffe1 	bl	800a0e6 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800a124:	687b      	ldr	r3, [r7, #4]
 800a126:	681a      	ldr	r2, [r3, #0]
 800a128:	68fb      	ldr	r3, [r7, #12]
 800a12a:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800a12c:	687b      	ldr	r3, [r7, #4]
 800a12e:	68fa      	ldr	r2, [r7, #12]
 800a130:	601a      	str	r2, [r3, #0]
    }
 800a132:	bf00      	nop
 800a134:	3710      	adds	r7, #16
 800a136:	46bd      	mov	sp, r7
 800a138:	bd80      	pop	{r7, pc}
	...

0800a13c <_ZN8touchgfx9ContainerC1Ev>:
 * @see Drawable
 */
class Container : public Drawable
{
public:
    Container()
 800a13c:	b580      	push	{r7, lr}
 800a13e:	b082      	sub	sp, #8
 800a140:	af00      	add	r7, sp, #0
 800a142:	6078      	str	r0, [r7, #4]
        : Drawable(),
          firstChild(0)
 800a144:	687b      	ldr	r3, [r7, #4]
 800a146:	4618      	mov	r0, r3
 800a148:	f7ff fe34 	bl	8009db4 <_ZN8touchgfx8DrawableC1Ev>
 800a14c:	4a05      	ldr	r2, [pc, #20]	@ (800a164 <_ZN8touchgfx9ContainerC1Ev+0x28>)
 800a14e:	687b      	ldr	r3, [r7, #4]
 800a150:	601a      	str	r2, [r3, #0]
 800a152:	687b      	ldr	r3, [r7, #4]
 800a154:	2200      	movs	r2, #0
 800a156:	629a      	str	r2, [r3, #40]	@ 0x28
    {
    }
 800a158:	687b      	ldr	r3, [r7, #4]
 800a15a:	4618      	mov	r0, r3
 800a15c:	3708      	adds	r7, #8
 800a15e:	46bd      	mov	sp, r7
 800a160:	bd80      	pop	{r7, pc}
 800a162:	bf00      	nop
 800a164:	080295c0 	.word	0x080295c0

0800a168 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 800a168:	b480      	push	{r7}
 800a16a:	b083      	sub	sp, #12
 800a16c:	af00      	add	r7, sp, #0
 800a16e:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 800a170:	687b      	ldr	r3, [r7, #4]
 800a172:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 800a174:	4618      	mov	r0, r3
 800a176:	370c      	adds	r7, #12
 800a178:	46bd      	mov	sp, r7
 800a17a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a17e:	4770      	bx	lr

0800a180 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800a180:	b580      	push	{r7, lr}
 800a182:	b082      	sub	sp, #8
 800a184:	af00      	add	r7, sp, #0
 800a186:	6078      	str	r0, [r7, #4]
    {
 800a188:	4a06      	ldr	r2, [pc, #24]	@ (800a1a4 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800a18a:	687b      	ldr	r3, [r7, #4]
 800a18c:	601a      	str	r2, [r3, #0]
    }
 800a18e:	687b      	ldr	r3, [r7, #4]
 800a190:	3304      	adds	r3, #4
 800a192:	4618      	mov	r0, r3
 800a194:	f000 fb20 	bl	800a7d8 <_ZN8touchgfx9ContainerD1Ev>
 800a198:	687b      	ldr	r3, [r7, #4]
 800a19a:	4618      	mov	r0, r3
 800a19c:	3708      	adds	r7, #8
 800a19e:	46bd      	mov	sp, r7
 800a1a0:	bd80      	pop	{r7, pc}
 800a1a2:	bf00      	nop
 800a1a4:	08029d84 	.word	0x08029d84

0800a1a8 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800a1a8:	b580      	push	{r7, lr}
 800a1aa:	b082      	sub	sp, #8
 800a1ac:	af00      	add	r7, sp, #0
 800a1ae:	6078      	str	r0, [r7, #4]
    }
 800a1b0:	6878      	ldr	r0, [r7, #4]
 800a1b2:	f7ff ffe5 	bl	800a180 <_ZN8touchgfx6ScreenD1Ev>
 800a1b6:	213c      	movs	r1, #60	@ 0x3c
 800a1b8:	6878      	ldr	r0, [r7, #4]
 800a1ba:	f019 fe2c 	bl	8023e16 <_ZdlPvj>
 800a1be:	687b      	ldr	r3, [r7, #4]
 800a1c0:	4618      	mov	r0, r3
 800a1c2:	3708      	adds	r7, #8
 800a1c4:	46bd      	mov	sp, r7
 800a1c6:	bd80      	pop	{r7, pc}

0800a1c8 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800a1c8:	b480      	push	{r7}
 800a1ca:	b083      	sub	sp, #12
 800a1cc:	af00      	add	r7, sp, #0
 800a1ce:	6078      	str	r0, [r7, #4]
    {
    }
 800a1d0:	bf00      	nop
 800a1d2:	370c      	adds	r7, #12
 800a1d4:	46bd      	mov	sp, r7
 800a1d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1da:	4770      	bx	lr

0800a1dc <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800a1dc:	b480      	push	{r7}
 800a1de:	b083      	sub	sp, #12
 800a1e0:	af00      	add	r7, sp, #0
 800a1e2:	6078      	str	r0, [r7, #4]
    {
    }
 800a1e4:	bf00      	nop
 800a1e6:	370c      	adds	r7, #12
 800a1e8:	46bd      	mov	sp, r7
 800a1ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1ee:	4770      	bx	lr

0800a1f0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800a1f0:	b480      	push	{r7}
 800a1f2:	b083      	sub	sp, #12
 800a1f4:	af00      	add	r7, sp, #0
 800a1f6:	6078      	str	r0, [r7, #4]
    {
    }
 800a1f8:	bf00      	nop
 800a1fa:	370c      	adds	r7, #12
 800a1fc:	46bd      	mov	sp, r7
 800a1fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a202:	4770      	bx	lr

0800a204 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800a204:	b480      	push	{r7}
 800a206:	b083      	sub	sp, #12
 800a208:	af00      	add	r7, sp, #0
 800a20a:	6078      	str	r0, [r7, #4]
    {
    }
 800a20c:	bf00      	nop
 800a20e:	370c      	adds	r7, #12
 800a210:	46bd      	mov	sp, r7
 800a212:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a216:	4770      	bx	lr

0800a218 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800a218:	b480      	push	{r7}
 800a21a:	b083      	sub	sp, #12
 800a21c:	af00      	add	r7, sp, #0
 800a21e:	6078      	str	r0, [r7, #4]
 800a220:	460b      	mov	r3, r1
 800a222:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800a224:	bf00      	nop
 800a226:	370c      	adds	r7, #12
 800a228:	46bd      	mov	sp, r7
 800a22a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a22e:	4770      	bx	lr

0800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800a230:	b580      	push	{r7, lr}
 800a232:	b082      	sub	sp, #8
 800a234:	af00      	add	r7, sp, #0
 800a236:	6078      	str	r0, [r7, #4]
 800a238:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800a23a:	687b      	ldr	r3, [r7, #4]
 800a23c:	3304      	adds	r3, #4
 800a23e:	6839      	ldr	r1, [r7, #0]
 800a240:	4618      	mov	r0, r3
 800a242:	f005 f939 	bl	800f4b8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800a246:	bf00      	nop
 800a248:	3708      	adds	r7, #8
 800a24a:	46bd      	mov	sp, r7
 800a24c:	bd80      	pop	{r7, pc}

0800a24e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800a24e:	b580      	push	{r7, lr}
 800a250:	b084      	sub	sp, #16
 800a252:	af00      	add	r7, sp, #0
 800a254:	60f8      	str	r0, [r7, #12]
 800a256:	607b      	str	r3, [r7, #4]
 800a258:	460b      	mov	r3, r1
 800a25a:	817b      	strh	r3, [r7, #10]
 800a25c:	4613      	mov	r3, r2
 800a25e:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800a260:	68fb      	ldr	r3, [r7, #12]
 800a262:	4618      	mov	r0, r3
 800a264:	f7ff ff02 	bl	800a06c <_ZNK8touchgfx8Drawable9isVisibleEv>
 800a268:	4603      	mov	r3, r0
 800a26a:	2b00      	cmp	r3, #0
 800a26c:	d008      	beq.n	800a280 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800a26e:	68fb      	ldr	r3, [r7, #12]
 800a270:	4618      	mov	r0, r3
 800a272:	f7ff ff08 	bl	800a086 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800a276:	4603      	mov	r3, r0
 800a278:	2b00      	cmp	r3, #0
 800a27a:	d001      	beq.n	800a280 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800a27c:	2301      	movs	r3, #1
 800a27e:	e000      	b.n	800a282 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800a280:	2300      	movs	r3, #0
 800a282:	2b00      	cmp	r3, #0
 800a284:	d002      	beq.n	800a28c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800a286:	68fa      	ldr	r2, [r7, #12]
 800a288:	687b      	ldr	r3, [r7, #4]
 800a28a:	601a      	str	r2, [r3, #0]
        }
    }
 800a28c:	bf00      	nop
 800a28e:	3710      	adds	r7, #16
 800a290:	46bd      	mov	sp, r7
 800a292:	bd80      	pop	{r7, pc}

0800a294 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800a294:	b580      	push	{r7, lr}
 800a296:	b082      	sub	sp, #8
 800a298:	af00      	add	r7, sp, #0
 800a29a:	6078      	str	r0, [r7, #4]
 800a29c:	687b      	ldr	r3, [r7, #4]
 800a29e:	4618      	mov	r0, r3
 800a2a0:	f7ff fd88 	bl	8009db4 <_ZN8touchgfx8DrawableC1Ev>
 800a2a4:	4a03      	ldr	r2, [pc, #12]	@ (800a2b4 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800a2a6:	687b      	ldr	r3, [r7, #4]
 800a2a8:	601a      	str	r2, [r3, #0]
 800a2aa:	687b      	ldr	r3, [r7, #4]
 800a2ac:	4618      	mov	r0, r3
 800a2ae:	3708      	adds	r7, #8
 800a2b0:	46bd      	mov	sp, r7
 800a2b2:	bd80      	pop	{r7, pc}
 800a2b4:	08028dfc 	.word	0x08028dfc

0800a2b8 <_ZN8touchgfx6WidgetD1Ev>:
 800a2b8:	b580      	push	{r7, lr}
 800a2ba:	b082      	sub	sp, #8
 800a2bc:	af00      	add	r7, sp, #0
 800a2be:	6078      	str	r0, [r7, #4]
 800a2c0:	4a05      	ldr	r2, [pc, #20]	@ (800a2d8 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800a2c2:	687b      	ldr	r3, [r7, #4]
 800a2c4:	601a      	str	r2, [r3, #0]
 800a2c6:	687b      	ldr	r3, [r7, #4]
 800a2c8:	4618      	mov	r0, r3
 800a2ca:	f7ff fda3 	bl	8009e14 <_ZN8touchgfx8DrawableD1Ev>
 800a2ce:	687b      	ldr	r3, [r7, #4]
 800a2d0:	4618      	mov	r0, r3
 800a2d2:	3708      	adds	r7, #8
 800a2d4:	46bd      	mov	sp, r7
 800a2d6:	bd80      	pop	{r7, pc}
 800a2d8:	08028dfc 	.word	0x08028dfc

0800a2dc <_ZN8touchgfx6WidgetD0Ev>:
 800a2dc:	b580      	push	{r7, lr}
 800a2de:	b082      	sub	sp, #8
 800a2e0:	af00      	add	r7, sp, #0
 800a2e2:	6078      	str	r0, [r7, #4]
 800a2e4:	6878      	ldr	r0, [r7, #4]
 800a2e6:	f7ff ffe7 	bl	800a2b8 <_ZN8touchgfx6WidgetD1Ev>
 800a2ea:	2128      	movs	r1, #40	@ 0x28
 800a2ec:	6878      	ldr	r0, [r7, #4]
 800a2ee:	f019 fd92 	bl	8023e16 <_ZdlPvj>
 800a2f2:	687b      	ldr	r3, [r7, #4]
 800a2f4:	4618      	mov	r0, r3
 800a2f6:	3708      	adds	r7, #8
 800a2f8:	46bd      	mov	sp, r7
 800a2fa:	bd80      	pop	{r7, pc}

0800a2fc <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800a2fc:	b580      	push	{r7, lr}
 800a2fe:	b082      	sub	sp, #8
 800a300:	af00      	add	r7, sp, #0
 800a302:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800a304:	687b      	ldr	r3, [r7, #4]
 800a306:	4618      	mov	r0, r3
 800a308:	2326      	movs	r3, #38	@ 0x26
 800a30a:	461a      	mov	r2, r3
 800a30c:	2100      	movs	r1, #0
 800a30e:	f01a ff3d 	bl	802518c <memset>
 800a312:	687b      	ldr	r3, [r7, #4]
 800a314:	4618      	mov	r0, r3
 800a316:	f7ff ffbd 	bl	800a294 <_ZN8touchgfx6WidgetC1Ev>
 800a31a:	4a09      	ldr	r2, [pc, #36]	@ (800a340 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800a31c:	687b      	ldr	r3, [r7, #4]
 800a31e:	601a      	str	r2, [r3, #0]
 800a320:	687b      	ldr	r3, [r7, #4]
 800a322:	22ff      	movs	r2, #255	@ 0xff
 800a324:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 800a328:	687b      	ldr	r3, [r7, #4]
 800a32a:	3328      	adds	r3, #40	@ 0x28
 800a32c:	2100      	movs	r1, #0
 800a32e:	4618      	mov	r0, r3
 800a330:	f7ff fcde 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800a334:	687b      	ldr	r3, [r7, #4]
 800a336:	4618      	mov	r0, r3
 800a338:	3708      	adds	r7, #8
 800a33a:	46bd      	mov	sp, r7
 800a33c:	bd80      	pop	{r7, pc}
 800a33e:	bf00      	nop
 800a340:	080298a8 	.word	0x080298a8

0800a344 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800a344:	b480      	push	{r7}
 800a346:	b083      	sub	sp, #12
 800a348:	af00      	add	r7, sp, #0
 800a34a:	6078      	str	r0, [r7, #4]
 800a34c:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800a34e:	687b      	ldr	r3, [r7, #4]
 800a350:	683a      	ldr	r2, [r7, #0]
 800a352:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800a354:	bf00      	nop
 800a356:	370c      	adds	r7, #12
 800a358:	46bd      	mov	sp, r7
 800a35a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a35e:	4770      	bx	lr

0800a360 <_ZN8touchgfx3Box8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
 800a360:	b480      	push	{r7}
 800a362:	b083      	sub	sp, #12
 800a364:	af00      	add	r7, sp, #0
 800a366:	6078      	str	r0, [r7, #4]
 800a368:	460b      	mov	r3, r1
 800a36a:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800a36c:	687b      	ldr	r3, [r7, #4]
 800a36e:	78fa      	ldrb	r2, [r7, #3]
 800a370:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
    }
 800a374:	bf00      	nop
 800a376:	370c      	adds	r7, #12
 800a378:	46bd      	mov	sp, r7
 800a37a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a37e:	4770      	bx	lr

0800a380 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 800a380:	b580      	push	{r7, lr}
 800a382:	b082      	sub	sp, #8
 800a384:	af00      	add	r7, sp, #0
 800a386:	6078      	str	r0, [r7, #4]
 800a388:	6039      	str	r1, [r7, #0]
        : Widget(), bitmap(bmp), alpha(255)
 800a38a:	687b      	ldr	r3, [r7, #4]
 800a38c:	4618      	mov	r0, r3
 800a38e:	2326      	movs	r3, #38	@ 0x26
 800a390:	461a      	mov	r2, r3
 800a392:	2100      	movs	r1, #0
 800a394:	f01a fefa 	bl	802518c <memset>
 800a398:	687b      	ldr	r3, [r7, #4]
 800a39a:	4618      	mov	r0, r3
 800a39c:	f7ff ff7a 	bl	800a294 <_ZN8touchgfx6WidgetC1Ev>
 800a3a0:	4a09      	ldr	r2, [pc, #36]	@ (800a3c8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x48>)
 800a3a2:	687b      	ldr	r3, [r7, #4]
 800a3a4:	601a      	str	r2, [r3, #0]
 800a3a6:	687b      	ldr	r3, [r7, #4]
 800a3a8:	683a      	ldr	r2, [r7, #0]
 800a3aa:	8812      	ldrh	r2, [r2, #0]
 800a3ac:	84da      	strh	r2, [r3, #38]	@ 0x26
 800a3ae:	687b      	ldr	r3, [r7, #4]
 800a3b0:	22ff      	movs	r2, #255	@ 0xff
 800a3b2:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    {
        Image::setBitmap(bmp);
 800a3b6:	6839      	ldr	r1, [r7, #0]
 800a3b8:	6878      	ldr	r0, [r7, #4]
 800a3ba:	f007 f857 	bl	801146c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800a3be:	687b      	ldr	r3, [r7, #4]
 800a3c0:	4618      	mov	r0, r3
 800a3c2:	3708      	adds	r7, #8
 800a3c4:	46bd      	mov	sp, r7
 800a3c6:	bd80      	pop	{r7, pc}
 800a3c8:	08029af4 	.word	0x08029af4

0800a3cc <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800a3cc:	b480      	push	{r7}
 800a3ce:	b083      	sub	sp, #12
 800a3d0:	af00      	add	r7, sp, #0
 800a3d2:	6078      	str	r0, [r7, #4]
 800a3d4:	460b      	mov	r3, r1
 800a3d6:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800a3d8:	4a06      	ldr	r2, [pc, #24]	@ (800a3f4 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800a3da:	687b      	ldr	r3, [r7, #4]
 800a3dc:	601a      	str	r2, [r3, #0]
 800a3de:	687b      	ldr	r3, [r7, #4]
 800a3e0:	887a      	ldrh	r2, [r7, #2]
 800a3e2:	809a      	strh	r2, [r3, #4]
    }
 800a3e4:	687b      	ldr	r3, [r7, #4]
 800a3e6:	4618      	mov	r0, r3
 800a3e8:	370c      	adds	r7, #12
 800a3ea:	46bd      	mov	sp, r7
 800a3ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3f0:	4770      	bx	lr
 800a3f2:	bf00      	nop
 800a3f4:	08028948 	.word	0x08028948

0800a3f8 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800a3f8:	b580      	push	{r7, lr}
 800a3fa:	b082      	sub	sp, #8
 800a3fc:	af00      	add	r7, sp, #0
 800a3fe:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800a400:	687b      	ldr	r3, [r7, #4]
 800a402:	4618      	mov	r0, r3
 800a404:	2326      	movs	r3, #38	@ 0x26
 800a406:	461a      	mov	r2, r3
 800a408:	2100      	movs	r1, #0
 800a40a:	f01a febf 	bl	802518c <memset>
 800a40e:	687b      	ldr	r3, [r7, #4]
 800a410:	4618      	mov	r0, r3
 800a412:	f7ff ff3f 	bl	800a294 <_ZN8touchgfx6WidgetC1Ev>
 800a416:	4a16      	ldr	r2, [pc, #88]	@ (800a470 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800a418:	687b      	ldr	r3, [r7, #4]
 800a41a:	601a      	str	r2, [r3, #0]
 800a41c:	687b      	ldr	r3, [r7, #4]
 800a41e:	3328      	adds	r3, #40	@ 0x28
 800a420:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800a424:	4618      	mov	r0, r3
 800a426:	f7ff ffd1 	bl	800a3cc <_ZN8touchgfx9TypedTextC1Et>
 800a42a:	687b      	ldr	r3, [r7, #4]
 800a42c:	3330      	adds	r3, #48	@ 0x30
 800a42e:	2100      	movs	r1, #0
 800a430:	4618      	mov	r0, r3
 800a432:	f7ff fc5d 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800a436:	687b      	ldr	r3, [r7, #4]
 800a438:	2200      	movs	r2, #0
 800a43a:	869a      	strh	r2, [r3, #52]	@ 0x34
 800a43c:	687b      	ldr	r3, [r7, #4]
 800a43e:	22ff      	movs	r2, #255	@ 0xff
 800a440:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 800a444:	687b      	ldr	r3, [r7, #4]
 800a446:	2200      	movs	r2, #0
 800a448:	f883 2037 	strb.w	r2, [r3, #55]	@ 0x37
 800a44c:	687b      	ldr	r3, [r7, #4]
 800a44e:	2200      	movs	r2, #0
 800a450:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800a454:	687b      	ldr	r3, [r7, #4]
 800a456:	2200      	movs	r2, #0
 800a458:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 800a45c:	687b      	ldr	r3, [r7, #4]
 800a45e:	333c      	adds	r3, #60	@ 0x3c
 800a460:	4618      	mov	r0, r3
 800a462:	f000 f8f0 	bl	800a646 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800a466:	687b      	ldr	r3, [r7, #4]
 800a468:	4618      	mov	r0, r3
 800a46a:	3708      	adds	r7, #8
 800a46c:	46bd      	mov	sp, r7
 800a46e:	bd80      	pop	{r7, pc}
 800a470:	08029818 	.word	0x08029818

0800a474 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 800a474:	b590      	push	{r4, r7, lr}
 800a476:	b087      	sub	sp, #28
 800a478:	af00      	add	r7, sp, #0
 800a47a:	6178      	str	r0, [r7, #20]
 800a47c:	460b      	mov	r3, r1
 800a47e:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 800a480:	697b      	ldr	r3, [r7, #20]
 800a482:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800a486:	4611      	mov	r1, r2
 800a488:	4618      	mov	r0, r3
 800a48a:	f7ff fd5e 	bl	8009f4a <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 800a48e:	697b      	ldr	r3, [r7, #20]
 800a490:	681b      	ldr	r3, [r3, #0]
 800a492:	3384      	adds	r3, #132	@ 0x84
 800a494:	681b      	ldr	r3, [r3, #0]
 800a496:	697c      	ldr	r4, [r7, #20]
 800a498:	463a      	mov	r2, r7
 800a49a:	6979      	ldr	r1, [r7, #20]
 800a49c:	4610      	mov	r0, r2
 800a49e:	4798      	blx	r3
 800a4a0:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800a4a4:	463a      	mov	r2, r7
 800a4a6:	ca07      	ldmia	r2, {r0, r1, r2}
 800a4a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a4ac:	bf00      	nop
 800a4ae:	371c      	adds	r7, #28
 800a4b0:	46bd      	mov	sp, r7
 800a4b2:	bd90      	pop	{r4, r7, pc}

0800a4b4 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800a4b4:	b590      	push	{r4, r7, lr}
 800a4b6:	b087      	sub	sp, #28
 800a4b8:	af00      	add	r7, sp, #0
 800a4ba:	6178      	str	r0, [r7, #20]
 800a4bc:	460b      	mov	r3, r1
 800a4be:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 800a4c0:	697b      	ldr	r3, [r7, #20]
 800a4c2:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800a4c6:	4611      	mov	r1, r2
 800a4c8:	4618      	mov	r0, r3
 800a4ca:	f7ff fd4d 	bl	8009f68 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 800a4ce:	697b      	ldr	r3, [r7, #20]
 800a4d0:	681b      	ldr	r3, [r3, #0]
 800a4d2:	3384      	adds	r3, #132	@ 0x84
 800a4d4:	681b      	ldr	r3, [r3, #0]
 800a4d6:	697c      	ldr	r4, [r7, #20]
 800a4d8:	463a      	mov	r2, r7
 800a4da:	6979      	ldr	r1, [r7, #20]
 800a4dc:	4610      	mov	r0, r2
 800a4de:	4798      	blx	r3
 800a4e0:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800a4e4:	463a      	mov	r2, r7
 800a4e6:	ca07      	ldmia	r2, {r0, r1, r2}
 800a4e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a4ec:	bf00      	nop
 800a4ee:	371c      	adds	r7, #28
 800a4f0:	46bd      	mov	sp, r7
 800a4f2:	bd90      	pop	{r4, r7, pc}

0800a4f4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 800a4f4:	b580      	push	{r7, lr}
 800a4f6:	b082      	sub	sp, #8
 800a4f8:	af00      	add	r7, sp, #0
 800a4fa:	6078      	str	r0, [r7, #4]
 800a4fc:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 800a4fe:	6878      	ldr	r0, [r7, #4]
 800a500:	f7ff fc05 	bl	8009d0e <_ZN8touchgfx4RectC1Ev>
    }
 800a504:	6878      	ldr	r0, [r7, #4]
 800a506:	3708      	adds	r7, #8
 800a508:	46bd      	mov	sp, r7
 800a50a:	bd80      	pop	{r7, pc}

0800a50c <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 800a50c:	b480      	push	{r7}
 800a50e:	b083      	sub	sp, #12
 800a510:	af00      	add	r7, sp, #0
 800a512:	6078      	str	r0, [r7, #4]
 800a514:	460b      	mov	r3, r1
 800a516:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800a518:	687b      	ldr	r3, [r7, #4]
 800a51a:	78fa      	ldrb	r2, [r7, #3]
 800a51c:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
    }
 800a520:	bf00      	nop
 800a522:	370c      	adds	r7, #12
 800a524:	46bd      	mov	sp, r7
 800a526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a52a:	4770      	bx	lr

0800a52c <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 800a52c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a52e:	b085      	sub	sp, #20
 800a530:	af00      	add	r7, sp, #0
 800a532:	6078      	str	r0, [r7, #4]
 800a534:	460b      	mov	r3, r1
 800a536:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800a538:	687e      	ldr	r6, [r7, #4]
 800a53a:	687b      	ldr	r3, [r7, #4]
 800a53c:	681b      	ldr	r3, [r3, #0]
 800a53e:	3334      	adds	r3, #52	@ 0x34
 800a540:	681c      	ldr	r4, [r3, #0]
 800a542:	887d      	ldrh	r5, [r7, #2]
 800a544:	6878      	ldr	r0, [r7, #4]
 800a546:	f000 f867 	bl	800a618 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 800a54a:	4603      	mov	r3, r0
 800a54c:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800a54e:	4b1c      	ldr	r3, [pc, #112]	@ (800a5c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800a550:	681b      	ldr	r3, [r3, #0]
 800a552:	2b00      	cmp	r3, #0
 800a554:	d105      	bne.n	800a562 <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 800a556:	4b1b      	ldr	r3, [pc, #108]	@ (800a5c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 800a558:	4a1b      	ldr	r2, [pc, #108]	@ (800a5c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800a55a:	216c      	movs	r1, #108	@ 0x6c
 800a55c:	481b      	ldr	r0, [pc, #108]	@ (800a5cc <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800a55e:	f019 fe89 	bl	8024274 <__assert_func>
 800a562:	68fb      	ldr	r3, [r7, #12]
 800a564:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 800a566:	68bb      	ldr	r3, [r7, #8]
 800a568:	889a      	ldrh	r2, [r3, #4]
 800a56a:	4b19      	ldr	r3, [pc, #100]	@ (800a5d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 800a56c:	881b      	ldrh	r3, [r3, #0]
 800a56e:	429a      	cmp	r2, r3
 800a570:	bf34      	ite	cc
 800a572:	2301      	movcc	r3, #1
 800a574:	2300      	movcs	r3, #0
 800a576:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800a578:	2b00      	cmp	r3, #0
 800a57a:	d105      	bne.n	800a588 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 800a57c:	4b15      	ldr	r3, [pc, #84]	@ (800a5d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 800a57e:	4a12      	ldr	r2, [pc, #72]	@ (800a5c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800a580:	216d      	movs	r1, #109	@ 0x6d
 800a582:	4812      	ldr	r0, [pc, #72]	@ (800a5cc <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800a584:	f019 fe76 	bl	8024274 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800a588:	4b13      	ldr	r3, [pc, #76]	@ (800a5d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 800a58a:	681a      	ldr	r2, [r3, #0]
 800a58c:	4b0c      	ldr	r3, [pc, #48]	@ (800a5c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800a58e:	6819      	ldr	r1, [r3, #0]
 800a590:	68fb      	ldr	r3, [r7, #12]
 800a592:	889b      	ldrh	r3, [r3, #4]
 800a594:	005b      	lsls	r3, r3, #1
 800a596:	440b      	add	r3, r1
 800a598:	781b      	ldrb	r3, [r3, #0]
 800a59a:	009b      	lsls	r3, r3, #2
 800a59c:	4413      	add	r3, r2
 800a59e:	681b      	ldr	r3, [r3, #0]
 800a5a0:	681a      	ldr	r2, [r3, #0]
 800a5a2:	3230      	adds	r2, #48	@ 0x30
 800a5a4:	6812      	ldr	r2, [r2, #0]
 800a5a6:	4618      	mov	r0, r3
 800a5a8:	4790      	blx	r2
 800a5aa:	4603      	mov	r3, r0
 800a5ac:	1aeb      	subs	r3, r5, r3
 800a5ae:	b29b      	uxth	r3, r3
 800a5b0:	b21b      	sxth	r3, r3
 800a5b2:	4619      	mov	r1, r3
 800a5b4:	4630      	mov	r0, r6
 800a5b6:	47a0      	blx	r4
    }
 800a5b8:	bf00      	nop
 800a5ba:	3714      	adds	r7, #20
 800a5bc:	46bd      	mov	sp, r7
 800a5be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a5c0:	200023f8 	.word	0x200023f8
 800a5c4:	080278dc 	.word	0x080278dc
 800a5c8:	08027920 	.word	0x08027920
 800a5cc:	0802795c 	.word	0x0802795c
 800a5d0:	200023fc 	.word	0x200023fc
 800a5d4:	080279a0 	.word	0x080279a0
 800a5d8:	20002400 	.word	0x20002400

0800a5dc <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800a5dc:	b580      	push	{r7, lr}
 800a5de:	b082      	sub	sp, #8
 800a5e0:	af00      	add	r7, sp, #0
 800a5e2:	6078      	str	r0, [r7, #4]
 800a5e4:	460b      	mov	r3, r1
 800a5e6:	807b      	strh	r3, [r7, #2]
 800a5e8:	4613      	mov	r3, r2
 800a5ea:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800a5ec:	687a      	ldr	r2, [r7, #4]
 800a5ee:	687b      	ldr	r3, [r7, #4]
 800a5f0:	681b      	ldr	r3, [r3, #0]
 800a5f2:	3330      	adds	r3, #48	@ 0x30
 800a5f4:	681b      	ldr	r3, [r3, #0]
 800a5f6:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800a5fa:	4610      	mov	r0, r2
 800a5fc:	4798      	blx	r3
        setBaselineY(baselineY);
 800a5fe:	687b      	ldr	r3, [r7, #4]
 800a600:	681b      	ldr	r3, [r3, #0]
 800a602:	3364      	adds	r3, #100	@ 0x64
 800a604:	681b      	ldr	r3, [r3, #0]
 800a606:	f9b7 2000 	ldrsh.w	r2, [r7]
 800a60a:	4611      	mov	r1, r2
 800a60c:	6878      	ldr	r0, [r7, #4]
 800a60e:	4798      	blx	r3
    }
 800a610:	bf00      	nop
 800a612:	3708      	adds	r7, #8
 800a614:	46bd      	mov	sp, r7
 800a616:	bd80      	pop	{r7, pc}

0800a618 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 800a618:	b480      	push	{r7}
 800a61a:	b083      	sub	sp, #12
 800a61c:	af00      	add	r7, sp, #0
 800a61e:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 800a620:	687b      	ldr	r3, [r7, #4]
 800a622:	3328      	adds	r3, #40	@ 0x28
    }
 800a624:	4618      	mov	r0, r3
 800a626:	370c      	adds	r7, #12
 800a628:	46bd      	mov	sp, r7
 800a62a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a62e:	4770      	bx	lr

0800a630 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800a630:	b480      	push	{r7}
 800a632:	b083      	sub	sp, #12
 800a634:	af00      	add	r7, sp, #0
 800a636:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800a638:	2300      	movs	r3, #0
    }
 800a63a:	4618      	mov	r0, r3
 800a63c:	370c      	adds	r7, #12
 800a63e:	46bd      	mov	sp, r7
 800a640:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a644:	4770      	bx	lr

0800a646 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800a646:	b580      	push	{r7, lr}
 800a648:	b084      	sub	sp, #16
 800a64a:	af02      	add	r7, sp, #8
 800a64c:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800a64e:	6878      	ldr	r0, [r7, #4]
 800a650:	f04f 33ff 	mov.w	r3, #4294967295
 800a654:	9300      	str	r3, [sp, #0]
 800a656:	f04f 33ff 	mov.w	r3, #4294967295
 800a65a:	2200      	movs	r2, #0
 800a65c:	2100      	movs	r1, #0
 800a65e:	f7ff fb6d 	bl	8009d3c <_ZN8touchgfx4RectC1Essss>
              text(0)
 800a662:	687b      	ldr	r3, [r7, #4]
 800a664:	2200      	movs	r2, #0
 800a666:	609a      	str	r2, [r3, #8]
        {
        }
 800a668:	687b      	ldr	r3, [r7, #4]
 800a66a:	4618      	mov	r0, r3
 800a66c:	3708      	adds	r7, #8
 800a66e:	46bd      	mov	sp, r7
 800a670:	bd80      	pop	{r7, pc}
	...

0800a674 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800a674:	b580      	push	{r7, lr}
 800a676:	b082      	sub	sp, #8
 800a678:	af00      	add	r7, sp, #0
 800a67a:	6078      	str	r0, [r7, #4]
 800a67c:	4a08      	ldr	r2, [pc, #32]	@ (800a6a0 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800a67e:	687b      	ldr	r3, [r7, #4]
 800a680:	601a      	str	r2, [r3, #0]
 800a682:	687b      	ldr	r3, [r7, #4]
 800a684:	3328      	adds	r3, #40	@ 0x28
 800a686:	4618      	mov	r0, r3
 800a688:	f7fe fa5a 	bl	8008b40 <_ZN8touchgfx9TypedTextD1Ev>
 800a68c:	687b      	ldr	r3, [r7, #4]
 800a68e:	4618      	mov	r0, r3
 800a690:	f7ff fe12 	bl	800a2b8 <_ZN8touchgfx6WidgetD1Ev>
 800a694:	687b      	ldr	r3, [r7, #4]
 800a696:	4618      	mov	r0, r3
 800a698:	3708      	adds	r7, #8
 800a69a:	46bd      	mov	sp, r7
 800a69c:	bd80      	pop	{r7, pc}
 800a69e:	bf00      	nop
 800a6a0:	08029818 	.word	0x08029818

0800a6a4 <_ZN8touchgfx8TextAreaD0Ev>:
 800a6a4:	b580      	push	{r7, lr}
 800a6a6:	b082      	sub	sp, #8
 800a6a8:	af00      	add	r7, sp, #0
 800a6aa:	6078      	str	r0, [r7, #4]
 800a6ac:	6878      	ldr	r0, [r7, #4]
 800a6ae:	f7ff ffe1 	bl	800a674 <_ZN8touchgfx8TextAreaD1Ev>
 800a6b2:	2148      	movs	r1, #72	@ 0x48
 800a6b4:	6878      	ldr	r0, [r7, #4]
 800a6b6:	f019 fbae 	bl	8023e16 <_ZdlPvj>
 800a6ba:	687b      	ldr	r3, [r7, #4]
 800a6bc:	4618      	mov	r0, r3
 800a6be:	3708      	adds	r7, #8
 800a6c0:	46bd      	mov	sp, r7
 800a6c2:	bd80      	pop	{r7, pc}

0800a6c4 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 800a6c4:	b580      	push	{r7, lr}
 800a6c6:	b082      	sub	sp, #8
 800a6c8:	af00      	add	r7, sp, #0
 800a6ca:	6078      	str	r0, [r7, #4]
        : TextArea()
 800a6cc:	687b      	ldr	r3, [r7, #4]
 800a6ce:	4618      	mov	r0, r3
 800a6d0:	f7ff fe92 	bl	800a3f8 <_ZN8touchgfx8TextAreaC1Ev>
 800a6d4:	4a03      	ldr	r2, [pc, #12]	@ (800a6e4 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800a6d6:	687b      	ldr	r3, [r7, #4]
 800a6d8:	601a      	str	r2, [r3, #0]
    {
    }
 800a6da:	687b      	ldr	r3, [r7, #4]
 800a6dc:	4618      	mov	r0, r3
 800a6de:	3708      	adds	r7, #8
 800a6e0:	46bd      	mov	sp, r7
 800a6e2:	bd80      	pop	{r7, pc}
 800a6e4:	08029984 	.word	0x08029984

0800a6e8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800a6e8:	b580      	push	{r7, lr}
 800a6ea:	b082      	sub	sp, #8
 800a6ec:	af00      	add	r7, sp, #0
 800a6ee:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 800a6f0:	687b      	ldr	r3, [r7, #4]
 800a6f2:	4618      	mov	r0, r3
 800a6f4:	f7ff fbae 	bl	8009e54 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800a6f8:	bf00      	nop
 800a6fa:	3708      	adds	r7, #8
 800a6fc:	46bd      	mov	sp, r7
 800a6fe:	bd80      	pop	{r7, pc}

0800a700 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800a700:	b580      	push	{r7, lr}
 800a702:	b082      	sub	sp, #8
 800a704:	af00      	add	r7, sp, #0
 800a706:	6078      	str	r0, [r7, #4]
 800a708:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800a70a:	6878      	ldr	r0, [r7, #4]
 800a70c:	f7ff ff9b 	bl	800a646 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800a710:	6878      	ldr	r0, [r7, #4]
 800a712:	3708      	adds	r7, #8
 800a714:	46bd      	mov	sp, r7
 800a716:	bd80      	pop	{r7, pc}

0800a718 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800a718:	b580      	push	{r7, lr}
 800a71a:	b082      	sub	sp, #8
 800a71c:	af00      	add	r7, sp, #0
 800a71e:	6078      	str	r0, [r7, #4]
 800a720:	4a05      	ldr	r2, [pc, #20]	@ (800a738 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800a722:	687b      	ldr	r3, [r7, #4]
 800a724:	601a      	str	r2, [r3, #0]
 800a726:	687b      	ldr	r3, [r7, #4]
 800a728:	4618      	mov	r0, r3
 800a72a:	f7ff ffa3 	bl	800a674 <_ZN8touchgfx8TextAreaD1Ev>
 800a72e:	687b      	ldr	r3, [r7, #4]
 800a730:	4618      	mov	r0, r3
 800a732:	3708      	adds	r7, #8
 800a734:	46bd      	mov	sp, r7
 800a736:	bd80      	pop	{r7, pc}
 800a738:	08029984 	.word	0x08029984

0800a73c <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 800a73c:	b580      	push	{r7, lr}
 800a73e:	b082      	sub	sp, #8
 800a740:	af00      	add	r7, sp, #0
 800a742:	6078      	str	r0, [r7, #4]
 800a744:	6878      	ldr	r0, [r7, #4]
 800a746:	f7ff ffe7 	bl	800a718 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800a74a:	2148      	movs	r1, #72	@ 0x48
 800a74c:	6878      	ldr	r0, [r7, #4]
 800a74e:	f019 fb62 	bl	8023e16 <_ZdlPvj>
 800a752:	687b      	ldr	r3, [r7, #4]
 800a754:	4618      	mov	r0, r3
 800a756:	3708      	adds	r7, #8
 800a758:	46bd      	mov	sp, r7
 800a75a:	bd80      	pop	{r7, pc}

0800a75c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 800a75c:	b580      	push	{r7, lr}
 800a75e:	b082      	sub	sp, #8
 800a760:	af00      	add	r7, sp, #0
 800a762:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800a764:	687b      	ldr	r3, [r7, #4]
 800a766:	4618      	mov	r0, r3
 800a768:	f7ff ffac 	bl	800a6c4 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800a76c:	4a05      	ldr	r2, [pc, #20]	@ (800a784 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800a76e:	687b      	ldr	r3, [r7, #4]
 800a770:	601a      	str	r2, [r3, #0]
 800a772:	687b      	ldr	r3, [r7, #4]
 800a774:	2200      	movs	r2, #0
 800a776:	649a      	str	r2, [r3, #72]	@ 0x48
    {
    }
 800a778:	687b      	ldr	r3, [r7, #4]
 800a77a:	4618      	mov	r0, r3
 800a77c:	3708      	adds	r7, #8
 800a77e:	46bd      	mov	sp, r7
 800a780:	bd80      	pop	{r7, pc}
 800a782:	bf00      	nop
 800a784:	08028d6c 	.word	0x08028d6c

0800a788 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 800a788:	b480      	push	{r7}
 800a78a:	b083      	sub	sp, #12
 800a78c:	af00      	add	r7, sp, #0
 800a78e:	6078      	str	r0, [r7, #4]
 800a790:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 800a792:	687b      	ldr	r3, [r7, #4]
 800a794:	683a      	ldr	r2, [r7, #0]
 800a796:	649a      	str	r2, [r3, #72]	@ 0x48
    }
 800a798:	bf00      	nop
 800a79a:	370c      	adds	r7, #12
 800a79c:	46bd      	mov	sp, r7
 800a79e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7a2:	4770      	bx	lr

0800a7a4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 800a7a4:	b480      	push	{r7}
 800a7a6:	b083      	sub	sp, #12
 800a7a8:	af00      	add	r7, sp, #0
 800a7aa:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800a7ac:	687b      	ldr	r3, [r7, #4]
 800a7ae:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
    }
 800a7b0:	4618      	mov	r0, r3
 800a7b2:	370c      	adds	r7, #12
 800a7b4:	46bd      	mov	sp, r7
 800a7b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7ba:	4770      	bx	lr

0800a7bc <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800a7bc:	b580      	push	{r7, lr}
 800a7be:	b082      	sub	sp, #8
 800a7c0:	af00      	add	r7, sp, #0
 800a7c2:	6078      	str	r0, [r7, #4]
 800a7c4:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800a7c6:	6839      	ldr	r1, [r7, #0]
 800a7c8:	6878      	ldr	r0, [r7, #4]
 800a7ca:	f7ff ffdd 	bl	800a788 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800a7ce:	bf00      	nop
 800a7d0:	3708      	adds	r7, #8
 800a7d2:	46bd      	mov	sp, r7
 800a7d4:	bd80      	pop	{r7, pc}
	...

0800a7d8 <_ZN8touchgfx9ContainerD1Ev>:
class Container : public Drawable
 800a7d8:	b580      	push	{r7, lr}
 800a7da:	b082      	sub	sp, #8
 800a7dc:	af00      	add	r7, sp, #0
 800a7de:	6078      	str	r0, [r7, #4]
 800a7e0:	4a05      	ldr	r2, [pc, #20]	@ (800a7f8 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800a7e2:	687b      	ldr	r3, [r7, #4]
 800a7e4:	601a      	str	r2, [r3, #0]
 800a7e6:	687b      	ldr	r3, [r7, #4]
 800a7e8:	4618      	mov	r0, r3
 800a7ea:	f7ff fb13 	bl	8009e14 <_ZN8touchgfx8DrawableD1Ev>
 800a7ee:	687b      	ldr	r3, [r7, #4]
 800a7f0:	4618      	mov	r0, r3
 800a7f2:	3708      	adds	r7, #8
 800a7f4:	46bd      	mov	sp, r7
 800a7f6:	bd80      	pop	{r7, pc}
 800a7f8:	080295c0 	.word	0x080295c0

0800a7fc <_ZN8touchgfx9ContainerD0Ev>:
 800a7fc:	b580      	push	{r7, lr}
 800a7fe:	b082      	sub	sp, #8
 800a800:	af00      	add	r7, sp, #0
 800a802:	6078      	str	r0, [r7, #4]
 800a804:	6878      	ldr	r0, [r7, #4]
 800a806:	f7ff ffe7 	bl	800a7d8 <_ZN8touchgfx9ContainerD1Ev>
 800a80a:	212c      	movs	r1, #44	@ 0x2c
 800a80c:	6878      	ldr	r0, [r7, #4]
 800a80e:	f019 fb02 	bl	8023e16 <_ZdlPvj>
 800a812:	687b      	ldr	r3, [r7, #4]
 800a814:	4618      	mov	r0, r3
 800a816:	3708      	adds	r7, #8
 800a818:	46bd      	mov	sp, r7
 800a81a:	bd80      	pop	{r7, pc}

0800a81c <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
 * @see ClickButtonTrigger, RepeatButtonTrigger, ToggleButtonTrigger, TouchButtonTrigger
 */
class AbstractButtonContainer : public Container
{
public:
    AbstractButtonContainer()
 800a81c:	b580      	push	{r7, lr}
 800a81e:	b082      	sub	sp, #8
 800a820:	af00      	add	r7, sp, #0
 800a822:	6078      	str	r0, [r7, #4]
        : pressed(false), alpha(255), action(0)
 800a824:	687b      	ldr	r3, [r7, #4]
 800a826:	4618      	mov	r0, r3
 800a828:	f7ff fc88 	bl	800a13c <_ZN8touchgfx9ContainerC1Ev>
 800a82c:	4a0b      	ldr	r2, [pc, #44]	@ (800a85c <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x40>)
 800a82e:	687b      	ldr	r3, [r7, #4]
 800a830:	601a      	str	r2, [r3, #0]
 800a832:	687b      	ldr	r3, [r7, #4]
 800a834:	2200      	movs	r2, #0
 800a836:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
 800a83a:	687b      	ldr	r3, [r7, #4]
 800a83c:	22ff      	movs	r2, #255	@ 0xff
 800a83e:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
 800a842:	687b      	ldr	r3, [r7, #4]
 800a844:	2200      	movs	r2, #0
 800a846:	631a      	str	r2, [r3, #48]	@ 0x30
    {
        setTouchable(true);
 800a848:	687b      	ldr	r3, [r7, #4]
 800a84a:	2101      	movs	r1, #1
 800a84c:	4618      	mov	r0, r3
 800a84e:	f7ff fbfd 	bl	800a04c <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800a852:	687b      	ldr	r3, [r7, #4]
 800a854:	4618      	mov	r0, r3
 800a856:	3708      	adds	r7, #8
 800a858:	46bd      	mov	sp, r7
 800a85a:	bd80      	pop	{r7, pc}
 800a85c:	08028cd0 	.word	0x08028cd0

0800a860 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
     *
     * @param  isPressed True if is pressed, false if not.
     *
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
 800a860:	b580      	push	{r7, lr}
 800a862:	b082      	sub	sp, #8
 800a864:	af00      	add	r7, sp, #0
 800a866:	6078      	str	r0, [r7, #4]
 800a868:	460b      	mov	r3, r1
 800a86a:	70fb      	strb	r3, [r7, #3]
    {
        pressed = isPressed;
 800a86c:	687b      	ldr	r3, [r7, #4]
 800a86e:	78fa      	ldrb	r2, [r7, #3]
 800a870:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        handlePressedUpdated();
 800a874:	687b      	ldr	r3, [r7, #4]
 800a876:	681b      	ldr	r3, [r3, #0]
 800a878:	338c      	adds	r3, #140	@ 0x8c
 800a87a:	681b      	ldr	r3, [r3, #0]
 800a87c:	6878      	ldr	r0, [r7, #4]
 800a87e:	4798      	blx	r3
    }
 800a880:	bf00      	nop
 800a882:	3708      	adds	r7, #8
 800a884:	46bd      	mov	sp, r7
 800a886:	bd80      	pop	{r7, pc}

0800a888 <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>:
     *
     * @return True if it succeeds, false if it fails.
     *
     * @see setPressed
     */
    bool getPressed()
 800a888:	b480      	push	{r7}
 800a88a:	b083      	sub	sp, #12
 800a88c:	af00      	add	r7, sp, #0
 800a88e:	6078      	str	r0, [r7, #4]
    {
        return pressed;
 800a890:	687b      	ldr	r3, [r7, #4]
 800a892:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
    }
 800a896:	4618      	mov	r0, r3
 800a898:	370c      	adds	r7, #12
 800a89a:	46bd      	mov	sp, r7
 800a89c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8a0:	4770      	bx	lr

0800a8a2 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>:

    /** @copydoc Image::setAlpha() */
    void setAlpha(uint8_t newAlpha)
 800a8a2:	b580      	push	{r7, lr}
 800a8a4:	b082      	sub	sp, #8
 800a8a6:	af00      	add	r7, sp, #0
 800a8a8:	6078      	str	r0, [r7, #4]
 800a8aa:	460b      	mov	r3, r1
 800a8ac:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800a8ae:	687b      	ldr	r3, [r7, #4]
 800a8b0:	78fa      	ldrb	r2, [r7, #3]
 800a8b2:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
        handleAlphaUpdated();
 800a8b6:	687b      	ldr	r3, [r7, #4]
 800a8b8:	681b      	ldr	r3, [r3, #0]
 800a8ba:	3390      	adds	r3, #144	@ 0x90
 800a8bc:	681b      	ldr	r3, [r3, #0]
 800a8be:	6878      	ldr	r0, [r7, #4]
 800a8c0:	4798      	blx	r3
    }
 800a8c2:	bf00      	nop
 800a8c4:	3708      	adds	r7, #8
 800a8c6:	46bd      	mov	sp, r7
 800a8c8:	bd80      	pop	{r7, pc}

0800a8ca <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
 800a8ca:	b480      	push	{r7}
 800a8cc:	b083      	sub	sp, #12
 800a8ce:	af00      	add	r7, sp, #0
 800a8d0:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800a8d2:	687b      	ldr	r3, [r7, #4]
 800a8d4:	f893 302d 	ldrb.w	r3, [r3, #45]	@ 0x2d
    }
 800a8d8:	4618      	mov	r0, r3
 800a8da:	370c      	adds	r7, #12
 800a8dc:	46bd      	mov	sp, r7
 800a8de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8e2:	4770      	bx	lr

0800a8e4 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     *
     * @param  callback The callback.
     *
     * @see executeAction
     */
    void setAction(GenericCallback<const AbstractButtonContainer&>& callback)
 800a8e4:	b480      	push	{r7}
 800a8e6:	b083      	sub	sp, #12
 800a8e8:	af00      	add	r7, sp, #0
 800a8ea:	6078      	str	r0, [r7, #4]
 800a8ec:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800a8ee:	687b      	ldr	r3, [r7, #4]
 800a8f0:	683a      	ldr	r2, [r7, #0]
 800a8f2:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a8f4:	bf00      	nop
 800a8f6:	370c      	adds	r7, #12
 800a8f8:	46bd      	mov	sp, r7
 800a8fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8fe:	4770      	bx	lr

0800a900 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800a900:	b580      	push	{r7, lr}
 800a902:	b082      	sub	sp, #8
 800a904:	af00      	add	r7, sp, #0
 800a906:	6078      	str	r0, [r7, #4]
    {
        if (action && action->isValid())
 800a908:	687b      	ldr	r3, [r7, #4]
 800a90a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a90c:	2b00      	cmp	r3, #0
 800a90e:	d00d      	beq.n	800a92c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800a910:	687b      	ldr	r3, [r7, #4]
 800a912:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a914:	687b      	ldr	r3, [r7, #4]
 800a916:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a918:	681b      	ldr	r3, [r3, #0]
 800a91a:	330c      	adds	r3, #12
 800a91c:	681b      	ldr	r3, [r3, #0]
 800a91e:	4610      	mov	r0, r2
 800a920:	4798      	blx	r3
 800a922:	4603      	mov	r3, r0
 800a924:	2b00      	cmp	r3, #0
 800a926:	d001      	beq.n	800a92c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800a928:	2301      	movs	r3, #1
 800a92a:	e000      	b.n	800a92e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2e>
 800a92c:	2300      	movs	r3, #0
 800a92e:	2b00      	cmp	r3, #0
 800a930:	d009      	beq.n	800a946 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x46>
        {
            action->execute(*this);
 800a932:	687b      	ldr	r3, [r7, #4]
 800a934:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a936:	687b      	ldr	r3, [r7, #4]
 800a938:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a93a:	681b      	ldr	r3, [r3, #0]
 800a93c:	3308      	adds	r3, #8
 800a93e:	681b      	ldr	r3, [r3, #0]
 800a940:	6879      	ldr	r1, [r7, #4]
 800a942:	4610      	mov	r0, r2
 800a944:	4798      	blx	r3
        }
    }
 800a946:	bf00      	nop
 800a948:	3708      	adds	r7, #8
 800a94a:	46bd      	mov	sp, r7
 800a94c:	bd80      	pop	{r7, pc}

0800a94e <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    uint8_t alpha; ///< The current alpha value. 255 denotes solid, 0 denotes completely invisible.

    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
 800a94e:	b480      	push	{r7}
 800a950:	b083      	sub	sp, #12
 800a952:	af00      	add	r7, sp, #0
 800a954:	6078      	str	r0, [r7, #4]
    {
    }
 800a956:	bf00      	nop
 800a958:	370c      	adds	r7, #12
 800a95a:	46bd      	mov	sp, r7
 800a95c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a960:	4770      	bx	lr

0800a962 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
 800a962:	b480      	push	{r7}
 800a964:	b083      	sub	sp, #12
 800a966:	af00      	add	r7, sp, #0
 800a968:	6078      	str	r0, [r7, #4]
    {
    }
 800a96a:	bf00      	nop
 800a96c:	370c      	adds	r7, #12
 800a96e:	46bd      	mov	sp, r7
 800a970:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a974:	4770      	bx	lr
	...

0800a978 <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 800a978:	b580      	push	{r7, lr}
 800a97a:	b082      	sub	sp, #8
 800a97c:	af00      	add	r7, sp, #0
 800a97e:	6078      	str	r0, [r7, #4]
 800a980:	4a05      	ldr	r2, [pc, #20]	@ (800a998 <_ZN8touchgfx5ImageD1Ev+0x20>)
 800a982:	687b      	ldr	r3, [r7, #4]
 800a984:	601a      	str	r2, [r3, #0]
 800a986:	687b      	ldr	r3, [r7, #4]
 800a988:	4618      	mov	r0, r3
 800a98a:	f7ff fc95 	bl	800a2b8 <_ZN8touchgfx6WidgetD1Ev>
 800a98e:	687b      	ldr	r3, [r7, #4]
 800a990:	4618      	mov	r0, r3
 800a992:	3708      	adds	r7, #8
 800a994:	46bd      	mov	sp, r7
 800a996:	bd80      	pop	{r7, pc}
 800a998:	08029af4 	.word	0x08029af4

0800a99c <_ZN8touchgfx5ImageD0Ev>:
 800a99c:	b580      	push	{r7, lr}
 800a99e:	b082      	sub	sp, #8
 800a9a0:	af00      	add	r7, sp, #0
 800a9a2:	6078      	str	r0, [r7, #4]
 800a9a4:	6878      	ldr	r0, [r7, #4]
 800a9a6:	f7ff ffe7 	bl	800a978 <_ZN8touchgfx5ImageD1Ev>
 800a9aa:	212c      	movs	r1, #44	@ 0x2c
 800a9ac:	6878      	ldr	r0, [r7, #4]
 800a9ae:	f019 fa32 	bl	8023e16 <_ZdlPvj>
 800a9b2:	687b      	ldr	r3, [r7, #4]
 800a9b4:	4618      	mov	r0, r3
 800a9b6:	3708      	adds	r7, #8
 800a9b8:	46bd      	mov	sp, r7
 800a9ba:	bd80      	pop	{r7, pc}

0800a9bc <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800a9bc:	b580      	push	{r7, lr}
 800a9be:	b082      	sub	sp, #8
 800a9c0:	af00      	add	r7, sp, #0
 800a9c2:	6078      	str	r0, [r7, #4]
 800a9c4:	4a05      	ldr	r2, [pc, #20]	@ (800a9dc <_ZN8touchgfx3BoxD1Ev+0x20>)
 800a9c6:	687b      	ldr	r3, [r7, #4]
 800a9c8:	601a      	str	r2, [r3, #0]
 800a9ca:	687b      	ldr	r3, [r7, #4]
 800a9cc:	4618      	mov	r0, r3
 800a9ce:	f7ff fc73 	bl	800a2b8 <_ZN8touchgfx6WidgetD1Ev>
 800a9d2:	687b      	ldr	r3, [r7, #4]
 800a9d4:	4618      	mov	r0, r3
 800a9d6:	3708      	adds	r7, #8
 800a9d8:	46bd      	mov	sp, r7
 800a9da:	bd80      	pop	{r7, pc}
 800a9dc:	080298a8 	.word	0x080298a8

0800a9e0 <_ZN8touchgfx3BoxD0Ev>:
 800a9e0:	b580      	push	{r7, lr}
 800a9e2:	b082      	sub	sp, #8
 800a9e4:	af00      	add	r7, sp, #0
 800a9e6:	6078      	str	r0, [r7, #4]
 800a9e8:	6878      	ldr	r0, [r7, #4]
 800a9ea:	f7ff ffe7 	bl	800a9bc <_ZN8touchgfx3BoxD1Ev>
 800a9ee:	212c      	movs	r1, #44	@ 0x2c
 800a9f0:	6878      	ldr	r0, [r7, #4]
 800a9f2:	f019 fa10 	bl	8023e16 <_ZdlPvj>
 800a9f6:	687b      	ldr	r3, [r7, #4]
 800a9f8:	4618      	mov	r0, r3
 800a9fa:	3708      	adds	r7, #8
 800a9fc:	46bd      	mov	sp, r7
 800a9fe:	bd80      	pop	{r7, pc}

0800aa00 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800aa00:	b580      	push	{r7, lr}
 800aa02:	b082      	sub	sp, #8
 800aa04:	af00      	add	r7, sp, #0
 800aa06:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800aa08:	687b      	ldr	r3, [r7, #4]
 800aa0a:	4618      	mov	r0, r3
 800aa0c:	f7ff fc76 	bl	800a2fc <_ZN8touchgfx3BoxC1Ev>
 800aa10:	4a08      	ldr	r2, [pc, #32]	@ (800aa34 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	601a      	str	r2, [r3, #0]
 800aa16:	687b      	ldr	r3, [r7, #4]
 800aa18:	332c      	adds	r3, #44	@ 0x2c
 800aa1a:	2100      	movs	r1, #0
 800aa1c:	4618      	mov	r0, r3
 800aa1e:	f7ff f967 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800aa22:	687b      	ldr	r3, [r7, #4]
 800aa24:	2200      	movs	r2, #0
 800aa26:	861a      	strh	r2, [r3, #48]	@ 0x30
    {
    }
 800aa28:	687b      	ldr	r3, [r7, #4]
 800aa2a:	4618      	mov	r0, r3
 800aa2c:	3708      	adds	r7, #8
 800aa2e:	46bd      	mov	sp, r7
 800aa30:	bd80      	pop	{r7, pc}
 800aa32:	bf00      	nop
 800aa34:	08029a14 	.word	0x08029a14

0800aa38 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800aa38:	b480      	push	{r7}
 800aa3a:	b083      	sub	sp, #12
 800aa3c:	af00      	add	r7, sp, #0
 800aa3e:	6078      	str	r0, [r7, #4]
 800aa40:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800aa42:	687b      	ldr	r3, [r7, #4]
 800aa44:	683a      	ldr	r2, [r7, #0]
 800aa46:	62da      	str	r2, [r3, #44]	@ 0x2c
    }
 800aa48:	bf00      	nop
 800aa4a:	370c      	adds	r7, #12
 800aa4c:	46bd      	mov	sp, r7
 800aa4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa52:	4770      	bx	lr

0800aa54 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800aa54:	b480      	push	{r7}
 800aa56:	b083      	sub	sp, #12
 800aa58:	af00      	add	r7, sp, #0
 800aa5a:	6078      	str	r0, [r7, #4]
 800aa5c:	460b      	mov	r3, r1
 800aa5e:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800aa60:	687b      	ldr	r3, [r7, #4]
 800aa62:	887a      	ldrh	r2, [r7, #2]
 800aa64:	861a      	strh	r2, [r3, #48]	@ 0x30
    }
 800aa66:	bf00      	nop
 800aa68:	370c      	adds	r7, #12
 800aa6a:	46bd      	mov	sp, r7
 800aa6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa70:	4770      	bx	lr

0800aa72 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800aa72:	b580      	push	{r7, lr}
 800aa74:	b084      	sub	sp, #16
 800aa76:	af00      	add	r7, sp, #0
 800aa78:	6078      	str	r0, [r7, #4]
 800aa7a:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800aa7c:	687b      	ldr	r3, [r7, #4]
 800aa7e:	4618      	mov	r0, r3
 800aa80:	f7ff ff02 	bl	800a888 <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800aa84:	4603      	mov	r3, r0
 800aa86:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800aa88:	6838      	ldr	r0, [r7, #0]
 800aa8a:	f7ff f987 	bl	8009d9c <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800aa8e:	4603      	mov	r3, r0
 800aa90:	2b00      	cmp	r3, #0
 800aa92:	bf0c      	ite	eq
 800aa94:	2301      	moveq	r3, #1
 800aa96:	2300      	movne	r3, #0
 800aa98:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800aa9a:	7bbb      	ldrb	r3, [r7, #14]
 800aa9c:	2b00      	cmp	r3, #0
 800aa9e:	d005      	beq.n	800aaac <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800aaa0:	7bfb      	ldrb	r3, [r7, #15]
 800aaa2:	f083 0301 	eor.w	r3, r3, #1
 800aaa6:	b2db      	uxtb	r3, r3
 800aaa8:	2b00      	cmp	r3, #0
 800aaaa:	d108      	bne.n	800aabe <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800aaac:	7bbb      	ldrb	r3, [r7, #14]
 800aaae:	f083 0301 	eor.w	r3, r3, #1
 800aab2:	b2db      	uxtb	r3, r3
 800aab4:	2b00      	cmp	r3, #0
 800aab6:	d00f      	beq.n	800aad8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800aab8:	7bfb      	ldrb	r3, [r7, #15]
 800aaba:	2b00      	cmp	r3, #0
 800aabc:	d00c      	beq.n	800aad8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800aabe:	687b      	ldr	r3, [r7, #4]
 800aac0:	7bba      	ldrb	r2, [r7, #14]
 800aac2:	4611      	mov	r1, r2
 800aac4:	4618      	mov	r0, r3
 800aac6:	f7ff fecb 	bl	800a860 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800aaca:	687a      	ldr	r2, [r7, #4]
 800aacc:	687b      	ldr	r3, [r7, #4]
 800aace:	681b      	ldr	r3, [r3, #0]
 800aad0:	3314      	adds	r3, #20
 800aad2:	681b      	ldr	r3, [r3, #0]
 800aad4:	4610      	mov	r0, r2
 800aad6:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800aad8:	7bfb      	ldrb	r3, [r7, #15]
 800aada:	2b00      	cmp	r3, #0
 800aadc:	d007      	beq.n	800aaee <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800aade:	6838      	ldr	r0, [r7, #0]
 800aae0:	f7ff f95c 	bl	8009d9c <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800aae4:	4603      	mov	r3, r0
 800aae6:	2b01      	cmp	r3, #1
 800aae8:	d101      	bne.n	800aaee <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800aaea:	2301      	movs	r3, #1
 800aaec:	e000      	b.n	800aaf0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7e>
 800aaee:	2300      	movs	r3, #0
 800aaf0:	2b00      	cmp	r3, #0
 800aaf2:	d006      	beq.n	800ab02 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x90>
        {
            executeAction();
 800aaf4:	687a      	ldr	r2, [r7, #4]
 800aaf6:	687b      	ldr	r3, [r7, #4]
 800aaf8:	681b      	ldr	r3, [r3, #0]
 800aafa:	3388      	adds	r3, #136	@ 0x88
 800aafc:	681b      	ldr	r3, [r3, #0]
 800aafe:	4610      	mov	r0, r2
 800ab00:	4798      	blx	r3
        }
    }
 800ab02:	bf00      	nop
 800ab04:	3710      	adds	r7, #16
 800ab06:	46bd      	mov	sp, r7
 800ab08:	bd80      	pop	{r7, pc}
	...

0800ab0c <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 800ab0c:	b580      	push	{r7, lr}
 800ab0e:	b082      	sub	sp, #8
 800ab10:	af00      	add	r7, sp, #0
 800ab12:	6078      	str	r0, [r7, #4]
 800ab14:	4a05      	ldr	r2, [pc, #20]	@ (800ab2c <_ZN8touchgfx23AbstractButtonContainerD1Ev+0x20>)
 800ab16:	687b      	ldr	r3, [r7, #4]
 800ab18:	601a      	str	r2, [r3, #0]
 800ab1a:	687b      	ldr	r3, [r7, #4]
 800ab1c:	4618      	mov	r0, r3
 800ab1e:	f7ff fe5b 	bl	800a7d8 <_ZN8touchgfx9ContainerD1Ev>
 800ab22:	687b      	ldr	r3, [r7, #4]
 800ab24:	4618      	mov	r0, r3
 800ab26:	3708      	adds	r7, #8
 800ab28:	46bd      	mov	sp, r7
 800ab2a:	bd80      	pop	{r7, pc}
 800ab2c:	08028cd0 	.word	0x08028cd0

0800ab30 <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
 800ab30:	b580      	push	{r7, lr}
 800ab32:	b082      	sub	sp, #8
 800ab34:	af00      	add	r7, sp, #0
 800ab36:	6078      	str	r0, [r7, #4]
 800ab38:	6878      	ldr	r0, [r7, #4]
 800ab3a:	f7ff ffe7 	bl	800ab0c <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800ab3e:	2134      	movs	r1, #52	@ 0x34
 800ab40:	6878      	ldr	r0, [r7, #4]
 800ab42:	f019 f968 	bl	8023e16 <_ZdlPvj>
 800ab46:	687b      	ldr	r3, [r7, #4]
 800ab48:	4618      	mov	r0, r3
 800ab4a:	3708      	adds	r7, #8
 800ab4c:	46bd      	mov	sp, r7
 800ab4e:	bd80      	pop	{r7, pc}

0800ab50 <_ZN15Screen1ViewBase11applicationEv>:
    Screen1ViewBase();
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800ab50:	b580      	push	{r7, lr}
 800ab52:	b082      	sub	sp, #8
 800ab54:	af00      	add	r7, sp, #0
 800ab56:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800ab58:	f008 faa6 	bl	80130a8 <_ZN8touchgfx11Application11getInstanceEv>
 800ab5c:	4603      	mov	r3, r0
    }
 800ab5e:	4618      	mov	r0, r3
 800ab60:	3708      	adds	r7, #8
 800ab62:	46bd      	mov	sp, r7
 800ab64:	bd80      	pop	{r7, pc}
	...

0800ab68 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 800ab68:	b580      	push	{r7, lr}
 800ab6a:	b082      	sub	sp, #8
 800ab6c:	af00      	add	r7, sp, #0
 800ab6e:	6078      	str	r0, [r7, #4]
 800ab70:	4a05      	ldr	r2, [pc, #20]	@ (800ab88 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 800ab72:	687b      	ldr	r3, [r7, #4]
 800ab74:	601a      	str	r2, [r3, #0]
 800ab76:	687b      	ldr	r3, [r7, #4]
 800ab78:	4618      	mov	r0, r3
 800ab7a:	f7ff fb01 	bl	800a180 <_ZN8touchgfx6ScreenD1Ev>
 800ab7e:	687b      	ldr	r3, [r7, #4]
 800ab80:	4618      	mov	r0, r3
 800ab82:	3708      	adds	r7, #8
 800ab84:	46bd      	mov	sp, r7
 800ab86:	bd80      	pop	{r7, pc}
 800ab88:	08028be8 	.word	0x08028be8

0800ab8c <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 800ab8c:	b580      	push	{r7, lr}
 800ab8e:	b082      	sub	sp, #8
 800ab90:	af00      	add	r7, sp, #0
 800ab92:	6078      	str	r0, [r7, #4]
 800ab94:	6878      	ldr	r0, [r7, #4]
 800ab96:	f7ff ffe7 	bl	800ab68 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800ab9a:	2140      	movs	r1, #64	@ 0x40
 800ab9c:	6878      	ldr	r0, [r7, #4]
 800ab9e:	f019 f93a 	bl	8023e16 <_ZdlPvj>
 800aba2:	687b      	ldr	r3, [r7, #4]
 800aba4:	4618      	mov	r0, r3
 800aba6:	3708      	adds	r7, #8
 800aba8:	46bd      	mov	sp, r7
 800abaa:	bd80      	pop	{r7, pc}

0800abac <_ZN15Screen1ViewBaseC1Ev>:
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
 800abac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800abb0:	b0a4      	sub	sp, #144	@ 0x90
 800abb2:	af02      	add	r7, sp, #8
 800abb4:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 800abb6:	697b      	ldr	r3, [r7, #20]
 800abb8:	4618      	mov	r0, r3
 800abba:	f000 fac5 	bl	800b148 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 800abbe:	4a87      	ldr	r2, [pc, #540]	@ (800addc <_ZN15Screen1ViewBaseC1Ev+0x230>)
 800abc0:	697b      	ldr	r3, [r7, #20]
 800abc2:	601a      	str	r2, [r3, #0]
 800abc4:	697b      	ldr	r3, [r7, #20]
 800abc6:	3340      	adds	r3, #64	@ 0x40
 800abc8:	4618      	mov	r0, r3
 800abca:	f7ff fb97 	bl	800a2fc <_ZN8touchgfx3BoxC1Ev>
 800abce:	697b      	ldr	r3, [r7, #20]
 800abd0:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800abd4:	f107 031c 	add.w	r3, r7, #28
 800abd8:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800abdc:	4618      	mov	r0, r3
 800abde:	f7ff f8cd 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800abe2:	f107 031c 	add.w	r3, r7, #28
 800abe6:	4619      	mov	r1, r3
 800abe8:	4620      	mov	r0, r4
 800abea:	f7ff fbc9 	bl	800a380 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800abee:	697b      	ldr	r3, [r7, #20]
 800abf0:	3398      	adds	r3, #152	@ 0x98
 800abf2:	4618      	mov	r0, r3
 800abf4:	f7ff fdb2 	bl	800a75c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800abf8:	697b      	ldr	r3, [r7, #20]
 800abfa:	f103 04e4 	add.w	r4, r3, #228	@ 0xe4
 800abfe:	f107 0320 	add.w	r3, r7, #32
 800ac02:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800ac06:	4618      	mov	r0, r3
 800ac08:	f7ff f8b8 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800ac0c:	f107 0320 	add.w	r3, r7, #32
 800ac10:	4619      	mov	r1, r3
 800ac12:	4620      	mov	r0, r4
 800ac14:	f7ff fbb4 	bl	800a380 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800ac18:	697b      	ldr	r3, [r7, #20]
 800ac1a:	f503 7488 	add.w	r4, r3, #272	@ 0x110
 800ac1e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800ac22:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800ac26:	4618      	mov	r0, r3
 800ac28:	f7ff f8a8 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800ac2c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800ac30:	4619      	mov	r1, r3
 800ac32:	4620      	mov	r0, r4
 800ac34:	f7ff fba4 	bl	800a380 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800ac38:	697b      	ldr	r3, [r7, #20]
 800ac3a:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800ac3e:	4618      	mov	r0, r3
 800ac40:	f000 faee 	bl	800b220 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800ac44:	697b      	ldr	r3, [r7, #20]
 800ac46:	f503 70e0 	add.w	r0, r3, #448	@ 0x1c0
 800ac4a:	4b65      	ldr	r3, [pc, #404]	@ (800ade0 <_ZN15Screen1ViewBaseC1Ev+0x234>)
 800ac4c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800ac4e:	2300      	movs	r3, #0
 800ac50:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800ac52:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800ac56:	cb0c      	ldmia	r3, {r2, r3}
 800ac58:	6979      	ldr	r1, [r7, #20]
 800ac5a:	f000 fb31 	bl	800b2c0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800ac5e:	697b      	ldr	r3, [r7, #20]
 800ac60:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800ac64:	23f0      	movs	r3, #240	@ 0xf0
 800ac66:	9300      	str	r3, [sp, #0]
 800ac68:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800ac6c:	2200      	movs	r2, #0
 800ac6e:	2100      	movs	r1, #0
 800ac70:	f7ff f90e 	bl	8009e90 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800ac74:	697b      	ldr	r3, [r7, #20]
 800ac76:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800ac7a:	2300      	movs	r3, #0
 800ac7c:	f887 3068 	strb.w	r3, [r7, #104]	@ 0x68
 800ac80:	2300      	movs	r3, #0
 800ac82:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800ac86:	2300      	movs	r3, #0
 800ac88:	f887 3066 	strb.w	r3, [r7, #102]	@ 0x66
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800ac8c:	f897 3068 	ldrb.w	r3, [r7, #104]	@ 0x68
 800ac90:	041a      	lsls	r2, r3, #16
 800ac92:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800ac96:	021b      	lsls	r3, r3, #8
 800ac98:	431a      	orrs	r2, r3
 800ac9a:	f897 3066 	ldrb.w	r3, [r7, #102]	@ 0x66
 800ac9e:	4313      	orrs	r3, r2
 800aca0:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800aca4:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800aca8:	4611      	mov	r1, r2
 800acaa:	4618      	mov	r0, r3
 800acac:	f7ff f820 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800acb0:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800acb2:	4619      	mov	r1, r3
 800acb4:	4620      	mov	r0, r4
 800acb6:	f7ff fb45 	bl	800a344 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800acba:	697a      	ldr	r2, [r7, #20]
 800acbc:	697b      	ldr	r3, [r7, #20]
 800acbe:	3340      	adds	r3, #64	@ 0x40
 800acc0:	4619      	mov	r1, r3
 800acc2:	4610      	mov	r0, r2
 800acc4:	f7ff fab4 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    background.setXY(0, 0);
 800acc8:	697b      	ldr	r3, [r7, #20]
 800acca:	336c      	adds	r3, #108	@ 0x6c
 800accc:	2200      	movs	r2, #0
 800acce:	2100      	movs	r1, #0
 800acd0:	4618      	mov	r0, r3
 800acd2:	f7ff f91c 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKSMALL_ID));
 800acd6:	697b      	ldr	r3, [r7, #20]
 800acd8:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800acdc:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800ace0:	2106      	movs	r1, #6
 800ace2:	4618      	mov	r0, r3
 800ace4:	f7ff f84a 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800ace8:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800acec:	4619      	mov	r1, r3
 800acee:	4620      	mov	r0, r4
 800acf0:	f006 fbbc 	bl	801146c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(background);
 800acf4:	697a      	ldr	r2, [r7, #20]
 800acf6:	697b      	ldr	r3, [r7, #20]
 800acf8:	336c      	adds	r3, #108	@ 0x6c
 800acfa:	4619      	mov	r1, r3
 800acfc:	4610      	mov	r0, r2
 800acfe:	f7ff fa97 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    temperature.setXY(117, 96);
 800ad02:	697b      	ldr	r3, [r7, #20]
 800ad04:	3398      	adds	r3, #152	@ 0x98
 800ad06:	2260      	movs	r2, #96	@ 0x60
 800ad08:	2175      	movs	r1, #117	@ 0x75
 800ad0a:	4618      	mov	r0, r3
 800ad0c:	f7ff f8ff 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    temperature.setColor(touchgfx::Color::getColorFromRGB(250, 242, 242));
 800ad10:	697b      	ldr	r3, [r7, #20]
 800ad12:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 800ad16:	23fa      	movs	r3, #250	@ 0xfa
 800ad18:	f887 306b 	strb.w	r3, [r7, #107]	@ 0x6b
 800ad1c:	23f2      	movs	r3, #242	@ 0xf2
 800ad1e:	f887 306a 	strb.w	r3, [r7, #106]	@ 0x6a
 800ad22:	23f2      	movs	r3, #242	@ 0xf2
 800ad24:	f887 3069 	strb.w	r3, [r7, #105]	@ 0x69
 800ad28:	f897 306b 	ldrb.w	r3, [r7, #107]	@ 0x6b
 800ad2c:	041a      	lsls	r2, r3, #16
 800ad2e:	f897 306a 	ldrb.w	r3, [r7, #106]	@ 0x6a
 800ad32:	021b      	lsls	r3, r3, #8
 800ad34:	431a      	orrs	r2, r3
 800ad36:	f897 3069 	ldrb.w	r3, [r7, #105]	@ 0x69
 800ad3a:	4313      	orrs	r3, r2
 800ad3c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800ad40:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800ad44:	4611      	mov	r1, r2
 800ad46:	4618      	mov	r0, r3
 800ad48:	f7fe ffd2 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800ad4c:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800ad4e:	66fc      	str	r4, [r7, #108]	@ 0x6c
 800ad50:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800ad52:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800ad54:	69ba      	ldr	r2, [r7, #24]
 800ad56:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800ad58:	bf00      	nop
    temperature.setLinespacing(0);
 800ad5a:	697b      	ldr	r3, [r7, #20]
 800ad5c:	3398      	adds	r3, #152	@ 0x98
 800ad5e:	677b      	str	r3, [r7, #116]	@ 0x74
 800ad60:	2300      	movs	r3, #0
 800ad62:	f8a7 3072 	strh.w	r3, [r7, #114]	@ 0x72
        linespace = space;
 800ad66:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800ad68:	f8b7 2072 	ldrh.w	r2, [r7, #114]	@ 0x72
 800ad6c:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800ad6e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800ad70:	681b      	ldr	r3, [r3, #0]
 800ad72:	3384      	adds	r3, #132	@ 0x84
 800ad74:	681b      	ldr	r3, [r3, #0]
 800ad76:	6f7c      	ldr	r4, [r7, #116]	@ 0x74
 800ad78:	463a      	mov	r2, r7
 800ad7a:	6f79      	ldr	r1, [r7, #116]	@ 0x74
 800ad7c:	4610      	mov	r0, r2
 800ad7e:	4798      	blx	r3
 800ad80:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800ad84:	463a      	mov	r2, r7
 800ad86:	ca07      	ldmia	r2, {r0, r1, r2}
 800ad88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800ad8c:	bf00      	nop
    Unicode::snprintf(temperatureBuffer, TEMPERATURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PZ4S).getText());
 800ad8e:	697b      	ldr	r3, [r7, #20]
 800ad90:	f503 74da 	add.w	r4, r3, #436	@ 0x1b4
 800ad94:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800ad98:	2105      	movs	r1, #5
 800ad9a:	4618      	mov	r0, r3
 800ad9c:	f7ff fb16 	bl	800a3cc <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800ada0:	4b10      	ldr	r3, [pc, #64]	@ (800ade4 <_ZN15Screen1ViewBaseC1Ev+0x238>)
 800ada2:	681b      	ldr	r3, [r3, #0]
 800ada4:	2b00      	cmp	r3, #0
 800ada6:	d105      	bne.n	800adb4 <_ZN15Screen1ViewBaseC1Ev+0x208>
 800ada8:	4b0f      	ldr	r3, [pc, #60]	@ (800ade8 <_ZN15Screen1ViewBaseC1Ev+0x23c>)
 800adaa:	4a10      	ldr	r2, [pc, #64]	@ (800adec <_ZN15Screen1ViewBaseC1Ev+0x240>)
 800adac:	2160      	movs	r1, #96	@ 0x60
 800adae:	4810      	ldr	r0, [pc, #64]	@ (800adf0 <_ZN15Screen1ViewBaseC1Ev+0x244>)
 800adb0:	f019 fa60 	bl	8024274 <__assert_func>
 800adb4:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800adb8:	67bb      	str	r3, [r7, #120]	@ 0x78
        return typedTextId < numberOfTypedTexts;
 800adba:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800adbc:	889a      	ldrh	r2, [r3, #4]
 800adbe:	4b0d      	ldr	r3, [pc, #52]	@ (800adf4 <_ZN15Screen1ViewBaseC1Ev+0x248>)
 800adc0:	881b      	ldrh	r3, [r3, #0]
 800adc2:	429a      	cmp	r2, r3
 800adc4:	bf34      	ite	cc
 800adc6:	2301      	movcc	r3, #1
 800adc8:	2300      	movcs	r3, #0
 800adca:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800adcc:	2b00      	cmp	r3, #0
 800adce:	d115      	bne.n	800adfc <_ZN15Screen1ViewBaseC1Ev+0x250>
 800add0:	4b09      	ldr	r3, [pc, #36]	@ (800adf8 <_ZN15Screen1ViewBaseC1Ev+0x24c>)
 800add2:	4a06      	ldr	r2, [pc, #24]	@ (800adec <_ZN15Screen1ViewBaseC1Ev+0x240>)
 800add4:	2161      	movs	r1, #97	@ 0x61
 800add6:	4806      	ldr	r0, [pc, #24]	@ (800adf0 <_ZN15Screen1ViewBaseC1Ev+0x244>)
 800add8:	f019 fa4c 	bl	8024274 <__assert_func>
 800addc:	08028b00 	.word	0x08028b00
 800ade0:	0800b11b 	.word	0x0800b11b
 800ade4:	200023f8 	.word	0x200023f8
 800ade8:	080278dc 	.word	0x080278dc
 800adec:	080279e0 	.word	0x080279e0
 800adf0:	0802795c 	.word	0x0802795c
 800adf4:	200023fc 	.word	0x200023fc
 800adf8:	080279a0 	.word	0x080279a0
        return texts->getText(typedTextId);
 800adfc:	4b9b      	ldr	r3, [pc, #620]	@ (800b06c <_ZN15Screen1ViewBaseC1Ev+0x4c0>)
 800adfe:	681b      	ldr	r3, [r3, #0]
 800ae00:	8f3a      	ldrh	r2, [r7, #56]	@ 0x38
 800ae02:	4611      	mov	r1, r2
 800ae04:	4618      	mov	r0, r3
 800ae06:	f002 f8d5 	bl	800cfb4 <_ZNK8touchgfx5Texts7getTextEt>
 800ae0a:	4603      	mov	r3, r0
 800ae0c:	bf00      	nop
 800ae0e:	4a98      	ldr	r2, [pc, #608]	@ (800b070 <_ZN15Screen1ViewBaseC1Ev+0x4c4>)
 800ae10:	2105      	movs	r1, #5
 800ae12:	4620      	mov	r0, r4
 800ae14:	f00b f8ee 	bl	8015ff4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ae18:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800ae1c:	4618      	mov	r0, r3
 800ae1e:	f7fd fe8f 	bl	8008b40 <_ZN8touchgfx9TypedTextD1Ev>
    temperature.setWildcard(temperatureBuffer);
 800ae22:	697b      	ldr	r3, [r7, #20]
 800ae24:	f103 0298 	add.w	r2, r3, #152	@ 0x98
 800ae28:	697b      	ldr	r3, [r7, #20]
 800ae2a:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ae2e:	4619      	mov	r1, r3
 800ae30:	4610      	mov	r0, r2
 800ae32:	f7ff fcc3 	bl	800a7bc <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    temperature.resizeToCurrentText();
 800ae36:	697b      	ldr	r3, [r7, #20]
 800ae38:	3398      	adds	r3, #152	@ 0x98
 800ae3a:	4618      	mov	r0, r3
 800ae3c:	f006 f83a 	bl	8010eb4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EWBR));
 800ae40:	697b      	ldr	r3, [r7, #20]
 800ae42:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 800ae46:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800ae4a:	2106      	movs	r1, #6
 800ae4c:	4618      	mov	r0, r3
 800ae4e:	f7ff fabd 	bl	800a3cc <_ZN8touchgfx9TypedTextC1Et>
 800ae52:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800ae56:	4619      	mov	r1, r3
 800ae58:	4620      	mov	r0, r4
 800ae5a:	f006 f84b 	bl	8010ef4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800ae5e:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800ae62:	4618      	mov	r0, r3
 800ae64:	f7fd fe6c 	bl	8008b40 <_ZN8touchgfx9TypedTextD1Ev>
    add(temperature);
 800ae68:	697a      	ldr	r2, [r7, #20]
 800ae6a:	697b      	ldr	r3, [r7, #20]
 800ae6c:	3398      	adds	r3, #152	@ 0x98
 800ae6e:	4619      	mov	r1, r3
 800ae70:	4610      	mov	r0, r2
 800ae72:	f7ff f9dd 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    wifi0.setXY(246, 16);
 800ae76:	697b      	ldr	r3, [r7, #20]
 800ae78:	33e4      	adds	r3, #228	@ 0xe4
 800ae7a:	2210      	movs	r2, #16
 800ae7c:	21f6      	movs	r1, #246	@ 0xf6
 800ae7e:	4618      	mov	r0, r3
 800ae80:	f7ff f845 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    wifi0.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NOTIFICATION_WIFI_50_50_000000_SVG_ID));
 800ae84:	697b      	ldr	r3, [r7, #20]
 800ae86:	f103 04e4 	add.w	r4, r3, #228	@ 0xe4
 800ae8a:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800ae8e:	2109      	movs	r1, #9
 800ae90:	4618      	mov	r0, r3
 800ae92:	f7fe ff73 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800ae96:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800ae9a:	4619      	mov	r1, r3
 800ae9c:	4620      	mov	r0, r4
 800ae9e:	f006 fae5 	bl	801146c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(wifi0);
 800aea2:	697a      	ldr	r2, [r7, #20]
 800aea4:	697b      	ldr	r3, [r7, #20]
 800aea6:	33e4      	adds	r3, #228	@ 0xe4
 800aea8:	4619      	mov	r1, r3
 800aeaa:	4610      	mov	r0, r2
 800aeac:	f7ff f9c0 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    wifi1.setXY(246, 16);
 800aeb0:	697b      	ldr	r3, [r7, #20]
 800aeb2:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 800aeb6:	2210      	movs	r2, #16
 800aeb8:	21f6      	movs	r1, #246	@ 0xf6
 800aeba:	4618      	mov	r0, r3
 800aebc:	f7ff f827 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    wifi1.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NOTIFICATION_WIFI_50_50_04CF95_SVG_ID));
 800aec0:	697b      	ldr	r3, [r7, #20]
 800aec2:	f503 7488 	add.w	r4, r3, #272	@ 0x110
 800aec6:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800aeca:	210a      	movs	r1, #10
 800aecc:	4618      	mov	r0, r3
 800aece:	f7fe ff55 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800aed2:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800aed6:	4619      	mov	r1, r3
 800aed8:	4620      	mov	r0, r4
 800aeda:	f006 fac7 	bl	801146c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    wifi1.setVisible(false);
 800aede:	697b      	ldr	r3, [r7, #20]
 800aee0:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 800aee4:	2100      	movs	r1, #0
 800aee6:	4618      	mov	r0, r3
 800aee8:	f7ff f8a0 	bl	800a02c <_ZN8touchgfx8Drawable10setVisibleEb>
    add(wifi1);
 800aeec:	697a      	ldr	r2, [r7, #20]
 800aeee:	697b      	ldr	r3, [r7, #20]
 800aef0:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 800aef4:	4619      	mov	r1, r3
 800aef6:	4610      	mov	r0, r2
 800aef8:	f7ff f99a 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    settingsFlexButton.setBoxWithBorderPosition(0, 0, 50, 50);
 800aefc:	697b      	ldr	r3, [r7, #20]
 800aefe:	f503 709e 	add.w	r0, r3, #316	@ 0x13c
 800af02:	2332      	movs	r3, #50	@ 0x32
 800af04:	9300      	str	r3, [sp, #0]
 800af06:	2332      	movs	r3, #50	@ 0x32
 800af08:	2200      	movs	r2, #0
 800af0a:	2100      	movs	r1, #0
 800af0c:	f000 f9f8 	bl	800b300 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    settingsFlexButton.setBorderSize(5);
 800af10:	697b      	ldr	r3, [r7, #20]
 800af12:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800af16:	2105      	movs	r1, #5
 800af18:	4618      	mov	r0, r3
 800af1a:	f000 fa11 	bl	800b340 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    settingsFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800af1e:	697b      	ldr	r3, [r7, #20]
 800af20:	f503 749e 	add.w	r4, r3, #316	@ 0x13c
 800af24:	2300      	movs	r3, #0
 800af26:	f887 307e 	strb.w	r3, [r7, #126]	@ 0x7e
 800af2a:	2366      	movs	r3, #102	@ 0x66
 800af2c:	f887 307d 	strb.w	r3, [r7, #125]	@ 0x7d
 800af30:	2399      	movs	r3, #153	@ 0x99
 800af32:	f887 307c 	strb.w	r3, [r7, #124]	@ 0x7c
 800af36:	f897 307e 	ldrb.w	r3, [r7, #126]	@ 0x7e
 800af3a:	041a      	lsls	r2, r3, #16
 800af3c:	f897 307d 	ldrb.w	r3, [r7, #125]	@ 0x7d
 800af40:	021b      	lsls	r3, r3, #8
 800af42:	431a      	orrs	r2, r3
 800af44:	f897 307c 	ldrb.w	r3, [r7, #124]	@ 0x7c
 800af48:	4313      	orrs	r3, r2
 800af4a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800af4e:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800af52:	4611      	mov	r1, r2
 800af54:	4618      	mov	r0, r3
 800af56:	f7fe fecb 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800af5a:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800af5c:	461d      	mov	r5, r3
 800af5e:	2300      	movs	r3, #0
 800af60:	f887 3081 	strb.w	r3, [r7, #129]	@ 0x81
 800af64:	2399      	movs	r3, #153	@ 0x99
 800af66:	f887 3080 	strb.w	r3, [r7, #128]	@ 0x80
 800af6a:	23cc      	movs	r3, #204	@ 0xcc
 800af6c:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 800af70:	f897 3081 	ldrb.w	r3, [r7, #129]	@ 0x81
 800af74:	041a      	lsls	r2, r3, #16
 800af76:	f897 3080 	ldrb.w	r3, [r7, #128]	@ 0x80
 800af7a:	021b      	lsls	r3, r3, #8
 800af7c:	431a      	orrs	r2, r3
 800af7e:	f897 307f 	ldrb.w	r3, [r7, #127]	@ 0x7f
 800af82:	4313      	orrs	r3, r2
 800af84:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800af88:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800af8c:	4611      	mov	r1, r2
 800af8e:	4618      	mov	r0, r3
 800af90:	f7fe feae 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800af94:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800af96:	461e      	mov	r6, r3
 800af98:	2300      	movs	r3, #0
 800af9a:	f887 3084 	strb.w	r3, [r7, #132]	@ 0x84
 800af9e:	2333      	movs	r3, #51	@ 0x33
 800afa0:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
 800afa4:	2366      	movs	r3, #102	@ 0x66
 800afa6:	f887 3082 	strb.w	r3, [r7, #130]	@ 0x82
 800afaa:	f897 3084 	ldrb.w	r3, [r7, #132]	@ 0x84
 800afae:	041a      	lsls	r2, r3, #16
 800afb0:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800afb4:	021b      	lsls	r3, r3, #8
 800afb6:	431a      	orrs	r2, r3
 800afb8:	f897 3082 	ldrb.w	r3, [r7, #130]	@ 0x82
 800afbc:	4313      	orrs	r3, r2
 800afbe:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800afc2:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800afc6:	4611      	mov	r1, r2
 800afc8:	4618      	mov	r0, r3
 800afca:	f7fe fe91 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800afce:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800afd0:	4698      	mov	r8, r3
 800afd2:	2333      	movs	r3, #51	@ 0x33
 800afd4:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 800afd8:	2366      	movs	r3, #102	@ 0x66
 800afda:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86
 800afde:	2399      	movs	r3, #153	@ 0x99
 800afe0:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85
 800afe4:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 800afe8:	041a      	lsls	r2, r3, #16
 800afea:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 800afee:	021b      	lsls	r3, r3, #8
 800aff0:	431a      	orrs	r2, r3
 800aff2:	f897 3085 	ldrb.w	r3, [r7, #133]	@ 0x85
 800aff6:	4313      	orrs	r3, r2
 800aff8:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800affc:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800b000:	4611      	mov	r1, r2
 800b002:	4618      	mov	r0, r3
 800b004:	f7fe fe74 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800b008:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800b00a:	9300      	str	r3, [sp, #0]
 800b00c:	4643      	mov	r3, r8
 800b00e:	4632      	mov	r2, r6
 800b010:	4629      	mov	r1, r5
 800b012:	4620      	mov	r0, r4
 800b014:	f000 f9a6 	bl	800b364 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    settingsFlexButton.setAlpha(0);
 800b018:	697b      	ldr	r3, [r7, #20]
 800b01a:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800b01e:	2100      	movs	r1, #0
 800b020:	4618      	mov	r0, r3
 800b022:	f7ff fc3e 	bl	800a8a2 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    settingsFlexButton.setAction(flexButtonCallback);
 800b026:	697b      	ldr	r3, [r7, #20]
 800b028:	f503 729e 	add.w	r2, r3, #316	@ 0x13c
 800b02c:	697b      	ldr	r3, [r7, #20]
 800b02e:	f503 73e0 	add.w	r3, r3, #448	@ 0x1c0
 800b032:	4619      	mov	r1, r3
 800b034:	4610      	mov	r0, r2
 800b036:	f7ff fc55 	bl	800a8e4 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    settingsFlexButton.setPosition(246, 16, 50, 50);
 800b03a:	697b      	ldr	r3, [r7, #20]
 800b03c:	f503 709e 	add.w	r0, r3, #316	@ 0x13c
 800b040:	2332      	movs	r3, #50	@ 0x32
 800b042:	9300      	str	r3, [sp, #0]
 800b044:	2332      	movs	r3, #50	@ 0x32
 800b046:	2210      	movs	r2, #16
 800b048:	21f6      	movs	r1, #246	@ 0xf6
 800b04a:	f7fe ff21 	bl	8009e90 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(settingsFlexButton);
 800b04e:	697a      	ldr	r2, [r7, #20]
 800b050:	697b      	ldr	r3, [r7, #20]
 800b052:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800b056:	4619      	mov	r1, r3
 800b058:	4610      	mov	r0, r2
 800b05a:	f7ff f8e9 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800b05e:	697b      	ldr	r3, [r7, #20]
 800b060:	4618      	mov	r0, r3
 800b062:	3788      	adds	r7, #136	@ 0x88
 800b064:	46bd      	mov	sp, r7
 800b066:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b06a:	bf00      	nop
 800b06c:	20002404 	.word	0x20002404
 800b070:	08027a2c 	.word	0x08027a2c

0800b074 <_ZN15Screen1ViewBaseD1Ev>:

Screen1ViewBase::~Screen1ViewBase()
 800b074:	b580      	push	{r7, lr}
 800b076:	b082      	sub	sp, #8
 800b078:	af00      	add	r7, sp, #0
 800b07a:	6078      	str	r0, [r7, #4]
 800b07c:	4a18      	ldr	r2, [pc, #96]	@ (800b0e0 <_ZN15Screen1ViewBaseD1Ev+0x6c>)
 800b07e:	687b      	ldr	r3, [r7, #4]
 800b080:	601a      	str	r2, [r3, #0]
{

}
 800b082:	687b      	ldr	r3, [r7, #4]
 800b084:	f503 73e0 	add.w	r3, r3, #448	@ 0x1c0
 800b088:	4618      	mov	r0, r3
 800b08a:	f000 f9db 	bl	800b444 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800b08e:	687b      	ldr	r3, [r7, #4]
 800b090:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800b094:	4618      	mov	r0, r3
 800b096:	f000 f9f7 	bl	800b488 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800b09a:	687b      	ldr	r3, [r7, #4]
 800b09c:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 800b0a0:	4618      	mov	r0, r3
 800b0a2:	f7ff fc69 	bl	800a978 <_ZN8touchgfx5ImageD1Ev>
 800b0a6:	687b      	ldr	r3, [r7, #4]
 800b0a8:	33e4      	adds	r3, #228	@ 0xe4
 800b0aa:	4618      	mov	r0, r3
 800b0ac:	f7ff fc64 	bl	800a978 <_ZN8touchgfx5ImageD1Ev>
 800b0b0:	687b      	ldr	r3, [r7, #4]
 800b0b2:	3398      	adds	r3, #152	@ 0x98
 800b0b4:	4618      	mov	r0, r3
 800b0b6:	f000 fa0f 	bl	800b4d8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800b0ba:	687b      	ldr	r3, [r7, #4]
 800b0bc:	336c      	adds	r3, #108	@ 0x6c
 800b0be:	4618      	mov	r0, r3
 800b0c0:	f7ff fc5a 	bl	800a978 <_ZN8touchgfx5ImageD1Ev>
 800b0c4:	687b      	ldr	r3, [r7, #4]
 800b0c6:	3340      	adds	r3, #64	@ 0x40
 800b0c8:	4618      	mov	r0, r3
 800b0ca:	f7ff fc77 	bl	800a9bc <_ZN8touchgfx3BoxD1Ev>
 800b0ce:	687b      	ldr	r3, [r7, #4]
 800b0d0:	4618      	mov	r0, r3
 800b0d2:	f7ff fd49 	bl	800ab68 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800b0d6:	687b      	ldr	r3, [r7, #4]
 800b0d8:	4618      	mov	r0, r3
 800b0da:	3708      	adds	r7, #8
 800b0dc:	46bd      	mov	sp, r7
 800b0de:	bd80      	pop	{r7, pc}
 800b0e0:	08028b00 	.word	0x08028b00

0800b0e4 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 800b0e4:	b580      	push	{r7, lr}
 800b0e6:	b082      	sub	sp, #8
 800b0e8:	af00      	add	r7, sp, #0
 800b0ea:	6078      	str	r0, [r7, #4]
}
 800b0ec:	6878      	ldr	r0, [r7, #4]
 800b0ee:	f7ff ffc1 	bl	800b074 <_ZN15Screen1ViewBaseD1Ev>
 800b0f2:	f44f 71e8 	mov.w	r1, #464	@ 0x1d0
 800b0f6:	6878      	ldr	r0, [r7, #4]
 800b0f8:	f018 fe8d 	bl	8023e16 <_ZdlPvj>
 800b0fc:	687b      	ldr	r3, [r7, #4]
 800b0fe:	4618      	mov	r0, r3
 800b100:	3708      	adds	r7, #8
 800b102:	46bd      	mov	sp, r7
 800b104:	bd80      	pop	{r7, pc}

0800b106 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 800b106:	b480      	push	{r7}
 800b108:	b083      	sub	sp, #12
 800b10a:	af00      	add	r7, sp, #0
 800b10c:	6078      	str	r0, [r7, #4]

}
 800b10e:	bf00      	nop
 800b110:	370c      	adds	r7, #12
 800b112:	46bd      	mov	sp, r7
 800b114:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b118:	4770      	bx	lr

0800b11a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800b11a:	b580      	push	{r7, lr}
 800b11c:	b082      	sub	sp, #8
 800b11e:	af00      	add	r7, sp, #0
 800b120:	6078      	str	r0, [r7, #4]
 800b122:	6039      	str	r1, [r7, #0]
    if (&src == &settingsFlexButton)
 800b124:	687b      	ldr	r3, [r7, #4]
 800b126:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800b12a:	683a      	ldr	r2, [r7, #0]
 800b12c:	429a      	cmp	r2, r3
 800b12e:	d106      	bne.n	800b13e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
    {
        //SettingsInteraction
        //When settingsFlexButton clicked change screen to Settings
        //Go to Settings with no screen transition
        application().gotoSettingsScreenNoTransition();
 800b130:	6878      	ldr	r0, [r7, #4]
 800b132:	f7ff fd0d 	bl	800ab50 <_ZN15Screen1ViewBase11applicationEv>
 800b136:	4603      	mov	r3, r0
 800b138:	4618      	mov	r0, r3
 800b13a:	f7fe f9ef 	bl	800951c <_ZN23FrontendApplicationBase30gotoSettingsScreenNoTransitionEv>
    }
}
 800b13e:	bf00      	nop
 800b140:	3708      	adds	r7, #8
 800b142:	46bd      	mov	sp, r7
 800b144:	bd80      	pop	{r7, pc}
	...

0800b148 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View()
 800b148:	b580      	push	{r7, lr}
 800b14a:	b082      	sub	sp, #8
 800b14c:	af00      	add	r7, sp, #0
 800b14e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800b150:	687b      	ldr	r3, [r7, #4]
 800b152:	4618      	mov	r0, r3
 800b154:	f009 fabe 	bl	80146d4 <_ZN8touchgfx6ScreenC1Ev>
 800b158:	4a05      	ldr	r2, [pc, #20]	@ (800b170 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 800b15a:	687b      	ldr	r3, [r7, #4]
 800b15c:	601a      	str	r2, [r3, #0]
 800b15e:	687b      	ldr	r3, [r7, #4]
 800b160:	2200      	movs	r2, #0
 800b162:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800b164:	687b      	ldr	r3, [r7, #4]
 800b166:	4618      	mov	r0, r3
 800b168:	3708      	adds	r7, #8
 800b16a:	46bd      	mov	sp, r7
 800b16c:	bd80      	pop	{r7, pc}
 800b16e:	bf00      	nop
 800b170:	08028be8 	.word	0x08028be8

0800b174 <_ZN8touchgfx18ClickButtonTriggerC1Ev>:
class ClickButtonTrigger : public AbstractButtonContainer
 800b174:	b580      	push	{r7, lr}
 800b176:	b082      	sub	sp, #8
 800b178:	af00      	add	r7, sp, #0
 800b17a:	6078      	str	r0, [r7, #4]
 800b17c:	687b      	ldr	r3, [r7, #4]
 800b17e:	4618      	mov	r0, r3
 800b180:	f7ff fb4c 	bl	800a81c <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800b184:	4a03      	ldr	r2, [pc, #12]	@ (800b194 <_ZN8touchgfx18ClickButtonTriggerC1Ev+0x20>)
 800b186:	687b      	ldr	r3, [r7, #4]
 800b188:	601a      	str	r2, [r3, #0]
 800b18a:	687b      	ldr	r3, [r7, #4]
 800b18c:	4618      	mov	r0, r3
 800b18e:	3708      	adds	r7, #8
 800b190:	46bd      	mov	sp, r7
 800b192:	bd80      	pop	{r7, pc}
 800b194:	08028c1c 	.word	0x08028c1c

0800b198 <_ZN8touchgfx18ClickButtonTriggerD1Ev>:
 800b198:	b580      	push	{r7, lr}
 800b19a:	b082      	sub	sp, #8
 800b19c:	af00      	add	r7, sp, #0
 800b19e:	6078      	str	r0, [r7, #4]
 800b1a0:	4a05      	ldr	r2, [pc, #20]	@ (800b1b8 <_ZN8touchgfx18ClickButtonTriggerD1Ev+0x20>)
 800b1a2:	687b      	ldr	r3, [r7, #4]
 800b1a4:	601a      	str	r2, [r3, #0]
 800b1a6:	687b      	ldr	r3, [r7, #4]
 800b1a8:	4618      	mov	r0, r3
 800b1aa:	f7ff fcaf 	bl	800ab0c <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800b1ae:	687b      	ldr	r3, [r7, #4]
 800b1b0:	4618      	mov	r0, r3
 800b1b2:	3708      	adds	r7, #8
 800b1b4:	46bd      	mov	sp, r7
 800b1b6:	bd80      	pop	{r7, pc}
 800b1b8:	08028c1c 	.word	0x08028c1c

0800b1bc <_ZN8touchgfx18ClickButtonTriggerD0Ev>:
 800b1bc:	b580      	push	{r7, lr}
 800b1be:	b082      	sub	sp, #8
 800b1c0:	af00      	add	r7, sp, #0
 800b1c2:	6078      	str	r0, [r7, #4]
 800b1c4:	6878      	ldr	r0, [r7, #4]
 800b1c6:	f7ff ffe7 	bl	800b198 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800b1ca:	2134      	movs	r1, #52	@ 0x34
 800b1cc:	6878      	ldr	r0, [r7, #4]
 800b1ce:	f018 fe22 	bl	8023e16 <_ZdlPvj>
 800b1d2:	687b      	ldr	r3, [r7, #4]
 800b1d4:	4618      	mov	r0, r3
 800b1d6:	3708      	adds	r7, #8
 800b1d8:	46bd      	mov	sp, r7
 800b1da:	bd80      	pop	{r7, pc}

0800b1dc <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800b1dc:	b580      	push	{r7, lr}
 800b1de:	b082      	sub	sp, #8
 800b1e0:	af00      	add	r7, sp, #0
 800b1e2:	6078      	str	r0, [r7, #4]
 800b1e4:	4a05      	ldr	r2, [pc, #20]	@ (800b1fc <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800b1e6:	687b      	ldr	r3, [r7, #4]
 800b1e8:	601a      	str	r2, [r3, #0]
 800b1ea:	687b      	ldr	r3, [r7, #4]
 800b1ec:	4618      	mov	r0, r3
 800b1ee:	f7ff fbe5 	bl	800a9bc <_ZN8touchgfx3BoxD1Ev>
 800b1f2:	687b      	ldr	r3, [r7, #4]
 800b1f4:	4618      	mov	r0, r3
 800b1f6:	3708      	adds	r7, #8
 800b1f8:	46bd      	mov	sp, r7
 800b1fa:	bd80      	pop	{r7, pc}
 800b1fc:	08029a14 	.word	0x08029a14

0800b200 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800b200:	b580      	push	{r7, lr}
 800b202:	b082      	sub	sp, #8
 800b204:	af00      	add	r7, sp, #0
 800b206:	6078      	str	r0, [r7, #4]
 800b208:	6878      	ldr	r0, [r7, #4]
 800b20a:	f7ff ffe7 	bl	800b1dc <_ZN8touchgfx13BoxWithBorderD1Ev>
 800b20e:	2134      	movs	r1, #52	@ 0x34
 800b210:	6878      	ldr	r0, [r7, #4]
 800b212:	f018 fe00 	bl	8023e16 <_ZdlPvj>
 800b216:	687b      	ldr	r3, [r7, #4]
 800b218:	4618      	mov	r0, r3
 800b21a:	3708      	adds	r7, #8
 800b21c:	46bd      	mov	sp, r7
 800b21e:	bd80      	pop	{r7, pc}

0800b220 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
 */
template <class T>
class BoxWithBorderButtonStyle : public T
{
public:
    BoxWithBorderButtonStyle()
 800b220:	b580      	push	{r7, lr}
 800b222:	b082      	sub	sp, #8
 800b224:	af00      	add	r7, sp, #0
 800b226:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800b228:	687b      	ldr	r3, [r7, #4]
 800b22a:	4618      	mov	r0, r3
 800b22c:	2334      	movs	r3, #52	@ 0x34
 800b22e:	461a      	mov	r2, r3
 800b230:	2100      	movs	r1, #0
 800b232:	f019 ffab 	bl	802518c <memset>
 800b236:	687b      	ldr	r3, [r7, #4]
 800b238:	4618      	mov	r0, r3
 800b23a:	f7ff ff9b 	bl	800b174 <_ZN8touchgfx18ClickButtonTriggerC1Ev>
 800b23e:	4a17      	ldr	r2, [pc, #92]	@ (800b29c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x7c>)
 800b240:	687b      	ldr	r3, [r7, #4]
 800b242:	601a      	str	r2, [r3, #0]
 800b244:	687b      	ldr	r3, [r7, #4]
 800b246:	3334      	adds	r3, #52	@ 0x34
 800b248:	4618      	mov	r0, r3
 800b24a:	f7ff fbd9 	bl	800aa00 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800b24e:	687b      	ldr	r3, [r7, #4]
 800b250:	3368      	adds	r3, #104	@ 0x68
 800b252:	4618      	mov	r0, r3
 800b254:	f7fe fd3e 	bl	8009cd4 <_ZN8touchgfx9colortypeC1Ev>
 800b258:	687b      	ldr	r3, [r7, #4]
 800b25a:	336c      	adds	r3, #108	@ 0x6c
 800b25c:	4618      	mov	r0, r3
 800b25e:	f7fe fd39 	bl	8009cd4 <_ZN8touchgfx9colortypeC1Ev>
 800b262:	687b      	ldr	r3, [r7, #4]
 800b264:	3370      	adds	r3, #112	@ 0x70
 800b266:	4618      	mov	r0, r3
 800b268:	f7fe fd34 	bl	8009cd4 <_ZN8touchgfx9colortypeC1Ev>
 800b26c:	687b      	ldr	r3, [r7, #4]
 800b26e:	3374      	adds	r3, #116	@ 0x74
 800b270:	4618      	mov	r0, r3
 800b272:	f7fe fd2f 	bl	8009cd4 <_ZN8touchgfx9colortypeC1Ev>
    {
        borderBox.setXY(0, 0);
 800b276:	687b      	ldr	r3, [r7, #4]
 800b278:	3334      	adds	r3, #52	@ 0x34
 800b27a:	2200      	movs	r2, #0
 800b27c:	2100      	movs	r1, #0
 800b27e:	4618      	mov	r0, r3
 800b280:	f7fe fe45 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800b284:	687a      	ldr	r2, [r7, #4]
 800b286:	687b      	ldr	r3, [r7, #4]
 800b288:	3334      	adds	r3, #52	@ 0x34
 800b28a:	4619      	mov	r1, r3
 800b28c:	4610      	mov	r0, r2
 800b28e:	f004 f913 	bl	800f4b8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800b292:	687b      	ldr	r3, [r7, #4]
 800b294:	4618      	mov	r0, r3
 800b296:	3708      	adds	r7, #8
 800b298:	46bd      	mov	sp, r7
 800b29a:	bd80      	pop	{r7, pc}
 800b29c:	08028b4c 	.word	0x08028b4c

0800b2a0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800b2a0:	b480      	push	{r7}
 800b2a2:	b083      	sub	sp, #12
 800b2a4:	af00      	add	r7, sp, #0
 800b2a6:	6078      	str	r0, [r7, #4]
 800b2a8:	4a04      	ldr	r2, [pc, #16]	@ (800b2bc <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev+0x1c>)
 800b2aa:	687b      	ldr	r3, [r7, #4]
 800b2ac:	601a      	str	r2, [r3, #0]
 800b2ae:	687b      	ldr	r3, [r7, #4]
 800b2b0:	4618      	mov	r0, r3
 800b2b2:	370c      	adds	r7, #12
 800b2b4:	46bd      	mov	sp, r7
 800b2b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2ba:	4770      	bx	lr
 800b2bc:	08028cb8 	.word	0x08028cb8

0800b2c0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800b2c0:	b580      	push	{r7, lr}
 800b2c2:	b084      	sub	sp, #16
 800b2c4:	af00      	add	r7, sp, #0
 800b2c6:	60f8      	str	r0, [r7, #12]
 800b2c8:	60b9      	str	r1, [r7, #8]
 800b2ca:	4639      	mov	r1, r7
 800b2cc:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800b2d0:	68fb      	ldr	r3, [r7, #12]
 800b2d2:	4618      	mov	r0, r3
 800b2d4:	f7ff ffe4 	bl	800b2a0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800b2d8:	4a08      	ldr	r2, [pc, #32]	@ (800b2fc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800b2da:	68fb      	ldr	r3, [r7, #12]
 800b2dc:	601a      	str	r2, [r3, #0]
 800b2de:	68fb      	ldr	r3, [r7, #12]
 800b2e0:	68ba      	ldr	r2, [r7, #8]
 800b2e2:	605a      	str	r2, [r3, #4]
 800b2e4:	68fb      	ldr	r3, [r7, #12]
 800b2e6:	3308      	adds	r3, #8
 800b2e8:	463a      	mov	r2, r7
 800b2ea:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b2ee:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800b2f2:	68fb      	ldr	r3, [r7, #12]
 800b2f4:	4618      	mov	r0, r3
 800b2f6:	3710      	adds	r7, #16
 800b2f8:	46bd      	mov	sp, r7
 800b2fa:	bd80      	pop	{r7, pc}
 800b2fc:	08028b34 	.word	0x08028b34

0800b300 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>:
     * @param  width  The width of this BoxWithBorderButtonStyle.
     * @param  height The height of this BoxWithBorderButtonStyle.
     *
     * @note Changing this does not automatically yield a redraw.
     */
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800b300:	b590      	push	{r4, r7, lr}
 800b302:	b087      	sub	sp, #28
 800b304:	af02      	add	r7, sp, #8
 800b306:	60f8      	str	r0, [r7, #12]
 800b308:	4608      	mov	r0, r1
 800b30a:	4611      	mov	r1, r2
 800b30c:	461a      	mov	r2, r3
 800b30e:	4603      	mov	r3, r0
 800b310:	817b      	strh	r3, [r7, #10]
 800b312:	460b      	mov	r3, r1
 800b314:	813b      	strh	r3, [r7, #8]
 800b316:	4613      	mov	r3, r2
 800b318:	80fb      	strh	r3, [r7, #6]
    {
        borderBox.setPosition(x, y, width, height);
 800b31a:	68fb      	ldr	r3, [r7, #12]
 800b31c:	f103 0034 	add.w	r0, r3, #52	@ 0x34
 800b320:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800b324:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800b328:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800b32c:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800b330:	9300      	str	r3, [sp, #0]
 800b332:	4623      	mov	r3, r4
 800b334:	f7fe fdac 	bl	8009e90 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800b338:	bf00      	nop
 800b33a:	3714      	adds	r7, #20
 800b33c:	46bd      	mov	sp, r7
 800b33e:	bd90      	pop	{r4, r7, pc}

0800b340 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>:
    /**
     * Sets border size.
     *
     * @param  size The size.
     */
    void setBorderSize(uint8_t size)
 800b340:	b580      	push	{r7, lr}
 800b342:	b082      	sub	sp, #8
 800b344:	af00      	add	r7, sp, #0
 800b346:	6078      	str	r0, [r7, #4]
 800b348:	460b      	mov	r3, r1
 800b34a:	70fb      	strb	r3, [r7, #3]
    {
        borderBox.setBorderSize(size);
 800b34c:	687b      	ldr	r3, [r7, #4]
 800b34e:	3334      	adds	r3, #52	@ 0x34
 800b350:	78fa      	ldrb	r2, [r7, #3]
 800b352:	b292      	uxth	r2, r2
 800b354:	4611      	mov	r1, r2
 800b356:	4618      	mov	r0, r3
 800b358:	f7ff fb7c 	bl	800aa54 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800b35c:	bf00      	nop
 800b35e:	3708      	adds	r7, #8
 800b360:	46bd      	mov	sp, r7
 800b362:	bd80      	pop	{r7, pc}

0800b364 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800b364:	b580      	push	{r7, lr}
 800b366:	b084      	sub	sp, #16
 800b368:	af00      	add	r7, sp, #0
 800b36a:	60f8      	str	r0, [r7, #12]
 800b36c:	60b9      	str	r1, [r7, #8]
 800b36e:	607a      	str	r2, [r7, #4]
 800b370:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800b372:	68fb      	ldr	r3, [r7, #12]
 800b374:	68ba      	ldr	r2, [r7, #8]
 800b376:	669a      	str	r2, [r3, #104]	@ 0x68
        down = colorPressed;
 800b378:	68fb      	ldr	r3, [r7, #12]
 800b37a:	687a      	ldr	r2, [r7, #4]
 800b37c:	66da      	str	r2, [r3, #108]	@ 0x6c
        borderUp = borderColorReleased;
 800b37e:	68fb      	ldr	r3, [r7, #12]
 800b380:	683a      	ldr	r2, [r7, #0]
 800b382:	671a      	str	r2, [r3, #112]	@ 0x70
        borderDown = borderColorPressed;
 800b384:	68fb      	ldr	r3, [r7, #12]
 800b386:	69ba      	ldr	r2, [r7, #24]
 800b388:	675a      	str	r2, [r3, #116]	@ 0x74
        handlePressedUpdated();
 800b38a:	68fb      	ldr	r3, [r7, #12]
 800b38c:	681b      	ldr	r3, [r3, #0]
 800b38e:	338c      	adds	r3, #140	@ 0x8c
 800b390:	681b      	ldr	r3, [r3, #0]
 800b392:	68f8      	ldr	r0, [r7, #12]
 800b394:	4798      	blx	r3
    }
 800b396:	bf00      	nop
 800b398:	3710      	adds	r7, #16
 800b39a:	46bd      	mov	sp, r7
 800b39c:	bd80      	pop	{r7, pc}
	...

0800b3a0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>:
    virtual ~GenericCallback()
 800b3a0:	b480      	push	{r7}
 800b3a2:	b083      	sub	sp, #12
 800b3a4:	af00      	add	r7, sp, #0
 800b3a6:	6078      	str	r0, [r7, #4]
    }
 800b3a8:	4a04      	ldr	r2, [pc, #16]	@ (800b3bc <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev+0x1c>)
 800b3aa:	687b      	ldr	r3, [r7, #4]
 800b3ac:	601a      	str	r2, [r3, #0]
 800b3ae:	687b      	ldr	r3, [r7, #4]
 800b3b0:	4618      	mov	r0, r3
 800b3b2:	370c      	adds	r7, #12
 800b3b4:	46bd      	mov	sp, r7
 800b3b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3ba:	4770      	bx	lr
 800b3bc:	08028cb8 	.word	0x08028cb8

0800b3c0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED0Ev>:
    virtual ~GenericCallback()
 800b3c0:	b580      	push	{r7, lr}
 800b3c2:	b082      	sub	sp, #8
 800b3c4:	af00      	add	r7, sp, #0
 800b3c6:	6078      	str	r0, [r7, #4]
    }
 800b3c8:	6878      	ldr	r0, [r7, #4]
 800b3ca:	f7ff ffe9 	bl	800b3a0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800b3ce:	2104      	movs	r1, #4
 800b3d0:	6878      	ldr	r0, [r7, #4]
 800b3d2:	f018 fd20 	bl	8023e16 <_ZdlPvj>
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	4618      	mov	r0, r3
 800b3da:	3708      	adds	r7, #8
 800b3dc:	46bd      	mov	sp, r7
 800b3de:	bd80      	pop	{r7, pc}

0800b3e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype down;          ///< The down
    colortype borderUp;      ///< The border up
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800b3e0:	b590      	push	{r4, r7, lr}
 800b3e2:	b083      	sub	sp, #12
 800b3e4:	af00      	add	r7, sp, #0
 800b3e6:	6078      	str	r0, [r7, #4]
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800b3e8:	687b      	ldr	r3, [r7, #4]
 800b3ea:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800b3ee:	687b      	ldr	r3, [r7, #4]
 800b3f0:	4618      	mov	r0, r3
 800b3f2:	f7ff fa49 	bl	800a888 <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800b3f6:	4603      	mov	r3, r0
 800b3f8:	2b00      	cmp	r3, #0
 800b3fa:	d002      	beq.n	800b402 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	336c      	adds	r3, #108	@ 0x6c
 800b400:	e001      	b.n	800b406 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800b402:	687b      	ldr	r3, [r7, #4]
 800b404:	3368      	adds	r3, #104	@ 0x68
 800b406:	6819      	ldr	r1, [r3, #0]
 800b408:	4620      	mov	r0, r4
 800b40a:	f7fe ff9b 	bl	800a344 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800b40e:	687b      	ldr	r3, [r7, #4]
 800b410:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800b414:	687b      	ldr	r3, [r7, #4]
 800b416:	4618      	mov	r0, r3
 800b418:	f7ff fa36 	bl	800a888 <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800b41c:	4603      	mov	r3, r0
 800b41e:	2b00      	cmp	r3, #0
 800b420:	d002      	beq.n	800b428 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800b422:	687b      	ldr	r3, [r7, #4]
 800b424:	3374      	adds	r3, #116	@ 0x74
 800b426:	e001      	b.n	800b42c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800b428:	687b      	ldr	r3, [r7, #4]
 800b42a:	3370      	adds	r3, #112	@ 0x70
 800b42c:	6819      	ldr	r1, [r3, #0]
 800b42e:	4620      	mov	r0, r4
 800b430:	f7ff fb02 	bl	800aa38 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800b434:	687b      	ldr	r3, [r7, #4]
 800b436:	4618      	mov	r0, r3
 800b438:	f7ff fa89 	bl	800a94e <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800b43c:	bf00      	nop
 800b43e:	370c      	adds	r7, #12
 800b440:	46bd      	mov	sp, r7
 800b442:	bd90      	pop	{r4, r7, pc}

0800b444 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800b444:	b580      	push	{r7, lr}
 800b446:	b082      	sub	sp, #8
 800b448:	af00      	add	r7, sp, #0
 800b44a:	6078      	str	r0, [r7, #4]
 800b44c:	4a05      	ldr	r2, [pc, #20]	@ (800b464 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800b44e:	687b      	ldr	r3, [r7, #4]
 800b450:	601a      	str	r2, [r3, #0]
 800b452:	687b      	ldr	r3, [r7, #4]
 800b454:	4618      	mov	r0, r3
 800b456:	f7ff ffa3 	bl	800b3a0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800b45a:	687b      	ldr	r3, [r7, #4]
 800b45c:	4618      	mov	r0, r3
 800b45e:	3708      	adds	r7, #8
 800b460:	46bd      	mov	sp, r7
 800b462:	bd80      	pop	{r7, pc}
 800b464:	08028b34 	.word	0x08028b34

0800b468 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800b468:	b580      	push	{r7, lr}
 800b46a:	b082      	sub	sp, #8
 800b46c:	af00      	add	r7, sp, #0
 800b46e:	6078      	str	r0, [r7, #4]
 800b470:	6878      	ldr	r0, [r7, #4]
 800b472:	f7ff ffe7 	bl	800b444 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800b476:	2110      	movs	r1, #16
 800b478:	6878      	ldr	r0, [r7, #4]
 800b47a:	f018 fccc 	bl	8023e16 <_ZdlPvj>
 800b47e:	687b      	ldr	r3, [r7, #4]
 800b480:	4618      	mov	r0, r3
 800b482:	3708      	adds	r7, #8
 800b484:	46bd      	mov	sp, r7
 800b486:	bd80      	pop	{r7, pc}

0800b488 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 800b488:	b580      	push	{r7, lr}
 800b48a:	b082      	sub	sp, #8
 800b48c:	af00      	add	r7, sp, #0
 800b48e:	6078      	str	r0, [r7, #4]
 800b490:	4a08      	ldr	r2, [pc, #32]	@ (800b4b4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev+0x2c>)
 800b492:	687b      	ldr	r3, [r7, #4]
 800b494:	601a      	str	r2, [r3, #0]
 800b496:	687b      	ldr	r3, [r7, #4]
 800b498:	3334      	adds	r3, #52	@ 0x34
 800b49a:	4618      	mov	r0, r3
 800b49c:	f7ff fe9e 	bl	800b1dc <_ZN8touchgfx13BoxWithBorderD1Ev>
 800b4a0:	687b      	ldr	r3, [r7, #4]
 800b4a2:	4618      	mov	r0, r3
 800b4a4:	f7ff fe78 	bl	800b198 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800b4a8:	687b      	ldr	r3, [r7, #4]
 800b4aa:	4618      	mov	r0, r3
 800b4ac:	3708      	adds	r7, #8
 800b4ae:	46bd      	mov	sp, r7
 800b4b0:	bd80      	pop	{r7, pc}
 800b4b2:	bf00      	nop
 800b4b4:	08028b4c 	.word	0x08028b4c

0800b4b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 800b4b8:	b580      	push	{r7, lr}
 800b4ba:	b082      	sub	sp, #8
 800b4bc:	af00      	add	r7, sp, #0
 800b4be:	6078      	str	r0, [r7, #4]
 800b4c0:	6878      	ldr	r0, [r7, #4]
 800b4c2:	f7ff ffe1 	bl	800b488 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800b4c6:	2178      	movs	r1, #120	@ 0x78
 800b4c8:	6878      	ldr	r0, [r7, #4]
 800b4ca:	f018 fca4 	bl	8023e16 <_ZdlPvj>
 800b4ce:	687b      	ldr	r3, [r7, #4]
 800b4d0:	4618      	mov	r0, r3
 800b4d2:	3708      	adds	r7, #8
 800b4d4:	46bd      	mov	sp, r7
 800b4d6:	bd80      	pop	{r7, pc}

0800b4d8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800b4d8:	b580      	push	{r7, lr}
 800b4da:	b082      	sub	sp, #8
 800b4dc:	af00      	add	r7, sp, #0
 800b4de:	6078      	str	r0, [r7, #4]
 800b4e0:	4a05      	ldr	r2, [pc, #20]	@ (800b4f8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800b4e2:	687b      	ldr	r3, [r7, #4]
 800b4e4:	601a      	str	r2, [r3, #0]
 800b4e6:	687b      	ldr	r3, [r7, #4]
 800b4e8:	4618      	mov	r0, r3
 800b4ea:	f7ff f915 	bl	800a718 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800b4ee:	687b      	ldr	r3, [r7, #4]
 800b4f0:	4618      	mov	r0, r3
 800b4f2:	3708      	adds	r7, #8
 800b4f4:	46bd      	mov	sp, r7
 800b4f6:	bd80      	pop	{r7, pc}
 800b4f8:	08028d6c 	.word	0x08028d6c

0800b4fc <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800b4fc:	b580      	push	{r7, lr}
 800b4fe:	b082      	sub	sp, #8
 800b500:	af00      	add	r7, sp, #0
 800b502:	6078      	str	r0, [r7, #4]
 800b504:	6878      	ldr	r0, [r7, #4]
 800b506:	f7ff ffe7 	bl	800b4d8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800b50a:	214c      	movs	r1, #76	@ 0x4c
 800b50c:	6878      	ldr	r0, [r7, #4]
 800b50e:	f018 fc82 	bl	8023e16 <_ZdlPvj>
 800b512:	687b      	ldr	r3, [r7, #4]
 800b514:	4618      	mov	r0, r3
 800b516:	3708      	adds	r7, #8
 800b518:	46bd      	mov	sp, r7
 800b51a:	bd80      	pop	{r7, pc}

0800b51c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800b51c:	b580      	push	{r7, lr}
 800b51e:	b082      	sub	sp, #8
 800b520:	af00      	add	r7, sp, #0
 800b522:	6078      	str	r0, [r7, #4]
 800b524:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800b526:	687b      	ldr	r3, [r7, #4]
 800b528:	685b      	ldr	r3, [r3, #4]
 800b52a:	687a      	ldr	r2, [r7, #4]
 800b52c:	68d2      	ldr	r2, [r2, #12]
 800b52e:	1052      	asrs	r2, r2, #1
 800b530:	1898      	adds	r0, r3, r2
 800b532:	687b      	ldr	r3, [r7, #4]
 800b534:	68db      	ldr	r3, [r3, #12]
 800b536:	f003 0301 	and.w	r3, r3, #1
 800b53a:	2b00      	cmp	r3, #0
 800b53c:	d102      	bne.n	800b544 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800b53e:	687b      	ldr	r3, [r7, #4]
 800b540:	689b      	ldr	r3, [r3, #8]
 800b542:	e00a      	b.n	800b55a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800b544:	687b      	ldr	r3, [r7, #4]
 800b546:	685b      	ldr	r3, [r3, #4]
 800b548:	687a      	ldr	r2, [r7, #4]
 800b54a:	68d2      	ldr	r2, [r2, #12]
 800b54c:	1052      	asrs	r2, r2, #1
 800b54e:	4413      	add	r3, r2
 800b550:	681b      	ldr	r3, [r3, #0]
 800b552:	687a      	ldr	r2, [r7, #4]
 800b554:	6892      	ldr	r2, [r2, #8]
 800b556:	4413      	add	r3, r2
 800b558:	681b      	ldr	r3, [r3, #0]
 800b55a:	6839      	ldr	r1, [r7, #0]
 800b55c:	4798      	blx	r3
    }
 800b55e:	bf00      	nop
 800b560:	3708      	adds	r7, #8
 800b562:	46bd      	mov	sp, r7
 800b564:	bd80      	pop	{r7, pc}

0800b566 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800b566:	b480      	push	{r7}
 800b568:	b083      	sub	sp, #12
 800b56a:	af00      	add	r7, sp, #0
 800b56c:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800b56e:	687b      	ldr	r3, [r7, #4]
 800b570:	685b      	ldr	r3, [r3, #4]
 800b572:	2b00      	cmp	r3, #0
 800b574:	d010      	beq.n	800b598 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800b576:	687b      	ldr	r3, [r7, #4]
 800b578:	689b      	ldr	r3, [r3, #8]
 800b57a:	2b00      	cmp	r3, #0
 800b57c:	d107      	bne.n	800b58e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800b57e:	687b      	ldr	r3, [r7, #4]
 800b580:	68db      	ldr	r3, [r3, #12]
 800b582:	f003 0301 	and.w	r3, r3, #1
 800b586:	2b00      	cmp	r3, #0
 800b588:	d101      	bne.n	800b58e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800b58a:	2301      	movs	r3, #1
 800b58c:	e000      	b.n	800b590 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800b58e:	2300      	movs	r3, #0
 800b590:	2b01      	cmp	r3, #1
 800b592:	d001      	beq.n	800b598 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800b594:	2301      	movs	r3, #1
 800b596:	e000      	b.n	800b59a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800b598:	2300      	movs	r3, #0
    }
 800b59a:	4618      	mov	r0, r3
 800b59c:	370c      	adds	r7, #12
 800b59e:	46bd      	mov	sp, r7
 800b5a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5a4:	4770      	bx	lr

0800b5a6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800b5a6:	b590      	push	{r4, r7, lr}
 800b5a8:	b083      	sub	sp, #12
 800b5aa:	af00      	add	r7, sp, #0
 800b5ac:	6078      	str	r0, [r7, #4]
    {
        borderBox.setAlpha(T::getAlpha());
 800b5ae:	687b      	ldr	r3, [r7, #4]
 800b5b0:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800b5b4:	687b      	ldr	r3, [r7, #4]
 800b5b6:	4618      	mov	r0, r3
 800b5b8:	f7ff f987 	bl	800a8ca <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800b5bc:	4603      	mov	r3, r0
 800b5be:	4619      	mov	r1, r3
 800b5c0:	4620      	mov	r0, r4
 800b5c2:	f7fe fecd 	bl	800a360 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800b5c6:	687b      	ldr	r3, [r7, #4]
 800b5c8:	4618      	mov	r0, r3
 800b5ca:	f7ff f9ca 	bl	800a962 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800b5ce:	bf00      	nop
 800b5d0:	370c      	adds	r7, #12
 800b5d2:	46bd      	mov	sp, r7
 800b5d4:	bd90      	pop	{r4, r7, pc}
	...

0800b5d8 <_ZN8touchgfx14AbstractButtonC1Ev>:
 */
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
 800b5d8:	b580      	push	{r7, lr}
 800b5da:	b082      	sub	sp, #8
 800b5dc:	af00      	add	r7, sp, #0
 800b5de:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
 800b5e0:	687b      	ldr	r3, [r7, #4]
 800b5e2:	4618      	mov	r0, r3
 800b5e4:	2326      	movs	r3, #38	@ 0x26
 800b5e6:	461a      	mov	r2, r3
 800b5e8:	2100      	movs	r1, #0
 800b5ea:	f019 fdcf 	bl	802518c <memset>
 800b5ee:	687b      	ldr	r3, [r7, #4]
 800b5f0:	4618      	mov	r0, r3
 800b5f2:	f7fe fe4f 	bl	800a294 <_ZN8touchgfx6WidgetC1Ev>
 800b5f6:	4a0a      	ldr	r2, [pc, #40]	@ (800b620 <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
 800b5f8:	687b      	ldr	r3, [r7, #4]
 800b5fa:	601a      	str	r2, [r3, #0]
 800b5fc:	687b      	ldr	r3, [r7, #4]
 800b5fe:	2200      	movs	r2, #0
 800b600:	629a      	str	r2, [r3, #40]	@ 0x28
 800b602:	687b      	ldr	r3, [r7, #4]
 800b604:	2200      	movs	r2, #0
 800b606:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
    {
        setTouchable(true);
 800b60a:	687b      	ldr	r3, [r7, #4]
 800b60c:	2101      	movs	r1, #1
 800b60e:	4618      	mov	r0, r3
 800b610:	f7fe fd1c 	bl	800a04c <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800b614:	687b      	ldr	r3, [r7, #4]
 800b616:	4618      	mov	r0, r3
 800b618:	3708      	adds	r7, #8
 800b61a:	46bd      	mov	sp, r7
 800b61c:	bd80      	pop	{r7, pc}
 800b61e:	bf00      	nop
 800b620:	080297a8 	.word	0x080297a8

0800b624 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800b624:	b480      	push	{r7}
 800b626:	b083      	sub	sp, #12
 800b628:	af00      	add	r7, sp, #0
 800b62a:	6078      	str	r0, [r7, #4]
 800b62c:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800b62e:	687b      	ldr	r3, [r7, #4]
 800b630:	683a      	ldr	r2, [r7, #0]
 800b632:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800b634:	bf00      	nop
 800b636:	370c      	adds	r7, #12
 800b638:	46bd      	mov	sp, r7
 800b63a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b63e:	4770      	bx	lr

0800b640 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800b640:	b580      	push	{r7, lr}
 800b642:	b082      	sub	sp, #8
 800b644:	af00      	add	r7, sp, #0
 800b646:	6078      	str	r0, [r7, #4]
 800b648:	4a05      	ldr	r2, [pc, #20]	@ (800b660 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800b64a:	687b      	ldr	r3, [r7, #4]
 800b64c:	601a      	str	r2, [r3, #0]
 800b64e:	687b      	ldr	r3, [r7, #4]
 800b650:	4618      	mov	r0, r3
 800b652:	f7fe fe31 	bl	800a2b8 <_ZN8touchgfx6WidgetD1Ev>
 800b656:	687b      	ldr	r3, [r7, #4]
 800b658:	4618      	mov	r0, r3
 800b65a:	3708      	adds	r7, #8
 800b65c:	46bd      	mov	sp, r7
 800b65e:	bd80      	pop	{r7, pc}
 800b660:	080297a8 	.word	0x080297a8

0800b664 <_ZN8touchgfx14AbstractButtonD0Ev>:
 800b664:	b580      	push	{r7, lr}
 800b666:	b082      	sub	sp, #8
 800b668:	af00      	add	r7, sp, #0
 800b66a:	6078      	str	r0, [r7, #4]
 800b66c:	6878      	ldr	r0, [r7, #4]
 800b66e:	f7ff ffe7 	bl	800b640 <_ZN8touchgfx14AbstractButtonD1Ev>
 800b672:	2130      	movs	r1, #48	@ 0x30
 800b674:	6878      	ldr	r0, [r7, #4]
 800b676:	f018 fbce 	bl	8023e16 <_ZdlPvj>
 800b67a:	687b      	ldr	r3, [r7, #4]
 800b67c:	4618      	mov	r0, r3
 800b67e:	3708      	adds	r7, #8
 800b680:	46bd      	mov	sp, r7
 800b682:	bd80      	pop	{r7, pc}

0800b684 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
 800b684:	b480      	push	{r7}
 800b686:	b083      	sub	sp, #12
 800b688:	af00      	add	r7, sp, #0
 800b68a:	6078      	str	r0, [r7, #4]
 800b68c:	460b      	mov	r3, r1
 800b68e:	807b      	strh	r3, [r7, #2]
    {
        iconX = x;
 800b690:	687b      	ldr	r3, [r7, #4]
 800b692:	887a      	ldrh	r2, [r7, #2]
 800b694:	871a      	strh	r2, [r3, #56]	@ 0x38
    }
 800b696:	bf00      	nop
 800b698:	370c      	adds	r7, #12
 800b69a:	46bd      	mov	sp, r7
 800b69c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6a0:	4770      	bx	lr

0800b6a2 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconY(int16_t y)
 800b6a2:	b480      	push	{r7}
 800b6a4:	b083      	sub	sp, #12
 800b6a6:	af00      	add	r7, sp, #0
 800b6a8:	6078      	str	r0, [r7, #4]
 800b6aa:	460b      	mov	r3, r1
 800b6ac:	807b      	strh	r3, [r7, #2]
    {
        iconY = y;
 800b6ae:	687b      	ldr	r3, [r7, #4]
 800b6b0:	887a      	ldrh	r2, [r7, #2]
 800b6b2:	875a      	strh	r2, [r3, #58]	@ 0x3a
    }
 800b6b4:	bf00      	nop
 800b6b6:	370c      	adds	r7, #12
 800b6b8:	46bd      	mov	sp, r7
 800b6ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6be:	4770      	bx	lr

0800b6c0 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The values set are overwritten on a subsequent call to setBitmaps.
     */
    void setIconXY(int16_t x, int16_t y)
 800b6c0:	b580      	push	{r7, lr}
 800b6c2:	b082      	sub	sp, #8
 800b6c4:	af00      	add	r7, sp, #0
 800b6c6:	6078      	str	r0, [r7, #4]
 800b6c8:	460b      	mov	r3, r1
 800b6ca:	807b      	strh	r3, [r7, #2]
 800b6cc:	4613      	mov	r3, r2
 800b6ce:	803b      	strh	r3, [r7, #0]
    {
        setIconX(x);
 800b6d0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800b6d4:	4619      	mov	r1, r3
 800b6d6:	6878      	ldr	r0, [r7, #4]
 800b6d8:	f7ff ffd4 	bl	800b684 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>
        setIconY(y);
 800b6dc:	f9b7 3000 	ldrsh.w	r3, [r7]
 800b6e0:	4619      	mov	r1, r3
 800b6e2:	6878      	ldr	r0, [r7, #4]
 800b6e4:	f7ff ffdd 	bl	800b6a2 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>
    }
 800b6e8:	bf00      	nop
 800b6ea:	3708      	adds	r7, #8
 800b6ec:	46bd      	mov	sp, r7
 800b6ee:	bd80      	pop	{r7, pc}

0800b6f0 <_ZN8touchgfx11RadioButtonC1Ev>:
 * @see RadioButtonGroup
 */
class RadioButton : public AbstractButton
{
public:
    RadioButton()
 800b6f0:	b580      	push	{r7, lr}
 800b6f2:	b082      	sub	sp, #8
 800b6f4:	af00      	add	r7, sp, #0
 800b6f6:	6078      	str	r0, [r7, #4]
        : AbstractButton(), bitmapUnselected(), bitmapUnselectedPressed(), bitmapSelected(), bitmapSelectedPressed(), alpha(255), selected(false), deselectionEnabled(false), deselectedAction(0)
 800b6f8:	687b      	ldr	r3, [r7, #4]
 800b6fa:	4618      	mov	r0, r3
 800b6fc:	f7ff ff6c 	bl	800b5d8 <_ZN8touchgfx14AbstractButtonC1Ev>
 800b700:	4a19      	ldr	r2, [pc, #100]	@ (800b768 <_ZN8touchgfx11RadioButtonC1Ev+0x78>)
 800b702:	687b      	ldr	r3, [r7, #4]
 800b704:	601a      	str	r2, [r3, #0]
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	332e      	adds	r3, #46	@ 0x2e
 800b70a:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800b70e:	4618      	mov	r0, r3
 800b710:	f7fe fb34 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800b714:	687b      	ldr	r3, [r7, #4]
 800b716:	3330      	adds	r3, #48	@ 0x30
 800b718:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800b71c:	4618      	mov	r0, r3
 800b71e:	f7fe fb2d 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800b722:	687b      	ldr	r3, [r7, #4]
 800b724:	3332      	adds	r3, #50	@ 0x32
 800b726:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800b72a:	4618      	mov	r0, r3
 800b72c:	f7fe fb26 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800b730:	687b      	ldr	r3, [r7, #4]
 800b732:	3334      	adds	r3, #52	@ 0x34
 800b734:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800b738:	4618      	mov	r0, r3
 800b73a:	f7fe fb1f 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800b73e:	687b      	ldr	r3, [r7, #4]
 800b740:	22ff      	movs	r2, #255	@ 0xff
 800b742:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 800b746:	687b      	ldr	r3, [r7, #4]
 800b748:	2200      	movs	r2, #0
 800b74a:	f883 2037 	strb.w	r2, [r3, #55]	@ 0x37
 800b74e:	687b      	ldr	r3, [r7, #4]
 800b750:	2200      	movs	r2, #0
 800b752:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800b756:	687b      	ldr	r3, [r7, #4]
 800b758:	2200      	movs	r2, #0
 800b75a:	63da      	str	r2, [r3, #60]	@ 0x3c
    {
    }
 800b75c:	687b      	ldr	r3, [r7, #4]
 800b75e:	4618      	mov	r0, r3
 800b760:	3708      	adds	r7, #8
 800b762:	46bd      	mov	sp, r7
 800b764:	bd80      	pop	{r7, pc}
 800b766:	bf00      	nop
 800b768:	08029b60 	.word	0x08029b60

0800b76c <_ZN8touchgfx11RadioButton19setDeselectedActionERNS_15GenericCallbackIRKNS_14AbstractButtonEvvEE>:
     *                  to the AbstractButton.
     *
     * @note The action performed when the RadioButton is selected, is set using
     *       setAction().
     */
    void setDeselectedAction(GenericCallback<const AbstractButton&>& callback)
 800b76c:	b480      	push	{r7}
 800b76e:	b083      	sub	sp, #12
 800b770:	af00      	add	r7, sp, #0
 800b772:	6078      	str	r0, [r7, #4]
 800b774:	6039      	str	r1, [r7, #0]
    {
        deselectedAction = &callback;
 800b776:	687b      	ldr	r3, [r7, #4]
 800b778:	683a      	ldr	r2, [r7, #0]
 800b77a:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800b77c:	bf00      	nop
 800b77e:	370c      	adds	r7, #12
 800b780:	46bd      	mov	sp, r7
 800b782:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b786:	4770      	bx	lr

0800b788 <_ZN8touchgfx11RadioButton21setDeselectionEnabledEb>:
     *
     * @param  state true if it should be possible to deselect by click. Default is false.
     *
     * @see getDeselectionEnabled
     */
    void setDeselectionEnabled(bool state)
 800b788:	b480      	push	{r7}
 800b78a:	b083      	sub	sp, #12
 800b78c:	af00      	add	r7, sp, #0
 800b78e:	6078      	str	r0, [r7, #4]
 800b790:	460b      	mov	r3, r1
 800b792:	70fb      	strb	r3, [r7, #3]
    {
        deselectionEnabled = state;
 800b794:	687b      	ldr	r3, [r7, #4]
 800b796:	78fa      	ldrb	r2, [r7, #3]
 800b798:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
    }
 800b79c:	bf00      	nop
 800b79e:	370c      	adds	r7, #12
 800b7a0:	46bd      	mov	sp, r7
 800b7a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7a6:	4770      	bx	lr

0800b7a8 <_ZNK8touchgfx11RadioButton21getDeselectionEnabledEv>:
     *
     * @return The current deselectionEnabled state.
     *
     * @see setDeselectionEnabled
     */
    bool getDeselectionEnabled() const
 800b7a8:	b480      	push	{r7}
 800b7aa:	b083      	sub	sp, #12
 800b7ac:	af00      	add	r7, sp, #0
 800b7ae:	6078      	str	r0, [r7, #4]
    {
        return deselectionEnabled;
 800b7b0:	687b      	ldr	r3, [r7, #4]
 800b7b2:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
    }
 800b7b6:	4618      	mov	r0, r3
 800b7b8:	370c      	adds	r7, #12
 800b7ba:	46bd      	mov	sp, r7
 800b7bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7c0:	4770      	bx	lr

0800b7c2 <_ZNK8touchgfx11RadioButton11getSelectedEv>:
    /**
     * Gets the current selected state.
     *
     * @return The current selected state.
     */
    bool getSelected() const
 800b7c2:	b480      	push	{r7}
 800b7c4:	b083      	sub	sp, #12
 800b7c6:	af00      	add	r7, sp, #0
 800b7c8:	6078      	str	r0, [r7, #4]
    {
        return selected;
 800b7ca:	687b      	ldr	r3, [r7, #4]
 800b7cc:	f893 3037 	ldrb.w	r3, [r3, #55]	@ 0x37
    }
 800b7d0:	4618      	mov	r0, r3
 800b7d2:	370c      	adds	r7, #12
 800b7d4:	46bd      	mov	sp, r7
 800b7d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7da:	4770      	bx	lr

0800b7dc <_ZN16SettingsViewBase11applicationEv>:
    SettingsViewBase();
    virtual ~SettingsViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800b7dc:	b580      	push	{r7, lr}
 800b7de:	b082      	sub	sp, #8
 800b7e0:	af00      	add	r7, sp, #0
 800b7e2:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800b7e4:	f007 fc60 	bl	80130a8 <_ZN8touchgfx11Application11getInstanceEv>
 800b7e8:	4603      	mov	r3, r0
    }
 800b7ea:	4618      	mov	r0, r3
 800b7ec:	3708      	adds	r7, #8
 800b7ee:	46bd      	mov	sp, r7
 800b7f0:	bd80      	pop	{r7, pc}
	...

0800b7f4 <_ZN8touchgfx4ViewI17SettingsPresenterED1Ev>:
class View : public Screen
 800b7f4:	b580      	push	{r7, lr}
 800b7f6:	b082      	sub	sp, #8
 800b7f8:	af00      	add	r7, sp, #0
 800b7fa:	6078      	str	r0, [r7, #4]
 800b7fc:	4a05      	ldr	r2, [pc, #20]	@ (800b814 <_ZN8touchgfx4ViewI17SettingsPresenterED1Ev+0x20>)
 800b7fe:	687b      	ldr	r3, [r7, #4]
 800b800:	601a      	str	r2, [r3, #0]
 800b802:	687b      	ldr	r3, [r7, #4]
 800b804:	4618      	mov	r0, r3
 800b806:	f7fe fcbb 	bl	800a180 <_ZN8touchgfx6ScreenD1Ev>
 800b80a:	687b      	ldr	r3, [r7, #4]
 800b80c:	4618      	mov	r0, r3
 800b80e:	3708      	adds	r7, #8
 800b810:	46bd      	mov	sp, r7
 800b812:	bd80      	pop	{r7, pc}
 800b814:	08028efc 	.word	0x08028efc

0800b818 <_ZN8touchgfx4ViewI17SettingsPresenterED0Ev>:
 800b818:	b580      	push	{r7, lr}
 800b81a:	b082      	sub	sp, #8
 800b81c:	af00      	add	r7, sp, #0
 800b81e:	6078      	str	r0, [r7, #4]
 800b820:	6878      	ldr	r0, [r7, #4]
 800b822:	f7ff ffe7 	bl	800b7f4 <_ZN8touchgfx4ViewI17SettingsPresenterED1Ev>
 800b826:	2140      	movs	r1, #64	@ 0x40
 800b828:	6878      	ldr	r0, [r7, #4]
 800b82a:	f018 faf4 	bl	8023e16 <_ZdlPvj>
 800b82e:	687b      	ldr	r3, [r7, #4]
 800b830:	4618      	mov	r0, r3
 800b832:	3708      	adds	r7, #8
 800b834:	46bd      	mov	sp, r7
 800b836:	bd80      	pop	{r7, pc}

0800b838 <_ZN16SettingsViewBaseC1Ev>:
#include <gui_generated/settings_screen/SettingsViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

SettingsViewBase::SettingsViewBase() :
 800b838:	b590      	push	{r4, r7, lr}
 800b83a:	b0c9      	sub	sp, #292	@ 0x124
 800b83c:	af02      	add	r7, sp, #8
 800b83e:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b842:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b846:	6018      	str	r0, [r3, #0]
    buttonCallback(this, &SettingsViewBase::buttonCallbackHandler),
    radioButtonSelectedCallback(this, &SettingsViewBase::radioButtonSelectedCallbackHandler)
 800b848:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b84c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b850:	681b      	ldr	r3, [r3, #0]
 800b852:	4618      	mov	r0, r3
 800b854:	f000 fe8e 	bl	800c574 <_ZN8touchgfx4ViewI17SettingsPresenterEC1Ev>
 800b858:	4ae6      	ldr	r2, [pc, #920]	@ (800bbf4 <_ZN16SettingsViewBaseC1Ev+0x3bc>)
 800b85a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b85e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b862:	681b      	ldr	r3, [r3, #0]
 800b864:	601a      	str	r2, [r3, #0]
 800b866:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b86a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b86e:	681b      	ldr	r3, [r3, #0]
 800b870:	3340      	adds	r3, #64	@ 0x40
 800b872:	4618      	mov	r0, r3
 800b874:	f7fe fd42 	bl	800a2fc <_ZN8touchgfx3BoxC1Ev>
 800b878:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b87c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b880:	681b      	ldr	r3, [r3, #0]
 800b882:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800b886:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800b88a:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800b88e:	4618      	mov	r0, r3
 800b890:	f7fe fa74 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800b894:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800b898:	4619      	mov	r1, r3
 800b89a:	4620      	mov	r0, r4
 800b89c:	f7fe fd70 	bl	800a380 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800b8a0:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b8a4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b8a8:	681b      	ldr	r3, [r3, #0]
 800b8aa:	3398      	adds	r3, #152	@ 0x98
 800b8ac:	4618      	mov	r0, r3
 800b8ae:	f005 fdb7 	bl	8011420 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800b8b2:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b8b6:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b8ba:	681b      	ldr	r3, [r3, #0]
 800b8bc:	33d4      	adds	r3, #212	@ 0xd4
 800b8be:	4618      	mov	r0, r3
 800b8c0:	f005 fdae 	bl	8011420 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800b8c4:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b8c8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b8cc:	681b      	ldr	r3, [r3, #0]
 800b8ce:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 800b8d2:	4618      	mov	r0, r3
 800b8d4:	f000 fe86 	bl	800c5e4 <_ZN8touchgfx16RadioButtonGroupILt3EEC1Ev>
 800b8d8:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b8dc:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b8e0:	681b      	ldr	r3, [r3, #0]
 800b8e2:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800b8e6:	4618      	mov	r0, r3
 800b8e8:	f7ff ff02 	bl	800b6f0 <_ZN8touchgfx11RadioButtonC1Ev>
 800b8ec:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b8f0:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b8f4:	681b      	ldr	r3, [r3, #0]
 800b8f6:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800b8fa:	4618      	mov	r0, r3
 800b8fc:	f7ff fef8 	bl	800b6f0 <_ZN8touchgfx11RadioButtonC1Ev>
 800b900:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b904:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b908:	681b      	ldr	r3, [r3, #0]
 800b90a:	f503 73e6 	add.w	r3, r3, #460	@ 0x1cc
 800b90e:	4618      	mov	r0, r3
 800b910:	f7ff feee 	bl	800b6f0 <_ZN8touchgfx11RadioButtonC1Ev>
 800b914:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b918:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b91c:	681b      	ldr	r3, [r3, #0]
 800b91e:	f503 7303 	add.w	r3, r3, #524	@ 0x20c
 800b922:	4618      	mov	r0, r3
 800b924:	f7fe fd68 	bl	800a3f8 <_ZN8touchgfx8TextAreaC1Ev>
 800b928:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b92c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b930:	681b      	ldr	r3, [r3, #0]
 800b932:	f503 7315 	add.w	r3, r3, #596	@ 0x254
 800b936:	4618      	mov	r0, r3
 800b938:	f7fe fd5e 	bl	800a3f8 <_ZN8touchgfx8TextAreaC1Ev>
 800b93c:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b940:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b944:	681b      	ldr	r3, [r3, #0]
 800b946:	f503 7327 	add.w	r3, r3, #668	@ 0x29c
 800b94a:	4618      	mov	r0, r3
 800b94c:	f7fe fd54 	bl	800a3f8 <_ZN8touchgfx8TextAreaC1Ev>
 800b950:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b954:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b958:	681b      	ldr	r3, [r3, #0]
 800b95a:	f503 7339 	add.w	r3, r3, #740	@ 0x2e4
 800b95e:	4618      	mov	r0, r3
 800b960:	f7fe fefc 	bl	800a75c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
    buttonCallback(this, &SettingsViewBase::buttonCallbackHandler),
 800b964:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b968:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b96c:	681b      	ldr	r3, [r3, #0]
 800b96e:	f503 7056 	add.w	r0, r3, #856	@ 0x358
 800b972:	4ba1      	ldr	r3, [pc, #644]	@ (800bbf8 <_ZN16SettingsViewBaseC1Ev+0x3c0>)
 800b974:	633b      	str	r3, [r7, #48]	@ 0x30
 800b976:	2300      	movs	r3, #0
 800b978:	637b      	str	r3, [r7, #52]	@ 0x34
 800b97a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b97e:	f5a3 7182 	sub.w	r1, r3, #260	@ 0x104
 800b982:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800b986:	cb0c      	ldmia	r3, {r2, r3}
 800b988:	6809      	ldr	r1, [r1, #0]
 800b98a:	f000 fea1 	bl	800c6d0 <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
    radioButtonSelectedCallback(this, &SettingsViewBase::radioButtonSelectedCallbackHandler)
 800b98e:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b992:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b996:	681b      	ldr	r3, [r3, #0]
 800b998:	f503 705a 	add.w	r0, r3, #872	@ 0x368
 800b99c:	4b97      	ldr	r3, [pc, #604]	@ (800bbfc <_ZN16SettingsViewBaseC1Ev+0x3c4>)
 800b99e:	63bb      	str	r3, [r7, #56]	@ 0x38
 800b9a0:	2300      	movs	r3, #0
 800b9a2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800b9a4:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b9a8:	f5a3 7182 	sub.w	r1, r3, #260	@ 0x104
 800b9ac:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 800b9b0:	cb0c      	ldmia	r3, {r2, r3}
 800b9b2:	6809      	ldr	r1, [r1, #0]
 800b9b4:	f000 fe8c 	bl	800c6d0 <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800b9b8:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b9bc:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b9c0:	681b      	ldr	r3, [r3, #0]
 800b9c2:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800b9c6:	23f0      	movs	r3, #240	@ 0xf0
 800b9c8:	9300      	str	r3, [sp, #0]
 800b9ca:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800b9ce:	2200      	movs	r2, #0
 800b9d0:	2100      	movs	r1, #0
 800b9d2:	f7fe fa5d 	bl	8009e90 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800b9d6:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800b9da:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b9de:	681b      	ldr	r3, [r3, #0]
 800b9e0:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800b9e4:	2300      	movs	r3, #0
 800b9e6:	f887 30d4 	strb.w	r3, [r7, #212]	@ 0xd4
 800b9ea:	2300      	movs	r3, #0
 800b9ec:	f887 30d3 	strb.w	r3, [r7, #211]	@ 0xd3
 800b9f0:	2300      	movs	r3, #0
 800b9f2:	f887 30d2 	strb.w	r3, [r7, #210]	@ 0xd2
 800b9f6:	f897 30d4 	ldrb.w	r3, [r7, #212]	@ 0xd4
 800b9fa:	041a      	lsls	r2, r3, #16
 800b9fc:	f897 30d3 	ldrb.w	r3, [r7, #211]	@ 0xd3
 800ba00:	021b      	lsls	r3, r3, #8
 800ba02:	431a      	orrs	r2, r3
 800ba04:	f897 30d2 	ldrb.w	r3, [r7, #210]	@ 0xd2
 800ba08:	4313      	orrs	r3, r2
 800ba0a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800ba0e:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 800ba12:	4611      	mov	r1, r2
 800ba14:	4618      	mov	r0, r3
 800ba16:	f7fe f96b 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800ba1a:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 800ba1e:	4619      	mov	r1, r3
 800ba20:	4620      	mov	r0, r4
 800ba22:	f7fe fc8f 	bl	800a344 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800ba26:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800ba2a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800ba2e:	681a      	ldr	r2, [r3, #0]
 800ba30:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800ba34:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800ba38:	681b      	ldr	r3, [r3, #0]
 800ba3a:	3340      	adds	r3, #64	@ 0x40
 800ba3c:	4619      	mov	r1, r3
 800ba3e:	4610      	mov	r0, r2
 800ba40:	f7fe fbf6 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    settingsBackground.setXY(0, 0);
 800ba44:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800ba48:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800ba4c:	681b      	ldr	r3, [r3, #0]
 800ba4e:	336c      	adds	r3, #108	@ 0x6c
 800ba50:	2200      	movs	r2, #0
 800ba52:	2100      	movs	r1, #0
 800ba54:	4618      	mov	r0, r3
 800ba56:	f7fe fa5a 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    settingsBackground.setBitmap(touchgfx::Bitmap(BITMAP_BACKSMALL_ID));
 800ba5a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800ba5e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800ba62:	681b      	ldr	r3, [r3, #0]
 800ba64:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800ba68:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 800ba6c:	2106      	movs	r1, #6
 800ba6e:	4618      	mov	r0, r3
 800ba70:	f7fe f984 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800ba74:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 800ba78:	4619      	mov	r1, r3
 800ba7a:	4620      	mov	r0, r4
 800ba7c:	f005 fcf6 	bl	801146c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(settingsBackground);
 800ba80:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800ba84:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800ba88:	681a      	ldr	r2, [r3, #0]
 800ba8a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800ba8e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800ba92:	681b      	ldr	r3, [r3, #0]
 800ba94:	336c      	adds	r3, #108	@ 0x6c
 800ba96:	4619      	mov	r1, r3
 800ba98:	4610      	mov	r0, r2
 800ba9a:	f7fe fbc9 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    cancelButton.setXY(176, 169);
 800ba9e:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800baa2:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800baa6:	681b      	ldr	r3, [r3, #0]
 800baa8:	3398      	adds	r3, #152	@ 0x98
 800baaa:	22a9      	movs	r2, #169	@ 0xa9
 800baac:	21b0      	movs	r1, #176	@ 0xb0
 800baae:	4618      	mov	r0, r3
 800bab0:	f7fe fa2d 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    cancelButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_CANCEL_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800bab4:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bab8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800babc:	681b      	ldr	r3, [r3, #0]
 800babe:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 800bac2:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800bac6:	2100      	movs	r1, #0
 800bac8:	4618      	mov	r0, r3
 800baca:	f7fe f957 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bace:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800bad2:	2101      	movs	r1, #1
 800bad4:	4618      	mov	r0, r3
 800bad6:	f7fe f951 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bada:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800bade:	2108      	movs	r1, #8
 800bae0:	4618      	mov	r0, r3
 800bae2:	f7fe f94b 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bae6:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800baea:	2107      	movs	r1, #7
 800baec:	4618      	mov	r0, r3
 800baee:	f7fe f945 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800baf2:	f107 004c 	add.w	r0, r7, #76	@ 0x4c
 800baf6:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 800bafa:	f107 0144 	add.w	r1, r7, #68	@ 0x44
 800bafe:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800bb02:	9300      	str	r3, [sp, #0]
 800bb04:	4603      	mov	r3, r0
 800bb06:	4620      	mov	r0, r4
 800bb08:	f005 fbf4 	bl	80112f4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    cancelButton.setIconXY(5, 5);
 800bb0c:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bb10:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bb14:	681b      	ldr	r3, [r3, #0]
 800bb16:	3398      	adds	r3, #152	@ 0x98
 800bb18:	2205      	movs	r2, #5
 800bb1a:	2105      	movs	r1, #5
 800bb1c:	4618      	mov	r0, r3
 800bb1e:	f7ff fdcf 	bl	800b6c0 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    cancelButton.setAction(buttonCallback);
 800bb22:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bb26:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bb2a:	681b      	ldr	r3, [r3, #0]
 800bb2c:	f103 0298 	add.w	r2, r3, #152	@ 0x98
 800bb30:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bb34:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bb38:	681b      	ldr	r3, [r3, #0]
 800bb3a:	f503 7356 	add.w	r3, r3, #856	@ 0x358
 800bb3e:	4619      	mov	r1, r3
 800bb40:	4610      	mov	r0, r2
 800bb42:	f7ff fd6f 	bl	800b624 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(cancelButton);
 800bb46:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bb4a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bb4e:	681a      	ldr	r2, [r3, #0]
 800bb50:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bb54:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bb58:	681b      	ldr	r3, [r3, #0]
 800bb5a:	3398      	adds	r3, #152	@ 0x98
 800bb5c:	4619      	mov	r1, r3
 800bb5e:	4610      	mov	r0, r2
 800bb60:	f7fe fb66 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    okButton.setXY(86, 169);
 800bb64:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bb68:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bb6c:	681b      	ldr	r3, [r3, #0]
 800bb6e:	33d4      	adds	r3, #212	@ 0xd4
 800bb70:	22a9      	movs	r2, #169	@ 0xa9
 800bb72:	2156      	movs	r1, #86	@ 0x56
 800bb74:	4618      	mov	r0, r3
 800bb76:	f7fe f9ca 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    okButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800bb7a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bb7e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bb82:	681b      	ldr	r3, [r3, #0]
 800bb84:	f103 04d4 	add.w	r4, r3, #212	@ 0xd4
 800bb88:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800bb8c:	2100      	movs	r1, #0
 800bb8e:	4618      	mov	r0, r3
 800bb90:	f7fe f8f4 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bb94:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800bb98:	2101      	movs	r1, #1
 800bb9a:	4618      	mov	r0, r3
 800bb9c:	f7fe f8ee 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bba0:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800bba4:	2107      	movs	r1, #7
 800bba6:	4618      	mov	r0, r3
 800bba8:	f7fe f8e8 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bbac:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800bbb0:	2107      	movs	r1, #7
 800bbb2:	4618      	mov	r0, r3
 800bbb4:	f7fe f8e2 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bbb8:	f107 005c 	add.w	r0, r7, #92	@ 0x5c
 800bbbc:	f107 0258 	add.w	r2, r7, #88	@ 0x58
 800bbc0:	f107 0154 	add.w	r1, r7, #84	@ 0x54
 800bbc4:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800bbc8:	9300      	str	r3, [sp, #0]
 800bbca:	4603      	mov	r3, r0
 800bbcc:	4620      	mov	r0, r4
 800bbce:	f005 fb91 	bl	80112f4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    okButton.setIconXY(5, 5);
 800bbd2:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bbd6:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bbda:	681b      	ldr	r3, [r3, #0]
 800bbdc:	33d4      	adds	r3, #212	@ 0xd4
 800bbde:	2205      	movs	r2, #5
 800bbe0:	2105      	movs	r1, #5
 800bbe2:	4618      	mov	r0, r3
 800bbe4:	f7ff fd6c 	bl	800b6c0 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    add(okButton);
 800bbe8:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bbec:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bbf0:	e006      	b.n	800bc00 <_ZN16SettingsViewBaseC1Ev+0x3c8>
 800bbf2:	bf00      	nop
 800bbf4:	08028e64 	.word	0x08028e64
 800bbf8:	0800c4ef 	.word	0x0800c4ef
 800bbfc:	0800c519 	.word	0x0800c519
 800bc00:	681a      	ldr	r2, [r3, #0]
 800bc02:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bc06:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bc0a:	681b      	ldr	r3, [r3, #0]
 800bc0c:	33d4      	adds	r3, #212	@ 0xd4
 800bc0e:	4619      	mov	r1, r3
 800bc10:	4610      	mov	r0, r2
 800bc12:	f7fe fb0d 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    radioButtonGroup1.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
 800bc16:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bc1a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bc1e:	681b      	ldr	r3, [r3, #0]
 800bc20:	f503 7288 	add.w	r2, r3, #272	@ 0x110
 800bc24:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bc28:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bc2c:	681b      	ldr	r3, [r3, #0]
 800bc2e:	f503 735a 	add.w	r3, r3, #872	@ 0x368
 800bc32:	4619      	mov	r1, r3
 800bc34:	4610      	mov	r0, r2
 800bc36:	f000 fd6b 	bl	800c710 <_ZN8touchgfx16RadioButtonGroupILt3EE29setRadioButtonSelectedHandlerERNS_15GenericCallbackIRKNS_14AbstractButtonEvvEE>
    
    piperButton.setXY(40, 32);
 800bc3a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bc3e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bc42:	681b      	ldr	r3, [r3, #0]
 800bc44:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800bc48:	2220      	movs	r2, #32
 800bc4a:	2128      	movs	r1, #40	@ 0x28
 800bc4c:	4618      	mov	r0, r3
 800bc4e:	f7fe f95e 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    piperButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
 800bc52:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bc56:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bc5a:	681b      	ldr	r3, [r3, #0]
 800bc5c:	f503 74a6 	add.w	r4, r3, #332	@ 0x14c
 800bc60:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800bc64:	2102      	movs	r1, #2
 800bc66:	4618      	mov	r0, r3
 800bc68:	f7fe f888 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bc6c:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800bc70:	2103      	movs	r1, #3
 800bc72:	4618      	mov	r0, r3
 800bc74:	f7fe f882 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bc78:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800bc7c:	2104      	movs	r1, #4
 800bc7e:	4618      	mov	r0, r3
 800bc80:	f7fe f87c 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bc84:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800bc88:	2105      	movs	r1, #5
 800bc8a:	4618      	mov	r0, r3
 800bc8c:	f7fe f876 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bc90:	f107 006c 	add.w	r0, r7, #108	@ 0x6c
 800bc94:	f107 0268 	add.w	r2, r7, #104	@ 0x68
 800bc98:	f107 0164 	add.w	r1, r7, #100	@ 0x64
 800bc9c:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800bca0:	9300      	str	r3, [sp, #0]
 800bca2:	4603      	mov	r3, r0
 800bca4:	4620      	mov	r0, r4
 800bca6:	f005 fc57 	bl	8011558 <_ZN8touchgfx11RadioButton10setBitmapsERKNS_6BitmapES3_S3_S3_>
    piperButton.setSelected(true);
 800bcaa:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bcae:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bcb2:	681b      	ldr	r3, [r3, #0]
 800bcb4:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800bcb8:	2101      	movs	r1, #1
 800bcba:	4618      	mov	r0, r3
 800bcbc:	f005 fce6 	bl	801168c <_ZN8touchgfx11RadioButton11setSelectedEb>
    piperButton.setDeselectionEnabled(false);
 800bcc0:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bcc4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bcc8:	681b      	ldr	r3, [r3, #0]
 800bcca:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800bcce:	2100      	movs	r1, #0
 800bcd0:	4618      	mov	r0, r3
 800bcd2:	f7ff fd59 	bl	800b788 <_ZN8touchgfx11RadioButton21setDeselectionEnabledEb>
    radioButtonGroup1.add(piperButton);
 800bcd6:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bcda:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bcde:	681b      	ldr	r3, [r3, #0]
 800bce0:	f503 7288 	add.w	r2, r3, #272	@ 0x110
 800bce4:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bce8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bcec:	681b      	ldr	r3, [r3, #0]
 800bcee:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800bcf2:	4619      	mov	r1, r3
 800bcf4:	4610      	mov	r0, r2
 800bcf6:	f000 fd19 	bl	800c72c <_ZN8touchgfx16RadioButtonGroupILt3EE3addERNS_11RadioButtonE>
    add(piperButton);
 800bcfa:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bcfe:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bd02:	681a      	ldr	r2, [r3, #0]
 800bd04:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bd08:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bd0c:	681b      	ldr	r3, [r3, #0]
 800bd0e:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800bd12:	4619      	mov	r1, r3
 800bd14:	4610      	mov	r0, r2
 800bd16:	f7fe fa8b 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    bakeryButton.setXY(40, 68);
 800bd1a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bd1e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bd22:	681b      	ldr	r3, [r3, #0]
 800bd24:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800bd28:	2244      	movs	r2, #68	@ 0x44
 800bd2a:	2128      	movs	r1, #40	@ 0x28
 800bd2c:	4618      	mov	r0, r3
 800bd2e:	f7fe f8ee 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    bakeryButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
 800bd32:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bd36:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bd3a:	681b      	ldr	r3, [r3, #0]
 800bd3c:	f503 74c6 	add.w	r4, r3, #396	@ 0x18c
 800bd40:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800bd44:	2102      	movs	r1, #2
 800bd46:	4618      	mov	r0, r3
 800bd48:	f7fe f818 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bd4c:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800bd50:	2103      	movs	r1, #3
 800bd52:	4618      	mov	r0, r3
 800bd54:	f7fe f812 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bd58:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800bd5c:	2104      	movs	r1, #4
 800bd5e:	4618      	mov	r0, r3
 800bd60:	f7fe f80c 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bd64:	f107 0380 	add.w	r3, r7, #128	@ 0x80
 800bd68:	2105      	movs	r1, #5
 800bd6a:	4618      	mov	r0, r3
 800bd6c:	f7fe f806 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800bd70:	f107 007c 	add.w	r0, r7, #124	@ 0x7c
 800bd74:	f107 0278 	add.w	r2, r7, #120	@ 0x78
 800bd78:	f107 0174 	add.w	r1, r7, #116	@ 0x74
 800bd7c:	f107 0380 	add.w	r3, r7, #128	@ 0x80
 800bd80:	9300      	str	r3, [sp, #0]
 800bd82:	4603      	mov	r3, r0
 800bd84:	4620      	mov	r0, r4
 800bd86:	f005 fbe7 	bl	8011558 <_ZN8touchgfx11RadioButton10setBitmapsERKNS_6BitmapES3_S3_S3_>
    bakeryButton.setSelected(false);
 800bd8a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bd8e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bd92:	681b      	ldr	r3, [r3, #0]
 800bd94:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800bd98:	2100      	movs	r1, #0
 800bd9a:	4618      	mov	r0, r3
 800bd9c:	f005 fc76 	bl	801168c <_ZN8touchgfx11RadioButton11setSelectedEb>
    bakeryButton.setDeselectionEnabled(false);
 800bda0:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bda4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bda8:	681b      	ldr	r3, [r3, #0]
 800bdaa:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800bdae:	2100      	movs	r1, #0
 800bdb0:	4618      	mov	r0, r3
 800bdb2:	f7ff fce9 	bl	800b788 <_ZN8touchgfx11RadioButton21setDeselectionEnabledEb>
    radioButtonGroup1.add(bakeryButton);
 800bdb6:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bdba:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bdbe:	681b      	ldr	r3, [r3, #0]
 800bdc0:	f503 7288 	add.w	r2, r3, #272	@ 0x110
 800bdc4:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bdc8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bdcc:	681b      	ldr	r3, [r3, #0]
 800bdce:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800bdd2:	4619      	mov	r1, r3
 800bdd4:	4610      	mov	r0, r2
 800bdd6:	f000 fca9 	bl	800c72c <_ZN8touchgfx16RadioButtonGroupILt3EE3addERNS_11RadioButtonE>
    add(bakeryButton);
 800bdda:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bdde:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bde2:	681a      	ldr	r2, [r3, #0]
 800bde4:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bde8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bdec:	681b      	ldr	r3, [r3, #0]
 800bdee:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800bdf2:	4619      	mov	r1, r3
 800bdf4:	4610      	mov	r0, r2
 800bdf6:	f7fe fa1b 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    iotButton.setXY(40, 104);
 800bdfa:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bdfe:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800be02:	681b      	ldr	r3, [r3, #0]
 800be04:	f503 73e6 	add.w	r3, r3, #460	@ 0x1cc
 800be08:	2268      	movs	r2, #104	@ 0x68
 800be0a:	2128      	movs	r1, #40	@ 0x28
 800be0c:	4618      	mov	r0, r3
 800be0e:	f7fe f87e 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    iotButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
 800be12:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800be16:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800be1a:	681b      	ldr	r3, [r3, #0]
 800be1c:	f503 74e6 	add.w	r4, r3, #460	@ 0x1cc
 800be20:	f107 0384 	add.w	r3, r7, #132	@ 0x84
 800be24:	2102      	movs	r1, #2
 800be26:	4618      	mov	r0, r3
 800be28:	f7fd ffa8 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800be2c:	f107 0388 	add.w	r3, r7, #136	@ 0x88
 800be30:	2103      	movs	r1, #3
 800be32:	4618      	mov	r0, r3
 800be34:	f7fd ffa2 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800be38:	f107 038c 	add.w	r3, r7, #140	@ 0x8c
 800be3c:	2104      	movs	r1, #4
 800be3e:	4618      	mov	r0, r3
 800be40:	f7fd ff9c 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800be44:	f107 0390 	add.w	r3, r7, #144	@ 0x90
 800be48:	2105      	movs	r1, #5
 800be4a:	4618      	mov	r0, r3
 800be4c:	f7fd ff96 	bl	8009d7c <_ZN8touchgfx6BitmapC1Et>
 800be50:	f107 008c 	add.w	r0, r7, #140	@ 0x8c
 800be54:	f107 0288 	add.w	r2, r7, #136	@ 0x88
 800be58:	f107 0184 	add.w	r1, r7, #132	@ 0x84
 800be5c:	f107 0390 	add.w	r3, r7, #144	@ 0x90
 800be60:	9300      	str	r3, [sp, #0]
 800be62:	4603      	mov	r3, r0
 800be64:	4620      	mov	r0, r4
 800be66:	f005 fb77 	bl	8011558 <_ZN8touchgfx11RadioButton10setBitmapsERKNS_6BitmapES3_S3_S3_>
    iotButton.setSelected(false);
 800be6a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800be6e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800be72:	681b      	ldr	r3, [r3, #0]
 800be74:	f503 73e6 	add.w	r3, r3, #460	@ 0x1cc
 800be78:	2100      	movs	r1, #0
 800be7a:	4618      	mov	r0, r3
 800be7c:	f005 fc06 	bl	801168c <_ZN8touchgfx11RadioButton11setSelectedEb>
    iotButton.setDeselectionEnabled(false);
 800be80:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800be84:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800be88:	681b      	ldr	r3, [r3, #0]
 800be8a:	f503 73e6 	add.w	r3, r3, #460	@ 0x1cc
 800be8e:	2100      	movs	r1, #0
 800be90:	4618      	mov	r0, r3
 800be92:	f7ff fc79 	bl	800b788 <_ZN8touchgfx11RadioButton21setDeselectionEnabledEb>
    radioButtonGroup1.add(iotButton);
 800be96:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800be9a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800be9e:	681b      	ldr	r3, [r3, #0]
 800bea0:	f503 7288 	add.w	r2, r3, #272	@ 0x110
 800bea4:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bea8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800beac:	681b      	ldr	r3, [r3, #0]
 800beae:	f503 73e6 	add.w	r3, r3, #460	@ 0x1cc
 800beb2:	4619      	mov	r1, r3
 800beb4:	4610      	mov	r0, r2
 800beb6:	f000 fc39 	bl	800c72c <_ZN8touchgfx16RadioButtonGroupILt3EE3addERNS_11RadioButtonE>
    add(iotButton);
 800beba:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bebe:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bec2:	681a      	ldr	r2, [r3, #0]
 800bec4:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bec8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800becc:	681b      	ldr	r3, [r3, #0]
 800bece:	f503 73e6 	add.w	r3, r3, #460	@ 0x1cc
 800bed2:	4619      	mov	r1, r3
 800bed4:	4610      	mov	r0, r2
 800bed6:	f7fe f9ab 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setXY(86, 40);
 800beda:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bede:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bee2:	681b      	ldr	r3, [r3, #0]
 800bee4:	f503 7303 	add.w	r3, r3, #524	@ 0x20c
 800bee8:	2228      	movs	r2, #40	@ 0x28
 800beea:	2156      	movs	r1, #86	@ 0x56
 800beec:	4618      	mov	r0, r3
 800beee:	f7fe f80e 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(245, 235, 235));
 800bef2:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bef6:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800befa:	681b      	ldr	r3, [r3, #0]
 800befc:	f503 7403 	add.w	r4, r3, #524	@ 0x20c
 800bf00:	23f5      	movs	r3, #245	@ 0xf5
 800bf02:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 800bf06:	23eb      	movs	r3, #235	@ 0xeb
 800bf08:	f887 30d6 	strb.w	r3, [r7, #214]	@ 0xd6
 800bf0c:	23eb      	movs	r3, #235	@ 0xeb
 800bf0e:	f887 30d5 	strb.w	r3, [r7, #213]	@ 0xd5
 800bf12:	f897 30d7 	ldrb.w	r3, [r7, #215]	@ 0xd7
 800bf16:	041a      	lsls	r2, r3, #16
 800bf18:	f897 30d6 	ldrb.w	r3, [r7, #214]	@ 0xd6
 800bf1c:	021b      	lsls	r3, r3, #8
 800bf1e:	431a      	orrs	r2, r3
 800bf20:	f897 30d5 	ldrb.w	r3, [r7, #213]	@ 0xd5
 800bf24:	4313      	orrs	r3, r2
 800bf26:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800bf2a:	f107 03c8 	add.w	r3, r7, #200	@ 0xc8
 800bf2e:	4611      	mov	r1, r2
 800bf30:	4618      	mov	r0, r3
 800bf32:	f7fd fedd 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800bf36:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800bf3a:	f8c7 40d8 	str.w	r4, [r7, #216]	@ 0xd8
 800bf3e:	62bb      	str	r3, [r7, #40]	@ 0x28
        color = newColor;
 800bf40:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800bf44:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800bf46:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800bf48:	bf00      	nop
    textArea1.setLinespacing(0);
 800bf4a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bf4e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bf52:	681b      	ldr	r3, [r3, #0]
 800bf54:	f503 7303 	add.w	r3, r3, #524	@ 0x20c
 800bf58:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800bf5c:	2300      	movs	r3, #0
 800bf5e:	f8a7 30de 	strh.w	r3, [r7, #222]	@ 0xde
        linespace = space;
 800bf62:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800bf66:	f8b7 20de 	ldrh.w	r2, [r7, #222]	@ 0xde
 800bf6a:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800bf6c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800bf70:	681b      	ldr	r3, [r3, #0]
 800bf72:	3384      	adds	r3, #132	@ 0x84
 800bf74:	681b      	ldr	r3, [r3, #0]
 800bf76:	f8d7 40e0 	ldr.w	r4, [r7, #224]	@ 0xe0
 800bf7a:	463a      	mov	r2, r7
 800bf7c:	f8d7 10e0 	ldr.w	r1, [r7, #224]	@ 0xe0
 800bf80:	4610      	mov	r0, r2
 800bf82:	4798      	blx	r3
 800bf84:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bf88:	f5a3 728c 	sub.w	r2, r3, #280	@ 0x118
 800bf8c:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800bf90:	ca07      	ldmia	r2, {r0, r1, r2}
 800bf92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800bf96:	bf00      	nop
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JP7N));
 800bf98:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bf9c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bfa0:	681b      	ldr	r3, [r3, #0]
 800bfa2:	f503 7403 	add.w	r4, r3, #524	@ 0x20c
 800bfa6:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 800bfaa:	2104      	movs	r1, #4
 800bfac:	4618      	mov	r0, r3
 800bfae:	f7fe fa0d 	bl	800a3cc <_ZN8touchgfx9TypedTextC1Et>
 800bfb2:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 800bfb6:	4619      	mov	r1, r3
 800bfb8:	4620      	mov	r0, r4
 800bfba:	f004 ff9b 	bl	8010ef4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800bfbe:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 800bfc2:	4618      	mov	r0, r3
 800bfc4:	f7fc fdbc 	bl	8008b40 <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 800bfc8:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bfcc:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bfd0:	681a      	ldr	r2, [r3, #0]
 800bfd2:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bfd6:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bfda:	681b      	ldr	r3, [r3, #0]
 800bfdc:	f503 7303 	add.w	r3, r3, #524	@ 0x20c
 800bfe0:	4619      	mov	r1, r3
 800bfe2:	4610      	mov	r0, r2
 800bfe4:	f7fe f924 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea2.setXY(84, 74);
 800bfe8:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800bfec:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800bff0:	681b      	ldr	r3, [r3, #0]
 800bff2:	f503 7315 	add.w	r3, r3, #596	@ 0x254
 800bff6:	224a      	movs	r2, #74	@ 0x4a
 800bff8:	2154      	movs	r1, #84	@ 0x54
 800bffa:	4618      	mov	r0, r3
 800bffc:	f7fd ff87 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    textArea2.setColor(touchgfx::Color::getColorFromRGB(245, 235, 235));
 800c000:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c004:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c008:	681b      	ldr	r3, [r3, #0]
 800c00a:	f503 7415 	add.w	r4, r3, #596	@ 0x254
 800c00e:	23f5      	movs	r3, #245	@ 0xf5
 800c010:	f887 30e7 	strb.w	r3, [r7, #231]	@ 0xe7
 800c014:	23eb      	movs	r3, #235	@ 0xeb
 800c016:	f887 30e6 	strb.w	r3, [r7, #230]	@ 0xe6
 800c01a:	23eb      	movs	r3, #235	@ 0xeb
 800c01c:	f887 30e5 	strb.w	r3, [r7, #229]	@ 0xe5
 800c020:	f897 30e7 	ldrb.w	r3, [r7, #231]	@ 0xe7
 800c024:	041a      	lsls	r2, r3, #16
 800c026:	f897 30e6 	ldrb.w	r3, [r7, #230]	@ 0xe6
 800c02a:	021b      	lsls	r3, r3, #8
 800c02c:	431a      	orrs	r2, r3
 800c02e:	f897 30e5 	ldrb.w	r3, [r7, #229]	@ 0xe5
 800c032:	4313      	orrs	r3, r2
 800c034:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c038:	f107 03c4 	add.w	r3, r7, #196	@ 0xc4
 800c03c:	4611      	mov	r1, r2
 800c03e:	4618      	mov	r0, r3
 800c040:	f7fd fe56 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800c044:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 800c048:	f8c7 40e8 	str.w	r4, [r7, #232]	@ 0xe8
 800c04c:	627b      	str	r3, [r7, #36]	@ 0x24
        color = newColor;
 800c04e:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800c052:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800c054:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c056:	bf00      	nop
    textArea2.setLinespacing(0);
 800c058:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c05c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c060:	681b      	ldr	r3, [r3, #0]
 800c062:	f503 7315 	add.w	r3, r3, #596	@ 0x254
 800c066:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 800c06a:	2300      	movs	r3, #0
 800c06c:	f8a7 30ee 	strh.w	r3, [r7, #238]	@ 0xee
        linespace = space;
 800c070:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 800c074:	f8b7 20ee 	ldrh.w	r2, [r7, #238]	@ 0xee
 800c078:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c07a:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 800c07e:	681b      	ldr	r3, [r3, #0]
 800c080:	3384      	adds	r3, #132	@ 0x84
 800c082:	681b      	ldr	r3, [r3, #0]
 800c084:	f8d7 40f0 	ldr.w	r4, [r7, #240]	@ 0xf0
 800c088:	463a      	mov	r2, r7
 800c08a:	f8d7 10f0 	ldr.w	r1, [r7, #240]	@ 0xf0
 800c08e:	4610      	mov	r0, r2
 800c090:	4798      	blx	r3
 800c092:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c096:	f5a3 728c 	sub.w	r2, r3, #280	@ 0x118
 800c09a:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c09e:	ca07      	ldmia	r2, {r0, r1, r2}
 800c0a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c0a4:	bf00      	nop
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KMV2));
 800c0a6:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c0aa:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c0ae:	681b      	ldr	r3, [r3, #0]
 800c0b0:	f503 7415 	add.w	r4, r3, #596	@ 0x254
 800c0b4:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 800c0b8:	2103      	movs	r1, #3
 800c0ba:	4618      	mov	r0, r3
 800c0bc:	f7fe f986 	bl	800a3cc <_ZN8touchgfx9TypedTextC1Et>
 800c0c0:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 800c0c4:	4619      	mov	r1, r3
 800c0c6:	4620      	mov	r0, r4
 800c0c8:	f004 ff14 	bl	8010ef4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c0cc:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 800c0d0:	4618      	mov	r0, r3
 800c0d2:	f7fc fd35 	bl	8008b40 <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea2);
 800c0d6:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c0da:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c0de:	681a      	ldr	r2, [r3, #0]
 800c0e0:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c0e4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c0e8:	681b      	ldr	r3, [r3, #0]
 800c0ea:	f503 7315 	add.w	r3, r3, #596	@ 0x254
 800c0ee:	4619      	mov	r1, r3
 800c0f0:	4610      	mov	r0, r2
 800c0f2:	f7fe f89d 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea3.setXY(84, 110);
 800c0f6:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c0fa:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c0fe:	681b      	ldr	r3, [r3, #0]
 800c100:	f503 7327 	add.w	r3, r3, #668	@ 0x29c
 800c104:	226e      	movs	r2, #110	@ 0x6e
 800c106:	2154      	movs	r1, #84	@ 0x54
 800c108:	4618      	mov	r0, r3
 800c10a:	f7fd ff00 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
    textArea3.setColor(touchgfx::Color::getColorFromRGB(245, 233, 233));
 800c10e:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c112:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c116:	681b      	ldr	r3, [r3, #0]
 800c118:	f503 7427 	add.w	r4, r3, #668	@ 0x29c
 800c11c:	23f5      	movs	r3, #245	@ 0xf5
 800c11e:	f887 30f7 	strb.w	r3, [r7, #247]	@ 0xf7
 800c122:	23e9      	movs	r3, #233	@ 0xe9
 800c124:	f887 30f6 	strb.w	r3, [r7, #246]	@ 0xf6
 800c128:	23e9      	movs	r3, #233	@ 0xe9
 800c12a:	f887 30f5 	strb.w	r3, [r7, #245]	@ 0xf5
 800c12e:	f897 30f7 	ldrb.w	r3, [r7, #247]	@ 0xf7
 800c132:	041a      	lsls	r2, r3, #16
 800c134:	f897 30f6 	ldrb.w	r3, [r7, #246]	@ 0xf6
 800c138:	021b      	lsls	r3, r3, #8
 800c13a:	431a      	orrs	r2, r3
 800c13c:	f897 30f5 	ldrb.w	r3, [r7, #245]	@ 0xf5
 800c140:	4313      	orrs	r3, r2
 800c142:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c146:	f107 03c0 	add.w	r3, r7, #192	@ 0xc0
 800c14a:	4611      	mov	r1, r2
 800c14c:	4618      	mov	r0, r3
 800c14e:	f7fd fdcf 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800c152:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800c156:	f8c7 40f8 	str.w	r4, [r7, #248]	@ 0xf8
 800c15a:	623b      	str	r3, [r7, #32]
        color = newColor;
 800c15c:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 800c160:	6a3a      	ldr	r2, [r7, #32]
 800c162:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c164:	bf00      	nop
    textArea3.setLinespacing(0);
 800c166:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c16a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c16e:	681b      	ldr	r3, [r3, #0]
 800c170:	f503 7327 	add.w	r3, r3, #668	@ 0x29c
 800c174:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 800c178:	2300      	movs	r3, #0
 800c17a:	f8a7 30fe 	strh.w	r3, [r7, #254]	@ 0xfe
        linespace = space;
 800c17e:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 800c182:	f8b7 20fe 	ldrh.w	r2, [r7, #254]	@ 0xfe
 800c186:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c188:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 800c18c:	681b      	ldr	r3, [r3, #0]
 800c18e:	3384      	adds	r3, #132	@ 0x84
 800c190:	681b      	ldr	r3, [r3, #0]
 800c192:	f8d7 4100 	ldr.w	r4, [r7, #256]	@ 0x100
 800c196:	463a      	mov	r2, r7
 800c198:	f8d7 1100 	ldr.w	r1, [r7, #256]	@ 0x100
 800c19c:	4610      	mov	r0, r2
 800c19e:	4798      	blx	r3
 800c1a0:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c1a4:	f5a3 728c 	sub.w	r2, r3, #280	@ 0x118
 800c1a8:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c1ac:	ca07      	ldmia	r2, {r0, r1, r2}
 800c1ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c1b2:	bf00      	nop
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6HFD));
 800c1b4:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c1b8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c1bc:	681b      	ldr	r3, [r3, #0]
 800c1be:	f503 7427 	add.w	r4, r3, #668	@ 0x29c
 800c1c2:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 800c1c6:	2102      	movs	r1, #2
 800c1c8:	4618      	mov	r0, r3
 800c1ca:	f7fe f8ff 	bl	800a3cc <_ZN8touchgfx9TypedTextC1Et>
 800c1ce:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 800c1d2:	4619      	mov	r1, r3
 800c1d4:	4620      	mov	r0, r4
 800c1d6:	f004 fe8d 	bl	8010ef4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c1da:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 800c1de:	4618      	mov	r0, r3
 800c1e0:	f7fc fcae 	bl	8008b40 <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea3);
 800c1e4:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c1e8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c1ec:	681a      	ldr	r2, [r3, #0]
 800c1ee:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c1f2:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c1f6:	681b      	ldr	r3, [r3, #0]
 800c1f8:	f503 7327 	add.w	r3, r3, #668	@ 0x29c
 800c1fc:	4619      	mov	r1, r3
 800c1fe:	4610      	mov	r0, r2
 800c200:	f7fe f816 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    ipAddress.setPosition(0, 0, 320, 26);
 800c204:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c208:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c20c:	681b      	ldr	r3, [r3, #0]
 800c20e:	f503 7039 	add.w	r0, r3, #740	@ 0x2e4
 800c212:	231a      	movs	r3, #26
 800c214:	9300      	str	r3, [sp, #0]
 800c216:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800c21a:	2200      	movs	r2, #0
 800c21c:	2100      	movs	r1, #0
 800c21e:	f7fd fe37 	bl	8009e90 <_ZN8touchgfx8Drawable11setPositionEssss>
    ipAddress.setColor(touchgfx::Color::getColorFromRGB(245, 237, 237));
 800c222:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c226:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c22a:	681b      	ldr	r3, [r3, #0]
 800c22c:	f503 7439 	add.w	r4, r3, #740	@ 0x2e4
 800c230:	23f5      	movs	r3, #245	@ 0xf5
 800c232:	f887 3107 	strb.w	r3, [r7, #263]	@ 0x107
 800c236:	23ed      	movs	r3, #237	@ 0xed
 800c238:	f887 3106 	strb.w	r3, [r7, #262]	@ 0x106
 800c23c:	23ed      	movs	r3, #237	@ 0xed
 800c23e:	f887 3105 	strb.w	r3, [r7, #261]	@ 0x105
 800c242:	f897 3107 	ldrb.w	r3, [r7, #263]	@ 0x107
 800c246:	041a      	lsls	r2, r3, #16
 800c248:	f897 3106 	ldrb.w	r3, [r7, #262]	@ 0x106
 800c24c:	021b      	lsls	r3, r3, #8
 800c24e:	431a      	orrs	r2, r3
 800c250:	f897 3105 	ldrb.w	r3, [r7, #261]	@ 0x105
 800c254:	4313      	orrs	r3, r2
 800c256:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c25a:	f107 03bc 	add.w	r3, r7, #188	@ 0xbc
 800c25e:	4611      	mov	r1, r2
 800c260:	4618      	mov	r0, r3
 800c262:	f7fd fd45 	bl	8009cf0 <_ZN8touchgfx9colortypeC1Em>
 800c266:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 800c26a:	f8c7 4108 	str.w	r4, [r7, #264]	@ 0x108
 800c26e:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800c270:	f8d7 3108 	ldr.w	r3, [r7, #264]	@ 0x108
 800c274:	69fa      	ldr	r2, [r7, #28]
 800c276:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c278:	bf00      	nop
    ipAddress.setLinespacing(0);
 800c27a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c27e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c282:	681b      	ldr	r3, [r3, #0]
 800c284:	f503 7339 	add.w	r3, r3, #740	@ 0x2e4
 800c288:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
 800c28c:	2300      	movs	r3, #0
 800c28e:	f8a7 310e 	strh.w	r3, [r7, #270]	@ 0x10e
        linespace = space;
 800c292:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 800c296:	f8b7 210e 	ldrh.w	r2, [r7, #270]	@ 0x10e
 800c29a:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c29c:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 800c2a0:	681b      	ldr	r3, [r3, #0]
 800c2a2:	3384      	adds	r3, #132	@ 0x84
 800c2a4:	681b      	ldr	r3, [r3, #0]
 800c2a6:	f8d7 4110 	ldr.w	r4, [r7, #272]	@ 0x110
 800c2aa:	463a      	mov	r2, r7
 800c2ac:	f8d7 1110 	ldr.w	r1, [r7, #272]	@ 0x110
 800c2b0:	4610      	mov	r0, r2
 800c2b2:	4798      	blx	r3
 800c2b4:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c2b8:	f5a3 728c 	sub.w	r2, r3, #280	@ 0x118
 800c2bc:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c2c0:	ca07      	ldmia	r2, {r0, r1, r2}
 800c2c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c2c6:	bf00      	nop
    Unicode::snprintf(ipAddressBuffer, IPADDRESS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WZ1X).getText());
 800c2c8:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c2cc:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c2d0:	681b      	ldr	r3, [r3, #0]
 800c2d2:	f503 744c 	add.w	r4, r3, #816	@ 0x330
 800c2d6:	f107 03ac 	add.w	r3, r7, #172	@ 0xac
 800c2da:	2100      	movs	r1, #0
 800c2dc:	4618      	mov	r0, r3
 800c2de:	f7fe f875 	bl	800a3cc <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800c2e2:	4b3c      	ldr	r3, [pc, #240]	@ (800c3d4 <_ZN16SettingsViewBaseC1Ev+0xb9c>)
 800c2e4:	681b      	ldr	r3, [r3, #0]
 800c2e6:	2b00      	cmp	r3, #0
 800c2e8:	d105      	bne.n	800c2f6 <_ZN16SettingsViewBaseC1Ev+0xabe>
 800c2ea:	4b3b      	ldr	r3, [pc, #236]	@ (800c3d8 <_ZN16SettingsViewBaseC1Ev+0xba0>)
 800c2ec:	4a3b      	ldr	r2, [pc, #236]	@ (800c3dc <_ZN16SettingsViewBaseC1Ev+0xba4>)
 800c2ee:	2160      	movs	r1, #96	@ 0x60
 800c2f0:	483b      	ldr	r0, [pc, #236]	@ (800c3e0 <_ZN16SettingsViewBaseC1Ev+0xba8>)
 800c2f2:	f017 ffbf 	bl	8024274 <__assert_func>
 800c2f6:	f107 03ac 	add.w	r3, r7, #172	@ 0xac
 800c2fa:	f8c7 3114 	str.w	r3, [r7, #276]	@ 0x114
        return typedTextId < numberOfTypedTexts;
 800c2fe:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800c302:	889a      	ldrh	r2, [r3, #4]
 800c304:	4b37      	ldr	r3, [pc, #220]	@ (800c3e4 <_ZN16SettingsViewBaseC1Ev+0xbac>)
 800c306:	881b      	ldrh	r3, [r3, #0]
 800c308:	429a      	cmp	r2, r3
 800c30a:	bf34      	ite	cc
 800c30c:	2301      	movcc	r3, #1
 800c30e:	2300      	movcs	r3, #0
 800c310:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800c312:	2b00      	cmp	r3, #0
 800c314:	d105      	bne.n	800c322 <_ZN16SettingsViewBaseC1Ev+0xaea>
 800c316:	4b34      	ldr	r3, [pc, #208]	@ (800c3e8 <_ZN16SettingsViewBaseC1Ev+0xbb0>)
 800c318:	4a30      	ldr	r2, [pc, #192]	@ (800c3dc <_ZN16SettingsViewBaseC1Ev+0xba4>)
 800c31a:	2161      	movs	r1, #97	@ 0x61
 800c31c:	4830      	ldr	r0, [pc, #192]	@ (800c3e0 <_ZN16SettingsViewBaseC1Ev+0xba8>)
 800c31e:	f017 ffa9 	bl	8024274 <__assert_func>
        return texts->getText(typedTextId);
 800c322:	4b32      	ldr	r3, [pc, #200]	@ (800c3ec <_ZN16SettingsViewBaseC1Ev+0xbb4>)
 800c324:	681b      	ldr	r3, [r3, #0]
 800c326:	f8b7 20b0 	ldrh.w	r2, [r7, #176]	@ 0xb0
 800c32a:	4611      	mov	r1, r2
 800c32c:	4618      	mov	r0, r3
 800c32e:	f000 fe41 	bl	800cfb4 <_ZNK8touchgfx5Texts7getTextEt>
 800c332:	4603      	mov	r3, r0
 800c334:	bf00      	nop
 800c336:	4a2e      	ldr	r2, [pc, #184]	@ (800c3f0 <_ZN16SettingsViewBaseC1Ev+0xbb8>)
 800c338:	2114      	movs	r1, #20
 800c33a:	4620      	mov	r0, r4
 800c33c:	f009 fe5a 	bl	8015ff4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800c340:	f107 03ac 	add.w	r3, r7, #172	@ 0xac
 800c344:	4618      	mov	r0, r3
 800c346:	f7fc fbfb 	bl	8008b40 <_ZN8touchgfx9TypedTextD1Ev>
    ipAddress.setWildcard(ipAddressBuffer);
 800c34a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c34e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c352:	681b      	ldr	r3, [r3, #0]
 800c354:	f503 7239 	add.w	r2, r3, #740	@ 0x2e4
 800c358:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c35c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c360:	681b      	ldr	r3, [r3, #0]
 800c362:	f503 734c 	add.w	r3, r3, #816	@ 0x330
 800c366:	4619      	mov	r1, r3
 800c368:	4610      	mov	r0, r2
 800c36a:	f7fe fa27 	bl	800a7bc <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    ipAddress.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZQAT));
 800c36e:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c372:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c376:	681b      	ldr	r3, [r3, #0]
 800c378:	f503 7439 	add.w	r4, r3, #740	@ 0x2e4
 800c37c:	f107 03b4 	add.w	r3, r7, #180	@ 0xb4
 800c380:	2101      	movs	r1, #1
 800c382:	4618      	mov	r0, r3
 800c384:	f7fe f822 	bl	800a3cc <_ZN8touchgfx9TypedTextC1Et>
 800c388:	f107 03b4 	add.w	r3, r7, #180	@ 0xb4
 800c38c:	4619      	mov	r1, r3
 800c38e:	4620      	mov	r0, r4
 800c390:	f004 fdb0 	bl	8010ef4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c394:	f107 03b4 	add.w	r3, r7, #180	@ 0xb4
 800c398:	4618      	mov	r0, r3
 800c39a:	f7fc fbd1 	bl	8008b40 <_ZN8touchgfx9TypedTextD1Ev>
    add(ipAddress);
 800c39e:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c3a2:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c3a6:	681a      	ldr	r2, [r3, #0]
 800c3a8:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c3ac:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c3b0:	681b      	ldr	r3, [r3, #0]
 800c3b2:	f503 7339 	add.w	r3, r3, #740	@ 0x2e4
 800c3b6:	4619      	mov	r1, r3
 800c3b8:	4610      	mov	r0, r2
 800c3ba:	f7fd ff39 	bl	800a230 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800c3be:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800c3c2:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800c3c6:	681b      	ldr	r3, [r3, #0]
 800c3c8:	4618      	mov	r0, r3
 800c3ca:	f507 778e 	add.w	r7, r7, #284	@ 0x11c
 800c3ce:	46bd      	mov	sp, r7
 800c3d0:	bd90      	pop	{r4, r7, pc}
 800c3d2:	bf00      	nop
 800c3d4:	200023f8 	.word	0x200023f8
 800c3d8:	08027a30 	.word	0x08027a30
 800c3dc:	08027b34 	.word	0x08027b34
 800c3e0:	08027ab0 	.word	0x08027ab0
 800c3e4:	200023fc 	.word	0x200023fc
 800c3e8:	08027af4 	.word	0x08027af4
 800c3ec:	20002404 	.word	0x20002404
 800c3f0:	08027b80 	.word	0x08027b80

0800c3f4 <_ZN16SettingsViewBaseD1Ev>:

SettingsViewBase::~SettingsViewBase()
 800c3f4:	b580      	push	{r7, lr}
 800c3f6:	b082      	sub	sp, #8
 800c3f8:	af00      	add	r7, sp, #0
 800c3fa:	6078      	str	r0, [r7, #4]
 800c3fc:	4a2d      	ldr	r2, [pc, #180]	@ (800c4b4 <_ZN16SettingsViewBaseD1Ev+0xc0>)
 800c3fe:	687b      	ldr	r3, [r7, #4]
 800c400:	601a      	str	r2, [r3, #0]
{

}
 800c402:	687b      	ldr	r3, [r7, #4]
 800c404:	f503 735a 	add.w	r3, r3, #872	@ 0x368
 800c408:	4618      	mov	r0, r3
 800c40a:	f000 fa79 	bl	800c900 <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800c40e:	687b      	ldr	r3, [r7, #4]
 800c410:	f503 7356 	add.w	r3, r3, #856	@ 0x358
 800c414:	4618      	mov	r0, r3
 800c416:	f000 fa73 	bl	800c900 <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800c41a:	687b      	ldr	r3, [r7, #4]
 800c41c:	f503 7339 	add.w	r3, r3, #740	@ 0x2e4
 800c420:	4618      	mov	r0, r3
 800c422:	f7ff f859 	bl	800b4d8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800c426:	687b      	ldr	r3, [r7, #4]
 800c428:	f503 7327 	add.w	r3, r3, #668	@ 0x29c
 800c42c:	4618      	mov	r0, r3
 800c42e:	f7fe f921 	bl	800a674 <_ZN8touchgfx8TextAreaD1Ev>
 800c432:	687b      	ldr	r3, [r7, #4]
 800c434:	f503 7315 	add.w	r3, r3, #596	@ 0x254
 800c438:	4618      	mov	r0, r3
 800c43a:	f7fe f91b 	bl	800a674 <_ZN8touchgfx8TextAreaD1Ev>
 800c43e:	687b      	ldr	r3, [r7, #4]
 800c440:	f503 7303 	add.w	r3, r3, #524	@ 0x20c
 800c444:	4618      	mov	r0, r3
 800c446:	f7fe f915 	bl	800a674 <_ZN8touchgfx8TextAreaD1Ev>
 800c44a:	687b      	ldr	r3, [r7, #4]
 800c44c:	f503 73e6 	add.w	r3, r3, #460	@ 0x1cc
 800c450:	4618      	mov	r0, r3
 800c452:	f000 fabb 	bl	800c9cc <_ZN8touchgfx11RadioButtonD1Ev>
 800c456:	687b      	ldr	r3, [r7, #4]
 800c458:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800c45c:	4618      	mov	r0, r3
 800c45e:	f000 fab5 	bl	800c9cc <_ZN8touchgfx11RadioButtonD1Ev>
 800c462:	687b      	ldr	r3, [r7, #4]
 800c464:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800c468:	4618      	mov	r0, r3
 800c46a:	f000 faaf 	bl	800c9cc <_ZN8touchgfx11RadioButtonD1Ev>
 800c46e:	687b      	ldr	r3, [r7, #4]
 800c470:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 800c474:	4618      	mov	r0, r3
 800c476:	f000 f8f3 	bl	800c660 <_ZN8touchgfx16RadioButtonGroupILt3EED1Ev>
 800c47a:	687b      	ldr	r3, [r7, #4]
 800c47c:	33d4      	adds	r3, #212	@ 0xd4
 800c47e:	4618      	mov	r0, r3
 800c480:	f000 fa82 	bl	800c988 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800c484:	687b      	ldr	r3, [r7, #4]
 800c486:	3398      	adds	r3, #152	@ 0x98
 800c488:	4618      	mov	r0, r3
 800c48a:	f000 fa7d 	bl	800c988 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800c48e:	687b      	ldr	r3, [r7, #4]
 800c490:	336c      	adds	r3, #108	@ 0x6c
 800c492:	4618      	mov	r0, r3
 800c494:	f7fe fa70 	bl	800a978 <_ZN8touchgfx5ImageD1Ev>
 800c498:	687b      	ldr	r3, [r7, #4]
 800c49a:	3340      	adds	r3, #64	@ 0x40
 800c49c:	4618      	mov	r0, r3
 800c49e:	f7fe fa8d 	bl	800a9bc <_ZN8touchgfx3BoxD1Ev>
 800c4a2:	687b      	ldr	r3, [r7, #4]
 800c4a4:	4618      	mov	r0, r3
 800c4a6:	f7ff f9a5 	bl	800b7f4 <_ZN8touchgfx4ViewI17SettingsPresenterED1Ev>
 800c4aa:	687b      	ldr	r3, [r7, #4]
 800c4ac:	4618      	mov	r0, r3
 800c4ae:	3708      	adds	r7, #8
 800c4b0:	46bd      	mov	sp, r7
 800c4b2:	bd80      	pop	{r7, pc}
 800c4b4:	08028e64 	.word	0x08028e64

0800c4b8 <_ZN16SettingsViewBaseD0Ev>:
SettingsViewBase::~SettingsViewBase()
 800c4b8:	b580      	push	{r7, lr}
 800c4ba:	b082      	sub	sp, #8
 800c4bc:	af00      	add	r7, sp, #0
 800c4be:	6078      	str	r0, [r7, #4]
}
 800c4c0:	6878      	ldr	r0, [r7, #4]
 800c4c2:	f7ff ff97 	bl	800c3f4 <_ZN16SettingsViewBaseD1Ev>
 800c4c6:	f44f 715e 	mov.w	r1, #888	@ 0x378
 800c4ca:	6878      	ldr	r0, [r7, #4]
 800c4cc:	f017 fca3 	bl	8023e16 <_ZdlPvj>
 800c4d0:	687b      	ldr	r3, [r7, #4]
 800c4d2:	4618      	mov	r0, r3
 800c4d4:	3708      	adds	r7, #8
 800c4d6:	46bd      	mov	sp, r7
 800c4d8:	bd80      	pop	{r7, pc}

0800c4da <_ZN16SettingsViewBase11setupScreenEv>:

void SettingsViewBase::setupScreen()
{
 800c4da:	b480      	push	{r7}
 800c4dc:	b083      	sub	sp, #12
 800c4de:	af00      	add	r7, sp, #0
 800c4e0:	6078      	str	r0, [r7, #4]

}
 800c4e2:	bf00      	nop
 800c4e4:	370c      	adds	r7, #12
 800c4e6:	46bd      	mov	sp, r7
 800c4e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4ec:	4770      	bx	lr

0800c4ee <_ZN16SettingsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void SettingsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800c4ee:	b580      	push	{r7, lr}
 800c4f0:	b082      	sub	sp, #8
 800c4f2:	af00      	add	r7, sp, #0
 800c4f4:	6078      	str	r0, [r7, #4]
 800c4f6:	6039      	str	r1, [r7, #0]
    if (&src == &cancelButton)
 800c4f8:	687b      	ldr	r3, [r7, #4]
 800c4fa:	3398      	adds	r3, #152	@ 0x98
 800c4fc:	683a      	ldr	r2, [r7, #0]
 800c4fe:	429a      	cmp	r2, r3
 800c500:	d106      	bne.n	800c510 <_ZN16SettingsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //cancelInteraction
        //When cancelButton clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
 800c502:	6878      	ldr	r0, [r7, #4]
 800c504:	f7ff f96a 	bl	800b7dc <_ZN16SettingsViewBase11applicationEv>
 800c508:	4603      	mov	r3, r0
 800c50a:	4618      	mov	r0, r3
 800c50c:	f7fc ffc0 	bl	8009490 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
}
 800c510:	bf00      	nop
 800c512:	3708      	adds	r7, #8
 800c514:	46bd      	mov	sp, r7
 800c516:	bd80      	pop	{r7, pc}

0800c518 <_ZN16SettingsViewBase34radioButtonSelectedCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void SettingsViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
 800c518:	b580      	push	{r7, lr}
 800c51a:	b082      	sub	sp, #8
 800c51c:	af00      	add	r7, sp, #0
 800c51e:	6078      	str	r0, [r7, #4]
 800c520:	6039      	str	r1, [r7, #0]
    if (&src == &piperButton)
 800c522:	687b      	ldr	r3, [r7, #4]
 800c524:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800c528:	683a      	ldr	r2, [r7, #0]
 800c52a:	429a      	cmp	r2, r3
 800c52c:	d105      	bne.n	800c53a <_ZN16SettingsViewBase34radioButtonSelectedCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //piperInteraction
        //When piperButton selected execute C++ code
        //Execute C++ code
        presenter->changeWifi('P');
 800c52e:	687b      	ldr	r3, [r7, #4]
 800c530:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c532:	2150      	movs	r1, #80	@ 0x50
 800c534:	4618      	mov	r0, r3
 800c536:	f001 f912 	bl	800d75e <_ZN17SettingsPresenter10changeWifiEc>
    }
    if (&src == &bakeryButton)
 800c53a:	687b      	ldr	r3, [r7, #4]
 800c53c:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800c540:	683a      	ldr	r2, [r7, #0]
 800c542:	429a      	cmp	r2, r3
 800c544:	d105      	bne.n	800c552 <_ZN16SettingsViewBase34radioButtonSelectedCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //bakeryInteraction
        //When bakeryButton selected execute C++ code
        //Execute C++ code
        presenter->changeWifi('B');
 800c546:	687b      	ldr	r3, [r7, #4]
 800c548:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c54a:	2142      	movs	r1, #66	@ 0x42
 800c54c:	4618      	mov	r0, r3
 800c54e:	f001 f906 	bl	800d75e <_ZN17SettingsPresenter10changeWifiEc>
    }
    if (&src == &iotButton)
 800c552:	687b      	ldr	r3, [r7, #4]
 800c554:	f503 73e6 	add.w	r3, r3, #460	@ 0x1cc
 800c558:	683a      	ldr	r2, [r7, #0]
 800c55a:	429a      	cmp	r2, r3
 800c55c:	d105      	bne.n	800c56a <_ZN16SettingsViewBase34radioButtonSelectedCallbackHandlerERKN8touchgfx14AbstractButtonE+0x52>
    {
        //iotInteraction
        //When iotButton selected execute C++ code
        //Execute C++ code
        presenter->changeWifi('I');
 800c55e:	687b      	ldr	r3, [r7, #4]
 800c560:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c562:	2149      	movs	r1, #73	@ 0x49
 800c564:	4618      	mov	r0, r3
 800c566:	f001 f8fa 	bl	800d75e <_ZN17SettingsPresenter10changeWifiEc>
    }
}
 800c56a:	bf00      	nop
 800c56c:	3708      	adds	r7, #8
 800c56e:	46bd      	mov	sp, r7
 800c570:	bd80      	pop	{r7, pc}
	...

0800c574 <_ZN8touchgfx4ViewI17SettingsPresenterEC1Ev>:
    View()
 800c574:	b580      	push	{r7, lr}
 800c576:	b082      	sub	sp, #8
 800c578:	af00      	add	r7, sp, #0
 800c57a:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800c57c:	687b      	ldr	r3, [r7, #4]
 800c57e:	4618      	mov	r0, r3
 800c580:	f008 f8a8 	bl	80146d4 <_ZN8touchgfx6ScreenC1Ev>
 800c584:	4a05      	ldr	r2, [pc, #20]	@ (800c59c <_ZN8touchgfx4ViewI17SettingsPresenterEC1Ev+0x28>)
 800c586:	687b      	ldr	r3, [r7, #4]
 800c588:	601a      	str	r2, [r3, #0]
 800c58a:	687b      	ldr	r3, [r7, #4]
 800c58c:	2200      	movs	r2, #0
 800c58e:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800c590:	687b      	ldr	r3, [r7, #4]
 800c592:	4618      	mov	r0, r3
 800c594:	3708      	adds	r7, #8
 800c596:	46bd      	mov	sp, r7
 800c598:	bd80      	pop	{r7, pc}
 800c59a:	bf00      	nop
 800c59c:	08028efc 	.word	0x08028efc

0800c5a0 <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800c5a0:	b580      	push	{r7, lr}
 800c5a2:	b082      	sub	sp, #8
 800c5a4:	af00      	add	r7, sp, #0
 800c5a6:	6078      	str	r0, [r7, #4]
 800c5a8:	4a05      	ldr	r2, [pc, #20]	@ (800c5c0 <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvED1Ev+0x20>)
 800c5aa:	687b      	ldr	r3, [r7, #4]
 800c5ac:	601a      	str	r2, [r3, #0]
 800c5ae:	687b      	ldr	r3, [r7, #4]
 800c5b0:	4618      	mov	r0, r3
 800c5b2:	f000 f985 	bl	800c8c0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800c5b6:	687b      	ldr	r3, [r7, #4]
 800c5b8:	4618      	mov	r0, r3
 800c5ba:	3708      	adds	r7, #8
 800c5bc:	46bd      	mov	sp, r7
 800c5be:	bd80      	pop	{r7, pc}
 800c5c0:	08028ee4 	.word	0x08028ee4

0800c5c4 <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvED0Ev>:
 800c5c4:	b580      	push	{r7, lr}
 800c5c6:	b082      	sub	sp, #8
 800c5c8:	af00      	add	r7, sp, #0
 800c5ca:	6078      	str	r0, [r7, #4]
 800c5cc:	6878      	ldr	r0, [r7, #4]
 800c5ce:	f7ff ffe7 	bl	800c5a0 <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvED1Ev>
 800c5d2:	2110      	movs	r1, #16
 800c5d4:	6878      	ldr	r0, [r7, #4]
 800c5d6:	f017 fc1e 	bl	8023e16 <_ZdlPvj>
 800c5da:	687b      	ldr	r3, [r7, #4]
 800c5dc:	4618      	mov	r0, r3
 800c5de:	3708      	adds	r7, #8
 800c5e0:	46bd      	mov	sp, r7
 800c5e2:	bd80      	pop	{r7, pc}

0800c5e4 <_ZN8touchgfx16RadioButtonGroupILt3EEC1Ev>:
template <uint16_t CAPACITY>
class RadioButtonGroup
{
public:
    /** Initializes a new instance of the RadioButtonGroup class. */
    RadioButtonGroup()
 800c5e4:	b590      	push	{r4, r7, lr}
 800c5e6:	b087      	sub	sp, #28
 800c5e8:	af00      	add	r7, sp, #0
 800c5ea:	6078      	str	r0, [r7, #4]
        : size(0),
          radioButtonClicked(this, &RadioButtonGroup::radioButtonClickedHandler),
          radioButtonUnselected(this, &RadioButtonGroup::radioButtonDeselectedHandler),
          radioButtonSelectedCallback(0),
          radioButtonDeselectedCallback(0)
 800c5ec:	4a19      	ldr	r2, [pc, #100]	@ (800c654 <_ZN8touchgfx16RadioButtonGroupILt3EEC1Ev+0x70>)
 800c5ee:	687b      	ldr	r3, [r7, #4]
 800c5f0:	601a      	str	r2, [r3, #0]
        : size(0),
 800c5f2:	687b      	ldr	r3, [r7, #4]
 800c5f4:	2200      	movs	r2, #0
 800c5f6:	821a      	strh	r2, [r3, #16]
          radioButtonClicked(this, &RadioButtonGroup::radioButtonClickedHandler),
 800c5f8:	687b      	ldr	r3, [r7, #4]
 800c5fa:	f103 0414 	add.w	r4, r3, #20
 800c5fe:	4a16      	ldr	r2, [pc, #88]	@ (800c658 <_ZN8touchgfx16RadioButtonGroupILt3EEC1Ev+0x74>)
 800c600:	f107 0308 	add.w	r3, r7, #8
 800c604:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c608:	e883 0003 	stmia.w	r3, {r0, r1}
 800c60c:	f107 0308 	add.w	r3, r7, #8
 800c610:	cb0c      	ldmia	r3, {r2, r3}
 800c612:	6879      	ldr	r1, [r7, #4]
 800c614:	4620      	mov	r0, r4
 800c616:	f000 f933 	bl	800c880 <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvEC1EPS2_MS2_FvS5_E>
          radioButtonUnselected(this, &RadioButtonGroup::radioButtonDeselectedHandler),
 800c61a:	687b      	ldr	r3, [r7, #4]
 800c61c:	f103 0424 	add.w	r4, r3, #36	@ 0x24
 800c620:	4a0e      	ldr	r2, [pc, #56]	@ (800c65c <_ZN8touchgfx16RadioButtonGroupILt3EEC1Ev+0x78>)
 800c622:	f107 0310 	add.w	r3, r7, #16
 800c626:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c62a:	e883 0003 	stmia.w	r3, {r0, r1}
 800c62e:	f107 0310 	add.w	r3, r7, #16
 800c632:	cb0c      	ldmia	r3, {r2, r3}
 800c634:	6879      	ldr	r1, [r7, #4]
 800c636:	4620      	mov	r0, r4
 800c638:	f000 f922 	bl	800c880 <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvEC1EPS2_MS2_FvS5_E>
          radioButtonSelectedCallback(0),
 800c63c:	687b      	ldr	r3, [r7, #4]
 800c63e:	2200      	movs	r2, #0
 800c640:	635a      	str	r2, [r3, #52]	@ 0x34
          radioButtonDeselectedCallback(0)
 800c642:	687b      	ldr	r3, [r7, #4]
 800c644:	2200      	movs	r2, #0
 800c646:	639a      	str	r2, [r3, #56]	@ 0x38
    {
    }
 800c648:	687b      	ldr	r3, [r7, #4]
 800c64a:	4618      	mov	r0, r3
 800c64c:	371c      	adds	r7, #28
 800c64e:	46bd      	mov	sp, r7
 800c650:	bd90      	pop	{r4, r7, pc}
 800c652:	bf00      	nop
 800c654:	08028eb0 	.word	0x08028eb0
 800c658:	08027b84 	.word	0x08027b84
 800c65c:	08027b8c 	.word	0x08027b8c

0800c660 <_ZN8touchgfx16RadioButtonGroupILt3EED1Ev>:

    /** Finalizes an instance of the RadioButtonGroup class. */
    virtual ~RadioButtonGroup()
 800c660:	b580      	push	{r7, lr}
 800c662:	b082      	sub	sp, #8
 800c664:	af00      	add	r7, sp, #0
 800c666:	6078      	str	r0, [r7, #4]
    {
    }
 800c668:	4a08      	ldr	r2, [pc, #32]	@ (800c68c <_ZN8touchgfx16RadioButtonGroupILt3EED1Ev+0x2c>)
 800c66a:	687b      	ldr	r3, [r7, #4]
 800c66c:	601a      	str	r2, [r3, #0]
 800c66e:	687b      	ldr	r3, [r7, #4]
 800c670:	3324      	adds	r3, #36	@ 0x24
 800c672:	4618      	mov	r0, r3
 800c674:	f7ff ff94 	bl	800c5a0 <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvED1Ev>
 800c678:	687b      	ldr	r3, [r7, #4]
 800c67a:	3314      	adds	r3, #20
 800c67c:	4618      	mov	r0, r3
 800c67e:	f7ff ff8f 	bl	800c5a0 <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvED1Ev>
 800c682:	687b      	ldr	r3, [r7, #4]
 800c684:	4618      	mov	r0, r3
 800c686:	3708      	adds	r7, #8
 800c688:	46bd      	mov	sp, r7
 800c68a:	bd80      	pop	{r7, pc}
 800c68c:	08028eb0 	.word	0x08028eb0

0800c690 <_ZN8touchgfx16RadioButtonGroupILt3EED0Ev>:
    virtual ~RadioButtonGroup()
 800c690:	b580      	push	{r7, lr}
 800c692:	b082      	sub	sp, #8
 800c694:	af00      	add	r7, sp, #0
 800c696:	6078      	str	r0, [r7, #4]
    }
 800c698:	6878      	ldr	r0, [r7, #4]
 800c69a:	f7ff ffe1 	bl	800c660 <_ZN8touchgfx16RadioButtonGroupILt3EED1Ev>
 800c69e:	213c      	movs	r1, #60	@ 0x3c
 800c6a0:	6878      	ldr	r0, [r7, #4]
 800c6a2:	f017 fbb8 	bl	8023e16 <_ZdlPvj>
 800c6a6:	687b      	ldr	r3, [r7, #4]
 800c6a8:	4618      	mov	r0, r3
 800c6aa:	3708      	adds	r7, #8
 800c6ac:	46bd      	mov	sp, r7
 800c6ae:	bd80      	pop	{r7, pc}

0800c6b0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800c6b0:	b480      	push	{r7}
 800c6b2:	b083      	sub	sp, #12
 800c6b4:	af00      	add	r7, sp, #0
 800c6b6:	6078      	str	r0, [r7, #4]
 800c6b8:	4a04      	ldr	r2, [pc, #16]	@ (800c6cc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800c6ba:	687b      	ldr	r3, [r7, #4]
 800c6bc:	601a      	str	r2, [r3, #0]
 800c6be:	687b      	ldr	r3, [r7, #4]
 800c6c0:	4618      	mov	r0, r3
 800c6c2:	370c      	adds	r7, #12
 800c6c4:	46bd      	mov	sp, r7
 800c6c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6ca:	4770      	bx	lr
 800c6cc:	08028f30 	.word	0x08028f30

0800c6d0 <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800c6d0:	b580      	push	{r7, lr}
 800c6d2:	b084      	sub	sp, #16
 800c6d4:	af00      	add	r7, sp, #0
 800c6d6:	60f8      	str	r0, [r7, #12]
 800c6d8:	60b9      	str	r1, [r7, #8]
 800c6da:	4639      	mov	r1, r7
 800c6dc:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800c6e0:	68fb      	ldr	r3, [r7, #12]
 800c6e2:	4618      	mov	r0, r3
 800c6e4:	f7ff ffe4 	bl	800c6b0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800c6e8:	4a08      	ldr	r2, [pc, #32]	@ (800c70c <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800c6ea:	68fb      	ldr	r3, [r7, #12]
 800c6ec:	601a      	str	r2, [r3, #0]
 800c6ee:	68fb      	ldr	r3, [r7, #12]
 800c6f0:	68ba      	ldr	r2, [r7, #8]
 800c6f2:	605a      	str	r2, [r3, #4]
 800c6f4:	68fb      	ldr	r3, [r7, #12]
 800c6f6:	3308      	adds	r3, #8
 800c6f8:	463a      	mov	r2, r7
 800c6fa:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c6fe:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800c702:	68fb      	ldr	r3, [r7, #12]
 800c704:	4618      	mov	r0, r3
 800c706:	3710      	adds	r7, #16
 800c708:	46bd      	mov	sp, r7
 800c70a:	bd80      	pop	{r7, pc}
 800c70c:	08028e98 	.word	0x08028e98

0800c710 <_ZN8touchgfx16RadioButtonGroupILt3EE29setRadioButtonSelectedHandlerERNS_15GenericCallbackIRKNS_14AbstractButtonEvvEE>:
     * @param  callback The callback to be executed. The callback will be given a reference
     *                  to the RadioButton that was selected.
     *
     * @see GenericCallback
     */
    void setRadioButtonSelectedHandler(GenericCallback<const AbstractButton&>& callback)
 800c710:	b480      	push	{r7}
 800c712:	b083      	sub	sp, #12
 800c714:	af00      	add	r7, sp, #0
 800c716:	6078      	str	r0, [r7, #4]
 800c718:	6039      	str	r1, [r7, #0]
    {
        radioButtonSelectedCallback = &callback;
 800c71a:	687b      	ldr	r3, [r7, #4]
 800c71c:	683a      	ldr	r2, [r7, #0]
 800c71e:	635a      	str	r2, [r3, #52]	@ 0x34
    }
 800c720:	bf00      	nop
 800c722:	370c      	adds	r7, #12
 800c724:	46bd      	mov	sp, r7
 800c726:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c72a:	4770      	bx	lr

0800c72c <_ZN8touchgfx16RadioButtonGroupILt3EE3addERNS_11RadioButtonE>:
    virtual void add(RadioButton& radioButton)
 800c72c:	b580      	push	{r7, lr}
 800c72e:	b082      	sub	sp, #8
 800c730:	af00      	add	r7, sp, #0
 800c732:	6078      	str	r0, [r7, #4]
 800c734:	6039      	str	r1, [r7, #0]
        assert(size < CAPACITY && "RadioButtonGroup capacity exceeded!");
 800c736:	687b      	ldr	r3, [r7, #4]
 800c738:	8a1b      	ldrh	r3, [r3, #16]
 800c73a:	2b02      	cmp	r3, #2
 800c73c:	d905      	bls.n	800c74a <_ZN8touchgfx16RadioButtonGroupILt3EE3addERNS_11RadioButtonE+0x1e>
 800c73e:	4b11      	ldr	r3, [pc, #68]	@ (800c784 <_ZN8touchgfx16RadioButtonGroupILt3EE3addERNS_11RadioButtonE+0x58>)
 800c740:	4a11      	ldr	r2, [pc, #68]	@ (800c788 <_ZN8touchgfx16RadioButtonGroupILt3EE3addERNS_11RadioButtonE+0x5c>)
 800c742:	2141      	movs	r1, #65	@ 0x41
 800c744:	4811      	ldr	r0, [pc, #68]	@ (800c78c <_ZN8touchgfx16RadioButtonGroupILt3EE3addERNS_11RadioButtonE+0x60>)
 800c746:	f017 fd95 	bl	8024274 <__assert_func>
        radioButton.setAction(radioButtonClicked);
 800c74a:	683a      	ldr	r2, [r7, #0]
 800c74c:	687b      	ldr	r3, [r7, #4]
 800c74e:	3314      	adds	r3, #20
 800c750:	4619      	mov	r1, r3
 800c752:	4610      	mov	r0, r2
 800c754:	f7fe ff66 	bl	800b624 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
        radioButton.setDeselectedAction(radioButtonUnselected);
 800c758:	687b      	ldr	r3, [r7, #4]
 800c75a:	3324      	adds	r3, #36	@ 0x24
 800c75c:	4619      	mov	r1, r3
 800c75e:	6838      	ldr	r0, [r7, #0]
 800c760:	f7ff f804 	bl	800b76c <_ZN8touchgfx11RadioButton19setDeselectedActionERNS_15GenericCallbackIRKNS_14AbstractButtonEvvEE>
        radioButtons[size++] = &radioButton;
 800c764:	687b      	ldr	r3, [r7, #4]
 800c766:	8a1b      	ldrh	r3, [r3, #16]
 800c768:	1c5a      	adds	r2, r3, #1
 800c76a:	b291      	uxth	r1, r2
 800c76c:	687a      	ldr	r2, [r7, #4]
 800c76e:	8211      	strh	r1, [r2, #16]
 800c770:	687a      	ldr	r2, [r7, #4]
 800c772:	009b      	lsls	r3, r3, #2
 800c774:	4413      	add	r3, r2
 800c776:	683a      	ldr	r2, [r7, #0]
 800c778:	605a      	str	r2, [r3, #4]
    }
 800c77a:	bf00      	nop
 800c77c:	3708      	adds	r7, #8
 800c77e:	46bd      	mov	sp, r7
 800c780:	bd80      	pop	{r7, pc}
 800c782:	bf00      	nop
 800c784:	08027b94 	.word	0x08027b94
 800c788:	08027bd0 	.word	0x08027bd0
 800c78c:	08027c40 	.word	0x08027c40

0800c790 <_ZN8touchgfx16RadioButtonGroupILt3EE25radioButtonClickedHandlerERKNS_14AbstractButtonE>:
     * Handles the event that a RadioButton has been selected. deselects all other
     * RadioButtons.
     *
     * @param  radioButton the RadioButton that has been selected.
     */
    virtual void radioButtonClickedHandler(const AbstractButton& radioButton)
 800c790:	b580      	push	{r7, lr}
 800c792:	b084      	sub	sp, #16
 800c794:	af00      	add	r7, sp, #0
 800c796:	6078      	str	r0, [r7, #4]
 800c798:	6039      	str	r1, [r7, #0]
    {
        // Deselect other radio buttons
        for (uint16_t i = 0; i < size; i++)
 800c79a:	2300      	movs	r3, #0
 800c79c:	81fb      	strh	r3, [r7, #14]
 800c79e:	e01e      	b.n	800c7de <_ZN8touchgfx16RadioButtonGroupILt3EE25radioButtonClickedHandlerERKNS_14AbstractButtonE+0x4e>
        {
            if (radioButtons[i] != &radioButton)
 800c7a0:	89fb      	ldrh	r3, [r7, #14]
 800c7a2:	687a      	ldr	r2, [r7, #4]
 800c7a4:	009b      	lsls	r3, r3, #2
 800c7a6:	4413      	add	r3, r2
 800c7a8:	685b      	ldr	r3, [r3, #4]
 800c7aa:	683a      	ldr	r2, [r7, #0]
 800c7ac:	429a      	cmp	r2, r3
 800c7ae:	d013      	beq.n	800c7d8 <_ZN8touchgfx16RadioButtonGroupILt3EE25radioButtonClickedHandlerERKNS_14AbstractButtonE+0x48>
            {
                if (radioButtons[i]->getSelected())
 800c7b0:	89fb      	ldrh	r3, [r7, #14]
 800c7b2:	687a      	ldr	r2, [r7, #4]
 800c7b4:	009b      	lsls	r3, r3, #2
 800c7b6:	4413      	add	r3, r2
 800c7b8:	685b      	ldr	r3, [r3, #4]
 800c7ba:	4618      	mov	r0, r3
 800c7bc:	f7ff f801 	bl	800b7c2 <_ZNK8touchgfx11RadioButton11getSelectedEv>
 800c7c0:	4603      	mov	r3, r0
 800c7c2:	2b00      	cmp	r3, #0
 800c7c4:	d008      	beq.n	800c7d8 <_ZN8touchgfx16RadioButtonGroupILt3EE25radioButtonClickedHandlerERKNS_14AbstractButtonE+0x48>
                {
                    radioButtons[i]->setSelected(false);
 800c7c6:	89fb      	ldrh	r3, [r7, #14]
 800c7c8:	687a      	ldr	r2, [r7, #4]
 800c7ca:	009b      	lsls	r3, r3, #2
 800c7cc:	4413      	add	r3, r2
 800c7ce:	685b      	ldr	r3, [r3, #4]
 800c7d0:	2100      	movs	r1, #0
 800c7d2:	4618      	mov	r0, r3
 800c7d4:	f004 ff5a 	bl	801168c <_ZN8touchgfx11RadioButton11setSelectedEb>
        for (uint16_t i = 0; i < size; i++)
 800c7d8:	89fb      	ldrh	r3, [r7, #14]
 800c7da:	3301      	adds	r3, #1
 800c7dc:	81fb      	strh	r3, [r7, #14]
 800c7de:	687b      	ldr	r3, [r7, #4]
 800c7e0:	8a1b      	ldrh	r3, [r3, #16]
 800c7e2:	89fa      	ldrh	r2, [r7, #14]
 800c7e4:	429a      	cmp	r2, r3
 800c7e6:	d3db      	bcc.n	800c7a0 <_ZN8touchgfx16RadioButtonGroupILt3EE25radioButtonClickedHandlerERKNS_14AbstractButtonE+0x10>
                }
            }
        }

        if (radioButtonSelectedCallback && radioButtonSelectedCallback->isValid())
 800c7e8:	687b      	ldr	r3, [r7, #4]
 800c7ea:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800c7ec:	2b00      	cmp	r3, #0
 800c7ee:	d00d      	beq.n	800c80c <_ZN8touchgfx16RadioButtonGroupILt3EE25radioButtonClickedHandlerERKNS_14AbstractButtonE+0x7c>
 800c7f0:	687b      	ldr	r3, [r7, #4]
 800c7f2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800c7f4:	687b      	ldr	r3, [r7, #4]
 800c7f6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800c7f8:	681b      	ldr	r3, [r3, #0]
 800c7fa:	330c      	adds	r3, #12
 800c7fc:	681b      	ldr	r3, [r3, #0]
 800c7fe:	4610      	mov	r0, r2
 800c800:	4798      	blx	r3
 800c802:	4603      	mov	r3, r0
 800c804:	2b00      	cmp	r3, #0
 800c806:	d001      	beq.n	800c80c <_ZN8touchgfx16RadioButtonGroupILt3EE25radioButtonClickedHandlerERKNS_14AbstractButtonE+0x7c>
 800c808:	2301      	movs	r3, #1
 800c80a:	e000      	b.n	800c80e <_ZN8touchgfx16RadioButtonGroupILt3EE25radioButtonClickedHandlerERKNS_14AbstractButtonE+0x7e>
 800c80c:	2300      	movs	r3, #0
 800c80e:	2b00      	cmp	r3, #0
 800c810:	d009      	beq.n	800c826 <_ZN8touchgfx16RadioButtonGroupILt3EE25radioButtonClickedHandlerERKNS_14AbstractButtonE+0x96>
        {
            radioButtonSelectedCallback->execute(radioButton);
 800c812:	687b      	ldr	r3, [r7, #4]
 800c814:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800c816:	687b      	ldr	r3, [r7, #4]
 800c818:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800c81a:	681b      	ldr	r3, [r3, #0]
 800c81c:	3308      	adds	r3, #8
 800c81e:	681b      	ldr	r3, [r3, #0]
 800c820:	6839      	ldr	r1, [r7, #0]
 800c822:	4610      	mov	r0, r2
 800c824:	4798      	blx	r3
        }
    }
 800c826:	bf00      	nop
 800c828:	3710      	adds	r7, #16
 800c82a:	46bd      	mov	sp, r7
 800c82c:	bd80      	pop	{r7, pc}

0800c82e <_ZN8touchgfx16RadioButtonGroupILt3EE28radioButtonDeselectedHandlerERKNS_14AbstractButtonE>:
    /**
     * Handles the event that a RadioButton has been deselected.
     *
     * @param  radioButton the RadioButton that has been deselected.
     */
    virtual void radioButtonDeselectedHandler(const AbstractButton& radioButton)
 800c82e:	b580      	push	{r7, lr}
 800c830:	b082      	sub	sp, #8
 800c832:	af00      	add	r7, sp, #0
 800c834:	6078      	str	r0, [r7, #4]
 800c836:	6039      	str	r1, [r7, #0]
    {
        if (radioButtonDeselectedCallback && radioButtonDeselectedCallback->isValid())
 800c838:	687b      	ldr	r3, [r7, #4]
 800c83a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c83c:	2b00      	cmp	r3, #0
 800c83e:	d00d      	beq.n	800c85c <_ZN8touchgfx16RadioButtonGroupILt3EE28radioButtonDeselectedHandlerERKNS_14AbstractButtonE+0x2e>
 800c840:	687b      	ldr	r3, [r7, #4]
 800c842:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800c844:	687b      	ldr	r3, [r7, #4]
 800c846:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c848:	681b      	ldr	r3, [r3, #0]
 800c84a:	330c      	adds	r3, #12
 800c84c:	681b      	ldr	r3, [r3, #0]
 800c84e:	4610      	mov	r0, r2
 800c850:	4798      	blx	r3
 800c852:	4603      	mov	r3, r0
 800c854:	2b00      	cmp	r3, #0
 800c856:	d001      	beq.n	800c85c <_ZN8touchgfx16RadioButtonGroupILt3EE28radioButtonDeselectedHandlerERKNS_14AbstractButtonE+0x2e>
 800c858:	2301      	movs	r3, #1
 800c85a:	e000      	b.n	800c85e <_ZN8touchgfx16RadioButtonGroupILt3EE28radioButtonDeselectedHandlerERKNS_14AbstractButtonE+0x30>
 800c85c:	2300      	movs	r3, #0
 800c85e:	2b00      	cmp	r3, #0
 800c860:	d009      	beq.n	800c876 <_ZN8touchgfx16RadioButtonGroupILt3EE28radioButtonDeselectedHandlerERKNS_14AbstractButtonE+0x48>
        {
            radioButtonDeselectedCallback->execute(radioButton);
 800c862:	687b      	ldr	r3, [r7, #4]
 800c864:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800c866:	687b      	ldr	r3, [r7, #4]
 800c868:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c86a:	681b      	ldr	r3, [r3, #0]
 800c86c:	3308      	adds	r3, #8
 800c86e:	681b      	ldr	r3, [r3, #0]
 800c870:	6839      	ldr	r1, [r7, #0]
 800c872:	4610      	mov	r0, r2
 800c874:	4798      	blx	r3
        }
    }
 800c876:	bf00      	nop
 800c878:	3708      	adds	r7, #8
 800c87a:	46bd      	mov	sp, r7
 800c87c:	bd80      	pop	{r7, pc}
	...

0800c880 <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvEC1EPS2_MS2_FvS5_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800c880:	b580      	push	{r7, lr}
 800c882:	b084      	sub	sp, #16
 800c884:	af00      	add	r7, sp, #0
 800c886:	60f8      	str	r0, [r7, #12]
 800c888:	60b9      	str	r1, [r7, #8]
 800c88a:	4639      	mov	r1, r7
 800c88c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800c890:	68fb      	ldr	r3, [r7, #12]
 800c892:	4618      	mov	r0, r3
 800c894:	f7ff ff0c 	bl	800c6b0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800c898:	4a08      	ldr	r2, [pc, #32]	@ (800c8bc <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvEC1EPS2_MS2_FvS5_E+0x3c>)
 800c89a:	68fb      	ldr	r3, [r7, #12]
 800c89c:	601a      	str	r2, [r3, #0]
 800c89e:	68fb      	ldr	r3, [r7, #12]
 800c8a0:	68ba      	ldr	r2, [r7, #8]
 800c8a2:	605a      	str	r2, [r3, #4]
 800c8a4:	68fb      	ldr	r3, [r7, #12]
 800c8a6:	3308      	adds	r3, #8
 800c8a8:	463a      	mov	r2, r7
 800c8aa:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c8ae:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800c8b2:	68fb      	ldr	r3, [r7, #12]
 800c8b4:	4618      	mov	r0, r3
 800c8b6:	3710      	adds	r7, #16
 800c8b8:	46bd      	mov	sp, r7
 800c8ba:	bd80      	pop	{r7, pc}
 800c8bc:	08028ee4 	.word	0x08028ee4

0800c8c0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800c8c0:	b480      	push	{r7}
 800c8c2:	b083      	sub	sp, #12
 800c8c4:	af00      	add	r7, sp, #0
 800c8c6:	6078      	str	r0, [r7, #4]
    }
 800c8c8:	4a04      	ldr	r2, [pc, #16]	@ (800c8dc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800c8ca:	687b      	ldr	r3, [r7, #4]
 800c8cc:	601a      	str	r2, [r3, #0]
 800c8ce:	687b      	ldr	r3, [r7, #4]
 800c8d0:	4618      	mov	r0, r3
 800c8d2:	370c      	adds	r7, #12
 800c8d4:	46bd      	mov	sp, r7
 800c8d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8da:	4770      	bx	lr
 800c8dc:	08028f30 	.word	0x08028f30

0800c8e0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800c8e0:	b580      	push	{r7, lr}
 800c8e2:	b082      	sub	sp, #8
 800c8e4:	af00      	add	r7, sp, #0
 800c8e6:	6078      	str	r0, [r7, #4]
    }
 800c8e8:	6878      	ldr	r0, [r7, #4]
 800c8ea:	f7ff ffe9 	bl	800c8c0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800c8ee:	2104      	movs	r1, #4
 800c8f0:	6878      	ldr	r0, [r7, #4]
 800c8f2:	f017 fa90 	bl	8023e16 <_ZdlPvj>
 800c8f6:	687b      	ldr	r3, [r7, #4]
 800c8f8:	4618      	mov	r0, r3
 800c8fa:	3708      	adds	r7, #8
 800c8fc:	46bd      	mov	sp, r7
 800c8fe:	bd80      	pop	{r7, pc}

0800c900 <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800c900:	b580      	push	{r7, lr}
 800c902:	b082      	sub	sp, #8
 800c904:	af00      	add	r7, sp, #0
 800c906:	6078      	str	r0, [r7, #4]
 800c908:	4a05      	ldr	r2, [pc, #20]	@ (800c920 <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800c90a:	687b      	ldr	r3, [r7, #4]
 800c90c:	601a      	str	r2, [r3, #0]
 800c90e:	687b      	ldr	r3, [r7, #4]
 800c910:	4618      	mov	r0, r3
 800c912:	f7ff ffd5 	bl	800c8c0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800c916:	687b      	ldr	r3, [r7, #4]
 800c918:	4618      	mov	r0, r3
 800c91a:	3708      	adds	r7, #8
 800c91c:	46bd      	mov	sp, r7
 800c91e:	bd80      	pop	{r7, pc}
 800c920:	08028e98 	.word	0x08028e98

0800c924 <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800c924:	b580      	push	{r7, lr}
 800c926:	b082      	sub	sp, #8
 800c928:	af00      	add	r7, sp, #0
 800c92a:	6078      	str	r0, [r7, #4]
 800c92c:	6878      	ldr	r0, [r7, #4]
 800c92e:	f7ff ffe7 	bl	800c900 <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800c932:	2110      	movs	r1, #16
 800c934:	6878      	ldr	r0, [r7, #4]
 800c936:	f017 fa6e 	bl	8023e16 <_ZdlPvj>
 800c93a:	687b      	ldr	r3, [r7, #4]
 800c93c:	4618      	mov	r0, r3
 800c93e:	3708      	adds	r7, #8
 800c940:	46bd      	mov	sp, r7
 800c942:	bd80      	pop	{r7, pc}

0800c944 <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 800c944:	b580      	push	{r7, lr}
 800c946:	b082      	sub	sp, #8
 800c948:	af00      	add	r7, sp, #0
 800c94a:	6078      	str	r0, [r7, #4]
 800c94c:	4a05      	ldr	r2, [pc, #20]	@ (800c964 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800c94e:	687b      	ldr	r3, [r7, #4]
 800c950:	601a      	str	r2, [r3, #0]
 800c952:	687b      	ldr	r3, [r7, #4]
 800c954:	4618      	mov	r0, r3
 800c956:	f7fe fe73 	bl	800b640 <_ZN8touchgfx14AbstractButtonD1Ev>
 800c95a:	687b      	ldr	r3, [r7, #4]
 800c95c:	4618      	mov	r0, r3
 800c95e:	3708      	adds	r7, #8
 800c960:	46bd      	mov	sp, r7
 800c962:	bd80      	pop	{r7, pc}
 800c964:	08029910 	.word	0x08029910

0800c968 <_ZN8touchgfx6ButtonD0Ev>:
 800c968:	b580      	push	{r7, lr}
 800c96a:	b082      	sub	sp, #8
 800c96c:	af00      	add	r7, sp, #0
 800c96e:	6078      	str	r0, [r7, #4]
 800c970:	6878      	ldr	r0, [r7, #4]
 800c972:	f7ff ffe7 	bl	800c944 <_ZN8touchgfx6ButtonD1Ev>
 800c976:	2134      	movs	r1, #52	@ 0x34
 800c978:	6878      	ldr	r0, [r7, #4]
 800c97a:	f017 fa4c 	bl	8023e16 <_ZdlPvj>
 800c97e:	687b      	ldr	r3, [r7, #4]
 800c980:	4618      	mov	r0, r3
 800c982:	3708      	adds	r7, #8
 800c984:	46bd      	mov	sp, r7
 800c986:	bd80      	pop	{r7, pc}

0800c988 <_ZN8touchgfx14ButtonWithIconD1Ev>:
class ButtonWithIcon : public Button
 800c988:	b580      	push	{r7, lr}
 800c98a:	b082      	sub	sp, #8
 800c98c:	af00      	add	r7, sp, #0
 800c98e:	6078      	str	r0, [r7, #4]
 800c990:	4a05      	ldr	r2, [pc, #20]	@ (800c9a8 <_ZN8touchgfx14ButtonWithIconD1Ev+0x20>)
 800c992:	687b      	ldr	r3, [r7, #4]
 800c994:	601a      	str	r2, [r3, #0]
 800c996:	687b      	ldr	r3, [r7, #4]
 800c998:	4618      	mov	r0, r3
 800c99a:	f7ff ffd3 	bl	800c944 <_ZN8touchgfx6ButtonD1Ev>
 800c99e:	687b      	ldr	r3, [r7, #4]
 800c9a0:	4618      	mov	r0, r3
 800c9a2:	3708      	adds	r7, #8
 800c9a4:	46bd      	mov	sp, r7
 800c9a6:	bd80      	pop	{r7, pc}
 800c9a8:	08029a7c 	.word	0x08029a7c

0800c9ac <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800c9ac:	b580      	push	{r7, lr}
 800c9ae:	b082      	sub	sp, #8
 800c9b0:	af00      	add	r7, sp, #0
 800c9b2:	6078      	str	r0, [r7, #4]
 800c9b4:	6878      	ldr	r0, [r7, #4]
 800c9b6:	f7ff ffe7 	bl	800c988 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800c9ba:	213c      	movs	r1, #60	@ 0x3c
 800c9bc:	6878      	ldr	r0, [r7, #4]
 800c9be:	f017 fa2a 	bl	8023e16 <_ZdlPvj>
 800c9c2:	687b      	ldr	r3, [r7, #4]
 800c9c4:	4618      	mov	r0, r3
 800c9c6:	3708      	adds	r7, #8
 800c9c8:	46bd      	mov	sp, r7
 800c9ca:	bd80      	pop	{r7, pc}

0800c9cc <_ZN8touchgfx11RadioButtonD1Ev>:
class RadioButton : public AbstractButton
 800c9cc:	b580      	push	{r7, lr}
 800c9ce:	b082      	sub	sp, #8
 800c9d0:	af00      	add	r7, sp, #0
 800c9d2:	6078      	str	r0, [r7, #4]
 800c9d4:	4a05      	ldr	r2, [pc, #20]	@ (800c9ec <_ZN8touchgfx11RadioButtonD1Ev+0x20>)
 800c9d6:	687b      	ldr	r3, [r7, #4]
 800c9d8:	601a      	str	r2, [r3, #0]
 800c9da:	687b      	ldr	r3, [r7, #4]
 800c9dc:	4618      	mov	r0, r3
 800c9de:	f7fe fe2f 	bl	800b640 <_ZN8touchgfx14AbstractButtonD1Ev>
 800c9e2:	687b      	ldr	r3, [r7, #4]
 800c9e4:	4618      	mov	r0, r3
 800c9e6:	3708      	adds	r7, #8
 800c9e8:	46bd      	mov	sp, r7
 800c9ea:	bd80      	pop	{r7, pc}
 800c9ec:	08029b60 	.word	0x08029b60

0800c9f0 <_ZN8touchgfx11RadioButtonD0Ev>:
 800c9f0:	b580      	push	{r7, lr}
 800c9f2:	b082      	sub	sp, #8
 800c9f4:	af00      	add	r7, sp, #0
 800c9f6:	6078      	str	r0, [r7, #4]
 800c9f8:	6878      	ldr	r0, [r7, #4]
 800c9fa:	f7ff ffe7 	bl	800c9cc <_ZN8touchgfx11RadioButtonD1Ev>
 800c9fe:	2140      	movs	r1, #64	@ 0x40
 800ca00:	6878      	ldr	r0, [r7, #4]
 800ca02:	f017 fa08 	bl	8023e16 <_ZdlPvj>
 800ca06:	687b      	ldr	r3, [r7, #4]
 800ca08:	4618      	mov	r0, r3
 800ca0a:	3708      	adds	r7, #8
 800ca0c:	46bd      	mov	sp, r7
 800ca0e:	bd80      	pop	{r7, pc}

0800ca10 <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800ca10:	b580      	push	{r7, lr}
 800ca12:	b082      	sub	sp, #8
 800ca14:	af00      	add	r7, sp, #0
 800ca16:	6078      	str	r0, [r7, #4]
 800ca18:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800ca1a:	687b      	ldr	r3, [r7, #4]
 800ca1c:	685b      	ldr	r3, [r3, #4]
 800ca1e:	687a      	ldr	r2, [r7, #4]
 800ca20:	68d2      	ldr	r2, [r2, #12]
 800ca22:	1052      	asrs	r2, r2, #1
 800ca24:	1898      	adds	r0, r3, r2
 800ca26:	687b      	ldr	r3, [r7, #4]
 800ca28:	68db      	ldr	r3, [r3, #12]
 800ca2a:	f003 0301 	and.w	r3, r3, #1
 800ca2e:	2b00      	cmp	r3, #0
 800ca30:	d102      	bne.n	800ca38 <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800ca32:	687b      	ldr	r3, [r7, #4]
 800ca34:	689b      	ldr	r3, [r3, #8]
 800ca36:	e00a      	b.n	800ca4e <_ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800ca38:	687b      	ldr	r3, [r7, #4]
 800ca3a:	685b      	ldr	r3, [r3, #4]
 800ca3c:	687a      	ldr	r2, [r7, #4]
 800ca3e:	68d2      	ldr	r2, [r2, #12]
 800ca40:	1052      	asrs	r2, r2, #1
 800ca42:	4413      	add	r3, r2
 800ca44:	681b      	ldr	r3, [r3, #0]
 800ca46:	687a      	ldr	r2, [r7, #4]
 800ca48:	6892      	ldr	r2, [r2, #8]
 800ca4a:	4413      	add	r3, r2
 800ca4c:	681b      	ldr	r3, [r3, #0]
 800ca4e:	6839      	ldr	r1, [r7, #0]
 800ca50:	4798      	blx	r3
    }
 800ca52:	bf00      	nop
 800ca54:	3708      	adds	r7, #8
 800ca56:	46bd      	mov	sp, r7
 800ca58:	bd80      	pop	{r7, pc}

0800ca5a <_ZNK8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800ca5a:	b480      	push	{r7}
 800ca5c:	b083      	sub	sp, #12
 800ca5e:	af00      	add	r7, sp, #0
 800ca60:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800ca62:	687b      	ldr	r3, [r7, #4]
 800ca64:	685b      	ldr	r3, [r3, #4]
 800ca66:	2b00      	cmp	r3, #0
 800ca68:	d010      	beq.n	800ca8c <_ZNK8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800ca6a:	687b      	ldr	r3, [r7, #4]
 800ca6c:	689b      	ldr	r3, [r3, #8]
 800ca6e:	2b00      	cmp	r3, #0
 800ca70:	d107      	bne.n	800ca82 <_ZNK8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800ca72:	687b      	ldr	r3, [r7, #4]
 800ca74:	68db      	ldr	r3, [r3, #12]
 800ca76:	f003 0301 	and.w	r3, r3, #1
 800ca7a:	2b00      	cmp	r3, #0
 800ca7c:	d101      	bne.n	800ca82 <_ZNK8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800ca7e:	2301      	movs	r3, #1
 800ca80:	e000      	b.n	800ca84 <_ZNK8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800ca82:	2300      	movs	r3, #0
 800ca84:	2b01      	cmp	r3, #1
 800ca86:	d001      	beq.n	800ca8c <_ZNK8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800ca88:	2301      	movs	r3, #1
 800ca8a:	e000      	b.n	800ca8e <_ZNK8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800ca8c:	2300      	movs	r3, #0
    }
 800ca8e:	4618      	mov	r0, r3
 800ca90:	370c      	adds	r7, #12
 800ca92:	46bd      	mov	sp, r7
 800ca94:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca98:	4770      	bx	lr

0800ca9a <_ZNK8touchgfx16RadioButtonGroupILt3EE14getRadioButtonEt>:
    virtual RadioButton* getRadioButton(uint16_t index) const
 800ca9a:	b480      	push	{r7}
 800ca9c:	b083      	sub	sp, #12
 800ca9e:	af00      	add	r7, sp, #0
 800caa0:	6078      	str	r0, [r7, #4]
 800caa2:	460b      	mov	r3, r1
 800caa4:	807b      	strh	r3, [r7, #2]
        return (size > index) ? radioButtons[index] : 0;
 800caa6:	687b      	ldr	r3, [r7, #4]
 800caa8:	8a1b      	ldrh	r3, [r3, #16]
 800caaa:	887a      	ldrh	r2, [r7, #2]
 800caac:	429a      	cmp	r2, r3
 800caae:	d205      	bcs.n	800cabc <_ZNK8touchgfx16RadioButtonGroupILt3EE14getRadioButtonEt+0x22>
 800cab0:	887b      	ldrh	r3, [r7, #2]
 800cab2:	687a      	ldr	r2, [r7, #4]
 800cab4:	009b      	lsls	r3, r3, #2
 800cab6:	4413      	add	r3, r2
 800cab8:	685b      	ldr	r3, [r3, #4]
 800caba:	e000      	b.n	800cabe <_ZNK8touchgfx16RadioButtonGroupILt3EE14getRadioButtonEt+0x24>
 800cabc:	2300      	movs	r3, #0
    }
 800cabe:	4618      	mov	r0, r3
 800cac0:	370c      	adds	r7, #12
 800cac2:	46bd      	mov	sp, r7
 800cac4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cac8:	4770      	bx	lr

0800caca <_ZNK8touchgfx16RadioButtonGroupILt3EE27getSelectedRadioButtonIndexEv>:
    virtual int32_t getSelectedRadioButtonIndex() const
 800caca:	b580      	push	{r7, lr}
 800cacc:	b084      	sub	sp, #16
 800cace:	af00      	add	r7, sp, #0
 800cad0:	6078      	str	r0, [r7, #4]
        for (uint16_t i = 0; i < size; i++)
 800cad2:	2300      	movs	r3, #0
 800cad4:	81fb      	strh	r3, [r7, #14]
 800cad6:	e00f      	b.n	800caf8 <_ZNK8touchgfx16RadioButtonGroupILt3EE27getSelectedRadioButtonIndexEv+0x2e>
            if (radioButtons[i]->getSelected())
 800cad8:	89fb      	ldrh	r3, [r7, #14]
 800cada:	687a      	ldr	r2, [r7, #4]
 800cadc:	009b      	lsls	r3, r3, #2
 800cade:	4413      	add	r3, r2
 800cae0:	685b      	ldr	r3, [r3, #4]
 800cae2:	4618      	mov	r0, r3
 800cae4:	f7fe fe6d 	bl	800b7c2 <_ZNK8touchgfx11RadioButton11getSelectedEv>
 800cae8:	4603      	mov	r3, r0
 800caea:	2b00      	cmp	r3, #0
 800caec:	d001      	beq.n	800caf2 <_ZNK8touchgfx16RadioButtonGroupILt3EE27getSelectedRadioButtonIndexEv+0x28>
                return i;
 800caee:	89fb      	ldrh	r3, [r7, #14]
 800caf0:	e009      	b.n	800cb06 <_ZNK8touchgfx16RadioButtonGroupILt3EE27getSelectedRadioButtonIndexEv+0x3c>
        for (uint16_t i = 0; i < size; i++)
 800caf2:	89fb      	ldrh	r3, [r7, #14]
 800caf4:	3301      	adds	r3, #1
 800caf6:	81fb      	strh	r3, [r7, #14]
 800caf8:	687b      	ldr	r3, [r7, #4]
 800cafa:	8a1b      	ldrh	r3, [r3, #16]
 800cafc:	89fa      	ldrh	r2, [r7, #14]
 800cafe:	429a      	cmp	r2, r3
 800cb00:	d3ea      	bcc.n	800cad8 <_ZNK8touchgfx16RadioButtonGroupILt3EE27getSelectedRadioButtonIndexEv+0xe>
        return -1;
 800cb02:	f04f 33ff 	mov.w	r3, #4294967295
    }
 800cb06:	4618      	mov	r0, r3
 800cb08:	3710      	adds	r7, #16
 800cb0a:	46bd      	mov	sp, r7
 800cb0c:	bd80      	pop	{r7, pc}

0800cb0e <_ZNK8touchgfx16RadioButtonGroupILt3EE22getSelectedRadioButtonEv>:
    virtual RadioButton* getSelectedRadioButton() const
 800cb0e:	b580      	push	{r7, lr}
 800cb10:	b084      	sub	sp, #16
 800cb12:	af00      	add	r7, sp, #0
 800cb14:	6078      	str	r0, [r7, #4]
        int32_t index = getSelectedRadioButtonIndex();
 800cb16:	687b      	ldr	r3, [r7, #4]
 800cb18:	681b      	ldr	r3, [r3, #0]
 800cb1a:	3310      	adds	r3, #16
 800cb1c:	681b      	ldr	r3, [r3, #0]
 800cb1e:	6878      	ldr	r0, [r7, #4]
 800cb20:	4798      	blx	r3
 800cb22:	60f8      	str	r0, [r7, #12]
        return (index < 0) ? 0 : getRadioButton(index);
 800cb24:	68fb      	ldr	r3, [r7, #12]
 800cb26:	2b00      	cmp	r3, #0
 800cb28:	db0a      	blt.n	800cb40 <_ZNK8touchgfx16RadioButtonGroupILt3EE22getSelectedRadioButtonEv+0x32>
 800cb2a:	687b      	ldr	r3, [r7, #4]
 800cb2c:	681b      	ldr	r3, [r3, #0]
 800cb2e:	330c      	adds	r3, #12
 800cb30:	681b      	ldr	r3, [r3, #0]
 800cb32:	68fa      	ldr	r2, [r7, #12]
 800cb34:	b292      	uxth	r2, r2
 800cb36:	4611      	mov	r1, r2
 800cb38:	6878      	ldr	r0, [r7, #4]
 800cb3a:	4798      	blx	r3
 800cb3c:	4603      	mov	r3, r0
 800cb3e:	e000      	b.n	800cb42 <_ZNK8touchgfx16RadioButtonGroupILt3EE22getSelectedRadioButtonEv+0x34>
 800cb40:	2300      	movs	r3, #0
    }
 800cb42:	4618      	mov	r0, r3
 800cb44:	3710      	adds	r7, #16
 800cb46:	46bd      	mov	sp, r7
 800cb48:	bd80      	pop	{r7, pc}

0800cb4a <_ZN8touchgfx16RadioButtonGroupILt3EE11setSelectedERNS_11RadioButtonE>:
    virtual void setSelected(RadioButton& radioButton)
 800cb4a:	b580      	push	{r7, lr}
 800cb4c:	b082      	sub	sp, #8
 800cb4e:	af00      	add	r7, sp, #0
 800cb50:	6078      	str	r0, [r7, #4]
 800cb52:	6039      	str	r1, [r7, #0]
        radioButton.setSelected(true);
 800cb54:	2101      	movs	r1, #1
 800cb56:	6838      	ldr	r0, [r7, #0]
 800cb58:	f004 fd98 	bl	801168c <_ZN8touchgfx11RadioButton11setSelectedEb>
        radioButtonClickedHandler(radioButton);
 800cb5c:	687b      	ldr	r3, [r7, #4]
 800cb5e:	681b      	ldr	r3, [r3, #0]
 800cb60:	3324      	adds	r3, #36	@ 0x24
 800cb62:	681b      	ldr	r3, [r3, #0]
 800cb64:	683a      	ldr	r2, [r7, #0]
 800cb66:	4611      	mov	r1, r2
 800cb68:	6878      	ldr	r0, [r7, #4]
 800cb6a:	4798      	blx	r3
    }
 800cb6c:	bf00      	nop
 800cb6e:	3708      	adds	r7, #8
 800cb70:	46bd      	mov	sp, r7
 800cb72:	bd80      	pop	{r7, pc}

0800cb74 <_ZN8touchgfx16RadioButtonGroupILt3EE21setDeselectionEnabledEb>:
    virtual void setDeselectionEnabled(bool deselectionEnabled)
 800cb74:	b580      	push	{r7, lr}
 800cb76:	b084      	sub	sp, #16
 800cb78:	af00      	add	r7, sp, #0
 800cb7a:	6078      	str	r0, [r7, #4]
 800cb7c:	460b      	mov	r3, r1
 800cb7e:	70fb      	strb	r3, [r7, #3]
        for (uint16_t i = 0; i < size; i++)
 800cb80:	2300      	movs	r3, #0
 800cb82:	81fb      	strh	r3, [r7, #14]
 800cb84:	e00c      	b.n	800cba0 <_ZN8touchgfx16RadioButtonGroupILt3EE21setDeselectionEnabledEb+0x2c>
            radioButtons[i]->setDeselectionEnabled(deselectionEnabled);
 800cb86:	89fb      	ldrh	r3, [r7, #14]
 800cb88:	687a      	ldr	r2, [r7, #4]
 800cb8a:	009b      	lsls	r3, r3, #2
 800cb8c:	4413      	add	r3, r2
 800cb8e:	685b      	ldr	r3, [r3, #4]
 800cb90:	78fa      	ldrb	r2, [r7, #3]
 800cb92:	4611      	mov	r1, r2
 800cb94:	4618      	mov	r0, r3
 800cb96:	f7fe fdf7 	bl	800b788 <_ZN8touchgfx11RadioButton21setDeselectionEnabledEb>
        for (uint16_t i = 0; i < size; i++)
 800cb9a:	89fb      	ldrh	r3, [r7, #14]
 800cb9c:	3301      	adds	r3, #1
 800cb9e:	81fb      	strh	r3, [r7, #14]
 800cba0:	687b      	ldr	r3, [r7, #4]
 800cba2:	8a1b      	ldrh	r3, [r3, #16]
 800cba4:	89fa      	ldrh	r2, [r7, #14]
 800cba6:	429a      	cmp	r2, r3
 800cba8:	d3ed      	bcc.n	800cb86 <_ZN8touchgfx16RadioButtonGroupILt3EE21setDeselectionEnabledEb+0x12>
    }
 800cbaa:	bf00      	nop
 800cbac:	bf00      	nop
 800cbae:	3710      	adds	r7, #16
 800cbb0:	46bd      	mov	sp, r7
 800cbb2:	bd80      	pop	{r7, pc}

0800cbb4 <_ZNK8touchgfx16RadioButtonGroupILt3EE21getDeselectionEnabledEv>:
    virtual bool getDeselectionEnabled() const
 800cbb4:	b580      	push	{r7, lr}
 800cbb6:	b082      	sub	sp, #8
 800cbb8:	af00      	add	r7, sp, #0
 800cbba:	6078      	str	r0, [r7, #4]
        return (size > 0) ? radioButtons[0]->getDeselectionEnabled() : false;
 800cbbc:	687b      	ldr	r3, [r7, #4]
 800cbbe:	8a1b      	ldrh	r3, [r3, #16]
 800cbc0:	2b00      	cmp	r3, #0
 800cbc2:	d009      	beq.n	800cbd8 <_ZNK8touchgfx16RadioButtonGroupILt3EE21getDeselectionEnabledEv+0x24>
 800cbc4:	687b      	ldr	r3, [r7, #4]
 800cbc6:	685b      	ldr	r3, [r3, #4]
 800cbc8:	4618      	mov	r0, r3
 800cbca:	f7fe fded 	bl	800b7a8 <_ZNK8touchgfx11RadioButton21getDeselectionEnabledEv>
 800cbce:	4603      	mov	r3, r0
 800cbd0:	2b00      	cmp	r3, #0
 800cbd2:	d001      	beq.n	800cbd8 <_ZNK8touchgfx16RadioButtonGroupILt3EE21getDeselectionEnabledEv+0x24>
 800cbd4:	2301      	movs	r3, #1
 800cbd6:	e000      	b.n	800cbda <_ZNK8touchgfx16RadioButtonGroupILt3EE21getDeselectionEnabledEv+0x26>
 800cbd8:	2300      	movs	r3, #0
    }
 800cbda:	4618      	mov	r0, r3
 800cbdc:	3708      	adds	r7, #8
 800cbde:	46bd      	mov	sp, r7
 800cbe0:	bd80      	pop	{r7, pc}

0800cbe2 <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvE7executeES5_>:
    virtual void execute(T1 t1)
 800cbe2:	b580      	push	{r7, lr}
 800cbe4:	b082      	sub	sp, #8
 800cbe6:	af00      	add	r7, sp, #0
 800cbe8:	6078      	str	r0, [r7, #4]
 800cbea:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800cbec:	687b      	ldr	r3, [r7, #4]
 800cbee:	685b      	ldr	r3, [r3, #4]
 800cbf0:	687a      	ldr	r2, [r7, #4]
 800cbf2:	68d2      	ldr	r2, [r2, #12]
 800cbf4:	1052      	asrs	r2, r2, #1
 800cbf6:	1898      	adds	r0, r3, r2
 800cbf8:	687b      	ldr	r3, [r7, #4]
 800cbfa:	68db      	ldr	r3, [r3, #12]
 800cbfc:	f003 0301 	and.w	r3, r3, #1
 800cc00:	2b00      	cmp	r3, #0
 800cc02:	d102      	bne.n	800cc0a <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvE7executeES5_+0x28>
 800cc04:	687b      	ldr	r3, [r7, #4]
 800cc06:	689b      	ldr	r3, [r3, #8]
 800cc08:	e00a      	b.n	800cc20 <_ZN8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvE7executeES5_+0x3e>
 800cc0a:	687b      	ldr	r3, [r7, #4]
 800cc0c:	685b      	ldr	r3, [r3, #4]
 800cc0e:	687a      	ldr	r2, [r7, #4]
 800cc10:	68d2      	ldr	r2, [r2, #12]
 800cc12:	1052      	asrs	r2, r2, #1
 800cc14:	4413      	add	r3, r2
 800cc16:	681b      	ldr	r3, [r3, #0]
 800cc18:	687a      	ldr	r2, [r7, #4]
 800cc1a:	6892      	ldr	r2, [r2, #8]
 800cc1c:	4413      	add	r3, r2
 800cc1e:	681b      	ldr	r3, [r3, #0]
 800cc20:	6839      	ldr	r1, [r7, #0]
 800cc22:	4798      	blx	r3
    }
 800cc24:	bf00      	nop
 800cc26:	3708      	adds	r7, #8
 800cc28:	46bd      	mov	sp, r7
 800cc2a:	bd80      	pop	{r7, pc}

0800cc2c <_ZNK8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800cc2c:	b480      	push	{r7}
 800cc2e:	b083      	sub	sp, #12
 800cc30:	af00      	add	r7, sp, #0
 800cc32:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800cc34:	687b      	ldr	r3, [r7, #4]
 800cc36:	685b      	ldr	r3, [r3, #4]
 800cc38:	2b00      	cmp	r3, #0
 800cc3a:	d010      	beq.n	800cc5e <_ZNK8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800cc3c:	687b      	ldr	r3, [r7, #4]
 800cc3e:	689b      	ldr	r3, [r3, #8]
 800cc40:	2b00      	cmp	r3, #0
 800cc42:	d107      	bne.n	800cc54 <_ZNK8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800cc44:	687b      	ldr	r3, [r7, #4]
 800cc46:	68db      	ldr	r3, [r3, #12]
 800cc48:	f003 0301 	and.w	r3, r3, #1
 800cc4c:	2b00      	cmp	r3, #0
 800cc4e:	d101      	bne.n	800cc54 <_ZNK8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800cc50:	2301      	movs	r3, #1
 800cc52:	e000      	b.n	800cc56 <_ZNK8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800cc54:	2300      	movs	r3, #0
 800cc56:	2b01      	cmp	r3, #1
 800cc58:	d001      	beq.n	800cc5e <_ZNK8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800cc5a:	2301      	movs	r3, #1
 800cc5c:	e000      	b.n	800cc60 <_ZNK8touchgfx8CallbackINS_16RadioButtonGroupILt3EEERKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800cc5e:	2300      	movs	r3, #0
    }
 800cc60:	4618      	mov	r0, r3
 800cc62:	370c      	adds	r7, #12
 800cc64:	46bd      	mov	sp, r7
 800cc66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc6a:	4770      	bx	lr

0800cc6c <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800cc6c:	b480      	push	{r7}
 800cc6e:	af00      	add	r7, sp, #0
    return bitmap_database;
 800cc70:	4b02      	ldr	r3, [pc, #8]	@ (800cc7c <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800cc72:	4618      	mov	r0, r3
 800cc74:	46bd      	mov	sp, r7
 800cc76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc7a:	4770      	bx	lr
 800cc7c:	08028f40 	.word	0x08028f40

0800cc80 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800cc80:	b480      	push	{r7}
 800cc82:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800cc84:	230b      	movs	r3, #11
}
 800cc86:	4618      	mov	r0, r3
 800cc88:	46bd      	mov	sp, r7
 800cc8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc8e:	4770      	bx	lr

0800cc90 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800cc90:	b480      	push	{r7}
 800cc92:	b085      	sub	sp, #20
 800cc94:	af00      	add	r7, sp, #0
 800cc96:	60f8      	str	r0, [r7, #12]
 800cc98:	460b      	mov	r3, r1
 800cc9a:	607a      	str	r2, [r7, #4]
 800cc9c:	817b      	strh	r3, [r7, #10]
    {
        (void)prevChar; // Unused variable
        (void)glyph;    // Unused variable
        return 0;
 800cc9e:	2300      	movs	r3, #0
    }
 800cca0:	4618      	mov	r0, r3
 800cca2:	3714      	adds	r7, #20
 800cca4:	46bd      	mov	sp, r7
 800cca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccaa:	4770      	bx	lr

0800ccac <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800ccac:	b480      	push	{r7}
 800ccae:	b083      	sub	sp, #12
 800ccb0:	af00      	add	r7, sp, #0
 800ccb2:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800ccb4:	2300      	movs	r3, #0
    }
 800ccb6:	4618      	mov	r0, r3
 800ccb8:	370c      	adds	r7, #12
 800ccba:	46bd      	mov	sp, r7
 800ccbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccc0:	4770      	bx	lr

0800ccc2 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800ccc2:	b480      	push	{r7}
 800ccc4:	b083      	sub	sp, #12
 800ccc6:	af00      	add	r7, sp, #0
 800ccc8:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800ccca:	2300      	movs	r3, #0
    }
 800cccc:	4618      	mov	r0, r3
 800ccce:	370c      	adds	r7, #12
 800ccd0:	46bd      	mov	sp, r7
 800ccd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccd6:	4770      	bx	lr

0800ccd8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800ccd8:	b480      	push	{r7}
 800ccda:	b085      	sub	sp, #20
 800ccdc:	af00      	add	r7, sp, #0
 800ccde:	60f8      	str	r0, [r7, #12]
 800cce0:	60b9      	str	r1, [r7, #8]
 800cce2:	4613      	mov	r3, r2
 800cce4:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800cce6:	4a07      	ldr	r2, [pc, #28]	@ (800cd04 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800cce8:	68fb      	ldr	r3, [r7, #12]
 800ccea:	6013      	str	r3, [r2, #0]
        fonts = f;
 800ccec:	4a06      	ldr	r2, [pc, #24]	@ (800cd08 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800ccee:	68bb      	ldr	r3, [r7, #8]
 800ccf0:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800ccf2:	4a06      	ldr	r2, [pc, #24]	@ (800cd0c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800ccf4:	88fb      	ldrh	r3, [r7, #6]
 800ccf6:	8013      	strh	r3, [r2, #0]
    }
 800ccf8:	bf00      	nop
 800ccfa:	3714      	adds	r7, #20
 800ccfc:	46bd      	mov	sp, r7
 800ccfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd02:	4770      	bx	lr
 800cd04:	200023f8 	.word	0x200023f8
 800cd08:	20002400 	.word	0x20002400
 800cd0c:	200023fc 	.word	0x200023fc

0800cd10 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800cd10:	b40e      	push	{r1, r2, r3}
 800cd12:	b580      	push	{r7, lr}
 800cd14:	b085      	sub	sp, #20
 800cd16:	af00      	add	r7, sp, #0
 800cd18:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800cd1a:	f107 0320 	add.w	r3, r7, #32
 800cd1e:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800cd20:	68bb      	ldr	r3, [r7, #8]
 800cd22:	69fa      	ldr	r2, [r7, #28]
 800cd24:	2100      	movs	r1, #0
 800cd26:	6878      	ldr	r0, [r7, #4]
 800cd28:	f007 f90a 	bl	8013f40 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800cd2c:	4603      	mov	r3, r0
 800cd2e:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800cd30:	89fb      	ldrh	r3, [r7, #14]
}
 800cd32:	4618      	mov	r0, r3
 800cd34:	3714      	adds	r7, #20
 800cd36:	46bd      	mov	sp, r7
 800cd38:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800cd3c:	b003      	add	sp, #12
 800cd3e:	4770      	bx	lr

0800cd40 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800cd40:	b40c      	push	{r2, r3}
 800cd42:	b580      	push	{r7, lr}
 800cd44:	b084      	sub	sp, #16
 800cd46:	af00      	add	r7, sp, #0
 800cd48:	6078      	str	r0, [r7, #4]
 800cd4a:	460b      	mov	r3, r1
 800cd4c:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800cd4e:	f107 031c 	add.w	r3, r7, #28
 800cd52:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800cd54:	78f9      	ldrb	r1, [r7, #3]
 800cd56:	68bb      	ldr	r3, [r7, #8]
 800cd58:	69ba      	ldr	r2, [r7, #24]
 800cd5a:	6878      	ldr	r0, [r7, #4]
 800cd5c:	f007 f8f0 	bl	8013f40 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800cd60:	4603      	mov	r3, r0
 800cd62:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800cd64:	89fb      	ldrh	r3, [r7, #14]
}
 800cd66:	4618      	mov	r0, r3
 800cd68:	3710      	adds	r7, #16
 800cd6a:	46bd      	mov	sp, r7
 800cd6c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800cd70:	b002      	add	sp, #8
 800cd72:	4770      	bx	lr

0800cd74 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800cd74:	b580      	push	{r7, lr}
 800cd76:	b08a      	sub	sp, #40	@ 0x28
 800cd78:	af00      	add	r7, sp, #0
 800cd7a:	6078      	str	r0, [r7, #4]
 800cd7c:	460b      	mov	r3, r1
 800cd7e:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800cd80:	687b      	ldr	r3, [r7, #4]
 800cd82:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800cd84:	2b00      	cmp	r3, #0
 800cd86:	d016      	beq.n	800cdb6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800cd88:	687b      	ldr	r3, [r7, #4]
 800cd8a:	3322      	adds	r3, #34	@ 0x22
 800cd8c:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800cd8e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800cd90:	8adb      	ldrh	r3, [r3, #22]
 800cd92:	2b00      	cmp	r3, #0
 800cd94:	d105      	bne.n	800cda2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800cd96:	4b43      	ldr	r3, [pc, #268]	@ (800cea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800cd98:	4a43      	ldr	r2, [pc, #268]	@ (800cea8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800cd9a:	21c5      	movs	r1, #197	@ 0xc5
 800cd9c:	4843      	ldr	r0, [pc, #268]	@ (800ceac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800cd9e:	f017 fa69 	bl	8024274 <__assert_func>
            return buffer[pos];
 800cda2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800cda4:	8a9b      	ldrh	r3, [r3, #20]
 800cda6:	461a      	mov	r2, r3
 800cda8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800cdaa:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800cdae:	2b00      	cmp	r3, #0
 800cdb0:	d001      	beq.n	800cdb6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800cdb2:	2301      	movs	r3, #1
 800cdb4:	e000      	b.n	800cdb8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800cdb6:	2300      	movs	r3, #0
 800cdb8:	2b00      	cmp	r3, #0
 800cdba:	d06a      	beq.n	800ce92 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800cdbc:	6878      	ldr	r0, [r7, #4]
 800cdbe:	f008 fb64 	bl	801548a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800cdc2:	687b      	ldr	r3, [r7, #4]
 800cdc4:	3322      	adds	r3, #34	@ 0x22
 800cdc6:	623b      	str	r3, [r7, #32]
 800cdc8:	2301      	movs	r3, #1
 800cdca:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800cdcc:	6a3b      	ldr	r3, [r7, #32]
 800cdce:	8adb      	ldrh	r3, [r3, #22]
 800cdd0:	8bfa      	ldrh	r2, [r7, #30]
 800cdd2:	429a      	cmp	r2, r3
 800cdd4:	d305      	bcc.n	800cde2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800cdd6:	4b36      	ldr	r3, [pc, #216]	@ (800ceb0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800cdd8:	4a36      	ldr	r2, [pc, #216]	@ (800ceb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800cdda:	21cb      	movs	r1, #203	@ 0xcb
 800cddc:	4833      	ldr	r0, [pc, #204]	@ (800ceac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800cdde:	f017 fa49 	bl	8024274 <__assert_func>
            const uint16_t index = pos + offset;
 800cde2:	6a3b      	ldr	r3, [r7, #32]
 800cde4:	8a9a      	ldrh	r2, [r3, #20]
 800cde6:	8bfb      	ldrh	r3, [r7, #30]
 800cde8:	4413      	add	r3, r2
 800cdea:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800cdec:	8bbb      	ldrh	r3, [r7, #28]
 800cdee:	2b09      	cmp	r3, #9
 800cdf0:	d801      	bhi.n	800cdf6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800cdf2:	8bbb      	ldrh	r3, [r7, #28]
 800cdf4:	e001      	b.n	800cdfa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800cdf6:	8bbb      	ldrh	r3, [r7, #28]
 800cdf8:	3b0a      	subs	r3, #10
 800cdfa:	6a3a      	ldr	r2, [r7, #32]
 800cdfc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800ce00:	f640 123f 	movw	r2, #2367	@ 0x93f
 800ce04:	4293      	cmp	r3, r2
 800ce06:	bf0c      	ite	eq
 800ce08:	2301      	moveq	r3, #1
 800ce0a:	2300      	movne	r3, #0
 800ce0c:	b2db      	uxtb	r3, r3
 800ce0e:	2b00      	cmp	r3, #0
 800ce10:	d03f      	beq.n	800ce92 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800ce12:	687b      	ldr	r3, [r7, #4]
 800ce14:	3322      	adds	r3, #34	@ 0x22
 800ce16:	687a      	ldr	r2, [r7, #4]
 800ce18:	3222      	adds	r2, #34	@ 0x22
 800ce1a:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800ce1c:	68ba      	ldr	r2, [r7, #8]
 800ce1e:	8ad2      	ldrh	r2, [r2, #22]
 800ce20:	2a00      	cmp	r2, #0
 800ce22:	d105      	bne.n	800ce30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800ce24:	4b1f      	ldr	r3, [pc, #124]	@ (800cea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800ce26:	4a20      	ldr	r2, [pc, #128]	@ (800cea8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800ce28:	21c5      	movs	r1, #197	@ 0xc5
 800ce2a:	4820      	ldr	r0, [pc, #128]	@ (800ceac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800ce2c:	f017 fa22 	bl	8024274 <__assert_func>
            return buffer[pos];
 800ce30:	68ba      	ldr	r2, [r7, #8]
 800ce32:	8a92      	ldrh	r2, [r2, #20]
 800ce34:	4611      	mov	r1, r2
 800ce36:	68ba      	ldr	r2, [r7, #8]
 800ce38:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800ce3c:	613b      	str	r3, [r7, #16]
 800ce3e:	4613      	mov	r3, r2
 800ce40:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800ce42:	693b      	ldr	r3, [r7, #16]
 800ce44:	8adb      	ldrh	r3, [r3, #22]
 800ce46:	2b01      	cmp	r3, #1
 800ce48:	d806      	bhi.n	800ce58 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800ce4a:	4b1b      	ldr	r3, [pc, #108]	@ (800ceb8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800ce4c:	4a1b      	ldr	r2, [pc, #108]	@ (800cebc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800ce4e:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800ce52:	4816      	ldr	r0, [pc, #88]	@ (800ceac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800ce54:	f017 fa0e 	bl	8024274 <__assert_func>
            const uint16_t index = pos + 1;
 800ce58:	693b      	ldr	r3, [r7, #16]
 800ce5a:	8a9b      	ldrh	r3, [r3, #20]
 800ce5c:	3301      	adds	r3, #1
 800ce5e:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800ce60:	89bb      	ldrh	r3, [r7, #12]
 800ce62:	2b09      	cmp	r3, #9
 800ce64:	d801      	bhi.n	800ce6a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800ce66:	89bb      	ldrh	r3, [r7, #12]
 800ce68:	e000      	b.n	800ce6c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800ce6a:	2300      	movs	r3, #0
 800ce6c:	693a      	ldr	r2, [r7, #16]
 800ce6e:	89f9      	ldrh	r1, [r7, #14]
 800ce70:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800ce74:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800ce76:	687b      	ldr	r3, [r7, #4]
 800ce78:	3322      	adds	r3, #34	@ 0x22
 800ce7a:	61bb      	str	r3, [r7, #24]
 800ce7c:	f640 133f 	movw	r3, #2367	@ 0x93f
 800ce80:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800ce82:	69bb      	ldr	r3, [r7, #24]
 800ce84:	8a9b      	ldrh	r3, [r3, #20]
 800ce86:	4619      	mov	r1, r3
 800ce88:	69bb      	ldr	r3, [r7, #24]
 800ce8a:	8afa      	ldrh	r2, [r7, #22]
 800ce8c:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800ce90:	bf00      	nop
        }
    }
    return getNextChar();
 800ce92:	6878      	ldr	r0, [r7, #4]
 800ce94:	f008 f9fc 	bl	8015290 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ce98:	4603      	mov	r3, r0
}
 800ce9a:	4618      	mov	r0, r3
 800ce9c:	3728      	adds	r7, #40	@ 0x28
 800ce9e:	46bd      	mov	sp, r7
 800cea0:	bd80      	pop	{r7, pc}
 800cea2:	bf00      	nop
 800cea4:	08027c94 	.word	0x08027c94
 800cea8:	08027ca0 	.word	0x08027ca0
 800ceac:	08027d4c 	.word	0x08027d4c
 800ceb0:	08027d94 	.word	0x08027d94
 800ceb4:	08027da4 	.word	0x08027da4
 800ceb8:	08027e78 	.word	0x08027e78
 800cebc:	08027e84 	.word	0x08027e84

0800cec0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800cec0:	b580      	push	{r7, lr}
 800cec2:	b082      	sub	sp, #8
 800cec4:	af00      	add	r7, sp, #0
 800cec6:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800cec8:	6878      	ldr	r0, [r7, #4]
 800ceca:	f008 f9a8 	bl	801521e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800cece:	bf00      	nop
 800ced0:	3708      	adds	r7, #8
 800ced2:	46bd      	mov	sp, r7
 800ced4:	bd80      	pop	{r7, pc}

0800ced6 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800ced6:	b580      	push	{r7, lr}
 800ced8:	b088      	sub	sp, #32
 800ceda:	af02      	add	r7, sp, #8
 800cedc:	60f8      	str	r0, [r7, #12]
 800cede:	1d38      	adds	r0, r7, #4
 800cee0:	e880 0006 	stmia.w	r0, {r1, r2}
 800cee4:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800cee6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800ceea:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800ceec:	1d39      	adds	r1, r7, #4
 800ceee:	697b      	ldr	r3, [r7, #20]
 800cef0:	9301      	str	r3, [sp, #4]
 800cef2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800cef4:	9300      	str	r3, [sp, #0]
 800cef6:	6a3b      	ldr	r3, [r7, #32]
 800cef8:	683a      	ldr	r2, [r7, #0]
 800cefa:	68f8      	ldr	r0, [r7, #12]
 800cefc:	f005 fc7c 	bl	80127f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800cf00:	bf00      	nop
 800cf02:	3718      	adds	r7, #24
 800cf04:	46bd      	mov	sp, r7
 800cf06:	bd80      	pop	{r7, pc}

0800cf08 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800cf08:	b590      	push	{r4, r7, lr}
 800cf0a:	b085      	sub	sp, #20
 800cf0c:	af00      	add	r7, sp, #0
 800cf0e:	4603      	mov	r3, r0
 800cf10:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800cf12:	2300      	movs	r3, #0
 800cf14:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800cf16:	88fb      	ldrh	r3, [r7, #6]
 800cf18:	2b00      	cmp	r3, #0
 800cf1a:	d127      	bne.n	800cf6c <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800cf1c:	88fb      	ldrh	r3, [r7, #6]
 800cf1e:	4a1e      	ldr	r2, [pc, #120]	@ (800cf98 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800cf20:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800cf24:	2b00      	cmp	r3, #0
 800cf26:	d016      	beq.n	800cf56 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800cf28:	88fb      	ldrh	r3, [r7, #6]
 800cf2a:	4a1b      	ldr	r2, [pc, #108]	@ (800cf98 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800cf2c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800cf30:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800cf32:	68bb      	ldr	r3, [r7, #8]
 800cf34:	681b      	ldr	r3, [r3, #0]
 800cf36:	68ba      	ldr	r2, [r7, #8]
 800cf38:	4413      	add	r3, r2
 800cf3a:	4a18      	ldr	r2, [pc, #96]	@ (800cf9c <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800cf3c:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800cf3e:	68bb      	ldr	r3, [r7, #8]
 800cf40:	685b      	ldr	r3, [r3, #4]
 800cf42:	68ba      	ldr	r2, [r7, #8]
 800cf44:	4413      	add	r3, r2
 800cf46:	4a16      	ldr	r2, [pc, #88]	@ (800cfa0 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800cf48:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800cf4a:	68bb      	ldr	r3, [r7, #8]
 800cf4c:	689b      	ldr	r3, [r3, #8]
 800cf4e:	68ba      	ldr	r2, [r7, #8]
 800cf50:	4413      	add	r3, r2
 800cf52:	60fb      	str	r3, [r7, #12]
 800cf54:	e00a      	b.n	800cf6c <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800cf56:	4b11      	ldr	r3, [pc, #68]	@ (800cf9c <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800cf58:	4a12      	ldr	r2, [pc, #72]	@ (800cfa4 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800cf5a:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800cf5c:	4a12      	ldr	r2, [pc, #72]	@ (800cfa8 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800cf5e:	4b10      	ldr	r3, [pc, #64]	@ (800cfa0 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800cf60:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800cf62:	88fb      	ldrh	r3, [r7, #6]
 800cf64:	4a11      	ldr	r2, [pc, #68]	@ (800cfac <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800cf66:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800cf6a:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800cf6c:	68fb      	ldr	r3, [r7, #12]
 800cf6e:	2b00      	cmp	r3, #0
 800cf70:	d00d      	beq.n	800cf8e <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800cf72:	4a0f      	ldr	r2, [pc, #60]	@ (800cfb0 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800cf74:	88fb      	ldrh	r3, [r7, #6]
 800cf76:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800cf78:	f000 f83e 	bl	800cff8 <_ZN17TypedTextDatabase8getFontsEv>
 800cf7c:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800cf7e:	f000 f833 	bl	800cfe8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800cf82:	4603      	mov	r3, r0
 800cf84:	461a      	mov	r2, r3
 800cf86:	4621      	mov	r1, r4
 800cf88:	68f8      	ldr	r0, [r7, #12]
 800cf8a:	f7ff fea5 	bl	800ccd8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800cf8e:	bf00      	nop
 800cf90:	3714      	adds	r7, #20
 800cf92:	46bd      	mov	sp, r7
 800cf94:	bd90      	pop	{r4, r7, pc}
 800cf96:	bf00      	nop
 800cf98:	20000660 	.word	0x20000660
 800cf9c:	20000668 	.word	0x20000668
 800cfa0:	2000066c 	.word	0x2000066c
 800cfa4:	0806e9e8 	.word	0x0806e9e8
 800cfa8:	0806e9cc 	.word	0x0806e9cc
 800cfac:	0806ea58 	.word	0x0806ea58
 800cfb0:	20000664 	.word	0x20000664

0800cfb4 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800cfb4:	b480      	push	{r7}
 800cfb6:	b083      	sub	sp, #12
 800cfb8:	af00      	add	r7, sp, #0
 800cfba:	6078      	str	r0, [r7, #4]
 800cfbc:	460b      	mov	r3, r1
 800cfbe:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800cfc0:	4b07      	ldr	r3, [pc, #28]	@ (800cfe0 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800cfc2:	681a      	ldr	r2, [r3, #0]
 800cfc4:	4b07      	ldr	r3, [pc, #28]	@ (800cfe4 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800cfc6:	6819      	ldr	r1, [r3, #0]
 800cfc8:	887b      	ldrh	r3, [r7, #2]
 800cfca:	009b      	lsls	r3, r3, #2
 800cfcc:	440b      	add	r3, r1
 800cfce:	681b      	ldr	r3, [r3, #0]
 800cfd0:	005b      	lsls	r3, r3, #1
 800cfd2:	4413      	add	r3, r2
}
 800cfd4:	4618      	mov	r0, r3
 800cfd6:	370c      	adds	r7, #12
 800cfd8:	46bd      	mov	sp, r7
 800cfda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfde:	4770      	bx	lr
 800cfe0:	20000668 	.word	0x20000668
 800cfe4:	2000066c 	.word	0x2000066c

0800cfe8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800cfe8:	b480      	push	{r7}
 800cfea:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800cfec:	2307      	movs	r3, #7
}
 800cfee:	4618      	mov	r0, r3
 800cff0:	46bd      	mov	sp, r7
 800cff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cff6:	4770      	bx	lr

0800cff8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800cff8:	b480      	push	{r7}
 800cffa:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800cffc:	4b02      	ldr	r3, [pc, #8]	@ (800d008 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800cffe:	4618      	mov	r0, r3
 800d000:	46bd      	mov	sp, r7
 800d002:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d006:	4770      	bx	lr
 800d008:	20000670 	.word	0x20000670

0800d00c <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800d00c:	b580      	push	{r7, lr}
 800d00e:	b082      	sub	sp, #8
 800d010:	af00      	add	r7, sp, #0
 800d012:	6078      	str	r0, [r7, #4]
 800d014:	6039      	str	r1, [r7, #0]
 800d016:	687b      	ldr	r3, [r7, #4]
 800d018:	2b01      	cmp	r3, #1
 800d01a:	d113      	bne.n	800d044 <_Z41__static_initialization_and_destruction_0ii+0x38>
 800d01c:	683b      	ldr	r3, [r7, #0]
 800d01e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800d022:	4293      	cmp	r3, r2
 800d024:	d10e      	bne.n	800d044 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 800d026:	f7fb fec7 	bl	8008db8 <_Z23getFont_verdana_20_4bppv>
 800d02a:	4603      	mov	r3, r0
};
 800d02c:	4a07      	ldr	r2, [pc, #28]	@ (800d04c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800d02e:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800d030:	f7fb ff1c 	bl	8008e6c <_Z23getFont_verdana_40_4bppv>
 800d034:	4603      	mov	r3, r0
};
 800d036:	4a05      	ldr	r2, [pc, #20]	@ (800d04c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800d038:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 800d03a:	f7fb fe63 	bl	8008d04 <_Z23getFont_verdana_10_4bppv>
 800d03e:	4603      	mov	r3, r0
};
 800d040:	4a02      	ldr	r2, [pc, #8]	@ (800d04c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800d042:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 800d044:	bf00      	nop
 800d046:	3708      	adds	r7, #8
 800d048:	46bd      	mov	sp, r7
 800d04a:	bd80      	pop	{r7, pc}
 800d04c:	20000670 	.word	0x20000670

0800d050 <_GLOBAL__sub_I_touchgfx_fonts>:
 800d050:	b580      	push	{r7, lr}
 800d052:	af00      	add	r7, sp, #0
 800d054:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800d058:	2001      	movs	r0, #1
 800d05a:	f7ff ffd7 	bl	800d00c <_Z41__static_initialization_and_destruction_0ii>
 800d05e:	bd80      	pop	{r7, pc}

0800d060 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800d060:	b580      	push	{r7, lr}
 800d062:	b082      	sub	sp, #8
 800d064:	af00      	add	r7, sp, #0
 800d066:	6078      	str	r0, [r7, #4]
 800d068:	4a05      	ldr	r2, [pc, #20]	@ (800d080 <_ZN19FrontendApplicationD1Ev+0x20>)
 800d06a:	687b      	ldr	r3, [r7, #4]
 800d06c:	601a      	str	r2, [r3, #0]
 800d06e:	687b      	ldr	r3, [r7, #4]
 800d070:	4618      	mov	r0, r3
 800d072:	f7fc f95b 	bl	800932c <_ZN23FrontendApplicationBaseD1Ev>
 800d076:	687b      	ldr	r3, [r7, #4]
 800d078:	4618      	mov	r0, r3
 800d07a:	3708      	adds	r7, #8
 800d07c:	46bd      	mov	sp, r7
 800d07e:	bd80      	pop	{r7, pc}
 800d080:	08029080 	.word	0x08029080

0800d084 <_ZN19FrontendApplicationD0Ev>:
 800d084:	b580      	push	{r7, lr}
 800d086:	b082      	sub	sp, #8
 800d088:	af00      	add	r7, sp, #0
 800d08a:	6078      	str	r0, [r7, #4]
 800d08c:	6878      	ldr	r0, [r7, #4]
 800d08e:	f7ff ffe7 	bl	800d060 <_ZN19FrontendApplicationD1Ev>
 800d092:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800d096:	6878      	ldr	r0, [r7, #4]
 800d098:	f016 febd 	bl	8023e16 <_ZdlPvj>
 800d09c:	687b      	ldr	r3, [r7, #4]
 800d09e:	4618      	mov	r0, r3
 800d0a0:	3708      	adds	r7, #8
 800d0a2:	46bd      	mov	sp, r7
 800d0a4:	bd80      	pop	{r7, pc}

0800d0a6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800d0a6:	b580      	push	{r7, lr}
 800d0a8:	b082      	sub	sp, #8
 800d0aa:	af00      	add	r7, sp, #0
 800d0ac:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800d0ae:	687b      	ldr	r3, [r7, #4]
 800d0b0:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800d0b4:	4618      	mov	r0, r3
 800d0b6:	f000 f877 	bl	800d1a8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800d0ba:	687b      	ldr	r3, [r7, #4]
 800d0bc:	4618      	mov	r0, r3
 800d0be:	f006 f875 	bl	80131ac <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800d0c2:	bf00      	nop
 800d0c4:	3708      	adds	r7, #8
 800d0c6:	46bd      	mov	sp, r7
 800d0c8:	bd80      	pop	{r7, pc}
	...

0800d0cc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800d0cc:	b580      	push	{r7, lr}
 800d0ce:	b084      	sub	sp, #16
 800d0d0:	af00      	add	r7, sp, #0
 800d0d2:	60f8      	str	r0, [r7, #12]
 800d0d4:	60b9      	str	r1, [r7, #8]
 800d0d6:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800d0d8:	68fb      	ldr	r3, [r7, #12]
 800d0da:	687a      	ldr	r2, [r7, #4]
 800d0dc:	68b9      	ldr	r1, [r7, #8]
 800d0de:	4618      	mov	r0, r3
 800d0e0:	f7fc f974 	bl	80093cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800d0e4:	4a03      	ldr	r2, [pc, #12]	@ (800d0f4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800d0e6:	68fb      	ldr	r3, [r7, #12]
 800d0e8:	601a      	str	r2, [r3, #0]
{

}
 800d0ea:	68fb      	ldr	r3, [r7, #12]
 800d0ec:	4618      	mov	r0, r3
 800d0ee:	3710      	adds	r7, #16
 800d0f0:	46bd      	mov	sp, r7
 800d0f2:	bd80      	pop	{r7, pc}
 800d0f4:	08029080 	.word	0x08029080

0800d0f8 <_ZN5Model14getButtonValueEv>:
extern uint8_t localIP[20];
extern void joinAP(char selection);
}

bool Model::getButtonValue()
{
 800d0f8:	b480      	push	{r7}
 800d0fa:	b083      	sub	sp, #12
 800d0fc:	af00      	add	r7, sp, #0
 800d0fe:	6078      	str	r0, [r7, #4]
#ifndef SIMULATOR
	return buttonPressed;
 800d100:	4b03      	ldr	r3, [pc, #12]	@ (800d110 <_ZN5Model14getButtonValueEv+0x18>)
 800d102:	781b      	ldrb	r3, [r3, #0]
#else
// Implementation for simulator
	return false;
#endif //SIMULATOR
}
 800d104:	4618      	mov	r0, r3
 800d106:	370c      	adds	r7, #12
 800d108:	46bd      	mov	sp, r7
 800d10a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d10e:	4770      	bx	lr
 800d110:	20000328 	.word	0x20000328

0800d114 <_ZN5Model9connectAPEc>:
	leds(selection);
#endif
}

void Model::connectAP(char selection)
{
 800d114:	b580      	push	{r7, lr}
 800d116:	b082      	sub	sp, #8
 800d118:	af00      	add	r7, sp, #0
 800d11a:	6078      	str	r0, [r7, #4]
 800d11c:	460b      	mov	r3, r1
 800d11e:	70fb      	strb	r3, [r7, #3]
#ifndef SIMULATOR
	joinAP(selection);
 800d120:	78fb      	ldrb	r3, [r7, #3]
 800d122:	4618      	mov	r0, r3
 800d124:	f7f4 fc90 	bl	8001a48 <joinAP>
#endif
}
 800d128:	bf00      	nop
 800d12a:	3708      	adds	r7, #8
 800d12c:	46bd      	mov	sp, r7
 800d12e:	bd80      	pop	{r7, pc}

0800d130 <_ZN5Model7getTempEv>:

float Model::getTemp()
{
 800d130:	b480      	push	{r7}
 800d132:	b083      	sub	sp, #12
 800d134:	af00      	add	r7, sp, #0
 800d136:	6078      	str	r0, [r7, #4]
#ifndef SIMULATOR
	return thermTemp;
 800d138:	4b05      	ldr	r3, [pc, #20]	@ (800d150 <_ZN5Model7getTempEv+0x20>)
 800d13a:	681b      	ldr	r3, [r3, #0]
 800d13c:	ee07 3a90 	vmov	s15, r3
#else
// Implementation for simulator
	return 22.5;
#endif //SIMULATOR
}
 800d140:	eeb0 0a67 	vmov.f32	s0, s15
 800d144:	370c      	adds	r7, #12
 800d146:	46bd      	mov	sp, r7
 800d148:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d14c:	4770      	bx	lr
 800d14e:	bf00      	nop
 800d150:	20000350 	.word	0x20000350

0800d154 <_ZN5Model13getWifiStatusEv>:

bool Model::getWifiStatus()
{
 800d154:	b480      	push	{r7}
 800d156:	b083      	sub	sp, #12
 800d158:	af00      	add	r7, sp, #0
 800d15a:	6078      	str	r0, [r7, #4]
#ifndef SIMULATOR
	return connected;
 800d15c:	4b03      	ldr	r3, [pc, #12]	@ (800d16c <_ZN5Model13getWifiStatusEv+0x18>)
 800d15e:	781b      	ldrb	r3, [r3, #0]
#else
// Implementation for simulator
	return false;
#endif //SIMULATOR
}
 800d160:	4618      	mov	r0, r3
 800d162:	370c      	adds	r7, #12
 800d164:	46bd      	mov	sp, r7
 800d166:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d16a:	4770      	bx	lr
 800d16c:	20000354 	.word	0x20000354

0800d170 <_ZN5Model11getWifiInfoEv>:


uint8_t* Model::getWifiInfo()
{
 800d170:	b480      	push	{r7}
 800d172:	b083      	sub	sp, #12
 800d174:	af00      	add	r7, sp, #0
 800d176:	6078      	str	r0, [r7, #4]
#ifndef SIMULATOR
	return localIP;
 800d178:	4b03      	ldr	r3, [pc, #12]	@ (800d188 <_ZN5Model11getWifiInfoEv+0x18>)
#else
// Implementation for simulator
	return false;
#endif //SIMULATOR
}
 800d17a:	4618      	mov	r0, r3
 800d17c:	370c      	adds	r7, #12
 800d17e:	46bd      	mov	sp, r7
 800d180:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d184:	4770      	bx	lr
 800d186:	bf00      	nop
 800d188:	20000004 	.word	0x20000004

0800d18c <_ZN5ModelC1Ev>:



Model::Model() : modelListener(0)
 800d18c:	b480      	push	{r7}
 800d18e:	b083      	sub	sp, #12
 800d190:	af00      	add	r7, sp, #0
 800d192:	6078      	str	r0, [r7, #4]
 800d194:	687b      	ldr	r3, [r7, #4]
 800d196:	2200      	movs	r2, #0
 800d198:	601a      	str	r2, [r3, #0]
{

}
 800d19a:	687b      	ldr	r3, [r7, #4]
 800d19c:	4618      	mov	r0, r3
 800d19e:	370c      	adds	r7, #12
 800d1a0:	46bd      	mov	sp, r7
 800d1a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1a6:	4770      	bx	lr

0800d1a8 <_ZN5Model4tickEv>:

void Model::tick()
{
 800d1a8:	b5b0      	push	{r4, r5, r7, lr}
 800d1aa:	b082      	sub	sp, #8
 800d1ac:	af00      	add	r7, sp, #0
 800d1ae:	6078      	str	r0, [r7, #4]
	if(modelListener != 0)
 800d1b0:	687b      	ldr	r3, [r7, #4]
 800d1b2:	681b      	ldr	r3, [r3, #0]
 800d1b4:	2b00      	cmp	r3, #0
 800d1b6:	d039      	beq.n	800d22c <_ZN5Model4tickEv+0x84>
	{
		modelListener->newButtonValue(getButtonValue());
 800d1b8:	687b      	ldr	r3, [r7, #4]
 800d1ba:	681d      	ldr	r5, [r3, #0]
 800d1bc:	687b      	ldr	r3, [r7, #4]
 800d1be:	681b      	ldr	r3, [r3, #0]
 800d1c0:	681b      	ldr	r3, [r3, #0]
 800d1c2:	3308      	adds	r3, #8
 800d1c4:	681c      	ldr	r4, [r3, #0]
 800d1c6:	6878      	ldr	r0, [r7, #4]
 800d1c8:	f7ff ff96 	bl	800d0f8 <_ZN5Model14getButtonValueEv>
 800d1cc:	4603      	mov	r3, r0
 800d1ce:	4619      	mov	r1, r3
 800d1d0:	4628      	mov	r0, r5
 800d1d2:	47a0      	blx	r4
		modelListener->newTemp(getTemp());
 800d1d4:	687b      	ldr	r3, [r7, #4]
 800d1d6:	681d      	ldr	r5, [r3, #0]
 800d1d8:	687b      	ldr	r3, [r7, #4]
 800d1da:	681b      	ldr	r3, [r3, #0]
 800d1dc:	681b      	ldr	r3, [r3, #0]
 800d1de:	3310      	adds	r3, #16
 800d1e0:	681c      	ldr	r4, [r3, #0]
 800d1e2:	6878      	ldr	r0, [r7, #4]
 800d1e4:	f7ff ffa4 	bl	800d130 <_ZN5Model7getTempEv>
 800d1e8:	eef0 7a40 	vmov.f32	s15, s0
 800d1ec:	eeb0 0a67 	vmov.f32	s0, s15
 800d1f0:	4628      	mov	r0, r5
 800d1f2:	47a0      	blx	r4
		modelListener->newWifiStatus(getWifiStatus());
 800d1f4:	687b      	ldr	r3, [r7, #4]
 800d1f6:	681d      	ldr	r5, [r3, #0]
 800d1f8:	687b      	ldr	r3, [r7, #4]
 800d1fa:	681b      	ldr	r3, [r3, #0]
 800d1fc:	681b      	ldr	r3, [r3, #0]
 800d1fe:	3314      	adds	r3, #20
 800d200:	681c      	ldr	r4, [r3, #0]
 800d202:	6878      	ldr	r0, [r7, #4]
 800d204:	f7ff ffa6 	bl	800d154 <_ZN5Model13getWifiStatusEv>
 800d208:	4603      	mov	r3, r0
 800d20a:	4619      	mov	r1, r3
 800d20c:	4628      	mov	r0, r5
 800d20e:	47a0      	blx	r4
		modelListener->newWifiInfo(getWifiInfo());
 800d210:	687b      	ldr	r3, [r7, #4]
 800d212:	681d      	ldr	r5, [r3, #0]
 800d214:	687b      	ldr	r3, [r7, #4]
 800d216:	681b      	ldr	r3, [r3, #0]
 800d218:	681b      	ldr	r3, [r3, #0]
 800d21a:	3318      	adds	r3, #24
 800d21c:	681c      	ldr	r4, [r3, #0]
 800d21e:	6878      	ldr	r0, [r7, #4]
 800d220:	f7ff ffa6 	bl	800d170 <_ZN5Model11getWifiInfoEv>
 800d224:	4603      	mov	r3, r0
 800d226:	4619      	mov	r1, r3
 800d228:	4628      	mov	r0, r5
 800d22a:	47a0      	blx	r4
	}
}
 800d22c:	bf00      	nop
 800d22e:	3708      	adds	r7, #8
 800d230:	46bd      	mov	sp, r7
 800d232:	bdb0      	pop	{r4, r5, r7, pc}

0800d234 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800d234:	b480      	push	{r7}
 800d236:	b083      	sub	sp, #12
 800d238:	af00      	add	r7, sp, #0
 800d23a:	6078      	str	r0, [r7, #4]
    {
    }
 800d23c:	bf00      	nop
 800d23e:	370c      	adds	r7, #12
 800d240:	46bd      	mov	sp, r7
 800d242:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d246:	4770      	bx	lr

0800d248 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800d248:	b480      	push	{r7}
 800d24a:	b083      	sub	sp, #12
 800d24c:	af00      	add	r7, sp, #0
 800d24e:	6078      	str	r0, [r7, #4]
    {
    }
 800d250:	bf00      	nop
 800d252:	370c      	adds	r7, #12
 800d254:	46bd      	mov	sp, r7
 800d256:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d25a:	4770      	bx	lr

0800d25c <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800d25c:	b480      	push	{r7}
 800d25e:	b083      	sub	sp, #12
 800d260:	af00      	add	r7, sp, #0
 800d262:	6078      	str	r0, [r7, #4]
    {
 800d264:	4a04      	ldr	r2, [pc, #16]	@ (800d278 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800d266:	687b      	ldr	r3, [r7, #4]
 800d268:	601a      	str	r2, [r3, #0]
    }
 800d26a:	687b      	ldr	r3, [r7, #4]
 800d26c:	4618      	mov	r0, r3
 800d26e:	370c      	adds	r7, #12
 800d270:	46bd      	mov	sp, r7
 800d272:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d276:	4770      	bx	lr
 800d278:	08029148 	.word	0x08029148

0800d27c <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800d27c:	b580      	push	{r7, lr}
 800d27e:	b082      	sub	sp, #8
 800d280:	af00      	add	r7, sp, #0
 800d282:	6078      	str	r0, [r7, #4]
    }
 800d284:	6878      	ldr	r0, [r7, #4]
 800d286:	f7ff ffe9 	bl	800d25c <_ZN8touchgfx9PresenterD1Ev>
 800d28a:	2104      	movs	r1, #4
 800d28c:	6878      	ldr	r0, [r7, #4]
 800d28e:	f016 fdc2 	bl	8023e16 <_ZdlPvj>
 800d292:	687b      	ldr	r3, [r7, #4]
 800d294:	4618      	mov	r0, r3
 800d296:	3708      	adds	r7, #8
 800d298:	46bd      	mov	sp, r7
 800d29a:	bd80      	pop	{r7, pc}

0800d29c <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800d29c:	b480      	push	{r7}
 800d29e:	b083      	sub	sp, #12
 800d2a0:	af00      	add	r7, sp, #0
 800d2a2:	6078      	str	r0, [r7, #4]
    {
 800d2a4:	4a04      	ldr	r2, [pc, #16]	@ (800d2b8 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800d2a6:	687b      	ldr	r3, [r7, #4]
 800d2a8:	601a      	str	r2, [r3, #0]
    }
 800d2aa:	687b      	ldr	r3, [r7, #4]
 800d2ac:	4618      	mov	r0, r3
 800d2ae:	370c      	adds	r7, #12
 800d2b0:	46bd      	mov	sp, r7
 800d2b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2b6:	4770      	bx	lr
 800d2b8:	08029148 	.word	0x08029148

0800d2bc <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800d2bc:	b480      	push	{r7}
 800d2be:	b083      	sub	sp, #12
 800d2c0:	af00      	add	r7, sp, #0
 800d2c2:	6078      	str	r0, [r7, #4]
 800d2c4:	4a06      	ldr	r2, [pc, #24]	@ (800d2e0 <_ZN13ModelListenerC1Ev+0x24>)
 800d2c6:	687b      	ldr	r3, [r7, #4]
 800d2c8:	601a      	str	r2, [r3, #0]
 800d2ca:	687b      	ldr	r3, [r7, #4]
 800d2cc:	2200      	movs	r2, #0
 800d2ce:	605a      	str	r2, [r3, #4]
 800d2d0:	687b      	ldr	r3, [r7, #4]
 800d2d2:	4618      	mov	r0, r3
 800d2d4:	370c      	adds	r7, #12
 800d2d6:	46bd      	mov	sp, r7
 800d2d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2dc:	4770      	bx	lr
 800d2de:	bf00      	nop
 800d2e0:	08029120 	.word	0x08029120

0800d2e4 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800d2e4:	b480      	push	{r7}
 800d2e6:	b083      	sub	sp, #12
 800d2e8:	af00      	add	r7, sp, #0
 800d2ea:	6078      	str	r0, [r7, #4]
 800d2ec:	4a04      	ldr	r2, [pc, #16]	@ (800d300 <_ZN13ModelListenerD1Ev+0x1c>)
 800d2ee:	687b      	ldr	r3, [r7, #4]
 800d2f0:	601a      	str	r2, [r3, #0]
 800d2f2:	687b      	ldr	r3, [r7, #4]
 800d2f4:	4618      	mov	r0, r3
 800d2f6:	370c      	adds	r7, #12
 800d2f8:	46bd      	mov	sp, r7
 800d2fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2fe:	4770      	bx	lr
 800d300:	08029120 	.word	0x08029120

0800d304 <_ZN13ModelListenerD0Ev>:
 800d304:	b580      	push	{r7, lr}
 800d306:	b082      	sub	sp, #8
 800d308:	af00      	add	r7, sp, #0
 800d30a:	6078      	str	r0, [r7, #4]
 800d30c:	6878      	ldr	r0, [r7, #4]
 800d30e:	f7ff ffe9 	bl	800d2e4 <_ZN13ModelListenerD1Ev>
 800d312:	2108      	movs	r1, #8
 800d314:	6878      	ldr	r0, [r7, #4]
 800d316:	f016 fd7e 	bl	8023e16 <_ZdlPvj>
 800d31a:	687b      	ldr	r3, [r7, #4]
 800d31c:	4618      	mov	r0, r3
 800d31e:	3708      	adds	r7, #8
 800d320:	46bd      	mov	sp, r7
 800d322:	bd80      	pop	{r7, pc}

0800d324 <_ZN13ModelListener14newButtonValueEb>:

    virtual void newButtonValue(bool button){}
 800d324:	b480      	push	{r7}
 800d326:	b083      	sub	sp, #12
 800d328:	af00      	add	r7, sp, #0
 800d32a:	6078      	str	r0, [r7, #4]
 800d32c:	460b      	mov	r3, r1
 800d32e:	70fb      	strb	r3, [r7, #3]
 800d330:	bf00      	nop
 800d332:	370c      	adds	r7, #12
 800d334:	46bd      	mov	sp, r7
 800d336:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d33a:	4770      	bx	lr

0800d33c <_ZN13ModelListener9toggleLedEc>:

    virtual void toggleLed(char selection){}
 800d33c:	b480      	push	{r7}
 800d33e:	b083      	sub	sp, #12
 800d340:	af00      	add	r7, sp, #0
 800d342:	6078      	str	r0, [r7, #4]
 800d344:	460b      	mov	r3, r1
 800d346:	70fb      	strb	r3, [r7, #3]
 800d348:	bf00      	nop
 800d34a:	370c      	adds	r7, #12
 800d34c:	46bd      	mov	sp, r7
 800d34e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d352:	4770      	bx	lr

0800d354 <_ZN13ModelListener7newTempEf>:

    virtual void newTemp(float Temp){}
 800d354:	b480      	push	{r7}
 800d356:	b083      	sub	sp, #12
 800d358:	af00      	add	r7, sp, #0
 800d35a:	6078      	str	r0, [r7, #4]
 800d35c:	ed87 0a00 	vstr	s0, [r7]
 800d360:	bf00      	nop
 800d362:	370c      	adds	r7, #12
 800d364:	46bd      	mov	sp, r7
 800d366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d36a:	4770      	bx	lr

0800d36c <_ZN13ModelListener13newWifiStatusEb>:

    virtual void newWifiStatus(bool status){}
 800d36c:	b480      	push	{r7}
 800d36e:	b083      	sub	sp, #12
 800d370:	af00      	add	r7, sp, #0
 800d372:	6078      	str	r0, [r7, #4]
 800d374:	460b      	mov	r3, r1
 800d376:	70fb      	strb	r3, [r7, #3]
 800d378:	bf00      	nop
 800d37a:	370c      	adds	r7, #12
 800d37c:	46bd      	mov	sp, r7
 800d37e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d382:	4770      	bx	lr

0800d384 <_ZN13ModelListener11newWifiInfoEPh>:

    virtual void newWifiInfo(uint8_t* wifi){}
 800d384:	b480      	push	{r7}
 800d386:	b083      	sub	sp, #12
 800d388:	af00      	add	r7, sp, #0
 800d38a:	6078      	str	r0, [r7, #4]
 800d38c:	6039      	str	r1, [r7, #0]
 800d38e:	bf00      	nop
 800d390:	370c      	adds	r7, #12
 800d392:	46bd      	mov	sp, r7
 800d394:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d398:	4770      	bx	lr

0800d39a <_ZN13ModelListener9connectAPEc>:

    virtual void connectAP(char selection){}
 800d39a:	b480      	push	{r7}
 800d39c:	b083      	sub	sp, #12
 800d39e:	af00      	add	r7, sp, #0
 800d3a0:	6078      	str	r0, [r7, #4]
 800d3a2:	460b      	mov	r3, r1
 800d3a4:	70fb      	strb	r3, [r7, #3]
 800d3a6:	bf00      	nop
 800d3a8:	370c      	adds	r7, #12
 800d3aa:	46bd      	mov	sp, r7
 800d3ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3b0:	4770      	bx	lr
	...

0800d3b4 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 800d3b4:	b580      	push	{r7, lr}
 800d3b6:	b082      	sub	sp, #8
 800d3b8:	af00      	add	r7, sp, #0
 800d3ba:	6078      	str	r0, [r7, #4]
 800d3bc:	4a09      	ldr	r2, [pc, #36]	@ (800d3e4 <_ZN16Screen1PresenterD1Ev+0x30>)
 800d3be:	687b      	ldr	r3, [r7, #4]
 800d3c0:	601a      	str	r2, [r3, #0]
 800d3c2:	4a09      	ldr	r2, [pc, #36]	@ (800d3e8 <_ZN16Screen1PresenterD1Ev+0x34>)
 800d3c4:	687b      	ldr	r3, [r7, #4]
 800d3c6:	605a      	str	r2, [r3, #4]
 800d3c8:	687b      	ldr	r3, [r7, #4]
 800d3ca:	3304      	adds	r3, #4
 800d3cc:	4618      	mov	r0, r3
 800d3ce:	f7ff ff89 	bl	800d2e4 <_ZN13ModelListenerD1Ev>
 800d3d2:	687b      	ldr	r3, [r7, #4]
 800d3d4:	4618      	mov	r0, r3
 800d3d6:	f7ff ff41 	bl	800d25c <_ZN8touchgfx9PresenterD1Ev>
 800d3da:	687b      	ldr	r3, [r7, #4]
 800d3dc:	4618      	mov	r0, r3
 800d3de:	3708      	adds	r7, #8
 800d3e0:	46bd      	mov	sp, r7
 800d3e2:	bd80      	pop	{r7, pc}
 800d3e4:	080290d4 	.word	0x080290d4
 800d3e8:	080290f8 	.word	0x080290f8

0800d3ec <_ZThn4_N16Screen1PresenterD1Ev>:
 800d3ec:	f1a0 0004 	sub.w	r0, r0, #4
 800d3f0:	e7e0      	b.n	800d3b4 <_ZN16Screen1PresenterD1Ev>
 800d3f2:	bf00      	nop

0800d3f4 <_ZN16Screen1PresenterD0Ev>:
 800d3f4:	b580      	push	{r7, lr}
 800d3f6:	b082      	sub	sp, #8
 800d3f8:	af00      	add	r7, sp, #0
 800d3fa:	6078      	str	r0, [r7, #4]
 800d3fc:	6878      	ldr	r0, [r7, #4]
 800d3fe:	f7ff ffd9 	bl	800d3b4 <_ZN16Screen1PresenterD1Ev>
 800d402:	2110      	movs	r1, #16
 800d404:	6878      	ldr	r0, [r7, #4]
 800d406:	f016 fd06 	bl	8023e16 <_ZdlPvj>
 800d40a:	687b      	ldr	r3, [r7, #4]
 800d40c:	4618      	mov	r0, r3
 800d40e:	3708      	adds	r7, #8
 800d410:	46bd      	mov	sp, r7
 800d412:	bd80      	pop	{r7, pc}

0800d414 <_ZThn4_N16Screen1PresenterD0Ev>:
 800d414:	f1a0 0004 	sub.w	r0, r0, #4
 800d418:	e7ec      	b.n	800d3f4 <_ZN16Screen1PresenterD0Ev>
	...

0800d41c <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 800d41c:	b580      	push	{r7, lr}
 800d41e:	b082      	sub	sp, #8
 800d420:	af00      	add	r7, sp, #0
 800d422:	6078      	str	r0, [r7, #4]
 800d424:	6039      	str	r1, [r7, #0]
    : view(v)
 800d426:	687b      	ldr	r3, [r7, #4]
 800d428:	4618      	mov	r0, r3
 800d42a:	f7ff ff37 	bl	800d29c <_ZN8touchgfx9PresenterC1Ev>
 800d42e:	687b      	ldr	r3, [r7, #4]
 800d430:	3304      	adds	r3, #4
 800d432:	4618      	mov	r0, r3
 800d434:	f7ff ff42 	bl	800d2bc <_ZN13ModelListenerC1Ev>
 800d438:	4a06      	ldr	r2, [pc, #24]	@ (800d454 <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 800d43a:	687b      	ldr	r3, [r7, #4]
 800d43c:	601a      	str	r2, [r3, #0]
 800d43e:	4a06      	ldr	r2, [pc, #24]	@ (800d458 <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 800d440:	687b      	ldr	r3, [r7, #4]
 800d442:	605a      	str	r2, [r3, #4]
 800d444:	687b      	ldr	r3, [r7, #4]
 800d446:	683a      	ldr	r2, [r7, #0]
 800d448:	60da      	str	r2, [r3, #12]
{

}
 800d44a:	687b      	ldr	r3, [r7, #4]
 800d44c:	4618      	mov	r0, r3
 800d44e:	3708      	adds	r7, #8
 800d450:	46bd      	mov	sp, r7
 800d452:	bd80      	pop	{r7, pc}
 800d454:	080290d4 	.word	0x080290d4
 800d458:	080290f8 	.word	0x080290f8

0800d45c <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 800d45c:	b480      	push	{r7}
 800d45e:	b083      	sub	sp, #12
 800d460:	af00      	add	r7, sp, #0
 800d462:	6078      	str	r0, [r7, #4]

}
 800d464:	bf00      	nop
 800d466:	370c      	adds	r7, #12
 800d468:	46bd      	mov	sp, r7
 800d46a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d46e:	4770      	bx	lr

0800d470 <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 800d470:	b480      	push	{r7}
 800d472:	b083      	sub	sp, #12
 800d474:	af00      	add	r7, sp, #0
 800d476:	6078      	str	r0, [r7, #4]

}
 800d478:	bf00      	nop
 800d47a:	370c      	adds	r7, #12
 800d47c:	46bd      	mov	sp, r7
 800d47e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d482:	4770      	bx	lr

0800d484 <_ZN16Screen1Presenter14newButtonValueEb>:

void Screen1Presenter::newButtonValue(bool button)
{
 800d484:	b580      	push	{r7, lr}
 800d486:	b082      	sub	sp, #8
 800d488:	af00      	add	r7, sp, #0
 800d48a:	6078      	str	r0, [r7, #4]
 800d48c:	460b      	mov	r3, r1
 800d48e:	70fb      	strb	r3, [r7, #3]
	view.setButtonState(button);
 800d490:	687b      	ldr	r3, [r7, #4]
 800d492:	68db      	ldr	r3, [r3, #12]
 800d494:	78fa      	ldrb	r2, [r7, #3]
 800d496:	4611      	mov	r1, r2
 800d498:	4618      	mov	r0, r3
 800d49a:	f000 f895 	bl	800d5c8 <_ZN11Screen1View14setButtonStateEb>
}
 800d49e:	bf00      	nop
 800d4a0:	3708      	adds	r7, #8
 800d4a2:	46bd      	mov	sp, r7
 800d4a4:	bd80      	pop	{r7, pc}

0800d4a6 <_ZThn4_N16Screen1Presenter14newButtonValueEb>:

    void newButtonValue(bool button);
 800d4a6:	f1a0 0004 	sub.w	r0, r0, #4
 800d4aa:	f7ff bfeb 	b.w	800d484 <_ZN16Screen1Presenter14newButtonValueEb>

0800d4ae <_ZN16Screen1Presenter7newTempEf>:
{
	model->toggleLed(selection);
}

void Screen1Presenter::newTemp(float Temp)
{
 800d4ae:	b580      	push	{r7, lr}
 800d4b0:	b082      	sub	sp, #8
 800d4b2:	af00      	add	r7, sp, #0
 800d4b4:	6078      	str	r0, [r7, #4]
 800d4b6:	ed87 0a00 	vstr	s0, [r7]
	view.setTemp(Temp);
 800d4ba:	687b      	ldr	r3, [r7, #4]
 800d4bc:	68db      	ldr	r3, [r3, #12]
 800d4be:	ed97 0a00 	vldr	s0, [r7]
 800d4c2:	4618      	mov	r0, r3
 800d4c4:	f000 f88c 	bl	800d5e0 <_ZN11Screen1View7setTempEf>
}
 800d4c8:	bf00      	nop
 800d4ca:	3708      	adds	r7, #8
 800d4cc:	46bd      	mov	sp, r7
 800d4ce:	bd80      	pop	{r7, pc}

0800d4d0 <_ZThn4_N16Screen1Presenter7newTempEf>:

    void swButton(char selection);

    void newTemp(float Temp);
 800d4d0:	f1a0 0004 	sub.w	r0, r0, #4
 800d4d4:	f7ff bfeb 	b.w	800d4ae <_ZN16Screen1Presenter7newTempEf>

0800d4d8 <_ZN16Screen1Presenter13newWifiStatusEb>:


void Screen1Presenter::newWifiStatus(bool status)
{
 800d4d8:	b580      	push	{r7, lr}
 800d4da:	b082      	sub	sp, #8
 800d4dc:	af00      	add	r7, sp, #0
 800d4de:	6078      	str	r0, [r7, #4]
 800d4e0:	460b      	mov	r3, r1
 800d4e2:	70fb      	strb	r3, [r7, #3]
	view.setStatus(status);
 800d4e4:	687b      	ldr	r3, [r7, #4]
 800d4e6:	68db      	ldr	r3, [r3, #12]
 800d4e8:	78fa      	ldrb	r2, [r7, #3]
 800d4ea:	4611      	mov	r1, r2
 800d4ec:	4618      	mov	r0, r3
 800d4ee:	f000 f893 	bl	800d618 <_ZN11Screen1View9setStatusEb>
}
 800d4f2:	bf00      	nop
 800d4f4:	3708      	adds	r7, #8
 800d4f6:	46bd      	mov	sp, r7
 800d4f8:	bd80      	pop	{r7, pc}

0800d4fa <_ZThn4_N16Screen1Presenter13newWifiStatusEb>:

    void newWifiStatus(bool status);
 800d4fa:	f1a0 0004 	sub.w	r0, r0, #4
 800d4fe:	f7ff bfeb 	b.w	800d4d8 <_ZN16Screen1Presenter13newWifiStatusEb>

0800d502 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>:
     * @return pointer to the first element in the buffer where the formatted string is
     *         placed.
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
 800d502:	b580      	push	{r7, lr}
 800d504:	b084      	sub	sp, #16
 800d506:	af00      	add	r7, sp, #0
 800d508:	60f8      	str	r0, [r7, #12]
 800d50a:	460b      	mov	r3, r1
 800d50c:	607a      	str	r2, [r7, #4]
 800d50e:	ed87 0a00 	vstr	s0, [r7]
 800d512:	817b      	strh	r3, [r7, #10]
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800d514:	463b      	mov	r3, r7
 800d516:	8979      	ldrh	r1, [r7, #10]
 800d518:	687a      	ldr	r2, [r7, #4]
 800d51a:	68f8      	ldr	r0, [r7, #12]
 800d51c:	f008 ff56 	bl	80163cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
 800d520:	4603      	mov	r3, r0
    }
 800d522:	4618      	mov	r0, r3
 800d524:	3710      	adds	r7, #16
 800d526:	46bd      	mov	sp, r7
 800d528:	bd80      	pop	{r7, pc}
	...

0800d52c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800d52c:	b580      	push	{r7, lr}
 800d52e:	b082      	sub	sp, #8
 800d530:	af00      	add	r7, sp, #0
 800d532:	6078      	str	r0, [r7, #4]
 800d534:	4a05      	ldr	r2, [pc, #20]	@ (800d54c <_ZN11Screen1ViewD1Ev+0x20>)
 800d536:	687b      	ldr	r3, [r7, #4]
 800d538:	601a      	str	r2, [r3, #0]
 800d53a:	687b      	ldr	r3, [r7, #4]
 800d53c:	4618      	mov	r0, r3
 800d53e:	f7fd fd99 	bl	800b074 <_ZN15Screen1ViewBaseD1Ev>
 800d542:	687b      	ldr	r3, [r7, #4]
 800d544:	4618      	mov	r0, r3
 800d546:	3708      	adds	r7, #8
 800d548:	46bd      	mov	sp, r7
 800d54a:	bd80      	pop	{r7, pc}
 800d54c:	08029160 	.word	0x08029160

0800d550 <_ZN11Screen1ViewD0Ev>:
 800d550:	b580      	push	{r7, lr}
 800d552:	b082      	sub	sp, #8
 800d554:	af00      	add	r7, sp, #0
 800d556:	6078      	str	r0, [r7, #4]
 800d558:	6878      	ldr	r0, [r7, #4]
 800d55a:	f7ff ffe7 	bl	800d52c <_ZN11Screen1ViewD1Ev>
 800d55e:	f44f 71e8 	mov.w	r1, #464	@ 0x1d0
 800d562:	6878      	ldr	r0, [r7, #4]
 800d564:	f016 fc57 	bl	8023e16 <_ZdlPvj>
 800d568:	687b      	ldr	r3, [r7, #4]
 800d56a:	4618      	mov	r0, r3
 800d56c:	3708      	adds	r7, #8
 800d56e:	46bd      	mov	sp, r7
 800d570:	bd80      	pop	{r7, pc}
	...

0800d574 <_ZN11Screen1ViewC1Ev>:
#include <gui/screen1_screen/Screen1View.hpp>

Screen1View::Screen1View()
 800d574:	b580      	push	{r7, lr}
 800d576:	b082      	sub	sp, #8
 800d578:	af00      	add	r7, sp, #0
 800d57a:	6078      	str	r0, [r7, #4]
 800d57c:	687b      	ldr	r3, [r7, #4]
 800d57e:	4618      	mov	r0, r3
 800d580:	f7fd fb14 	bl	800abac <_ZN15Screen1ViewBaseC1Ev>
 800d584:	4a03      	ldr	r2, [pc, #12]	@ (800d594 <_ZN11Screen1ViewC1Ev+0x20>)
 800d586:	687b      	ldr	r3, [r7, #4]
 800d588:	601a      	str	r2, [r3, #0]
{

}
 800d58a:	687b      	ldr	r3, [r7, #4]
 800d58c:	4618      	mov	r0, r3
 800d58e:	3708      	adds	r7, #8
 800d590:	46bd      	mov	sp, r7
 800d592:	bd80      	pop	{r7, pc}
 800d594:	08029160 	.word	0x08029160

0800d598 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 800d598:	b580      	push	{r7, lr}
 800d59a:	b082      	sub	sp, #8
 800d59c:	af00      	add	r7, sp, #0
 800d59e:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 800d5a0:	687b      	ldr	r3, [r7, #4]
 800d5a2:	4618      	mov	r0, r3
 800d5a4:	f7fd fdaf 	bl	800b106 <_ZN15Screen1ViewBase11setupScreenEv>
}
 800d5a8:	bf00      	nop
 800d5aa:	3708      	adds	r7, #8
 800d5ac:	46bd      	mov	sp, r7
 800d5ae:	bd80      	pop	{r7, pc}

0800d5b0 <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 800d5b0:	b580      	push	{r7, lr}
 800d5b2:	b082      	sub	sp, #8
 800d5b4:	af00      	add	r7, sp, #0
 800d5b6:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 800d5b8:	687b      	ldr	r3, [r7, #4]
 800d5ba:	4618      	mov	r0, r3
 800d5bc:	f7fc fe18 	bl	800a1f0 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800d5c0:	bf00      	nop
 800d5c2:	3708      	adds	r7, #8
 800d5c4:	46bd      	mov	sp, r7
 800d5c6:	bd80      	pop	{r7, pc}

0800d5c8 <_ZN11Screen1View14setButtonStateEb>:


void Screen1View::setButtonState(bool bstate)
{
 800d5c8:	b480      	push	{r7}
 800d5ca:	b083      	sub	sp, #12
 800d5cc:	af00      	add	r7, sp, #0
 800d5ce:	6078      	str	r0, [r7, #4]
 800d5d0:	460b      	mov	r3, r1
 800d5d2:	70fb      	strb	r3, [r7, #3]
//		ledOn.setVisible(bstate);
//		ledOff.setVisible(!bstate);
//
//		ledOn.invalidate();
//		ledOff.invalidate();
}
 800d5d4:	bf00      	nop
 800d5d6:	370c      	adds	r7, #12
 800d5d8:	46bd      	mov	sp, r7
 800d5da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5de:	4770      	bx	lr

0800d5e0 <_ZN11Screen1View7setTempEf>:


void Screen1View::setTemp(float Temp)
{
 800d5e0:	b580      	push	{r7, lr}
 800d5e2:	b082      	sub	sp, #8
 800d5e4:	af00      	add	r7, sp, #0
 800d5e6:	6078      	str	r0, [r7, #4]
 800d5e8:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(temperatureBuffer,TEMPERATURE_SIZE, "%0.0f", Temp);
 800d5ec:	687b      	ldr	r3, [r7, #4]
 800d5ee:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d5f2:	ed97 0a00 	vldr	s0, [r7]
 800d5f6:	4a07      	ldr	r2, [pc, #28]	@ (800d614 <_ZN11Screen1View7setTempEf+0x34>)
 800d5f8:	2105      	movs	r1, #5
 800d5fa:	4618      	mov	r0, r3
 800d5fc:	f7ff ff81 	bl	800d502 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	temperature.invalidate();
 800d600:	687b      	ldr	r3, [r7, #4]
 800d602:	3398      	adds	r3, #152	@ 0x98
 800d604:	4618      	mov	r0, r3
 800d606:	f006 fdc5 	bl	8014194 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800d60a:	bf00      	nop
 800d60c:	3708      	adds	r7, #8
 800d60e:	46bd      	mov	sp, r7
 800d610:	bd80      	pop	{r7, pc}
 800d612:	bf00      	nop
 800d614:	08027f38 	.word	0x08027f38

0800d618 <_ZN11Screen1View9setStatusEb>:

void Screen1View::setStatus(bool status)
{
 800d618:	b580      	push	{r7, lr}
 800d61a:	b082      	sub	sp, #8
 800d61c:	af00      	add	r7, sp, #0
 800d61e:	6078      	str	r0, [r7, #4]
 800d620:	460b      	mov	r3, r1
 800d622:	70fb      	strb	r3, [r7, #3]
	wifi0.setVisible(!status);
 800d624:	687b      	ldr	r3, [r7, #4]
 800d626:	f103 02e4 	add.w	r2, r3, #228	@ 0xe4
 800d62a:	78fb      	ldrb	r3, [r7, #3]
 800d62c:	f083 0301 	eor.w	r3, r3, #1
 800d630:	b2db      	uxtb	r3, r3
 800d632:	4619      	mov	r1, r3
 800d634:	4610      	mov	r0, r2
 800d636:	f7fc fcf9 	bl	800a02c <_ZN8touchgfx8Drawable10setVisibleEb>
	wifi1.setVisible(status);
 800d63a:	687b      	ldr	r3, [r7, #4]
 800d63c:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 800d640:	78fa      	ldrb	r2, [r7, #3]
 800d642:	4611      	mov	r1, r2
 800d644:	4618      	mov	r0, r3
 800d646:	f7fc fcf1 	bl	800a02c <_ZN8touchgfx8Drawable10setVisibleEb>

	wifi0.invalidate();
 800d64a:	687b      	ldr	r3, [r7, #4]
 800d64c:	33e4      	adds	r3, #228	@ 0xe4
 800d64e:	4618      	mov	r0, r3
 800d650:	f006 fda0 	bl	8014194 <_ZNK8touchgfx8Drawable10invalidateEv>
	wifi1.invalidate();
 800d654:	687b      	ldr	r3, [r7, #4]
 800d656:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 800d65a:	4618      	mov	r0, r3
 800d65c:	f006 fd9a 	bl	8014194 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800d660:	bf00      	nop
 800d662:	3708      	adds	r7, #8
 800d664:	46bd      	mov	sp, r7
 800d666:	bd80      	pop	{r7, pc}

0800d668 <_ZN17SettingsPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SettingsPresenter() {}
 800d668:	b580      	push	{r7, lr}
 800d66a:	b082      	sub	sp, #8
 800d66c:	af00      	add	r7, sp, #0
 800d66e:	6078      	str	r0, [r7, #4]
 800d670:	4a09      	ldr	r2, [pc, #36]	@ (800d698 <_ZN17SettingsPresenterD1Ev+0x30>)
 800d672:	687b      	ldr	r3, [r7, #4]
 800d674:	601a      	str	r2, [r3, #0]
 800d676:	4a09      	ldr	r2, [pc, #36]	@ (800d69c <_ZN17SettingsPresenterD1Ev+0x34>)
 800d678:	687b      	ldr	r3, [r7, #4]
 800d67a:	605a      	str	r2, [r3, #4]
 800d67c:	687b      	ldr	r3, [r7, #4]
 800d67e:	3304      	adds	r3, #4
 800d680:	4618      	mov	r0, r3
 800d682:	f7ff fe2f 	bl	800d2e4 <_ZN13ModelListenerD1Ev>
 800d686:	687b      	ldr	r3, [r7, #4]
 800d688:	4618      	mov	r0, r3
 800d68a:	f7ff fde7 	bl	800d25c <_ZN8touchgfx9PresenterD1Ev>
 800d68e:	687b      	ldr	r3, [r7, #4]
 800d690:	4618      	mov	r0, r3
 800d692:	3708      	adds	r7, #8
 800d694:	46bd      	mov	sp, r7
 800d696:	bd80      	pop	{r7, pc}
 800d698:	08029194 	.word	0x08029194
 800d69c:	080291b0 	.word	0x080291b0

0800d6a0 <_ZThn4_N17SettingsPresenterD1Ev>:
 800d6a0:	f1a0 0004 	sub.w	r0, r0, #4
 800d6a4:	e7e0      	b.n	800d668 <_ZN17SettingsPresenterD1Ev>
 800d6a6:	bf00      	nop

0800d6a8 <_ZN17SettingsPresenterD0Ev>:
 800d6a8:	b580      	push	{r7, lr}
 800d6aa:	b082      	sub	sp, #8
 800d6ac:	af00      	add	r7, sp, #0
 800d6ae:	6078      	str	r0, [r7, #4]
 800d6b0:	6878      	ldr	r0, [r7, #4]
 800d6b2:	f7ff ffd9 	bl	800d668 <_ZN17SettingsPresenterD1Ev>
 800d6b6:	2110      	movs	r1, #16
 800d6b8:	6878      	ldr	r0, [r7, #4]
 800d6ba:	f016 fbac 	bl	8023e16 <_ZdlPvj>
 800d6be:	687b      	ldr	r3, [r7, #4]
 800d6c0:	4618      	mov	r0, r3
 800d6c2:	3708      	adds	r7, #8
 800d6c4:	46bd      	mov	sp, r7
 800d6c6:	bd80      	pop	{r7, pc}

0800d6c8 <_ZThn4_N17SettingsPresenterD0Ev>:
 800d6c8:	f1a0 0004 	sub.w	r0, r0, #4
 800d6cc:	e7ec      	b.n	800d6a8 <_ZN17SettingsPresenterD0Ev>
	...

0800d6d0 <_ZN17SettingsPresenterC1ER12SettingsView>:
#include <gui/settings_screen/SettingsView.hpp>
#include <gui/settings_screen/SettingsPresenter.hpp>



SettingsPresenter::SettingsPresenter(SettingsView& v)
 800d6d0:	b580      	push	{r7, lr}
 800d6d2:	b082      	sub	sp, #8
 800d6d4:	af00      	add	r7, sp, #0
 800d6d6:	6078      	str	r0, [r7, #4]
 800d6d8:	6039      	str	r1, [r7, #0]
    : view(v)
 800d6da:	687b      	ldr	r3, [r7, #4]
 800d6dc:	4618      	mov	r0, r3
 800d6de:	f7ff fddd 	bl	800d29c <_ZN8touchgfx9PresenterC1Ev>
 800d6e2:	687b      	ldr	r3, [r7, #4]
 800d6e4:	3304      	adds	r3, #4
 800d6e6:	4618      	mov	r0, r3
 800d6e8:	f7ff fde8 	bl	800d2bc <_ZN13ModelListenerC1Ev>
 800d6ec:	4a06      	ldr	r2, [pc, #24]	@ (800d708 <_ZN17SettingsPresenterC1ER12SettingsView+0x38>)
 800d6ee:	687b      	ldr	r3, [r7, #4]
 800d6f0:	601a      	str	r2, [r3, #0]
 800d6f2:	4a06      	ldr	r2, [pc, #24]	@ (800d70c <_ZN17SettingsPresenterC1ER12SettingsView+0x3c>)
 800d6f4:	687b      	ldr	r3, [r7, #4]
 800d6f6:	605a      	str	r2, [r3, #4]
 800d6f8:	687b      	ldr	r3, [r7, #4]
 800d6fa:	683a      	ldr	r2, [r7, #0]
 800d6fc:	60da      	str	r2, [r3, #12]
{

}
 800d6fe:	687b      	ldr	r3, [r7, #4]
 800d700:	4618      	mov	r0, r3
 800d702:	3708      	adds	r7, #8
 800d704:	46bd      	mov	sp, r7
 800d706:	bd80      	pop	{r7, pc}
 800d708:	08029194 	.word	0x08029194
 800d70c:	080291b0 	.word	0x080291b0

0800d710 <_ZN17SettingsPresenter8activateEv>:

void SettingsPresenter::activate()
{
 800d710:	b480      	push	{r7}
 800d712:	b083      	sub	sp, #12
 800d714:	af00      	add	r7, sp, #0
 800d716:	6078      	str	r0, [r7, #4]

}
 800d718:	bf00      	nop
 800d71a:	370c      	adds	r7, #12
 800d71c:	46bd      	mov	sp, r7
 800d71e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d722:	4770      	bx	lr

0800d724 <_ZN17SettingsPresenter10deactivateEv>:

void SettingsPresenter::deactivate()
{
 800d724:	b480      	push	{r7}
 800d726:	b083      	sub	sp, #12
 800d728:	af00      	add	r7, sp, #0
 800d72a:	6078      	str	r0, [r7, #4]

}
 800d72c:	bf00      	nop
 800d72e:	370c      	adds	r7, #12
 800d730:	46bd      	mov	sp, r7
 800d732:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d736:	4770      	bx	lr

0800d738 <_ZN17SettingsPresenter11newWifiInfoEPh>:

void SettingsPresenter::newWifiInfo(uint8_t* ipWifi)
{
 800d738:	b580      	push	{r7, lr}
 800d73a:	b082      	sub	sp, #8
 800d73c:	af00      	add	r7, sp, #0
 800d73e:	6078      	str	r0, [r7, #4]
 800d740:	6039      	str	r1, [r7, #0]
	view.setWifiInfo(ipWifi);
 800d742:	687b      	ldr	r3, [r7, #4]
 800d744:	68db      	ldr	r3, [r3, #12]
 800d746:	6839      	ldr	r1, [r7, #0]
 800d748:	4618      	mov	r0, r3
 800d74a:	f000 f867 	bl	800d81c <_ZN12SettingsView11setWifiInfoEPh>
}
 800d74e:	bf00      	nop
 800d750:	3708      	adds	r7, #8
 800d752:	46bd      	mov	sp, r7
 800d754:	bd80      	pop	{r7, pc}

0800d756 <_ZThn4_N17SettingsPresenter11newWifiInfoEPh>:

    void changeWifi(uint8_t opt);

    void newWifiInfo(uint8_t* ipWifi);
 800d756:	f1a0 0004 	sub.w	r0, r0, #4
 800d75a:	f7ff bfed 	b.w	800d738 <_ZN17SettingsPresenter11newWifiInfoEPh>

0800d75e <_ZN17SettingsPresenter10changeWifiEc>:

void SettingsPresenter::changeWifi(char selection)
{
 800d75e:	b580      	push	{r7, lr}
 800d760:	b082      	sub	sp, #8
 800d762:	af00      	add	r7, sp, #0
 800d764:	6078      	str	r0, [r7, #4]
 800d766:	460b      	mov	r3, r1
 800d768:	70fb      	strb	r3, [r7, #3]
	model->connectAP(selection);
 800d76a:	687b      	ldr	r3, [r7, #4]
 800d76c:	689b      	ldr	r3, [r3, #8]
 800d76e:	78fa      	ldrb	r2, [r7, #3]
 800d770:	4611      	mov	r1, r2
 800d772:	4618      	mov	r0, r3
 800d774:	f7ff fcce 	bl	800d114 <_ZN5Model9connectAPEc>
}
 800d778:	bf00      	nop
 800d77a:	3708      	adds	r7, #8
 800d77c:	46bd      	mov	sp, r7
 800d77e:	bd80      	pop	{r7, pc}

0800d780 <_ZN12SettingsViewD1Ev>:

class SettingsView : public SettingsViewBase
{
public:
    SettingsView();
    virtual ~SettingsView() {}
 800d780:	b580      	push	{r7, lr}
 800d782:	b082      	sub	sp, #8
 800d784:	af00      	add	r7, sp, #0
 800d786:	6078      	str	r0, [r7, #4]
 800d788:	4a05      	ldr	r2, [pc, #20]	@ (800d7a0 <_ZN12SettingsViewD1Ev+0x20>)
 800d78a:	687b      	ldr	r3, [r7, #4]
 800d78c:	601a      	str	r2, [r3, #0]
 800d78e:	687b      	ldr	r3, [r7, #4]
 800d790:	4618      	mov	r0, r3
 800d792:	f7fe fe2f 	bl	800c3f4 <_ZN16SettingsViewBaseD1Ev>
 800d796:	687b      	ldr	r3, [r7, #4]
 800d798:	4618      	mov	r0, r3
 800d79a:	3708      	adds	r7, #8
 800d79c:	46bd      	mov	sp, r7
 800d79e:	bd80      	pop	{r7, pc}
 800d7a0:	080291d8 	.word	0x080291d8

0800d7a4 <_ZN12SettingsViewD0Ev>:
 800d7a4:	b580      	push	{r7, lr}
 800d7a6:	b082      	sub	sp, #8
 800d7a8:	af00      	add	r7, sp, #0
 800d7aa:	6078      	str	r0, [r7, #4]
 800d7ac:	6878      	ldr	r0, [r7, #4]
 800d7ae:	f7ff ffe7 	bl	800d780 <_ZN12SettingsViewD1Ev>
 800d7b2:	f44f 715e 	mov.w	r1, #888	@ 0x378
 800d7b6:	6878      	ldr	r0, [r7, #4]
 800d7b8:	f016 fb2d 	bl	8023e16 <_ZdlPvj>
 800d7bc:	687b      	ldr	r3, [r7, #4]
 800d7be:	4618      	mov	r0, r3
 800d7c0:	3708      	adds	r7, #8
 800d7c2:	46bd      	mov	sp, r7
 800d7c4:	bd80      	pop	{r7, pc}
	...

0800d7c8 <_ZN12SettingsViewC1Ev>:
#include <gui/settings_screen/SettingsView.hpp>

SettingsView::SettingsView()
 800d7c8:	b580      	push	{r7, lr}
 800d7ca:	b082      	sub	sp, #8
 800d7cc:	af00      	add	r7, sp, #0
 800d7ce:	6078      	str	r0, [r7, #4]
 800d7d0:	687b      	ldr	r3, [r7, #4]
 800d7d2:	4618      	mov	r0, r3
 800d7d4:	f7fe f830 	bl	800b838 <_ZN16SettingsViewBaseC1Ev>
 800d7d8:	4a03      	ldr	r2, [pc, #12]	@ (800d7e8 <_ZN12SettingsViewC1Ev+0x20>)
 800d7da:	687b      	ldr	r3, [r7, #4]
 800d7dc:	601a      	str	r2, [r3, #0]
{

}
 800d7de:	687b      	ldr	r3, [r7, #4]
 800d7e0:	4618      	mov	r0, r3
 800d7e2:	3708      	adds	r7, #8
 800d7e4:	46bd      	mov	sp, r7
 800d7e6:	bd80      	pop	{r7, pc}
 800d7e8:	080291d8 	.word	0x080291d8

0800d7ec <_ZN12SettingsView11setupScreenEv>:

void SettingsView::setupScreen()
{
 800d7ec:	b580      	push	{r7, lr}
 800d7ee:	b082      	sub	sp, #8
 800d7f0:	af00      	add	r7, sp, #0
 800d7f2:	6078      	str	r0, [r7, #4]
    SettingsViewBase::setupScreen();
 800d7f4:	687b      	ldr	r3, [r7, #4]
 800d7f6:	4618      	mov	r0, r3
 800d7f8:	f7fe fe6f 	bl	800c4da <_ZN16SettingsViewBase11setupScreenEv>
}
 800d7fc:	bf00      	nop
 800d7fe:	3708      	adds	r7, #8
 800d800:	46bd      	mov	sp, r7
 800d802:	bd80      	pop	{r7, pc}

0800d804 <_ZN12SettingsView14tearDownScreenEv>:

void SettingsView::tearDownScreen()
{
 800d804:	b580      	push	{r7, lr}
 800d806:	b082      	sub	sp, #8
 800d808:	af00      	add	r7, sp, #0
 800d80a:	6078      	str	r0, [r7, #4]
    SettingsViewBase::tearDownScreen();
 800d80c:	687b      	ldr	r3, [r7, #4]
 800d80e:	4618      	mov	r0, r3
 800d810:	f7fc fcee 	bl	800a1f0 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800d814:	bf00      	nop
 800d816:	3708      	adds	r7, #8
 800d818:	46bd      	mov	sp, r7
 800d81a:	bd80      	pop	{r7, pc}

0800d81c <_ZN12SettingsView11setWifiInfoEPh>:

void SettingsView::setWifiInfo(uint8_t* ipWifi)
{
 800d81c:	b580      	push	{r7, lr}
 800d81e:	b08c      	sub	sp, #48	@ 0x30
 800d820:	af00      	add	r7, sp, #0
 800d822:	6078      	str	r0, [r7, #4]
 800d824:	6039      	str	r1, [r7, #0]

	Unicode::UnicodeChar uniBuffer[20];
	Unicode::fromUTF8(ipWifi, uniBuffer, 20);
 800d826:	f107 0308 	add.w	r3, r7, #8
 800d82a:	2214      	movs	r2, #20
 800d82c:	4619      	mov	r1, r3
 800d82e:	6838      	ldr	r0, [r7, #0]
 800d830:	f008 fdd5 	bl	80163de <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt>

	Unicode::snprintf(ipAddressBuffer,IPADDRESS_SIZE, "%s", uniBuffer);
 800d834:	687b      	ldr	r3, [r7, #4]
 800d836:	f503 704c 	add.w	r0, r3, #816	@ 0x330
 800d83a:	f107 0308 	add.w	r3, r7, #8
 800d83e:	4a07      	ldr	r2, [pc, #28]	@ (800d85c <_ZN12SettingsView11setWifiInfoEPh+0x40>)
 800d840:	2114      	movs	r1, #20
 800d842:	f008 fbd7 	bl	8015ff4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	ipAddress.invalidate();
 800d846:	687b      	ldr	r3, [r7, #4]
 800d848:	f503 7339 	add.w	r3, r3, #740	@ 0x2e4
 800d84c:	4618      	mov	r0, r3
 800d84e:	f006 fca1 	bl	8014194 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800d852:	bf00      	nop
 800d854:	3730      	adds	r7, #48	@ 0x30
 800d856:	46bd      	mov	sp, r7
 800d858:	bd80      	pop	{r7, pc}
 800d85a:	bf00      	nop
 800d85c:	08027f40 	.word	0x08027f40

0800d860 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800d860:	b480      	push	{r7}
 800d862:	b083      	sub	sp, #12
 800d864:	af00      	add	r7, sp, #0
 800d866:	6078      	str	r0, [r7, #4]
    {
 800d868:	4a04      	ldr	r2, [pc, #16]	@ (800d87c <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800d86a:	687b      	ldr	r3, [r7, #4]
 800d86c:	601a      	str	r2, [r3, #0]
    }
 800d86e:	687b      	ldr	r3, [r7, #4]
 800d870:	4618      	mov	r0, r3
 800d872:	370c      	adds	r7, #12
 800d874:	46bd      	mov	sp, r7
 800d876:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d87a:	4770      	bx	lr
 800d87c:	08029224 	.word	0x08029224

0800d880 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800d880:	b580      	push	{r7, lr}
 800d882:	b082      	sub	sp, #8
 800d884:	af00      	add	r7, sp, #0
 800d886:	6078      	str	r0, [r7, #4]
    }
 800d888:	6878      	ldr	r0, [r7, #4]
 800d88a:	f7ff ffe9 	bl	800d860 <_ZN8touchgfx15TouchControllerD1Ev>
 800d88e:	2104      	movs	r1, #4
 800d890:	6878      	ldr	r0, [r7, #4]
 800d892:	f016 fac0 	bl	8023e16 <_ZdlPvj>
 800d896:	687b      	ldr	r3, [r7, #4]
 800d898:	4618      	mov	r0, r3
 800d89a:	3708      	adds	r7, #8
 800d89c:	46bd      	mov	sp, r7
 800d89e:	bd80      	pop	{r7, pc}

0800d8a0 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "main.h"

void STM32TouchController::init()
{
 800d8a0:	b480      	push	{r7}
 800d8a2:	b083      	sub	sp, #12
 800d8a4:	af00      	add	r7, sp, #0
 800d8a6:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800d8a8:	bf00      	nop
 800d8aa:	370c      	adds	r7, #12
 800d8ac:	46bd      	mov	sp, r7
 800d8ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8b2:	4770      	bx	lr

0800d8b4 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800d8b4:	b580      	push	{r7, lr}
 800d8b6:	b084      	sub	sp, #16
 800d8b8:	af00      	add	r7, sp, #0
 800d8ba:	60f8      	str	r0, [r7, #12]
 800d8bc:	60b9      	str	r1, [r7, #8]
 800d8be:	607a      	str	r2, [r7, #4]
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    //return false;
	return ((bool) Touch_TouchGFXSampleTouch(&x, &y));
 800d8c0:	6879      	ldr	r1, [r7, #4]
 800d8c2:	68b8      	ldr	r0, [r7, #8]
 800d8c4:	f7f5 f962 	bl	8002b8c <Touch_TouchGFXSampleTouch>
 800d8c8:	4603      	mov	r3, r0
 800d8ca:	2b00      	cmp	r3, #0
 800d8cc:	bf14      	ite	ne
 800d8ce:	2301      	movne	r3, #1
 800d8d0:	2300      	moveq	r3, #0
 800d8d2:	b2db      	uxtb	r3, r3
}
 800d8d4:	4618      	mov	r0, r3
 800d8d6:	3710      	adds	r7, #16
 800d8d8:	46bd      	mov	sp, r7
 800d8da:	bd80      	pop	{r7, pc}

0800d8dc <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800d8dc:	b580      	push	{r7, lr}
 800d8de:	b082      	sub	sp, #8
 800d8e0:	af00      	add	r7, sp, #0
 800d8e2:	6078      	str	r0, [r7, #4]
 800d8e4:	4a05      	ldr	r2, [pc, #20]	@ (800d8fc <_ZN20STM32TouchControllerD1Ev+0x20>)
 800d8e6:	687b      	ldr	r3, [r7, #4]
 800d8e8:	601a      	str	r2, [r3, #0]
 800d8ea:	687b      	ldr	r3, [r7, #4]
 800d8ec:	4618      	mov	r0, r3
 800d8ee:	f7ff ffb7 	bl	800d860 <_ZN8touchgfx15TouchControllerD1Ev>
 800d8f2:	687b      	ldr	r3, [r7, #4]
 800d8f4:	4618      	mov	r0, r3
 800d8f6:	3708      	adds	r7, #8
 800d8f8:	46bd      	mov	sp, r7
 800d8fa:	bd80      	pop	{r7, pc}
 800d8fc:	0802920c 	.word	0x0802920c

0800d900 <_ZN20STM32TouchControllerD0Ev>:
 800d900:	b580      	push	{r7, lr}
 800d902:	b082      	sub	sp, #8
 800d904:	af00      	add	r7, sp, #0
 800d906:	6078      	str	r0, [r7, #4]
 800d908:	6878      	ldr	r0, [r7, #4]
 800d90a:	f7ff ffe7 	bl	800d8dc <_ZN20STM32TouchControllerD1Ev>
 800d90e:	2104      	movs	r1, #4
 800d910:	6878      	ldr	r0, [r7, #4]
 800d912:	f016 fa80 	bl	8023e16 <_ZdlPvj>
 800d916:	687b      	ldr	r3, [r7, #4]
 800d918:	4618      	mov	r0, r3
 800d91a:	3708      	adds	r7, #8
 800d91c:	46bd      	mov	sp, r7
 800d91e:	bd80      	pop	{r7, pc}

0800d920 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800d920:	b480      	push	{r7}
 800d922:	af00      	add	r7, sp, #0

}
 800d924:	bf00      	nop
 800d926:	46bd      	mov	sp, r7
 800d928:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d92c:	4770      	bx	lr
	...

0800d930 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800d930:	b480      	push	{r7}
 800d932:	b083      	sub	sp, #12
 800d934:	af00      	add	r7, sp, #0
 800d936:	4603      	mov	r3, r0
 800d938:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800d93a:	79fb      	ldrb	r3, [r7, #7]
 800d93c:	2b03      	cmp	r3, #3
 800d93e:	d80c      	bhi.n	800d95a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800d940:	a201      	add	r2, pc, #4	@ (adr r2, 800d948 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800d942:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d946:	bf00      	nop
 800d948:	0800d959 	.word	0x0800d959
 800d94c:	0800d959 	.word	0x0800d959
 800d950:	0800d959 	.word	0x0800d959
 800d954:	0800d959 	.word	0x0800d959
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800d958:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800d95a:	bf00      	nop
 800d95c:	370c      	adds	r7, #12
 800d95e:	46bd      	mov	sp, r7
 800d960:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d964:	4770      	bx	lr
 800d966:	bf00      	nop

0800d968 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800d968:	b480      	push	{r7}
 800d96a:	b083      	sub	sp, #12
 800d96c:	af00      	add	r7, sp, #0
 800d96e:	4603      	mov	r3, r0
 800d970:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800d972:	79fb      	ldrb	r3, [r7, #7]
 800d974:	2b03      	cmp	r3, #3
 800d976:	d80c      	bhi.n	800d992 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800d978:	a201      	add	r2, pc, #4	@ (adr r2, 800d980 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800d97a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d97e:	bf00      	nop
 800d980:	0800d991 	.word	0x0800d991
 800d984:	0800d991 	.word	0x0800d991
 800d988:	0800d991 	.word	0x0800d991
 800d98c:	0800d991 	.word	0x0800d991
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800d990:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800d992:	bf00      	nop
 800d994:	370c      	adds	r7, #12
 800d996:	46bd      	mov	sp, r7
 800d998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d99c:	4770      	bx	lr
 800d99e:	bf00      	nop

0800d9a0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800d9a0:	b480      	push	{r7}
 800d9a2:	b083      	sub	sp, #12
 800d9a4:	af00      	add	r7, sp, #0
 800d9a6:	4603      	mov	r3, r0
 800d9a8:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800d9aa:	79fb      	ldrb	r3, [r7, #7]
 800d9ac:	2b03      	cmp	r3, #3
 800d9ae:	d80c      	bhi.n	800d9ca <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800d9b0:	a201      	add	r2, pc, #4	@ (adr r2, 800d9b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800d9b2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d9b6:	bf00      	nop
 800d9b8:	0800d9c9 	.word	0x0800d9c9
 800d9bc:	0800d9c9 	.word	0x0800d9c9
 800d9c0:	0800d9c9 	.word	0x0800d9c9
 800d9c4:	0800d9c9 	.word	0x0800d9c9
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800d9c8:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800d9ca:	bf00      	nop
 800d9cc:	370c      	adds	r7, #12
 800d9ce:	46bd      	mov	sp, r7
 800d9d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9d4:	4770      	bx	lr
 800d9d6:	bf00      	nop

0800d9d8 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800d9d8:	b480      	push	{r7}
 800d9da:	b083      	sub	sp, #12
 800d9dc:	af00      	add	r7, sp, #0
 800d9de:	6078      	str	r0, [r7, #4]
    {
 800d9e0:	4a04      	ldr	r2, [pc, #16]	@ (800d9f4 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800d9e2:	687b      	ldr	r3, [r7, #4]
 800d9e4:	601a      	str	r2, [r3, #0]
    }
 800d9e6:	687b      	ldr	r3, [r7, #4]
 800d9e8:	4618      	mov	r0, r3
 800d9ea:	370c      	adds	r7, #12
 800d9ec:	46bd      	mov	sp, r7
 800d9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9f2:	4770      	bx	lr
 800d9f4:	0802965c 	.word	0x0802965c

0800d9f8 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800d9f8:	b580      	push	{r7, lr}
 800d9fa:	b082      	sub	sp, #8
 800d9fc:	af00      	add	r7, sp, #0
 800d9fe:	6078      	str	r0, [r7, #4]
    }
 800da00:	6878      	ldr	r0, [r7, #4]
 800da02:	f7ff ffe9 	bl	800d9d8 <_ZN8touchgfx3HALD1Ev>
 800da06:	217c      	movs	r1, #124	@ 0x7c
 800da08:	6878      	ldr	r0, [r7, #4]
 800da0a:	f016 fa04 	bl	8023e16 <_ZdlPvj>
 800da0e:	687b      	ldr	r3, [r7, #4]
 800da10:	4618      	mov	r0, r3
 800da12:	3708      	adds	r7, #8
 800da14:	46bd      	mov	sp, r7
 800da16:	bd80      	pop	{r7, pc}

0800da18 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800da18:	b480      	push	{r7}
 800da1a:	b083      	sub	sp, #12
 800da1c:	af00      	add	r7, sp, #0
 800da1e:	6078      	str	r0, [r7, #4]
 800da20:	460b      	mov	r3, r1
 800da22:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800da24:	687b      	ldr	r3, [r7, #4]
 800da26:	78fa      	ldrb	r2, [r7, #3]
 800da28:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800da2c:	687b      	ldr	r3, [r7, #4]
 800da2e:	2201      	movs	r2, #1
 800da30:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
    }
 800da34:	bf00      	nop
 800da36:	370c      	adds	r7, #12
 800da38:	46bd      	mov	sp, r7
 800da3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da3e:	4770      	bx	lr

0800da40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800da40:	b580      	push	{r7, lr}
 800da42:	b082      	sub	sp, #8
 800da44:	af00      	add	r7, sp, #0
 800da46:	6078      	str	r0, [r7, #4]
 800da48:	460b      	mov	r3, r1
 800da4a:	807b      	strh	r3, [r7, #2]
 800da4c:	4613      	mov	r3, r2
 800da4e:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800da50:	4b0c      	ldr	r3, [pc, #48]	@ (800da84 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800da52:	881b      	ldrh	r3, [r3, #0]
 800da54:	887a      	ldrh	r2, [r7, #2]
 800da56:	429a      	cmp	r2, r3
 800da58:	d304      	bcc.n	800da64 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800da5a:	4b0b      	ldr	r3, [pc, #44]	@ (800da88 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800da5c:	881b      	ldrh	r3, [r3, #0]
 800da5e:	883a      	ldrh	r2, [r7, #0]
 800da60:	429a      	cmp	r2, r3
 800da62:	d205      	bcs.n	800da70 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800da64:	4b09      	ldr	r3, [pc, #36]	@ (800da8c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800da66:	4a0a      	ldr	r2, [pc, #40]	@ (800da90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800da68:	219e      	movs	r1, #158	@ 0x9e
 800da6a:	480a      	ldr	r0, [pc, #40]	@ (800da94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800da6c:	f016 fc02 	bl	8024274 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800da70:	4a09      	ldr	r2, [pc, #36]	@ (800da98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800da72:	887b      	ldrh	r3, [r7, #2]
 800da74:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800da76:	4a09      	ldr	r2, [pc, #36]	@ (800da9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800da78:	883b      	ldrh	r3, [r7, #0]
 800da7a:	8013      	strh	r3, [r2, #0]
    }
 800da7c:	bf00      	nop
 800da7e:	3708      	adds	r7, #8
 800da80:	46bd      	mov	sp, r7
 800da82:	bd80      	pop	{r7, pc}
 800da84:	2000239c 	.word	0x2000239c
 800da88:	2000239e 	.word	0x2000239e
 800da8c:	08027f44 	.word	0x08027f44
 800da90:	08027fa8 	.word	0x08027fa8
 800da94:	08027fec 	.word	0x08027fec
 800da98:	200023a2 	.word	0x200023a2
 800da9c:	200023a4 	.word	0x200023a4

0800daa0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 800daa0:	b580      	push	{r7, lr}
 800daa2:	b082      	sub	sp, #8
 800daa4:	af00      	add	r7, sp, #0
 800daa6:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 800daa8:	687b      	ldr	r3, [r7, #4]
 800daaa:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800daae:	2b00      	cmp	r3, #0
 800dab0:	d009      	beq.n	800dac6 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 800dab2:	687b      	ldr	r3, [r7, #4]
 800dab4:	685a      	ldr	r2, [r3, #4]
 800dab6:	687b      	ldr	r3, [r7, #4]
 800dab8:	685b      	ldr	r3, [r3, #4]
 800daba:	681b      	ldr	r3, [r3, #0]
 800dabc:	681b      	ldr	r3, [r3, #0]
 800dabe:	4610      	mov	r0, r2
 800dac0:	4798      	blx	r3
 800dac2:	4603      	mov	r3, r0
 800dac4:	e000      	b.n	800dac8 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 800dac6:	2300      	movs	r3, #0
    }
 800dac8:	4618      	mov	r0, r3
 800daca:	3708      	adds	r7, #8
 800dacc:	46bd      	mov	sp, r7
 800dace:	bd80      	pop	{r7, pc}

0800dad0 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 800dad0:	b580      	push	{r7, lr}
 800dad2:	b082      	sub	sp, #8
 800dad4:	af00      	add	r7, sp, #0
 800dad6:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800dad8:	6878      	ldr	r0, [r7, #4]
 800dada:	f002 fd1d 	bl	8010518 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800dade:	687b      	ldr	r3, [r7, #4]
 800dae0:	681b      	ldr	r3, [r3, #0]
 800dae2:	33ac      	adds	r3, #172	@ 0xac
 800dae4:	681b      	ldr	r3, [r3, #0]
 800dae6:	6878      	ldr	r0, [r7, #4]
 800dae8:	4798      	blx	r3
    }
 800daea:	bf00      	nop
 800daec:	3708      	adds	r7, #8
 800daee:	46bd      	mov	sp, r7
 800daf0:	bd80      	pop	{r7, pc}

0800daf2 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800daf2:	b480      	push	{r7}
 800daf4:	b083      	sub	sp, #12
 800daf6:	af00      	add	r7, sp, #0
 800daf8:	6078      	str	r0, [r7, #4]
 800dafa:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 800dafc:	2300      	movs	r3, #0
    }
 800dafe:	4618      	mov	r0, r3
 800db00:	370c      	adds	r7, #12
 800db02:	46bd      	mov	sp, r7
 800db04:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db08:	4770      	bx	lr
	...

0800db0c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800db0c:	b580      	push	{r7, lr}
 800db0e:	b084      	sub	sp, #16
 800db10:	af00      	add	r7, sp, #0
 800db12:	60f8      	str	r0, [r7, #12]
 800db14:	60b9      	str	r1, [r7, #8]
 800db16:	607a      	str	r2, [r7, #4]
 800db18:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800db1a:	68bb      	ldr	r3, [r7, #8]
 800db1c:	2b00      	cmp	r3, #0
 800db1e:	d106      	bne.n	800db2e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800db20:	4b0f      	ldr	r3, [pc, #60]	@ (800db60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800db22:	4a10      	ldr	r2, [pc, #64]	@ (800db64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800db24:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800db28:	480f      	ldr	r0, [pc, #60]	@ (800db68 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800db2a:	f016 fba3 	bl	8024274 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800db2e:	68fb      	ldr	r3, [r7, #12]
 800db30:	68ba      	ldr	r2, [r7, #8]
 800db32:	63da      	str	r2, [r3, #60]	@ 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800db34:	68fb      	ldr	r3, [r7, #12]
 800db36:	687a      	ldr	r2, [r7, #4]
 800db38:	641a      	str	r2, [r3, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800db3a:	687b      	ldr	r3, [r7, #4]
 800db3c:	2b00      	cmp	r3, #0
 800db3e:	bf14      	ite	ne
 800db40:	2301      	movne	r3, #1
 800db42:	2300      	moveq	r3, #0
 800db44:	b2da      	uxtb	r2, r3
 800db46:	4b09      	ldr	r3, [pc, #36]	@ (800db6c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800db48:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800db4a:	68fb      	ldr	r3, [r7, #12]
 800db4c:	681b      	ldr	r3, [r3, #0]
 800db4e:	338c      	adds	r3, #140	@ 0x8c
 800db50:	681b      	ldr	r3, [r3, #0]
 800db52:	6839      	ldr	r1, [r7, #0]
 800db54:	68f8      	ldr	r0, [r7, #12]
 800db56:	4798      	blx	r3
    }
 800db58:	bf00      	nop
 800db5a:	3710      	adds	r7, #16
 800db5c:	46bd      	mov	sp, r7
 800db5e:	bd80      	pop	{r7, pc}
 800db60:	08028030 	.word	0x08028030
 800db64:	08028068 	.word	0x08028068
 800db68:	08027fec 	.word	0x08027fec
 800db6c:	200023a6 	.word	0x200023a6

0800db70 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 800db70:	b480      	push	{r7}
 800db72:	b083      	sub	sp, #12
 800db74:	af00      	add	r7, sp, #0
 800db76:	6078      	str	r0, [r7, #4]
 800db78:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800db7a:	687b      	ldr	r3, [r7, #4]
 800db7c:	683a      	ldr	r2, [r7, #0]
 800db7e:	645a      	str	r2, [r3, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800db80:	683b      	ldr	r3, [r7, #0]
 800db82:	2b00      	cmp	r3, #0
 800db84:	bf14      	ite	ne
 800db86:	2301      	movne	r3, #1
 800db88:	2300      	moveq	r3, #0
 800db8a:	b2da      	uxtb	r2, r3
 800db8c:	4b03      	ldr	r3, [pc, #12]	@ (800db9c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800db8e:	701a      	strb	r2, [r3, #0]
    }
 800db90:	bf00      	nop
 800db92:	370c      	adds	r7, #12
 800db94:	46bd      	mov	sp, r7
 800db96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db9a:	4770      	bx	lr
 800db9c:	200023a7 	.word	0x200023a7

0800dba0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 800dba0:	b480      	push	{r7}
 800dba2:	b083      	sub	sp, #12
 800dba4:	af00      	add	r7, sp, #0
 800dba6:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800dba8:	2300      	movs	r3, #0
    }
 800dbaa:	4618      	mov	r0, r3
 800dbac:	370c      	adds	r7, #12
 800dbae:	46bd      	mov	sp, r7
 800dbb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbb4:	4770      	bx	lr

0800dbb6 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 800dbb6:	b580      	push	{r7, lr}
 800dbb8:	b082      	sub	sp, #8
 800dbba:	af00      	add	r7, sp, #0
 800dbbc:	6078      	str	r0, [r7, #4]
 800dbbe:	460b      	mov	r3, r1
 800dbc0:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800dbc2:	687b      	ldr	r3, [r7, #4]
 800dbc4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dbc6:	2b00      	cmp	r3, #0
 800dbc8:	d004      	beq.n	800dbd4 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800dbca:	687b      	ldr	r3, [r7, #4]
 800dbcc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dbce:	887a      	ldrh	r2, [r7, #2]
 800dbd0:	4610      	mov	r0, r2
 800dbd2:	4798      	blx	r3
        }
    }
 800dbd4:	bf00      	nop
 800dbd6:	3708      	adds	r7, #8
 800dbd8:	46bd      	mov	sp, r7
 800dbda:	bd80      	pop	{r7, pc}

0800dbdc <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 800dbdc:	b480      	push	{r7}
 800dbde:	b083      	sub	sp, #12
 800dbe0:	af00      	add	r7, sp, #0
 800dbe2:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 800dbe4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
    }
 800dbe8:	4618      	mov	r0, r3
 800dbea:	370c      	adds	r7, #12
 800dbec:	46bd      	mov	sp, r7
 800dbee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbf2:	4770      	bx	lr

0800dbf4 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800dbf4:	b580      	push	{r7, lr}
 800dbf6:	b082      	sub	sp, #8
 800dbf8:	af00      	add	r7, sp, #0
 800dbfa:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800dbfc:	687b      	ldr	r3, [r7, #4]
 800dbfe:	685a      	ldr	r2, [r3, #4]
 800dc00:	687b      	ldr	r3, [r7, #4]
 800dc02:	685b      	ldr	r3, [r3, #4]
 800dc04:	681b      	ldr	r3, [r3, #0]
 800dc06:	3318      	adds	r3, #24
 800dc08:	681b      	ldr	r3, [r3, #0]
 800dc0a:	4610      	mov	r0, r2
 800dc0c:	4798      	blx	r3
 800dc0e:	4603      	mov	r3, r0
    }
 800dc10:	4618      	mov	r0, r3
 800dc12:	3708      	adds	r7, #8
 800dc14:	46bd      	mov	sp, r7
 800dc16:	bd80      	pop	{r7, pc}

0800dc18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800dc18:	b480      	push	{r7}
 800dc1a:	b085      	sub	sp, #20
 800dc1c:	af00      	add	r7, sp, #0
 800dc1e:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800dc20:	687b      	ldr	r3, [r7, #4]
 800dc22:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800dc26:	687b      	ldr	r3, [r7, #4]
 800dc28:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800dc2c:	429a      	cmp	r2, r3
 800dc2e:	d011      	beq.n	800dc54 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800dc30:	4b14      	ldr	r3, [pc, #80]	@ (800dc84 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800dc32:	781b      	ldrb	r3, [r3, #0]
 800dc34:	2b00      	cmp	r3, #0
 800dc36:	d11e      	bne.n	800dc76 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800dc38:	4b13      	ldr	r3, [pc, #76]	@ (800dc88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800dc3a:	881b      	ldrh	r3, [r3, #0]
 800dc3c:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800dc3e:	4b13      	ldr	r3, [pc, #76]	@ (800dc8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800dc40:	881a      	ldrh	r2, [r3, #0]
 800dc42:	4b11      	ldr	r3, [pc, #68]	@ (800dc88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800dc44:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800dc46:	4a11      	ldr	r2, [pc, #68]	@ (800dc8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800dc48:	89bb      	ldrh	r3, [r7, #12]
 800dc4a:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800dc4c:	4b0d      	ldr	r3, [pc, #52]	@ (800dc84 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800dc4e:	2201      	movs	r2, #1
 800dc50:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800dc52:	e010      	b.n	800dc76 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800dc54:	4b0b      	ldr	r3, [pc, #44]	@ (800dc84 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800dc56:	781b      	ldrb	r3, [r3, #0]
 800dc58:	2b00      	cmp	r3, #0
 800dc5a:	d00c      	beq.n	800dc76 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800dc5c:	4b0a      	ldr	r3, [pc, #40]	@ (800dc88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800dc5e:	881b      	ldrh	r3, [r3, #0]
 800dc60:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800dc62:	4b0a      	ldr	r3, [pc, #40]	@ (800dc8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800dc64:	881a      	ldrh	r2, [r3, #0]
 800dc66:	4b08      	ldr	r3, [pc, #32]	@ (800dc88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800dc68:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800dc6a:	4a08      	ldr	r2, [pc, #32]	@ (800dc8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800dc6c:	89fb      	ldrh	r3, [r7, #14]
 800dc6e:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800dc70:	4b04      	ldr	r3, [pc, #16]	@ (800dc84 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800dc72:	2200      	movs	r2, #0
 800dc74:	701a      	strb	r2, [r3, #0]
    }
 800dc76:	bf00      	nop
 800dc78:	3714      	adds	r7, #20
 800dc7a:	46bd      	mov	sp, r7
 800dc7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc80:	4770      	bx	lr
 800dc82:	bf00      	nop
 800dc84:	200023a0 	.word	0x200023a0
 800dc88:	2000239e 	.word	0x2000239e
 800dc8c:	2000239c 	.word	0x2000239c

0800dc90 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Invalidate D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
 800dc90:	b480      	push	{r7}
 800dc92:	b083      	sub	sp, #12
 800dc94:	af00      	add	r7, sp, #0
 800dc96:	6078      	str	r0, [r7, #4]
    {
    }
 800dc98:	bf00      	nop
 800dc9a:	370c      	adds	r7, #12
 800dc9c:	46bd      	mov	sp, r7
 800dc9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dca2:	4770      	bx	lr

0800dca4 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Flush D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
 800dca4:	b480      	push	{r7}
 800dca6:	b083      	sub	sp, #12
 800dca8:	af00      	add	r7, sp, #0
 800dcaa:	6078      	str	r0, [r7, #4]
    {
    }
 800dcac:	bf00      	nop
 800dcae:	370c      	adds	r7, #12
 800dcb0:	46bd      	mov	sp, r7
 800dcb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcb6:	4770      	bx	lr

0800dcb8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800dcb8:	b580      	push	{r7, lr}
 800dcba:	b082      	sub	sp, #8
 800dcbc:	af00      	add	r7, sp, #0
 800dcbe:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800dcc0:	687b      	ldr	r3, [r7, #4]
 800dcc2:	4618      	mov	r0, r3
 800dcc4:	f001 fe86 	bl	800f9d4 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800dcc8:	bf00      	nop
 800dcca:	3708      	adds	r7, #8
 800dccc:	46bd      	mov	sp, r7
 800dcce:	bd80      	pop	{r7, pc}

0800dcd0 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800dcd0:	b580      	push	{r7, lr}
 800dcd2:	b082      	sub	sp, #8
 800dcd4:	af00      	add	r7, sp, #0
 800dcd6:	6078      	str	r0, [r7, #4]
 800dcd8:	4a05      	ldr	r2, [pc, #20]	@ (800dcf0 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800dcda:	687b      	ldr	r3, [r7, #4]
 800dcdc:	601a      	str	r2, [r3, #0]
 800dcde:	687b      	ldr	r3, [r7, #4]
 800dce0:	4618      	mov	r0, r3
 800dce2:	f7ff fe79 	bl	800d9d8 <_ZN8touchgfx3HALD1Ev>
 800dce6:	687b      	ldr	r3, [r7, #4]
 800dce8:	4618      	mov	r0, r3
 800dcea:	3708      	adds	r7, #8
 800dcec:	46bd      	mov	sp, r7
 800dcee:	bd80      	pop	{r7, pc}
 800dcf0:	08029488 	.word	0x08029488

0800dcf4 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800dcf4:	b580      	push	{r7, lr}
 800dcf6:	b082      	sub	sp, #8
 800dcf8:	af00      	add	r7, sp, #0
 800dcfa:	6078      	str	r0, [r7, #4]
 800dcfc:	6878      	ldr	r0, [r7, #4]
 800dcfe:	f7ff ffe7 	bl	800dcd0 <_ZN20TouchGFXGeneratedHALD1Ev>
 800dd02:	217c      	movs	r1, #124	@ 0x7c
 800dd04:	6878      	ldr	r0, [r7, #4]
 800dd06:	f016 f886 	bl	8023e16 <_ZdlPvj>
 800dd0a:	687b      	ldr	r3, [r7, #4]
 800dd0c:	4618      	mov	r0, r3
 800dd0e:	3708      	adds	r7, #8
 800dd10:	46bd      	mov	sp, r7
 800dd12:	bd80      	pop	{r7, pc}

0800dd14 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800dd14:	b580      	push	{r7, lr}
 800dd16:	b082      	sub	sp, #8
 800dd18:	af00      	add	r7, sp, #0
 800dd1a:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800dd1c:	687b      	ldr	r3, [r7, #4]
 800dd1e:	4618      	mov	r0, r3
 800dd20:	f7ff ffca 	bl	800dcb8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800dd24:	bf00      	nop
 800dd26:	3708      	adds	r7, #8
 800dd28:	46bd      	mov	sp, r7
 800dd2a:	bd80      	pop	{r7, pc}

0800dd2c <_ZN11TouchGFXHAL10initializeEv>:
 */
#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 800dd2c:	b580      	push	{r7, lr}
 800dd2e:	b082      	sub	sp, #8
 800dd30:	af00      	add	r7, sp, #0
 800dd32:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800dd34:	687b      	ldr	r3, [r7, #4]
 800dd36:	4618      	mov	r0, r3
 800dd38:	f000 ffc0 	bl	800ecbc <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800dd3c:	bf00      	nop
 800dd3e:	3708      	adds	r7, #8
 800dd40:	46bd      	mov	sp, r7
 800dd42:	bd80      	pop	{r7, pc}

0800dd44 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800dd44:	b580      	push	{r7, lr}
 800dd46:	b082      	sub	sp, #8
 800dd48:	af00      	add	r7, sp, #0
 800dd4a:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800dd4c:	687b      	ldr	r3, [r7, #4]
 800dd4e:	4618      	mov	r0, r3
 800dd50:	f001 f832 	bl	800edb8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800dd54:	4603      	mov	r3, r0
}
 800dd56:	4618      	mov	r0, r3
 800dd58:	3708      	adds	r7, #8
 800dd5a:	46bd      	mov	sp, r7
 800dd5c:	bd80      	pop	{r7, pc}

0800dd5e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800dd5e:	b580      	push	{r7, lr}
 800dd60:	b082      	sub	sp, #8
 800dd62:	af00      	add	r7, sp, #0
 800dd64:	6078      	str	r0, [r7, #4]
 800dd66:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800dd68:	687b      	ldr	r3, [r7, #4]
 800dd6a:	6839      	ldr	r1, [r7, #0]
 800dd6c:	4618      	mov	r0, r3
 800dd6e:	f001 f82e 	bl	800edce <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800dd72:	bf00      	nop
 800dd74:	3708      	adds	r7, #8
 800dd76:	46bd      	mov	sp, r7
 800dd78:	bd80      	pop	{r7, pc}

0800dd7a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800dd7a:	b580      	push	{r7, lr}
 800dd7c:	b082      	sub	sp, #8
 800dd7e:	af00      	add	r7, sp, #0
 800dd80:	6078      	str	r0, [r7, #4]
 800dd82:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800dd84:	687b      	ldr	r3, [r7, #4]
 800dd86:	6839      	ldr	r1, [r7, #0]
 800dd88:	4618      	mov	r0, r3
 800dd8a:	f001 f82b 	bl	800ede4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800dd8e:	bf00      	nop
 800dd90:	3708      	adds	r7, #8
 800dd92:	46bd      	mov	sp, r7
 800dd94:	bd80      	pop	{r7, pc}

0800dd96 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800dd96:	b580      	push	{r7, lr}
 800dd98:	b084      	sub	sp, #16
 800dd9a:	af00      	add	r7, sp, #0
 800dd9c:	60f8      	str	r0, [r7, #12]
 800dd9e:	60b9      	str	r1, [r7, #8]
 800dda0:	607a      	str	r2, [r7, #4]
 800dda2:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800dda4:	68f8      	ldr	r0, [r7, #12]
 800dda6:	683b      	ldr	r3, [r7, #0]
 800dda8:	687a      	ldr	r2, [r7, #4]
 800ddaa:	68b9      	ldr	r1, [r7, #8]
 800ddac:	f001 f85d 	bl	800ee6a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800ddb0:	4603      	mov	r3, r0
}
 800ddb2:	4618      	mov	r0, r3
 800ddb4:	3710      	adds	r7, #16
 800ddb6:	46bd      	mov	sp, r7
 800ddb8:	bd80      	pop	{r7, pc}

0800ddba <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800ddba:	b580      	push	{r7, lr}
 800ddbc:	b082      	sub	sp, #8
 800ddbe:	af00      	add	r7, sp, #0
 800ddc0:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800ddc2:	687b      	ldr	r3, [r7, #4]
 800ddc4:	4618      	mov	r0, r3
 800ddc6:	f000 ffa9 	bl	800ed1c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800ddca:	bf00      	nop
 800ddcc:	3708      	adds	r7, #8
 800ddce:	46bd      	mov	sp, r7
 800ddd0:	bd80      	pop	{r7, pc}

0800ddd2 <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800ddd2:	b580      	push	{r7, lr}
 800ddd4:	b082      	sub	sp, #8
 800ddd6:	af00      	add	r7, sp, #0
 800ddd8:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800ddda:	687b      	ldr	r3, [r7, #4]
 800dddc:	4618      	mov	r0, r3
 800ddde:	f000 ffa7 	bl	800ed30 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800dde2:	bf00      	nop
 800dde4:	3708      	adds	r7, #8
 800dde6:	46bd      	mov	sp, r7
 800dde8:	bd80      	pop	{r7, pc}

0800ddea <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800ddea:	b580      	push	{r7, lr}
 800ddec:	b082      	sub	sp, #8
 800ddee:	af00      	add	r7, sp, #0
 800ddf0:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800ddf2:	687b      	ldr	r3, [r7, #4]
 800ddf4:	4618      	mov	r0, r3
 800ddf6:	f000 ffa5 	bl	800ed44 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800ddfa:	bf00      	nop
 800ddfc:	3708      	adds	r7, #8
 800ddfe:	46bd      	mov	sp, r7
 800de00:	bd80      	pop	{r7, pc}

0800de02 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800de02:	b580      	push	{r7, lr}
 800de04:	b082      	sub	sp, #8
 800de06:	af00      	add	r7, sp, #0
 800de08:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800de0a:	687b      	ldr	r3, [r7, #4]
 800de0c:	4618      	mov	r0, r3
 800de0e:	f000 ffa3 	bl	800ed58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800de12:	bf00      	nop
 800de14:	3708      	adds	r7, #8
 800de16:	46bd      	mov	sp, r7
 800de18:	bd80      	pop	{r7, pc}

0800de1a <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800de1a:	b580      	push	{r7, lr}
 800de1c:	b082      	sub	sp, #8
 800de1e:	af00      	add	r7, sp, #0
 800de20:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800de22:	687b      	ldr	r3, [r7, #4]
 800de24:	4618      	mov	r0, r3
 800de26:	f000 ffa1 	bl	800ed6c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800de2a:	4603      	mov	r3, r0
}
 800de2c:	4618      	mov	r0, r3
 800de2e:	3708      	adds	r7, #8
 800de30:	46bd      	mov	sp, r7
 800de32:	bd80      	pop	{r7, pc}

0800de34 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800de34:	b580      	push	{r7, lr}
 800de36:	b082      	sub	sp, #8
 800de38:	af00      	add	r7, sp, #0
 800de3a:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800de3c:	687b      	ldr	r3, [r7, #4]
 800de3e:	4618      	mov	r0, r3
 800de40:	f000 ffa1 	bl	800ed86 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800de44:	bf00      	nop
 800de46:	3708      	adds	r7, #8
 800de48:	46bd      	mov	sp, r7
 800de4a:	bd80      	pop	{r7, pc}

0800de4c <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800de4c:	b580      	push	{r7, lr}
 800de4e:	b082      	sub	sp, #8
 800de50:	af00      	add	r7, sp, #0
 800de52:	6078      	str	r0, [r7, #4]
 800de54:	4a05      	ldr	r2, [pc, #20]	@ (800de6c <_ZN11TouchGFXHALD1Ev+0x20>)
 800de56:	687b      	ldr	r3, [r7, #4]
 800de58:	601a      	str	r2, [r3, #0]
 800de5a:	687b      	ldr	r3, [r7, #4]
 800de5c:	4618      	mov	r0, r3
 800de5e:	f7ff ff37 	bl	800dcd0 <_ZN20TouchGFXGeneratedHALD1Ev>
 800de62:	687b      	ldr	r3, [r7, #4]
 800de64:	4618      	mov	r0, r3
 800de66:	3708      	adds	r7, #8
 800de68:	46bd      	mov	sp, r7
 800de6a:	bd80      	pop	{r7, pc}
 800de6c:	0802923c 	.word	0x0802923c

0800de70 <_ZN11TouchGFXHALD0Ev>:
 800de70:	b580      	push	{r7, lr}
 800de72:	b082      	sub	sp, #8
 800de74:	af00      	add	r7, sp, #0
 800de76:	6078      	str	r0, [r7, #4]
 800de78:	6878      	ldr	r0, [r7, #4]
 800de7a:	f7ff ffe7 	bl	800de4c <_ZN11TouchGFXHALD1Ev>
 800de7e:	217c      	movs	r1, #124	@ 0x7c
 800de80:	6878      	ldr	r0, [r7, #4]
 800de82:	f015 ffc8 	bl	8023e16 <_ZdlPvj>
 800de86:	687b      	ldr	r3, [r7, #4]
 800de88:	4618      	mov	r0, r3
 800de8a:	3708      	adds	r7, #8
 800de8c:	46bd      	mov	sp, r7
 800de8e:	bd80      	pop	{r7, pc}

0800de90 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800de90:	b480      	push	{r7}
 800de92:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800de94:	4b05      	ldr	r3, [pc, #20]	@ (800deac <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800de96:	2200      	movs	r2, #0
 800de98:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800de9a:	4b05      	ldr	r3, [pc, #20]	@ (800deb0 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800de9c:	2200      	movs	r2, #0
 800de9e:	601a      	str	r2, [r3, #0]
}
 800dea0:	bf00      	nop
 800dea2:	46bd      	mov	sp, r7
 800dea4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dea8:	4770      	bx	lr
 800deaa:	bf00      	nop
 800deac:	2000067c 	.word	0x2000067c
 800deb0:	20000680 	.word	0x20000680

0800deb4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800deb4:	b480      	push	{r7}
 800deb6:	af00      	add	r7, sp, #0
    while (fb_sem);
 800deb8:	bf00      	nop
 800deba:	4b08      	ldr	r3, [pc, #32]	@ (800dedc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800debc:	681b      	ldr	r3, [r3, #0]
 800debe:	2b00      	cmp	r3, #0
 800dec0:	bf14      	ite	ne
 800dec2:	2301      	movne	r3, #1
 800dec4:	2300      	moveq	r3, #0
 800dec6:	b2db      	uxtb	r3, r3
 800dec8:	2b00      	cmp	r3, #0
 800deca:	d1f6      	bne.n	800deba <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800decc:	4b03      	ldr	r3, [pc, #12]	@ (800dedc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800dece:	2201      	movs	r2, #1
 800ded0:	601a      	str	r2, [r3, #0]
}
 800ded2:	bf00      	nop
 800ded4:	46bd      	mov	sp, r7
 800ded6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800deda:	4770      	bx	lr
 800dedc:	2000067c 	.word	0x2000067c

0800dee0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800dee0:	b480      	push	{r7}
 800dee2:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800dee4:	4b03      	ldr	r3, [pc, #12]	@ (800def4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800dee6:	2200      	movs	r2, #0
 800dee8:	601a      	str	r2, [r3, #0]
}
 800deea:	bf00      	nop
 800deec:	46bd      	mov	sp, r7
 800deee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800def2:	4770      	bx	lr
 800def4:	2000067c 	.word	0x2000067c

0800def8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800def8:	b480      	push	{r7}
 800defa:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800defc:	4b03      	ldr	r3, [pc, #12]	@ (800df0c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800defe:	2201      	movs	r2, #1
 800df00:	601a      	str	r2, [r3, #0]
}
 800df02:	bf00      	nop
 800df04:	46bd      	mov	sp, r7
 800df06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df0a:	4770      	bx	lr
 800df0c:	2000067c 	.word	0x2000067c

0800df10 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800df10:	b480      	push	{r7}
 800df12:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800df14:	4b03      	ldr	r3, [pc, #12]	@ (800df24 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800df16:	2200      	movs	r2, #0
 800df18:	601a      	str	r2, [r3, #0]
}
 800df1a:	bf00      	nop
 800df1c:	46bd      	mov	sp, r7
 800df1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df22:	4770      	bx	lr
 800df24:	2000067c 	.word	0x2000067c

0800df28 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800df28:	b480      	push	{r7}
 800df2a:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800df2c:	4b03      	ldr	r3, [pc, #12]	@ (800df3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800df2e:	2201      	movs	r2, #1
 800df30:	601a      	str	r2, [r3, #0]
}
 800df32:	bf00      	nop
 800df34:	46bd      	mov	sp, r7
 800df36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df3a:	4770      	bx	lr
 800df3c:	20000680 	.word	0x20000680

0800df40 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800df40:	b480      	push	{r7}
 800df42:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800df44:	4b03      	ldr	r3, [pc, #12]	@ (800df54 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800df46:	2200      	movs	r2, #0
 800df48:	601a      	str	r2, [r3, #0]
}
 800df4a:	bf00      	nop
 800df4c:	46bd      	mov	sp, r7
 800df4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df52:	4770      	bx	lr
 800df54:	20000680 	.word	0x20000680

0800df58 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800df58:	b480      	push	{r7}
 800df5a:	af00      	add	r7, sp, #0
    return vsync_sem;
 800df5c:	4b05      	ldr	r3, [pc, #20]	@ (800df74 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800df5e:	681b      	ldr	r3, [r3, #0]
 800df60:	2b00      	cmp	r3, #0
 800df62:	bf14      	ite	ne
 800df64:	2301      	movne	r3, #1
 800df66:	2300      	moveq	r3, #0
 800df68:	b2db      	uxtb	r3, r3
}
 800df6a:	4618      	mov	r0, r3
 800df6c:	46bd      	mov	sp, r7
 800df6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df72:	4770      	bx	lr
 800df74:	20000680 	.word	0x20000680

0800df78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800df78:	b580      	push	{r7, lr}
 800df7a:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800df7c:	4b0a      	ldr	r3, [pc, #40]	@ (800dfa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800df7e:	681b      	ldr	r3, [r3, #0]
 800df80:	2b00      	cmp	r3, #0
 800df82:	bf14      	ite	ne
 800df84:	2301      	movne	r3, #1
 800df86:	2300      	moveq	r3, #0
 800df88:	b2db      	uxtb	r3, r3
 800df8a:	2b00      	cmp	r3, #0
 800df8c:	d00a      	beq.n	800dfa4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800df8e:	4b06      	ldr	r3, [pc, #24]	@ (800dfa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800df90:	2200      	movs	r2, #0
 800df92:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800df94:	f7fb f880 	bl	8009098 <_ZN8touchgfx3HAL11getInstanceEv>
 800df98:	4603      	mov	r3, r0
 800df9a:	681a      	ldr	r2, [r3, #0]
 800df9c:	3270      	adds	r2, #112	@ 0x70
 800df9e:	6812      	ldr	r2, [r2, #0]
 800dfa0:	4618      	mov	r0, r3
 800dfa2:	4790      	blx	r2
    }
}
 800dfa4:	bf00      	nop
 800dfa6:	bd80      	pop	{r7, pc}
 800dfa8:	20000680 	.word	0x20000680

0800dfac <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800dfac:	b480      	push	{r7}
 800dfae:	b083      	sub	sp, #12
 800dfb0:	af00      	add	r7, sp, #0
 800dfb2:	6078      	str	r0, [r7, #4]
    {
 800dfb4:	4a04      	ldr	r2, [pc, #16]	@ (800dfc8 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800dfb6:	687b      	ldr	r3, [r7, #4]
 800dfb8:	601a      	str	r2, [r3, #0]
    }
 800dfba:	687b      	ldr	r3, [r7, #4]
 800dfbc:	4618      	mov	r0, r3
 800dfbe:	370c      	adds	r7, #12
 800dfc0:	46bd      	mov	sp, r7
 800dfc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfc6:	4770      	bx	lr
 800dfc8:	08029364 	.word	0x08029364

0800dfcc <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800dfcc:	b580      	push	{r7, lr}
 800dfce:	b082      	sub	sp, #8
 800dfd0:	af00      	add	r7, sp, #0
 800dfd2:	6078      	str	r0, [r7, #4]
    }
 800dfd4:	6878      	ldr	r0, [r7, #4]
 800dfd6:	f7ff ffe9 	bl	800dfac <_ZN8touchgfx9DMA_QueueD1Ev>
 800dfda:	2104      	movs	r1, #4
 800dfdc:	6878      	ldr	r0, [r7, #4]
 800dfde:	f015 ff1a 	bl	8023e16 <_ZdlPvj>
 800dfe2:	687b      	ldr	r3, [r7, #4]
 800dfe4:	4618      	mov	r0, r3
 800dfe6:	3708      	adds	r7, #8
 800dfe8:	46bd      	mov	sp, r7
 800dfea:	bd80      	pop	{r7, pc}

0800dfec <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 800dfec:	b480      	push	{r7}
 800dfee:	b083      	sub	sp, #12
 800dff0:	af00      	add	r7, sp, #0
 800dff2:	6078      	str	r0, [r7, #4]
    {
    }
 800dff4:	bf00      	nop
 800dff6:	370c      	adds	r7, #12
 800dff8:	46bd      	mov	sp, r7
 800dffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dffe:	4770      	bx	lr

0800e000 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 800e000:	b480      	push	{r7}
 800e002:	b083      	sub	sp, #12
 800e004:	af00      	add	r7, sp, #0
 800e006:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 800e008:	2300      	movs	r3, #0
    }
 800e00a:	4618      	mov	r0, r3
 800e00c:	370c      	adds	r7, #12
 800e00e:	46bd      	mov	sp, r7
 800e010:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e014:	4770      	bx	lr
	...

0800e018 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800e018:	b480      	push	{r7}
 800e01a:	b083      	sub	sp, #12
 800e01c:	af00      	add	r7, sp, #0
 800e01e:	6078      	str	r0, [r7, #4]
    {
 800e020:	4a04      	ldr	r2, [pc, #16]	@ (800e034 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800e022:	687b      	ldr	r3, [r7, #4]
 800e024:	601a      	str	r2, [r3, #0]
    }
 800e026:	687b      	ldr	r3, [r7, #4]
 800e028:	4618      	mov	r0, r3
 800e02a:	370c      	adds	r7, #12
 800e02c:	46bd      	mov	sp, r7
 800e02e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e032:	4770      	bx	lr
 800e034:	08029734 	.word	0x08029734

0800e038 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800e038:	b580      	push	{r7, lr}
 800e03a:	b082      	sub	sp, #8
 800e03c:	af00      	add	r7, sp, #0
 800e03e:	6078      	str	r0, [r7, #4]
    }
 800e040:	6878      	ldr	r0, [r7, #4]
 800e042:	f7ff ffe9 	bl	800e018 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800e046:	210c      	movs	r1, #12
 800e048:	6878      	ldr	r0, [r7, #4]
 800e04a:	f015 fee4 	bl	8023e16 <_ZdlPvj>
 800e04e:	687b      	ldr	r3, [r7, #4]
 800e050:	4618      	mov	r0, r3
 800e052:	3708      	adds	r7, #8
 800e054:	46bd      	mov	sp, r7
 800e056:	bd80      	pop	{r7, pc}

0800e058 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800e058:	b480      	push	{r7}
 800e05a:	b083      	sub	sp, #12
 800e05c:	af00      	add	r7, sp, #0
 800e05e:	6078      	str	r0, [r7, #4]
 800e060:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800e062:	4a09      	ldr	r2, [pc, #36]	@ (800e088 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800e064:	687b      	ldr	r3, [r7, #4]
 800e066:	601a      	str	r2, [r3, #0]
 800e068:	687b      	ldr	r3, [r7, #4]
 800e06a:	683a      	ldr	r2, [r7, #0]
 800e06c:	605a      	str	r2, [r3, #4]
 800e06e:	687b      	ldr	r3, [r7, #4]
 800e070:	2200      	movs	r2, #0
 800e072:	721a      	strb	r2, [r3, #8]
 800e074:	687b      	ldr	r3, [r7, #4]
 800e076:	2200      	movs	r2, #0
 800e078:	725a      	strb	r2, [r3, #9]
    {
    }
 800e07a:	687b      	ldr	r3, [r7, #4]
 800e07c:	4618      	mov	r0, r3
 800e07e:	370c      	adds	r7, #12
 800e080:	46bd      	mov	sp, r7
 800e082:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e086:	4770      	bx	lr
 800e088:	08029734 	.word	0x08029734

0800e08c <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 800e08c:	b480      	push	{r7}
 800e08e:	b083      	sub	sp, #12
 800e090:	af00      	add	r7, sp, #0
 800e092:	6078      	str	r0, [r7, #4]
    {
    }
 800e094:	bf00      	nop
 800e096:	370c      	adds	r7, #12
 800e098:	46bd      	mov	sp, r7
 800e09a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e09e:	4770      	bx	lr

0800e0a0 <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 800e0a0:	b480      	push	{r7}
 800e0a2:	b083      	sub	sp, #12
 800e0a4:	af00      	add	r7, sp, #0
 800e0a6:	6078      	str	r0, [r7, #4]
    {
    }
 800e0a8:	bf00      	nop
 800e0aa:	370c      	adds	r7, #12
 800e0ac:	46bd      	mov	sp, r7
 800e0ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0b2:	4770      	bx	lr

0800e0b4 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800e0b4:	b580      	push	{r7, lr}
 800e0b6:	b082      	sub	sp, #8
 800e0b8:	af00      	add	r7, sp, #0
 800e0ba:	6078      	str	r0, [r7, #4]
 800e0bc:	687b      	ldr	r3, [r7, #4]
 800e0be:	330c      	adds	r3, #12
 800e0c0:	4618      	mov	r0, r3
 800e0c2:	f7fb fe07 	bl	8009cd4 <_ZN8touchgfx9colortypeC1Ev>
 800e0c6:	687b      	ldr	r3, [r7, #4]
 800e0c8:	4618      	mov	r0, r3
 800e0ca:	3708      	adds	r7, #8
 800e0cc:	46bd      	mov	sp, r7
 800e0ce:	bd80      	pop	{r7, pc}

0800e0d0 <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 800e0d0:	b580      	push	{r7, lr}
 800e0d2:	b082      	sub	sp, #8
 800e0d4:	af00      	add	r7, sp, #0
 800e0d6:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 800e0d8:	687a      	ldr	r2, [r7, #4]
 800e0da:	687b      	ldr	r3, [r7, #4]
 800e0dc:	330c      	adds	r3, #12
 800e0de:	4619      	mov	r1, r3
 800e0e0:	4610      	mov	r0, r2
 800e0e2:	f7ff ffb9 	bl	800e058 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800e0e6:	4a0b      	ldr	r2, [pc, #44]	@ (800e114 <_ZN8STM32DMAC1Ev+0x44>)
 800e0e8:	687b      	ldr	r3, [r7, #4]
 800e0ea:	601a      	str	r2, [r3, #0]
 800e0ec:	687b      	ldr	r3, [r7, #4]
 800e0ee:	f103 000c 	add.w	r0, r3, #12
 800e0f2:	687b      	ldr	r3, [r7, #4]
 800e0f4:	3320      	adds	r3, #32
 800e0f6:	2201      	movs	r2, #1
 800e0f8:	4619      	mov	r1, r3
 800e0fa:	f002 fb47 	bl	801078c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800e0fe:	687b      	ldr	r3, [r7, #4]
 800e100:	3320      	adds	r3, #32
 800e102:	4618      	mov	r0, r3
 800e104:	f7ff ffd6 	bl	800e0b4 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 800e108:	687b      	ldr	r3, [r7, #4]
 800e10a:	4618      	mov	r0, r3
 800e10c:	3708      	adds	r7, #8
 800e10e:	46bd      	mov	sp, r7
 800e110:	bd80      	pop	{r7, pc}
 800e112:	bf00      	nop
 800e114:	08029314 	.word	0x08029314

0800e118 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 800e118:	b480      	push	{r7}
 800e11a:	b083      	sub	sp, #12
 800e11c:	af00      	add	r7, sp, #0
 800e11e:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 800e120:	2300      	movs	r3, #0
}
 800e122:	4618      	mov	r0, r3
 800e124:	370c      	adds	r7, #12
 800e126:	46bd      	mov	sp, r7
 800e128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e12c:	4770      	bx	lr
	...

0800e130 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 800e130:	b580      	push	{r7, lr}
 800e132:	b082      	sub	sp, #8
 800e134:	af00      	add	r7, sp, #0
 800e136:	6078      	str	r0, [r7, #4]
 800e138:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800e13a:	4b03      	ldr	r3, [pc, #12]	@ (800e148 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800e13c:	4a03      	ldr	r2, [pc, #12]	@ (800e14c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800e13e:	2122      	movs	r1, #34	@ 0x22
 800e140:	4803      	ldr	r0, [pc, #12]	@ (800e150 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800e142:	f016 f897 	bl	8024274 <__assert_func>
 800e146:	bf00      	nop
 800e148:	080280b8 	.word	0x080280b8
 800e14c:	080280dc 	.word	0x080280dc
 800e150:	0802811c 	.word	0x0802811c

0800e154 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 800e154:	b580      	push	{r7, lr}
 800e156:	b082      	sub	sp, #8
 800e158:	af00      	add	r7, sp, #0
 800e15a:	6078      	str	r0, [r7, #4]
 800e15c:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800e15e:	4b03      	ldr	r3, [pc, #12]	@ (800e16c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800e160:	4a03      	ldr	r2, [pc, #12]	@ (800e170 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800e162:	2127      	movs	r1, #39	@ 0x27
 800e164:	4803      	ldr	r0, [pc, #12]	@ (800e174 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800e166:	f016 f885 	bl	8024274 <__assert_func>
 800e16a:	bf00      	nop
 800e16c:	080280b8 	.word	0x080280b8
 800e170:	08028148 	.word	0x08028148
 800e174:	0802811c 	.word	0x0802811c

0800e178 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 800e178:	b580      	push	{r7, lr}
 800e17a:	b082      	sub	sp, #8
 800e17c:	af00      	add	r7, sp, #0
 800e17e:	6078      	str	r0, [r7, #4]
 800e180:	4a08      	ldr	r2, [pc, #32]	@ (800e1a4 <_ZN8STM32DMAD1Ev+0x2c>)
 800e182:	687b      	ldr	r3, [r7, #4]
 800e184:	601a      	str	r2, [r3, #0]
 800e186:	687b      	ldr	r3, [r7, #4]
 800e188:	330c      	adds	r3, #12
 800e18a:	4618      	mov	r0, r3
 800e18c:	f000 f81c 	bl	800e1c8 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800e190:	687b      	ldr	r3, [r7, #4]
 800e192:	4618      	mov	r0, r3
 800e194:	f7ff ff40 	bl	800e018 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800e198:	687b      	ldr	r3, [r7, #4]
 800e19a:	4618      	mov	r0, r3
 800e19c:	3708      	adds	r7, #8
 800e19e:	46bd      	mov	sp, r7
 800e1a0:	bd80      	pop	{r7, pc}
 800e1a2:	bf00      	nop
 800e1a4:	08029314 	.word	0x08029314

0800e1a8 <_ZN8STM32DMAD0Ev>:
 800e1a8:	b580      	push	{r7, lr}
 800e1aa:	b082      	sub	sp, #8
 800e1ac:	af00      	add	r7, sp, #0
 800e1ae:	6078      	str	r0, [r7, #4]
 800e1b0:	6878      	ldr	r0, [r7, #4]
 800e1b2:	f7ff ffe1 	bl	800e178 <_ZN8STM32DMAD1Ev>
 800e1b6:	2144      	movs	r1, #68	@ 0x44
 800e1b8:	6878      	ldr	r0, [r7, #4]
 800e1ba:	f015 fe2c 	bl	8023e16 <_ZdlPvj>
 800e1be:	687b      	ldr	r3, [r7, #4]
 800e1c0:	4618      	mov	r0, r3
 800e1c2:	3708      	adds	r7, #8
 800e1c4:	46bd      	mov	sp, r7
 800e1c6:	bd80      	pop	{r7, pc}

0800e1c8 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800e1c8:	b580      	push	{r7, lr}
 800e1ca:	b082      	sub	sp, #8
 800e1cc:	af00      	add	r7, sp, #0
 800e1ce:	6078      	str	r0, [r7, #4]
 800e1d0:	4a05      	ldr	r2, [pc, #20]	@ (800e1e8 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800e1d2:	687b      	ldr	r3, [r7, #4]
 800e1d4:	601a      	str	r2, [r3, #0]
 800e1d6:	687b      	ldr	r3, [r7, #4]
 800e1d8:	4618      	mov	r0, r3
 800e1da:	f7ff fee7 	bl	800dfac <_ZN8touchgfx9DMA_QueueD1Ev>
 800e1de:	687b      	ldr	r3, [r7, #4]
 800e1e0:	4618      	mov	r0, r3
 800e1e2:	3708      	adds	r7, #8
 800e1e4:	46bd      	mov	sp, r7
 800e1e6:	bd80      	pop	{r7, pc}
 800e1e8:	08029784 	.word	0x08029784

0800e1ec <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800e1ec:	b580      	push	{r7, lr}
 800e1ee:	b082      	sub	sp, #8
 800e1f0:	af00      	add	r7, sp, #0
 800e1f2:	6078      	str	r0, [r7, #4]
 800e1f4:	6878      	ldr	r0, [r7, #4]
 800e1f6:	f7ff ffe7 	bl	800e1c8 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800e1fa:	2114      	movs	r1, #20
 800e1fc:	6878      	ldr	r0, [r7, #4]
 800e1fe:	f015 fe0a 	bl	8023e16 <_ZdlPvj>
 800e202:	687b      	ldr	r3, [r7, #4]
 800e204:	4618      	mov	r0, r3
 800e206:	3708      	adds	r7, #8
 800e208:	46bd      	mov	sp, r7
 800e20a:	bd80      	pop	{r7, pc}

0800e20c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800e20c:	b480      	push	{r7}
 800e20e:	b083      	sub	sp, #12
 800e210:	af00      	add	r7, sp, #0
 800e212:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800e214:	4a04      	ldr	r2, [pc, #16]	@ (800e228 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800e216:	687b      	ldr	r3, [r7, #4]
 800e218:	6013      	str	r3, [r2, #0]
    }
 800e21a:	bf00      	nop
 800e21c:	370c      	adds	r7, #12
 800e21e:	46bd      	mov	sp, r7
 800e220:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e224:	4770      	bx	lr
 800e226:	bf00      	nop
 800e228:	20002404 	.word	0x20002404

0800e22c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800e22c:	b480      	push	{r7}
 800e22e:	b085      	sub	sp, #20
 800e230:	af00      	add	r7, sp, #0
 800e232:	60f8      	str	r0, [r7, #12]
 800e234:	60b9      	str	r1, [r7, #8]
 800e236:	607a      	str	r2, [r7, #4]
 800e238:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800e23a:	4a0b      	ldr	r2, [pc, #44]	@ (800e268 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800e23c:	68fb      	ldr	r3, [r7, #12]
 800e23e:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800e240:	68fb      	ldr	r3, [r7, #12]
 800e242:	68ba      	ldr	r2, [r7, #8]
 800e244:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800e246:	68fb      	ldr	r3, [r7, #12]
 800e248:	687a      	ldr	r2, [r7, #4]
 800e24a:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800e24c:	68fb      	ldr	r3, [r7, #12]
 800e24e:	683a      	ldr	r2, [r7, #0]
 800e250:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800e252:	68fb      	ldr	r3, [r7, #12]
 800e254:	69ba      	ldr	r2, [r7, #24]
 800e256:	611a      	str	r2, [r3, #16]
    {
    }
 800e258:	68fb      	ldr	r3, [r7, #12]
 800e25a:	4618      	mov	r0, r3
 800e25c:	3714      	adds	r7, #20
 800e25e:	46bd      	mov	sp, r7
 800e260:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e264:	4770      	bx	lr
 800e266:	bf00      	nop
 800e268:	0802944c 	.word	0x0802944c

0800e26c <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800e26c:	b480      	push	{r7}
 800e26e:	b083      	sub	sp, #12
 800e270:	af00      	add	r7, sp, #0
 800e272:	6078      	str	r0, [r7, #4]
    {
 800e274:	4a04      	ldr	r2, [pc, #16]	@ (800e288 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800e276:	687b      	ldr	r3, [r7, #4]
 800e278:	601a      	str	r2, [r3, #0]
    }
 800e27a:	687b      	ldr	r3, [r7, #4]
 800e27c:	4618      	mov	r0, r3
 800e27e:	370c      	adds	r7, #12
 800e280:	46bd      	mov	sp, r7
 800e282:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e286:	4770      	bx	lr
 800e288:	0802944c 	.word	0x0802944c

0800e28c <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800e28c:	b580      	push	{r7, lr}
 800e28e:	b082      	sub	sp, #8
 800e290:	af00      	add	r7, sp, #0
 800e292:	6078      	str	r0, [r7, #4]
    }
 800e294:	6878      	ldr	r0, [r7, #4]
 800e296:	f7ff ffe9 	bl	800e26c <_ZN8touchgfx7MVPHeapD1Ev>
 800e29a:	2114      	movs	r1, #20
 800e29c:	6878      	ldr	r0, [r7, #4]
 800e29e:	f015 fdba 	bl	8023e16 <_ZdlPvj>
 800e2a2:	687b      	ldr	r3, [r7, #4]
 800e2a4:	4618      	mov	r0, r3
 800e2a6:	3708      	adds	r7, #8
 800e2a8:	46bd      	mov	sp, r7
 800e2aa:	bd80      	pop	{r7, pc}

0800e2ac <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800e2ac:	b480      	push	{r7}
 800e2ae:	b083      	sub	sp, #12
 800e2b0:	af00      	add	r7, sp, #0
 800e2b2:	6078      	str	r0, [r7, #4]
    {
 800e2b4:	4a04      	ldr	r2, [pc, #16]	@ (800e2c8 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800e2b6:	687b      	ldr	r3, [r7, #4]
 800e2b8:	601a      	str	r2, [r3, #0]
    }
 800e2ba:	687b      	ldr	r3, [r7, #4]
 800e2bc:	4618      	mov	r0, r3
 800e2be:	370c      	adds	r7, #12
 800e2c0:	46bd      	mov	sp, r7
 800e2c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2c6:	4770      	bx	lr
 800e2c8:	08029bd4 	.word	0x08029bd4

0800e2cc <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800e2cc:	b580      	push	{r7, lr}
 800e2ce:	b082      	sub	sp, #8
 800e2d0:	af00      	add	r7, sp, #0
 800e2d2:	6078      	str	r0, [r7, #4]
    }
 800e2d4:	6878      	ldr	r0, [r7, #4]
 800e2d6:	f7ff ffe9 	bl	800e2ac <_ZN8touchgfx3LCDD1Ev>
 800e2da:	2108      	movs	r1, #8
 800e2dc:	6878      	ldr	r0, [r7, #4]
 800e2de:	f015 fd9a 	bl	8023e16 <_ZdlPvj>
 800e2e2:	687b      	ldr	r3, [r7, #4]
 800e2e4:	4618      	mov	r0, r3
 800e2e6:	3708      	adds	r7, #8
 800e2e8:	46bd      	mov	sp, r7
 800e2ea:	bd80      	pop	{r7, pc}

0800e2ec <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800e2ec:	b480      	push	{r7}
 800e2ee:	b083      	sub	sp, #12
 800e2f0:	af00      	add	r7, sp, #0
 800e2f2:	6078      	str	r0, [r7, #4]
            : startX(0),
 800e2f4:	687b      	ldr	r3, [r7, #4]
 800e2f6:	2200      	movs	r2, #0
 800e2f8:	801a      	strh	r2, [r3, #0]
              startY(0),
 800e2fa:	687b      	ldr	r3, [r7, #4]
 800e2fc:	2200      	movs	r2, #0
 800e2fe:	805a      	strh	r2, [r3, #2]
              downX(0),
 800e300:	687b      	ldr	r3, [r7, #4]
 800e302:	2200      	movs	r2, #0
 800e304:	809a      	strh	r2, [r3, #4]
              downY(0),
 800e306:	687b      	ldr	r3, [r7, #4]
 800e308:	2200      	movs	r2, #0
 800e30a:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800e30c:	687b      	ldr	r3, [r7, #4]
 800e30e:	2200      	movs	r2, #0
 800e310:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800e312:	687b      	ldr	r3, [r7, #4]
 800e314:	2200      	movs	r2, #0
 800e316:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800e318:	687b      	ldr	r3, [r7, #4]
 800e31a:	2200      	movs	r2, #0
 800e31c:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800e31e:	687b      	ldr	r3, [r7, #4]
 800e320:	2200      	movs	r2, #0
 800e322:	739a      	strb	r2, [r3, #14]
        {
        }
 800e324:	687b      	ldr	r3, [r7, #4]
 800e326:	4618      	mov	r0, r3
 800e328:	370c      	adds	r7, #12
 800e32a:	46bd      	mov	sp, r7
 800e32c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e330:	4770      	bx	lr

0800e332 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800e332:	b580      	push	{r7, lr}
 800e334:	b082      	sub	sp, #8
 800e336:	af00      	add	r7, sp, #0
 800e338:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800e33a:	687b      	ldr	r3, [r7, #4]
 800e33c:	4618      	mov	r0, r3
 800e33e:	f7ff ffd5 	bl	800e2ec <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800e342:	687b      	ldr	r3, [r7, #4]
 800e344:	2200      	movs	r2, #0
 800e346:	611a      	str	r2, [r3, #16]
 800e348:	687b      	ldr	r3, [r7, #4]
 800e34a:	2200      	movs	r2, #0
 800e34c:	829a      	strh	r2, [r3, #20]
    {
    }
 800e34e:	687b      	ldr	r3, [r7, #4]
 800e350:	4618      	mov	r0, r3
 800e352:	3708      	adds	r7, #8
 800e354:	46bd      	mov	sp, r7
 800e356:	bd80      	pop	{r7, pc}

0800e358 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800e358:	b580      	push	{r7, lr}
 800e35a:	b084      	sub	sp, #16
 800e35c:	af00      	add	r7, sp, #0
 800e35e:	60f8      	str	r0, [r7, #12]
 800e360:	60b9      	str	r1, [r7, #8]
 800e362:	607a      	str	r2, [r7, #4]
 800e364:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800e366:	4a55      	ldr	r2, [pc, #340]	@ (800e4bc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800e368:	68fb      	ldr	r3, [r7, #12]
 800e36a:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800e36c:	68fb      	ldr	r3, [r7, #12]
 800e36e:	68ba      	ldr	r2, [r7, #8]
 800e370:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800e372:	68fb      	ldr	r3, [r7, #12]
 800e374:	687a      	ldr	r2, [r7, #4]
 800e376:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800e378:	68fb      	ldr	r3, [r7, #12]
 800e37a:	683a      	ldr	r2, [r7, #0]
 800e37c:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800e37e:	68fb      	ldr	r3, [r7, #12]
 800e380:	2200      	movs	r2, #0
 800e382:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800e384:	68fb      	ldr	r3, [r7, #12]
 800e386:	2200      	movs	r2, #0
 800e388:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800e38a:	68fb      	ldr	r3, [r7, #12]
 800e38c:	2200      	movs	r2, #0
 800e38e:	619a      	str	r2, [r3, #24]
          gestures(),
 800e390:	68fb      	ldr	r3, [r7, #12]
 800e392:	331c      	adds	r3, #28
 800e394:	4618      	mov	r0, r3
 800e396:	f7ff ffcc 	bl	800e332 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800e39a:	68fb      	ldr	r3, [r7, #12]
 800e39c:	2200      	movs	r2, #0
 800e39e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 800e3a2:	68fb      	ldr	r3, [r7, #12]
 800e3a4:	2200      	movs	r2, #0
 800e3a6:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 800e3a8:	68fb      	ldr	r3, [r7, #12]
 800e3aa:	2200      	movs	r2, #0
 800e3ac:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 800e3ae:	68fb      	ldr	r3, [r7, #12]
 800e3b0:	2200      	movs	r2, #0
 800e3b2:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 800e3b4:	68fb      	ldr	r3, [r7, #12]
 800e3b6:	2200      	movs	r2, #0
 800e3b8:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800e3ba:	68fb      	ldr	r3, [r7, #12]
 800e3bc:	2200      	movs	r2, #0
 800e3be:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 800e3c2:	68fb      	ldr	r3, [r7, #12]
 800e3c4:	2201      	movs	r2, #1
 800e3c6:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 800e3ca:	68fb      	ldr	r3, [r7, #12]
 800e3cc:	2200      	movs	r2, #0
 800e3ce:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 800e3d2:	68fb      	ldr	r3, [r7, #12]
 800e3d4:	2200      	movs	r2, #0
 800e3d6:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 800e3da:	68fb      	ldr	r3, [r7, #12]
 800e3dc:	2200      	movs	r2, #0
 800e3de:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 800e3e0:	68fb      	ldr	r3, [r7, #12]
 800e3e2:	3350      	adds	r3, #80	@ 0x50
 800e3e4:	4618      	mov	r0, r3
 800e3e6:	f7fb fc92 	bl	8009d0e <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800e3ea:	68fb      	ldr	r3, [r7, #12]
 800e3ec:	2200      	movs	r2, #0
 800e3ee:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 800e3f2:	68fb      	ldr	r3, [r7, #12]
 800e3f4:	2200      	movs	r2, #0
 800e3f6:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 800e3f8:	68fb      	ldr	r3, [r7, #12]
 800e3fa:	2200      	movs	r2, #0
 800e3fc:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 800e3fe:	68fb      	ldr	r3, [r7, #12]
 800e400:	2200      	movs	r2, #0
 800e402:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 800e404:	68fb      	ldr	r3, [r7, #12]
 800e406:	2201      	movs	r2, #1
 800e408:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 800e40c:	68fb      	ldr	r3, [r7, #12]
 800e40e:	2200      	movs	r2, #0
 800e410:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 800e414:	68fb      	ldr	r3, [r7, #12]
 800e416:	2200      	movs	r2, #0
 800e418:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 800e41c:	68fb      	ldr	r3, [r7, #12]
 800e41e:	2201      	movs	r2, #1
 800e420:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 800e424:	68fb      	ldr	r3, [r7, #12]
 800e426:	2200      	movs	r2, #0
 800e428:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 800e42c:	68fb      	ldr	r3, [r7, #12]
 800e42e:	2200      	movs	r2, #0
 800e430:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 800e434:	68fb      	ldr	r3, [r7, #12]
 800e436:	2200      	movs	r2, #0
 800e438:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 800e43c:	68fb      	ldr	r3, [r7, #12]
 800e43e:	2200      	movs	r2, #0
 800e440:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 800e444:	68fb      	ldr	r3, [r7, #12]
 800e446:	2200      	movs	r2, #0
 800e448:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 800e44c:	68fb      	ldr	r3, [r7, #12]
 800e44e:	2200      	movs	r2, #0
 800e450:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800e452:	68fb      	ldr	r3, [r7, #12]
 800e454:	2200      	movs	r2, #0
 800e456:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 800e45a:	68fb      	ldr	r3, [r7, #12]
 800e45c:	2200      	movs	r2, #0
 800e45e:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 800e462:	68fb      	ldr	r3, [r7, #12]
 800e464:	2201      	movs	r2, #1
 800e466:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE)
 800e46a:	68fb      	ldr	r3, [r7, #12]
 800e46c:	2201      	movs	r2, #1
 800e46e:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
        instance = this;
 800e472:	4a13      	ldr	r2, [pc, #76]	@ (800e4c0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800e474:	68fb      	ldr	r3, [r7, #12]
 800e476:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800e478:	4a12      	ldr	r2, [pc, #72]	@ (800e4c4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800e47a:	8b3b      	ldrh	r3, [r7, #24]
 800e47c:	8013      	strh	r3, [r2, #0]
 800e47e:	4b11      	ldr	r3, [pc, #68]	@ (800e4c4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800e480:	881a      	ldrh	r2, [r3, #0]
 800e482:	4b11      	ldr	r3, [pc, #68]	@ (800e4c8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800e484:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800e486:	4a11      	ldr	r2, [pc, #68]	@ (800e4cc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800e488:	8bbb      	ldrh	r3, [r7, #28]
 800e48a:	8013      	strh	r3, [r2, #0]
 800e48c:	4b0f      	ldr	r3, [pc, #60]	@ (800e4cc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800e48e:	881a      	ldrh	r2, [r3, #0]
 800e490:	4b0f      	ldr	r3, [pc, #60]	@ (800e4d0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800e492:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800e494:	4b0f      	ldr	r3, [pc, #60]	@ (800e4d4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800e496:	2200      	movs	r2, #0
 800e498:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800e49a:	8b3a      	ldrh	r2, [r7, #24]
 800e49c:	8bbb      	ldrh	r3, [r7, #28]
 800e49e:	429a      	cmp	r2, r3
 800e4a0:	bf34      	ite	cc
 800e4a2:	2301      	movcc	r3, #1
 800e4a4:	2300      	movcs	r3, #0
 800e4a6:	b2db      	uxtb	r3, r3
 800e4a8:	461a      	mov	r2, r3
 800e4aa:	68fb      	ldr	r3, [r7, #12]
 800e4ac:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 800e4b0:	68fb      	ldr	r3, [r7, #12]
 800e4b2:	4618      	mov	r0, r3
 800e4b4:	3710      	adds	r7, #16
 800e4b6:	46bd      	mov	sp, r7
 800e4b8:	bd80      	pop	{r7, pc}
 800e4ba:	bf00      	nop
 800e4bc:	0802965c 	.word	0x0802965c
 800e4c0:	200023a8 	.word	0x200023a8
 800e4c4:	2000239c 	.word	0x2000239c
 800e4c8:	200023a2 	.word	0x200023a2
 800e4cc:	2000239e 	.word	0x2000239e
 800e4d0:	200023a4 	.word	0x200023a4
 800e4d4:	200023a0 	.word	0x200023a0

0800e4d8 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800e4d8:	b580      	push	{r7, lr}
 800e4da:	b082      	sub	sp, #8
 800e4dc:	af00      	add	r7, sp, #0
 800e4de:	6078      	str	r0, [r7, #4]
 800e4e0:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 800e4e2:	683b      	ldr	r3, [r7, #0]
 800e4e4:	4618      	mov	r0, r3
 800e4e6:	f7fa ffd3 	bl	8009490 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800e4ea:	bf00      	nop
 800e4ec:	3708      	adds	r7, #8
 800e4ee:	46bd      	mov	sp, r7
 800e4f0:	bd80      	pop	{r7, pc}
	...

0800e4f4 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800e4f4:	b580      	push	{r7, lr}
 800e4f6:	b086      	sub	sp, #24
 800e4f8:	af02      	add	r7, sp, #8
 800e4fa:	60f8      	str	r0, [r7, #12]
 800e4fc:	60b9      	str	r1, [r7, #8]
 800e4fe:	607a      	str	r2, [r7, #4]
 800e500:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800e502:	68f8      	ldr	r0, [r7, #12]
 800e504:	69bb      	ldr	r3, [r7, #24]
 800e506:	9300      	str	r3, [sp, #0]
 800e508:	683b      	ldr	r3, [r7, #0]
 800e50a:	687a      	ldr	r2, [r7, #4]
 800e50c:	68b9      	ldr	r1, [r7, #8]
 800e50e:	f7ff fe8d 	bl	800e22c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800e512:	4a04      	ldr	r2, [pc, #16]	@ (800e524 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800e514:	68fb      	ldr	r3, [r7, #12]
 800e516:	601a      	str	r2, [r3, #0]
    {

    }
 800e518:	68fb      	ldr	r3, [r7, #12]
 800e51a:	4618      	mov	r0, r3
 800e51c:	3710      	adds	r7, #16
 800e51e:	46bd      	mov	sp, r7
 800e520:	bd80      	pop	{r7, pc}
 800e522:	bf00      	nop
 800e524:	08029438 	.word	0x08029438

0800e528 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800e528:	b580      	push	{r7, lr}
 800e52a:	af00      	add	r7, sp, #0
 800e52c:	4801      	ldr	r0, [pc, #4]	@ (800e534 <__tcf_0+0xc>)
 800e52e:	f000 f969 	bl	800e804 <_ZN12FrontendHeapD1Ev>
 800e532:	bd80      	pop	{r7, pc}
 800e534:	20000684 	.word	0x20000684

0800e538 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800e538:	b580      	push	{r7, lr}
 800e53a:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800e53c:	4b11      	ldr	r3, [pc, #68]	@ (800e584 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800e53e:	681b      	ldr	r3, [r3, #0]
 800e540:	f3bf 8f5b 	dmb	ish
 800e544:	f003 0301 	and.w	r3, r3, #1
 800e548:	2b00      	cmp	r3, #0
 800e54a:	bf0c      	ite	eq
 800e54c:	2301      	moveq	r3, #1
 800e54e:	2300      	movne	r3, #0
 800e550:	b2db      	uxtb	r3, r3
 800e552:	2b00      	cmp	r3, #0
 800e554:	d013      	beq.n	800e57e <_ZN12FrontendHeap11getInstanceEv+0x46>
 800e556:	480b      	ldr	r0, [pc, #44]	@ (800e584 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800e558:	f015 fc5f 	bl	8023e1a <__cxa_guard_acquire>
 800e55c:	4603      	mov	r3, r0
 800e55e:	2b00      	cmp	r3, #0
 800e560:	bf14      	ite	ne
 800e562:	2301      	movne	r3, #1
 800e564:	2300      	moveq	r3, #0
 800e566:	b2db      	uxtb	r3, r3
 800e568:	2b00      	cmp	r3, #0
 800e56a:	d008      	beq.n	800e57e <_ZN12FrontendHeap11getInstanceEv+0x46>
 800e56c:	4806      	ldr	r0, [pc, #24]	@ (800e588 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800e56e:	f000 f867 	bl	800e640 <_ZN12FrontendHeapC1Ev>
 800e572:	4806      	ldr	r0, [pc, #24]	@ (800e58c <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800e574:	f015 fe9c 	bl	80242b0 <atexit>
 800e578:	4802      	ldr	r0, [pc, #8]	@ (800e584 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800e57a:	f015 fc5a 	bl	8023e32 <__cxa_guard_release>
        return instance;
 800e57e:	4b02      	ldr	r3, [pc, #8]	@ (800e588 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800e580:	4618      	mov	r0, r3
 800e582:	bd80      	pop	{r7, pc}
 800e584:	20000ba4 	.word	0x20000ba4
 800e588:	20000684 	.word	0x20000684
 800e58c:	0800e529 	.word	0x0800e529

0800e590 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800e590:	b580      	push	{r7, lr}
 800e592:	b082      	sub	sp, #8
 800e594:	af00      	add	r7, sp, #0
 800e596:	6078      	str	r0, [r7, #4]
 800e598:	4a05      	ldr	r2, [pc, #20]	@ (800e5b0 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800e59a:	687b      	ldr	r3, [r7, #4]
 800e59c:	601a      	str	r2, [r3, #0]
 800e59e:	687b      	ldr	r3, [r7, #4]
 800e5a0:	4618      	mov	r0, r3
 800e5a2:	f7ff fe63 	bl	800e26c <_ZN8touchgfx7MVPHeapD1Ev>
 800e5a6:	687b      	ldr	r3, [r7, #4]
 800e5a8:	4618      	mov	r0, r3
 800e5aa:	3708      	adds	r7, #8
 800e5ac:	46bd      	mov	sp, r7
 800e5ae:	bd80      	pop	{r7, pc}
 800e5b0:	08029438 	.word	0x08029438

0800e5b4 <_ZN16FrontendHeapBaseD0Ev>:
 800e5b4:	b580      	push	{r7, lr}
 800e5b6:	b082      	sub	sp, #8
 800e5b8:	af00      	add	r7, sp, #0
 800e5ba:	6078      	str	r0, [r7, #4]
 800e5bc:	6878      	ldr	r0, [r7, #4]
 800e5be:	f7ff ffe7 	bl	800e590 <_ZN16FrontendHeapBaseD1Ev>
 800e5c2:	2114      	movs	r1, #20
 800e5c4:	6878      	ldr	r0, [r7, #4]
 800e5c6:	f015 fc26 	bl	8023e16 <_ZdlPvj>
 800e5ca:	687b      	ldr	r3, [r7, #4]
 800e5cc:	4618      	mov	r0, r3
 800e5ce:	3708      	adds	r7, #8
 800e5d0:	46bd      	mov	sp, r7
 800e5d2:	bd80      	pop	{r7, pc}

0800e5d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17SettingsPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800e5d4:	b580      	push	{r7, lr}
 800e5d6:	b082      	sub	sp, #8
 800e5d8:	af00      	add	r7, sp, #0
 800e5da:	6078      	str	r0, [r7, #4]
 800e5dc:	687b      	ldr	r3, [r7, #4]
 800e5de:	4618      	mov	r0, r3
 800e5e0:	f000 ff58 	bl	800f494 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800e5e4:	4a03      	ldr	r2, [pc, #12]	@ (800e5f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17SettingsPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800e5e6:	687b      	ldr	r3, [r7, #4]
 800e5e8:	601a      	str	r2, [r3, #0]
 800e5ea:	687b      	ldr	r3, [r7, #4]
 800e5ec:	4618      	mov	r0, r3
 800e5ee:	3708      	adds	r7, #8
 800e5f0:	46bd      	mov	sp, r7
 800e5f2:	bd80      	pop	{r7, pc}
 800e5f4:	08029404 	.word	0x08029404

0800e5f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12SettingsViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800e5f8:	b580      	push	{r7, lr}
 800e5fa:	b082      	sub	sp, #8
 800e5fc:	af00      	add	r7, sp, #0
 800e5fe:	6078      	str	r0, [r7, #4]
 800e600:	687b      	ldr	r3, [r7, #4]
 800e602:	4618      	mov	r0, r3
 800e604:	f000 ff46 	bl	800f494 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800e608:	4a03      	ldr	r2, [pc, #12]	@ (800e618 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12SettingsViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800e60a:	687b      	ldr	r3, [r7, #4]
 800e60c:	601a      	str	r2, [r3, #0]
 800e60e:	687b      	ldr	r3, [r7, #4]
 800e610:	4618      	mov	r0, r3
 800e612:	3708      	adds	r7, #8
 800e614:	46bd      	mov	sp, r7
 800e616:	bd80      	pop	{r7, pc}
 800e618:	080293d0 	.word	0x080293d0

0800e61c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800e61c:	b580      	push	{r7, lr}
 800e61e:	b082      	sub	sp, #8
 800e620:	af00      	add	r7, sp, #0
 800e622:	6078      	str	r0, [r7, #4]
 800e624:	687b      	ldr	r3, [r7, #4]
 800e626:	4618      	mov	r0, r3
 800e628:	f000 ff34 	bl	800f494 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800e62c:	4a03      	ldr	r2, [pc, #12]	@ (800e63c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800e62e:	687b      	ldr	r3, [r7, #4]
 800e630:	601a      	str	r2, [r3, #0]
 800e632:	687b      	ldr	r3, [r7, #4]
 800e634:	4618      	mov	r0, r3
 800e636:	3708      	adds	r7, #8
 800e638:	46bd      	mov	sp, r7
 800e63a:	bd80      	pop	{r7, pc}
 800e63c:	0802939c 	.word	0x0802939c

0800e640 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800e640:	b590      	push	{r4, r7, lr}
 800e642:	b085      	sub	sp, #20
 800e644:	af02      	add	r7, sp, #8
 800e646:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800e648:	6878      	ldr	r0, [r7, #4]
 800e64a:	687b      	ldr	r3, [r7, #4]
 800e64c:	f103 0114 	add.w	r1, r3, #20
 800e650:	687b      	ldr	r3, [r7, #4]
 800e652:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800e656:	687b      	ldr	r3, [r7, #4]
 800e658:	f503 746b 	add.w	r4, r3, #940	@ 0x3ac
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800e65c:	687b      	ldr	r3, [r7, #4]
 800e65e:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
                     app(model, *this)
 800e662:	9300      	str	r3, [sp, #0]
 800e664:	4623      	mov	r3, r4
 800e666:	f7ff ff45 	bl	800e4f4 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800e66a:	4a18      	ldr	r2, [pc, #96]	@ (800e6cc <_ZN12FrontendHeapC1Ev+0x8c>)
 800e66c:	687b      	ldr	r3, [r7, #4]
 800e66e:	601a      	str	r2, [r3, #0]
 800e670:	687b      	ldr	r3, [r7, #4]
 800e672:	3314      	adds	r3, #20
 800e674:	4618      	mov	r0, r3
 800e676:	f7ff ffad 	bl	800e5d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17SettingsPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800e67a:	687b      	ldr	r3, [r7, #4]
 800e67c:	332c      	adds	r3, #44	@ 0x2c
 800e67e:	4618      	mov	r0, r3
 800e680:	f7ff ffba 	bl	800e5f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12SettingsViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800e684:	687b      	ldr	r3, [r7, #4]
 800e686:	f503 736b 	add.w	r3, r3, #940	@ 0x3ac
 800e68a:	4618      	mov	r0, r3
 800e68c:	f7ff ffc6 	bl	800e61c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800e690:	687b      	ldr	r3, [r7, #4]
 800e692:	f503 7370 	add.w	r3, r3, #960	@ 0x3c0
 800e696:	4618      	mov	r0, r3
 800e698:	f7fe fd78 	bl	800d18c <_ZN5ModelC1Ev>
 800e69c:	687b      	ldr	r3, [r7, #4]
 800e69e:	f503 7071 	add.w	r0, r3, #964	@ 0x3c4
 800e6a2:	687b      	ldr	r3, [r7, #4]
 800e6a4:	f503 7370 	add.w	r3, r3, #960	@ 0x3c0
 800e6a8:	687a      	ldr	r2, [r7, #4]
 800e6aa:	4619      	mov	r1, r3
 800e6ac:	f7fe fd0e 	bl	800d0cc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 800e6b0:	687a      	ldr	r2, [r7, #4]
 800e6b2:	687b      	ldr	r3, [r7, #4]
 800e6b4:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800e6b8:	4619      	mov	r1, r3
 800e6ba:	4610      	mov	r0, r2
 800e6bc:	f7ff ff0c 	bl	800e4d8 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800e6c0:	687b      	ldr	r3, [r7, #4]
 800e6c2:	4618      	mov	r0, r3
 800e6c4:	370c      	adds	r7, #12
 800e6c6:	46bd      	mov	sp, r7
 800e6c8:	bd90      	pop	{r4, r7, pc}
 800e6ca:	bf00      	nop
 800e6cc:	08029388 	.word	0x08029388

0800e6d0 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800e6d0:	b580      	push	{r7, lr}
 800e6d2:	b086      	sub	sp, #24
 800e6d4:	af02      	add	r7, sp, #8
 800e6d6:	60f8      	str	r0, [r7, #12]
 800e6d8:	60b9      	str	r1, [r7, #8]
 800e6da:	607a      	str	r2, [r7, #4]
 800e6dc:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800e6de:	68f8      	ldr	r0, [r7, #12]
 800e6e0:	8bbb      	ldrh	r3, [r7, #28]
 800e6e2:	9301      	str	r3, [sp, #4]
 800e6e4:	8b3b      	ldrh	r3, [r7, #24]
 800e6e6:	9300      	str	r3, [sp, #0]
 800e6e8:	683b      	ldr	r3, [r7, #0]
 800e6ea:	687a      	ldr	r2, [r7, #4]
 800e6ec:	68b9      	ldr	r1, [r7, #8]
 800e6ee:	f7ff fe33 	bl	800e358 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800e6f2:	4a04      	ldr	r2, [pc, #16]	@ (800e704 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800e6f4:	68fb      	ldr	r3, [r7, #12]
 800e6f6:	601a      	str	r2, [r3, #0]
    }
 800e6f8:	68fb      	ldr	r3, [r7, #12]
 800e6fa:	4618      	mov	r0, r3
 800e6fc:	3710      	adds	r7, #16
 800e6fe:	46bd      	mov	sp, r7
 800e700:	bd80      	pop	{r7, pc}
 800e702:	bf00      	nop
 800e704:	08029488 	.word	0x08029488

0800e708 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800e708:	b580      	push	{r7, lr}
 800e70a:	b086      	sub	sp, #24
 800e70c:	af02      	add	r7, sp, #8
 800e70e:	60f8      	str	r0, [r7, #12]
 800e710:	60b9      	str	r1, [r7, #8]
 800e712:	607a      	str	r2, [r7, #4]
 800e714:	603b      	str	r3, [r7, #0]
 800e716:	68f8      	ldr	r0, [r7, #12]
 800e718:	8bbb      	ldrh	r3, [r7, #28]
 800e71a:	9301      	str	r3, [sp, #4]
 800e71c:	8b3b      	ldrh	r3, [r7, #24]
 800e71e:	9300      	str	r3, [sp, #0]
 800e720:	683b      	ldr	r3, [r7, #0]
 800e722:	687a      	ldr	r2, [r7, #4]
 800e724:	68b9      	ldr	r1, [r7, #8]
 800e726:	f7ff ffd3 	bl	800e6d0 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800e72a:	4a04      	ldr	r2, [pc, #16]	@ (800e73c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800e72c:	68fb      	ldr	r3, [r7, #12]
 800e72e:	601a      	str	r2, [r3, #0]
    }
 800e730:	68fb      	ldr	r3, [r7, #12]
 800e732:	4618      	mov	r0, r3
 800e734:	3710      	adds	r7, #16
 800e736:	46bd      	mov	sp, r7
 800e738:	bd80      	pop	{r7, pc}
 800e73a:	bf00      	nop
 800e73c:	0802923c 	.word	0x0802923c

0800e740 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800e740:	b480      	push	{r7}
 800e742:	b083      	sub	sp, #12
 800e744:	af00      	add	r7, sp, #0
 800e746:	6078      	str	r0, [r7, #4]
 800e748:	4a04      	ldr	r2, [pc, #16]	@ (800e75c <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800e74a:	687b      	ldr	r3, [r7, #4]
 800e74c:	601a      	str	r2, [r3, #0]
 800e74e:	687b      	ldr	r3, [r7, #4]
 800e750:	4618      	mov	r0, r3
 800e752:	370c      	adds	r7, #12
 800e754:	46bd      	mov	sp, r7
 800e756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e75a:	4770      	bx	lr
 800e75c:	08029224 	.word	0x08029224

0800e760 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800e760:	b580      	push	{r7, lr}
 800e762:	b082      	sub	sp, #8
 800e764:	af00      	add	r7, sp, #0
 800e766:	6078      	str	r0, [r7, #4]
 800e768:	687b      	ldr	r3, [r7, #4]
 800e76a:	4618      	mov	r0, r3
 800e76c:	f7ff ffe8 	bl	800e740 <_ZN8touchgfx15TouchControllerC1Ev>
 800e770:	4a03      	ldr	r2, [pc, #12]	@ (800e780 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800e772:	687b      	ldr	r3, [r7, #4]
 800e774:	601a      	str	r2, [r3, #0]
 800e776:	687b      	ldr	r3, [r7, #4]
 800e778:	4618      	mov	r0, r3
 800e77a:	3708      	adds	r7, #8
 800e77c:	46bd      	mov	sp, r7
 800e77e:	bd80      	pop	{r7, pc}
 800e780:	0802920c 	.word	0x0802920c

0800e784 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 240);

void touchgfx_init()
{
 800e784:	b590      	push	{r4, r7, lr}
 800e786:	b085      	sub	sp, #20
 800e788:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800e78a:	f7fe fa6f 	bl	800cc6c <_ZN14BitmapDatabase11getInstanceEv>
 800e78e:	4604      	mov	r4, r0
 800e790:	f7fe fa76 	bl	800cc80 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800e794:	4603      	mov	r3, r0
 800e796:	4619      	mov	r1, r3
 800e798:	2300      	movs	r3, #0
 800e79a:	9300      	str	r3, [sp, #0]
 800e79c:	2300      	movs	r3, #0
 800e79e:	2200      	movs	r2, #0
 800e7a0:	4620      	mov	r0, r4
 800e7a2:	f007 fef3 	bl	801658c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800e7a6:	4809      	ldr	r0, [pc, #36]	@ (800e7cc <touchgfx_init+0x48>)
 800e7a8:	f7ff fd30 	bl	800e20c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800e7ac:	2000      	movs	r0, #0
 800e7ae:	f7fe fbab 	bl	800cf08 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800e7b2:	4807      	ldr	r0, [pc, #28]	@ (800e7d0 <touchgfx_init+0x4c>)
 800e7b4:	f007 fe52 	bl	801645c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800e7b8:	f7ff febe 	bl	800e538 <_ZN12FrontendHeap11getInstanceEv>
 800e7bc:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800e7be:	4805      	ldr	r0, [pc, #20]	@ (800e7d4 <touchgfx_init+0x50>)
 800e7c0:	f7ff fab4 	bl	800dd2c <_ZN11TouchGFXHAL10initializeEv>
}
 800e7c4:	bf00      	nop
 800e7c6:	370c      	adds	r7, #12
 800e7c8:	46bd      	mov	sp, r7
 800e7ca:	bd90      	pop	{r4, r7, pc}
 800e7cc:	20000c74 	.word	0x20000c74
 800e7d0:	20000028 	.word	0x20000028
 800e7d4:	20000c78 	.word	0x20000c78

0800e7d8 <touchgfx_components_init>:

void touchgfx_components_init()
{
 800e7d8:	b480      	push	{r7}
 800e7da:	af00      	add	r7, sp, #0
}
 800e7dc:	bf00      	nop
 800e7de:	46bd      	mov	sp, r7
 800e7e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7e4:	4770      	bx	lr
	...

0800e7e8 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800e7e8:	b580      	push	{r7, lr}
 800e7ea:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 800e7ec:	f7ff fbb4 	bl	800df58 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800e7f0:	4603      	mov	r3, r0
 800e7f2:	2b00      	cmp	r3, #0
 800e7f4:	d002      	beq.n	800e7fc <touchgfx_taskEntry+0x14>
     {
         hal.backPorchExited();
 800e7f6:	4802      	ldr	r0, [pc, #8]	@ (800e800 <touchgfx_taskEntry+0x18>)
 800e7f8:	f7ff f96a 	bl	800dad0 <_ZN8touchgfx3HAL15backPorchExitedEv>
     }
}
 800e7fc:	bf00      	nop
 800e7fe:	bd80      	pop	{r7, pc}
 800e800:	20000c78 	.word	0x20000c78

0800e804 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800e804:	b580      	push	{r7, lr}
 800e806:	b082      	sub	sp, #8
 800e808:	af00      	add	r7, sp, #0
 800e80a:	6078      	str	r0, [r7, #4]
 800e80c:	4a10      	ldr	r2, [pc, #64]	@ (800e850 <_ZN12FrontendHeapD1Ev+0x4c>)
 800e80e:	687b      	ldr	r3, [r7, #4]
 800e810:	601a      	str	r2, [r3, #0]
 800e812:	687b      	ldr	r3, [r7, #4]
 800e814:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800e818:	4618      	mov	r0, r3
 800e81a:	f7fe fc21 	bl	800d060 <_ZN19FrontendApplicationD1Ev>
 800e81e:	687b      	ldr	r3, [r7, #4]
 800e820:	f503 736b 	add.w	r3, r3, #940	@ 0x3ac
 800e824:	4618      	mov	r0, r3
 800e826:	f000 f827 	bl	800e878 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800e82a:	687b      	ldr	r3, [r7, #4]
 800e82c:	332c      	adds	r3, #44	@ 0x2c
 800e82e:	4618      	mov	r0, r3
 800e830:	f000 f844 	bl	800e8bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI12SettingsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800e834:	687b      	ldr	r3, [r7, #4]
 800e836:	3314      	adds	r3, #20
 800e838:	4618      	mov	r0, r3
 800e83a:	f000 f863 	bl	800e904 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17SettingsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800e83e:	687b      	ldr	r3, [r7, #4]
 800e840:	4618      	mov	r0, r3
 800e842:	f7ff fea5 	bl	800e590 <_ZN16FrontendHeapBaseD1Ev>
 800e846:	687b      	ldr	r3, [r7, #4]
 800e848:	4618      	mov	r0, r3
 800e84a:	3708      	adds	r7, #8
 800e84c:	46bd      	mov	sp, r7
 800e84e:	bd80      	pop	{r7, pc}
 800e850:	08029388 	.word	0x08029388

0800e854 <_ZN12FrontendHeapD0Ev>:
 800e854:	b580      	push	{r7, lr}
 800e856:	b082      	sub	sp, #8
 800e858:	af00      	add	r7, sp, #0
 800e85a:	6078      	str	r0, [r7, #4]
 800e85c:	6878      	ldr	r0, [r7, #4]
 800e85e:	f7ff ffd1 	bl	800e804 <_ZN12FrontendHeapD1Ev>
 800e862:	f44f 61a4 	mov.w	r1, #1312	@ 0x520
 800e866:	6878      	ldr	r0, [r7, #4]
 800e868:	f015 fad5 	bl	8023e16 <_ZdlPvj>
 800e86c:	687b      	ldr	r3, [r7, #4]
 800e86e:	4618      	mov	r0, r3
 800e870:	3708      	adds	r7, #8
 800e872:	46bd      	mov	sp, r7
 800e874:	bd80      	pop	{r7, pc}
	...

0800e878 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800e878:	b580      	push	{r7, lr}
 800e87a:	b082      	sub	sp, #8
 800e87c:	af00      	add	r7, sp, #0
 800e87e:	6078      	str	r0, [r7, #4]
 800e880:	4a05      	ldr	r2, [pc, #20]	@ (800e898 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800e882:	687b      	ldr	r3, [r7, #4]
 800e884:	601a      	str	r2, [r3, #0]
 800e886:	687b      	ldr	r3, [r7, #4]
 800e888:	4618      	mov	r0, r3
 800e88a:	f000 fe02 	bl	800f492 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800e88e:	687b      	ldr	r3, [r7, #4]
 800e890:	4618      	mov	r0, r3
 800e892:	3708      	adds	r7, #8
 800e894:	46bd      	mov	sp, r7
 800e896:	bd80      	pop	{r7, pc}
 800e898:	0802939c 	.word	0x0802939c

0800e89c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800e89c:	b580      	push	{r7, lr}
 800e89e:	b082      	sub	sp, #8
 800e8a0:	af00      	add	r7, sp, #0
 800e8a2:	6078      	str	r0, [r7, #4]
 800e8a4:	6878      	ldr	r0, [r7, #4]
 800e8a6:	f7ff ffe7 	bl	800e878 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800e8aa:	2114      	movs	r1, #20
 800e8ac:	6878      	ldr	r0, [r7, #4]
 800e8ae:	f015 fab2 	bl	8023e16 <_ZdlPvj>
 800e8b2:	687b      	ldr	r3, [r7, #4]
 800e8b4:	4618      	mov	r0, r3
 800e8b6:	3708      	adds	r7, #8
 800e8b8:	46bd      	mov	sp, r7
 800e8ba:	bd80      	pop	{r7, pc}

0800e8bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI12SettingsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800e8bc:	b580      	push	{r7, lr}
 800e8be:	b082      	sub	sp, #8
 800e8c0:	af00      	add	r7, sp, #0
 800e8c2:	6078      	str	r0, [r7, #4]
 800e8c4:	4a05      	ldr	r2, [pc, #20]	@ (800e8dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI12SettingsViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800e8c6:	687b      	ldr	r3, [r7, #4]
 800e8c8:	601a      	str	r2, [r3, #0]
 800e8ca:	687b      	ldr	r3, [r7, #4]
 800e8cc:	4618      	mov	r0, r3
 800e8ce:	f000 fde0 	bl	800f492 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800e8d2:	687b      	ldr	r3, [r7, #4]
 800e8d4:	4618      	mov	r0, r3
 800e8d6:	3708      	adds	r7, #8
 800e8d8:	46bd      	mov	sp, r7
 800e8da:	bd80      	pop	{r7, pc}
 800e8dc:	080293d0 	.word	0x080293d0

0800e8e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12SettingsViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800e8e0:	b580      	push	{r7, lr}
 800e8e2:	b082      	sub	sp, #8
 800e8e4:	af00      	add	r7, sp, #0
 800e8e6:	6078      	str	r0, [r7, #4]
 800e8e8:	6878      	ldr	r0, [r7, #4]
 800e8ea:	f7ff ffe7 	bl	800e8bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI12SettingsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800e8ee:	f44f 7160 	mov.w	r1, #896	@ 0x380
 800e8f2:	6878      	ldr	r0, [r7, #4]
 800e8f4:	f015 fa8f 	bl	8023e16 <_ZdlPvj>
 800e8f8:	687b      	ldr	r3, [r7, #4]
 800e8fa:	4618      	mov	r0, r3
 800e8fc:	3708      	adds	r7, #8
 800e8fe:	46bd      	mov	sp, r7
 800e900:	bd80      	pop	{r7, pc}
	...

0800e904 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17SettingsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800e904:	b580      	push	{r7, lr}
 800e906:	b082      	sub	sp, #8
 800e908:	af00      	add	r7, sp, #0
 800e90a:	6078      	str	r0, [r7, #4]
 800e90c:	4a05      	ldr	r2, [pc, #20]	@ (800e924 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17SettingsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800e90e:	687b      	ldr	r3, [r7, #4]
 800e910:	601a      	str	r2, [r3, #0]
 800e912:	687b      	ldr	r3, [r7, #4]
 800e914:	4618      	mov	r0, r3
 800e916:	f000 fdbc 	bl	800f492 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800e91a:	687b      	ldr	r3, [r7, #4]
 800e91c:	4618      	mov	r0, r3
 800e91e:	3708      	adds	r7, #8
 800e920:	46bd      	mov	sp, r7
 800e922:	bd80      	pop	{r7, pc}
 800e924:	08029404 	.word	0x08029404

0800e928 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17SettingsPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800e928:	b580      	push	{r7, lr}
 800e92a:	b082      	sub	sp, #8
 800e92c:	af00      	add	r7, sp, #0
 800e92e:	6078      	str	r0, [r7, #4]
 800e930:	6878      	ldr	r0, [r7, #4]
 800e932:	f7ff ffe7 	bl	800e904 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17SettingsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800e936:	2118      	movs	r1, #24
 800e938:	6878      	ldr	r0, [r7, #4]
 800e93a:	f015 fa6c 	bl	8023e16 <_ZdlPvj>
 800e93e:	687b      	ldr	r3, [r7, #4]
 800e940:	4618      	mov	r0, r3
 800e942:	3708      	adds	r7, #8
 800e944:	46bd      	mov	sp, r7
 800e946:	bd80      	pop	{r7, pc}

0800e948 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800e948:	b580      	push	{r7, lr}
 800e94a:	b082      	sub	sp, #8
 800e94c:	af00      	add	r7, sp, #0
 800e94e:	6078      	str	r0, [r7, #4]
 800e950:	4a05      	ldr	r2, [pc, #20]	@ (800e968 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800e952:	687b      	ldr	r3, [r7, #4]
 800e954:	601a      	str	r2, [r3, #0]
 800e956:	687b      	ldr	r3, [r7, #4]
 800e958:	4618      	mov	r0, r3
 800e95a:	f7ff fca7 	bl	800e2ac <_ZN8touchgfx3LCDD1Ev>
 800e95e:	687b      	ldr	r3, [r7, #4]
 800e960:	4618      	mov	r0, r3
 800e962:	3708      	adds	r7, #8
 800e964:	46bd      	mov	sp, r7
 800e966:	bd80      	pop	{r7, pc}
 800e968:	0802a03c 	.word	0x0802a03c

0800e96c <_ZN8touchgfx8LCD16bppD0Ev>:
 800e96c:	b580      	push	{r7, lr}
 800e96e:	b082      	sub	sp, #8
 800e970:	af00      	add	r7, sp, #0
 800e972:	6078      	str	r0, [r7, #4]
 800e974:	6878      	ldr	r0, [r7, #4]
 800e976:	f7ff ffe7 	bl	800e948 <_ZN8touchgfx8LCD16bppD1Ev>
 800e97a:	2184      	movs	r1, #132	@ 0x84
 800e97c:	6878      	ldr	r0, [r7, #4]
 800e97e:	f015 fa4a 	bl	8023e16 <_ZdlPvj>
 800e982:	687b      	ldr	r3, [r7, #4]
 800e984:	4618      	mov	r0, r3
 800e986:	3708      	adds	r7, #8
 800e988:	46bd      	mov	sp, r7
 800e98a:	bd80      	pop	{r7, pc}

0800e98c <_Z41__static_initialization_and_destruction_0ii>:
 800e98c:	b580      	push	{r7, lr}
 800e98e:	b084      	sub	sp, #16
 800e990:	af02      	add	r7, sp, #8
 800e992:	6078      	str	r0, [r7, #4]
 800e994:	6039      	str	r1, [r7, #0]
 800e996:	687b      	ldr	r3, [r7, #4]
 800e998:	2b01      	cmp	r3, #1
 800e99a:	d118      	bne.n	800e9ce <_Z41__static_initialization_and_destruction_0ii+0x42>
 800e99c:	683b      	ldr	r3, [r7, #0]
 800e99e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800e9a2:	4293      	cmp	r3, r2
 800e9a4:	d113      	bne.n	800e9ce <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800e9a6:	4817      	ldr	r0, [pc, #92]	@ (800ea04 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800e9a8:	f7ff feda 	bl	800e760 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800e9ac:	4816      	ldr	r0, [pc, #88]	@ (800ea08 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800e9ae:	f7ff fb8f 	bl	800e0d0 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800e9b2:	4816      	ldr	r0, [pc, #88]	@ (800ea0c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800e9b4:	f00c f8ae 	bl	801ab14 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 240);
 800e9b8:	23f0      	movs	r3, #240	@ 0xf0
 800e9ba:	9301      	str	r3, [sp, #4]
 800e9bc:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800e9c0:	9300      	str	r3, [sp, #0]
 800e9c2:	4b10      	ldr	r3, [pc, #64]	@ (800ea04 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800e9c4:	4a11      	ldr	r2, [pc, #68]	@ (800ea0c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800e9c6:	4910      	ldr	r1, [pc, #64]	@ (800ea08 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800e9c8:	4811      	ldr	r0, [pc, #68]	@ (800ea10 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800e9ca:	f7ff fe9d 	bl	800e708 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800e9ce:	687b      	ldr	r3, [r7, #4]
 800e9d0:	2b00      	cmp	r3, #0
 800e9d2:	d113      	bne.n	800e9fc <_Z41__static_initialization_and_destruction_0ii+0x70>
 800e9d4:	683b      	ldr	r3, [r7, #0]
 800e9d6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800e9da:	4293      	cmp	r3, r2
 800e9dc:	d10e      	bne.n	800e9fc <_Z41__static_initialization_and_destruction_0ii+0x70>
 800e9de:	480c      	ldr	r0, [pc, #48]	@ (800ea10 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800e9e0:	f7ff fa34 	bl	800de4c <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800e9e4:	480b      	ldr	r0, [pc, #44]	@ (800ea14 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800e9e6:	f7f9 ffb7 	bl	8008958 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800e9ea:	4808      	ldr	r0, [pc, #32]	@ (800ea0c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800e9ec:	f7ff ffac 	bl	800e948 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800e9f0:	4805      	ldr	r0, [pc, #20]	@ (800ea08 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800e9f2:	f7ff fbc1 	bl	800e178 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800e9f6:	4803      	ldr	r0, [pc, #12]	@ (800ea04 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800e9f8:	f7fe ff70 	bl	800d8dc <_ZN20STM32TouchControllerD1Ev>
}
 800e9fc:	bf00      	nop
 800e9fe:	3708      	adds	r7, #8
 800ea00:	46bd      	mov	sp, r7
 800ea02:	bd80      	pop	{r7, pc}
 800ea04:	20000ba8 	.word	0x20000ba8
 800ea08:	20000bac 	.word	0x20000bac
 800ea0c:	20000bf0 	.word	0x20000bf0
 800ea10:	20000c78 	.word	0x20000c78
 800ea14:	20000028 	.word	0x20000028

0800ea18 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800ea18:	b480      	push	{r7}
 800ea1a:	b083      	sub	sp, #12
 800ea1c:	af00      	add	r7, sp, #0
 800ea1e:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800ea20:	2301      	movs	r3, #1
    }
 800ea22:	4618      	mov	r0, r3
 800ea24:	370c      	adds	r7, #12
 800ea26:	46bd      	mov	sp, r7
 800ea28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea2c:	4770      	bx	lr

0800ea2e <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800ea2e:	b480      	push	{r7}
 800ea30:	b083      	sub	sp, #12
 800ea32:	af00      	add	r7, sp, #0
 800ea34:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800ea36:	230c      	movs	r3, #12
    }
 800ea38:	4618      	mov	r0, r3
 800ea3a:	370c      	adds	r7, #12
 800ea3c:	46bd      	mov	sp, r7
 800ea3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea42:	4770      	bx	lr

0800ea44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800ea44:	b480      	push	{r7}
 800ea46:	b083      	sub	sp, #12
 800ea48:	af00      	add	r7, sp, #0
 800ea4a:	6078      	str	r0, [r7, #4]
 800ea4c:	460b      	mov	r3, r1
 800ea4e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800ea50:	887a      	ldrh	r2, [r7, #2]
 800ea52:	4613      	mov	r3, r2
 800ea54:	005b      	lsls	r3, r3, #1
 800ea56:	4413      	add	r3, r2
 800ea58:	009b      	lsls	r3, r3, #2
 800ea5a:	3308      	adds	r3, #8
 800ea5c:	687a      	ldr	r2, [r7, #4]
 800ea5e:	4413      	add	r3, r2
    }
 800ea60:	4618      	mov	r0, r3
 800ea62:	370c      	adds	r7, #12
 800ea64:	46bd      	mov	sp, r7
 800ea66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea6a:	4770      	bx	lr

0800ea6c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800ea6c:	b480      	push	{r7}
 800ea6e:	b083      	sub	sp, #12
 800ea70:	af00      	add	r7, sp, #0
 800ea72:	6078      	str	r0, [r7, #4]
 800ea74:	460b      	mov	r3, r1
 800ea76:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800ea78:	887a      	ldrh	r2, [r7, #2]
 800ea7a:	4613      	mov	r3, r2
 800ea7c:	005b      	lsls	r3, r3, #1
 800ea7e:	4413      	add	r3, r2
 800ea80:	009b      	lsls	r3, r3, #2
 800ea82:	3308      	adds	r3, #8
 800ea84:	687a      	ldr	r2, [r7, #4]
 800ea86:	4413      	add	r3, r2
    }
 800ea88:	4618      	mov	r0, r3
 800ea8a:	370c      	adds	r7, #12
 800ea8c:	46bd      	mov	sp, r7
 800ea8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea92:	4770      	bx	lr

0800ea94 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI12SettingsViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800ea94:	b480      	push	{r7}
 800ea96:	b083      	sub	sp, #12
 800ea98:	af00      	add	r7, sp, #0
 800ea9a:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800ea9c:	2301      	movs	r3, #1
    }
 800ea9e:	4618      	mov	r0, r3
 800eaa0:	370c      	adds	r7, #12
 800eaa2:	46bd      	mov	sp, r7
 800eaa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eaa8:	4770      	bx	lr

0800eaaa <_ZN8touchgfx9PartitionINS_4meta8TypeListI12SettingsViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800eaaa:	b480      	push	{r7}
 800eaac:	b083      	sub	sp, #12
 800eaae:	af00      	add	r7, sp, #0
 800eab0:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800eab2:	f44f 735e 	mov.w	r3, #888	@ 0x378
    }
 800eab6:	4618      	mov	r0, r3
 800eab8:	370c      	adds	r7, #12
 800eaba:	46bd      	mov	sp, r7
 800eabc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eac0:	4770      	bx	lr

0800eac2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12SettingsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800eac2:	b480      	push	{r7}
 800eac4:	b083      	sub	sp, #12
 800eac6:	af00      	add	r7, sp, #0
 800eac8:	6078      	str	r0, [r7, #4]
 800eaca:	460b      	mov	r3, r1
 800eacc:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800eace:	887b      	ldrh	r3, [r7, #2]
 800ead0:	f44f 725e 	mov.w	r2, #888	@ 0x378
 800ead4:	fb02 f303 	mul.w	r3, r2, r3
 800ead8:	3308      	adds	r3, #8
 800eada:	687a      	ldr	r2, [r7, #4]
 800eadc:	4413      	add	r3, r2
    }
 800eade:	4618      	mov	r0, r3
 800eae0:	370c      	adds	r7, #12
 800eae2:	46bd      	mov	sp, r7
 800eae4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eae8:	4770      	bx	lr

0800eaea <_ZNK8touchgfx9PartitionINS_4meta8TypeListI12SettingsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800eaea:	b480      	push	{r7}
 800eaec:	b083      	sub	sp, #12
 800eaee:	af00      	add	r7, sp, #0
 800eaf0:	6078      	str	r0, [r7, #4]
 800eaf2:	460b      	mov	r3, r1
 800eaf4:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800eaf6:	887b      	ldrh	r3, [r7, #2]
 800eaf8:	f44f 725e 	mov.w	r2, #888	@ 0x378
 800eafc:	fb02 f303 	mul.w	r3, r2, r3
 800eb00:	3308      	adds	r3, #8
 800eb02:	687a      	ldr	r2, [r7, #4]
 800eb04:	4413      	add	r3, r2
    }
 800eb06:	4618      	mov	r0, r3
 800eb08:	370c      	adds	r7, #12
 800eb0a:	46bd      	mov	sp, r7
 800eb0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb10:	4770      	bx	lr

0800eb12 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17SettingsPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800eb12:	b480      	push	{r7}
 800eb14:	b083      	sub	sp, #12
 800eb16:	af00      	add	r7, sp, #0
 800eb18:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800eb1a:	2301      	movs	r3, #1
    }
 800eb1c:	4618      	mov	r0, r3
 800eb1e:	370c      	adds	r7, #12
 800eb20:	46bd      	mov	sp, r7
 800eb22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb26:	4770      	bx	lr

0800eb28 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17SettingsPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800eb28:	b480      	push	{r7}
 800eb2a:	b083      	sub	sp, #12
 800eb2c:	af00      	add	r7, sp, #0
 800eb2e:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800eb30:	2310      	movs	r3, #16
    }
 800eb32:	4618      	mov	r0, r3
 800eb34:	370c      	adds	r7, #12
 800eb36:	46bd      	mov	sp, r7
 800eb38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb3c:	4770      	bx	lr

0800eb3e <_ZN8touchgfx9PartitionINS_4meta8TypeListI17SettingsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800eb3e:	b480      	push	{r7}
 800eb40:	b083      	sub	sp, #12
 800eb42:	af00      	add	r7, sp, #0
 800eb44:	6078      	str	r0, [r7, #4]
 800eb46:	460b      	mov	r3, r1
 800eb48:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800eb4a:	887b      	ldrh	r3, [r7, #2]
 800eb4c:	011b      	lsls	r3, r3, #4
 800eb4e:	3308      	adds	r3, #8
 800eb50:	687a      	ldr	r2, [r7, #4]
 800eb52:	4413      	add	r3, r2
    }
 800eb54:	4618      	mov	r0, r3
 800eb56:	370c      	adds	r7, #12
 800eb58:	46bd      	mov	sp, r7
 800eb5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb5e:	4770      	bx	lr

0800eb60 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17SettingsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800eb60:	b480      	push	{r7}
 800eb62:	b083      	sub	sp, #12
 800eb64:	af00      	add	r7, sp, #0
 800eb66:	6078      	str	r0, [r7, #4]
 800eb68:	460b      	mov	r3, r1
 800eb6a:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800eb6c:	887b      	ldrh	r3, [r7, #2]
 800eb6e:	011b      	lsls	r3, r3, #4
 800eb70:	3308      	adds	r3, #8
 800eb72:	687a      	ldr	r2, [r7, #4]
 800eb74:	4413      	add	r3, r2
    }
 800eb76:	4618      	mov	r0, r3
 800eb78:	370c      	adds	r7, #12
 800eb7a:	46bd      	mov	sp, r7
 800eb7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb80:	4770      	bx	lr

0800eb82 <_GLOBAL__sub_I_touchgfx_init>:
 800eb82:	b580      	push	{r7, lr}
 800eb84:	af00      	add	r7, sp, #0
 800eb86:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800eb8a:	2001      	movs	r0, #1
 800eb8c:	f7ff fefe 	bl	800e98c <_Z41__static_initialization_and_destruction_0ii>
 800eb90:	bd80      	pop	{r7, pc}

0800eb92 <_GLOBAL__sub_D_touchgfx_init>:
 800eb92:	b580      	push	{r7, lr}
 800eb94:	af00      	add	r7, sp, #0
 800eb96:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800eb9a:	2000      	movs	r0, #0
 800eb9c:	f7ff fef6 	bl	800e98c <_Z41__static_initialization_and_destruction_0ii>
 800eba0:	bd80      	pop	{r7, pc}
	...

0800eba4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800eba4:	b480      	push	{r7}
 800eba6:	b083      	sub	sp, #12
 800eba8:	af00      	add	r7, sp, #0
 800ebaa:	6078      	str	r0, [r7, #4]
    {
 800ebac:	4a04      	ldr	r2, [pc, #16]	@ (800ebc0 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800ebae:	687b      	ldr	r3, [r7, #4]
 800ebb0:	601a      	str	r2, [r3, #0]
    }
 800ebb2:	687b      	ldr	r3, [r7, #4]
 800ebb4:	4618      	mov	r0, r3
 800ebb6:	370c      	adds	r7, #12
 800ebb8:	46bd      	mov	sp, r7
 800ebba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebbe:	4770      	bx	lr
 800ebc0:	08029560 	.word	0x08029560

0800ebc4 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800ebc4:	b580      	push	{r7, lr}
 800ebc6:	b082      	sub	sp, #8
 800ebc8:	af00      	add	r7, sp, #0
 800ebca:	6078      	str	r0, [r7, #4]
    }
 800ebcc:	6878      	ldr	r0, [r7, #4]
 800ebce:	f7ff ffe9 	bl	800eba4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800ebd2:	2104      	movs	r1, #4
 800ebd4:	6878      	ldr	r0, [r7, #4]
 800ebd6:	f015 f91e 	bl	8023e16 <_ZdlPvj>
 800ebda:	687b      	ldr	r3, [r7, #4]
 800ebdc:	4618      	mov	r0, r3
 800ebde:	3708      	adds	r7, #8
 800ebe0:	46bd      	mov	sp, r7
 800ebe2:	bd80      	pop	{r7, pc}

0800ebe4 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800ebe4:	b480      	push	{r7}
 800ebe6:	b083      	sub	sp, #12
 800ebe8:	af00      	add	r7, sp, #0
 800ebea:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800ebec:	687b      	ldr	r3, [r7, #4]
 800ebee:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 800ebf2:	3301      	adds	r3, #1
 800ebf4:	b2da      	uxtb	r2, r3
 800ebf6:	687b      	ldr	r3, [r7, #4]
 800ebf8:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
    }
 800ebfc:	bf00      	nop
 800ebfe:	370c      	adds	r7, #12
 800ec00:	46bd      	mov	sp, r7
 800ec02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec06:	4770      	bx	lr

0800ec08 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800ec08:	b480      	push	{r7}
 800ec0a:	b083      	sub	sp, #12
 800ec0c:	af00      	add	r7, sp, #0
 800ec0e:	6078      	str	r0, [r7, #4]
 800ec10:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 800ec12:	687b      	ldr	r3, [r7, #4]
 800ec14:	683a      	ldr	r2, [r7, #0]
 800ec16:	619a      	str	r2, [r3, #24]
    }
 800ec18:	bf00      	nop
 800ec1a:	370c      	adds	r7, #12
 800ec1c:	46bd      	mov	sp, r7
 800ec1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec22:	4770      	bx	lr

0800ec24 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 800ec24:	b480      	push	{r7}
 800ec26:	b083      	sub	sp, #12
 800ec28:	af00      	add	r7, sp, #0
 800ec2a:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 800ec2c:	687b      	ldr	r3, [r7, #4]
 800ec2e:	699b      	ldr	r3, [r3, #24]
    }
 800ec30:	4618      	mov	r0, r3
 800ec32:	370c      	adds	r7, #12
 800ec34:	46bd      	mov	sp, r7
 800ec36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec3a:	4770      	bx	lr

0800ec3c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800ec3c:	b580      	push	{r7, lr}
 800ec3e:	b082      	sub	sp, #8
 800ec40:	af00      	add	r7, sp, #0
 800ec42:	6078      	str	r0, [r7, #4]
 800ec44:	460b      	mov	r3, r1
 800ec46:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800ec48:	78fb      	ldrb	r3, [r7, #3]
 800ec4a:	2b00      	cmp	r3, #0
 800ec4c:	d002      	beq.n	800ec54 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800ec4e:	78fb      	ldrb	r3, [r7, #3]
 800ec50:	2b02      	cmp	r3, #2
 800ec52:	d105      	bne.n	800ec60 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800ec54:	687b      	ldr	r3, [r7, #4]
 800ec56:	78fa      	ldrb	r2, [r7, #3]
 800ec58:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
            return true;
 800ec5c:	2301      	movs	r3, #1
 800ec5e:	e027      	b.n	800ecb0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800ec60:	78fb      	ldrb	r3, [r7, #3]
 800ec62:	2b01      	cmp	r3, #1
 800ec64:	d123      	bne.n	800ecae <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800ec66:	687b      	ldr	r3, [r7, #4]
 800ec68:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ec6a:	2b00      	cmp	r3, #0
 800ec6c:	d014      	beq.n	800ec98 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ec6e:	687b      	ldr	r3, [r7, #4]
 800ec70:	681b      	ldr	r3, [r3, #0]
 800ec72:	339c      	adds	r3, #156	@ 0x9c
 800ec74:	681b      	ldr	r3, [r3, #0]
 800ec76:	6878      	ldr	r0, [r7, #4]
 800ec78:	4798      	blx	r3
 800ec7a:	4603      	mov	r3, r0
 800ec7c:	461a      	mov	r2, r3
 800ec7e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800ec82:	429a      	cmp	r2, r3
 800ec84:	d008      	beq.n	800ec98 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ec86:	4b0c      	ldr	r3, [pc, #48]	@ (800ecb8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800ec88:	781b      	ldrb	r3, [r3, #0]
 800ec8a:	f083 0301 	eor.w	r3, r3, #1
 800ec8e:	b2db      	uxtb	r3, r3
 800ec90:	2b00      	cmp	r3, #0
 800ec92:	d001      	beq.n	800ec98 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ec94:	2301      	movs	r3, #1
 800ec96:	e000      	b.n	800ec9a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800ec98:	2300      	movs	r3, #0
 800ec9a:	2b00      	cmp	r3, #0
 800ec9c:	d005      	beq.n	800ecaa <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800ec9e:	687b      	ldr	r3, [r7, #4]
 800eca0:	78fa      	ldrb	r2, [r7, #3]
 800eca2:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800eca6:	2301      	movs	r3, #1
 800eca8:	e002      	b.n	800ecb0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800ecaa:	2300      	movs	r3, #0
 800ecac:	e000      	b.n	800ecb0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800ecae:	2300      	movs	r3, #0
    }
 800ecb0:	4618      	mov	r0, r3
 800ecb2:	3708      	adds	r7, #8
 800ecb4:	46bd      	mov	sp, r7
 800ecb6:	bd80      	pop	{r7, pc}
 800ecb8:	200023a6 	.word	0x200023a6

0800ecbc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
                   3, /* number of blocks */
                   2  /* bytes per pixel */
                   > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800ecbc:	b5b0      	push	{r4, r5, r7, lr}
 800ecbe:	b082      	sub	sp, #8
 800ecc0:	af00      	add	r7, sp, #0
 800ecc2:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800ecc4:	687b      	ldr	r3, [r7, #4]
 800ecc6:	4618      	mov	r0, r3
 800ecc8:	f000 fed9 	bl	800fa7e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800eccc:	687d      	ldr	r5, [r7, #4]
 800ecce:	687b      	ldr	r3, [r7, #4]
 800ecd0:	681b      	ldr	r3, [r3, #0]
 800ecd2:	3364      	adds	r3, #100	@ 0x64
 800ecd4:	681c      	ldr	r4, [r3, #0]
 800ecd6:	f004 f9e7 	bl	80130a8 <_ZN8touchgfx11Application11getInstanceEv>
 800ecda:	4603      	mov	r3, r0
 800ecdc:	4619      	mov	r1, r3
 800ecde:	4628      	mov	r0, r5
 800ece0:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800ece2:	687b      	ldr	r3, [r7, #4]
 800ece4:	681b      	ldr	r3, [r3, #0]
 800ece6:	3380      	adds	r3, #128	@ 0x80
 800ece8:	681b      	ldr	r3, [r3, #0]
 800ecea:	6878      	ldr	r0, [r7, #4]
 800ecec:	4798      	blx	r3
    enableInterrupts();
 800ecee:	687b      	ldr	r3, [r7, #4]
 800ecf0:	681b      	ldr	r3, [r3, #0]
 800ecf2:	3378      	adds	r3, #120	@ 0x78
 800ecf4:	681b      	ldr	r3, [r3, #0]
 800ecf6:	6878      	ldr	r0, [r7, #4]
 800ecf8:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800ecfa:	687b      	ldr	r3, [r7, #4]
 800ecfc:	4906      	ldr	r1, [pc, #24]	@ (800ed18 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 800ecfe:	4618      	mov	r0, r3
 800ed00:	f7ff ff82 	bl	800ec08 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 800ed04:	687b      	ldr	r3, [r7, #4]
 800ed06:	2102      	movs	r1, #2
 800ed08:	4618      	mov	r0, r3
 800ed0a:	f7ff ff97 	bl	800ec3c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 800ed0e:	bf00      	nop
 800ed10:	3708      	adds	r7, #8
 800ed12:	46bd      	mov	sp, r7
 800ed14:	bdb0      	pop	{r4, r5, r7, pc}
 800ed16:	bf00      	nop
 800ed18:	20000cf4 	.word	0x20000cf4

0800ed1c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800ed1c:	b480      	push	{r7}
 800ed1e:	b083      	sub	sp, #12
 800ed20:	af00      	add	r7, sp, #0
 800ed22:	6078      	str	r0, [r7, #4]
}
 800ed24:	bf00      	nop
 800ed26:	370c      	adds	r7, #12
 800ed28:	46bd      	mov	sp, r7
 800ed2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed2e:	4770      	bx	lr

0800ed30 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800ed30:	b480      	push	{r7}
 800ed32:	b083      	sub	sp, #12
 800ed34:	af00      	add	r7, sp, #0
 800ed36:	6078      	str	r0, [r7, #4]
}
 800ed38:	bf00      	nop
 800ed3a:	370c      	adds	r7, #12
 800ed3c:	46bd      	mov	sp, r7
 800ed3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed42:	4770      	bx	lr

0800ed44 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800ed44:	b480      	push	{r7}
 800ed46:	b083      	sub	sp, #12
 800ed48:	af00      	add	r7, sp, #0
 800ed4a:	6078      	str	r0, [r7, #4]
}
 800ed4c:	bf00      	nop
 800ed4e:	370c      	adds	r7, #12
 800ed50:	46bd      	mov	sp, r7
 800ed52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed56:	4770      	bx	lr

0800ed58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800ed58:	b480      	push	{r7}
 800ed5a:	b083      	sub	sp, #12
 800ed5c:	af00      	add	r7, sp, #0
 800ed5e:	6078      	str	r0, [r7, #4]
}
 800ed60:	bf00      	nop
 800ed62:	370c      	adds	r7, #12
 800ed64:	46bd      	mov	sp, r7
 800ed66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed6a:	4770      	bx	lr

0800ed6c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800ed6c:	b580      	push	{r7, lr}
 800ed6e:	b082      	sub	sp, #8
 800ed70:	af00      	add	r7, sp, #0
 800ed72:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800ed74:	687b      	ldr	r3, [r7, #4]
 800ed76:	4618      	mov	r0, r3
 800ed78:	f000 fe68 	bl	800fa4c <_ZN8touchgfx3HAL10beginFrameEv>
 800ed7c:	4603      	mov	r3, r0
}
 800ed7e:	4618      	mov	r0, r3
 800ed80:	3708      	adds	r7, #8
 800ed82:	46bd      	mov	sp, r7
 800ed84:	bd80      	pop	{r7, pc}

0800ed86 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800ed86:	b580      	push	{r7, lr}
 800ed88:	b082      	sub	sp, #8
 800ed8a:	af00      	add	r7, sp, #0
 800ed8c:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800ed8e:	bf00      	nop
 800ed90:	f7f3 fd1a 	bl	80027c8 <touchgfxDisplayDriverTransmitActive>
 800ed94:	4603      	mov	r3, r0
 800ed96:	2b00      	cmp	r3, #0
 800ed98:	bf14      	ite	ne
 800ed9a:	2301      	movne	r3, #1
 800ed9c:	2300      	moveq	r3, #0
 800ed9e:	b2db      	uxtb	r3, r3
 800eda0:	2b00      	cmp	r3, #0
 800eda2:	d1f5      	bne.n	800ed90 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800eda4:	687b      	ldr	r3, [r7, #4]
 800eda6:	4618      	mov	r0, r3
 800eda8:	f000 fe5c 	bl	800fa64 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800edac:	f7ff f8c8 	bl	800df40 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800edb0:	bf00      	nop
 800edb2:	3708      	adds	r7, #8
 800edb4:	46bd      	mov	sp, r7
 800edb6:	bd80      	pop	{r7, pc}

0800edb8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800edb8:	b480      	push	{r7}
 800edba:	b083      	sub	sp, #12
 800edbc:	af00      	add	r7, sp, #0
 800edbe:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800edc0:	2300      	movs	r3, #0
}
 800edc2:	4618      	mov	r0, r3
 800edc4:	370c      	adds	r7, #12
 800edc6:	46bd      	mov	sp, r7
 800edc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edcc:	4770      	bx	lr

0800edce <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800edce:	b480      	push	{r7}
 800edd0:	b083      	sub	sp, #12
 800edd2:	af00      	add	r7, sp, #0
 800edd4:	6078      	str	r0, [r7, #4]
 800edd6:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800edd8:	bf00      	nop
 800edda:	370c      	adds	r7, #12
 800eddc:	46bd      	mov	sp, r7
 800edde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ede2:	4770      	bx	lr

0800ede4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800ede4:	b580      	push	{r7, lr}
 800ede6:	b088      	sub	sp, #32
 800ede8:	af02      	add	r7, sp, #8
 800edea:	6078      	str	r0, [r7, #4]
 800edec:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800edee:	687b      	ldr	r3, [r7, #4]
 800edf0:	6839      	ldr	r1, [r7, #0]
 800edf2:	4618      	mov	r0, r3
 800edf4:	f000 fdf4 	bl	800f9e0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800edf8:	687b      	ldr	r3, [r7, #4]
 800edfa:	699a      	ldr	r2, [r3, #24]
 800edfc:	687b      	ldr	r3, [r7, #4]
 800edfe:	699b      	ldr	r3, [r3, #24]
 800ee00:	681b      	ldr	r3, [r3, #0]
 800ee02:	3304      	adds	r3, #4
 800ee04:	681b      	ldr	r3, [r3, #0]
 800ee06:	4610      	mov	r0, r2
 800ee08:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800ee0a:	f7f3 fcdd 	bl	80027c8 <touchgfxDisplayDriverTransmitActive>
 800ee0e:	4603      	mov	r3, r0
 800ee10:	2b00      	cmp	r3, #0
 800ee12:	bf0c      	ite	eq
 800ee14:	2301      	moveq	r3, #1
 800ee16:	2300      	movne	r3, #0
 800ee18:	b2db      	uxtb	r3, r3
 800ee1a:	2b00      	cmp	r3, #0
 800ee1c:	d021      	beq.n	800ee62 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800ee1e:	f107 030c 	add.w	r3, r7, #12
 800ee22:	4618      	mov	r0, r3
 800ee24:	f7fa ff73 	bl	8009d0e <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800ee28:	687b      	ldr	r3, [r7, #4]
 800ee2a:	699a      	ldr	r2, [r3, #24]
 800ee2c:	687b      	ldr	r3, [r7, #4]
 800ee2e:	699b      	ldr	r3, [r3, #24]
 800ee30:	681b      	ldr	r3, [r3, #0]
 800ee32:	330c      	adds	r3, #12
 800ee34:	681b      	ldr	r3, [r3, #0]
 800ee36:	f107 010c 	add.w	r1, r7, #12
 800ee3a:	4610      	mov	r0, r2
 800ee3c:	4798      	blx	r3
 800ee3e:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800ee40:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800ee44:	b299      	uxth	r1, r3
 800ee46:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800ee4a:	b29a      	uxth	r2, r3
 800ee4c:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800ee50:	b298      	uxth	r0, r3
 800ee52:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800ee56:	b29b      	uxth	r3, r3
 800ee58:	9300      	str	r3, [sp, #0]
 800ee5a:	4603      	mov	r3, r0
 800ee5c:	6978      	ldr	r0, [r7, #20]
 800ee5e:	f7f3 fcc5 	bl	80027ec <touchgfxDisplayDriverTransmitBlock>
    }
}
 800ee62:	bf00      	nop
 800ee64:	3718      	adds	r7, #24
 800ee66:	46bd      	mov	sp, r7
 800ee68:	bd80      	pop	{r7, pc}

0800ee6a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800ee6a:	b580      	push	{r7, lr}
 800ee6c:	b084      	sub	sp, #16
 800ee6e:	af00      	add	r7, sp, #0
 800ee70:	60f8      	str	r0, [r7, #12]
 800ee72:	60b9      	str	r1, [r7, #8]
 800ee74:	607a      	str	r2, [r7, #4]
 800ee76:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800ee78:	68f8      	ldr	r0, [r7, #12]
 800ee7a:	683b      	ldr	r3, [r7, #0]
 800ee7c:	687a      	ldr	r2, [r7, #4]
 800ee7e:	68b9      	ldr	r1, [r7, #8]
 800ee80:	f000 ff1f 	bl	800fcc2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800ee84:	4603      	mov	r3, r0
}
 800ee86:	4618      	mov	r0, r3
 800ee88:	3710      	adds	r7, #16
 800ee8a:	46bd      	mov	sp, r7
 800ee8c:	bd80      	pop	{r7, pc}

0800ee8e <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 800ee8e:	b480      	push	{r7}
 800ee90:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
   */
}
 800ee92:	bf00      	nop
 800ee94:	46bd      	mov	sp, r7
 800ee96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee9a:	4770      	bx	lr

0800ee9c <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 800ee9c:	b480      	push	{r7}
 800ee9e:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
   */
}
 800eea0:	bf00      	nop
 800eea2:	46bd      	mov	sp, r7
 800eea4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eea8:	4770      	bx	lr

0800eeaa <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 800eeaa:	b580      	push	{r7, lr}
 800eeac:	b086      	sub	sp, #24
 800eeae:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 800eeb0:	f7fa f8f2 	bl	8009098 <_ZN8touchgfx3HAL11getInstanceEv>
 800eeb4:	4603      	mov	r3, r0
 800eeb6:	4618      	mov	r0, r3
 800eeb8:	f7ff feb4 	bl	800ec24 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 800eebc:	60f8      	str	r0, [r7, #12]

  // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 800eebe:	68fb      	ldr	r3, [r7, #12]
 800eec0:	681b      	ldr	r3, [r3, #0]
 800eec2:	3318      	adds	r3, #24
 800eec4:	681b      	ldr	r3, [r3, #0]
 800eec6:	68f8      	ldr	r0, [r7, #12]
 800eec8:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 800eeca:	68fb      	ldr	r3, [r7, #12]
 800eecc:	681b      	ldr	r3, [r3, #0]
 800eece:	3308      	adds	r3, #8
 800eed0:	681b      	ldr	r3, [r3, #0]
 800eed2:	68f8      	ldr	r0, [r7, #12]
 800eed4:	4798      	blx	r3
 800eed6:	4603      	mov	r3, r0
 800eed8:	2b00      	cmp	r3, #0
 800eeda:	d01d      	beq.n	800ef18 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 800eedc:	463b      	mov	r3, r7
 800eede:	4618      	mov	r0, r3
 800eee0:	f7fa ff15 	bl	8009d0e <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 800eee4:	68fb      	ldr	r3, [r7, #12]
 800eee6:	681b      	ldr	r3, [r3, #0]
 800eee8:	330c      	adds	r3, #12
 800eeea:	681b      	ldr	r3, [r3, #0]
 800eeec:	463a      	mov	r2, r7
 800eeee:	4611      	mov	r1, r2
 800eef0:	68f8      	ldr	r0, [r7, #12]
 800eef2:	4798      	blx	r3
 800eef4:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800eef6:	f9b7 3000 	ldrsh.w	r3, [r7]
 800eefa:	b299      	uxth	r1, r3
 800eefc:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ef00:	b29a      	uxth	r2, r3
 800ef02:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800ef06:	b298      	uxth	r0, r3
 800ef08:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800ef0c:	b29b      	uxth	r3, r3
 800ef0e:	9300      	str	r3, [sp, #0]
 800ef10:	4603      	mov	r3, r0
 800ef12:	68b8      	ldr	r0, [r7, #8]
 800ef14:	f7f3 fc6a 	bl	80027ec <touchgfxDisplayDriverTransmitBlock>
    }
}
 800ef18:	bf00      	nop
 800ef1a:	3710      	adds	r7, #16
 800ef1c:	46bd      	mov	sp, r7
 800ef1e:	bd80      	pop	{r7, pc}

0800ef20 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 800ef20:	b580      	push	{r7, lr}
 800ef22:	af00      	add	r7, sp, #0
  // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 800ef24:	f7ff ffc1 	bl	800eeaa <_ZN8touchgfx16startNewTransferEv>
}
 800ef28:	bf00      	nop
 800ef2a:	bd80      	pop	{r7, pc}

0800ef2c <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 800ef2c:	b580      	push	{r7, lr}
 800ef2e:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 800ef30:	f7fa f8b2 	bl	8009098 <_ZN8touchgfx3HAL11getInstanceEv>
 800ef34:	4603      	mov	r3, r0
 800ef36:	4618      	mov	r0, r3
 800ef38:	f7ff fe54 	bl	800ebe4 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 800ef3c:	f7fe fff4 	bl	800df28 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 800ef40:	bf00      	nop
 800ef42:	bd80      	pop	{r7, pc}

0800ef44 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 800ef44:	b480      	push	{r7}
 800ef46:	b083      	sub	sp, #12
 800ef48:	af00      	add	r7, sp, #0
 800ef4a:	6078      	str	r0, [r7, #4]
 800ef4c:	4a04      	ldr	r2, [pc, #16]	@ (800ef60 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 800ef4e:	687b      	ldr	r3, [r7, #4]
 800ef50:	601a      	str	r2, [r3, #0]
 800ef52:	687b      	ldr	r3, [r7, #4]
 800ef54:	4618      	mov	r0, r3
 800ef56:	370c      	adds	r7, #12
 800ef58:	46bd      	mov	sp, r7
 800ef5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef5e:	4770      	bx	lr
 800ef60:	08029560 	.word	0x08029560

0800ef64 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 800ef64:	b5b0      	push	{r4, r5, r7, lr}
 800ef66:	b084      	sub	sp, #16
 800ef68:	af00      	add	r7, sp, #0
 800ef6a:	6078      	str	r0, [r7, #4]
    {
 800ef6c:	687b      	ldr	r3, [r7, #4]
 800ef6e:	4618      	mov	r0, r3
 800ef70:	f7ff ffe8 	bl	800ef44 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 800ef74:	4a1a      	ldr	r2, [pc, #104]	@ (800efe0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x7c>)
 800ef76:	687b      	ldr	r3, [r7, #4]
 800ef78:	601a      	str	r2, [r3, #0]
 800ef7a:	687b      	ldr	r3, [r7, #4]
 800ef7c:	f503 53b4 	add.w	r3, r3, #5760	@ 0x1680
 800ef80:	3308      	adds	r3, #8
 800ef82:	2402      	movs	r4, #2
 800ef84:	461d      	mov	r5, r3
 800ef86:	e004      	b.n	800ef92 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x2e>
 800ef88:	4628      	mov	r0, r5
 800ef8a:	f7fa fec0 	bl	8009d0e <_ZN8touchgfx4RectC1Ev>
 800ef8e:	3c01      	subs	r4, #1
 800ef90:	3508      	adds	r5, #8
 800ef92:	2c00      	cmp	r4, #0
 800ef94:	daf8      	bge.n	800ef88 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 800ef96:	687b      	ldr	r3, [r7, #4]
 800ef98:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ef9c:	461a      	mov	r2, r3
 800ef9e:	f04f 33ff 	mov.w	r3, #4294967295
 800efa2:	f8c2 36a0 	str.w	r3, [r2, #1696]	@ 0x6a0
        drawingBlock = -1;
 800efa6:	687b      	ldr	r3, [r7, #4]
 800efa8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800efac:	461a      	mov	r2, r3
 800efae:	f04f 33ff 	mov.w	r3, #4294967295
 800efb2:	f8c2 36a4 	str.w	r3, [r2, #1700]	@ 0x6a4
        for (uint32_t i = 0; i < blocks; i++)
 800efb6:	2300      	movs	r3, #0
 800efb8:	60fb      	str	r3, [r7, #12]
 800efba:	e008      	b.n	800efce <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 800efbc:	687a      	ldr	r2, [r7, #4]
 800efbe:	68fb      	ldr	r3, [r7, #12]
 800efc0:	4413      	add	r3, r2
 800efc2:	3304      	adds	r3, #4
 800efc4:	2200      	movs	r2, #0
 800efc6:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 800efc8:	68fb      	ldr	r3, [r7, #12]
 800efca:	3301      	adds	r3, #1
 800efcc:	60fb      	str	r3, [r7, #12]
 800efce:	68fb      	ldr	r3, [r7, #12]
 800efd0:	2b02      	cmp	r3, #2
 800efd2:	d9f3      	bls.n	800efbc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x58>
        }
    }
 800efd4:	687b      	ldr	r3, [r7, #4]
 800efd6:	4618      	mov	r0, r3
 800efd8:	3710      	adds	r7, #16
 800efda:	46bd      	mov	sp, r7
 800efdc:	bdb0      	pop	{r4, r5, r7, pc}
 800efde:	bf00      	nop
 800efe0:	0802945c 	.word	0x0802945c

0800efe4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 800efe4:	b580      	push	{r7, lr}
 800efe6:	b082      	sub	sp, #8
 800efe8:	af00      	add	r7, sp, #0
 800efea:	6078      	str	r0, [r7, #4]
 800efec:	4a05      	ldr	r2, [pc, #20]	@ (800f004 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev+0x20>)
 800efee:	687b      	ldr	r3, [r7, #4]
 800eff0:	601a      	str	r2, [r3, #0]
 800eff2:	687b      	ldr	r3, [r7, #4]
 800eff4:	4618      	mov	r0, r3
 800eff6:	f7ff fdd5 	bl	800eba4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800effa:	687b      	ldr	r3, [r7, #4]
 800effc:	4618      	mov	r0, r3
 800effe:	3708      	adds	r7, #8
 800f000:	46bd      	mov	sp, r7
 800f002:	bd80      	pop	{r7, pc}
 800f004:	0802945c 	.word	0x0802945c

0800f008 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED0Ev>:
 800f008:	b580      	push	{r7, lr}
 800f00a:	b082      	sub	sp, #8
 800f00c:	af00      	add	r7, sp, #0
 800f00e:	6078      	str	r0, [r7, #4]
 800f010:	6878      	ldr	r0, [r7, #4]
 800f012:	f7ff ffe7 	bl	800efe4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
 800f016:	f241 61a8 	movw	r1, #5800	@ 0x16a8
 800f01a:	6878      	ldr	r0, [r7, #4]
 800f01c:	f014 fefb 	bl	8023e16 <_ZdlPvj>
 800f020:	687b      	ldr	r3, [r7, #4]
 800f022:	4618      	mov	r0, r3
 800f024:	3708      	adds	r7, #8
 800f026:	46bd      	mov	sp, r7
 800f028:	bd80      	pop	{r7, pc}
	...

0800f02c <_Z41__static_initialization_and_destruction_0ii>:
 800f02c:	b580      	push	{r7, lr}
 800f02e:	b082      	sub	sp, #8
 800f030:	af00      	add	r7, sp, #0
 800f032:	6078      	str	r0, [r7, #4]
 800f034:	6039      	str	r1, [r7, #0]
 800f036:	687b      	ldr	r3, [r7, #4]
 800f038:	2b01      	cmp	r3, #1
 800f03a:	d107      	bne.n	800f04c <_Z41__static_initialization_and_destruction_0ii+0x20>
 800f03c:	683b      	ldr	r3, [r7, #0]
 800f03e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800f042:	4293      	cmp	r3, r2
 800f044:	d102      	bne.n	800f04c <_Z41__static_initialization_and_destruction_0ii+0x20>
                   > blockAllocator;
 800f046:	4809      	ldr	r0, [pc, #36]	@ (800f06c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800f048:	f7ff ff8c 	bl	800ef64 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>
 800f04c:	687b      	ldr	r3, [r7, #4]
 800f04e:	2b00      	cmp	r3, #0
 800f050:	d107      	bne.n	800f062 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800f052:	683b      	ldr	r3, [r7, #0]
 800f054:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800f058:	4293      	cmp	r3, r2
 800f05a:	d102      	bne.n	800f062 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800f05c:	4803      	ldr	r0, [pc, #12]	@ (800f06c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800f05e:	f7ff ffc1 	bl	800efe4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
}
 800f062:	bf00      	nop
 800f064:	3708      	adds	r7, #8
 800f066:	46bd      	mov	sp, r7
 800f068:	bd80      	pop	{r7, pc}
 800f06a:	bf00      	nop
 800f06c:	20000cf4 	.word	0x20000cf4

0800f070 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 800f070:	b580      	push	{r7, lr}
 800f072:	b086      	sub	sp, #24
 800f074:	af00      	add	r7, sp, #0
 800f076:	60f8      	str	r0, [r7, #12]
 800f078:	4608      	mov	r0, r1
 800f07a:	4611      	mov	r1, r2
 800f07c:	461a      	mov	r2, r3
 800f07e:	4603      	mov	r3, r0
 800f080:	817b      	strh	r3, [r7, #10]
 800f082:	460b      	mov	r3, r1
 800f084:	813b      	strh	r3, [r7, #8]
 800f086:	4613      	mov	r3, r2
 800f088:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 800f08a:	68fb      	ldr	r3, [r7, #12]
 800f08c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f090:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	@ 0x6a4
 800f094:	3301      	adds	r3, #1
 800f096:	68fa      	ldr	r2, [r7, #12]
 800f098:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 800f09c:	f8c2 36a4 	str.w	r3, [r2, #1700]	@ 0x6a4
        if (drawingBlock == blocks)
 800f0a0:	68fb      	ldr	r3, [r7, #12]
 800f0a2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f0a6:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	@ 0x6a4
 800f0aa:	2b03      	cmp	r3, #3
 800f0ac:	d109      	bne.n	800f0c2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 800f0ae:	68fb      	ldr	r3, [r7, #12]
 800f0b0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f0b4:	461a      	mov	r2, r3
 800f0b6:	2300      	movs	r3, #0
 800f0b8:	f8c2 36a4 	str.w	r3, [r2, #1700]	@ 0x6a4
        }
        while (state[drawingBlock] != EMPTY)
 800f0bc:	e001      	b.n	800f0c2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 800f0be:	f7ff fee6 	bl	800ee8e <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 800f0c2:	68fb      	ldr	r3, [r7, #12]
 800f0c4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f0c8:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	@ 0x6a4
 800f0cc:	68fa      	ldr	r2, [r7, #12]
 800f0ce:	4413      	add	r3, r2
 800f0d0:	791b      	ldrb	r3, [r3, #4]
 800f0d2:	b2db      	uxtb	r3, r3
 800f0d4:	2b00      	cmp	r3, #0
 800f0d6:	bf14      	ite	ne
 800f0d8:	2301      	movne	r3, #1
 800f0da:	2300      	moveq	r3, #0
 800f0dc:	b2db      	uxtb	r3, r3
 800f0de:	2b00      	cmp	r3, #0
 800f0e0:	d1ed      	bne.n	800f0be <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 800f0e2:	68fb      	ldr	r3, [r7, #12]
 800f0e4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f0e8:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	@ 0x6a4
 800f0ec:	68fa      	ldr	r2, [r7, #12]
 800f0ee:	4413      	add	r3, r2
 800f0f0:	791b      	ldrb	r3, [r3, #4]
 800f0f2:	b2db      	uxtb	r3, r3
 800f0f4:	2b00      	cmp	r3, #0
 800f0f6:	d005      	beq.n	800f104 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 800f0f8:	4b38      	ldr	r3, [pc, #224]	@ (800f1dc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 800f0fa:	4a39      	ldr	r2, [pc, #228]	@ (800f1e0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 800f0fc:	21aa      	movs	r1, #170	@ 0xaa
 800f0fe:	4839      	ldr	r0, [pc, #228]	@ (800f1e4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 800f100:	f015 f8b8 	bl	8024274 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 800f104:	68fb      	ldr	r3, [r7, #12]
 800f106:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f10a:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	@ 0x6a4
 800f10e:	68fa      	ldr	r2, [r7, #12]
 800f110:	4413      	add	r3, r2
 800f112:	2201      	movs	r2, #1
 800f114:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 800f116:	88fb      	ldrh	r3, [r7, #6]
 800f118:	005b      	lsls	r3, r3, #1
 800f11a:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 800f11c:	697b      	ldr	r3, [r7, #20]
 800f11e:	f44f 62f0 	mov.w	r2, #1920	@ 0x780
 800f122:	fbb2 f3f3 	udiv	r3, r2, r3
 800f126:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 800f128:	68fb      	ldr	r3, [r7, #12]
 800f12a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f12e:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	@ 0x6a4
 800f132:	4613      	mov	r3, r2
 800f134:	011b      	lsls	r3, r3, #4
 800f136:	1a9b      	subs	r3, r3, r2
 800f138:	01db      	lsls	r3, r3, #7
 800f13a:	3308      	adds	r3, #8
 800f13c:	68fa      	ldr	r2, [r7, #12]
 800f13e:	441a      	add	r2, r3
 800f140:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f142:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 800f144:	68fb      	ldr	r3, [r7, #12]
 800f146:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f14a:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	@ 0x6a4
 800f14e:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800f152:	68fb      	ldr	r3, [r7, #12]
 800f154:	f202 22d1 	addw	r2, r2, #721	@ 0x2d1
 800f158:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 800f15c:	68fb      	ldr	r3, [r7, #12]
 800f15e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f162:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	@ 0x6a4
 800f166:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 800f16a:	68fa      	ldr	r2, [r7, #12]
 800f16c:	f203 23d1 	addw	r3, r3, #721	@ 0x2d1
 800f170:	00db      	lsls	r3, r3, #3
 800f172:	4413      	add	r3, r2
 800f174:	460a      	mov	r2, r1
 800f176:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 800f178:	68fb      	ldr	r3, [r7, #12]
 800f17a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f17e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	@ 0x6a4
 800f182:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 800f186:	68fa      	ldr	r2, [r7, #12]
 800f188:	f203 23d1 	addw	r3, r3, #721	@ 0x2d1
 800f18c:	00db      	lsls	r3, r3, #3
 800f18e:	4413      	add	r3, r2
 800f190:	460a      	mov	r2, r1
 800f192:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 800f194:	8c3a      	ldrh	r2, [r7, #32]
 800f196:	693b      	ldr	r3, [r7, #16]
 800f198:	429a      	cmp	r2, r3
 800f19a:	bfa8      	it	ge
 800f19c:	461a      	movge	r2, r3
 800f19e:	68fb      	ldr	r3, [r7, #12]
 800f1a0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f1a4:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	@ 0x6a4
 800f1a8:	b211      	sxth	r1, r2
 800f1aa:	68fa      	ldr	r2, [r7, #12]
 800f1ac:	f203 23d1 	addw	r3, r3, #721	@ 0x2d1
 800f1b0:	00db      	lsls	r3, r3, #3
 800f1b2:	4413      	add	r3, r2
 800f1b4:	460a      	mov	r2, r1
 800f1b6:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 800f1b8:	68fb      	ldr	r3, [r7, #12]
 800f1ba:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f1be:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	@ 0x6a4
 800f1c2:	68fa      	ldr	r2, [r7, #12]
 800f1c4:	f203 23d1 	addw	r3, r3, #721	@ 0x2d1
 800f1c8:	00db      	lsls	r3, r3, #3
 800f1ca:	4413      	add	r3, r2
 800f1cc:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800f1d0:	b29b      	uxth	r3, r3
    }
 800f1d2:	4618      	mov	r0, r3
 800f1d4:	3718      	adds	r7, #24
 800f1d6:	46bd      	mov	sp, r7
 800f1d8:	bd80      	pop	{r7, pc}
 800f1da:	bf00      	nop
 800f1dc:	080282fc 	.word	0x080282fc
 800f1e0:	0802831c 	.word	0x0802831c
 800f1e4:	08028450 	.word	0x08028450

0800f1e8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 800f1e8:	b580      	push	{r7, lr}
 800f1ea:	b082      	sub	sp, #8
 800f1ec:	af00      	add	r7, sp, #0
 800f1ee:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 800f1f0:	687b      	ldr	r3, [r7, #4]
 800f1f2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f1f6:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	@ 0x6a4
 800f1fa:	687a      	ldr	r2, [r7, #4]
 800f1fc:	4413      	add	r3, r2
 800f1fe:	791b      	ldrb	r3, [r3, #4]
 800f200:	b2db      	uxtb	r3, r3
 800f202:	2b01      	cmp	r3, #1
 800f204:	d005      	beq.n	800f212 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 800f206:	4b0a      	ldr	r3, [pc, #40]	@ (800f230 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 800f208:	4a0a      	ldr	r2, [pc, #40]	@ (800f234 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 800f20a:	21b9      	movs	r1, #185	@ 0xb9
 800f20c:	480a      	ldr	r0, [pc, #40]	@ (800f238 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 800f20e:	f015 f831 	bl	8024274 <__assert_func>
        state[drawingBlock] = DRAWN;
 800f212:	687b      	ldr	r3, [r7, #4]
 800f214:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f218:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	@ 0x6a4
 800f21c:	687a      	ldr	r2, [r7, #4]
 800f21e:	4413      	add	r3, r2
 800f220:	2202      	movs	r2, #2
 800f222:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 800f224:	f7ff fe3a 	bl	800ee9c <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 800f228:	bf00      	nop
 800f22a:	3708      	adds	r7, #8
 800f22c:	46bd      	mov	sp, r7
 800f22e:	bd80      	pop	{r7, pc}
 800f230:	080284a4 	.word	0x080284a4
 800f234:	080284c8 	.word	0x080284c8
 800f238:	08028450 	.word	0x08028450

0800f23c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 800f23c:	b480      	push	{r7}
 800f23e:	b085      	sub	sp, #20
 800f240:	af00      	add	r7, sp, #0
 800f242:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 800f244:	2300      	movs	r3, #0
 800f246:	60fb      	str	r3, [r7, #12]
 800f248:	e011      	b.n	800f26e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 800f24a:	687a      	ldr	r2, [r7, #4]
 800f24c:	68fb      	ldr	r3, [r7, #12]
 800f24e:	4413      	add	r3, r2
 800f250:	3304      	adds	r3, #4
 800f252:	781b      	ldrb	r3, [r3, #0]
 800f254:	b2db      	uxtb	r3, r3
 800f256:	2b02      	cmp	r3, #2
 800f258:	bf0c      	ite	eq
 800f25a:	2301      	moveq	r3, #1
 800f25c:	2300      	movne	r3, #0
 800f25e:	b2db      	uxtb	r3, r3
 800f260:	2b00      	cmp	r3, #0
 800f262:	d001      	beq.n	800f268 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 800f264:	2301      	movs	r3, #1
 800f266:	e006      	b.n	800f276 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 800f268:	68fb      	ldr	r3, [r7, #12]
 800f26a:	3301      	adds	r3, #1
 800f26c:	60fb      	str	r3, [r7, #12]
 800f26e:	68fb      	ldr	r3, [r7, #12]
 800f270:	2b02      	cmp	r3, #2
 800f272:	d9ea      	bls.n	800f24a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 800f274:	2300      	movs	r3, #0
    }
 800f276:	4618      	mov	r0, r3
 800f278:	3714      	adds	r7, #20
 800f27a:	46bd      	mov	sp, r7
 800f27c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f280:	4770      	bx	lr
	...

0800f284 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 800f284:	b580      	push	{r7, lr}
 800f286:	b082      	sub	sp, #8
 800f288:	af00      	add	r7, sp, #0
 800f28a:	6078      	str	r0, [r7, #4]
 800f28c:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 800f28e:	687b      	ldr	r3, [r7, #4]
 800f290:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f294:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	@ 0x6a0
 800f298:	3301      	adds	r3, #1
 800f29a:	687a      	ldr	r2, [r7, #4]
 800f29c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 800f2a0:	f8c2 36a0 	str.w	r3, [r2, #1696]	@ 0x6a0
        if (sendingBlock == blocks)
 800f2a4:	687b      	ldr	r3, [r7, #4]
 800f2a6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f2aa:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	@ 0x6a0
 800f2ae:	2b03      	cmp	r3, #3
 800f2b0:	d106      	bne.n	800f2c0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 800f2b2:	687b      	ldr	r3, [r7, #4]
 800f2b4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f2b8:	461a      	mov	r2, r3
 800f2ba:	2300      	movs	r3, #0
 800f2bc:	f8c2 36a0 	str.w	r3, [r2, #1696]	@ 0x6a0
        }
        assert(state[sendingBlock] == DRAWN);
 800f2c0:	687b      	ldr	r3, [r7, #4]
 800f2c2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f2c6:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	@ 0x6a0
 800f2ca:	687a      	ldr	r2, [r7, #4]
 800f2cc:	4413      	add	r3, r2
 800f2ce:	791b      	ldrb	r3, [r3, #4]
 800f2d0:	b2db      	uxtb	r3, r3
 800f2d2:	2b02      	cmp	r3, #2
 800f2d4:	d005      	beq.n	800f2e2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 800f2d6:	4b16      	ldr	r3, [pc, #88]	@ (800f330 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 800f2d8:	4a16      	ldr	r2, [pc, #88]	@ (800f334 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 800f2da:	21dd      	movs	r1, #221	@ 0xdd
 800f2dc:	4816      	ldr	r0, [pc, #88]	@ (800f338 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 800f2de:	f014 ffc9 	bl	8024274 <__assert_func>
        rect = blockRect[sendingBlock];
 800f2e2:	687b      	ldr	r3, [r7, #4]
 800f2e4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f2e8:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	@ 0x6a0
 800f2ec:	683a      	ldr	r2, [r7, #0]
 800f2ee:	6879      	ldr	r1, [r7, #4]
 800f2f0:	f203 23d1 	addw	r3, r3, #721	@ 0x2d1
 800f2f4:	00db      	lsls	r3, r3, #3
 800f2f6:	440b      	add	r3, r1
 800f2f8:	cb03      	ldmia	r3!, {r0, r1}
 800f2fa:	6010      	str	r0, [r2, #0]
 800f2fc:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 800f2fe:	687b      	ldr	r3, [r7, #4]
 800f300:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f304:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	@ 0x6a0
 800f308:	687a      	ldr	r2, [r7, #4]
 800f30a:	4413      	add	r3, r2
 800f30c:	2203      	movs	r2, #3
 800f30e:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 800f310:	687b      	ldr	r3, [r7, #4]
 800f312:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f316:	f8d3 26a0 	ldr.w	r2, [r3, #1696]	@ 0x6a0
 800f31a:	4613      	mov	r3, r2
 800f31c:	011b      	lsls	r3, r3, #4
 800f31e:	1a9b      	subs	r3, r3, r2
 800f320:	01db      	lsls	r3, r3, #7
 800f322:	3308      	adds	r3, #8
 800f324:	687a      	ldr	r2, [r7, #4]
 800f326:	4413      	add	r3, r2
    }
 800f328:	4618      	mov	r0, r3
 800f32a:	3708      	adds	r7, #8
 800f32c:	46bd      	mov	sp, r7
 800f32e:	bd80      	pop	{r7, pc}
 800f330:	0802859c 	.word	0x0802859c
 800f334:	080285bc 	.word	0x080285bc
 800f338:	08028450 	.word	0x08028450

0800f33c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 800f33c:	b580      	push	{r7, lr}
 800f33e:	b084      	sub	sp, #16
 800f340:	af00      	add	r7, sp, #0
 800f342:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 800f344:	687b      	ldr	r3, [r7, #4]
 800f346:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f34a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	@ 0x6a0
 800f34e:	3301      	adds	r3, #1
 800f350:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 800f352:	68fb      	ldr	r3, [r7, #12]
 800f354:	2b03      	cmp	r3, #3
 800f356:	d101      	bne.n	800f35c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 800f358:	2300      	movs	r3, #0
 800f35a:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 800f35c:	687a      	ldr	r2, [r7, #4]
 800f35e:	68fb      	ldr	r3, [r7, #12]
 800f360:	4413      	add	r3, r2
 800f362:	3304      	adds	r3, #4
 800f364:	781b      	ldrb	r3, [r3, #0]
 800f366:	b2db      	uxtb	r3, r3
 800f368:	2b02      	cmp	r3, #2
 800f36a:	d005      	beq.n	800f378 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 800f36c:	4b07      	ldr	r3, [pc, #28]	@ (800f38c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 800f36e:	4a08      	ldr	r2, [pc, #32]	@ (800f390 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 800f370:	21ea      	movs	r1, #234	@ 0xea
 800f372:	4808      	ldr	r0, [pc, #32]	@ (800f394 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 800f374:	f014 ff7e 	bl	8024274 <__assert_func>
        return blockRect[nextSendingBlock];
 800f378:	68fb      	ldr	r3, [r7, #12]
 800f37a:	f203 23d1 	addw	r3, r3, #721	@ 0x2d1
 800f37e:	00db      	lsls	r3, r3, #3
 800f380:	687a      	ldr	r2, [r7, #4]
 800f382:	4413      	add	r3, r2
    }
 800f384:	4618      	mov	r0, r3
 800f386:	3710      	adds	r7, #16
 800f388:	46bd      	mov	sp, r7
 800f38a:	bd80      	pop	{r7, pc}
 800f38c:	080286bc 	.word	0x080286bc
 800f390:	080286e0 	.word	0x080286e0
 800f394:	08028450 	.word	0x08028450

0800f398 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 800f398:	b480      	push	{r7}
 800f39a:	b085      	sub	sp, #20
 800f39c:	af00      	add	r7, sp, #0
 800f39e:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 800f3a0:	687b      	ldr	r3, [r7, #4]
 800f3a2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f3a6:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	@ 0x6a4
 800f3aa:	3301      	adds	r3, #1
 800f3ac:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 800f3ae:	68fb      	ldr	r3, [r7, #12]
 800f3b0:	2b03      	cmp	r3, #3
 800f3b2:	d101      	bne.n	800f3b8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 800f3b4:	2300      	movs	r3, #0
 800f3b6:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 800f3b8:	687a      	ldr	r2, [r7, #4]
 800f3ba:	68fb      	ldr	r3, [r7, #12]
 800f3bc:	4413      	add	r3, r2
 800f3be:	3304      	adds	r3, #4
 800f3c0:	781b      	ldrb	r3, [r3, #0]
 800f3c2:	b2db      	uxtb	r3, r3
 800f3c4:	2b00      	cmp	r3, #0
 800f3c6:	bf0c      	ite	eq
 800f3c8:	2301      	moveq	r3, #1
 800f3ca:	2300      	movne	r3, #0
 800f3cc:	b2db      	uxtb	r3, r3
    }
 800f3ce:	4618      	mov	r0, r3
 800f3d0:	3714      	adds	r7, #20
 800f3d2:	46bd      	mov	sp, r7
 800f3d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f3d8:	4770      	bx	lr
	...

0800f3dc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 800f3dc:	b580      	push	{r7, lr}
 800f3de:	b082      	sub	sp, #8
 800f3e0:	af00      	add	r7, sp, #0
 800f3e2:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 800f3e4:	687b      	ldr	r3, [r7, #4]
 800f3e6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f3ea:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	@ 0x6a0
 800f3ee:	687a      	ldr	r2, [r7, #4]
 800f3f0:	4413      	add	r3, r2
 800f3f2:	791b      	ldrb	r3, [r3, #4]
 800f3f4:	b2db      	uxtb	r3, r3
 800f3f6:	2b03      	cmp	r3, #3
 800f3f8:	d005      	beq.n	800f406 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 800f3fa:	4b09      	ldr	r3, [pc, #36]	@ (800f420 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 800f3fc:	4a09      	ldr	r2, [pc, #36]	@ (800f424 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 800f3fe:	21ff      	movs	r1, #255	@ 0xff
 800f400:	4809      	ldr	r0, [pc, #36]	@ (800f428 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 800f402:	f014 ff37 	bl	8024274 <__assert_func>
        state[sendingBlock] = EMPTY;
 800f406:	687b      	ldr	r3, [r7, #4]
 800f408:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f40c:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	@ 0x6a0
 800f410:	687a      	ldr	r2, [r7, #4]
 800f412:	4413      	add	r3, r2
 800f414:	2200      	movs	r2, #0
 800f416:	711a      	strb	r2, [r3, #4]
    }
 800f418:	bf00      	nop
 800f41a:	3708      	adds	r7, #8
 800f41c:	46bd      	mov	sp, r7
 800f41e:	bd80      	pop	{r7, pc}
 800f420:	080287c0 	.word	0x080287c0
 800f424:	080287e0 	.word	0x080287e0
 800f428:	08028450 	.word	0x08028450

0800f42c <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800f42c:	b580      	push	{r7, lr}
 800f42e:	af00      	add	r7, sp, #0
 800f430:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800f434:	2001      	movs	r0, #1
 800f436:	f7ff fdf9 	bl	800f02c <_Z41__static_initialization_and_destruction_0ii>
 800f43a:	bd80      	pop	{r7, pc}

0800f43c <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800f43c:	b580      	push	{r7, lr}
 800f43e:	af00      	add	r7, sp, #0
 800f440:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800f444:	2000      	movs	r0, #0
 800f446:	f7ff fdf1 	bl	800f02c <_Z41__static_initialization_and_destruction_0ii>
 800f44a:	bd80      	pop	{r7, pc}

0800f44c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f44c:	8880      	ldrh	r0, [r0, #4]
 800f44e:	4770      	bx	lr

0800f450 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f450:	b570      	push	{r4, r5, r6, lr}
 800f452:	6803      	ldr	r3, [r0, #0]
 800f454:	4605      	mov	r5, r0
 800f456:	460c      	mov	r4, r1
 800f458:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f45a:	2100      	movs	r1, #0
 800f45c:	4798      	blx	r3
 800f45e:	682b      	ldr	r3, [r5, #0]
 800f460:	4606      	mov	r6, r0
 800f462:	6a1b      	ldr	r3, [r3, #32]
 800f464:	4628      	mov	r0, r5
 800f466:	4798      	blx	r3
 800f468:	1ba4      	subs	r4, r4, r6
 800f46a:	b2a4      	uxth	r4, r4
 800f46c:	fbb4 f0f0 	udiv	r0, r4, r0
 800f470:	bd70      	pop	{r4, r5, r6, pc}

0800f472 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f472:	2300      	movs	r3, #0
 800f474:	8083      	strh	r3, [r0, #4]
 800f476:	4770      	bx	lr

0800f478 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f478:	b510      	push	{r4, lr}
 800f47a:	6803      	ldr	r3, [r0, #0]
 800f47c:	8881      	ldrh	r1, [r0, #4]
 800f47e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f480:	4604      	mov	r4, r0
 800f482:	4798      	blx	r3
 800f484:	88a3      	ldrh	r3, [r4, #4]
 800f486:	3301      	adds	r3, #1
 800f488:	80a3      	strh	r3, [r4, #4]
 800f48a:	bd10      	pop	{r4, pc}

0800f48c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f48c:	6803      	ldr	r3, [r0, #0]
 800f48e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f490:	4718      	bx	r3

0800f492 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f492:	4770      	bx	lr

0800f494 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f494:	4a02      	ldr	r2, [pc, #8]	@ (800f4a0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f496:	6002      	str	r2, [r0, #0]
 800f498:	2200      	movs	r2, #0
 800f49a:	8082      	strh	r2, [r0, #4]
 800f49c:	4770      	bx	lr
 800f49e:	bf00      	nop
 800f4a0:	0802958c 	.word	0x0802958c

0800f4a4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f4a4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800f4a6:	2000      	movs	r0, #0
 800f4a8:	b12b      	cbz	r3, 800f4b6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f4aa:	b920      	cbnz	r0, 800f4b6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f4ac:	1a5a      	subs	r2, r3, r1
 800f4ae:	4250      	negs	r0, r2
 800f4b0:	4150      	adcs	r0, r2
 800f4b2:	699b      	ldr	r3, [r3, #24]
 800f4b4:	e7f8      	b.n	800f4a8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f4b6:	4770      	bx	lr

0800f4b8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f4b8:	2300      	movs	r3, #0
 800f4ba:	6148      	str	r0, [r1, #20]
 800f4bc:	618b      	str	r3, [r1, #24]
 800f4be:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800f4c0:	b913      	cbnz	r3, 800f4c8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f4c2:	6281      	str	r1, [r0, #40]	@ 0x28
 800f4c4:	4770      	bx	lr
 800f4c6:	4613      	mov	r3, r2
 800f4c8:	699a      	ldr	r2, [r3, #24]
 800f4ca:	2a00      	cmp	r2, #0
 800f4cc:	d1fb      	bne.n	800f4c6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f4ce:	6199      	str	r1, [r3, #24]
 800f4d0:	4770      	bx	lr

0800f4d2 <_ZN8touchgfx9Container9removeAllEv>:
 800f4d2:	2200      	movs	r2, #0
 800f4d4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800f4d6:	b123      	cbz	r3, 800f4e2 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f4d8:	6999      	ldr	r1, [r3, #24]
 800f4da:	6281      	str	r1, [r0, #40]	@ 0x28
 800f4dc:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f4e0:	e7f8      	b.n	800f4d4 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f4e2:	4770      	bx	lr

0800f4e4 <_ZN8touchgfx9Container6unlinkEv>:
 800f4e4:	2300      	movs	r3, #0
 800f4e6:	6283      	str	r3, [r0, #40]	@ 0x28
 800f4e8:	4770      	bx	lr

0800f4ea <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f4ea:	2200      	movs	r2, #0
 800f4ec:	8002      	strh	r2, [r0, #0]
 800f4ee:	8042      	strh	r2, [r0, #2]
 800f4f0:	8082      	strh	r2, [r0, #4]
 800f4f2:	80c2      	strh	r2, [r0, #6]
 800f4f4:	4770      	bx	lr

0800f4f6 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f4f6:	b570      	push	{r4, r5, r6, lr}
 800f4f8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800f4fa:	460d      	mov	r5, r1
 800f4fc:	4616      	mov	r6, r2
 800f4fe:	b13c      	cbz	r4, 800f510 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f500:	6823      	ldr	r3, [r4, #0]
 800f502:	4620      	mov	r0, r4
 800f504:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f506:	4632      	mov	r2, r6
 800f508:	4629      	mov	r1, r5
 800f50a:	4798      	blx	r3
 800f50c:	69a4      	ldr	r4, [r4, #24]
 800f50e:	e7f6      	b.n	800f4fe <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f510:	bd70      	pop	{r4, r5, r6, pc}

0800f512 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f512:	b538      	push	{r3, r4, r5, lr}
 800f514:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800f516:	460d      	mov	r5, r1
 800f518:	b134      	cbz	r4, 800f528 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f51a:	682b      	ldr	r3, [r5, #0]
 800f51c:	4621      	mov	r1, r4
 800f51e:	689b      	ldr	r3, [r3, #8]
 800f520:	4628      	mov	r0, r5
 800f522:	4798      	blx	r3
 800f524:	69a4      	ldr	r4, [r4, #24]
 800f526:	e7f7      	b.n	800f518 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f528:	bd38      	pop	{r3, r4, r5, pc}

0800f52a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f52a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800f52c:	b19b      	cbz	r3, 800f556 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f52e:	428b      	cmp	r3, r1
 800f530:	d109      	bne.n	800f546 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f532:	699a      	ldr	r2, [r3, #24]
 800f534:	2100      	movs	r1, #0
 800f536:	6159      	str	r1, [r3, #20]
 800f538:	6282      	str	r2, [r0, #40]	@ 0x28
 800f53a:	b902      	cbnz	r2, 800f53e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f53c:	4770      	bx	lr
 800f53e:	6199      	str	r1, [r3, #24]
 800f540:	4770      	bx	lr
 800f542:	4613      	mov	r3, r2
 800f544:	b13a      	cbz	r2, 800f556 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f546:	699a      	ldr	r2, [r3, #24]
 800f548:	428a      	cmp	r2, r1
 800f54a:	d1fa      	bne.n	800f542 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f54c:	698a      	ldr	r2, [r1, #24]
 800f54e:	619a      	str	r2, [r3, #24]
 800f550:	2300      	movs	r3, #0
 800f552:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f556:	4770      	bx	lr

0800f558 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f558:	b410      	push	{r4}
 800f55a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800f55c:	4604      	mov	r4, r0
 800f55e:	b92b      	cbnz	r3, 800f56c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f560:	6803      	ldr	r3, [r0, #0]
 800f562:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f566:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800f568:	4611      	mov	r1, r2
 800f56a:	4718      	bx	r3
 800f56c:	b941      	cbnz	r1, 800f580 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f56e:	6193      	str	r3, [r2, #24]
 800f570:	6282      	str	r2, [r0, #40]	@ 0x28
 800f572:	6154      	str	r4, [r2, #20]
 800f574:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f578:	4770      	bx	lr
 800f57a:	4603      	mov	r3, r0
 800f57c:	2800      	cmp	r0, #0
 800f57e:	d0f9      	beq.n	800f574 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f580:	4299      	cmp	r1, r3
 800f582:	6998      	ldr	r0, [r3, #24]
 800f584:	d1f9      	bne.n	800f57a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f586:	6190      	str	r0, [r2, #24]
 800f588:	618a      	str	r2, [r1, #24]
 800f58a:	e7f2      	b.n	800f572 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800f58c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f58c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f590:	461f      	mov	r7, r3
 800f592:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800f596:	460d      	mov	r5, r1
 800f598:	4616      	mov	r6, r2
 800f59a:	b103      	cbz	r3, 800f59e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f59c:	6038      	str	r0, [r7, #0]
 800f59e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800f5a0:	b314      	cbz	r4, 800f5e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f5a2:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800f5a6:	b1eb      	cbz	r3, 800f5e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f5a8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f5ac:	428d      	cmp	r5, r1
 800f5ae:	db19      	blt.n	800f5e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f5b0:	8923      	ldrh	r3, [r4, #8]
 800f5b2:	b289      	uxth	r1, r1
 800f5b4:	440b      	add	r3, r1
 800f5b6:	b21b      	sxth	r3, r3
 800f5b8:	429d      	cmp	r5, r3
 800f5ba:	da13      	bge.n	800f5e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f5bc:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f5c0:	4296      	cmp	r6, r2
 800f5c2:	db0f      	blt.n	800f5e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f5c4:	8963      	ldrh	r3, [r4, #10]
 800f5c6:	b292      	uxth	r2, r2
 800f5c8:	4413      	add	r3, r2
 800f5ca:	b21b      	sxth	r3, r3
 800f5cc:	429e      	cmp	r6, r3
 800f5ce:	da09      	bge.n	800f5e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f5d0:	6823      	ldr	r3, [r4, #0]
 800f5d2:	1ab2      	subs	r2, r6, r2
 800f5d4:	1a69      	subs	r1, r5, r1
 800f5d6:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800f5da:	b212      	sxth	r2, r2
 800f5dc:	463b      	mov	r3, r7
 800f5de:	b209      	sxth	r1, r1
 800f5e0:	4620      	mov	r0, r4
 800f5e2:	47c0      	blx	r8
 800f5e4:	69a4      	ldr	r4, [r4, #24]
 800f5e6:	e7db      	b.n	800f5a0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f5e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f5ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f5ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5f0:	4c6e      	ldr	r4, [pc, #440]	@ (800f7ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f5f2:	b0a1      	sub	sp, #132	@ 0x84
 800f5f4:	6824      	ldr	r4, [r4, #0]
 800f5f6:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800f5f8:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800f5fc:	9303      	str	r3, [sp, #12]
 800f5fe:	2400      	movs	r4, #0
 800f600:	802c      	strh	r4, [r5, #0]
 800f602:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800f604:	802c      	strh	r4, [r5, #0]
 800f606:	601c      	str	r4, [r3, #0]
 800f608:	4606      	mov	r6, r0
 800f60a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f60e:	f7ff ffbd 	bl	800f58c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f612:	f1b9 0f03 	cmp.w	r9, #3
 800f616:	f340 80c2 	ble.w	800f79e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800f61a:	4631      	mov	r1, r6
 800f61c:	a80c      	add	r0, sp, #48	@ 0x30
 800f61e:	f004 fe55 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f622:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800f626:	9306      	str	r3, [sp, #24]
 800f628:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800f62c:	9307      	str	r3, [sp, #28]
 800f62e:	9b03      	ldr	r3, [sp, #12]
 800f630:	f8d3 a000 	ldr.w	sl, [r3]
 800f634:	f1ba 0f00 	cmp.w	sl, #0
 800f638:	f000 80b4 	beq.w	800f7a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800f63c:	4651      	mov	r1, sl
 800f63e:	a810      	add	r0, sp, #64	@ 0x40
 800f640:	f004 fe44 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f644:	9b01      	ldr	r3, [sp, #4]
 800f646:	9a06      	ldr	r2, [sp, #24]
 800f648:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800f64c:	189d      	adds	r5, r3, r2
 800f64e:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800f652:	9a07      	ldr	r2, [sp, #28]
 800f654:	2002      	movs	r0, #2
 800f656:	fb91 f1f0 	sdiv	r1, r1, r0
 800f65a:	4419      	add	r1, r3
 800f65c:	1a6d      	subs	r5, r5, r1
 800f65e:	9b02      	ldr	r3, [sp, #8]
 800f660:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800f664:	4413      	add	r3, r2
 800f666:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800f66a:	fb92 f2f0 	sdiv	r2, r2, r0
 800f66e:	440a      	add	r2, r1
 800f670:	1a9b      	subs	r3, r3, r2
 800f672:	435b      	muls	r3, r3
 800f674:	fb05 3505 	mla	r5, r5, r5, r3
 800f678:	4f4d      	ldr	r7, [pc, #308]	@ (800f7b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800f67a:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f67c:	ac10      	add	r4, sp, #64	@ 0x40
 800f67e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f680:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f682:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f684:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f686:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f688:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f68c:	f1b9 0f0c 	cmp.w	r9, #12
 800f690:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f694:	f04f 0303 	mov.w	r3, #3
 800f698:	bfc8      	it	gt
 800f69a:	4698      	movgt	r8, r3
 800f69c:	f8cd 9000 	str.w	r9, [sp]
 800f6a0:	f04f 0400 	mov.w	r4, #0
 800f6a4:	bfdc      	itt	le
 800f6a6:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f6aa:	fb92 f8f3 	sdivle	r8, r2, r3
 800f6ae:	1c63      	adds	r3, r4, #1
 800f6b0:	aa10      	add	r2, sp, #64	@ 0x40
 800f6b2:	f004 0401 	and.w	r4, r4, #1
 800f6b6:	9308      	str	r3, [sp, #32]
 800f6b8:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f6bc:	9b00      	ldr	r3, [sp, #0]
 800f6be:	fb93 f3f8 	sdiv	r3, r3, r8
 800f6c2:	b29b      	uxth	r3, r3
 800f6c4:	3404      	adds	r4, #4
 800f6c6:	f04f 0b00 	mov.w	fp, #0
 800f6ca:	9304      	str	r3, [sp, #16]
 800f6cc:	9a04      	ldr	r2, [sp, #16]
 800f6ce:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f6d2:	fb13 f302 	smulbb	r3, r3, r2
 800f6d6:	9a01      	ldr	r2, [sp, #4]
 800f6d8:	b29b      	uxth	r3, r3
 800f6da:	1899      	adds	r1, r3, r2
 800f6dc:	9305      	str	r3, [sp, #20]
 800f6de:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f6e2:	b209      	sxth	r1, r1
 800f6e4:	4299      	cmp	r1, r3
 800f6e6:	db4d      	blt.n	800f784 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f6e8:	8932      	ldrh	r2, [r6, #8]
 800f6ea:	4413      	add	r3, r2
 800f6ec:	b21b      	sxth	r3, r3
 800f6ee:	4299      	cmp	r1, r3
 800f6f0:	da48      	bge.n	800f784 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f6f2:	9b04      	ldr	r3, [sp, #16]
 800f6f4:	6827      	ldr	r7, [r4, #0]
 800f6f6:	fb17 f703 	smulbb	r7, r7, r3
 800f6fa:	9b02      	ldr	r3, [sp, #8]
 800f6fc:	b2bf      	uxth	r7, r7
 800f6fe:	18fa      	adds	r2, r7, r3
 800f700:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f704:	b212      	sxth	r2, r2
 800f706:	429a      	cmp	r2, r3
 800f708:	db3c      	blt.n	800f784 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f70a:	8970      	ldrh	r0, [r6, #10]
 800f70c:	4403      	add	r3, r0
 800f70e:	b21b      	sxth	r3, r3
 800f710:	429a      	cmp	r2, r3
 800f712:	da37      	bge.n	800f784 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f714:	2300      	movs	r3, #0
 800f716:	930b      	str	r3, [sp, #44]	@ 0x2c
 800f718:	4630      	mov	r0, r6
 800f71a:	ab0b      	add	r3, sp, #44	@ 0x2c
 800f71c:	f7ff ff36 	bl	800f58c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f720:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f722:	b37a      	cbz	r2, 800f784 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f724:	4552      	cmp	r2, sl
 800f726:	d02d      	beq.n	800f784 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f728:	4611      	mov	r1, r2
 800f72a:	a80e      	add	r0, sp, #56	@ 0x38
 800f72c:	9209      	str	r2, [sp, #36]	@ 0x24
 800f72e:	f004 fdcd 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f732:	9a06      	ldr	r2, [sp, #24]
 800f734:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800f738:	9b01      	ldr	r3, [sp, #4]
 800f73a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800f73e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800f742:	4413      	add	r3, r2
 800f744:	f04f 0e02 	mov.w	lr, #2
 800f748:	fb91 f1fe 	sdiv	r1, r1, lr
 800f74c:	4401      	add	r1, r0
 800f74e:	1a58      	subs	r0, r3, r1
 800f750:	9a07      	ldr	r2, [sp, #28]
 800f752:	9b02      	ldr	r3, [sp, #8]
 800f754:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800f758:	fb9c fcfe 	sdiv	ip, ip, lr
 800f75c:	4413      	add	r3, r2
 800f75e:	448c      	add	ip, r1
 800f760:	eba3 030c 	sub.w	r3, r3, ip
 800f764:	435b      	muls	r3, r3
 800f766:	fb00 3300 	mla	r3, r0, r0, r3
 800f76a:	42ab      	cmp	r3, r5
 800f76c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800f76e:	d208      	bcs.n	800f782 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800f770:	9803      	ldr	r0, [sp, #12]
 800f772:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800f774:	6001      	str	r1, [r0, #0]
 800f776:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800f778:	9805      	ldr	r0, [sp, #20]
 800f77a:	8008      	strh	r0, [r1, #0]
 800f77c:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800f77e:	461d      	mov	r5, r3
 800f780:	800f      	strh	r7, [r1, #0]
 800f782:	4692      	mov	sl, r2
 800f784:	f10b 0b01 	add.w	fp, fp, #1
 800f788:	f1bb 0f04 	cmp.w	fp, #4
 800f78c:	f104 0408 	add.w	r4, r4, #8
 800f790:	d19c      	bne.n	800f6cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800f792:	9b00      	ldr	r3, [sp, #0]
 800f794:	9c08      	ldr	r4, [sp, #32]
 800f796:	444b      	add	r3, r9
 800f798:	4544      	cmp	r4, r8
 800f79a:	9300      	str	r3, [sp, #0]
 800f79c:	d187      	bne.n	800f6ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800f79e:	b021      	add	sp, #132	@ 0x84
 800f7a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f7a4:	f04f 35ff 	mov.w	r5, #4294967295
 800f7a8:	e766      	b.n	800f678 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800f7aa:	bf00      	nop
 800f7ac:	200023a8 	.word	0x200023a8
 800f7b0:	080288b0 	.word	0x080288b0

0800f7b4 <_ZN8touchgfx4RectaNERKS0_>:
 800f7b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f7b8:	f9b1 7000 	ldrsh.w	r7, [r1]
 800f7bc:	888c      	ldrh	r4, [r1, #4]
 800f7be:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f7c2:	443c      	add	r4, r7
 800f7c4:	b2a4      	uxth	r4, r4
 800f7c6:	fa0f f884 	sxth.w	r8, r4
 800f7ca:	45c1      	cmp	r9, r8
 800f7cc:	da2f      	bge.n	800f82e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f7ce:	8882      	ldrh	r2, [r0, #4]
 800f7d0:	444a      	add	r2, r9
 800f7d2:	b292      	uxth	r2, r2
 800f7d4:	fa0f fe82 	sxth.w	lr, r2
 800f7d8:	4577      	cmp	r7, lr
 800f7da:	da28      	bge.n	800f82e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f7dc:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800f7e0:	88cb      	ldrh	r3, [r1, #6]
 800f7e2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f7e6:	442b      	add	r3, r5
 800f7e8:	b21b      	sxth	r3, r3
 800f7ea:	429e      	cmp	r6, r3
 800f7ec:	da1f      	bge.n	800f82e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f7ee:	88c3      	ldrh	r3, [r0, #6]
 800f7f0:	4433      	add	r3, r6
 800f7f2:	b29b      	uxth	r3, r3
 800f7f4:	fa0f fc83 	sxth.w	ip, r3
 800f7f8:	4565      	cmp	r5, ip
 800f7fa:	da18      	bge.n	800f82e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f7fc:	454f      	cmp	r7, r9
 800f7fe:	bfb8      	it	lt
 800f800:	464f      	movlt	r7, r9
 800f802:	42b5      	cmp	r5, r6
 800f804:	bfb8      	it	lt
 800f806:	4635      	movlt	r5, r6
 800f808:	45f0      	cmp	r8, lr
 800f80a:	bfd8      	it	le
 800f80c:	4622      	movle	r2, r4
 800f80e:	1bd2      	subs	r2, r2, r7
 800f810:	8082      	strh	r2, [r0, #4]
 800f812:	884a      	ldrh	r2, [r1, #2]
 800f814:	88c9      	ldrh	r1, [r1, #6]
 800f816:	8007      	strh	r7, [r0, #0]
 800f818:	440a      	add	r2, r1
 800f81a:	b292      	uxth	r2, r2
 800f81c:	b211      	sxth	r1, r2
 800f81e:	458c      	cmp	ip, r1
 800f820:	bfa8      	it	ge
 800f822:	4613      	movge	r3, r2
 800f824:	1b5b      	subs	r3, r3, r5
 800f826:	80c3      	strh	r3, [r0, #6]
 800f828:	8045      	strh	r5, [r0, #2]
 800f82a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f82e:	2300      	movs	r3, #0
 800f830:	8003      	strh	r3, [r0, #0]
 800f832:	8043      	strh	r3, [r0, #2]
 800f834:	8083      	strh	r3, [r0, #4]
 800f836:	80c3      	strh	r3, [r0, #6]
 800f838:	e7f7      	b.n	800f82a <_ZN8touchgfx4RectaNERKS0_+0x76>

0800f83a <_ZNK8touchgfx4Rect7isEmptyEv>:
 800f83a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f83e:	2b00      	cmp	r3, #0
 800f840:	dd06      	ble.n	800f850 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800f842:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800f846:	2800      	cmp	r0, #0
 800f848:	bfcc      	ite	gt
 800f84a:	2000      	movgt	r0, #0
 800f84c:	2001      	movle	r0, #1
 800f84e:	4770      	bx	lr
 800f850:	2001      	movs	r0, #1
 800f852:	4770      	bx	lr

0800f854 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800f854:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f858:	2300      	movs	r3, #0
 800f85a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800f85c:	8003      	strh	r3, [r0, #0]
 800f85e:	4604      	mov	r4, r0
 800f860:	8043      	strh	r3, [r0, #2]
 800f862:	8083      	strh	r3, [r0, #4]
 800f864:	80c3      	strh	r3, [r0, #6]
 800f866:	2d00      	cmp	r5, #0
 800f868:	d040      	beq.n	800f8ec <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800f86a:	1d28      	adds	r0, r5, #4
 800f86c:	f7ff ffe5 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f870:	b988      	cbnz	r0, 800f896 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f872:	4620      	mov	r0, r4
 800f874:	f7ff ffe1 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f878:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800f87c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f880:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800f884:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800f888:	b138      	cbz	r0, 800f89a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800f88a:	8022      	strh	r2, [r4, #0]
 800f88c:	8063      	strh	r3, [r4, #2]
 800f88e:	f8a4 e004 	strh.w	lr, [r4, #4]
 800f892:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f896:	69ad      	ldr	r5, [r5, #24]
 800f898:	e7e5      	b.n	800f866 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800f89a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f89e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f8a2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800f8a6:	4290      	cmp	r0, r2
 800f8a8:	4607      	mov	r7, r0
 800f8aa:	bfa8      	it	ge
 800f8ac:	4617      	movge	r7, r2
 800f8ae:	4472      	add	r2, lr
 800f8b0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800f8b4:	8027      	strh	r7, [r4, #0]
 800f8b6:	4299      	cmp	r1, r3
 800f8b8:	460e      	mov	r6, r1
 800f8ba:	4440      	add	r0, r8
 800f8bc:	bfa8      	it	ge
 800f8be:	461e      	movge	r6, r3
 800f8c0:	4471      	add	r1, lr
 800f8c2:	4463      	add	r3, ip
 800f8c4:	b200      	sxth	r0, r0
 800f8c6:	b212      	sxth	r2, r2
 800f8c8:	b209      	sxth	r1, r1
 800f8ca:	b21b      	sxth	r3, r3
 800f8cc:	4290      	cmp	r0, r2
 800f8ce:	bfac      	ite	ge
 800f8d0:	ebc7 0200 	rsbge	r2, r7, r0
 800f8d4:	ebc7 0202 	rsblt	r2, r7, r2
 800f8d8:	4299      	cmp	r1, r3
 800f8da:	bfac      	ite	ge
 800f8dc:	ebc6 0301 	rsbge	r3, r6, r1
 800f8e0:	ebc6 0303 	rsblt	r3, r6, r3
 800f8e4:	8066      	strh	r6, [r4, #2]
 800f8e6:	80a2      	strh	r2, [r4, #4]
 800f8e8:	80e3      	strh	r3, [r4, #6]
 800f8ea:	e7d4      	b.n	800f896 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f8ec:	4620      	mov	r0, r4
 800f8ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f8f2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800f8f2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f8f6:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800f8fa:	b383      	cbz	r3, 800f95e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f8fc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800f8fe:	b374      	cbz	r4, 800f95e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f900:	f9b1 5000 	ldrsh.w	r5, [r1]
 800f904:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800f908:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800f90c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800f910:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800f914:	b303      	cbz	r3, 800f958 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f916:	4668      	mov	r0, sp
 800f918:	1d21      	adds	r1, r4, #4
 800f91a:	f8ad 5000 	strh.w	r5, [sp]
 800f91e:	f8ad 6002 	strh.w	r6, [sp, #2]
 800f922:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f926:	f8ad 8006 	strh.w	r8, [sp, #6]
 800f92a:	f7ff ff43 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 800f92e:	4668      	mov	r0, sp
 800f930:	f7ff ff83 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f934:	b980      	cbnz	r0, 800f958 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f936:	f8bd 3000 	ldrh.w	r3, [sp]
 800f93a:	88a2      	ldrh	r2, [r4, #4]
 800f93c:	1a9b      	subs	r3, r3, r2
 800f93e:	f8ad 3000 	strh.w	r3, [sp]
 800f942:	88e2      	ldrh	r2, [r4, #6]
 800f944:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f948:	1a9b      	subs	r3, r3, r2
 800f94a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f94e:	6823      	ldr	r3, [r4, #0]
 800f950:	4669      	mov	r1, sp
 800f952:	689b      	ldr	r3, [r3, #8]
 800f954:	4620      	mov	r0, r4
 800f956:	4798      	blx	r3
 800f958:	69a4      	ldr	r4, [r4, #24]
 800f95a:	2c00      	cmp	r4, #0
 800f95c:	d1d8      	bne.n	800f910 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800f95e:	b002      	add	sp, #8
 800f960:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f964 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800f964:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f966:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800f96a:	460d      	mov	r5, r1
 800f96c:	4616      	mov	r6, r2
 800f96e:	b323      	cbz	r3, 800f9ba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f970:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800f972:	b314      	cbz	r4, 800f9ba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f974:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800f978:	b1eb      	cbz	r3, 800f9b6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f97a:	6828      	ldr	r0, [r5, #0]
 800f97c:	6869      	ldr	r1, [r5, #4]
 800f97e:	466b      	mov	r3, sp
 800f980:	c303      	stmia	r3!, {r0, r1}
 800f982:	4668      	mov	r0, sp
 800f984:	1d21      	adds	r1, r4, #4
 800f986:	f7ff ff15 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 800f98a:	4668      	mov	r0, sp
 800f98c:	f7ff ff55 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f990:	b988      	cbnz	r0, 800f9b6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f992:	f8bd 3000 	ldrh.w	r3, [sp]
 800f996:	88a2      	ldrh	r2, [r4, #4]
 800f998:	1a9b      	subs	r3, r3, r2
 800f99a:	f8ad 3000 	strh.w	r3, [sp]
 800f99e:	88e2      	ldrh	r2, [r4, #6]
 800f9a0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f9a4:	1a9b      	subs	r3, r3, r2
 800f9a6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f9aa:	6823      	ldr	r3, [r4, #0]
 800f9ac:	4632      	mov	r2, r6
 800f9ae:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f9b0:	4669      	mov	r1, sp
 800f9b2:	4620      	mov	r0, r4
 800f9b4:	4798      	blx	r3
 800f9b6:	69a4      	ldr	r4, [r4, #24]
 800f9b8:	e7db      	b.n	800f972 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800f9ba:	b002      	add	sp, #8
 800f9bc:	bd70      	pop	{r4, r5, r6, pc}

0800f9be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800f9be:	b513      	push	{r0, r1, r4, lr}
 800f9c0:	6803      	ldr	r3, [r0, #0]
 800f9c2:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800f9c6:	2300      	movs	r3, #0
 800f9c8:	e9cd 3300 	strd	r3, r3, [sp]
 800f9cc:	466b      	mov	r3, sp
 800f9ce:	47a0      	blx	r4
 800f9d0:	b002      	add	sp, #8
 800f9d2:	bd10      	pop	{r4, pc}

0800f9d4 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800f9d4:	2301      	movs	r3, #1
 800f9d6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800f9da:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800f9de:	4770      	bx	lr

0800f9e0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800f9e0:	2301      	movs	r3, #1
 800f9e2:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800f9e6:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800f9ea:	4770      	bx	lr

0800f9ec <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800f9ec:	6843      	ldr	r3, [r0, #4]
 800f9ee:	2201      	movs	r2, #1
 800f9f0:	725a      	strb	r2, [r3, #9]
 800f9f2:	6840      	ldr	r0, [r0, #4]
 800f9f4:	6803      	ldr	r3, [r0, #0]
 800f9f6:	691b      	ldr	r3, [r3, #16]
 800f9f8:	4718      	bx	r3

0800f9fa <_ZN8touchgfx3HAL8flushDMAEv>:
 800f9fa:	6840      	ldr	r0, [r0, #4]
 800f9fc:	6803      	ldr	r3, [r0, #0]
 800f9fe:	689b      	ldr	r3, [r3, #8]
 800fa00:	4718      	bx	r3

0800fa02 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800fa02:	b530      	push	{r4, r5, lr}
 800fa04:	b08b      	sub	sp, #44	@ 0x2c
 800fa06:	6804      	ldr	r4, [r0, #0]
 800fa08:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800fa0c:	9509      	str	r5, [sp, #36]	@ 0x24
 800fa0e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800fa12:	9508      	str	r5, [sp, #32]
 800fa14:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800fa18:	9507      	str	r5, [sp, #28]
 800fa1a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800fa1e:	9506      	str	r5, [sp, #24]
 800fa20:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800fa24:	9505      	str	r5, [sp, #20]
 800fa26:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800fa2a:	9504      	str	r5, [sp, #16]
 800fa2c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800fa30:	9503      	str	r5, [sp, #12]
 800fa32:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800fa36:	9502      	str	r5, [sp, #8]
 800fa38:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800fa3c:	e9cd 3500 	strd	r3, r5, [sp]
 800fa40:	4613      	mov	r3, r2
 800fa42:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800fa44:	2200      	movs	r2, #0
 800fa46:	47a0      	blx	r4
 800fa48:	b00b      	add	sp, #44	@ 0x2c
 800fa4a:	bd30      	pop	{r4, r5, pc}

0800fa4c <_ZN8touchgfx3HAL10beginFrameEv>:
 800fa4c:	4b04      	ldr	r3, [pc, #16]	@ (800fa60 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800fa4e:	781b      	ldrb	r3, [r3, #0]
 800fa50:	b123      	cbz	r3, 800fa5c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800fa52:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800fa56:	f080 0001 	eor.w	r0, r0, #1
 800fa5a:	4770      	bx	lr
 800fa5c:	2001      	movs	r0, #1
 800fa5e:	4770      	bx	lr
 800fa60:	200023a6 	.word	0x200023a6

0800fa64 <_ZN8touchgfx3HAL8endFrameEv>:
 800fa64:	b510      	push	{r4, lr}
 800fa66:	4604      	mov	r4, r0
 800fa68:	6840      	ldr	r0, [r0, #4]
 800fa6a:	6803      	ldr	r3, [r0, #0]
 800fa6c:	689b      	ldr	r3, [r3, #8]
 800fa6e:	4798      	blx	r3
 800fa70:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800fa74:	b113      	cbz	r3, 800fa7c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800fa76:	2301      	movs	r3, #1
 800fa78:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800fa7c:	bd10      	pop	{r4, pc}

0800fa7e <_ZN8touchgfx3HAL10initializeEv>:
 800fa7e:	b510      	push	{r4, lr}
 800fa80:	4604      	mov	r4, r0
 800fa82:	f7fe fa05 	bl	800de90 <_ZN8touchgfx10OSWrappers10initializeEv>
 800fa86:	f7fd ff4b 	bl	800d920 <_ZN8touchgfx4GPIO4initEv>
 800fa8a:	6860      	ldr	r0, [r4, #4]
 800fa8c:	6803      	ldr	r3, [r0, #0]
 800fa8e:	68db      	ldr	r3, [r3, #12]
 800fa90:	4798      	blx	r3
 800fa92:	68e0      	ldr	r0, [r4, #12]
 800fa94:	6803      	ldr	r3, [r0, #0]
 800fa96:	689b      	ldr	r3, [r3, #8]
 800fa98:	4798      	blx	r3
 800fa9a:	6823      	ldr	r3, [r4, #0]
 800fa9c:	4620      	mov	r0, r4
 800fa9e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800faa0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800faa4:	4718      	bx	r3

0800faa6 <_ZN8touchgfx3HAL9taskEntryEv>:
 800faa6:	b508      	push	{r3, lr}
 800faa8:	6803      	ldr	r3, [r0, #0]
 800faaa:	4604      	mov	r4, r0
 800faac:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800fab0:	4798      	blx	r3
 800fab2:	6823      	ldr	r3, [r4, #0]
 800fab4:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800fab6:	4620      	mov	r0, r4
 800fab8:	4798      	blx	r3
 800faba:	f7fe fa5d 	bl	800df78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800fabe:	6823      	ldr	r3, [r4, #0]
 800fac0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800fac2:	e7f8      	b.n	800fab6 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800fac4 <_ZN8touchgfx3HAL4tickEv>:
 800fac4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fac6:	6803      	ldr	r3, [r0, #0]
 800fac8:	4d5b      	ldr	r5, [pc, #364]	@ (800fc38 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800faca:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800face:	4604      	mov	r4, r0
 800fad0:	4798      	blx	r3
 800fad2:	2800      	cmp	r0, #0
 800fad4:	f000 8095 	beq.w	800fc02 <_ZN8touchgfx3HAL4tickEv+0x13e>
 800fad8:	2001      	movs	r0, #1
 800fada:	f7fd ff29 	bl	800d930 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800fade:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800fae2:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800fae6:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800faea:	2600      	movs	r6, #0
 800faec:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800faf0:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800faf4:	b133      	cbz	r3, 800fb04 <_ZN8touchgfx3HAL4tickEv+0x40>
 800faf6:	6823      	ldr	r3, [r4, #0]
 800faf8:	4620      	mov	r0, r4
 800fafa:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800fafe:	4798      	blx	r3
 800fb00:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800fb04:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800fb08:	6862      	ldr	r2, [r4, #4]
 800fb0a:	f083 0301 	eor.w	r3, r3, #1
 800fb0e:	7253      	strb	r3, [r2, #9]
 800fb10:	2601      	movs	r6, #1
 800fb12:	702e      	strb	r6, [r5, #0]
 800fb14:	f003 fac8 	bl	80130a8 <_ZN8touchgfx11Application11getInstanceEv>
 800fb18:	6803      	ldr	r3, [r0, #0]
 800fb1a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800fb1c:	4798      	blx	r3
 800fb1e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800fb22:	b90b      	cbnz	r3, 800fb28 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fb24:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800fb28:	f003 fabe 	bl	80130a8 <_ZN8touchgfx11Application11getInstanceEv>
 800fb2c:	6803      	ldr	r3, [r0, #0]
 800fb2e:	695b      	ldr	r3, [r3, #20]
 800fb30:	4798      	blx	r3
 800fb32:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800fb34:	6803      	ldr	r3, [r0, #0]
 800fb36:	691b      	ldr	r3, [r3, #16]
 800fb38:	4798      	blx	r3
 800fb3a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800fb3e:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800fb42:	3b01      	subs	r3, #1
 800fb44:	b2db      	uxtb	r3, r3
 800fb46:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800fb4a:	b10a      	cbz	r2, 800fb50 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800fb4c:	2b00      	cmp	r3, #0
 800fb4e:	d1eb      	bne.n	800fb28 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fb50:	4a3a      	ldr	r2, [pc, #232]	@ (800fc3c <_ZN8touchgfx3HAL4tickEv+0x178>)
 800fb52:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800fb56:	7813      	ldrb	r3, [r2, #0]
 800fb58:	3301      	adds	r3, #1
 800fb5a:	b25b      	sxtb	r3, r3
 800fb5c:	4299      	cmp	r1, r3
 800fb5e:	7013      	strb	r3, [r2, #0]
 800fb60:	dc10      	bgt.n	800fb84 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fb62:	68e0      	ldr	r0, [r4, #12]
 800fb64:	2300      	movs	r3, #0
 800fb66:	7013      	strb	r3, [r2, #0]
 800fb68:	6803      	ldr	r3, [r0, #0]
 800fb6a:	aa03      	add	r2, sp, #12
 800fb6c:	68db      	ldr	r3, [r3, #12]
 800fb6e:	a902      	add	r1, sp, #8
 800fb70:	4798      	blx	r3
 800fb72:	6823      	ldr	r3, [r4, #0]
 800fb74:	2800      	cmp	r0, #0
 800fb76:	d050      	beq.n	800fc1a <_ZN8touchgfx3HAL4tickEv+0x156>
 800fb78:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800fb7c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800fb80:	4620      	mov	r0, r4
 800fb82:	4798      	blx	r3
 800fb84:	6960      	ldr	r0, [r4, #20]
 800fb86:	2300      	movs	r3, #0
 800fb88:	f88d 3007 	strb.w	r3, [sp, #7]
 800fb8c:	b158      	cbz	r0, 800fba6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fb8e:	6803      	ldr	r3, [r0, #0]
 800fb90:	f10d 0107 	add.w	r1, sp, #7
 800fb94:	68db      	ldr	r3, [r3, #12]
 800fb96:	4798      	blx	r3
 800fb98:	b128      	cbz	r0, 800fba6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fb9a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800fb9c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800fba0:	6803      	ldr	r3, [r0, #0]
 800fba2:	68db      	ldr	r3, [r3, #12]
 800fba4:	4798      	blx	r3
 800fba6:	f104 001c 	add.w	r0, r4, #28
 800fbaa:	f014 f87f 	bl	8023cac <_ZN8touchgfx8Gestures4tickEv>
 800fbae:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800fbb2:	b30b      	cbz	r3, 800fbf8 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fbb4:	6920      	ldr	r0, [r4, #16]
 800fbb6:	6803      	ldr	r3, [r0, #0]
 800fbb8:	691b      	ldr	r3, [r3, #16]
 800fbba:	4798      	blx	r3
 800fbbc:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800fbbe:	4606      	mov	r6, r0
 800fbc0:	b903      	cbnz	r3, 800fbc4 <_ZN8touchgfx3HAL4tickEv+0x100>
 800fbc2:	6760      	str	r0, [r4, #116]	@ 0x74
 800fbc4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800fbc6:	4a1e      	ldr	r2, [pc, #120]	@ (800fc40 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800fbc8:	1af3      	subs	r3, r6, r3
 800fbca:	4293      	cmp	r3, r2
 800fbcc:	d914      	bls.n	800fbf8 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fbce:	6920      	ldr	r0, [r4, #16]
 800fbd0:	6803      	ldr	r3, [r0, #0]
 800fbd2:	699b      	ldr	r3, [r3, #24]
 800fbd4:	4798      	blx	r3
 800fbd6:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800fbd8:	2264      	movs	r2, #100	@ 0x64
 800fbda:	1af3      	subs	r3, r6, r3
 800fbdc:	fbb3 f3f2 	udiv	r3, r3, r2
 800fbe0:	fbb0 f0f3 	udiv	r0, r0, r3
 800fbe4:	2800      	cmp	r0, #0
 800fbe6:	dc1d      	bgt.n	800fc24 <_ZN8touchgfx3HAL4tickEv+0x160>
 800fbe8:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800fbec:	6920      	ldr	r0, [r4, #16]
 800fbee:	6803      	ldr	r3, [r0, #0]
 800fbf0:	2100      	movs	r1, #0
 800fbf2:	69db      	ldr	r3, [r3, #28]
 800fbf4:	4798      	blx	r3
 800fbf6:	6766      	str	r6, [r4, #116]	@ 0x74
 800fbf8:	f003 fa56 	bl	80130a8 <_ZN8touchgfx11Application11getInstanceEv>
 800fbfc:	6803      	ldr	r3, [r0, #0]
 800fbfe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fc00:	4798      	blx	r3
 800fc02:	6823      	ldr	r3, [r4, #0]
 800fc04:	4620      	mov	r0, r4
 800fc06:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800fc0a:	4798      	blx	r3
 800fc0c:	2001      	movs	r0, #1
 800fc0e:	f7fd feab 	bl	800d968 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800fc12:	2300      	movs	r3, #0
 800fc14:	702b      	strb	r3, [r5, #0]
 800fc16:	b004      	add	sp, #16
 800fc18:	bd70      	pop	{r4, r5, r6, pc}
 800fc1a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800fc1e:	4620      	mov	r0, r4
 800fc20:	4798      	blx	r3
 800fc22:	e7af      	b.n	800fb84 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fc24:	2863      	cmp	r0, #99	@ 0x63
 800fc26:	bfcb      	itete	gt
 800fc28:	2300      	movgt	r3, #0
 800fc2a:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800fc2e:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800fc32:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800fc36:	e7d9      	b.n	800fbec <_ZN8touchgfx3HAL4tickEv+0x128>
 800fc38:	200023ac 	.word	0x200023ac
 800fc3c:	200023ad 	.word	0x200023ad
 800fc40:	05f5e100 	.word	0x05f5e100

0800fc44 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800fc44:	b510      	push	{r4, lr}
 800fc46:	4604      	mov	r4, r0
 800fc48:	f7fe f94a 	bl	800dee0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800fc4c:	6863      	ldr	r3, [r4, #4]
 800fc4e:	2200      	movs	r2, #0
 800fc50:	729a      	strb	r2, [r3, #10]
 800fc52:	bd10      	pop	{r4, pc}

0800fc54 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800fc54:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800fc56:	301c      	adds	r0, #28
 800fc58:	f014 b826 	b.w	8023ca8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800fc5c <_ZN8touchgfx3HAL5touchEll>:
 800fc5c:	b530      	push	{r4, r5, lr}
 800fc5e:	b087      	sub	sp, #28
 800fc60:	4604      	mov	r4, r0
 800fc62:	a804      	add	r0, sp, #16
 800fc64:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800fc68:	f003 f810 	bl	8012c8c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800fc6c:	9b04      	ldr	r3, [sp, #16]
 800fc6e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800fc72:	a906      	add	r1, sp, #24
 800fc74:	9b05      	ldr	r3, [sp, #20]
 800fc76:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800fc7a:	a803      	add	r0, sp, #12
 800fc7c:	f003 f858 	bl	8012d30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800fc80:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800fc84:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800fc88:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800fc8c:	f104 001c 	add.w	r0, r4, #28
 800fc90:	b189      	cbz	r1, 800fcb6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800fc92:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800fc96:	9300      	str	r3, [sp, #0]
 800fc98:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800fc9c:	4613      	mov	r3, r2
 800fc9e:	462a      	mov	r2, r5
 800fca0:	f014 f812 	bl	8023cc8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800fca4:	b128      	cbz	r0, 800fcb2 <_ZN8touchgfx3HAL5touchEll+0x56>
 800fca6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fcaa:	6623      	str	r3, [r4, #96]	@ 0x60
 800fcac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800fcb0:	6663      	str	r3, [r4, #100]	@ 0x64
 800fcb2:	b007      	add	sp, #28
 800fcb4:	bd30      	pop	{r4, r5, pc}
 800fcb6:	f014 f847 	bl	8023d48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fcba:	2301      	movs	r3, #1
 800fcbc:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800fcc0:	e7f1      	b.n	800fca6 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800fcc2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800fcc2:	b510      	push	{r4, lr}
 800fcc4:	2b00      	cmp	r3, #0
 800fcc6:	d046      	beq.n	800fd56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fcc8:	ea81 0002 	eor.w	r0, r1, r2
 800fccc:	07c4      	lsls	r4, r0, #31
 800fcce:	d508      	bpl.n	800fce2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800fcd0:	440b      	add	r3, r1
 800fcd2:	3a01      	subs	r2, #1
 800fcd4:	428b      	cmp	r3, r1
 800fcd6:	d93e      	bls.n	800fd56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fcd8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fcdc:	f801 0b01 	strb.w	r0, [r1], #1
 800fce0:	e7f8      	b.n	800fcd4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800fce2:	07d0      	lsls	r0, r2, #31
 800fce4:	bf42      	ittt	mi
 800fce6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800fcea:	f801 0b01 	strbmi.w	r0, [r1], #1
 800fcee:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800fcf2:	2b01      	cmp	r3, #1
 800fcf4:	d911      	bls.n	800fd1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fcf6:	ea81 0402 	eor.w	r4, r1, r2
 800fcfa:	07a4      	lsls	r4, r4, #30
 800fcfc:	4610      	mov	r0, r2
 800fcfe:	d022      	beq.n	800fd46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800fd00:	f023 0401 	bic.w	r4, r3, #1
 800fd04:	440c      	add	r4, r1
 800fd06:	428c      	cmp	r4, r1
 800fd08:	4602      	mov	r2, r0
 800fd0a:	d904      	bls.n	800fd16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800fd0c:	8812      	ldrh	r2, [r2, #0]
 800fd0e:	f821 2b02 	strh.w	r2, [r1], #2
 800fd12:	3002      	adds	r0, #2
 800fd14:	e7f7      	b.n	800fd06 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800fd16:	f003 0301 	and.w	r3, r3, #1
 800fd1a:	f023 0003 	bic.w	r0, r3, #3
 800fd1e:	4408      	add	r0, r1
 800fd20:	4288      	cmp	r0, r1
 800fd22:	4614      	mov	r4, r2
 800fd24:	d904      	bls.n	800fd30 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800fd26:	6824      	ldr	r4, [r4, #0]
 800fd28:	f841 4b04 	str.w	r4, [r1], #4
 800fd2c:	3204      	adds	r2, #4
 800fd2e:	e7f7      	b.n	800fd20 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800fd30:	f003 0303 	and.w	r3, r3, #3
 800fd34:	440b      	add	r3, r1
 800fd36:	3a01      	subs	r2, #1
 800fd38:	428b      	cmp	r3, r1
 800fd3a:	d90c      	bls.n	800fd56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fd3c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fd40:	f801 0b01 	strb.w	r0, [r1], #1
 800fd44:	e7f8      	b.n	800fd38 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800fd46:	0790      	lsls	r0, r2, #30
 800fd48:	d0e7      	beq.n	800fd1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fd4a:	f832 0b02 	ldrh.w	r0, [r2], #2
 800fd4e:	f821 0b02 	strh.w	r0, [r1], #2
 800fd52:	3b02      	subs	r3, #2
 800fd54:	e7e1      	b.n	800fd1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fd56:	2001      	movs	r0, #1
 800fd58:	bd10      	pop	{r4, pc}

0800fd5a <_ZN8touchgfx3HAL7noTouchEv>:
 800fd5a:	b510      	push	{r4, lr}
 800fd5c:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800fd60:	4604      	mov	r4, r0
 800fd62:	b153      	cbz	r3, 800fd7a <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800fd64:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800fd68:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800fd6c:	2101      	movs	r1, #1
 800fd6e:	301c      	adds	r0, #28
 800fd70:	f013 ffea 	bl	8023d48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fd74:	2300      	movs	r3, #0
 800fd76:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800fd7a:	bd10      	pop	{r4, pc}

0800fd7c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800fd7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd80:	b085      	sub	sp, #20
 800fd82:	ad04      	add	r5, sp, #16
 800fd84:	4604      	mov	r4, r0
 800fd86:	2000      	movs	r0, #0
 800fd88:	f845 0d04 	str.w	r0, [r5, #-4]!
 800fd8c:	69a0      	ldr	r0, [r4, #24]
 800fd8e:	6806      	ldr	r6, [r0, #0]
 800fd90:	9501      	str	r5, [sp, #4]
 800fd92:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800fd96:	9500      	str	r5, [sp, #0]
 800fd98:	6835      	ldr	r5, [r6, #0]
 800fd9a:	4699      	mov	r9, r3
 800fd9c:	460f      	mov	r7, r1
 800fd9e:	4690      	mov	r8, r2
 800fda0:	47a8      	blx	r5
 800fda2:	4d10      	ldr	r5, [pc, #64]	@ (800fde4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800fda4:	4606      	mov	r6, r0
 800fda6:	f8a5 9000 	strh.w	r9, [r5]
 800fdaa:	f7f9 f981 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 800fdae:	6803      	ldr	r3, [r0, #0]
 800fdb0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fdb2:	4798      	blx	r3
 800fdb4:	b128      	cbz	r0, 800fdc2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800fdb6:	2801      	cmp	r0, #1
 800fdb8:	d00b      	beq.n	800fdd2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800fdba:	4630      	mov	r0, r6
 800fdbc:	b005      	add	sp, #20
 800fdbe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fdc2:	882b      	ldrh	r3, [r5, #0]
 800fdc4:	fb08 7203 	mla	r2, r8, r3, r7
 800fdc8:	9b03      	ldr	r3, [sp, #12]
 800fdca:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800fdce:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800fdd0:	e7f3      	b.n	800fdba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800fdd2:	882a      	ldrh	r2, [r5, #0]
 800fdd4:	9b03      	ldr	r3, [sp, #12]
 800fdd6:	fb08 7202 	mla	r2, r8, r2, r7
 800fdda:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800fdde:	1a9a      	subs	r2, r3, r2
 800fde0:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800fde2:	e7ea      	b.n	800fdba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800fde4:	200023a2 	.word	0x200023a2

0800fde8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800fde8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fdea:	b08b      	sub	sp, #44	@ 0x2c
 800fdec:	4617      	mov	r7, r2
 800fdee:	4604      	mov	r4, r0
 800fdf0:	460e      	mov	r6, r1
 800fdf2:	461d      	mov	r5, r3
 800fdf4:	f7f9 f95c 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 800fdf8:	6803      	ldr	r3, [r0, #0]
 800fdfa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fdfc:	4798      	blx	r3
 800fdfe:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800fe02:	9007      	str	r0, [sp, #28]
 800fe04:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800fe08:	4b0d      	ldr	r3, [pc, #52]	@ (800fe40 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800fe0a:	6822      	ldr	r2, [r4, #0]
 800fe0c:	881b      	ldrh	r3, [r3, #0]
 800fe0e:	9306      	str	r3, [sp, #24]
 800fe10:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800fe14:	9305      	str	r3, [sp, #20]
 800fe16:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800fe1a:	9304      	str	r3, [sp, #16]
 800fe1c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800fe20:	9303      	str	r3, [sp, #12]
 800fe22:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800fe26:	9302      	str	r3, [sp, #8]
 800fe28:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800fe2c:	e9cd 5300 	strd	r5, r3, [sp]
 800fe30:	4631      	mov	r1, r6
 800fe32:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800fe34:	463b      	mov	r3, r7
 800fe36:	2200      	movs	r2, #0
 800fe38:	4620      	mov	r0, r4
 800fe3a:	47a8      	blx	r5
 800fe3c:	b00b      	add	sp, #44	@ 0x2c
 800fe3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fe40:	200023a2 	.word	0x200023a2

0800fe44 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800fe44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fe48:	4698      	mov	r8, r3
 800fe4a:	6803      	ldr	r3, [r0, #0]
 800fe4c:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800fe4e:	4b15      	ldr	r3, [pc, #84]	@ (800fea4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800fe50:	b08b      	sub	sp, #44	@ 0x2c
 800fe52:	4617      	mov	r7, r2
 800fe54:	f8b3 9000 	ldrh.w	r9, [r3]
 800fe58:	460e      	mov	r6, r1
 800fe5a:	4604      	mov	r4, r0
 800fe5c:	f7f9 f928 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 800fe60:	6803      	ldr	r3, [r0, #0]
 800fe62:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fe64:	4798      	blx	r3
 800fe66:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800fe6a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800fe6e:	2302      	movs	r3, #2
 800fe70:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800fe74:	2301      	movs	r3, #1
 800fe76:	9305      	str	r3, [sp, #20]
 800fe78:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800fe7c:	9304      	str	r3, [sp, #16]
 800fe7e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800fe82:	9303      	str	r3, [sp, #12]
 800fe84:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800fe88:	9302      	str	r3, [sp, #8]
 800fe8a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800fe8e:	2200      	movs	r2, #0
 800fe90:	e9cd 8300 	strd	r8, r3, [sp]
 800fe94:	4631      	mov	r1, r6
 800fe96:	463b      	mov	r3, r7
 800fe98:	4620      	mov	r0, r4
 800fe9a:	47a8      	blx	r5
 800fe9c:	b00b      	add	sp, #44	@ 0x2c
 800fe9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fea2:	bf00      	nop
 800fea4:	200023a2 	.word	0x200023a2

0800fea8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800fea8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800feac:	4698      	mov	r8, r3
 800feae:	6803      	ldr	r3, [r0, #0]
 800feb0:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800feb2:	4b11      	ldr	r3, [pc, #68]	@ (800fef8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800feb4:	b087      	sub	sp, #28
 800feb6:	f8b3 9000 	ldrh.w	r9, [r3]
 800feba:	460e      	mov	r6, r1
 800febc:	4617      	mov	r7, r2
 800febe:	4604      	mov	r4, r0
 800fec0:	f7f9 f8f6 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 800fec4:	6803      	ldr	r3, [r0, #0]
 800fec6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fec8:	4798      	blx	r3
 800feca:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800fece:	f8cd 900c 	str.w	r9, [sp, #12]
 800fed2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800fed6:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800feda:	9302      	str	r3, [sp, #8]
 800fedc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800fee0:	9301      	str	r3, [sp, #4]
 800fee2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800fee6:	9300      	str	r3, [sp, #0]
 800fee8:	463a      	mov	r2, r7
 800feea:	4643      	mov	r3, r8
 800feec:	4631      	mov	r1, r6
 800feee:	4620      	mov	r0, r4
 800fef0:	47a8      	blx	r5
 800fef2:	b007      	add	sp, #28
 800fef4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fef8:	200023a2 	.word	0x200023a2

0800fefc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800fefc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff00:	4604      	mov	r4, r0
 800ff02:	b08f      	sub	sp, #60	@ 0x3c
 800ff04:	4610      	mov	r0, r2
 800ff06:	460d      	mov	r5, r1
 800ff08:	4691      	mov	r9, r2
 800ff0a:	461e      	mov	r6, r3
 800ff0c:	f006 fabe 	bl	801648c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ff10:	2800      	cmp	r0, #0
 800ff12:	f000 809d 	beq.w	8010050 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800ff16:	6823      	ldr	r3, [r4, #0]
 800ff18:	f8df b198 	ldr.w	fp, [pc, #408]	@ 80100b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ff1c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ff1e:	f8df a198 	ldr.w	sl, [pc, #408]	@ 80100b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800ff22:	4f61      	ldr	r7, [pc, #388]	@ (80100a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ff24:	4620      	mov	r0, r4
 800ff26:	4798      	blx	r3
 800ff28:	6823      	ldr	r3, [r4, #0]
 800ff2a:	4620      	mov	r0, r4
 800ff2c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ff2e:	4798      	blx	r3
 800ff30:	f8bb 3000 	ldrh.w	r3, [fp]
 800ff34:	9301      	str	r3, [sp, #4]
 800ff36:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800ff3a:	f8ba 3000 	ldrh.w	r3, [sl]
 800ff3e:	9302      	str	r3, [sp, #8]
 800ff40:	883b      	ldrh	r3, [r7, #0]
 800ff42:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800ff46:	9303      	str	r3, [sp, #12]
 800ff48:	4b58      	ldr	r3, [pc, #352]	@ (80100ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ff4a:	9305      	str	r3, [sp, #20]
 800ff4c:	881a      	ldrh	r2, [r3, #0]
 800ff4e:	9204      	str	r2, [sp, #16]
 800ff50:	4640      	mov	r0, r8
 800ff52:	f006 fb2f 	bl	80165b4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ff56:	8038      	strh	r0, [r7, #0]
 800ff58:	4640      	mov	r0, r8
 800ff5a:	f006 fb5f 	bl	801661c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ff5e:	9b05      	ldr	r3, [sp, #20]
 800ff60:	b280      	uxth	r0, r0
 800ff62:	8018      	strh	r0, [r3, #0]
 800ff64:	4b52      	ldr	r3, [pc, #328]	@ (80100b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800ff66:	781b      	ldrb	r3, [r3, #0]
 800ff68:	2b00      	cmp	r3, #0
 800ff6a:	d174      	bne.n	8010056 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800ff6c:	883b      	ldrh	r3, [r7, #0]
 800ff6e:	f8ab 3000 	strh.w	r3, [fp]
 800ff72:	f8aa 0000 	strh.w	r0, [sl]
 800ff76:	4648      	mov	r0, r9
 800ff78:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800ff7c:	f006 fa86 	bl	801648c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ff80:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800ff84:	2200      	movs	r2, #0
 800ff86:	4611      	mov	r1, r2
 800ff88:	4628      	mov	r0, r5
 800ff8a:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800ff8e:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800ff92:	f7f9 ffbc 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
 800ff96:	2301      	movs	r3, #1
 800ff98:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800ff9c:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800ffa0:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ffa4:	2b00      	cmp	r3, #0
 800ffa6:	dd5c      	ble.n	8010062 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ffa8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ffac:	2b00      	cmp	r3, #0
 800ffae:	dd58      	ble.n	8010062 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ffb0:	462a      	mov	r2, r5
 800ffb2:	ab0a      	add	r3, sp, #40	@ 0x28
 800ffb4:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ffb8:	6851      	ldr	r1, [r2, #4]
 800ffba:	c303      	stmia	r3!, {r0, r1}
 800ffbc:	4631      	mov	r1, r6
 800ffbe:	a80a      	add	r0, sp, #40	@ 0x28
 800ffc0:	f7ff fbf8 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 800ffc4:	4b38      	ldr	r3, [pc, #224]	@ (80100a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ffc6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ffca:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800ffce:	2100      	movs	r1, #0
 800ffd0:	aa0a      	add	r2, sp, #40	@ 0x28
 800ffd2:	4b36      	ldr	r3, [pc, #216]	@ (80100ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ffd4:	910c      	str	r1, [sp, #48]	@ 0x30
 800ffd6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ffda:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ffde:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ffe2:	ab08      	add	r3, sp, #32
 800ffe4:	e883 0003 	stmia.w	r3, {r0, r1}
 800ffe8:	4618      	mov	r0, r3
 800ffea:	a90c      	add	r1, sp, #48	@ 0x30
 800ffec:	f7ff fbe2 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 800fff0:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800fff2:	2b00      	cmp	r3, #0
 800fff4:	d13c      	bne.n	8010070 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800fff6:	2000      	movs	r0, #0
 800fff8:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800fffc:	2600      	movs	r6, #0
 800fffe:	682a      	ldr	r2, [r5, #0]
 8010000:	696b      	ldr	r3, [r5, #20]
 8010002:	616e      	str	r6, [r5, #20]
 8010004:	9305      	str	r3, [sp, #20]
 8010006:	6892      	ldr	r2, [r2, #8]
 8010008:	a908      	add	r1, sp, #32
 801000a:	4628      	mov	r0, r5
 801000c:	4790      	blx	r2
 801000e:	9b05      	ldr	r3, [sp, #20]
 8010010:	616b      	str	r3, [r5, #20]
 8010012:	4652      	mov	r2, sl
 8010014:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 8010018:	4649      	mov	r1, r9
 801001a:	4628      	mov	r0, r5
 801001c:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 8010020:	f7f9 ff75 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
 8010024:	4b23      	ldr	r3, [pc, #140]	@ (80100b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010026:	9a01      	ldr	r2, [sp, #4]
 8010028:	801a      	strh	r2, [r3, #0]
 801002a:	4b23      	ldr	r3, [pc, #140]	@ (80100b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 801002c:	9a02      	ldr	r2, [sp, #8]
 801002e:	801a      	strh	r2, [r3, #0]
 8010030:	4b1d      	ldr	r3, [pc, #116]	@ (80100a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010032:	9a03      	ldr	r2, [sp, #12]
 8010034:	801a      	strh	r2, [r3, #0]
 8010036:	4b1d      	ldr	r3, [pc, #116]	@ (80100ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010038:	9a04      	ldr	r2, [sp, #16]
 801003a:	801a      	strh	r2, [r3, #0]
 801003c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 8010040:	6823      	ldr	r3, [r4, #0]
 8010042:	4620      	mov	r0, r4
 8010044:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010046:	4798      	blx	r3
 8010048:	6823      	ldr	r3, [r4, #0]
 801004a:	4620      	mov	r0, r4
 801004c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801004e:	4798      	blx	r3
 8010050:	b00f      	add	sp, #60	@ 0x3c
 8010052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010056:	883b      	ldrh	r3, [r7, #0]
 8010058:	f8ab 0000 	strh.w	r0, [fp]
 801005c:	f8aa 3000 	strh.w	r3, [sl]
 8010060:	e789      	b.n	800ff76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8010062:	462a      	mov	r2, r5
 8010064:	ab0a      	add	r3, sp, #40	@ 0x28
 8010066:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801006a:	6851      	ldr	r1, [r2, #4]
 801006c:	c303      	stmia	r3!, {r0, r1}
 801006e:	e7a9      	b.n	800ffc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8010070:	a807      	add	r0, sp, #28
 8010072:	f006 fc0f 	bl	8016894 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010076:	4606      	mov	r6, r0
 8010078:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 801007a:	6803      	ldr	r3, [r0, #0]
 801007c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801007e:	4798      	blx	r3
 8010080:	4286      	cmp	r6, r0
 8010082:	d1b8      	bne.n	800fff6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010084:	f7f9 f814 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 8010088:	6803      	ldr	r3, [r0, #0]
 801008a:	4606      	mov	r6, r0
 801008c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801008e:	9305      	str	r3, [sp, #20]
 8010090:	a807      	add	r0, sp, #28
 8010092:	f006 fbff 	bl	8016894 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010096:	9b05      	ldr	r3, [sp, #20]
 8010098:	4601      	mov	r1, r0
 801009a:	4630      	mov	r0, r6
 801009c:	4798      	blx	r3
 801009e:	f080 0001 	eor.w	r0, r0, #1
 80100a2:	b2c0      	uxtb	r0, r0
 80100a4:	e7a8      	b.n	800fff8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80100a6:	bf00      	nop
 80100a8:	2000239c 	.word	0x2000239c
 80100ac:	2000239e 	.word	0x2000239e
 80100b0:	200023a0 	.word	0x200023a0
 80100b4:	200023a2 	.word	0x200023a2
 80100b8:	200023a4 	.word	0x200023a4

080100bc <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80100bc:	b510      	push	{r4, lr}
 80100be:	4b07      	ldr	r3, [pc, #28]	@ (80100dc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80100c0:	781b      	ldrb	r3, [r3, #0]
 80100c2:	4604      	mov	r4, r0
 80100c4:	b13b      	cbz	r3, 80100d6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80100c6:	6803      	ldr	r3, [r0, #0]
 80100c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80100ca:	4798      	blx	r3
 80100cc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80100ce:	4283      	cmp	r3, r0
 80100d0:	d101      	bne.n	80100d6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80100d2:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80100d4:	bd10      	pop	{r4, pc}
 80100d6:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 80100d8:	e7fc      	b.n	80100d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80100da:	bf00      	nop
 80100dc:	200023a6 	.word	0x200023a6

080100e0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80100e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80100e4:	b08a      	sub	sp, #40	@ 0x28
 80100e6:	461d      	mov	r5, r3
 80100e8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80100ec:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80100f0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80100f4:	f8ad 3018 	strh.w	r3, [sp, #24]
 80100f8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80100fc:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010100:	2400      	movs	r4, #0
 8010102:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010106:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 801010a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801010e:	4690      	mov	r8, r2
 8010110:	4607      	mov	r7, r0
 8010112:	9404      	str	r4, [sp, #16]
 8010114:	f88d 4020 	strb.w	r4, [sp, #32]
 8010118:	f7ff ffd0 	bl	80100bc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801011c:	fb06 8505 	mla	r5, r6, r5, r8
 8010120:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010124:	6878      	ldr	r0, [r7, #4]
 8010126:	9505      	str	r5, [sp, #20]
 8010128:	f8ad 601e 	strh.w	r6, [sp, #30]
 801012c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8010130:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 8010134:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8010138:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 801013c:	6803      	ldr	r3, [r0, #0]
 801013e:	a901      	add	r1, sp, #4
 8010140:	685b      	ldr	r3, [r3, #4]
 8010142:	4798      	blx	r3
 8010144:	b00a      	add	sp, #40	@ 0x28
 8010146:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801014a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801014a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801014e:	b08b      	sub	sp, #44	@ 0x2c
 8010150:	2400      	movs	r4, #0
 8010152:	461d      	mov	r5, r3
 8010154:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8010158:	4688      	mov	r8, r1
 801015a:	4691      	mov	r9, r2
 801015c:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 8010160:	9404      	str	r4, [sp, #16]
 8010162:	4607      	mov	r7, r0
 8010164:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010168:	f7ff ffa8 	bl	80100bc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801016c:	fb06 9505 	mla	r5, r6, r5, r9
 8010170:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010174:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010178:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801017c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8010180:	6878      	ldr	r0, [r7, #4]
 8010182:	9505      	str	r5, [sp, #20]
 8010184:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010188:	f8ad 401c 	strh.w	r4, [sp, #28]
 801018c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010190:	f8cd 8010 	str.w	r8, [sp, #16]
 8010194:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010198:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 801019c:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 80101a0:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 80101a4:	6803      	ldr	r3, [r0, #0]
 80101a6:	a901      	add	r1, sp, #4
 80101a8:	685b      	ldr	r3, [r3, #4]
 80101aa:	4798      	blx	r3
 80101ac:	b00b      	add	sp, #44	@ 0x2c
 80101ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080101b4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80101b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80101b8:	b08a      	sub	sp, #40	@ 0x28
 80101ba:	4698      	mov	r8, r3
 80101bc:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 80101c0:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 80101c4:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 80101c8:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 80101cc:	2300      	movs	r3, #0
 80101ce:	2d0b      	cmp	r5, #11
 80101d0:	4606      	mov	r6, r0
 80101d2:	9304      	str	r3, [sp, #16]
 80101d4:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 80101d8:	d138      	bne.n	801024c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 80101da:	2380      	movs	r3, #128	@ 0x80
 80101dc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80101e0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80101e4:	f8ad 3018 	strh.w	r3, [sp, #24]
 80101e8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80101ec:	f8ad 301a 	strh.w	r3, [sp, #26]
 80101f0:	f88d 0020 	strb.w	r0, [sp, #32]
 80101f4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 80101f8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80101fc:	4630      	mov	r0, r6
 80101fe:	9203      	str	r2, [sp, #12]
 8010200:	f7ff ff5c 	bl	80100bc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010204:	2c0b      	cmp	r4, #11
 8010206:	bf98      	it	ls
 8010208:	4b1b      	ldrls	r3, [pc, #108]	@ (8010278 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 801020a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 801020e:	bf98      	it	ls
 8010210:	5d19      	ldrbls	r1, [r3, r4]
 8010212:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010216:	bf88      	it	hi
 8010218:	2100      	movhi	r1, #0
 801021a:	fb02 8307 	mla	r3, r2, r7, r8
 801021e:	10c9      	asrs	r1, r1, #3
 8010220:	fb01 0003 	mla	r0, r1, r3, r0
 8010224:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8010228:	9005      	str	r0, [sp, #20]
 801022a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 801022e:	6870      	ldr	r0, [r6, #4]
 8010230:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 8010234:	2300      	movs	r3, #0
 8010236:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 801023a:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 801023e:	6803      	ldr	r3, [r0, #0]
 8010240:	a901      	add	r1, sp, #4
 8010242:	685b      	ldr	r3, [r3, #4]
 8010244:	4798      	blx	r3
 8010246:	b00a      	add	sp, #40	@ 0x28
 8010248:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801024c:	2d02      	cmp	r5, #2
 801024e:	d109      	bne.n	8010264 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8010250:	28ff      	cmp	r0, #255	@ 0xff
 8010252:	d105      	bne.n	8010260 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010254:	f1bc 0f00 	cmp.w	ip, #0
 8010258:	bf14      	ite	ne
 801025a:	2340      	movne	r3, #64	@ 0x40
 801025c:	2320      	moveq	r3, #32
 801025e:	e7bd      	b.n	80101dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010260:	2340      	movs	r3, #64	@ 0x40
 8010262:	e7bb      	b.n	80101dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010264:	28ff      	cmp	r0, #255	@ 0xff
 8010266:	d105      	bne.n	8010274 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010268:	f1bc 0f00 	cmp.w	ip, #0
 801026c:	bf14      	ite	ne
 801026e:	2304      	movne	r3, #4
 8010270:	2301      	moveq	r3, #1
 8010272:	e7b3      	b.n	80101dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010274:	2304      	movs	r3, #4
 8010276:	e7b1      	b.n	80101dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010278:	08029648 	.word	0x08029648

0801027c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 801027c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010280:	b08b      	sub	sp, #44	@ 0x2c
 8010282:	461d      	mov	r5, r3
 8010284:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 8010288:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 801028c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 8010290:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8010294:	bf14      	ite	ne
 8010296:	2308      	movne	r3, #8
 8010298:	2302      	moveq	r3, #2
 801029a:	2400      	movs	r4, #0
 801029c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80102a0:	4688      	mov	r8, r1
 80102a2:	4693      	mov	fp, r2
 80102a4:	9404      	str	r4, [sp, #16]
 80102a6:	4607      	mov	r7, r0
 80102a8:	f7ff ff08 	bl	80100bc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80102ac:	2e0b      	cmp	r6, #11
 80102ae:	bf98      	it	ls
 80102b0:	4b15      	ldrls	r3, [pc, #84]	@ (8010308 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80102b2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80102b6:	bf98      	it	ls
 80102b8:	5d9c      	ldrbls	r4, [r3, r6]
 80102ba:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 80102be:	f8ad 3018 	strh.w	r3, [sp, #24]
 80102c2:	fb05 b50a 	mla	r5, r5, sl, fp
 80102c6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80102ca:	f8ad 301a 	strh.w	r3, [sp, #26]
 80102ce:	10e4      	asrs	r4, r4, #3
 80102d0:	fb04 0405 	mla	r4, r4, r5, r0
 80102d4:	2300      	movs	r3, #0
 80102d6:	6878      	ldr	r0, [r7, #4]
 80102d8:	9405      	str	r4, [sp, #20]
 80102da:	f8ad 301c 	strh.w	r3, [sp, #28]
 80102de:	f8ad a01e 	strh.w	sl, [sp, #30]
 80102e2:	f8cd 8010 	str.w	r8, [sp, #16]
 80102e6:	f88d 9020 	strb.w	r9, [sp, #32]
 80102ea:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 80102ee:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 80102f2:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 80102f6:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 80102fa:	6803      	ldr	r3, [r0, #0]
 80102fc:	a901      	add	r1, sp, #4
 80102fe:	685b      	ldr	r3, [r3, #4]
 8010300:	4798      	blx	r3
 8010302:	b00b      	add	sp, #44	@ 0x2c
 8010304:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010308:	08029648 	.word	0x08029648

0801030c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 801030c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010310:	461e      	mov	r6, r3
 8010312:	4b0a      	ldr	r3, [pc, #40]	@ (801033c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010314:	460f      	mov	r7, r1
 8010316:	881d      	ldrh	r5, [r3, #0]
 8010318:	4690      	mov	r8, r2
 801031a:	f7f8 fec9 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 801031e:	6803      	ldr	r3, [r0, #0]
 8010320:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010322:	4798      	blx	r3
 8010324:	280b      	cmp	r0, #11
 8010326:	bf9a      	itte	ls
 8010328:	4b05      	ldrls	r3, [pc, #20]	@ (8010340 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801032a:	5c1c      	ldrbls	r4, [r3, r0]
 801032c:	2400      	movhi	r4, #0
 801032e:	fb08 7005 	mla	r0, r8, r5, r7
 8010332:	10e4      	asrs	r4, r4, #3
 8010334:	fb04 6000 	mla	r0, r4, r0, r6
 8010338:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801033c:	200023a2 	.word	0x200023a2
 8010340:	08029648 	.word	0x08029648

08010344 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010344:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010346:	b08b      	sub	sp, #44	@ 0x2c
 8010348:	461f      	mov	r7, r3
 801034a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801034e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010352:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8010356:	f8ad 3018 	strh.w	r3, [sp, #24]
 801035a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801035e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010362:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010366:	f8ad 301c 	strh.w	r3, [sp, #28]
 801036a:	2500      	movs	r5, #0
 801036c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8010370:	f88d 3020 	strb.w	r3, [sp, #32]
 8010374:	4604      	mov	r4, r0
 8010376:	4616      	mov	r6, r2
 8010378:	9504      	str	r5, [sp, #16]
 801037a:	f7ff fe9f 	bl	80100bc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801037e:	463a      	mov	r2, r7
 8010380:	4631      	mov	r1, r6
 8010382:	4603      	mov	r3, r0
 8010384:	4620      	mov	r0, r4
 8010386:	f7ff ffc1 	bl	801030c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801038a:	4b0e      	ldr	r3, [pc, #56]	@ (80103c4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 801038c:	9005      	str	r0, [sp, #20]
 801038e:	881b      	ldrh	r3, [r3, #0]
 8010390:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010394:	f7f8 fe8c 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 8010398:	6803      	ldr	r3, [r0, #0]
 801039a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801039c:	4798      	blx	r3
 801039e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80103a0:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 80103a4:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 80103a8:	9304      	str	r3, [sp, #16]
 80103aa:	6860      	ldr	r0, [r4, #4]
 80103ac:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 80103b0:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 80103b4:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 80103b8:	6803      	ldr	r3, [r0, #0]
 80103ba:	a901      	add	r1, sp, #4
 80103bc:	685b      	ldr	r3, [r3, #4]
 80103be:	4798      	blx	r3
 80103c0:	b00b      	add	sp, #44	@ 0x2c
 80103c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103c4:	200023a2 	.word	0x200023a2

080103c8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80103c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80103ca:	b08d      	sub	sp, #52	@ 0x34
 80103cc:	466b      	mov	r3, sp
 80103ce:	e883 0006 	stmia.w	r3, {r1, r2}
 80103d2:	2300      	movs	r3, #0
 80103d4:	9306      	str	r3, [sp, #24]
 80103d6:	6803      	ldr	r3, [r0, #0]
 80103d8:	f8bd 6000 	ldrh.w	r6, [sp]
 80103dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80103de:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80103e2:	2501      	movs	r5, #1
 80103e4:	9503      	str	r5, [sp, #12]
 80103e6:	4604      	mov	r4, r0
 80103e8:	4798      	blx	r3
 80103ea:	463a      	mov	r2, r7
 80103ec:	4631      	mov	r1, r6
 80103ee:	4603      	mov	r3, r0
 80103f0:	4620      	mov	r0, r4
 80103f2:	f7ff ff8b 	bl	801030c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80103f6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80103f8:	9307      	str	r3, [sp, #28]
 80103fa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80103fe:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010402:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010406:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801040a:	4b0f      	ldr	r3, [pc, #60]	@ (8010448 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 801040c:	9004      	str	r0, [sp, #16]
 801040e:	881b      	ldrh	r3, [r3, #0]
 8010410:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8010414:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8010418:	f7f8 fe4a 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 801041c:	6803      	ldr	r3, [r0, #0]
 801041e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010420:	4798      	blx	r3
 8010422:	23ff      	movs	r3, #255	@ 0xff
 8010424:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8010428:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 801042c:	6860      	ldr	r0, [r4, #4]
 801042e:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 8010432:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 8010436:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 801043a:	6803      	ldr	r3, [r0, #0]
 801043c:	a903      	add	r1, sp, #12
 801043e:	685b      	ldr	r3, [r3, #4]
 8010440:	4798      	blx	r3
 8010442:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8010444:	b00d      	add	sp, #52	@ 0x34
 8010446:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010448:	200023a2 	.word	0x200023a2

0801044c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 801044c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010450:	b08c      	sub	sp, #48	@ 0x30
 8010452:	461e      	mov	r6, r3
 8010454:	466d      	mov	r5, sp
 8010456:	2300      	movs	r3, #0
 8010458:	e885 0006 	stmia.w	r5, {r1, r2}
 801045c:	9306      	str	r3, [sp, #24]
 801045e:	6803      	ldr	r3, [r0, #0]
 8010460:	f8bd 7000 	ldrh.w	r7, [sp]
 8010464:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010466:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801046a:	2501      	movs	r5, #1
 801046c:	9503      	str	r5, [sp, #12]
 801046e:	4604      	mov	r4, r0
 8010470:	4798      	blx	r3
 8010472:	4642      	mov	r2, r8
 8010474:	4639      	mov	r1, r7
 8010476:	4603      	mov	r3, r0
 8010478:	4620      	mov	r0, r4
 801047a:	f7ff ff47 	bl	801030c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801047e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010482:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010486:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801048a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801048e:	4b11      	ldr	r3, [pc, #68]	@ (80104d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8010490:	9004      	str	r0, [sp, #16]
 8010492:	881b      	ldrh	r3, [r3, #0]
 8010494:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8010498:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801049a:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 801049e:	9607      	str	r6, [sp, #28]
 80104a0:	f7f8 fe06 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 80104a4:	6803      	ldr	r3, [r0, #0]
 80104a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80104a8:	4798      	blx	r3
 80104aa:	23ff      	movs	r3, #255	@ 0xff
 80104ac:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 80104b0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 80104b4:	6860      	ldr	r0, [r4, #4]
 80104b6:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 80104ba:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 80104be:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 80104c2:	6803      	ldr	r3, [r0, #0]
 80104c4:	a903      	add	r1, sp, #12
 80104c6:	685b      	ldr	r3, [r3, #4]
 80104c8:	4798      	blx	r3
 80104ca:	4630      	mov	r0, r6
 80104cc:	b00c      	add	sp, #48	@ 0x30
 80104ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80104d2:	bf00      	nop
 80104d4:	200023a2 	.word	0x200023a2

080104d8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80104d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80104da:	b085      	sub	sp, #20
 80104dc:	ac02      	add	r4, sp, #8
 80104de:	e884 0006 	stmia.w	r4, {r1, r2}
 80104e2:	4605      	mov	r5, r0
 80104e4:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80104e8:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80104ec:	f7ff fde6 	bl	80100bc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80104f0:	463a      	mov	r2, r7
 80104f2:	4603      	mov	r3, r0
 80104f4:	4631      	mov	r1, r6
 80104f6:	4628      	mov	r0, r5
 80104f8:	f7ff ff08 	bl	801030c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80104fc:	4a05      	ldr	r2, [pc, #20]	@ (8010514 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80104fe:	682b      	ldr	r3, [r5, #0]
 8010500:	8812      	ldrh	r2, [r2, #0]
 8010502:	9200      	str	r2, [sp, #0]
 8010504:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8010506:	e894 0006 	ldmia.w	r4, {r1, r2}
 801050a:	4603      	mov	r3, r0
 801050c:	4628      	mov	r0, r5
 801050e:	47b0      	blx	r6
 8010510:	b005      	add	sp, #20
 8010512:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010514:	200023a2 	.word	0x200023a2

08010518 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010518:	b570      	push	{r4, r5, r6, lr}
 801051a:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 801051e:	4604      	mov	r4, r0
 8010520:	b19b      	cbz	r3, 801054a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8010522:	2002      	movs	r0, #2
 8010524:	f7fd fa3c 	bl	800d9a0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8010528:	2300      	movs	r3, #0
 801052a:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 801052e:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 8010532:	6823      	ldr	r3, [r4, #0]
 8010534:	4620      	mov	r0, r4
 8010536:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 801053a:	f7ff fdbf 	bl	80100bc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801053e:	462b      	mov	r3, r5
 8010540:	4601      	mov	r1, r0
 8010542:	4620      	mov	r0, r4
 8010544:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010548:	4718      	bx	r3
 801054a:	bd70      	pop	{r4, r5, r6, pc}

0801054c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 801054c:	b538      	push	{r3, r4, r5, lr}
 801054e:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 8010552:	428b      	cmp	r3, r1
 8010554:	4604      	mov	r4, r0
 8010556:	460d      	mov	r5, r1
 8010558:	d006      	beq.n	8010568 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801055a:	6803      	ldr	r3, [r0, #0]
 801055c:	b929      	cbnz	r1, 801056a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801055e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 8010562:	4798      	blx	r3
 8010564:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 8010568:	bd38      	pop	{r3, r4, r5, pc}
 801056a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 801056e:	e7f8      	b.n	8010562 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08010570 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8010570:	b510      	push	{r4, lr}
 8010572:	4b0d      	ldr	r3, [pc, #52]	@ (80105a8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010574:	781b      	ldrb	r3, [r3, #0]
 8010576:	4604      	mov	r4, r0
 8010578:	b95b      	cbnz	r3, 8010592 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801057a:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 801057e:	2b02      	cmp	r3, #2
 8010580:	d007      	beq.n	8010592 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010582:	6840      	ldr	r0, [r0, #4]
 8010584:	f000 f90e 	bl	80107a4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010588:	b118      	cbz	r0, 8010592 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801058a:	6862      	ldr	r2, [r4, #4]
 801058c:	7a53      	ldrb	r3, [r2, #9]
 801058e:	2b00      	cmp	r3, #0
 8010590:	d0fc      	beq.n	801058c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8010592:	f7fd fc8f 	bl	800deb4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010596:	4620      	mov	r0, r4
 8010598:	2100      	movs	r1, #0
 801059a:	f7ff ffd7 	bl	801054c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801059e:	4620      	mov	r0, r4
 80105a0:	f7ff fd8c 	bl	80100bc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80105a4:	bd10      	pop	{r4, pc}
 80105a6:	bf00      	nop
 80105a8:	200023a6 	.word	0x200023a6

080105ac <_ZN8touchgfx13DMA_Interface5flushEv>:
 80105ac:	6803      	ldr	r3, [r0, #0]
 80105ae:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80105b0:	4718      	bx	r3

080105b2 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80105b2:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80105b6:	1a13      	subs	r3, r2, r0
 80105b8:	4258      	negs	r0, r3
 80105ba:	4158      	adcs	r0, r3
 80105bc:	4770      	bx	lr

080105be <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80105be:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80105c2:	1a9b      	subs	r3, r3, r2
 80105c4:	2b00      	cmp	r3, #0
 80105c6:	bfdc      	itt	le
 80105c8:	6882      	ldrle	r2, [r0, #8]
 80105ca:	189b      	addle	r3, r3, r2
 80105cc:	2b01      	cmp	r3, #1
 80105ce:	bfcc      	ite	gt
 80105d0:	2000      	movgt	r0, #0
 80105d2:	2001      	movle	r0, #1
 80105d4:	4770      	bx	lr

080105d6 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80105d6:	6902      	ldr	r2, [r0, #16]
 80105d8:	6843      	ldr	r3, [r0, #4]
 80105da:	2024      	movs	r0, #36	@ 0x24
 80105dc:	fb00 3002 	mla	r0, r0, r2, r3
 80105e0:	4770      	bx	lr

080105e2 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80105e2:	6803      	ldr	r3, [r0, #0]
 80105e4:	691b      	ldr	r3, [r3, #16]
 80105e6:	4718      	bx	r3

080105e8 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80105e8:	b570      	push	{r4, r5, r6, lr}
 80105ea:	2301      	movs	r3, #1
 80105ec:	7203      	strb	r3, [r0, #8]
 80105ee:	4604      	mov	r4, r0
 80105f0:	6840      	ldr	r0, [r0, #4]
 80105f2:	6803      	ldr	r3, [r0, #0]
 80105f4:	699b      	ldr	r3, [r3, #24]
 80105f6:	4798      	blx	r3
 80105f8:	6803      	ldr	r3, [r0, #0]
 80105fa:	2b40      	cmp	r3, #64	@ 0x40
 80105fc:	4605      	mov	r5, r0
 80105fe:	d00c      	beq.n	801061a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010600:	d810      	bhi.n	8010624 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8010602:	2b04      	cmp	r3, #4
 8010604:	d01d      	beq.n	8010642 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010606:	d804      	bhi.n	8010612 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010608:	2b01      	cmp	r3, #1
 801060a:	d006      	beq.n	801061a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801060c:	2b02      	cmp	r3, #2
 801060e:	d02c      	beq.n	801066a <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8010610:	bd70      	pop	{r4, r5, r6, pc}
 8010612:	2b08      	cmp	r3, #8
 8010614:	d01d      	beq.n	8010652 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010616:	2b20      	cmp	r3, #32
 8010618:	d1fa      	bne.n	8010610 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801061a:	6823      	ldr	r3, [r4, #0]
 801061c:	4620      	mov	r0, r4
 801061e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8010620:	4798      	blx	r3
 8010622:	e013      	b.n	801064c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8010624:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8010628:	d0f7      	beq.n	801061a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801062a:	d804      	bhi.n	8010636 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801062c:	2b80      	cmp	r3, #128	@ 0x80
 801062e:	d0f4      	beq.n	801061a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010630:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8010634:	e7f0      	b.n	8010618 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010636:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801063a:	d0ee      	beq.n	801061a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801063c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8010640:	e7e5      	b.n	801060e <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8010642:	6823      	ldr	r3, [r4, #0]
 8010644:	7f01      	ldrb	r1, [r0, #28]
 8010646:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010648:	4620      	mov	r0, r4
 801064a:	4798      	blx	r3
 801064c:	6823      	ldr	r3, [r4, #0]
 801064e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010650:	e006      	b.n	8010660 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8010652:	6823      	ldr	r3, [r4, #0]
 8010654:	7f01      	ldrb	r1, [r0, #28]
 8010656:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010658:	4620      	mov	r0, r4
 801065a:	4798      	blx	r3
 801065c:	6823      	ldr	r3, [r4, #0]
 801065e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010660:	4629      	mov	r1, r5
 8010662:	4620      	mov	r0, r4
 8010664:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010668:	4718      	bx	r3
 801066a:	6823      	ldr	r3, [r4, #0]
 801066c:	4620      	mov	r0, r4
 801066e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8010670:	4798      	blx	r3
 8010672:	e7f3      	b.n	801065c <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08010674 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8010674:	4770      	bx	lr

08010676 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010676:	4770      	bx	lr

08010678 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010678:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 801067c:	1ad2      	subs	r2, r2, r3
 801067e:	2a00      	cmp	r2, #0
 8010680:	b510      	push	{r4, lr}
 8010682:	bfdc      	itt	le
 8010684:	6884      	ldrle	r4, [r0, #8]
 8010686:	1912      	addle	r2, r2, r4
 8010688:	2a01      	cmp	r2, #1
 801068a:	dd16      	ble.n	80106ba <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 801068c:	6842      	ldr	r2, [r0, #4]
 801068e:	2424      	movs	r4, #36	@ 0x24
 8010690:	fb04 2303 	mla	r3, r4, r3, r2
 8010694:	f101 0220 	add.w	r2, r1, #32
 8010698:	f851 4b04 	ldr.w	r4, [r1], #4
 801069c:	f843 4b04 	str.w	r4, [r3], #4
 80106a0:	4291      	cmp	r1, r2
 80106a2:	d1f9      	bne.n	8010698 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80106a4:	780a      	ldrb	r2, [r1, #0]
 80106a6:	701a      	strb	r2, [r3, #0]
 80106a8:	68c3      	ldr	r3, [r0, #12]
 80106aa:	6882      	ldr	r2, [r0, #8]
 80106ac:	f3bf 8f5b 	dmb	ish
 80106b0:	3301      	adds	r3, #1
 80106b2:	429a      	cmp	r2, r3
 80106b4:	bfd8      	it	le
 80106b6:	1a9b      	suble	r3, r3, r2
 80106b8:	60c3      	str	r3, [r0, #12]
 80106ba:	bd10      	pop	{r4, pc}

080106bc <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80106bc:	6903      	ldr	r3, [r0, #16]
 80106be:	6882      	ldr	r2, [r0, #8]
 80106c0:	f3bf 8f5b 	dmb	ish
 80106c4:	3301      	adds	r3, #1
 80106c6:	429a      	cmp	r2, r3
 80106c8:	bfd8      	it	le
 80106ca:	1a9b      	suble	r3, r3, r2
 80106cc:	6103      	str	r3, [r0, #16]
 80106ce:	4770      	bx	lr

080106d0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80106d0:	b570      	push	{r4, r5, r6, lr}
 80106d2:	4604      	mov	r4, r0
 80106d4:	460e      	mov	r6, r1
 80106d6:	6860      	ldr	r0, [r4, #4]
 80106d8:	6803      	ldr	r3, [r0, #0]
 80106da:	685b      	ldr	r3, [r3, #4]
 80106dc:	4798      	blx	r3
 80106de:	2800      	cmp	r0, #0
 80106e0:	d1f9      	bne.n	80106d6 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80106e2:	4d0d      	ldr	r5, [pc, #52]	@ (8010718 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80106e4:	6828      	ldr	r0, [r5, #0]
 80106e6:	6803      	ldr	r3, [r0, #0]
 80106e8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80106ea:	4798      	blx	r3
 80106ec:	f7fd fc04 	bl	800def8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80106f0:	6828      	ldr	r0, [r5, #0]
 80106f2:	2101      	movs	r1, #1
 80106f4:	f7ff ff2a 	bl	801054c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80106f8:	6860      	ldr	r0, [r4, #4]
 80106fa:	6803      	ldr	r3, [r0, #0]
 80106fc:	4631      	mov	r1, r6
 80106fe:	689b      	ldr	r3, [r3, #8]
 8010700:	4798      	blx	r3
 8010702:	6823      	ldr	r3, [r4, #0]
 8010704:	4620      	mov	r0, r4
 8010706:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010708:	4798      	blx	r3
 801070a:	6828      	ldr	r0, [r5, #0]
 801070c:	6803      	ldr	r3, [r0, #0]
 801070e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010712:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8010714:	4718      	bx	r3
 8010716:	bf00      	nop
 8010718:	200023a8 	.word	0x200023a8

0801071c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 801071c:	b508      	push	{r3, lr}
 801071e:	f7fd fbc9 	bl	800deb4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010722:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010726:	f7fd bbdb 	b.w	800dee0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801072a <_ZN8touchgfx13DMA_Interface5startEv>:
 801072a:	b510      	push	{r4, lr}
 801072c:	4604      	mov	r4, r0
 801072e:	6840      	ldr	r0, [r0, #4]
 8010730:	6803      	ldr	r3, [r0, #0]
 8010732:	681b      	ldr	r3, [r3, #0]
 8010734:	4798      	blx	r3
 8010736:	b948      	cbnz	r0, 801074c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010738:	7a63      	ldrb	r3, [r4, #9]
 801073a:	b13b      	cbz	r3, 801074c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801073c:	7a23      	ldrb	r3, [r4, #8]
 801073e:	b92b      	cbnz	r3, 801074c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010740:	6823      	ldr	r3, [r4, #0]
 8010742:	4620      	mov	r0, r4
 8010744:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010746:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801074a:	4718      	bx	r3
 801074c:	bd10      	pop	{r4, pc}

0801074e <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 801074e:	b570      	push	{r4, r5, r6, lr}
 8010750:	4604      	mov	r4, r0
 8010752:	6840      	ldr	r0, [r0, #4]
 8010754:	6803      	ldr	r3, [r0, #0]
 8010756:	681b      	ldr	r3, [r3, #0]
 8010758:	4798      	blx	r3
 801075a:	4605      	mov	r5, r0
 801075c:	b930      	cbnz	r0, 801076c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801075e:	7a23      	ldrb	r3, [r4, #8]
 8010760:	b123      	cbz	r3, 801076c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010762:	6860      	ldr	r0, [r4, #4]
 8010764:	6803      	ldr	r3, [r0, #0]
 8010766:	695b      	ldr	r3, [r3, #20]
 8010768:	4798      	blx	r3
 801076a:	7225      	strb	r5, [r4, #8]
 801076c:	6860      	ldr	r0, [r4, #4]
 801076e:	6803      	ldr	r3, [r0, #0]
 8010770:	681b      	ldr	r3, [r3, #0]
 8010772:	4798      	blx	r3
 8010774:	b928      	cbnz	r0, 8010782 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010776:	6823      	ldr	r3, [r4, #0]
 8010778:	4620      	mov	r0, r4
 801077a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801077c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010780:	4718      	bx	r3
 8010782:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010786:	f7fd bbc3 	b.w	800df10 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

0801078c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 801078c:	b510      	push	{r4, lr}
 801078e:	4c04      	ldr	r4, [pc, #16]	@ (80107a0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010790:	6082      	str	r2, [r0, #8]
 8010792:	2200      	movs	r2, #0
 8010794:	e9c0 4100 	strd	r4, r1, [r0]
 8010798:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801079c:	bd10      	pop	{r4, pc}
 801079e:	bf00      	nop
 80107a0:	08029784 	.word	0x08029784

080107a4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80107a4:	6840      	ldr	r0, [r0, #4]
 80107a6:	6803      	ldr	r3, [r0, #0]
 80107a8:	681b      	ldr	r3, [r3, #0]
 80107aa:	4718      	bx	r3

080107ac <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 80107ac:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 80107b0:	4770      	bx	lr

080107b2 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80107b2:	b510      	push	{r4, lr}
 80107b4:	4604      	mov	r4, r0
 80107b6:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80107b8:	b150      	cbz	r0, 80107d0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80107ba:	6803      	ldr	r3, [r0, #0]
 80107bc:	68db      	ldr	r3, [r3, #12]
 80107be:	4798      	blx	r3
 80107c0:	b130      	cbz	r0, 80107d0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80107c2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80107c4:	6803      	ldr	r3, [r0, #0]
 80107c6:	4621      	mov	r1, r4
 80107c8:	689b      	ldr	r3, [r3, #8]
 80107ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80107ce:	4718      	bx	r3
 80107d0:	bd10      	pop	{r4, pc}

080107d2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80107d2:	b570      	push	{r4, r5, r6, lr}
 80107d4:	790b      	ldrb	r3, [r1, #4]
 80107d6:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 80107da:	2b00      	cmp	r3, #0
 80107dc:	bf0c      	ite	eq
 80107de:	2301      	moveq	r3, #1
 80107e0:	2300      	movne	r3, #0
 80107e2:	4604      	mov	r4, r0
 80107e4:	460e      	mov	r6, r1
 80107e6:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 80107ea:	d109      	bne.n	8010800 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80107ec:	b14d      	cbz	r5, 8010802 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80107ee:	7933      	ldrb	r3, [r6, #4]
 80107f0:	2b01      	cmp	r3, #1
 80107f2:	d10c      	bne.n	801080e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80107f4:	6823      	ldr	r3, [r4, #0]
 80107f6:	4620      	mov	r0, r4
 80107f8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80107fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80107fe:	4718      	bx	r3
 8010800:	b12d      	cbz	r5, 801080e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8010802:	6823      	ldr	r3, [r4, #0]
 8010804:	4620      	mov	r0, r4
 8010806:	695b      	ldr	r3, [r3, #20]
 8010808:	4798      	blx	r3
 801080a:	2d00      	cmp	r5, #0
 801080c:	d1ef      	bne.n	80107ee <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801080e:	bd70      	pop	{r4, r5, r6, pc}

08010810 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8010810:	2000      	movs	r0, #0
 8010812:	4770      	bx	lr

08010814 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8010814:	4b07      	ldr	r3, [pc, #28]	@ (8010834 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8010816:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8010818:	881b      	ldrh	r3, [r3, #0]
 801081a:	4293      	cmp	r3, r2
 801081c:	bf81      	itttt	hi
 801081e:	4b06      	ldrhi	r3, [pc, #24]	@ (8010838 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8010820:	681b      	ldrhi	r3, [r3, #0]
 8010822:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8010826:	7858      	ldrbhi	r0, [r3, #1]
 8010828:	bf8c      	ite	hi
 801082a:	f000 0003 	andhi.w	r0, r0, #3
 801082e:	2000      	movls	r0, #0
 8010830:	4770      	bx	lr
 8010832:	bf00      	nop
 8010834:	200023fc 	.word	0x200023fc
 8010838:	200023f8 	.word	0x200023f8

0801083c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 801083c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010840:	4b10      	ldr	r3, [pc, #64]	@ (8010884 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8010842:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8010844:	881b      	ldrh	r3, [r3, #0]
 8010846:	428b      	cmp	r3, r1
 8010848:	4604      	mov	r4, r0
 801084a:	d918      	bls.n	801087e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 801084c:	6803      	ldr	r3, [r0, #0]
 801084e:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 8010850:	4b0d      	ldr	r3, [pc, #52]	@ (8010888 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8010852:	6818      	ldr	r0, [r3, #0]
 8010854:	f7fc fbae 	bl	800cfb4 <_ZNK8touchgfx5Texts7getTextEt>
 8010858:	6823      	ldr	r3, [r4, #0]
 801085a:	4606      	mov	r6, r0
 801085c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801085e:	4620      	mov	r0, r4
 8010860:	4798      	blx	r3
 8010862:	6823      	ldr	r3, [r4, #0]
 8010864:	4607      	mov	r7, r0
 8010866:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 801086a:	4620      	mov	r0, r4
 801086c:	4798      	blx	r3
 801086e:	463a      	mov	r2, r7
 8010870:	4603      	mov	r3, r0
 8010872:	4631      	mov	r1, r6
 8010874:	4620      	mov	r0, r4
 8010876:	46ac      	mov	ip, r5
 8010878:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801087c:	4760      	bx	ip
 801087e:	2000      	movs	r0, #0
 8010880:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010884:	200023fc 	.word	0x200023fc
 8010888:	20002404 	.word	0x20002404

0801088c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 801088c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010890:	4b17      	ldr	r3, [pc, #92]	@ (80108f0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8010892:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8010894:	881b      	ldrh	r3, [r3, #0]
 8010896:	428b      	cmp	r3, r1
 8010898:	4604      	mov	r4, r0
 801089a:	d926      	bls.n	80108ea <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 801089c:	4b15      	ldr	r3, [pc, #84]	@ (80108f4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801089e:	681b      	ldr	r3, [r3, #0]
 80108a0:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80108a4:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80108a8:	4b13      	ldr	r3, [pc, #76]	@ (80108f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80108aa:	7855      	ldrb	r5, [r2, #1]
 80108ac:	681b      	ldr	r3, [r3, #0]
 80108ae:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80108b2:	6833      	ldr	r3, [r6, #0]
 80108b4:	69df      	ldr	r7, [r3, #28]
 80108b6:	4b11      	ldr	r3, [pc, #68]	@ (80108fc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80108b8:	6818      	ldr	r0, [r3, #0]
 80108ba:	f7fc fb7b 	bl	800cfb4 <_ZNK8touchgfx5Texts7getTextEt>
 80108be:	6823      	ldr	r3, [r4, #0]
 80108c0:	4680      	mov	r8, r0
 80108c2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80108c4:	4620      	mov	r0, r4
 80108c6:	4798      	blx	r3
 80108c8:	6823      	ldr	r3, [r4, #0]
 80108ca:	4681      	mov	r9, r0
 80108cc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80108d0:	4620      	mov	r0, r4
 80108d2:	4798      	blx	r3
 80108d4:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80108d8:	9000      	str	r0, [sp, #0]
 80108da:	464b      	mov	r3, r9
 80108dc:	4642      	mov	r2, r8
 80108de:	4629      	mov	r1, r5
 80108e0:	4630      	mov	r0, r6
 80108e2:	47b8      	blx	r7
 80108e4:	b003      	add	sp, #12
 80108e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80108ea:	2000      	movs	r0, #0
 80108ec:	e7fa      	b.n	80108e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80108ee:	bf00      	nop
 80108f0:	200023fc 	.word	0x200023fc
 80108f4:	200023f8 	.word	0x200023f8
 80108f8:	20002400 	.word	0x20002400
 80108fc:	20002404 	.word	0x20002404

08010900 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8010900:	b40e      	push	{r1, r2, r3}
 8010902:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010906:	4b2f      	ldr	r3, [pc, #188]	@ (80109c4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8010908:	881a      	ldrh	r2, [r3, #0]
 801090a:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 801090c:	429a      	cmp	r2, r3
 801090e:	b09d      	sub	sp, #116	@ 0x74
 8010910:	4604      	mov	r4, r0
 8010912:	d954      	bls.n	80109be <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8010914:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 80109c8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8010918:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 80109cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 801091c:	aa26      	add	r2, sp, #152	@ 0x98
 801091e:	9202      	str	r2, [sp, #8]
 8010920:	f8d9 2000 	ldr.w	r2, [r9]
 8010924:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8010928:	f8d8 3000 	ldr.w	r3, [r8]
 801092c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8010930:	682b      	ldr	r3, [r5, #0]
 8010932:	4628      	mov	r0, r5
 8010934:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010936:	4798      	blx	r3
 8010938:	b207      	sxth	r7, r0
 801093a:	4606      	mov	r6, r0
 801093c:	a803      	add	r0, sp, #12
 801093e:	f004 f87b 	bl	8014a38 <_ZN8touchgfx12TextProviderC1Ev>
 8010942:	682b      	ldr	r3, [r5, #0]
 8010944:	4628      	mov	r0, r5
 8010946:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010948:	4798      	blx	r3
 801094a:	682b      	ldr	r3, [r5, #0]
 801094c:	4682      	mov	sl, r0
 801094e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010950:	4628      	mov	r0, r5
 8010952:	4798      	blx	r3
 8010954:	4653      	mov	r3, sl
 8010956:	9000      	str	r0, [sp, #0]
 8010958:	9a02      	ldr	r2, [sp, #8]
 801095a:	9925      	ldr	r1, [sp, #148]	@ 0x94
 801095c:	a803      	add	r0, sp, #12
 801095e:	f004 f8c6 	bl	8014aee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010962:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8010964:	f8d9 3000 	ldr.w	r3, [r9]
 8010968:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 801096c:	8925      	ldrh	r5, [r4, #8]
 801096e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8010972:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8010976:	eba5 050c 	sub.w	r5, r5, ip
 801097a:	784a      	ldrb	r2, [r1, #1]
 801097c:	f8d8 3000 	ldr.w	r3, [r8]
 8010980:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 8010984:	b22d      	sxth	r5, r5
 8010986:	9500      	str	r5, [sp, #0]
 8010988:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 801098c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8010990:	a803      	add	r0, sp, #12
 8010992:	f001 ff01 	bl	8012798 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8010996:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 801099a:	18b9      	adds	r1, r7, r2
 801099c:	2900      	cmp	r1, #0
 801099e:	b203      	sxth	r3, r0
 80109a0:	dd0b      	ble.n	80109ba <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80109a2:	3b01      	subs	r3, #1
 80109a4:	fb13 f302 	smulbb	r3, r3, r2
 80109a8:	fb16 3300 	smlabb	r3, r6, r0, r3
 80109ac:	b21f      	sxth	r7, r3
 80109ae:	4638      	mov	r0, r7
 80109b0:	b01d      	add	sp, #116	@ 0x74
 80109b2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80109b6:	b003      	add	sp, #12
 80109b8:	4770      	bx	lr
 80109ba:	2b00      	cmp	r3, #0
 80109bc:	dcf7      	bgt.n	80109ae <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80109be:	2700      	movs	r7, #0
 80109c0:	e7f5      	b.n	80109ae <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80109c2:	bf00      	nop
 80109c4:	200023fc 	.word	0x200023fc
 80109c8:	200023f8 	.word	0x200023f8
 80109cc:	20002400 	.word	0x20002400

080109d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80109d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109d4:	4bbc      	ldr	r3, [pc, #752]	@ (8010cc8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80109d6:	460c      	mov	r4, r1
 80109d8:	881b      	ldrh	r3, [r3, #0]
 80109da:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 80109dc:	428b      	cmp	r3, r1
 80109de:	b0a9      	sub	sp, #164	@ 0xa4
 80109e0:	4680      	mov	r8, r0
 80109e2:	d809      	bhi.n	80109f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80109e4:	2300      	movs	r3, #0
 80109e6:	f04f 32ff 	mov.w	r2, #4294967295
 80109ea:	e9c0 3200 	strd	r3, r2, [r0]
 80109ee:	6083      	str	r3, [r0, #8]
 80109f0:	4640      	mov	r0, r8
 80109f2:	b029      	add	sp, #164	@ 0xa4
 80109f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80109f8:	4eb4      	ldr	r6, [pc, #720]	@ (8010ccc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80109fa:	6833      	ldr	r3, [r6, #0]
 80109fc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8010a00:	4bb3      	ldr	r3, [pc, #716]	@ (8010cd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8010a02:	681b      	ldr	r3, [r3, #0]
 8010a04:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8010a08:	4bb2      	ldr	r3, [pc, #712]	@ (8010cd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8010a0a:	6818      	ldr	r0, [r3, #0]
 8010a0c:	f7fc fad2 	bl	800cfb4 <_ZNK8touchgfx5Texts7getTextEt>
 8010a10:	682b      	ldr	r3, [r5, #0]
 8010a12:	4681      	mov	r9, r0
 8010a14:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010a16:	4628      	mov	r0, r5
 8010a18:	4798      	blx	r3
 8010a1a:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 8010a1c:	b203      	sxth	r3, r0
 8010a1e:	4407      	add	r7, r0
 8010a20:	9304      	str	r3, [sp, #16]
 8010a22:	b2bb      	uxth	r3, r7
 8010a24:	9303      	str	r3, [sp, #12]
 8010a26:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8010a2a:	4682      	mov	sl, r0
 8010a2c:	a80f      	add	r0, sp, #60	@ 0x3c
 8010a2e:	2b00      	cmp	r3, #0
 8010a30:	f040 80a6 	bne.w	8010b80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8010a34:	f004 f800 	bl	8014a38 <_ZN8touchgfx12TextProviderC1Ev>
 8010a38:	682b      	ldr	r3, [r5, #0]
 8010a3a:	4628      	mov	r0, r5
 8010a3c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010a3e:	4798      	blx	r3
 8010a40:	682b      	ldr	r3, [r5, #0]
 8010a42:	4606      	mov	r6, r0
 8010a44:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010a46:	4628      	mov	r0, r5
 8010a48:	4798      	blx	r3
 8010a4a:	6823      	ldr	r3, [r4, #0]
 8010a4c:	4607      	mov	r7, r0
 8010a4e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8010a50:	4620      	mov	r0, r4
 8010a52:	4798      	blx	r3
 8010a54:	6823      	ldr	r3, [r4, #0]
 8010a56:	4683      	mov	fp, r0
 8010a58:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8010a5c:	4620      	mov	r0, r4
 8010a5e:	4798      	blx	r3
 8010a60:	463b      	mov	r3, r7
 8010a62:	e9cd b000 	strd	fp, r0, [sp]
 8010a66:	4649      	mov	r1, r9
 8010a68:	4632      	mov	r2, r6
 8010a6a:	a80f      	add	r0, sp, #60	@ 0x3c
 8010a6c:	f004 f854 	bl	8014b18 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8010a70:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8010a74:	f8df b254 	ldr.w	fp, [pc, #596]	@ 8010ccc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8010a78:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8010a7c:	f04f 0600 	mov.w	r6, #0
 8010a80:	bf0c      	ite	eq
 8010a82:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8010a86:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8010a8a:	4637      	mov	r7, r6
 8010a8c:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8010a8e:	f8db 3000 	ldr.w	r3, [fp]
 8010a92:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8010a96:	4629      	mov	r1, r5
 8010a98:	785b      	ldrb	r3, [r3, #1]
 8010a9a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8010a9e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010aa2:	a80f      	add	r0, sp, #60	@ 0x3c
 8010aa4:	f001 fb93 	bl	80121ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010aa8:	9b03      	ldr	r3, [sp, #12]
 8010aaa:	4286      	cmp	r6, r0
 8010aac:	bfb8      	it	lt
 8010aae:	4606      	movlt	r6, r0
 8010ab0:	3701      	adds	r7, #1
 8010ab2:	eba9 0903 	sub.w	r9, r9, r3
 8010ab6:	a80f      	add	r0, sp, #60	@ 0x3c
 8010ab8:	b236      	sxth	r6, r6
 8010aba:	b2bf      	uxth	r7, r7
 8010abc:	fa0f f989 	sxth.w	r9, r9
 8010ac0:	f003 ffe1 	bl	8014a86 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8010ac4:	b918      	cbnz	r0, 8010ace <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8010ac6:	7a2b      	ldrb	r3, [r5, #8]
 8010ac8:	444b      	add	r3, r9
 8010aca:	2b00      	cmp	r3, #0
 8010acc:	dcde      	bgt.n	8010a8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8010ace:	9b03      	ldr	r3, [sp, #12]
 8010ad0:	9a04      	ldr	r2, [sp, #16]
 8010ad2:	f895 9009 	ldrb.w	r9, [r5, #9]
 8010ad6:	fb13 f707 	smulbb	r7, r3, r7
 8010ada:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8010adc:	1aff      	subs	r7, r7, r3
 8010ade:	b2bf      	uxth	r7, r7
 8010ae0:	b23b      	sxth	r3, r7
 8010ae2:	429a      	cmp	r2, r3
 8010ae4:	bfa8      	it	ge
 8010ae6:	4657      	movge	r7, sl
 8010ae8:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8010aec:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8010af0:	6823      	ldr	r3, [r4, #0]
 8010af2:	bf08      	it	eq
 8010af4:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8010af8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8010afa:	bf18      	it	ne
 8010afc:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8010b00:	4620      	mov	r0, r4
 8010b02:	4798      	blx	r3
 8010b04:	444f      	add	r7, r9
 8010b06:	fa1f f987 	uxth.w	r9, r7
 8010b0a:	2801      	cmp	r0, #1
 8010b0c:	fa0f f789 	sxth.w	r7, r9
 8010b10:	b2b3      	uxth	r3, r6
 8010b12:	f000 80e1 	beq.w	8010cd8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8010b16:	2802      	cmp	r0, #2
 8010b18:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 8010b1c:	f000 80e2 	beq.w	8010ce4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8010b20:	7aea      	ldrb	r2, [r5, #11]
 8010b22:	7b2d      	ldrb	r5, [r5, #12]
 8010b24:	b236      	sxth	r6, r6
 8010b26:	1ab6      	subs	r6, r6, r2
 8010b28:	442a      	add	r2, r5
 8010b2a:	4413      	add	r3, r2
 8010b2c:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 8010b30:	fa1f fa86 	uxth.w	sl, r6
 8010b34:	b29b      	uxth	r3, r3
 8010b36:	2a02      	cmp	r2, #2
 8010b38:	fa0f fb8a 	sxth.w	fp, sl
 8010b3c:	b21e      	sxth	r6, r3
 8010b3e:	f000 80d5 	beq.w	8010cec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8010b42:	2a03      	cmp	r2, #3
 8010b44:	f000 80dd 	beq.w	8010d02 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8010b48:	2a01      	cmp	r2, #1
 8010b4a:	f040 80e5 	bne.w	8010d18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8010b4e:	8925      	ldrh	r5, [r4, #8]
 8010b50:	4633      	mov	r3, r6
 8010b52:	eba5 0909 	sub.w	r9, r5, r9
 8010b56:	463e      	mov	r6, r7
 8010b58:	465d      	mov	r5, fp
 8010b5a:	461f      	mov	r7, r3
 8010b5c:	fa0f fb89 	sxth.w	fp, r9
 8010b60:	4b5c      	ldr	r3, [pc, #368]	@ (8010cd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8010b62:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8010b64:	6818      	ldr	r0, [r3, #0]
 8010b66:	f7fc fa25 	bl	800cfb4 <_ZNK8touchgfx5Texts7getTextEt>
 8010b6a:	f8a8 b000 	strh.w	fp, [r8]
 8010b6e:	f8a8 5002 	strh.w	r5, [r8, #2]
 8010b72:	f8a8 6004 	strh.w	r6, [r8, #4]
 8010b76:	f8a8 7006 	strh.w	r7, [r8, #6]
 8010b7a:	f8c8 0008 	str.w	r0, [r8, #8]
 8010b7e:	e737      	b.n	80109f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8010b80:	f003 ff5a 	bl	8014a38 <_ZN8touchgfx12TextProviderC1Ev>
 8010b84:	682b      	ldr	r3, [r5, #0]
 8010b86:	4628      	mov	r0, r5
 8010b88:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010b8a:	4798      	blx	r3
 8010b8c:	682b      	ldr	r3, [r5, #0]
 8010b8e:	4607      	mov	r7, r0
 8010b90:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010b92:	4628      	mov	r0, r5
 8010b94:	4798      	blx	r3
 8010b96:	6823      	ldr	r3, [r4, #0]
 8010b98:	4683      	mov	fp, r0
 8010b9a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8010b9c:	4620      	mov	r0, r4
 8010b9e:	4798      	blx	r3
 8010ba0:	6822      	ldr	r2, [r4, #0]
 8010ba2:	9005      	str	r0, [sp, #20]
 8010ba4:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8010ba8:	4620      	mov	r0, r4
 8010baa:	4790      	blx	r2
 8010bac:	9b05      	ldr	r3, [sp, #20]
 8010bae:	9001      	str	r0, [sp, #4]
 8010bb0:	463a      	mov	r2, r7
 8010bb2:	4649      	mov	r1, r9
 8010bb4:	9300      	str	r3, [sp, #0]
 8010bb6:	a80f      	add	r0, sp, #60	@ 0x3c
 8010bb8:	465b      	mov	r3, fp
 8010bba:	f003 ffad 	bl	8014b18 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8010bbe:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8010bc2:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8010bc6:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8010bc8:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 8010bcc:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8010bd0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010bd4:	bf0a      	itet	eq
 8010bd6:	464a      	moveq	r2, r9
 8010bd8:	461a      	movne	r2, r3
 8010bda:	4699      	moveq	r9, r3
 8010bdc:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 8010be0:	1ad2      	subs	r2, r2, r3
 8010be2:	6833      	ldr	r3, [r6, #0]
 8010be4:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 8010be8:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8010bec:	af0f      	add	r7, sp, #60	@ 0x3c
 8010bee:	7859      	ldrb	r1, [r3, #1]
 8010bf0:	9707      	str	r7, [sp, #28]
 8010bf2:	2300      	movs	r3, #0
 8010bf4:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8010bf8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010bfc:	f88d 1020 	strb.w	r1, [sp, #32]
 8010c00:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8010c04:	9509      	str	r5, [sp, #36]	@ 0x24
 8010c06:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8010c0a:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 8010c0e:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 8010c12:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010c16:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8010c1a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010c1e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8010c22:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8010c26:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8010c2a:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 8010c2e:	b350      	cbz	r0, 8010c86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8010c30:	682b      	ldr	r3, [r5, #0]
 8010c32:	4628      	mov	r0, r5
 8010c34:	695b      	ldr	r3, [r3, #20]
 8010c36:	4798      	blx	r3
 8010c38:	4607      	mov	r7, r0
 8010c3a:	b320      	cbz	r0, 8010c86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8010c3c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8010c3e:	6803      	ldr	r3, [r0, #0]
 8010c40:	4639      	mov	r1, r7
 8010c42:	68db      	ldr	r3, [r3, #12]
 8010c44:	4798      	blx	r3
 8010c46:	4606      	mov	r6, r0
 8010c48:	b1e8      	cbz	r0, 8010c86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8010c4a:	7b43      	ldrb	r3, [r0, #13]
 8010c4c:	7a82      	ldrb	r2, [r0, #10]
 8010c4e:	005b      	lsls	r3, r3, #1
 8010c50:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010c54:	4313      	orrs	r3, r2
 8010c56:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8010c5a:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 8010c5e:	2b06      	cmp	r3, #6
 8010c60:	d111      	bne.n	8010c86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8010c62:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8010c64:	6803      	ldr	r3, [r0, #0]
 8010c66:	4632      	mov	r2, r6
 8010c68:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010c6a:	4639      	mov	r1, r7
 8010c6c:	4798      	blx	r3
 8010c6e:	7b73      	ldrb	r3, [r6, #13]
 8010c70:	005b      	lsls	r3, r3, #1
 8010c72:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010c76:	7ab3      	ldrb	r3, [r6, #10]
 8010c78:	4313      	orrs	r3, r2
 8010c7a:	4418      	add	r0, r3
 8010c7c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8010c80:	4418      	add	r0, r3
 8010c82:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 8010c86:	2600      	movs	r6, #0
 8010c88:	4637      	mov	r7, r6
 8010c8a:	a806      	add	r0, sp, #24
 8010c8c:	f001 fc80 	bl	8012590 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010c90:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 8010c94:	9b03      	ldr	r3, [sp, #12]
 8010c96:	4286      	cmp	r6, r0
 8010c98:	eba9 0903 	sub.w	r9, r9, r3
 8010c9c:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8010ca0:	bfb8      	it	lt
 8010ca2:	4606      	movlt	r6, r0
 8010ca4:	3701      	adds	r7, #1
 8010ca6:	b236      	sxth	r6, r6
 8010ca8:	b2bf      	uxth	r7, r7
 8010caa:	fa0f f989 	sxth.w	r9, r9
 8010cae:	2b00      	cmp	r3, #0
 8010cb0:	f43f af0d 	beq.w	8010ace <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8010cb4:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 8010cb8:	2b00      	cmp	r3, #0
 8010cba:	f47f af08 	bne.w	8010ace <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8010cbe:	7a2b      	ldrb	r3, [r5, #8]
 8010cc0:	444b      	add	r3, r9
 8010cc2:	2b00      	cmp	r3, #0
 8010cc4:	dce1      	bgt.n	8010c8a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8010cc6:	e702      	b.n	8010ace <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8010cc8:	200023fc 	.word	0x200023fc
 8010ccc:	200023f8 	.word	0x200023f8
 8010cd0:	20002400 	.word	0x20002400
 8010cd4:	20002404 	.word	0x20002404
 8010cd8:	ebaa 0606 	sub.w	r6, sl, r6
 8010cdc:	2002      	movs	r0, #2
 8010cde:	fb96 f6f0 	sdiv	r6, r6, r0
 8010ce2:	e71d      	b.n	8010b20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8010ce4:	441e      	add	r6, r3
 8010ce6:	ebaa 0606 	sub.w	r6, sl, r6
 8010cea:	e719      	b.n	8010b20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8010cec:	8925      	ldrh	r5, [r4, #8]
 8010cee:	1aed      	subs	r5, r5, r3
 8010cf0:	eba5 050a 	sub.w	r5, r5, sl
 8010cf4:	fa0f fb85 	sxth.w	fp, r5
 8010cf8:	8965      	ldrh	r5, [r4, #10]
 8010cfa:	eba5 0509 	sub.w	r5, r5, r9
 8010cfe:	b22d      	sxth	r5, r5
 8010d00:	e72e      	b.n	8010b60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8010d02:	8965      	ldrh	r5, [r4, #10]
 8010d04:	1aed      	subs	r5, r5, r3
 8010d06:	eba5 050a 	sub.w	r5, r5, sl
 8010d0a:	4633      	mov	r3, r6
 8010d0c:	b22d      	sxth	r5, r5
 8010d0e:	463e      	mov	r6, r7
 8010d10:	f04f 0b00 	mov.w	fp, #0
 8010d14:	461f      	mov	r7, r3
 8010d16:	e723      	b.n	8010b60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8010d18:	2500      	movs	r5, #0
 8010d1a:	e721      	b.n	8010b60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08010d1c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8010d1c:	b513      	push	{r0, r1, r4, lr}
 8010d1e:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 8010d22:	4604      	mov	r4, r0
 8010d24:	b1fb      	cbz	r3, 8010d66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010d26:	4b16      	ldr	r3, [pc, #88]	@ (8010d80 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8010d28:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8010d2a:	881b      	ldrh	r3, [r3, #0]
 8010d2c:	428b      	cmp	r3, r1
 8010d2e:	d91a      	bls.n	8010d66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010d30:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010d34:	2b00      	cmp	r3, #0
 8010d36:	dd16      	ble.n	8010d66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010d38:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010d3c:	2b00      	cmp	r3, #0
 8010d3e:	dd12      	ble.n	8010d66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010d40:	4b10      	ldr	r3, [pc, #64]	@ (8010d84 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8010d42:	6818      	ldr	r0, [r3, #0]
 8010d44:	f7fc f936 	bl	800cfb4 <_ZNK8touchgfx5Texts7getTextEt>
 8010d48:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8010d4c:	6822      	ldr	r2, [r4, #0]
 8010d4e:	2b00      	cmp	r3, #0
 8010d50:	db06      	blt.n	8010d60 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8010d52:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8010d56:	2b00      	cmp	r3, #0
 8010d58:	db02      	blt.n	8010d60 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8010d5a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8010d5c:	4298      	cmp	r0, r3
 8010d5e:	d004      	beq.n	8010d6a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8010d60:	6953      	ldr	r3, [r2, #20]
 8010d62:	4620      	mov	r0, r4
 8010d64:	4798      	blx	r3
 8010d66:	b002      	add	sp, #8
 8010d68:	bd10      	pop	{r4, pc}
 8010d6a:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 8010d6e:	c903      	ldmia	r1, {r0, r1}
 8010d70:	466b      	mov	r3, sp
 8010d72:	e883 0003 	stmia.w	r3, {r0, r1}
 8010d76:	6912      	ldr	r2, [r2, #16]
 8010d78:	4619      	mov	r1, r3
 8010d7a:	4620      	mov	r0, r4
 8010d7c:	4790      	blx	r2
 8010d7e:	e7f2      	b.n	8010d66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010d80:	200023fc 	.word	0x200023fc
 8010d84:	20002404 	.word	0x20002404

08010d88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8010d88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d8c:	4b44      	ldr	r3, [pc, #272]	@ (8010ea0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8010d8e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8010d90:	881b      	ldrh	r3, [r3, #0]
 8010d92:	4293      	cmp	r3, r2
 8010d94:	b08e      	sub	sp, #56	@ 0x38
 8010d96:	4604      	mov	r4, r0
 8010d98:	d97e      	bls.n	8010e98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010d9a:	6808      	ldr	r0, [r1, #0]
 8010d9c:	4d41      	ldr	r5, [pc, #260]	@ (8010ea4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8010d9e:	6849      	ldr	r1, [r1, #4]
 8010da0:	ab05      	add	r3, sp, #20
 8010da2:	c303      	stmia	r3!, {r0, r1}
 8010da4:	4611      	mov	r1, r2
 8010da6:	6828      	ldr	r0, [r5, #0]
 8010da8:	f7fc f904 	bl	800cfb4 <_ZNK8touchgfx5Texts7getTextEt>
 8010dac:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8010db0:	2b00      	cmp	r3, #0
 8010db2:	db11      	blt.n	8010dd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010db4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8010db8:	2b00      	cmp	r3, #0
 8010dba:	db0d      	blt.n	8010dd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010dbc:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8010dbe:	4298      	cmp	r0, r3
 8010dc0:	d10a      	bne.n	8010dd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010dc2:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 8010dc6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010dca:	ab09      	add	r3, sp, #36	@ 0x24
 8010dcc:	e883 0003 	stmia.w	r3, {r0, r1}
 8010dd0:	4619      	mov	r1, r3
 8010dd2:	a805      	add	r0, sp, #20
 8010dd4:	f7fe fcee 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 8010dd8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010ddc:	2b00      	cmp	r3, #0
 8010dde:	dd5b      	ble.n	8010e98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010de0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010de4:	2b00      	cmp	r3, #0
 8010de6:	dd57      	ble.n	8010e98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010de8:	4f2f      	ldr	r7, [pc, #188]	@ (8010ea8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8010dea:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8010dec:	683b      	ldr	r3, [r7, #0]
 8010dee:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8010df2:	4b2e      	ldr	r3, [pc, #184]	@ (8010eac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8010df4:	681b      	ldr	r3, [r3, #0]
 8010df6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8010dfa:	2e00      	cmp	r6, #0
 8010dfc:	d04c      	beq.n	8010e98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010dfe:	6823      	ldr	r3, [r4, #0]
 8010e00:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 8010e04:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8010e06:	4620      	mov	r0, r4
 8010e08:	4798      	blx	r3
 8010e0a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8010e0c:	683b      	ldr	r3, [r7, #0]
 8010e0e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 8010e12:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 8010e16:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 8010e1a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8010e1c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8010e20:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 8010e24:	785b      	ldrb	r3, [r3, #1]
 8010e26:	9609      	str	r6, [sp, #36]	@ 0x24
 8010e28:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010e2c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8010e30:	4b1f      	ldr	r3, [pc, #124]	@ (8010eb0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8010e32:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 8010e36:	681b      	ldr	r3, [r3, #0]
 8010e38:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 8010e3c:	910b      	str	r1, [sp, #44]	@ 0x2c
 8010e3e:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 8010e42:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 8010e46:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 8010e4a:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 8010e4e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8010e52:	b10a      	cbz	r2, 8010e58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8010e54:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 8010e56:	b906      	cbnz	r6, 8010e5a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8010e58:	689e      	ldr	r6, [r3, #8]
 8010e5a:	af07      	add	r7, sp, #28
 8010e5c:	4621      	mov	r1, r4
 8010e5e:	4638      	mov	r0, r7
 8010e60:	f003 fa34 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010e64:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8010e66:	6828      	ldr	r0, [r5, #0]
 8010e68:	f7fc f8a4 	bl	800cfb4 <_ZNK8touchgfx5Texts7getTextEt>
 8010e6c:	6823      	ldr	r3, [r4, #0]
 8010e6e:	4605      	mov	r5, r0
 8010e70:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8010e72:	4620      	mov	r0, r4
 8010e74:	4798      	blx	r3
 8010e76:	6823      	ldr	r3, [r4, #0]
 8010e78:	4680      	mov	r8, r0
 8010e7a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8010e7e:	4620      	mov	r0, r4
 8010e80:	4798      	blx	r3
 8010e82:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8010e86:	ab09      	add	r3, sp, #36	@ 0x24
 8010e88:	9300      	str	r3, [sp, #0]
 8010e8a:	9501      	str	r5, [sp, #4]
 8010e8c:	ab05      	add	r3, sp, #20
 8010e8e:	e897 0006 	ldmia.w	r7, {r1, r2}
 8010e92:	4630      	mov	r0, r6
 8010e94:	f7fc f81f 	bl	800ced6 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8010e98:	b00e      	add	sp, #56	@ 0x38
 8010e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010e9e:	bf00      	nop
 8010ea0:	200023fc 	.word	0x200023fc
 8010ea4:	20002404 	.word	0x20002404
 8010ea8:	200023f8 	.word	0x200023f8
 8010eac:	20002400 	.word	0x20002400
 8010eb0:	200023a8 	.word	0x200023a8

08010eb4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8010eb4:	b538      	push	{r3, r4, r5, lr}
 8010eb6:	4b0e      	ldr	r3, [pc, #56]	@ (8010ef0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8010eb8:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8010eba:	881b      	ldrh	r3, [r3, #0]
 8010ebc:	429a      	cmp	r2, r3
 8010ebe:	4604      	mov	r4, r0
 8010ec0:	d214      	bcs.n	8010eec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8010ec2:	6803      	ldr	r3, [r0, #0]
 8010ec4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8010ec6:	4798      	blx	r3
 8010ec8:	6823      	ldr	r3, [r4, #0]
 8010eca:	4605      	mov	r5, r0
 8010ecc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010ece:	4620      	mov	r0, r4
 8010ed0:	4798      	blx	r3
 8010ed2:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8010ed6:	b22d      	sxth	r5, r5
 8010ed8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8010edc:	4601      	mov	r1, r0
 8010ede:	bf06      	itte	eq
 8010ee0:	4602      	moveq	r2, r0
 8010ee2:	4629      	moveq	r1, r5
 8010ee4:	462a      	movne	r2, r5
 8010ee6:	4620      	mov	r0, r4
 8010ee8:	f7f9 f86d 	bl	8009fc6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010eec:	bd38      	pop	{r3, r4, r5, pc}
 8010eee:	bf00      	nop
 8010ef0:	200023fc 	.word	0x200023fc

08010ef4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8010ef4:	b530      	push	{r4, r5, lr}
 8010ef6:	888b      	ldrh	r3, [r1, #4]
 8010ef8:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8010efa:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010efe:	b085      	sub	sp, #20
 8010f00:	4604      	mov	r4, r0
 8010f02:	b923      	cbnz	r3, 8010f0e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8010f04:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010f08:	b90b      	cbnz	r3, 8010f0e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8010f0a:	f7ff ffd3 	bl	8010eb4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8010f0e:	6823      	ldr	r3, [r4, #0]
 8010f10:	466d      	mov	r5, sp
 8010f12:	4621      	mov	r1, r4
 8010f14:	4628      	mov	r0, r5
 8010f16:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8010f1a:	4798      	blx	r3
 8010f1c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8010f20:	343c      	adds	r4, #60	@ 0x3c
 8010f22:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8010f26:	b005      	add	sp, #20
 8010f28:	bd30      	pop	{r4, r5, pc}

08010f2a <_ZNK8touchgfx3Box12getSolidRectEv>:
 8010f2a:	2300      	movs	r3, #0
 8010f2c:	8083      	strh	r3, [r0, #4]
 8010f2e:	80c3      	strh	r3, [r0, #6]
 8010f30:	8003      	strh	r3, [r0, #0]
 8010f32:	8043      	strh	r3, [r0, #2]
 8010f34:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8010f38:	2bff      	cmp	r3, #255	@ 0xff
 8010f3a:	bf01      	itttt	eq
 8010f3c:	890b      	ldrheq	r3, [r1, #8]
 8010f3e:	8083      	strheq	r3, [r0, #4]
 8010f40:	894b      	ldrheq	r3, [r1, #10]
 8010f42:	80c3      	strheq	r3, [r0, #6]
 8010f44:	4770      	bx	lr
	...

08010f48 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8010f48:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010f4a:	4604      	mov	r4, r0
 8010f4c:	6808      	ldr	r0, [r1, #0]
 8010f4e:	6849      	ldr	r1, [r1, #4]
 8010f50:	466b      	mov	r3, sp
 8010f52:	c303      	stmia	r3!, {r0, r1}
 8010f54:	6823      	ldr	r3, [r4, #0]
 8010f56:	4669      	mov	r1, sp
 8010f58:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010f5a:	4620      	mov	r0, r4
 8010f5c:	4798      	blx	r3
 8010f5e:	4b08      	ldr	r3, [pc, #32]	@ (8010f80 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8010f60:	681b      	ldr	r3, [r3, #0]
 8010f62:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8010f66:	b10a      	cbz	r2, 8010f6c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8010f68:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8010f6a:	b900      	cbnz	r0, 8010f6e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8010f6c:	6898      	ldr	r0, [r3, #8]
 8010f6e:	6803      	ldr	r3, [r0, #0]
 8010f70:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8010f72:	6a1d      	ldr	r5, [r3, #32]
 8010f74:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8010f78:	4669      	mov	r1, sp
 8010f7a:	47a8      	blx	r5
 8010f7c:	b003      	add	sp, #12
 8010f7e:	bd30      	pop	{r4, r5, pc}
 8010f80:	200023a8 	.word	0x200023a8

08010f84 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8010f84:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 8010f88:	b12a      	cbz	r2, 8010f96 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8010f8a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8010f8e:	b112      	cbz	r2, 8010f96 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8010f90:	6803      	ldr	r3, [r0, #0]
 8010f92:	695b      	ldr	r3, [r3, #20]
 8010f94:	4718      	bx	r3
 8010f96:	4770      	bx	lr

08010f98 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8010f98:	b570      	push	{r4, r5, r6, lr}
 8010f9a:	880b      	ldrh	r3, [r1, #0]
 8010f9c:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 8010f9e:	4605      	mov	r5, r0
 8010fa0:	8813      	ldrh	r3, [r2, #0]
 8010fa2:	f825 3f30 	strh.w	r3, [r5, #48]!
 8010fa6:	4604      	mov	r4, r0
 8010fa8:	4628      	mov	r0, r5
 8010faa:	f005 fb03 	bl	80165b4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010fae:	4606      	mov	r6, r0
 8010fb0:	4628      	mov	r0, r5
 8010fb2:	f005 fb33 	bl	801661c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010fb6:	6823      	ldr	r3, [r4, #0]
 8010fb8:	4605      	mov	r5, r0
 8010fba:	4631      	mov	r1, r6
 8010fbc:	4620      	mov	r0, r4
 8010fbe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010fc0:	4798      	blx	r3
 8010fc2:	6823      	ldr	r3, [r4, #0]
 8010fc4:	4629      	mov	r1, r5
 8010fc6:	4620      	mov	r0, r4
 8010fc8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8010fca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010fce:	4718      	bx	r3

08010fd0 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8010fd0:	b510      	push	{r4, lr}
 8010fd2:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 8010fd6:	2bff      	cmp	r3, #255	@ 0xff
 8010fd8:	4604      	mov	r4, r0
 8010fda:	d006      	beq.n	8010fea <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8010fdc:	2300      	movs	r3, #0
 8010fde:	8003      	strh	r3, [r0, #0]
 8010fe0:	8043      	strh	r3, [r0, #2]
 8010fe2:	8083      	strh	r3, [r0, #4]
 8010fe4:	80c3      	strh	r3, [r0, #6]
 8010fe6:	4620      	mov	r0, r4
 8010fe8:	bd10      	pop	{r4, pc}
 8010fea:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 8010fee:	b11b      	cbz	r3, 8010ff8 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8010ff0:	3130      	adds	r1, #48	@ 0x30
 8010ff2:	f005 fb47 	bl	8016684 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8010ff6:	e7f6      	b.n	8010fe6 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8010ff8:	312e      	adds	r1, #46	@ 0x2e
 8010ffa:	e7fa      	b.n	8010ff2 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

08010ffc <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8010ffc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011000:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8011004:	b08a      	sub	sp, #40	@ 0x28
 8011006:	4604      	mov	r4, r0
 8011008:	4688      	mov	r8, r1
 801100a:	2b00      	cmp	r3, #0
 801100c:	d066      	beq.n	80110dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801100e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8011010:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011014:	a805      	add	r0, sp, #20
 8011016:	f005 facd 	bl	80165b4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801101a:	4607      	mov	r7, r0
 801101c:	a805      	add	r0, sp, #20
 801101e:	f005 fafd 	bl	801661c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011022:	f9b8 6000 	ldrsh.w	r6, [r8]
 8011026:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801102a:	4432      	add	r2, r6
 801102c:	b292      	uxth	r2, r2
 801102e:	2300      	movs	r3, #0
 8011030:	fa0f fc82 	sxth.w	ip, r2
 8011034:	459c      	cmp	ip, r3
 8011036:	9306      	str	r3, [sp, #24]
 8011038:	dd52      	ble.n	80110e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801103a:	42b7      	cmp	r7, r6
 801103c:	dd50      	ble.n	80110e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801103e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8011042:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011046:	442b      	add	r3, r5
 8011048:	b29b      	uxth	r3, r3
 801104a:	b219      	sxth	r1, r3
 801104c:	2900      	cmp	r1, #0
 801104e:	dd47      	ble.n	80110e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011050:	42a8      	cmp	r0, r5
 8011052:	dd45      	ble.n	80110e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011054:	4567      	cmp	r7, ip
 8011056:	bfb8      	it	lt
 8011058:	b2ba      	uxthlt	r2, r7
 801105a:	4288      	cmp	r0, r1
 801105c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8011060:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8011064:	bfb8      	it	lt
 8011066:	b283      	uxthlt	r3, r0
 8011068:	1b92      	subs	r2, r2, r6
 801106a:	1b5b      	subs	r3, r3, r5
 801106c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011070:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011074:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011078:	f8ad 501a 	strh.w	r5, [sp, #26]
 801107c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011080:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8011084:	429a      	cmp	r2, r3
 8011086:	d026      	beq.n	80110d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011088:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801108c:	2b00      	cmp	r3, #0
 801108e:	dd22      	ble.n	80110d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011090:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8011094:	2b00      	cmp	r3, #0
 8011096:	dd1e      	ble.n	80110d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011098:	2300      	movs	r3, #0
 801109a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801109e:	6823      	ldr	r3, [r4, #0]
 80110a0:	a908      	add	r1, sp, #32
 80110a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80110a4:	4620      	mov	r0, r4
 80110a6:	4798      	blx	r3
 80110a8:	4b0f      	ldr	r3, [pc, #60]	@ (80110e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80110aa:	681b      	ldr	r3, [r3, #0]
 80110ac:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80110b0:	b10a      	cbz	r2, 80110b6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80110b2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80110b4:	b900      	cbnz	r0, 80110b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80110b6:	6898      	ldr	r0, [r3, #8]
 80110b8:	6801      	ldr	r1, [r0, #0]
 80110ba:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 80110be:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80110c2:	2501      	movs	r5, #1
 80110c4:	9502      	str	r5, [sp, #8]
 80110c6:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 80110ca:	9401      	str	r4, [sp, #4]
 80110cc:	ac06      	add	r4, sp, #24
 80110ce:	9400      	str	r4, [sp, #0]
 80110d0:	688c      	ldr	r4, [r1, #8]
 80110d2:	a905      	add	r1, sp, #20
 80110d4:	47a0      	blx	r4
 80110d6:	b00a      	add	sp, #40	@ 0x28
 80110d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80110dc:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 80110de:	e797      	b.n	8011010 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80110e0:	2300      	movs	r3, #0
 80110e2:	9307      	str	r3, [sp, #28]
 80110e4:	e7ca      	b.n	801107c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80110e6:	bf00      	nop
 80110e8:	200023a8 	.word	0x200023a8

080110ec <_ZNK8touchgfx6Button17invalidateContentEv>:
 80110ec:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 80110f0:	b12a      	cbz	r2, 80110fe <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80110f2:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80110f6:	b112      	cbz	r2, 80110fe <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80110f8:	6803      	ldr	r3, [r0, #0]
 80110fa:	695b      	ldr	r3, [r3, #20]
 80110fc:	4718      	bx	r3
 80110fe:	4770      	bx	lr

08011100 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8011100:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011104:	4b2f      	ldr	r3, [pc, #188]	@ (80111c4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8011106:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8011108:	881b      	ldrh	r3, [r3, #0]
 801110a:	4293      	cmp	r3, r2
 801110c:	b08d      	sub	sp, #52	@ 0x34
 801110e:	4604      	mov	r4, r0
 8011110:	460f      	mov	r7, r1
 8011112:	d954      	bls.n	80111be <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011114:	4b2c      	ldr	r3, [pc, #176]	@ (80111c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8011116:	6819      	ldr	r1, [r3, #0]
 8011118:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801111c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8011120:	4a2a      	ldr	r2, [pc, #168]	@ (80111cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8011122:	6812      	ldr	r2, [r2, #0]
 8011124:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8011128:	2900      	cmp	r1, #0
 801112a:	d048      	beq.n	80111be <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 801112c:	785a      	ldrb	r2, [r3, #1]
 801112e:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8011132:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8011136:	4b26      	ldr	r3, [pc, #152]	@ (80111d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8011138:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 801113c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 8011140:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 8011144:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 8011146:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 801114a:	9107      	str	r1, [sp, #28]
 801114c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8011150:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011154:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8011158:	681a      	ldr	r2, [r3, #0]
 801115a:	f88d 8020 	strb.w	r8, [sp, #32]
 801115e:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 8011162:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 8011166:	9609      	str	r6, [sp, #36]	@ 0x24
 8011168:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 801116c:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 8011170:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 8011174:	b10b      	cbz	r3, 801117a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8011176:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 8011178:	b905      	cbnz	r5, 801117c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801117a:	6895      	ldr	r5, [r2, #8]
 801117c:	ae05      	add	r6, sp, #20
 801117e:	4621      	mov	r1, r4
 8011180:	4630      	mov	r0, r6
 8011182:	f003 f8a3 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011186:	4b13      	ldr	r3, [pc, #76]	@ (80111d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8011188:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 801118a:	6818      	ldr	r0, [r3, #0]
 801118c:	f7fb ff12 	bl	800cfb4 <_ZNK8touchgfx5Texts7getTextEt>
 8011190:	6823      	ldr	r3, [r4, #0]
 8011192:	4680      	mov	r8, r0
 8011194:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011196:	4620      	mov	r0, r4
 8011198:	4798      	blx	r3
 801119a:	6823      	ldr	r3, [r4, #0]
 801119c:	4681      	mov	r9, r0
 801119e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80111a2:	4620      	mov	r0, r4
 80111a4:	4798      	blx	r3
 80111a6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80111aa:	ab07      	add	r3, sp, #28
 80111ac:	9300      	str	r3, [sp, #0]
 80111ae:	f8cd 8004 	str.w	r8, [sp, #4]
 80111b2:	463b      	mov	r3, r7
 80111b4:	e896 0006 	ldmia.w	r6, {r1, r2}
 80111b8:	4628      	mov	r0, r5
 80111ba:	f7fb fe8c 	bl	800ced6 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80111be:	b00d      	add	sp, #52	@ 0x34
 80111c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80111c4:	200023fc 	.word	0x200023fc
 80111c8:	200023f8 	.word	0x200023f8
 80111cc:	20002400 	.word	0x20002400
 80111d0:	200023a8 	.word	0x200023a8
 80111d4:	20002404 	.word	0x20002404

080111d8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 80111d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80111dc:	4604      	mov	r4, r0
 80111de:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 80111e0:	8962      	ldrh	r2, [r4, #10]
 80111e2:	b218      	sxth	r0, r3
 80111e4:	460e      	mov	r6, r1
 80111e6:	005b      	lsls	r3, r3, #1
 80111e8:	8921      	ldrh	r1, [r4, #8]
 80111ea:	b29b      	uxth	r3, r3
 80111ec:	1ac9      	subs	r1, r1, r3
 80111ee:	b08e      	sub	sp, #56	@ 0x38
 80111f0:	b209      	sxth	r1, r1
 80111f2:	1ad3      	subs	r3, r2, r3
 80111f4:	b21b      	sxth	r3, r3
 80111f6:	2900      	cmp	r1, #0
 80111f8:	f8ad 0000 	strh.w	r0, [sp]
 80111fc:	f8ad 0002 	strh.w	r0, [sp, #2]
 8011200:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011204:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011208:	dd5e      	ble.n	80112c8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801120a:	2b00      	cmp	r3, #0
 801120c:	dd5c      	ble.n	80112c8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801120e:	6830      	ldr	r0, [r6, #0]
 8011210:	6871      	ldr	r1, [r6, #4]
 8011212:	ab02      	add	r3, sp, #8
 8011214:	c303      	stmia	r3!, {r0, r1}
 8011216:	4669      	mov	r1, sp
 8011218:	a802      	add	r0, sp, #8
 801121a:	f7fe facb 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 801121e:	4620      	mov	r0, r4
 8011220:	a902      	add	r1, sp, #8
 8011222:	f7ff fe91 	bl	8010f48 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8011226:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 8011228:	2800      	cmp	r0, #0
 801122a:	d05f      	beq.n	80112ec <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 801122c:	8963      	ldrh	r3, [r4, #10]
 801122e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011232:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011236:	1a1f      	subs	r7, r3, r0
 8011238:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 801123c:	b202      	sxth	r2, r0
 801123e:	2500      	movs	r5, #0
 8011240:	b21b      	sxth	r3, r3
 8011242:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 8011246:	1a09      	subs	r1, r1, r0
 8011248:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 801124c:	9506      	str	r5, [sp, #24]
 801124e:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011252:	f8ad 5020 	strh.w	r5, [sp, #32]
 8011256:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 801125a:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 801125e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8011262:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8011266:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801126a:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801126e:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8011272:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8011276:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801127a:	af04      	add	r7, sp, #16
 801127c:	ab06      	add	r3, sp, #24
 801127e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8011282:	e893 0003 	ldmia.w	r3, {r0, r1}
 8011286:	e887 0003 	stmia.w	r7, {r0, r1}
 801128a:	4631      	mov	r1, r6
 801128c:	4638      	mov	r0, r7
 801128e:	f7fe fa91 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 8011292:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011296:	2b00      	cmp	r3, #0
 8011298:	dd12      	ble.n	80112c0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801129a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801129e:	2b00      	cmp	r3, #0
 80112a0:	dd0e      	ble.n	80112c0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80112a2:	6823      	ldr	r3, [r4, #0]
 80112a4:	4639      	mov	r1, r7
 80112a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80112a8:	4620      	mov	r0, r4
 80112aa:	4798      	blx	r3
 80112ac:	f7f7 ff00 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 80112b0:	6803      	ldr	r3, [r0, #0]
 80112b2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80112b4:	f8d3 8020 	ldr.w	r8, [r3, #32]
 80112b8:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80112bc:	4639      	mov	r1, r7
 80112be:	47c0      	blx	r8
 80112c0:	3501      	adds	r5, #1
 80112c2:	2d04      	cmp	r5, #4
 80112c4:	d1da      	bne.n	801127c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 80112c6:	e011      	b.n	80112ec <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80112c8:	6830      	ldr	r0, [r6, #0]
 80112ca:	6871      	ldr	r1, [r6, #4]
 80112cc:	ab06      	add	r3, sp, #24
 80112ce:	c303      	stmia	r3!, {r0, r1}
 80112d0:	6823      	ldr	r3, [r4, #0]
 80112d2:	a906      	add	r1, sp, #24
 80112d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80112d6:	4620      	mov	r0, r4
 80112d8:	4798      	blx	r3
 80112da:	f7f7 fee9 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 80112de:	6803      	ldr	r3, [r0, #0]
 80112e0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80112e2:	6a1d      	ldr	r5, [r3, #32]
 80112e4:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80112e8:	a906      	add	r1, sp, #24
 80112ea:	47a8      	blx	r5
 80112ec:	b00e      	add	sp, #56	@ 0x38
 80112ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080112f2 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80112f2:	4770      	bx	lr

080112f4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80112f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80112f8:	461c      	mov	r4, r3
 80112fa:	4606      	mov	r6, r0
 80112fc:	9f06      	ldr	r7, [sp, #24]
 80112fe:	f7ff fe4b 	bl	8010f98 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8011302:	8823      	ldrh	r3, [r4, #0]
 8011304:	86b3      	strh	r3, [r6, #52]	@ 0x34
 8011306:	883b      	ldrh	r3, [r7, #0]
 8011308:	86f3      	strh	r3, [r6, #54]	@ 0x36
 801130a:	4638      	mov	r0, r7
 801130c:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8011310:	f005 f950 	bl	80165b4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011314:	f04f 0802 	mov.w	r8, #2
 8011318:	fb95 f5f8 	sdiv	r5, r5, r8
 801131c:	b2ad      	uxth	r5, r5
 801131e:	fb90 f0f8 	sdiv	r0, r0, r8
 8011322:	1a2d      	subs	r5, r5, r0
 8011324:	8735      	strh	r5, [r6, #56]	@ 0x38
 8011326:	4638      	mov	r0, r7
 8011328:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801132c:	fb94 f4f8 	sdiv	r4, r4, r8
 8011330:	f005 f974 	bl	801661c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011334:	b2a4      	uxth	r4, r4
 8011336:	fb90 f0f8 	sdiv	r0, r0, r8
 801133a:	1a24      	subs	r4, r4, r0
 801133c:	8774      	strh	r4, [r6, #58]	@ 0x3a
 801133e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08011344 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8011344:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011348:	4604      	mov	r4, r0
 801134a:	b08c      	sub	sp, #48	@ 0x30
 801134c:	460d      	mov	r5, r1
 801134e:	f7ff fe55 	bl	8010ffc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8011352:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8011356:	2b00      	cmp	r3, #0
 8011358:	d05d      	beq.n	8011416 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801135a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801135c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011360:	a805      	add	r0, sp, #20
 8011362:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	@ 0x38
 8011366:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	@ 0x3a
 801136a:	f005 f923 	bl	80165b4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801136e:	4606      	mov	r6, r0
 8011370:	a805      	add	r0, sp, #20
 8011372:	f005 f953 	bl	801661c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011376:	6869      	ldr	r1, [r5, #4]
 8011378:	f8ad 001e 	strh.w	r0, [sp, #30]
 801137c:	6828      	ldr	r0, [r5, #0]
 801137e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8011382:	ab08      	add	r3, sp, #32
 8011384:	ad08      	add	r5, sp, #32
 8011386:	c303      	stmia	r3!, {r0, r1}
 8011388:	a906      	add	r1, sp, #24
 801138a:	4628      	mov	r0, r5
 801138c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011390:	f8ad 601c 	strh.w	r6, [sp, #28]
 8011394:	f7fe fa0e 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 8011398:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801139c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80113a0:	429a      	cmp	r2, r3
 80113a2:	d035      	beq.n	8011410 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80113a4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80113a8:	2b00      	cmp	r3, #0
 80113aa:	dd31      	ble.n	8011410 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80113ac:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
 80113b0:	2b00      	cmp	r3, #0
 80113b2:	dd2d      	ble.n	8011410 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80113b4:	2300      	movs	r3, #0
 80113b6:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 80113ba:	6823      	ldr	r3, [r4, #0]
 80113bc:	a90a      	add	r1, sp, #40	@ 0x28
 80113be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80113c0:	4620      	mov	r0, r4
 80113c2:	4798      	blx	r3
 80113c4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80113c8:	8f22      	ldrh	r2, [r4, #56]	@ 0x38
 80113ca:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 80113ce:	1a9b      	subs	r3, r3, r2
 80113d0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80113d4:	8f63      	ldrh	r3, [r4, #58]	@ 0x3a
 80113d6:	1ac9      	subs	r1, r1, r3
 80113d8:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 80113dc:	490f      	ldr	r1, [pc, #60]	@ (801141c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80113de:	6809      	ldr	r1, [r1, #0]
 80113e0:	f891 0058 	ldrb.w	r0, [r1, #88]	@ 0x58
 80113e4:	b108      	cbz	r0, 80113ea <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80113e6:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
 80113e8:	b900      	cbnz	r0, 80113ec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80113ea:	6888      	ldr	r0, [r1, #8]
 80113ec:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 80113f0:	440b      	add	r3, r1
 80113f2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 80113f6:	2601      	movs	r6, #1
 80113f8:	440a      	add	r2, r1
 80113fa:	6801      	ldr	r1, [r0, #0]
 80113fc:	9602      	str	r6, [sp, #8]
 80113fe:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 8011402:	e9cd 5400 	strd	r5, r4, [sp]
 8011406:	b21b      	sxth	r3, r3
 8011408:	688c      	ldr	r4, [r1, #8]
 801140a:	b212      	sxth	r2, r2
 801140c:	a905      	add	r1, sp, #20
 801140e:	47a0      	blx	r4
 8011410:	b00c      	add	sp, #48	@ 0x30
 8011412:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011416:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8011418:	e7a0      	b.n	801135c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801141a:	bf00      	nop
 801141c:	200023a8 	.word	0x200023a8

08011420 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8011420:	b510      	push	{r4, lr}
 8011422:	2101      	movs	r1, #1
 8011424:	2200      	movs	r2, #0
 8011426:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 801142a:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 801142e:	4c0e      	ldr	r4, [pc, #56]	@ (8011468 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8011430:	8082      	strh	r2, [r0, #4]
 8011432:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8011436:	80c2      	strh	r2, [r0, #6]
 8011438:	8102      	strh	r2, [r0, #8]
 801143a:	8142      	strh	r2, [r0, #10]
 801143c:	8182      	strh	r2, [r0, #12]
 801143e:	81c2      	strh	r2, [r0, #14]
 8011440:	8202      	strh	r2, [r0, #16]
 8011442:	8242      	strh	r2, [r0, #18]
 8011444:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011448:	61c2      	str	r2, [r0, #28]
 801144a:	8402      	strh	r2, [r0, #32]
 801144c:	8442      	strh	r2, [r0, #34]	@ 0x22
 801144e:	6282      	str	r2, [r0, #40]	@ 0x28
 8011450:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 8011454:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 8011456:	8601      	strh	r1, [r0, #48]	@ 0x30
 8011458:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 801145c:	6004      	str	r4, [r0, #0]
 801145e:	8681      	strh	r1, [r0, #52]	@ 0x34
 8011460:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8011462:	8702      	strh	r2, [r0, #56]	@ 0x38
 8011464:	8742      	strh	r2, [r0, #58]	@ 0x3a
 8011466:	bd10      	pop	{r4, pc}
 8011468:	08029a7c 	.word	0x08029a7c

0801146c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801146c:	b570      	push	{r4, r5, r6, lr}
 801146e:	880b      	ldrh	r3, [r1, #0]
 8011470:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8011472:	4604      	mov	r4, r0
 8011474:	4608      	mov	r0, r1
 8011476:	460d      	mov	r5, r1
 8011478:	f005 f89c 	bl	80165b4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801147c:	4606      	mov	r6, r0
 801147e:	4628      	mov	r0, r5
 8011480:	f005 f8cc 	bl	801661c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011484:	6823      	ldr	r3, [r4, #0]
 8011486:	4605      	mov	r5, r0
 8011488:	4631      	mov	r1, r6
 801148a:	4620      	mov	r0, r4
 801148c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801148e:	4798      	blx	r3
 8011490:	6823      	ldr	r3, [r4, #0]
 8011492:	4629      	mov	r1, r5
 8011494:	4620      	mov	r0, r4
 8011496:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011498:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801149c:	4718      	bx	r3

0801149e <_ZNK8touchgfx5Image12getSolidRectEv>:
 801149e:	b510      	push	{r4, lr}
 80114a0:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 80114a4:	2bff      	cmp	r3, #255	@ 0xff
 80114a6:	4604      	mov	r4, r0
 80114a8:	d006      	beq.n	80114b8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80114aa:	2300      	movs	r3, #0
 80114ac:	8003      	strh	r3, [r0, #0]
 80114ae:	8043      	strh	r3, [r0, #2]
 80114b0:	8083      	strh	r3, [r0, #4]
 80114b2:	80c3      	strh	r3, [r0, #6]
 80114b4:	4620      	mov	r0, r4
 80114b6:	bd10      	pop	{r4, pc}
 80114b8:	3126      	adds	r1, #38	@ 0x26
 80114ba:	f005 f8e3 	bl	8016684 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80114be:	e7f9      	b.n	80114b4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080114c0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80114c0:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 80114c4:	b12a      	cbz	r2, 80114d2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80114c6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80114ca:	b112      	cbz	r2, 80114d2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80114cc:	6803      	ldr	r3, [r0, #0]
 80114ce:	695b      	ldr	r3, [r3, #20]
 80114d0:	4718      	bx	r3
 80114d2:	4770      	bx	lr

080114d4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80114d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80114d8:	4604      	mov	r4, r0
 80114da:	b088      	sub	sp, #32
 80114dc:	f854 3b26 	ldr.w	r3, [r4], #38
 80114e0:	2500      	movs	r5, #0
 80114e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80114e4:	460f      	mov	r7, r1
 80114e6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80114ea:	a904      	add	r1, sp, #16
 80114ec:	4606      	mov	r6, r0
 80114ee:	4798      	blx	r3
 80114f0:	4620      	mov	r0, r4
 80114f2:	f005 f85f 	bl	80165b4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80114f6:	4680      	mov	r8, r0
 80114f8:	4620      	mov	r0, r4
 80114fa:	f005 f88f 	bl	801661c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80114fe:	9506      	str	r5, [sp, #24]
 8011500:	ad06      	add	r5, sp, #24
 8011502:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011506:	4639      	mov	r1, r7
 8011508:	4628      	mov	r0, r5
 801150a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801150e:	f7fe f951 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 8011512:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011516:	2b00      	cmp	r3, #0
 8011518:	dd19      	ble.n	801154e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801151a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801151e:	2b00      	cmp	r3, #0
 8011520:	dd15      	ble.n	801154e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8011522:	4b0c      	ldr	r3, [pc, #48]	@ (8011554 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8011524:	681b      	ldr	r3, [r3, #0]
 8011526:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801152a:	b10a      	cbz	r2, 8011530 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801152c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 801152e:	b900      	cbnz	r0, 8011532 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8011530:	6898      	ldr	r0, [r3, #8]
 8011532:	6801      	ldr	r1, [r0, #0]
 8011534:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011538:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801153c:	2701      	movs	r7, #1
 801153e:	9702      	str	r7, [sp, #8]
 8011540:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 8011544:	e9cd 5600 	strd	r5, r6, [sp]
 8011548:	688d      	ldr	r5, [r1, #8]
 801154a:	4621      	mov	r1, r4
 801154c:	47a8      	blx	r5
 801154e:	b008      	add	sp, #32
 8011550:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011554:	200023a8 	.word	0x200023a8

08011558 <_ZN8touchgfx11RadioButton10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8011558:	b570      	push	{r4, r5, r6, lr}
 801155a:	8809      	ldrh	r1, [r1, #0]
 801155c:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 801155e:	8812      	ldrh	r2, [r2, #0]
 8011560:	8602      	strh	r2, [r0, #48]	@ 0x30
 8011562:	881b      	ldrh	r3, [r3, #0]
 8011564:	8643      	strh	r3, [r0, #50]	@ 0x32
 8011566:	9b04      	ldr	r3, [sp, #16]
 8011568:	f100 052e 	add.w	r5, r0, #46	@ 0x2e
 801156c:	881b      	ldrh	r3, [r3, #0]
 801156e:	8683      	strh	r3, [r0, #52]	@ 0x34
 8011570:	4604      	mov	r4, r0
 8011572:	4628      	mov	r0, r5
 8011574:	f005 f81e 	bl	80165b4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011578:	4606      	mov	r6, r0
 801157a:	4628      	mov	r0, r5
 801157c:	f005 f84e 	bl	801661c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011580:	6823      	ldr	r3, [r4, #0]
 8011582:	4605      	mov	r5, r0
 8011584:	4631      	mov	r1, r6
 8011586:	4620      	mov	r0, r4
 8011588:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801158a:	4798      	blx	r3
 801158c:	6823      	ldr	r3, [r4, #0]
 801158e:	4629      	mov	r1, r5
 8011590:	4620      	mov	r0, r4
 8011592:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011594:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011598:	4718      	bx	r3

0801159a <_ZNK8touchgfx11RadioButton17invalidateContentEv>:
 801159a:	f890 2036 	ldrb.w	r2, [r0, #54]	@ 0x36
 801159e:	b12a      	cbz	r2, 80115ac <_ZNK8touchgfx11RadioButton17invalidateContentEv+0x12>
 80115a0:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80115a4:	b112      	cbz	r2, 80115ac <_ZNK8touchgfx11RadioButton17invalidateContentEv+0x12>
 80115a6:	6803      	ldr	r3, [r0, #0]
 80115a8:	695b      	ldr	r3, [r3, #20]
 80115aa:	4718      	bx	r3
 80115ac:	4770      	bx	lr

080115ae <_ZNK8touchgfx11RadioButton27getCurrentlyDisplayedBitmapEv>:
 80115ae:	f890 2037 	ldrb.w	r2, [r0, #55]	@ 0x37
 80115b2:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 80115b6:	b122      	cbz	r2, 80115c2 <_ZNK8touchgfx11RadioButton27getCurrentlyDisplayedBitmapEv+0x14>
 80115b8:	b10b      	cbz	r3, 80115be <_ZNK8touchgfx11RadioButton27getCurrentlyDisplayedBitmapEv+0x10>
 80115ba:	8e80      	ldrh	r0, [r0, #52]	@ 0x34
 80115bc:	4770      	bx	lr
 80115be:	8e40      	ldrh	r0, [r0, #50]	@ 0x32
 80115c0:	4770      	bx	lr
 80115c2:	b10b      	cbz	r3, 80115c8 <_ZNK8touchgfx11RadioButton27getCurrentlyDisplayedBitmapEv+0x1a>
 80115c4:	8e00      	ldrh	r0, [r0, #48]	@ 0x30
 80115c6:	4770      	bx	lr
 80115c8:	8dc0      	ldrh	r0, [r0, #46]	@ 0x2e
 80115ca:	4770      	bx	lr

080115cc <_ZNK8touchgfx11RadioButton4drawERKNS_4RectE>:
 80115cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80115ce:	b08b      	sub	sp, #44	@ 0x2c
 80115d0:	4604      	mov	r4, r0
 80115d2:	460e      	mov	r6, r1
 80115d4:	f7ff ffeb 	bl	80115ae <_ZNK8touchgfx11RadioButton27getCurrentlyDisplayedBitmapEv>
 80115d8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80115dc:	f8ad 0014 	strh.w	r0, [sp, #20]
 80115e0:	b280      	uxth	r0, r0
 80115e2:	4298      	cmp	r0, r3
 80115e4:	d036      	beq.n	8011654 <_ZNK8touchgfx11RadioButton4drawERKNS_4RectE+0x88>
 80115e6:	6823      	ldr	r3, [r4, #0]
 80115e8:	2500      	movs	r5, #0
 80115ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80115ec:	a906      	add	r1, sp, #24
 80115ee:	e9cd 5506 	strd	r5, r5, [sp, #24]
 80115f2:	4620      	mov	r0, r4
 80115f4:	4798      	blx	r3
 80115f6:	a805      	add	r0, sp, #20
 80115f8:	f004 ffdc 	bl	80165b4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80115fc:	4607      	mov	r7, r0
 80115fe:	a805      	add	r0, sp, #20
 8011600:	f005 f80c 	bl	801661c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011604:	9508      	str	r5, [sp, #32]
 8011606:	ad08      	add	r5, sp, #32
 8011608:	f8ad 0026 	strh.w	r0, [sp, #38]	@ 0x26
 801160c:	4631      	mov	r1, r6
 801160e:	4628      	mov	r0, r5
 8011610:	f8ad 7024 	strh.w	r7, [sp, #36]	@ 0x24
 8011614:	f7fe f8ce 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 8011618:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801161c:	2b00      	cmp	r3, #0
 801161e:	dd19      	ble.n	8011654 <_ZNK8touchgfx11RadioButton4drawERKNS_4RectE+0x88>
 8011620:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
 8011624:	2b00      	cmp	r3, #0
 8011626:	dd15      	ble.n	8011654 <_ZNK8touchgfx11RadioButton4drawERKNS_4RectE+0x88>
 8011628:	4b0b      	ldr	r3, [pc, #44]	@ (8011658 <_ZNK8touchgfx11RadioButton4drawERKNS_4RectE+0x8c>)
 801162a:	681b      	ldr	r3, [r3, #0]
 801162c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8011630:	b10a      	cbz	r2, 8011636 <_ZNK8touchgfx11RadioButton4drawERKNS_4RectE+0x6a>
 8011632:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8011634:	b900      	cbnz	r0, 8011638 <_ZNK8touchgfx11RadioButton4drawERKNS_4RectE+0x6c>
 8011636:	6898      	ldr	r0, [r3, #8]
 8011638:	6801      	ldr	r1, [r0, #0]
 801163a:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801163e:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8011642:	2601      	movs	r6, #1
 8011644:	9602      	str	r6, [sp, #8]
 8011646:	f894 4036 	ldrb.w	r4, [r4, #54]	@ 0x36
 801164a:	e9cd 5400 	strd	r5, r4, [sp]
 801164e:	688c      	ldr	r4, [r1, #8]
 8011650:	a905      	add	r1, sp, #20
 8011652:	47a0      	blx	r4
 8011654:	b00b      	add	sp, #44	@ 0x2c
 8011656:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011658:	200023a8 	.word	0x200023a8

0801165c <_ZNK8touchgfx11RadioButton12getSolidRectEv>:
 801165c:	b513      	push	{r0, r1, r4, lr}
 801165e:	f891 3036 	ldrb.w	r3, [r1, #54]	@ 0x36
 8011662:	2bff      	cmp	r3, #255	@ 0xff
 8011664:	4604      	mov	r4, r0
 8011666:	d007      	beq.n	8011678 <_ZNK8touchgfx11RadioButton12getSolidRectEv+0x1c>
 8011668:	2300      	movs	r3, #0
 801166a:	8003      	strh	r3, [r0, #0]
 801166c:	8043      	strh	r3, [r0, #2]
 801166e:	8083      	strh	r3, [r0, #4]
 8011670:	80c3      	strh	r3, [r0, #6]
 8011672:	4620      	mov	r0, r4
 8011674:	b002      	add	sp, #8
 8011676:	bd10      	pop	{r4, pc}
 8011678:	4608      	mov	r0, r1
 801167a:	f7ff ff98 	bl	80115ae <_ZNK8touchgfx11RadioButton27getCurrentlyDisplayedBitmapEv>
 801167e:	a902      	add	r1, sp, #8
 8011680:	f821 0d04 	strh.w	r0, [r1, #-4]!
 8011684:	4620      	mov	r0, r4
 8011686:	f004 fffd 	bl	8016684 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801168a:	e7f2      	b.n	8011672 <_ZNK8touchgfx11RadioButton12getSolidRectEv+0x16>

0801168c <_ZN8touchgfx11RadioButton11setSelectedEb>:
 801168c:	b510      	push	{r4, lr}
 801168e:	f890 3037 	ldrb.w	r3, [r0, #55]	@ 0x37
 8011692:	f880 1037 	strb.w	r1, [r0, #55]	@ 0x37
 8011696:	4604      	mov	r4, r0
 8011698:	b18b      	cbz	r3, 80116be <_ZN8touchgfx11RadioButton11setSelectedEb+0x32>
 801169a:	b951      	cbnz	r1, 80116b2 <_ZN8touchgfx11RadioButton11setSelectedEb+0x26>
 801169c:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 801169e:	b140      	cbz	r0, 80116b2 <_ZN8touchgfx11RadioButton11setSelectedEb+0x26>
 80116a0:	6803      	ldr	r3, [r0, #0]
 80116a2:	68db      	ldr	r3, [r3, #12]
 80116a4:	4798      	blx	r3
 80116a6:	b120      	cbz	r0, 80116b2 <_ZN8touchgfx11RadioButton11setSelectedEb+0x26>
 80116a8:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 80116aa:	6803      	ldr	r3, [r0, #0]
 80116ac:	4621      	mov	r1, r4
 80116ae:	689b      	ldr	r3, [r3, #8]
 80116b0:	4798      	blx	r3
 80116b2:	6823      	ldr	r3, [r4, #0]
 80116b4:	4620      	mov	r0, r4
 80116b6:	695b      	ldr	r3, [r3, #20]
 80116b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80116bc:	4718      	bx	r3
 80116be:	2900      	cmp	r1, #0
 80116c0:	d0f7      	beq.n	80116b2 <_ZN8touchgfx11RadioButton11setSelectedEb+0x26>
 80116c2:	6823      	ldr	r3, [r4, #0]
 80116c4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80116c6:	4798      	blx	r3
 80116c8:	e7f3      	b.n	80116b2 <_ZN8touchgfx11RadioButton11setSelectedEb+0x26>

080116ca <_ZN8touchgfx11RadioButton16handleClickEventERKNS_10ClickEventE>:
 80116ca:	b570      	push	{r4, r5, r6, lr}
 80116cc:	790b      	ldrb	r3, [r1, #4]
 80116ce:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 80116d2:	2b00      	cmp	r3, #0
 80116d4:	bf0c      	ite	eq
 80116d6:	2301      	moveq	r3, #1
 80116d8:	2300      	movne	r3, #0
 80116da:	4604      	mov	r4, r0
 80116dc:	460e      	mov	r6, r1
 80116de:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 80116e2:	d10f      	bne.n	8011704 <_ZN8touchgfx11RadioButton16handleClickEventERKNS_10ClickEventE+0x3a>
 80116e4:	b17d      	cbz	r5, 8011706 <_ZN8touchgfx11RadioButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80116e6:	7931      	ldrb	r1, [r6, #4]
 80116e8:	2901      	cmp	r1, #1
 80116ea:	d112      	bne.n	8011712 <_ZN8touchgfx11RadioButton16handleClickEventERKNS_10ClickEventE+0x48>
 80116ec:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 80116f0:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 80116f4:	b172      	cbz	r2, 8011714 <_ZN8touchgfx11RadioButton16handleClickEventERKNS_10ClickEventE+0x4a>
 80116f6:	f083 0101 	eor.w	r1, r3, #1
 80116fa:	4620      	mov	r0, r4
 80116fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011700:	f7ff bfc4 	b.w	801168c <_ZN8touchgfx11RadioButton11setSelectedEb>
 8011704:	b12d      	cbz	r5, 8011712 <_ZN8touchgfx11RadioButton16handleClickEventERKNS_10ClickEventE+0x48>
 8011706:	6823      	ldr	r3, [r4, #0]
 8011708:	4620      	mov	r0, r4
 801170a:	695b      	ldr	r3, [r3, #20]
 801170c:	4798      	blx	r3
 801170e:	2d00      	cmp	r5, #0
 8011710:	d1e9      	bne.n	80116e6 <_ZN8touchgfx11RadioButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8011712:	bd70      	pop	{r4, r5, r6, pc}
 8011714:	2b00      	cmp	r3, #0
 8011716:	d1fc      	bne.n	8011712 <_ZN8touchgfx11RadioButton16handleClickEventERKNS_10ClickEventE+0x48>
 8011718:	e7ef      	b.n	80116fa <_ZN8touchgfx11RadioButton16handleClickEventERKNS_10ClickEventE+0x30>

0801171a <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 801171a:	b510      	push	{r4, lr}
 801171c:	6803      	ldr	r3, [r0, #0]
 801171e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011720:	460c      	mov	r4, r1
 8011722:	4798      	blx	r3
 8011724:	1b03      	subs	r3, r0, r4
 8011726:	4258      	negs	r0, r3
 8011728:	4158      	adcs	r0, r3
 801172a:	bd10      	pop	{r4, pc}

0801172c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801172c:	4b01      	ldr	r3, [pc, #4]	@ (8011734 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801172e:	6019      	str	r1, [r3, #0]
 8011730:	4770      	bx	lr
 8011732:	bf00      	nop
 8011734:	200023b0 	.word	0x200023b0

08011738 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8011738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801173c:	4696      	mov	lr, r2
 801173e:	4605      	mov	r5, r0
 8011740:	4614      	mov	r4, r2
 8011742:	460e      	mov	r6, r1
 8011744:	461f      	mov	r7, r3
 8011746:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801174a:	b097      	sub	sp, #92	@ 0x5c
 801174c:	f10d 0c1c 	add.w	ip, sp, #28
 8011750:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011754:	f8de 3000 	ldr.w	r3, [lr]
 8011758:	f8cc 3000 	str.w	r3, [ip]
 801175c:	f104 0e14 	add.w	lr, r4, #20
 8011760:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8011764:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8011768:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801176c:	f8de 3000 	ldr.w	r3, [lr]
 8011770:	f8cc 3000 	str.w	r3, [ip]
 8011774:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8011778:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801177c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8011780:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011784:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 8011788:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 801178c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 8011790:	f8de 3000 	ldr.w	r3, [lr]
 8011794:	f8cc 3000 	str.w	r3, [ip]
 8011798:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801179a:	682b      	ldr	r3, [r5, #0]
 801179c:	9201      	str	r2, [sp, #4]
 801179e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80117a2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80117a4:	9200      	str	r2, [sp, #0]
 80117a6:	f8cd 8008 	str.w	r8, [sp, #8]
 80117aa:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 80117ae:	aa07      	add	r2, sp, #28
 80117b0:	463b      	mov	r3, r7
 80117b2:	4631      	mov	r1, r6
 80117b4:	4628      	mov	r0, r5
 80117b6:	47d8      	blx	fp
 80117b8:	46a6      	mov	lr, r4
 80117ba:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80117be:	f10d 0c1c 	add.w	ip, sp, #28
 80117c2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80117c6:	f8de 3000 	ldr.w	r3, [lr]
 80117ca:	f8cc 3000 	str.w	r3, [ip]
 80117ce:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 80117d2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80117d6:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80117da:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80117de:	343c      	adds	r4, #60	@ 0x3c
 80117e0:	f8de 3000 	ldr.w	r3, [lr]
 80117e4:	f8cc 3000 	str.w	r3, [ip]
 80117e8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80117ea:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 80117ee:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80117f2:	6823      	ldr	r3, [r4, #0]
 80117f4:	f8cc 3000 	str.w	r3, [ip]
 80117f8:	682b      	ldr	r3, [r5, #0]
 80117fa:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80117fe:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8011800:	9201      	str	r2, [sp, #4]
 8011802:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8011804:	9200      	str	r2, [sp, #0]
 8011806:	f8cd 8008 	str.w	r8, [sp, #8]
 801180a:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 801180c:	aa07      	add	r2, sp, #28
 801180e:	463b      	mov	r3, r7
 8011810:	4631      	mov	r1, r6
 8011812:	4628      	mov	r0, r5
 8011814:	47a0      	blx	r4
 8011816:	b017      	add	sp, #92	@ 0x5c
 8011818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801181c <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801181c:	2000      	movs	r0, #0
 801181e:	4770      	bx	lr

08011820 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8011820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011824:	b08d      	sub	sp, #52	@ 0x34
 8011826:	4688      	mov	r8, r1
 8011828:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801182a:	f8d3 c000 	ldr.w	ip, [r3]
 801182e:	680f      	ldr	r7, [r1, #0]
 8011830:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8011834:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 8011838:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 801183c:	edd3 6a07 	vldr	s13, [r3, #28]
 8011840:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8011842:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 8011846:	f9b1 9000 	ldrsh.w	r9, [r1]
 801184a:	f9ba 1000 	ldrsh.w	r1, [sl]
 801184e:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8011852:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 8011856:	eba7 070c 	sub.w	r7, r7, ip
 801185a:	42bc      	cmp	r4, r7
 801185c:	bfa8      	it	ge
 801185e:	463c      	movge	r4, r7
 8011860:	ee07 4a90 	vmov	s15, r4
 8011864:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8011868:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 801186c:	ee25 4a04 	vmul.f32	s8, s10, s8
 8011870:	ee65 4a24 	vmul.f32	s9, s10, s9
 8011874:	ee25 5a27 	vmul.f32	s10, s10, s15
 8011878:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 801187c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8011880:	eb09 0e0c 	add.w	lr, r9, ip
 8011884:	4571      	cmp	r1, lr
 8011886:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801188a:	ee32 1a05 	vadd.f32	s2, s4, s10
 801188e:	ee36 0a84 	vadd.f32	s0, s13, s8
 8011892:	ee61 1a87 	vmul.f32	s3, s3, s14
 8011896:	ee22 2a07 	vmul.f32	s4, s4, s14
 801189a:	f340 808d 	ble.w	80119b8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801189e:	eba1 060e 	sub.w	r6, r1, lr
 80118a2:	fb96 f5f4 	sdiv	r5, r6, r4
 80118a6:	ee07 5a10 	vmov	s14, r5
 80118aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80118ae:	2d00      	cmp	r5, #0
 80118b0:	fb04 6615 	mls	r6, r4, r5, r6
 80118b4:	eea7 0a04 	vfma.f32	s0, s14, s8
 80118b8:	eee7 0a24 	vfma.f32	s1, s14, s9
 80118bc:	eea7 1a05 	vfma.f32	s2, s14, s10
 80118c0:	dd13      	ble.n	80118ea <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80118c2:	ee70 6a44 	vsub.f32	s13, s0, s8
 80118c6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80118ca:	eef5 6a40 	vcmp.f32	s13, #0.0
 80118ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80118d2:	bf18      	it	ne
 80118d4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80118d8:	ee31 2a45 	vsub.f32	s4, s2, s10
 80118dc:	bf08      	it	eq
 80118de:	eeb0 7a67 	vmoveq.f32	s14, s15
 80118e2:	ee61 1a87 	vmul.f32	s3, s3, s14
 80118e6:	ee22 2a07 	vmul.f32	s4, s4, s14
 80118ea:	fb05 f204 	mul.w	r2, r5, r4
 80118ee:	1abf      	subs	r7, r7, r2
 80118f0:	4494      	add	ip, r2
 80118f2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80118f6:	4411      	add	r1, r2
 80118f8:	eb09 020c 	add.w	r2, r9, ip
 80118fc:	443a      	add	r2, r7
 80118fe:	b209      	sxth	r1, r1
 8011900:	428a      	cmp	r2, r1
 8011902:	bfc4      	itt	gt
 8011904:	eba1 0209 	subgt.w	r2, r1, r9
 8011908:	eba2 070c 	subgt.w	r7, r2, ip
 801190c:	2f00      	cmp	r7, #0
 801190e:	dd50      	ble.n	80119b2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8011910:	fb97 f1f4 	sdiv	r1, r7, r4
 8011914:	fb04 7211 	mls	r2, r4, r1, r7
 8011918:	b90a      	cbnz	r2, 801191e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 801191a:	3901      	subs	r1, #1
 801191c:	4622      	mov	r2, r4
 801191e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8011922:	6840      	ldr	r0, [r0, #4]
 8011924:	900b      	str	r0, [sp, #44]	@ 0x2c
 8011926:	f8d0 a000 	ldr.w	sl, [r0]
 801192a:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 801192c:	9008      	str	r0, [sp, #32]
 801192e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 8011932:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8011934:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8011938:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 801193c:	695b      	ldr	r3, [r3, #20]
 801193e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8011940:	445b      	add	r3, fp
 8011942:	eef0 6a42 	vmov.f32	s13, s4
 8011946:	ee60 2aa3 	vmul.f32	s5, s1, s7
 801194a:	ee21 3a23 	vmul.f32	s6, s2, s7
 801194e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8011952:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011956:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801195a:	9307      	str	r3, [sp, #28]
 801195c:	ee17 7a90 	vmov	r7, s15
 8011960:	ee73 7a42 	vsub.f32	s15, s6, s4
 8011964:	eeb0 7a61 	vmov.f32	s14, s3
 8011968:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801196c:	ee16 3a90 	vmov	r3, s13
 8011970:	fb97 f7f4 	sdiv	r7, r7, r4
 8011974:	ee17 ca90 	vmov	ip, s15
 8011978:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801197c:	fb9c fcf4 	sdiv	ip, ip, r4
 8011980:	fb0c 3306 	mla	r3, ip, r6, r3
 8011984:	9302      	str	r3, [sp, #8]
 8011986:	ee17 3a10 	vmov	r3, s14
 801198a:	44b6      	add	lr, r6
 801198c:	fb04 e505 	mla	r5, r4, r5, lr
 8011990:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8011994:	fb07 3706 	mla	r7, r7, r6, r3
 8011998:	e9cd 8505 	strd	r8, r5, [sp, #20]
 801199c:	e9cd 4700 	strd	r4, r7, [sp]
 80119a0:	2900      	cmp	r1, #0
 80119a2:	bfcc      	ite	gt
 80119a4:	46a1      	movgt	r9, r4
 80119a6:	4691      	movle	r9, r2
 80119a8:	eba9 0306 	sub.w	r3, r9, r6
 80119ac:	f8da 4008 	ldr.w	r4, [sl, #8]
 80119b0:	47a0      	blx	r4
 80119b2:	b00d      	add	sp, #52	@ 0x34
 80119b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119b8:	2500      	movs	r5, #0
 80119ba:	462e      	mov	r6, r5
 80119bc:	e799      	b.n	80118f2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080119c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80119c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119c4:	b0db      	sub	sp, #364	@ 0x16c
 80119c6:	461d      	mov	r5, r3
 80119c8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 80119cc:	930a      	str	r3, [sp, #40]	@ 0x28
 80119ce:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 80119d2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80119d4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 80119d8:	9310      	str	r3, [sp, #64]	@ 0x40
 80119da:	6803      	ldr	r3, [r0, #0]
 80119dc:	910f      	str	r1, [sp, #60]	@ 0x3c
 80119de:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 80119e0:	9009      	str	r0, [sp, #36]	@ 0x24
 80119e2:	4614      	mov	r4, r2
 80119e4:	4629      	mov	r1, r5
 80119e6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 80119ea:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 80119ee:	47b8      	blx	r7
 80119f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80119f2:	6058      	str	r0, [r3, #4]
 80119f4:	2800      	cmp	r0, #0
 80119f6:	f000 83a1 	beq.w	801213c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80119fa:	682b      	ldr	r3, [r5, #0]
 80119fc:	9314      	str	r3, [sp, #80]	@ 0x50
 80119fe:	686b      	ldr	r3, [r5, #4]
 8011a00:	9315      	str	r3, [sp, #84]	@ 0x54
 8011a02:	4bc4      	ldr	r3, [pc, #784]	@ (8011d14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8011a04:	ed94 7a02 	vldr	s14, [r4, #8]
 8011a08:	7819      	ldrb	r1, [r3, #0]
 8011a0a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8011a0e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 8011a12:	2900      	cmp	r1, #0
 8011a14:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8011a18:	bf16      	itet	ne
 8011a1a:	4619      	movne	r1, r3
 8011a1c:	4611      	moveq	r1, r2
 8011a1e:	4613      	movne	r3, r2
 8011a20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011a24:	9116      	str	r1, [sp, #88]	@ 0x58
 8011a26:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 8011a2a:	f240 8387 	bls.w	801213c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011a2e:	ed94 7a07 	vldr	s14, [r4, #28]
 8011a32:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8011a36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011a3a:	f240 837f 	bls.w	801213c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011a3e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 8011a42:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8011a46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011a4a:	f240 8377 	bls.w	801213c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011a4e:	6822      	ldr	r2, [r4, #0]
 8011a50:	4bb1      	ldr	r3, [pc, #708]	@ (8011d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8011a52:	429a      	cmp	r2, r3
 8011a54:	f2c0 8372 	blt.w	801213c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011a58:	49b0      	ldr	r1, [pc, #704]	@ (8011d1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8011a5a:	6963      	ldr	r3, [r4, #20]
 8011a5c:	428a      	cmp	r2, r1
 8011a5e:	f300 836d 	bgt.w	801213c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011a62:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8011a66:	48ae      	ldr	r0, [pc, #696]	@ (8011d20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8011a68:	33ff      	adds	r3, #255	@ 0xff
 8011a6a:	4283      	cmp	r3, r0
 8011a6c:	f200 8366 	bhi.w	801213c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011a70:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8011a72:	4dac      	ldr	r5, [pc, #688]	@ (8011d24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8011a74:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8011a78:	33ff      	adds	r3, #255	@ 0xff
 8011a7a:	42ab      	cmp	r3, r5
 8011a7c:	f200 835e 	bhi.w	801213c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011a80:	6862      	ldr	r2, [r4, #4]
 8011a82:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 8011a86:	33ff      	adds	r3, #255	@ 0xff
 8011a88:	4283      	cmp	r3, r0
 8011a8a:	f200 8357 	bhi.w	801213c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011a8e:	69a1      	ldr	r1, [r4, #24]
 8011a90:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8011a94:	33ff      	adds	r3, #255	@ 0xff
 8011a96:	4283      	cmp	r3, r0
 8011a98:	f200 8350 	bhi.w	801213c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011a9c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8011a9e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8011aa2:	30ff      	adds	r0, #255	@ 0xff
 8011aa4:	42a8      	cmp	r0, r5
 8011aa6:	f200 8349 	bhi.w	801213c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011aaa:	428a      	cmp	r2, r1
 8011aac:	f280 8110 	bge.w	8011cd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8011ab0:	429a      	cmp	r2, r3
 8011ab2:	f300 8119 	bgt.w	8011ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8011ab6:	4299      	cmp	r1, r3
 8011ab8:	f280 811d 	bge.w	8011cf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8011abc:	2502      	movs	r5, #2
 8011abe:	2701      	movs	r7, #1
 8011ac0:	46a9      	mov	r9, r5
 8011ac2:	46b8      	mov	r8, r7
 8011ac4:	f04f 0a00 	mov.w	sl, #0
 8011ac8:	4621      	mov	r1, r4
 8011aca:	a849      	add	r0, sp, #292	@ 0x124
 8011acc:	f003 fcfc 	bl	80154c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8011ad0:	4622      	mov	r2, r4
 8011ad2:	4653      	mov	r3, sl
 8011ad4:	a949      	add	r1, sp, #292	@ 0x124
 8011ad6:	f8cd 9000 	str.w	r9, [sp]
 8011ada:	a819      	add	r0, sp, #100	@ 0x64
 8011adc:	f003 fe24 	bl	8015728 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011ae0:	4622      	mov	r2, r4
 8011ae2:	4653      	mov	r3, sl
 8011ae4:	a949      	add	r1, sp, #292	@ 0x124
 8011ae6:	f8cd 8000 	str.w	r8, [sp]
 8011aea:	a829      	add	r0, sp, #164	@ 0xa4
 8011aec:	f003 fe1c 	bl	8015728 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011af0:	4643      	mov	r3, r8
 8011af2:	4622      	mov	r2, r4
 8011af4:	a949      	add	r1, sp, #292	@ 0x124
 8011af6:	f8cd 9000 	str.w	r9, [sp]
 8011afa:	a839      	add	r0, sp, #228	@ 0xe4
 8011afc:	f003 fe14 	bl	8015728 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011b00:	42af      	cmp	r7, r5
 8011b02:	bfb5      	itete	lt
 8011b04:	2300      	movlt	r3, #0
 8011b06:	2301      	movge	r3, #1
 8011b08:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8011b0a:	930e      	strge	r3, [sp, #56]	@ 0x38
 8011b0c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8011b0e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8011b12:	af12      	add	r7, sp, #72	@ 0x48
 8011b14:	bfb9      	ittee	lt
 8011b16:	ad29      	addlt	r5, sp, #164	@ 0xa4
 8011b18:	ac19      	addlt	r4, sp, #100	@ 0x64
 8011b1a:	ad19      	addge	r5, sp, #100	@ 0x64
 8011b1c:	ac29      	addge	r4, sp, #164	@ 0xa4
 8011b1e:	e887 0003 	stmia.w	r7, {r0, r1}
 8011b22:	b928      	cbnz	r0, 8011b30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8011b24:	4b80      	ldr	r3, [pc, #512]	@ (8011d28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8011b26:	6818      	ldr	r0, [r3, #0]
 8011b28:	6803      	ldr	r3, [r0, #0]
 8011b2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011b2c:	4798      	blx	r3
 8011b2e:	6038      	str	r0, [r7, #0]
 8011b30:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8011b32:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8011b36:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8011b3a:	930c      	str	r3, [sp, #48]	@ 0x30
 8011b3c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8011b3e:	6963      	ldr	r3, [r4, #20]
 8011b40:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 8011b42:	440b      	add	r3, r1
 8011b44:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8011b48:	4408      	add	r0, r1
 8011b4a:	b200      	sxth	r0, r0
 8011b4c:	4283      	cmp	r3, r0
 8011b4e:	900d      	str	r0, [sp, #52]	@ 0x34
 8011b50:	f280 80dd 	bge.w	8011d0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8011b54:	428b      	cmp	r3, r1
 8011b56:	da08      	bge.n	8011b6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8011b58:	2a00      	cmp	r2, #0
 8011b5a:	dd06      	ble.n	8011b6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8011b5c:	1acb      	subs	r3, r1, r3
 8011b5e:	429a      	cmp	r2, r3
 8011b60:	f2c0 80e4 	blt.w	8011d2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8011b64:	2b00      	cmp	r3, #0
 8011b66:	f300 80e2 	bgt.w	8011d2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8011b6a:	6967      	ldr	r7, [r4, #20]
 8011b6c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8011b6e:	443b      	add	r3, r7
 8011b70:	461f      	mov	r7, r3
 8011b72:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011b74:	1bdf      	subs	r7, r3, r7
 8011b76:	4297      	cmp	r7, r2
 8011b78:	bfa8      	it	ge
 8011b7a:	4617      	movge	r7, r2
 8011b7c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8011b80:	2f00      	cmp	r7, #0
 8011b82:	f340 8166 	ble.w	8011e52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8011b86:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8011b88:	6829      	ldr	r1, [r5, #0]
 8011b8a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011b8e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8011b92:	6820      	ldr	r0, [r4, #0]
 8011b94:	4411      	add	r1, r2
 8011b96:	4299      	cmp	r1, r3
 8011b98:	dd1a      	ble.n	8011bd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8011b9a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8011b9e:	440b      	add	r3, r1
 8011ba0:	4402      	add	r2, r0
 8011ba2:	b21b      	sxth	r3, r3
 8011ba4:	429a      	cmp	r2, r3
 8011ba6:	dc13      	bgt.n	8011bd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8011ba8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011baa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011bac:	681b      	ldr	r3, [r3, #0]
 8011bae:	9206      	str	r2, [sp, #24]
 8011bb0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8011bb2:	9205      	str	r2, [sp, #20]
 8011bb4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8011bb6:	9500      	str	r5, [sp, #0]
 8011bb8:	e9cd b203 	strd	fp, r2, [sp, #12]
 8011bbc:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8011bbe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8011bc0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8011bc4:	a912      	add	r1, sp, #72	@ 0x48
 8011bc6:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8011bca:	aa49      	add	r2, sp, #292	@ 0x124
 8011bcc:	4623      	mov	r3, r4
 8011bce:	47c8      	blx	r9
 8011bd0:	e9d4 2300 	ldrd	r2, r3, [r4]
 8011bd4:	441a      	add	r2, r3
 8011bd6:	6963      	ldr	r3, [r4, #20]
 8011bd8:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8011bdc:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8011be0:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8011be4:	68a1      	ldr	r1, [r4, #8]
 8011be6:	ed94 6a08 	vldr	s12, [r4, #32]
 8011bea:	6022      	str	r2, [r4, #0]
 8011bec:	3301      	adds	r3, #1
 8011bee:	6163      	str	r3, [r4, #20]
 8011bf0:	69a3      	ldr	r3, [r4, #24]
 8011bf2:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011bf6:	3b01      	subs	r3, #1
 8011bf8:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8011bfc:	61a3      	str	r3, [r4, #24]
 8011bfe:	6923      	ldr	r3, [r4, #16]
 8011c00:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8011c04:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011c08:	edd4 6a07 	vldr	s13, [r4, #28]
 8011c0c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8011c10:	440b      	add	r3, r1
 8011c12:	68e1      	ldr	r1, [r4, #12]
 8011c14:	6123      	str	r3, [r4, #16]
 8011c16:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011c1a:	428b      	cmp	r3, r1
 8011c1c:	edc4 6a07 	vstr	s13, [r4, #28]
 8011c20:	db15      	blt.n	8011c4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8011c22:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8011c26:	ee76 6a26 	vadd.f32	s13, s12, s13
 8011c2a:	3201      	adds	r2, #1
 8011c2c:	edc4 6a07 	vstr	s13, [r4, #28]
 8011c30:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8011c34:	6022      	str	r2, [r4, #0]
 8011c36:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011c3a:	1a5b      	subs	r3, r3, r1
 8011c3c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8011c40:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8011c44:	6123      	str	r3, [r4, #16]
 8011c46:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011c4a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8011c4e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8011c52:	441a      	add	r2, r3
 8011c54:	696b      	ldr	r3, [r5, #20]
 8011c56:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8011c5a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8011c5e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8011c62:	68a9      	ldr	r1, [r5, #8]
 8011c64:	ed95 6a08 	vldr	s12, [r5, #32]
 8011c68:	602a      	str	r2, [r5, #0]
 8011c6a:	3301      	adds	r3, #1
 8011c6c:	616b      	str	r3, [r5, #20]
 8011c6e:	69ab      	ldr	r3, [r5, #24]
 8011c70:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011c74:	3b01      	subs	r3, #1
 8011c76:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8011c7a:	61ab      	str	r3, [r5, #24]
 8011c7c:	692b      	ldr	r3, [r5, #16]
 8011c7e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8011c82:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011c86:	edd5 6a07 	vldr	s13, [r5, #28]
 8011c8a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8011c8e:	440b      	add	r3, r1
 8011c90:	68e9      	ldr	r1, [r5, #12]
 8011c92:	612b      	str	r3, [r5, #16]
 8011c94:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011c98:	428b      	cmp	r3, r1
 8011c9a:	edc5 6a07 	vstr	s13, [r5, #28]
 8011c9e:	db15      	blt.n	8011ccc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8011ca0:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8011ca4:	ee76 6a26 	vadd.f32	s13, s12, s13
 8011ca8:	3201      	adds	r2, #1
 8011caa:	edc5 6a07 	vstr	s13, [r5, #28]
 8011cae:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8011cb2:	602a      	str	r2, [r5, #0]
 8011cb4:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011cb8:	1a5b      	subs	r3, r3, r1
 8011cba:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8011cbe:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8011cc2:	612b      	str	r3, [r5, #16]
 8011cc4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011cc8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8011ccc:	3f01      	subs	r7, #1
 8011cce:	e757      	b.n	8011b80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8011cd0:	4299      	cmp	r1, r3
 8011cd2:	dc13      	bgt.n	8011cfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8011cd4:	429a      	cmp	r2, r3
 8011cd6:	da14      	bge.n	8011d02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8011cd8:	2502      	movs	r5, #2
 8011cda:	2703      	movs	r7, #3
 8011cdc:	46a9      	mov	r9, r5
 8011cde:	f04f 0800 	mov.w	r8, #0
 8011ce2:	f04f 0a01 	mov.w	sl, #1
 8011ce6:	e6ef      	b.n	8011ac8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8011ce8:	2501      	movs	r5, #1
 8011cea:	2700      	movs	r7, #0
 8011cec:	46a9      	mov	r9, r5
 8011cee:	46b8      	mov	r8, r7
 8011cf0:	f04f 0a02 	mov.w	sl, #2
 8011cf4:	e6e8      	b.n	8011ac8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8011cf6:	2501      	movs	r5, #1
 8011cf8:	2702      	movs	r7, #2
 8011cfa:	e6e1      	b.n	8011ac0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8011cfc:	2500      	movs	r5, #0
 8011cfe:	2701      	movs	r7, #1
 8011d00:	e7f4      	b.n	8011cec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8011d02:	2702      	movs	r7, #2
 8011d04:	2503      	movs	r5, #3
 8011d06:	f04f 0900 	mov.w	r9, #0
 8011d0a:	46b8      	mov	r8, r7
 8011d0c:	e7e9      	b.n	8011ce2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8011d0e:	4613      	mov	r3, r2
 8011d10:	e728      	b.n	8011b64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8011d12:	bf00      	nop
 8011d14:	200023a0 	.word	0x200023a0
 8011d18:	fffd8f01 	.word	0xfffd8f01
 8011d1c:	00027100 	.word	0x00027100
 8011d20:	0004e1ff 	.word	0x0004e1ff
 8011d24:	0004e1fe 	.word	0x0004e1fe
 8011d28:	200023a8 	.word	0x200023a8
 8011d2c:	4613      	mov	r3, r2
 8011d2e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8011d30:	9111      	str	r1, [sp, #68]	@ 0x44
 8011d32:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 8011d36:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 8011d3a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 8011d3c:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 8011d40:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 8011d44:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 8011d48:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 8011d4c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 8011d50:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8011d54:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 8011d58:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 8011d5c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8011d60:	469e      	mov	lr, r3
 8011d62:	469c      	mov	ip, r3
 8011d64:	f04f 0900 	mov.w	r9, #0
 8011d68:	f1bc 0f00 	cmp.w	ip, #0
 8011d6c:	d147      	bne.n	8011dfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8011d6e:	eb03 0c07 	add.w	ip, r3, r7
 8011d72:	1ad7      	subs	r7, r2, r3
 8011d74:	f1b9 0f00 	cmp.w	r9, #0
 8011d78:	d009      	beq.n	8011d8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8011d7a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8011d7e:	9029      	str	r0, [sp, #164]	@ 0xa4
 8011d80:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8011d84:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 8011d88:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8011d8c:	912d      	str	r1, [sp, #180]	@ 0xb4
 8011d8e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8011d90:	9111      	str	r1, [sp, #68]	@ 0x44
 8011d92:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8011d96:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8011d9a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8011d9e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8011da2:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8011da6:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8011daa:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8011dae:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8011db2:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8011db6:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8011dba:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8011dbe:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8011dc2:	f04f 0800 	mov.w	r8, #0
 8011dc6:	f1be 0f00 	cmp.w	lr, #0
 8011dca:	d031      	beq.n	8011e30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8011dcc:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8011dce:	4431      	add	r1, r6
 8011dd0:	4549      	cmp	r1, r9
 8011dd2:	4450      	add	r0, sl
 8011dd4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8011dd8:	ee37 7a04 	vadd.f32	s14, s14, s8
 8011ddc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8011de0:	db08      	blt.n	8011df4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8011de2:	ee77 7a85 	vadd.f32	s15, s15, s10
 8011de6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8011dea:	ee37 7a06 	vadd.f32	s14, s14, s12
 8011dee:	3001      	adds	r0, #1
 8011df0:	eba1 0109 	sub.w	r1, r1, r9
 8011df4:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011df8:	f04f 0801 	mov.w	r8, #1
 8011dfc:	e7e3      	b.n	8011dc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8011dfe:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8011e00:	4431      	add	r1, r6
 8011e02:	4541      	cmp	r1, r8
 8011e04:	4450      	add	r0, sl
 8011e06:	ee37 7a24 	vadd.f32	s14, s14, s9
 8011e0a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8011e0e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8011e12:	db08      	blt.n	8011e26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8011e14:	ee76 6a85 	vadd.f32	s13, s13, s10
 8011e18:	ee37 7a25 	vadd.f32	s14, s14, s11
 8011e1c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8011e20:	3001      	adds	r0, #1
 8011e22:	eba1 0108 	sub.w	r1, r1, r8
 8011e26:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011e2a:	f04f 0901 	mov.w	r9, #1
 8011e2e:	e79b      	b.n	8011d68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8011e30:	449c      	add	ip, r3
 8011e32:	1aff      	subs	r7, r7, r3
 8011e34:	f1b8 0f00 	cmp.w	r8, #0
 8011e38:	d009      	beq.n	8011e4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8011e3a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8011e3e:	9019      	str	r0, [sp, #100]	@ 0x64
 8011e40:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8011e44:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8011e48:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8011e4c:	911d      	str	r1, [sp, #116]	@ 0x74
 8011e4e:	1ad2      	subs	r2, r2, r3
 8011e50:	e68b      	b.n	8011b6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8011e52:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011e54:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 8011e56:	2b00      	cmp	r3, #0
 8011e58:	f000 80d1 	beq.w	8011ffe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8011e5c:	ad19      	add	r5, sp, #100	@ 0x64
 8011e5e:	ac39      	add	r4, sp, #228	@ 0xe4
 8011e60:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8011e62:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8011e66:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8011e6a:	930c      	str	r3, [sp, #48]	@ 0x30
 8011e6c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8011e6e:	6963      	ldr	r3, [r4, #20]
 8011e70:	440b      	add	r3, r1
 8011e72:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8011e76:	4408      	add	r0, r1
 8011e78:	b200      	sxth	r0, r0
 8011e7a:	4283      	cmp	r3, r0
 8011e7c:	900d      	str	r0, [sp, #52]	@ 0x34
 8011e7e:	f280 80c1 	bge.w	8012004 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8011e82:	428b      	cmp	r3, r1
 8011e84:	da08      	bge.n	8011e98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8011e86:	2a00      	cmp	r2, #0
 8011e88:	dd06      	ble.n	8011e98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8011e8a:	1acb      	subs	r3, r1, r3
 8011e8c:	429a      	cmp	r2, r3
 8011e8e:	f2c0 80bb 	blt.w	8012008 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8011e92:	2b00      	cmp	r3, #0
 8011e94:	f300 80b9 	bgt.w	801200a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8011e98:	6967      	ldr	r7, [r4, #20]
 8011e9a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8011e9c:	443b      	add	r3, r7
 8011e9e:	461f      	mov	r7, r3
 8011ea0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011ea2:	1bdf      	subs	r7, r3, r7
 8011ea4:	4297      	cmp	r7, r2
 8011ea6:	bfa8      	it	ge
 8011ea8:	4617      	movge	r7, r2
 8011eaa:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8011eae:	2f00      	cmp	r7, #0
 8011eb0:	f340 813c 	ble.w	801212c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8011eb4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8011eb6:	6829      	ldr	r1, [r5, #0]
 8011eb8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011ebc:	f9bb 3000 	ldrsh.w	r3, [fp]
 8011ec0:	6820      	ldr	r0, [r4, #0]
 8011ec2:	4411      	add	r1, r2
 8011ec4:	4299      	cmp	r1, r3
 8011ec6:	dd1a      	ble.n	8011efe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8011ec8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8011ecc:	440b      	add	r3, r1
 8011ece:	4402      	add	r2, r0
 8011ed0:	b21b      	sxth	r3, r3
 8011ed2:	429a      	cmp	r2, r3
 8011ed4:	dc13      	bgt.n	8011efe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8011ed6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011ed8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011eda:	681b      	ldr	r3, [r3, #0]
 8011edc:	9206      	str	r2, [sp, #24]
 8011ede:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8011ee0:	9205      	str	r2, [sp, #20]
 8011ee2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8011ee4:	9500      	str	r5, [sp, #0]
 8011ee6:	e9cd b203 	strd	fp, r2, [sp, #12]
 8011eea:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8011eec:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8011eee:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8011ef2:	a912      	add	r1, sp, #72	@ 0x48
 8011ef4:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8011ef8:	aa49      	add	r2, sp, #292	@ 0x124
 8011efa:	4623      	mov	r3, r4
 8011efc:	47c8      	blx	r9
 8011efe:	e9d4 2300 	ldrd	r2, r3, [r4]
 8011f02:	441a      	add	r2, r3
 8011f04:	6963      	ldr	r3, [r4, #20]
 8011f06:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8011f0a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8011f0e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8011f12:	68a1      	ldr	r1, [r4, #8]
 8011f14:	ed94 6a08 	vldr	s12, [r4, #32]
 8011f18:	6022      	str	r2, [r4, #0]
 8011f1a:	3301      	adds	r3, #1
 8011f1c:	6163      	str	r3, [r4, #20]
 8011f1e:	69a3      	ldr	r3, [r4, #24]
 8011f20:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011f24:	3b01      	subs	r3, #1
 8011f26:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8011f2a:	61a3      	str	r3, [r4, #24]
 8011f2c:	6923      	ldr	r3, [r4, #16]
 8011f2e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8011f32:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011f36:	edd4 6a07 	vldr	s13, [r4, #28]
 8011f3a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8011f3e:	440b      	add	r3, r1
 8011f40:	68e1      	ldr	r1, [r4, #12]
 8011f42:	6123      	str	r3, [r4, #16]
 8011f44:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011f48:	428b      	cmp	r3, r1
 8011f4a:	edc4 6a07 	vstr	s13, [r4, #28]
 8011f4e:	db15      	blt.n	8011f7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8011f50:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8011f54:	ee76 6a26 	vadd.f32	s13, s12, s13
 8011f58:	3201      	adds	r2, #1
 8011f5a:	edc4 6a07 	vstr	s13, [r4, #28]
 8011f5e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8011f62:	6022      	str	r2, [r4, #0]
 8011f64:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011f68:	1a5b      	subs	r3, r3, r1
 8011f6a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8011f6e:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8011f72:	6123      	str	r3, [r4, #16]
 8011f74:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011f78:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8011f7c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8011f80:	441a      	add	r2, r3
 8011f82:	696b      	ldr	r3, [r5, #20]
 8011f84:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8011f88:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8011f8c:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8011f90:	68a9      	ldr	r1, [r5, #8]
 8011f92:	ed95 6a08 	vldr	s12, [r5, #32]
 8011f96:	602a      	str	r2, [r5, #0]
 8011f98:	3301      	adds	r3, #1
 8011f9a:	616b      	str	r3, [r5, #20]
 8011f9c:	69ab      	ldr	r3, [r5, #24]
 8011f9e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011fa2:	3b01      	subs	r3, #1
 8011fa4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8011fa8:	61ab      	str	r3, [r5, #24]
 8011faa:	692b      	ldr	r3, [r5, #16]
 8011fac:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8011fb0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011fb4:	edd5 6a07 	vldr	s13, [r5, #28]
 8011fb8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8011fbc:	440b      	add	r3, r1
 8011fbe:	68e9      	ldr	r1, [r5, #12]
 8011fc0:	612b      	str	r3, [r5, #16]
 8011fc2:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011fc6:	428b      	cmp	r3, r1
 8011fc8:	edc5 6a07 	vstr	s13, [r5, #28]
 8011fcc:	db15      	blt.n	8011ffa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8011fce:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8011fd2:	ee76 6a26 	vadd.f32	s13, s12, s13
 8011fd6:	3201      	adds	r2, #1
 8011fd8:	edc5 6a07 	vstr	s13, [r5, #28]
 8011fdc:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8011fe0:	602a      	str	r2, [r5, #0]
 8011fe2:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011fe6:	1a5b      	subs	r3, r3, r1
 8011fe8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8011fec:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8011ff0:	612b      	str	r3, [r5, #16]
 8011ff2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011ff6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8011ffa:	3f01      	subs	r7, #1
 8011ffc:	e757      	b.n	8011eae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8011ffe:	ad39      	add	r5, sp, #228	@ 0xe4
 8012000:	ac19      	add	r4, sp, #100	@ 0x64
 8012002:	e72d      	b.n	8011e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8012004:	4613      	mov	r3, r2
 8012006:	e744      	b.n	8011e92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8012008:	4613      	mov	r3, r2
 801200a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 801200e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 8012010:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 8012014:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 8012018:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 801201c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 8012020:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 8012024:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 8012028:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 801202c:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 801202e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 8012032:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 8012036:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 801203a:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 801203e:	960e      	str	r6, [sp, #56]	@ 0x38
 8012040:	469e      	mov	lr, r3
 8012042:	461f      	mov	r7, r3
 8012044:	f04f 0900 	mov.w	r9, #0
 8012048:	2f00      	cmp	r7, #0
 801204a:	d146      	bne.n	80120da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801204c:	449c      	add	ip, r3
 801204e:	1ad7      	subs	r7, r2, r3
 8012050:	f1b9 0f00 	cmp.w	r9, #0
 8012054:	d009      	beq.n	801206a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8012056:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 801205a:	9039      	str	r0, [sp, #228]	@ 0xe4
 801205c:	913d      	str	r1, [sp, #244]	@ 0xf4
 801205e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 8012062:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 8012066:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 801206a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 801206c:	910e      	str	r1, [sp, #56]	@ 0x38
 801206e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8012072:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8012076:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 801207a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 801207e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8012082:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8012086:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 801208a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 801208e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8012092:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8012096:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 801209a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 801209e:	f04f 0800 	mov.w	r8, #0
 80120a2:	f1be 0f00 	cmp.w	lr, #0
 80120a6:	d030      	beq.n	801210a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80120a8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 80120aa:	4431      	add	r1, r6
 80120ac:	4549      	cmp	r1, r9
 80120ae:	4450      	add	r0, sl
 80120b0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80120b4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80120b8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80120bc:	db08      	blt.n	80120d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80120be:	ee77 7a85 	vadd.f32	s15, s15, s10
 80120c2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80120c6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80120ca:	3001      	adds	r0, #1
 80120cc:	eba1 0109 	sub.w	r1, r1, r9
 80120d0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80120d4:	f04f 0801 	mov.w	r8, #1
 80120d8:	e7e3      	b.n	80120a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80120da:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 80120dc:	4431      	add	r1, r6
 80120de:	4541      	cmp	r1, r8
 80120e0:	4450      	add	r0, sl
 80120e2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80120e6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80120ea:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80120ee:	db08      	blt.n	8012102 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80120f0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80120f4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80120f8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80120fc:	3001      	adds	r0, #1
 80120fe:	eba1 0108 	sub.w	r1, r1, r8
 8012102:	3f01      	subs	r7, #1
 8012104:	f04f 0901 	mov.w	r9, #1
 8012108:	e79e      	b.n	8012048 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801210a:	449c      	add	ip, r3
 801210c:	1aff      	subs	r7, r7, r3
 801210e:	f1b8 0f00 	cmp.w	r8, #0
 8012112:	d009      	beq.n	8012128 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8012114:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8012118:	9019      	str	r0, [sp, #100]	@ 0x64
 801211a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 801211e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8012122:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8012126:	911d      	str	r1, [sp, #116]	@ 0x74
 8012128:	1ad2      	subs	r2, r2, r3
 801212a:	e6b5      	b.n	8011e98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801212c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801212e:	681b      	ldr	r3, [r3, #0]
 8012130:	b923      	cbnz	r3, 801213c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012132:	4b04      	ldr	r3, [pc, #16]	@ (8012144 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8012134:	6818      	ldr	r0, [r3, #0]
 8012136:	6803      	ldr	r3, [r0, #0]
 8012138:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801213a:	4798      	blx	r3
 801213c:	b05b      	add	sp, #364	@ 0x16c
 801213e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012142:	bf00      	nop
 8012144:	200023a8 	.word	0x200023a8

08012148 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8012148:	b570      	push	{r4, r5, r6, lr}
 801214a:	4604      	mov	r4, r0
 801214c:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8012150:	9805      	ldr	r0, [sp, #20]
 8012152:	6061      	str	r1, [r4, #4]
 8012154:	2500      	movs	r5, #0
 8012156:	f89d 1010 	ldrb.w	r1, [sp, #16]
 801215a:	8263      	strh	r3, [r4, #18]
 801215c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012160:	8025      	strh	r5, [r4, #0]
 8012162:	7221      	strb	r1, [r4, #8]
 8012164:	7266      	strb	r6, [r4, #9]
 8012166:	60e0      	str	r0, [r4, #12]
 8012168:	8222      	strh	r2, [r4, #16]
 801216a:	82a3      	strh	r3, [r4, #20]
 801216c:	82e5      	strh	r5, [r4, #22]
 801216e:	8325      	strh	r5, [r4, #24]
 8012170:	8365      	strh	r5, [r4, #26]
 8012172:	83a5      	strh	r5, [r4, #28]
 8012174:	83e5      	strh	r5, [r4, #30]
 8012176:	8425      	strh	r5, [r4, #32]
 8012178:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 801217c:	b32e      	cbz	r6, 80121ca <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801217e:	6803      	ldr	r3, [r0, #0]
 8012180:	695b      	ldr	r3, [r3, #20]
 8012182:	4798      	blx	r3
 8012184:	4606      	mov	r6, r0
 8012186:	b300      	cbz	r0, 80121ca <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012188:	68e0      	ldr	r0, [r4, #12]
 801218a:	6803      	ldr	r3, [r0, #0]
 801218c:	4631      	mov	r1, r6
 801218e:	68db      	ldr	r3, [r3, #12]
 8012190:	4798      	blx	r3
 8012192:	4605      	mov	r5, r0
 8012194:	b1c8      	cbz	r0, 80121ca <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012196:	7b43      	ldrb	r3, [r0, #13]
 8012198:	7a82      	ldrb	r2, [r0, #10]
 801219a:	005b      	lsls	r3, r3, #1
 801219c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80121a0:	4313      	orrs	r3, r2
 80121a2:	8423      	strh	r3, [r4, #32]
 80121a4:	7a63      	ldrb	r3, [r4, #9]
 80121a6:	2b06      	cmp	r3, #6
 80121a8:	d10f      	bne.n	80121ca <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80121aa:	68e0      	ldr	r0, [r4, #12]
 80121ac:	6803      	ldr	r3, [r0, #0]
 80121ae:	462a      	mov	r2, r5
 80121b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80121b2:	4631      	mov	r1, r6
 80121b4:	4798      	blx	r3
 80121b6:	7b6b      	ldrb	r3, [r5, #13]
 80121b8:	005b      	lsls	r3, r3, #1
 80121ba:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80121be:	7aab      	ldrb	r3, [r5, #10]
 80121c0:	4313      	orrs	r3, r2
 80121c2:	4418      	add	r0, r3
 80121c4:	8c23      	ldrh	r3, [r4, #32]
 80121c6:	4418      	add	r0, r3
 80121c8:	8420      	strh	r0, [r4, #32]
 80121ca:	4620      	mov	r0, r4
 80121cc:	bd70      	pop	{r4, r5, r6, pc}

080121ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80121ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121d2:	2400      	movs	r4, #0
 80121d4:	b085      	sub	sp, #20
 80121d6:	4681      	mov	r9, r0
 80121d8:	4688      	mov	r8, r1
 80121da:	4692      	mov	sl, r2
 80121dc:	469b      	mov	fp, r3
 80121de:	4627      	mov	r7, r4
 80121e0:	4625      	mov	r5, r4
 80121e2:	4626      	mov	r6, r4
 80121e4:	4554      	cmp	r4, sl
 80121e6:	da2a      	bge.n	801223e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80121e8:	2300      	movs	r3, #0
 80121ea:	9303      	str	r3, [sp, #12]
 80121ec:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80121f0:	429d      	cmp	r5, r3
 80121f2:	d004      	beq.n	80121fe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80121f4:	f242 030b 	movw	r3, #8203	@ 0x200b
 80121f8:	429d      	cmp	r5, r3
 80121fa:	bf18      	it	ne
 80121fc:	462f      	movne	r7, r5
 80121fe:	ab03      	add	r3, sp, #12
 8012200:	4642      	mov	r2, r8
 8012202:	4659      	mov	r1, fp
 8012204:	4648      	mov	r0, r9
 8012206:	f002 ff75 	bl	80150f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801220a:	4605      	mov	r5, r0
 801220c:	b1b8      	cbz	r0, 801223e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801220e:	280a      	cmp	r0, #10
 8012210:	d015      	beq.n	801223e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8012212:	9a03      	ldr	r2, [sp, #12]
 8012214:	b18a      	cbz	r2, 801223a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8012216:	7b50      	ldrb	r0, [r2, #13]
 8012218:	7a93      	ldrb	r3, [r2, #10]
 801221a:	8895      	ldrh	r5, [r2, #4]
 801221c:	0040      	lsls	r0, r0, #1
 801221e:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8012222:	4303      	orrs	r3, r0
 8012224:	9301      	str	r3, [sp, #4]
 8012226:	f8d8 3000 	ldr.w	r3, [r8]
 801222a:	4639      	mov	r1, r7
 801222c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801222e:	4640      	mov	r0, r8
 8012230:	4798      	blx	r3
 8012232:	9b01      	ldr	r3, [sp, #4]
 8012234:	4418      	add	r0, r3
 8012236:	4406      	add	r6, r0
 8012238:	b2b6      	uxth	r6, r6
 801223a:	3401      	adds	r4, #1
 801223c:	e7d2      	b.n	80121e4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801223e:	4630      	mov	r0, r6
 8012240:	b005      	add	sp, #20
 8012242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012246 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8012246:	2a02      	cmp	r2, #2
 8012248:	b530      	push	{r4, r5, lr}
 801224a:	d011      	beq.n	8012270 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801224c:	2a03      	cmp	r2, #3
 801224e:	d01c      	beq.n	801228a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8012250:	2a01      	cmp	r2, #1
 8012252:	d10c      	bne.n	801226e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8012254:	888b      	ldrh	r3, [r1, #4]
 8012256:	8801      	ldrh	r1, [r0, #0]
 8012258:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801225c:	8844      	ldrh	r4, [r0, #2]
 801225e:	8004      	strh	r4, [r0, #0]
 8012260:	1a5b      	subs	r3, r3, r1
 8012262:	1a9b      	subs	r3, r3, r2
 8012264:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8012268:	8043      	strh	r3, [r0, #2]
 801226a:	8081      	strh	r1, [r0, #4]
 801226c:	80c2      	strh	r2, [r0, #6]
 801226e:	bd30      	pop	{r4, r5, pc}
 8012270:	88cb      	ldrh	r3, [r1, #6]
 8012272:	8842      	ldrh	r2, [r0, #2]
 8012274:	1a9b      	subs	r3, r3, r2
 8012276:	88c2      	ldrh	r2, [r0, #6]
 8012278:	1a9b      	subs	r3, r3, r2
 801227a:	888a      	ldrh	r2, [r1, #4]
 801227c:	8801      	ldrh	r1, [r0, #0]
 801227e:	8043      	strh	r3, [r0, #2]
 8012280:	1a52      	subs	r2, r2, r1
 8012282:	8881      	ldrh	r1, [r0, #4]
 8012284:	1a52      	subs	r2, r2, r1
 8012286:	8002      	strh	r2, [r0, #0]
 8012288:	e7f1      	b.n	801226e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801228a:	88cb      	ldrh	r3, [r1, #6]
 801228c:	8841      	ldrh	r1, [r0, #2]
 801228e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8012292:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012296:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801229a:	8045      	strh	r5, [r0, #2]
 801229c:	1a5b      	subs	r3, r3, r1
 801229e:	1a9b      	subs	r3, r3, r2
 80122a0:	8003      	strh	r3, [r0, #0]
 80122a2:	8082      	strh	r2, [r0, #4]
 80122a4:	80c4      	strh	r4, [r0, #6]
 80122a6:	e7e2      	b.n	801226e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080122a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80122a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122ac:	b09f      	sub	sp, #124	@ 0x7c
 80122ae:	9116      	str	r1, [sp, #88]	@ 0x58
 80122b0:	9317      	str	r3, [sp, #92]	@ 0x5c
 80122b2:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 80122b4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80122b6:	8809      	ldrh	r1, [r1, #0]
 80122b8:	889b      	ldrh	r3, [r3, #4]
 80122ba:	f8dd 80a8 	ldr.w	r8, [sp, #168]	@ 0xa8
 80122be:	9212      	str	r2, [sp, #72]	@ 0x48
 80122c0:	440b      	add	r3, r1
 80122c2:	b21b      	sxth	r3, r3
 80122c4:	9310      	str	r3, [sp, #64]	@ 0x40
 80122c6:	f8d8 3000 	ldr.w	r3, [r8]
 80122ca:	f89d 20b8 	ldrb.w	r2, [sp, #184]	@ 0xb8
 80122ce:	7b19      	ldrb	r1, [r3, #12]
 80122d0:	7adb      	ldrb	r3, [r3, #11]
 80122d2:	9011      	str	r0, [sp, #68]	@ 0x44
 80122d4:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 80122d8:	9114      	str	r1, [sp, #80]	@ 0x50
 80122da:	9315      	str	r3, [sp, #84]	@ 0x54
 80122dc:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 80122e0:	2a00      	cmp	r2, #0
 80122e2:	d06a      	beq.n	80123ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80122e4:	f898 3010 	ldrb.w	r3, [r8, #16]
 80122e8:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 80122ea:	2b06      	cmp	r3, #6
 80122ec:	bf14      	ite	ne
 80122ee:	2301      	movne	r3, #1
 80122f0:	2302      	moveq	r3, #2
 80122f2:	4413      	add	r3, r2
 80122f4:	f04f 0900 	mov.w	r9, #0
 80122f8:	930f      	str	r3, [sp, #60]	@ 0x3c
 80122fa:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
 80122fe:	464c      	mov	r4, r9
 8012300:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8012304:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
 8012308:	4293      	cmp	r3, r2
 801230a:	f280 808f 	bge.w	801242c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801230e:	2300      	movs	r3, #0
 8012310:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 8012314:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 8012318:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801231c:	429c      	cmp	r4, r3
 801231e:	d006      	beq.n	801232e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8012320:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012322:	f242 020b 	movw	r2, #8203	@ 0x200b
 8012326:	4294      	cmp	r4, r2
 8012328:	bf18      	it	ne
 801232a:	4623      	movne	r3, r4
 801232c:	930d      	str	r3, [sp, #52]	@ 0x34
 801232e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012330:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8012332:	f8d8 2000 	ldr.w	r2, [r8]
 8012336:	428b      	cmp	r3, r1
 8012338:	db41      	blt.n	80123be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801233a:	6813      	ldr	r3, [r2, #0]
 801233c:	4610      	mov	r0, r2
 801233e:	695b      	ldr	r3, [r3, #20]
 8012340:	4798      	blx	r3
 8012342:	4604      	mov	r4, r0
 8012344:	f8d8 0000 	ldr.w	r0, [r8]
 8012348:	6803      	ldr	r3, [r0, #0]
 801234a:	aa1d      	add	r2, sp, #116	@ 0x74
 801234c:	689d      	ldr	r5, [r3, #8]
 801234e:	4621      	mov	r1, r4
 8012350:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8012354:	47a8      	blx	r5
 8012356:	901c      	str	r0, [sp, #112]	@ 0x70
 8012358:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801235c:	429c      	cmp	r4, r3
 801235e:	f000 80eb 	beq.w	8012538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012362:	f242 030b 	movw	r3, #8203	@ 0x200b
 8012366:	429c      	cmp	r4, r3
 8012368:	f000 80e6 	beq.w	8012538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801236c:	2c00      	cmp	r4, #0
 801236e:	f000 80f8 	beq.w	8012562 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8012372:	2c0a      	cmp	r4, #10
 8012374:	d060      	beq.n	8012438 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8012376:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8012378:	b36a      	cbz	r2, 80123d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801237a:	8894      	ldrh	r4, [r2, #4]
 801237c:	f1bb 0f00 	cmp.w	fp, #0
 8012380:	d03b      	beq.n	80123fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8012382:	f892 900d 	ldrb.w	r9, [r2, #13]
 8012386:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801238a:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801238e:	f892 900a 	ldrb.w	r9, [r2, #10]
 8012392:	f1bb 0f01 	cmp.w	fp, #1
 8012396:	ea49 0903 	orr.w	r9, r9, r3
 801239a:	d134      	bne.n	8012406 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 801239c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801239e:	eba6 0609 	sub.w	r6, r6, r9
 80123a2:	2b00      	cmp	r3, #0
 80123a4:	d14f      	bne.n	8012446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80123a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80123a8:	eb09 0306 	add.w	r3, r9, r6
 80123ac:	4413      	add	r3, r2
 80123ae:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80123b0:	f9b2 2000 	ldrsh.w	r2, [r2]
 80123b4:	4293      	cmp	r3, r2
 80123b6:	da51      	bge.n	801245c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80123b8:	e038      	b.n	801242c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80123ba:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 80123bc:	e79a      	b.n	80122f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80123be:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 80123c2:	9301      	str	r3, [sp, #4]
 80123c4:	ab1d      	add	r3, sp, #116	@ 0x74
 80123c6:	9300      	str	r3, [sp, #0]
 80123c8:	4659      	mov	r1, fp
 80123ca:	ab1c      	add	r3, sp, #112	@ 0x70
 80123cc:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 80123ce:	f002 feda 	bl	8015186 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80123d2:	4604      	mov	r4, r0
 80123d4:	e7c0      	b.n	8012358 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80123d6:	f8d8 0000 	ldr.w	r0, [r8]
 80123da:	6803      	ldr	r3, [r0, #0]
 80123dc:	691b      	ldr	r3, [r3, #16]
 80123de:	4798      	blx	r3
 80123e0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80123e4:	4298      	cmp	r0, r3
 80123e6:	f000 80a7 	beq.w	8012538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80123ea:	f242 030b 	movw	r3, #8203	@ 0x200b
 80123ee:	4298      	cmp	r0, r3
 80123f0:	f000 80a2 	beq.w	8012538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80123f4:	f1bb 0f00 	cmp.w	fp, #0
 80123f8:	d100      	bne.n	80123fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80123fa:	444e      	add	r6, r9
 80123fc:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80123fe:	2a00      	cmp	r2, #0
 8012400:	d1bf      	bne.n	8012382 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8012402:	4691      	mov	r9, r2
 8012404:	e098      	b.n	8012538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012406:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012408:	2b00      	cmp	r3, #0
 801240a:	f000 80ac 	beq.w	8012566 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801240e:	f1bb 0f00 	cmp.w	fp, #0
 8012412:	d118      	bne.n	8012446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8012414:	f8d8 0000 	ldr.w	r0, [r8]
 8012418:	990d      	ldr	r1, [sp, #52]	@ 0x34
 801241a:	6803      	ldr	r3, [r0, #0]
 801241c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801241e:	4798      	blx	r3
 8012420:	4406      	add	r6, r0
 8012422:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8012424:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012426:	1af3      	subs	r3, r6, r3
 8012428:	4293      	cmp	r3, r2
 801242a:	dd17      	ble.n	801245c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801242c:	2c00      	cmp	r4, #0
 801242e:	f000 8098 	beq.w	8012562 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8012432:	2c0a      	cmp	r4, #10
 8012434:	f040 8086 	bne.w	8012544 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8012438:	240a      	movs	r4, #10
 801243a:	fab4 f084 	clz	r0, r4
 801243e:	0940      	lsrs	r0, r0, #5
 8012440:	b01f      	add	sp, #124	@ 0x7c
 8012442:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012446:	f8d8 0000 	ldr.w	r0, [r8]
 801244a:	990d      	ldr	r1, [sp, #52]	@ 0x34
 801244c:	6803      	ldr	r3, [r0, #0]
 801244e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8012450:	4798      	blx	r3
 8012452:	f1bb 0f01 	cmp.w	fp, #1
 8012456:	eba6 0600 	sub.w	r6, r6, r0
 801245a:	d0a4      	beq.n	80123a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801245c:	981c      	ldr	r0, [sp, #112]	@ 0x70
 801245e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8012460:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8012464:	f9b3 7000 	ldrsh.w	r7, [r3]
 8012468:	7b43      	ldrb	r3, [r0, #13]
 801246a:	015b      	lsls	r3, r3, #5
 801246c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012470:	7983      	ldrb	r3, [r0, #6]
 8012472:	4431      	add	r1, r6
 8012474:	4313      	orrs	r3, r2
 8012476:	440b      	add	r3, r1
 8012478:	42bb      	cmp	r3, r7
 801247a:	db5d      	blt.n	8012538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801247c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801247e:	4299      	cmp	r1, r3
 8012480:	da5a      	bge.n	8012538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012482:	f8d8 0000 	ldr.w	r0, [r8]
 8012486:	6803      	ldr	r3, [r0, #0]
 8012488:	42b7      	cmp	r7, r6
 801248a:	bfc8      	it	gt
 801248c:	1bbf      	subgt	r7, r7, r6
 801248e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012490:	bfcc      	ite	gt
 8012492:	b2bf      	uxthgt	r7, r7
 8012494:	2700      	movle	r7, #0
 8012496:	4798      	blx	r3
 8012498:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801249a:	7b5a      	ldrb	r2, [r3, #13]
 801249c:	00d1      	lsls	r1, r2, #3
 801249e:	f401 7580 	and.w	r5, r1, #256	@ 0x100
 80124a2:	7a19      	ldrb	r1, [r3, #8]
 80124a4:	4329      	orrs	r1, r5
 80124a6:	0655      	lsls	r5, r2, #25
 80124a8:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 80124aa:	bf44      	itt	mi
 80124ac:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 80124b0:	b209      	sxthmi	r1, r1
 80124b2:	1945      	adds	r5, r0, r5
 80124b4:	1a6d      	subs	r5, r5, r1
 80124b6:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 80124b8:	b2ad      	uxth	r5, r5
 80124ba:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80124be:	fa0f fa85 	sxth.w	sl, r5
 80124c2:	4551      	cmp	r1, sl
 80124c4:	dd3c      	ble.n	8012540 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80124c6:	0112      	lsls	r2, r2, #4
 80124c8:	79d8      	ldrb	r0, [r3, #7]
 80124ca:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80124ce:	4302      	orrs	r2, r0
 80124d0:	4492      	add	sl, r2
 80124d2:	4551      	cmp	r1, sl
 80124d4:	dc30      	bgt.n	8012538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80124d6:	1b4d      	subs	r5, r1, r5
 80124d8:	b22d      	sxth	r5, r5
 80124da:	468a      	mov	sl, r1
 80124dc:	9319      	str	r3, [sp, #100]	@ 0x64
 80124de:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80124e0:	f8d8 0000 	ldr.w	r0, [r8]
 80124e4:	681a      	ldr	r2, [r3, #0]
 80124e6:	6801      	ldr	r1, [r0, #0]
 80124e8:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 80124ea:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 80124ec:	9313      	str	r3, [sp, #76]	@ 0x4c
 80124ee:	9218      	str	r2, [sp, #96]	@ 0x60
 80124f0:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80124f2:	4788      	blx	r1
 80124f4:	f898 1006 	ldrb.w	r1, [r8, #6]
 80124f8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80124fa:	f898 100e 	ldrb.w	r1, [r8, #14]
 80124fe:	910a      	str	r1, [sp, #40]	@ 0x28
 8012500:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 8012504:	9109      	str	r1, [sp, #36]	@ 0x24
 8012506:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801250a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801250c:	9305      	str	r3, [sp, #20]
 801250e:	b2ad      	uxth	r5, r5
 8012510:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8012514:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8012518:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801251a:	9304      	str	r3, [sp, #16]
 801251c:	4437      	add	r7, r6
 801251e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8012520:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8012522:	9206      	str	r2, [sp, #24]
 8012524:	b23f      	sxth	r7, r7
 8012526:	f8cd a004 	str.w	sl, [sp, #4]
 801252a:	9700      	str	r7, [sp, #0]
 801252c:	681a      	ldr	r2, [r3, #0]
 801252e:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8012530:	685b      	ldr	r3, [r3, #4]
 8012532:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012534:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012536:	47a8      	blx	r5
 8012538:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801253a:	3301      	adds	r3, #1
 801253c:	930e      	str	r3, [sp, #56]	@ 0x38
 801253e:	e6e1      	b.n	8012304 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8012540:	2500      	movs	r5, #0
 8012542:	e7cb      	b.n	80124dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8012544:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8012546:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8012548:	3501      	adds	r5, #1
 801254a:	429d      	cmp	r5, r3
 801254c:	f6bf af75 	bge.w	801243a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8012550:	4659      	mov	r1, fp
 8012552:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8012554:	f7fa fc0e 	bl	800cd74 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012558:	4604      	mov	r4, r0
 801255a:	b110      	cbz	r0, 8012562 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801255c:	280a      	cmp	r0, #10
 801255e:	d1f2      	bne.n	8012546 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8012560:	e76a      	b.n	8012438 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8012562:	2400      	movs	r4, #0
 8012564:	e769      	b.n	801243a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8012566:	f1bb 0f00 	cmp.w	fp, #0
 801256a:	f43f af5a 	beq.w	8012422 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801256e:	e775      	b.n	801245c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08012570 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8012570:	b530      	push	{r4, r5, lr}
 8012572:	8ac4      	ldrh	r4, [r0, #22]
 8012574:	8b45      	ldrh	r5, [r0, #26]
 8012576:	8343      	strh	r3, [r0, #26]
 8012578:	442c      	add	r4, r5
 801257a:	1ae4      	subs	r4, r4, r3
 801257c:	82c4      	strh	r4, [r0, #22]
 801257e:	8b83      	ldrh	r3, [r0, #28]
 8012580:	8b04      	ldrh	r4, [r0, #24]
 8012582:	4422      	add	r2, r4
 8012584:	440c      	add	r4, r1
 8012586:	1a59      	subs	r1, r3, r1
 8012588:	83c2      	strh	r2, [r0, #30]
 801258a:	8304      	strh	r4, [r0, #24]
 801258c:	8381      	strh	r1, [r0, #28]
 801258e:	bd30      	pop	{r4, r5, pc}

08012590 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8012590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012594:	4604      	mov	r4, r0
 8012596:	8a47      	ldrh	r7, [r0, #18]
 8012598:	68c0      	ldr	r0, [r0, #12]
 801259a:	6803      	ldr	r3, [r0, #0]
 801259c:	b085      	sub	sp, #20
 801259e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80125a0:	4798      	blx	r3
 80125a2:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80125a6:	7a63      	ldrb	r3, [r4, #9]
 80125a8:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80125ac:	42b7      	cmp	r7, r6
 80125ae:	f103 33ff 	add.w	r3, r3, #4294967295
 80125b2:	bfac      	ite	ge
 80125b4:	f04f 0900 	movge.w	r9, #0
 80125b8:	f04f 0901 	movlt.w	r9, #1
 80125bc:	2b05      	cmp	r3, #5
 80125be:	d804      	bhi.n	80125ca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 80125c0:	e8df f003 	tbb	[pc, r3]
 80125c4:	470e0854 	.word	0x470e0854
 80125c8:	4c4c      	.short	0x4c4c
 80125ca:	2500      	movs	r5, #0
 80125cc:	46a9      	mov	r9, r5
 80125ce:	462e      	mov	r6, r5
 80125d0:	462f      	mov	r7, r5
 80125d2:	e00d      	b.n	80125f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80125d4:	42b7      	cmp	r7, r6
 80125d6:	bfb4      	ite	lt
 80125d8:	2600      	movlt	r6, #0
 80125da:	2601      	movge	r6, #1
 80125dc:	2500      	movs	r5, #0
 80125de:	e7f7      	b.n	80125d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80125e0:	42b7      	cmp	r7, r6
 80125e2:	464d      	mov	r5, r9
 80125e4:	f04f 0900 	mov.w	r9, #0
 80125e8:	bfb4      	ite	lt
 80125ea:	2600      	movlt	r6, #0
 80125ec:	2601      	movge	r6, #1
 80125ee:	464f      	mov	r7, r9
 80125f0:	f04f 0800 	mov.w	r8, #0
 80125f4:	f8a4 8016 	strh.w	r8, [r4, #22]
 80125f8:	f8a4 8018 	strh.w	r8, [r4, #24]
 80125fc:	f8cd 8004 	str.w	r8, [sp, #4]
 8012600:	2300      	movs	r3, #0
 8012602:	9303      	str	r3, [sp, #12]
 8012604:	8823      	ldrh	r3, [r4, #0]
 8012606:	2b20      	cmp	r3, #32
 8012608:	d034      	beq.n	8012674 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 801260a:	f242 010b 	movw	r1, #8203	@ 0x200b
 801260e:	1a5a      	subs	r2, r3, r1
 8012610:	f1d2 0a00 	rsbs	sl, r2, #0
 8012614:	eb4a 0a02 	adc.w	sl, sl, r2
 8012618:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801261c:	4293      	cmp	r3, r2
 801261e:	d009      	beq.n	8012634 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8012620:	428b      	cmp	r3, r1
 8012622:	9a01      	ldr	r2, [sp, #4]
 8012624:	bf18      	it	ne
 8012626:	461a      	movne	r2, r3
 8012628:	9201      	str	r2, [sp, #4]
 801262a:	bf0c      	ite	eq
 801262c:	f04f 0a01 	moveq.w	sl, #1
 8012630:	f04f 0a00 	movne.w	sl, #0
 8012634:	ab03      	add	r3, sp, #12
 8012636:	68e2      	ldr	r2, [r4, #12]
 8012638:	7a21      	ldrb	r1, [r4, #8]
 801263a:	6860      	ldr	r0, [r4, #4]
 801263c:	f002 fd5a 	bl	80150f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012640:	8020      	strh	r0, [r4, #0]
 8012642:	b9d8      	cbnz	r0, 801267c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8012644:	8ba2      	ldrh	r2, [r4, #28]
 8012646:	2300      	movs	r3, #0
 8012648:	4611      	mov	r1, r2
 801264a:	4620      	mov	r0, r4
 801264c:	f7ff ff90 	bl	8012570 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8012650:	e06e      	b.n	8012730 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8012652:	2500      	movs	r5, #0
 8012654:	46a9      	mov	r9, r5
 8012656:	462e      	mov	r6, r5
 8012658:	2701      	movs	r7, #1
 801265a:	e7c9      	b.n	80125f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801265c:	42b7      	cmp	r7, r6
 801265e:	f04f 0500 	mov.w	r5, #0
 8012662:	bfb4      	ite	lt
 8012664:	2700      	movlt	r7, #0
 8012666:	2701      	movge	r7, #1
 8012668:	462e      	mov	r6, r5
 801266a:	e7c1      	b.n	80125f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801266c:	2500      	movs	r5, #0
 801266e:	46a9      	mov	r9, r5
 8012670:	2601      	movs	r6, #1
 8012672:	e7ad      	b.n	80125d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8012674:	9301      	str	r3, [sp, #4]
 8012676:	f04f 0a01 	mov.w	sl, #1
 801267a:	e7db      	b.n	8012634 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801267c:	8b63      	ldrh	r3, [r4, #26]
 801267e:	280a      	cmp	r0, #10
 8012680:	f103 0301 	add.w	r3, r3, #1
 8012684:	8363      	strh	r3, [r4, #26]
 8012686:	d0dd      	beq.n	8012644 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8012688:	9a03      	ldr	r2, [sp, #12]
 801268a:	bb62      	cbnz	r2, 80126e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 801268c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8012690:	4298      	cmp	r0, r3
 8012692:	d003      	beq.n	801269c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8012694:	f242 030b 	movw	r3, #8203	@ 0x200b
 8012698:	4298      	cmp	r0, r3
 801269a:	d1b1      	bne.n	8012600 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801269c:	8823      	ldrh	r3, [r4, #0]
 801269e:	8ba1      	ldrh	r1, [r4, #28]
 80126a0:	2b20      	cmp	r3, #32
 80126a2:	d003      	beq.n	80126ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80126a4:	f242 000b 	movw	r0, #8203	@ 0x200b
 80126a8:	4283      	cmp	r3, r0
 80126aa:	d131      	bne.n	8012710 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80126ac:	f1ba 0f00 	cmp.w	sl, #0
 80126b0:	bf0a      	itet	eq
 80126b2:	4688      	moveq	r8, r1
 80126b4:	4650      	movne	r0, sl
 80126b6:	2001      	moveq	r0, #1
 80126b8:	440a      	add	r2, r1
 80126ba:	8b23      	ldrh	r3, [r4, #24]
 80126bc:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80126c0:	b292      	uxth	r2, r2
 80126c2:	83a2      	strh	r2, [r4, #28]
 80126c4:	4413      	add	r3, r2
 80126c6:	f1b9 0f00 	cmp.w	r9, #0
 80126ca:	d102      	bne.n	80126d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80126cc:	2d00      	cmp	r5, #0
 80126ce:	d042      	beq.n	8012756 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80126d0:	b300      	cbz	r0, 8012714 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80126d2:	8c21      	ldrh	r1, [r4, #32]
 80126d4:	4419      	add	r1, r3
 80126d6:	458c      	cmp	ip, r1
 80126d8:	da37      	bge.n	801274a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80126da:	8ae1      	ldrh	r1, [r4, #22]
 80126dc:	2900      	cmp	r1, #0
 80126de:	d034      	beq.n	801274a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80126e0:	4563      	cmp	r3, ip
 80126e2:	dd8d      	ble.n	8012600 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80126e4:	e01d      	b.n	8012722 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80126e6:	8893      	ldrh	r3, [r2, #4]
 80126e8:	8023      	strh	r3, [r4, #0]
 80126ea:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80126ee:	9901      	ldr	r1, [sp, #4]
 80126f0:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80126f4:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 80126f8:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80126fc:	ea4b 0b00 	orr.w	fp, fp, r0
 8012700:	68e0      	ldr	r0, [r4, #12]
 8012702:	6803      	ldr	r3, [r0, #0]
 8012704:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8012706:	4798      	blx	r3
 8012708:	eb0b 0200 	add.w	r2, fp, r0
 801270c:	b292      	uxth	r2, r2
 801270e:	e7c5      	b.n	801269c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8012710:	2000      	movs	r0, #0
 8012712:	e7d1      	b.n	80126b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8012714:	4563      	cmp	r3, ip
 8012716:	f77f af73 	ble.w	8012600 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801271a:	8ae3      	ldrh	r3, [r4, #22]
 801271c:	2b00      	cmp	r3, #0
 801271e:	f43f af6f 	beq.w	8012600 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012722:	2301      	movs	r3, #1
 8012724:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8012728:	8c22      	ldrh	r2, [r4, #32]
 801272a:	8be3      	ldrh	r3, [r4, #30]
 801272c:	4413      	add	r3, r2
 801272e:	83e3      	strh	r3, [r4, #30]
 8012730:	68e0      	ldr	r0, [r4, #12]
 8012732:	6803      	ldr	r3, [r0, #0]
 8012734:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012736:	4798      	blx	r3
 8012738:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 801273c:	4418      	add	r0, r3
 801273e:	8a63      	ldrh	r3, [r4, #18]
 8012740:	1a18      	subs	r0, r3, r0
 8012742:	8260      	strh	r0, [r4, #18]
 8012744:	b005      	add	sp, #20
 8012746:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801274a:	2300      	movs	r3, #0
 801274c:	4611      	mov	r1, r2
 801274e:	4620      	mov	r0, r4
 8012750:	f7ff ff0e 	bl	8012570 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8012754:	e754      	b.n	8012600 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012756:	4563      	cmp	r3, ip
 8012758:	dd14      	ble.n	8012784 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 801275a:	b117      	cbz	r7, 8012762 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 801275c:	2301      	movs	r3, #1
 801275e:	460a      	mov	r2, r1
 8012760:	e772      	b.n	8012648 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8012762:	2e00      	cmp	r6, #0
 8012764:	f43f af4c 	beq.w	8012600 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012768:	2800      	cmp	r0, #0
 801276a:	f47f af49 	bne.w	8012600 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801276e:	f1ba 0f00 	cmp.w	sl, #0
 8012772:	d002      	beq.n	801277a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8012774:	2301      	movs	r3, #1
 8012776:	4642      	mov	r2, r8
 8012778:	e767      	b.n	801264a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 801277a:	8ae3      	ldrh	r3, [r4, #22]
 801277c:	2b00      	cmp	r3, #0
 801277e:	f43f af3f 	beq.w	8012600 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012782:	e7d5      	b.n	8012730 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8012784:	2800      	cmp	r0, #0
 8012786:	f47f af3b 	bne.w	8012600 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801278a:	f1ba 0f00 	cmp.w	sl, #0
 801278e:	f43f af37 	beq.w	8012600 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012792:	2301      	movs	r3, #1
 8012794:	4642      	mov	r2, r8
 8012796:	e7da      	b.n	801274e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08012798 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8012798:	b5f0      	push	{r4, r5, r6, r7, lr}
 801279a:	4605      	mov	r5, r0
 801279c:	b08f      	sub	sp, #60	@ 0x3c
 801279e:	4617      	mov	r7, r2
 80127a0:	461c      	mov	r4, r3
 80127a2:	460e      	mov	r6, r1
 80127a4:	b1d1      	cbz	r1, 80127dc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80127a6:	681b      	ldr	r3, [r3, #0]
 80127a8:	4620      	mov	r0, r4
 80127aa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80127ac:	4798      	blx	r3
 80127ae:	4240      	negs	r0, r0
 80127b0:	b200      	sxth	r0, r0
 80127b2:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80127b6:	9603      	str	r6, [sp, #12]
 80127b8:	9700      	str	r7, [sp, #0]
 80127ba:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80127be:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 80127c2:	4629      	mov	r1, r5
 80127c4:	a805      	add	r0, sp, #20
 80127c6:	f7ff fcbf 	bl	8012148 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80127ca:	2401      	movs	r4, #1
 80127cc:	a805      	add	r0, sp, #20
 80127ce:	f7ff fedf 	bl	8012590 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80127d2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80127d6:	b163      	cbz	r3, 80127f2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80127d8:	3401      	adds	r4, #1
 80127da:	e7f7      	b.n	80127cc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80127dc:	f002 fd58 	bl	8015290 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80127e0:	2401      	movs	r4, #1
 80127e2:	280a      	cmp	r0, #10
 80127e4:	4628      	mov	r0, r5
 80127e6:	bf08      	it	eq
 80127e8:	3401      	addeq	r4, #1
 80127ea:	f002 fd51 	bl	8015290 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80127ee:	2800      	cmp	r0, #0
 80127f0:	d1f7      	bne.n	80127e2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80127f2:	b2a0      	uxth	r0, r4
 80127f4:	b00f      	add	sp, #60	@ 0x3c
 80127f6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080127f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80127f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127fc:	b0e3      	sub	sp, #396	@ 0x18c
 80127fe:	461c      	mov	r4, r3
 8012800:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 8012802:	4683      	mov	fp, r0
 8012804:	4688      	mov	r8, r1
 8012806:	2b00      	cmp	r3, #0
 8012808:	f000 8112 	beq.w	8012a30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801280c:	6823      	ldr	r3, [r4, #0]
 801280e:	2b00      	cmp	r3, #0
 8012810:	f000 810e 	beq.w	8012a30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012814:	7ba3      	ldrb	r3, [r4, #14]
 8012816:	2b00      	cmp	r3, #0
 8012818:	f000 810a 	beq.w	8012a30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801281c:	6810      	ldr	r0, [r2, #0]
 801281e:	6851      	ldr	r1, [r2, #4]
 8012820:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8012824:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8012828:	ad0a      	add	r5, sp, #40	@ 0x28
 801282a:	462b      	mov	r3, r5
 801282c:	c303      	stmia	r3!, {r0, r1}
 801282e:	2100      	movs	r1, #0
 8012830:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8012834:	910c      	str	r1, [sp, #48]	@ 0x30
 8012836:	79a2      	ldrb	r2, [r4, #6]
 8012838:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801283c:	a90c      	add	r1, sp, #48	@ 0x30
 801283e:	4628      	mov	r0, r5
 8012840:	f7ff fd01 	bl	8012246 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8012844:	a90c      	add	r1, sp, #48	@ 0x30
 8012846:	4608      	mov	r0, r1
 8012848:	79a2      	ldrb	r2, [r4, #6]
 801284a:	f7ff fcfc 	bl	8012246 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801284e:	a817      	add	r0, sp, #92	@ 0x5c
 8012850:	f002 f8f2 	bl	8014a38 <_ZN8touchgfx12TextProviderC1Ev>
 8012854:	6820      	ldr	r0, [r4, #0]
 8012856:	6803      	ldr	r3, [r0, #0]
 8012858:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801285a:	4798      	blx	r3
 801285c:	4606      	mov	r6, r0
 801285e:	6820      	ldr	r0, [r4, #0]
 8012860:	6803      	ldr	r3, [r0, #0]
 8012862:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8012864:	4798      	blx	r3
 8012866:	4633      	mov	r3, r6
 8012868:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801286a:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801286c:	9000      	str	r0, [sp, #0]
 801286e:	a817      	add	r0, sp, #92	@ 0x5c
 8012870:	f002 f93d 	bl	8014aee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012874:	6820      	ldr	r0, [r4, #0]
 8012876:	f894 a004 	ldrb.w	sl, [r4, #4]
 801287a:	6803      	ldr	r3, [r0, #0]
 801287c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801287e:	4798      	blx	r3
 8012880:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8012884:	6823      	ldr	r3, [r4, #0]
 8012886:	4607      	mov	r7, r0
 8012888:	4406      	add	r6, r0
 801288a:	a830      	add	r0, sp, #192	@ 0xc0
 801288c:	f893 9009 	ldrb.w	r9, [r3, #9]
 8012890:	f002 f8d2 	bl	8014a38 <_ZN8touchgfx12TextProviderC1Ev>
 8012894:	7c23      	ldrb	r3, [r4, #16]
 8012896:	b17b      	cbz	r3, 80128b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8012898:	6820      	ldr	r0, [r4, #0]
 801289a:	6803      	ldr	r3, [r0, #0]
 801289c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801289e:	4798      	blx	r3
 80128a0:	9009      	str	r0, [sp, #36]	@ 0x24
 80128a2:	6820      	ldr	r0, [r4, #0]
 80128a4:	6802      	ldr	r2, [r0, #0]
 80128a6:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 80128a8:	4790      	blx	r2
 80128aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80128ac:	9000      	str	r0, [sp, #0]
 80128ae:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 80128b0:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 80128b2:	a830      	add	r0, sp, #192	@ 0xc0
 80128b4:	f002 f91b 	bl	8014aee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80128b8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80128bc:	7be2      	ldrb	r2, [r4, #15]
 80128be:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 80128c2:	1a8a      	subs	r2, r1, r2
 80128c4:	7c21      	ldrb	r1, [r4, #16]
 80128c6:	9103      	str	r1, [sp, #12]
 80128c8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80128cc:	9102      	str	r1, [sp, #8]
 80128ce:	6821      	ldr	r1, [r4, #0]
 80128d0:	9101      	str	r1, [sp, #4]
 80128d2:	7961      	ldrb	r1, [r4, #5]
 80128d4:	9100      	str	r1, [sp, #0]
 80128d6:	b292      	uxth	r2, r2
 80128d8:	a930      	add	r1, sp, #192	@ 0xc0
 80128da:	a80e      	add	r0, sp, #56	@ 0x38
 80128dc:	f7ff fc34 	bl	8012148 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80128e0:	2e00      	cmp	r6, #0
 80128e2:	dc5b      	bgt.n	801299c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80128e4:	af17      	add	r7, sp, #92	@ 0x5c
 80128e6:	f04f 0900 	mov.w	r9, #0
 80128ea:	7c23      	ldrb	r3, [r4, #16]
 80128ec:	2b00      	cmp	r3, #0
 80128ee:	f000 80b1 	beq.w	8012a54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80128f2:	a80e      	add	r0, sp, #56	@ 0x38
 80128f4:	f7ff fe4c 	bl	8012590 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80128f8:	f1ba 0f00 	cmp.w	sl, #0
 80128fc:	f000 80a5 	beq.w	8012a4a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8012900:	7c23      	ldrb	r3, [r4, #16]
 8012902:	9309      	str	r3, [sp, #36]	@ 0x24
 8012904:	2264      	movs	r2, #100	@ 0x64
 8012906:	4639      	mov	r1, r7
 8012908:	a849      	add	r0, sp, #292	@ 0x124
 801290a:	f012 fd44 	bl	8025396 <memcpy>
 801290e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012910:	2b00      	cmp	r3, #0
 8012912:	f000 80a7 	beq.w	8012a64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8012916:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 801291a:	7922      	ldrb	r2, [r4, #4]
 801291c:	2a01      	cmp	r2, #1
 801291e:	f040 808a 	bne.w	8012a36 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8012922:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8012926:	1ac0      	subs	r0, r0, r3
 8012928:	2302      	movs	r3, #2
 801292a:	fb90 f0f3 	sdiv	r0, r0, r3
 801292e:	b200      	sxth	r0, r0
 8012930:	7c23      	ldrb	r3, [r4, #16]
 8012932:	2b00      	cmp	r3, #0
 8012934:	f000 808b 	beq.w	8012a4e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8012938:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 801293c:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 8012940:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8012944:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8012948:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801294c:	4410      	add	r0, r2
 801294e:	b200      	sxth	r0, r0
 8012950:	9000      	str	r0, [sp, #0]
 8012952:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8012956:	e9cd 5401 	strd	r5, r4, [sp, #4]
 801295a:	4642      	mov	r2, r8
 801295c:	2100      	movs	r1, #0
 801295e:	4658      	mov	r0, fp
 8012960:	f7ff fca2 	bl	80122a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8012964:	2800      	cmp	r0, #0
 8012966:	d163      	bne.n	8012a30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012968:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801296c:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8012970:	b2b2      	uxth	r2, r6
 8012972:	4413      	add	r3, r2
 8012974:	1a8a      	subs	r2, r1, r2
 8012976:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 801297a:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 801297e:	b21b      	sxth	r3, r3
 8012980:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8012984:	2a00      	cmp	r2, #0
 8012986:	d153      	bne.n	8012a30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012988:	6822      	ldr	r2, [r4, #0]
 801298a:	8869      	ldrh	r1, [r5, #2]
 801298c:	7a12      	ldrb	r2, [r2, #8]
 801298e:	1a9b      	subs	r3, r3, r2
 8012990:	88ea      	ldrh	r2, [r5, #6]
 8012992:	440a      	add	r2, r1
 8012994:	b212      	sxth	r2, r2
 8012996:	4293      	cmp	r3, r2
 8012998:	dda7      	ble.n	80128ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801299a:	e049      	b.n	8012a30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801299c:	7c23      	ldrb	r3, [r4, #16]
 801299e:	444f      	add	r7, r9
 80129a0:	b1c3      	cbz	r3, 80129d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80129a2:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 80129a6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80129aa:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80129ae:	443b      	add	r3, r7
 80129b0:	4293      	cmp	r3, r2
 80129b2:	da97      	bge.n	80128e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80129b4:	a80e      	add	r0, sp, #56	@ 0x38
 80129b6:	f7ff fdeb 	bl	8012590 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80129ba:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 80129be:	3b01      	subs	r3, #1
 80129c0:	b29b      	uxth	r3, r3
 80129c2:	454b      	cmp	r3, r9
 80129c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80129c6:	d021      	beq.n	8012a0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80129c8:	7961      	ldrb	r1, [r4, #5]
 80129ca:	a817      	add	r0, sp, #92	@ 0x5c
 80129cc:	f7fa f9d2 	bl	800cd74 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80129d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80129d2:	e7f4      	b.n	80129be <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80129d4:	fa1f f986 	uxth.w	r9, r6
 80129d8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80129dc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80129e0:	443b      	add	r3, r7
 80129e2:	4293      	cmp	r3, r2
 80129e4:	f6bf af7e 	bge.w	80128e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80129e8:	a817      	add	r0, sp, #92	@ 0x5c
 80129ea:	f002 fc51 	bl	8015290 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80129ee:	b1f8      	cbz	r0, 8012a30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80129f0:	280a      	cmp	r0, #10
 80129f2:	d1f1      	bne.n	80129d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80129f4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80129f8:	444b      	add	r3, r9
 80129fa:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80129fe:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8012a02:	eba3 0309 	sub.w	r3, r3, r9
 8012a06:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8012a0a:	e7e5      	b.n	80129d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8012a0c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8012a10:	b2b3      	uxth	r3, r6
 8012a12:	441a      	add	r2, r3
 8012a14:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8012a18:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8012a1c:	1ad3      	subs	r3, r2, r3
 8012a1e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8012a22:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8012a26:	b11b      	cbz	r3, 8012a30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012a28:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8012a2c:	2b00      	cmp	r3, #0
 8012a2e:	d0ba      	beq.n	80129a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8012a30:	b063      	add	sp, #396	@ 0x18c
 8012a32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a36:	2a02      	cmp	r2, #2
 8012a38:	d105      	bne.n	8012a46 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8012a3a:	7be2      	ldrb	r2, [r4, #15]
 8012a3c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8012a40:	1a80      	subs	r0, r0, r2
 8012a42:	1ac0      	subs	r0, r0, r3
 8012a44:	e773      	b.n	801292e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8012a46:	2000      	movs	r0, #0
 8012a48:	e772      	b.n	8012930 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8012a4a:	7be0      	ldrb	r0, [r4, #15]
 8012a4c:	e770      	b.n	8012930 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8012a4e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8012a52:	e773      	b.n	801293c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8012a54:	f1ba 0f00 	cmp.w	sl, #0
 8012a58:	d0f7      	beq.n	8012a4a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8012a5a:	2264      	movs	r2, #100	@ 0x64
 8012a5c:	4639      	mov	r1, r7
 8012a5e:	a849      	add	r0, sp, #292	@ 0x124
 8012a60:	f012 fc99 	bl	8025396 <memcpy>
 8012a64:	2300      	movs	r3, #0
 8012a66:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8012a6a:	6821      	ldr	r1, [r4, #0]
 8012a6c:	a849      	add	r0, sp, #292	@ 0x124
 8012a6e:	f7ff fbae 	bl	80121ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8012a72:	b203      	sxth	r3, r0
 8012a74:	e751      	b.n	801291a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08012a76 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8012a76:	2b03      	cmp	r3, #3
 8012a78:	d818      	bhi.n	8012aac <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8012a7a:	e8df f003 	tbb	[pc, r3]
 8012a7e:	0602      	.short	0x0602
 8012a80:	130d      	.short	0x130d
 8012a82:	f9b0 2000 	ldrsh.w	r2, [r0]
 8012a86:	1850      	adds	r0, r2, r1
 8012a88:	4770      	bx	lr
 8012a8a:	8803      	ldrh	r3, [r0, #0]
 8012a8c:	8880      	ldrh	r0, [r0, #4]
 8012a8e:	4418      	add	r0, r3
 8012a90:	b200      	sxth	r0, r0
 8012a92:	1a80      	subs	r0, r0, r2
 8012a94:	3801      	subs	r0, #1
 8012a96:	4770      	bx	lr
 8012a98:	8803      	ldrh	r3, [r0, #0]
 8012a9a:	8880      	ldrh	r0, [r0, #4]
 8012a9c:	4418      	add	r0, r3
 8012a9e:	b200      	sxth	r0, r0
 8012aa0:	1a40      	subs	r0, r0, r1
 8012aa2:	e7f7      	b.n	8012a94 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8012aa4:	f9b0 0000 	ldrsh.w	r0, [r0]
 8012aa8:	4410      	add	r0, r2
 8012aaa:	4770      	bx	lr
 8012aac:	2000      	movs	r0, #0
 8012aae:	4770      	bx	lr

08012ab0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8012ab0:	2b03      	cmp	r3, #3
 8012ab2:	d817      	bhi.n	8012ae4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8012ab4:	e8df f003 	tbb	[pc, r3]
 8012ab8:	10090602 	.word	0x10090602
 8012abc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8012ac0:	1850      	adds	r0, r2, r1
 8012ac2:	4770      	bx	lr
 8012ac4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8012ac8:	e7fa      	b.n	8012ac0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8012aca:	8843      	ldrh	r3, [r0, #2]
 8012acc:	88c0      	ldrh	r0, [r0, #6]
 8012ace:	4418      	add	r0, r3
 8012ad0:	b200      	sxth	r0, r0
 8012ad2:	1a80      	subs	r0, r0, r2
 8012ad4:	3801      	subs	r0, #1
 8012ad6:	4770      	bx	lr
 8012ad8:	8843      	ldrh	r3, [r0, #2]
 8012ada:	88c0      	ldrh	r0, [r0, #6]
 8012adc:	4418      	add	r0, r3
 8012ade:	b200      	sxth	r0, r0
 8012ae0:	1a40      	subs	r0, r0, r1
 8012ae2:	e7f7      	b.n	8012ad4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8012ae4:	2000      	movs	r0, #0
 8012ae6:	4770      	bx	lr

08012ae8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8012ae8:	4b01      	ldr	r3, [pc, #4]	@ (8012af0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8012aea:	2200      	movs	r2, #0
 8012aec:	601a      	str	r2, [r3, #0]
 8012aee:	4770      	bx	lr
 8012af0:	200023b0 	.word	0x200023b0

08012af4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8012af4:	4603      	mov	r3, r0
 8012af6:	b1c8      	cbz	r0, 8012b2c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8012af8:	0c02      	lsrs	r2, r0, #16
 8012afa:	0412      	lsls	r2, r2, #16
 8012afc:	b9a2      	cbnz	r2, 8012b28 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8012afe:	0403      	lsls	r3, r0, #16
 8012b00:	2010      	movs	r0, #16
 8012b02:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8012b06:	bf04      	itt	eq
 8012b08:	021b      	lsleq	r3, r3, #8
 8012b0a:	3008      	addeq	r0, #8
 8012b0c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8012b10:	bf04      	itt	eq
 8012b12:	011b      	lsleq	r3, r3, #4
 8012b14:	3004      	addeq	r0, #4
 8012b16:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8012b1a:	bf04      	itt	eq
 8012b1c:	009b      	lsleq	r3, r3, #2
 8012b1e:	3002      	addeq	r0, #2
 8012b20:	2b00      	cmp	r3, #0
 8012b22:	db04      	blt.n	8012b2e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8012b24:	3001      	adds	r0, #1
 8012b26:	4770      	bx	lr
 8012b28:	2000      	movs	r0, #0
 8012b2a:	e7ea      	b.n	8012b02 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8012b2c:	2020      	movs	r0, #32
 8012b2e:	4770      	bx	lr

08012b30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8012b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b34:	b087      	sub	sp, #28
 8012b36:	460d      	mov	r5, r1
 8012b38:	4616      	mov	r6, r2
 8012b3a:	4698      	mov	r8, r3
 8012b3c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8012b40:	4601      	mov	r1, r0
 8012b42:	b120      	cbz	r0, 8012b4e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8012b44:	b11a      	cbz	r2, 8012b4e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8012b46:	2d1f      	cmp	r5, #31
 8012b48:	d801      	bhi.n	8012b4e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8012b4a:	2b1f      	cmp	r3, #31
 8012b4c:	d904      	bls.n	8012b58 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8012b4e:	2000      	movs	r0, #0
 8012b50:	6038      	str	r0, [r7, #0]
 8012b52:	b007      	add	sp, #28
 8012b54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b58:	b97d      	cbnz	r5, 8012b7a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8012b5a:	b143      	cbz	r3, 8012b6e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8012b5c:	4602      	mov	r2, r0
 8012b5e:	e9cd 4700 	strd	r4, r7, [sp]
 8012b62:	462b      	mov	r3, r5
 8012b64:	4641      	mov	r1, r8
 8012b66:	4630      	mov	r0, r6
 8012b68:	f7ff ffe2 	bl	8012b30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012b6c:	e7f1      	b.n	8012b52 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8012b6e:	f04f 33ff 	mov.w	r3, #4294967295
 8012b72:	603b      	str	r3, [r7, #0]
 8012b74:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8012b78:	e7eb      	b.n	8012b52 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8012b7a:	fa32 fa05 	lsrs.w	sl, r2, r5
 8012b7e:	d106      	bne.n	8012b8e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8012b80:	4346      	muls	r6, r0
 8012b82:	fbb6 f0f4 	udiv	r0, r6, r4
 8012b86:	fb04 6610 	mls	r6, r4, r0, r6
 8012b8a:	603e      	str	r6, [r7, #0]
 8012b8c:	e7e1      	b.n	8012b52 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8012b8e:	2201      	movs	r2, #1
 8012b90:	40aa      	lsls	r2, r5
 8012b92:	3a01      	subs	r2, #1
 8012b94:	4016      	ands	r6, r2
 8012b96:	fa00 fb05 	lsl.w	fp, r0, r5
 8012b9a:	4630      	mov	r0, r6
 8012b9c:	fbbb f9f4 	udiv	r9, fp, r4
 8012ba0:	fb0a f309 	mul.w	r3, sl, r9
 8012ba4:	9303      	str	r3, [sp, #12]
 8012ba6:	f7ff ffa5 	bl	8012af4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8012baa:	462b      	mov	r3, r5
 8012bac:	460a      	mov	r2, r1
 8012bae:	e9cd 4700 	strd	r4, r7, [sp]
 8012bb2:	4601      	mov	r1, r0
 8012bb4:	4630      	mov	r0, r6
 8012bb6:	f7ff ffbb 	bl	8012b30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012bba:	fb04 b919 	mls	r9, r4, r9, fp
 8012bbe:	4606      	mov	r6, r0
 8012bc0:	4648      	mov	r0, r9
 8012bc2:	eb05 0108 	add.w	r1, r5, r8
 8012bc6:	f7ff ff95 	bl	8012af4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8012bca:	ab05      	add	r3, sp, #20
 8012bcc:	e9cd 4300 	strd	r4, r3, [sp]
 8012bd0:	464a      	mov	r2, r9
 8012bd2:	4603      	mov	r3, r0
 8012bd4:	4650      	mov	r0, sl
 8012bd6:	f7ff ffab 	bl	8012b30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012bda:	6839      	ldr	r1, [r7, #0]
 8012bdc:	9a05      	ldr	r2, [sp, #20]
 8012bde:	9b03      	ldr	r3, [sp, #12]
 8012be0:	4411      	add	r1, r2
 8012be2:	fbb1 f2f4 	udiv	r2, r1, r4
 8012be6:	18d3      	adds	r3, r2, r3
 8012be8:	441e      	add	r6, r3
 8012bea:	fb04 1412 	mls	r4, r4, r2, r1
 8012bee:	4430      	add	r0, r6
 8012bf0:	603c      	str	r4, [r7, #0]
 8012bf2:	e7ae      	b.n	8012b52 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08012bf4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8012bf4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012bf8:	b085      	sub	sp, #20
 8012bfa:	f1b0 0900 	subs.w	r9, r0, #0
 8012bfe:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8012c00:	461d      	mov	r5, r3
 8012c02:	bfbf      	itttt	lt
 8012c04:	6823      	ldrlt	r3, [r4, #0]
 8012c06:	425b      	neglt	r3, r3
 8012c08:	f1c9 0900 	rsblt	r9, r9, #0
 8012c0c:	6023      	strlt	r3, [r4, #0]
 8012c0e:	bfb4      	ite	lt
 8012c10:	f04f 36ff 	movlt.w	r6, #4294967295
 8012c14:	2601      	movge	r6, #1
 8012c16:	2a00      	cmp	r2, #0
 8012c18:	4617      	mov	r7, r2
 8012c1a:	da04      	bge.n	8012c26 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8012c1c:	6823      	ldr	r3, [r4, #0]
 8012c1e:	425b      	negs	r3, r3
 8012c20:	4257      	negs	r7, r2
 8012c22:	4276      	negs	r6, r6
 8012c24:	6023      	str	r3, [r4, #0]
 8012c26:	2d00      	cmp	r5, #0
 8012c28:	4638      	mov	r0, r7
 8012c2a:	bfba      	itte	lt
 8012c2c:	426d      	neglt	r5, r5
 8012c2e:	f04f 38ff 	movlt.w	r8, #4294967295
 8012c32:	f04f 0801 	movge.w	r8, #1
 8012c36:	f7ff ff5d 	bl	8012af4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8012c3a:	ab03      	add	r3, sp, #12
 8012c3c:	e9cd 5300 	strd	r5, r3, [sp]
 8012c40:	463a      	mov	r2, r7
 8012c42:	4603      	mov	r3, r0
 8012c44:	4648      	mov	r0, r9
 8012c46:	f7ff ff73 	bl	8012b30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012c4a:	6823      	ldr	r3, [r4, #0]
 8012c4c:	9a03      	ldr	r2, [sp, #12]
 8012c4e:	4546      	cmp	r6, r8
 8012c50:	441a      	add	r2, r3
 8012c52:	fb92 f3f5 	sdiv	r3, r2, r5
 8012c56:	4418      	add	r0, r3
 8012c58:	bf18      	it	ne
 8012c5a:	4240      	negne	r0, r0
 8012c5c:	fb05 2313 	mls	r3, r5, r3, r2
 8012c60:	1c72      	adds	r2, r6, #1
 8012c62:	6023      	str	r3, [r4, #0]
 8012c64:	d105      	bne.n	8012c72 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8012c66:	2b00      	cmp	r3, #0
 8012c68:	f1c3 0200 	rsb	r2, r3, #0
 8012c6c:	db0b      	blt.n	8012c86 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8012c6e:	6022      	str	r2, [r4, #0]
 8012c70:	e006      	b.n	8012c80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012c72:	2e01      	cmp	r6, #1
 8012c74:	d104      	bne.n	8012c80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012c76:	2b00      	cmp	r3, #0
 8012c78:	da02      	bge.n	8012c80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012c7a:	442b      	add	r3, r5
 8012c7c:	3801      	subs	r0, #1
 8012c7e:	6023      	str	r3, [r4, #0]
 8012c80:	b005      	add	sp, #20
 8012c82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012c86:	3801      	subs	r0, #1
 8012c88:	1b52      	subs	r2, r2, r5
 8012c8a:	e7f0      	b.n	8012c6e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08012c8c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8012c8c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8012c90:	4c1c      	ldr	r4, [pc, #112]	@ (8012d04 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8012c92:	6807      	ldr	r7, [r0, #0]
 8012c94:	69a3      	ldr	r3, [r4, #24]
 8012c96:	4605      	mov	r5, r0
 8012c98:	b92b      	cbnz	r3, 8012ca6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8012c9a:	6840      	ldr	r0, [r0, #4]
 8012c9c:	e9c5 7000 	strd	r7, r0, [r5]
 8012ca0:	b004      	add	sp, #16
 8012ca2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ca6:	68a2      	ldr	r2, [r4, #8]
 8012ca8:	6820      	ldr	r0, [r4, #0]
 8012caa:	ae04      	add	r6, sp, #16
 8012cac:	f04f 0802 	mov.w	r8, #2
 8012cb0:	fb93 f1f8 	sdiv	r1, r3, r8
 8012cb4:	440a      	add	r2, r1
 8012cb6:	f846 2d04 	str.w	r2, [r6, #-4]!
 8012cba:	69e1      	ldr	r1, [r4, #28]
 8012cbc:	9600      	str	r6, [sp, #0]
 8012cbe:	463a      	mov	r2, r7
 8012cc0:	f7ff ff98 	bl	8012bf4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012cc4:	69a3      	ldr	r3, [r4, #24]
 8012cc6:	686a      	ldr	r2, [r5, #4]
 8012cc8:	6a21      	ldr	r1, [r4, #32]
 8012cca:	9600      	str	r6, [sp, #0]
 8012ccc:	4607      	mov	r7, r0
 8012cce:	6860      	ldr	r0, [r4, #4]
 8012cd0:	f7ff ff90 	bl	8012bf4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012cd4:	6962      	ldr	r2, [r4, #20]
 8012cd6:	69a3      	ldr	r3, [r4, #24]
 8012cd8:	fb93 f8f8 	sdiv	r8, r3, r8
 8012cdc:	4442      	add	r2, r8
 8012cde:	9203      	str	r2, [sp, #12]
 8012ce0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8012ce2:	682a      	ldr	r2, [r5, #0]
 8012ce4:	9600      	str	r6, [sp, #0]
 8012ce6:	4407      	add	r7, r0
 8012ce8:	68e0      	ldr	r0, [r4, #12]
 8012cea:	f7ff ff83 	bl	8012bf4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012cee:	9600      	str	r6, [sp, #0]
 8012cf0:	4680      	mov	r8, r0
 8012cf2:	69a3      	ldr	r3, [r4, #24]
 8012cf4:	686a      	ldr	r2, [r5, #4]
 8012cf6:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8012cf8:	6920      	ldr	r0, [r4, #16]
 8012cfa:	f7ff ff7b 	bl	8012bf4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012cfe:	4440      	add	r0, r8
 8012d00:	e7cc      	b.n	8012c9c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8012d02:	bf00      	nop
 8012d04:	200023b4 	.word	0x200023b4

08012d08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8012d08:	4b07      	ldr	r3, [pc, #28]	@ (8012d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8012d0a:	781b      	ldrb	r3, [r3, #0]
 8012d0c:	2b01      	cmp	r3, #1
 8012d0e:	d109      	bne.n	8012d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8012d10:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012d14:	f9b0 2000 	ldrsh.w	r2, [r0]
 8012d18:	8003      	strh	r3, [r0, #0]
 8012d1a:	4b04      	ldr	r3, [pc, #16]	@ (8012d2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8012d1c:	881b      	ldrh	r3, [r3, #0]
 8012d1e:	3b01      	subs	r3, #1
 8012d20:	1a9b      	subs	r3, r3, r2
 8012d22:	800b      	strh	r3, [r1, #0]
 8012d24:	4770      	bx	lr
 8012d26:	bf00      	nop
 8012d28:	200023a0 	.word	0x200023a0
 8012d2c:	2000239c 	.word	0x2000239c

08012d30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8012d30:	b510      	push	{r4, lr}
 8012d32:	4b07      	ldr	r3, [pc, #28]	@ (8012d50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8012d34:	781b      	ldrb	r3, [r3, #0]
 8012d36:	2b01      	cmp	r3, #1
 8012d38:	d108      	bne.n	8012d4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8012d3a:	4b06      	ldr	r3, [pc, #24]	@ (8012d54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8012d3c:	880c      	ldrh	r4, [r1, #0]
 8012d3e:	881b      	ldrh	r3, [r3, #0]
 8012d40:	f9b0 2000 	ldrsh.w	r2, [r0]
 8012d44:	3b01      	subs	r3, #1
 8012d46:	1b1b      	subs	r3, r3, r4
 8012d48:	8003      	strh	r3, [r0, #0]
 8012d4a:	800a      	strh	r2, [r1, #0]
 8012d4c:	bd10      	pop	{r4, pc}
 8012d4e:	bf00      	nop
 8012d50:	200023a0 	.word	0x200023a0
 8012d54:	2000239c 	.word	0x2000239c

08012d58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8012d58:	b510      	push	{r4, lr}
 8012d5a:	4b0a      	ldr	r3, [pc, #40]	@ (8012d84 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8012d5c:	781b      	ldrb	r3, [r3, #0]
 8012d5e:	2b01      	cmp	r3, #1
 8012d60:	d10e      	bne.n	8012d80 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8012d62:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8012d66:	8843      	ldrh	r3, [r0, #2]
 8012d68:	f9b0 4000 	ldrsh.w	r4, [r0]
 8012d6c:	8044      	strh	r4, [r0, #2]
 8012d6e:	18ca      	adds	r2, r1, r3
 8012d70:	4b05      	ldr	r3, [pc, #20]	@ (8012d88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8012d72:	881b      	ldrh	r3, [r3, #0]
 8012d74:	1a9b      	subs	r3, r3, r2
 8012d76:	8003      	strh	r3, [r0, #0]
 8012d78:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012d7c:	80c3      	strh	r3, [r0, #6]
 8012d7e:	8081      	strh	r1, [r0, #4]
 8012d80:	bd10      	pop	{r4, pc}
 8012d82:	bf00      	nop
 8012d84:	200023a0 	.word	0x200023a0
 8012d88:	2000239c 	.word	0x2000239c

08012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8012d8c:	4b08      	ldr	r3, [pc, #32]	@ (8012db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8012d8e:	781b      	ldrb	r3, [r3, #0]
 8012d90:	2b01      	cmp	r3, #1
 8012d92:	d10c      	bne.n	8012dae <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8012d94:	8803      	ldrh	r3, [r0, #0]
 8012d96:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8012d9a:	8842      	ldrh	r2, [r0, #2]
 8012d9c:	8002      	strh	r2, [r0, #0]
 8012d9e:	185a      	adds	r2, r3, r1
 8012da0:	4b04      	ldr	r3, [pc, #16]	@ (8012db4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8012da2:	881b      	ldrh	r3, [r3, #0]
 8012da4:	1a9b      	subs	r3, r3, r2
 8012da6:	8043      	strh	r3, [r0, #2]
 8012da8:	88c3      	ldrh	r3, [r0, #6]
 8012daa:	8083      	strh	r3, [r0, #4]
 8012dac:	80c1      	strh	r1, [r0, #6]
 8012dae:	4770      	bx	lr
 8012db0:	200023a0 	.word	0x200023a0
 8012db4:	2000239c 	.word	0x2000239c

08012db8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8012db8:	b510      	push	{r4, lr}
 8012dba:	4b07      	ldr	r3, [pc, #28]	@ (8012dd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8012dbc:	781b      	ldrb	r3, [r3, #0]
 8012dbe:	2b01      	cmp	r3, #1
 8012dc0:	d108      	bne.n	8012dd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8012dc2:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012dc6:	f9b0 4000 	ldrsh.w	r4, [r0]
 8012dca:	8003      	strh	r3, [r0, #0]
 8012dcc:	8893      	ldrh	r3, [r2, #4]
 8012dce:	3b01      	subs	r3, #1
 8012dd0:	1b1b      	subs	r3, r3, r4
 8012dd2:	800b      	strh	r3, [r1, #0]
 8012dd4:	bd10      	pop	{r4, pc}
 8012dd6:	bf00      	nop
 8012dd8:	200023a0 	.word	0x200023a0

08012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8012ddc:	b510      	push	{r4, lr}
 8012dde:	4b0a      	ldr	r3, [pc, #40]	@ (8012e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8012de0:	781b      	ldrb	r3, [r3, #0]
 8012de2:	2b01      	cmp	r3, #1
 8012de4:	460a      	mov	r2, r1
 8012de6:	d10d      	bne.n	8012e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8012de8:	8881      	ldrh	r1, [r0, #4]
 8012dea:	8803      	ldrh	r3, [r0, #0]
 8012dec:	440b      	add	r3, r1
 8012dee:	4601      	mov	r1, r0
 8012df0:	3b01      	subs	r3, #1
 8012df2:	f821 3b02 	strh.w	r3, [r1], #2
 8012df6:	f7ff ffdf 	bl	8012db8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8012dfa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012dfe:	88c2      	ldrh	r2, [r0, #6]
 8012e00:	8082      	strh	r2, [r0, #4]
 8012e02:	80c3      	strh	r3, [r0, #6]
 8012e04:	bd10      	pop	{r4, pc}
 8012e06:	bf00      	nop
 8012e08:	200023a0 	.word	0x200023a0

08012e0c <_ZN8touchgfx11Application13requestRedrawEv>:
 8012e0c:	4b06      	ldr	r3, [pc, #24]	@ (8012e28 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8012e0e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012e12:	4b06      	ldr	r3, [pc, #24]	@ (8012e2c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8012e14:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 8012e18:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012e1c:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8012e20:	2100      	movs	r1, #0
 8012e22:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8012e26:	4770      	bx	lr
 8012e28:	2000239c 	.word	0x2000239c
 8012e2c:	2000239e 	.word	0x2000239e

08012e30 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8012e30:	4b03      	ldr	r3, [pc, #12]	@ (8012e40 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8012e32:	6818      	ldr	r0, [r3, #0]
 8012e34:	b110      	cbz	r0, 8012e3c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8012e36:	6803      	ldr	r3, [r0, #0]
 8012e38:	699b      	ldr	r3, [r3, #24]
 8012e3a:	4718      	bx	r3
 8012e3c:	4770      	bx	lr
 8012e3e:	bf00      	nop
 8012e40:	200023e4 	.word	0x200023e4

08012e44 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8012e44:	4770      	bx	lr
	...

08012e48 <_ZN8touchgfx11Application4drawEv>:
 8012e48:	b507      	push	{r0, r1, r2, lr}
 8012e4a:	4b09      	ldr	r3, [pc, #36]	@ (8012e70 <_ZN8touchgfx11Application4drawEv+0x28>)
 8012e4c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012e50:	4b08      	ldr	r3, [pc, #32]	@ (8012e74 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8012e52:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012e56:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012e5a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012e5e:	6803      	ldr	r3, [r0, #0]
 8012e60:	2100      	movs	r1, #0
 8012e62:	9100      	str	r1, [sp, #0]
 8012e64:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012e66:	4669      	mov	r1, sp
 8012e68:	4798      	blx	r3
 8012e6a:	b003      	add	sp, #12
 8012e6c:	f85d fb04 	ldr.w	pc, [sp], #4
 8012e70:	2000239c 	.word	0x2000239c
 8012e74:	2000239e 	.word	0x2000239e

08012e78 <_ZN8touchgfx11Application10invalidateEv>:
 8012e78:	4b09      	ldr	r3, [pc, #36]	@ (8012ea0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8012e7a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012e7e:	4b09      	ldr	r3, [pc, #36]	@ (8012ea4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8012e80:	b082      	sub	sp, #8
 8012e82:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012e86:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012e8a:	2100      	movs	r1, #0
 8012e8c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012e90:	9100      	str	r1, [sp, #0]
 8012e92:	6803      	ldr	r3, [r0, #0]
 8012e94:	aa02      	add	r2, sp, #8
 8012e96:	e912 0006 	ldmdb	r2, {r1, r2}
 8012e9a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012e9c:	b002      	add	sp, #8
 8012e9e:	4718      	bx	r3
 8012ea0:	2000239c 	.word	0x2000239c
 8012ea4:	2000239e 	.word	0x2000239e

08012ea8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8012ea8:	4b03      	ldr	r3, [pc, #12]	@ (8012eb8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8012eaa:	6818      	ldr	r0, [r3, #0]
 8012eac:	b110      	cbz	r0, 8012eb4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8012eae:	6803      	ldr	r3, [r0, #0]
 8012eb0:	69db      	ldr	r3, [r3, #28]
 8012eb2:	4718      	bx	r3
 8012eb4:	4770      	bx	lr
 8012eb6:	bf00      	nop
 8012eb8:	200023e4 	.word	0x200023e4

08012ebc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8012ebc:	4b03      	ldr	r3, [pc, #12]	@ (8012ecc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8012ebe:	6818      	ldr	r0, [r3, #0]
 8012ec0:	b110      	cbz	r0, 8012ec8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8012ec2:	6803      	ldr	r3, [r0, #0]
 8012ec4:	6a1b      	ldr	r3, [r3, #32]
 8012ec6:	4718      	bx	r3
 8012ec8:	4770      	bx	lr
 8012eca:	bf00      	nop
 8012ecc:	200023e4 	.word	0x200023e4

08012ed0 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8012ed0:	2300      	movs	r3, #0
 8012ed2:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 8012ed6:	4770      	bx	lr

08012ed8 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8012ed8:	4b03      	ldr	r3, [pc, #12]	@ (8012ee8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8012eda:	6818      	ldr	r0, [r3, #0]
 8012edc:	b110      	cbz	r0, 8012ee4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8012ede:	6803      	ldr	r3, [r0, #0]
 8012ee0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012ee2:	4718      	bx	r3
 8012ee4:	4770      	bx	lr
 8012ee6:	bf00      	nop
 8012ee8:	200023e4 	.word	0x200023e4

08012eec <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8012eec:	b510      	push	{r4, lr}
 8012eee:	f9b1 4000 	ldrsh.w	r4, [r1]
 8012ef2:	888a      	ldrh	r2, [r1, #4]
 8012ef4:	f9b0 3000 	ldrsh.w	r3, [r0]
 8012ef8:	4422      	add	r2, r4
 8012efa:	b212      	sxth	r2, r2
 8012efc:	4293      	cmp	r3, r2
 8012efe:	da15      	bge.n	8012f2c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8012f00:	8882      	ldrh	r2, [r0, #4]
 8012f02:	4413      	add	r3, r2
 8012f04:	b21b      	sxth	r3, r3
 8012f06:	429c      	cmp	r4, r3
 8012f08:	da10      	bge.n	8012f2c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8012f0a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012f0e:	88c9      	ldrh	r1, [r1, #6]
 8012f10:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8012f14:	4419      	add	r1, r3
 8012f16:	b209      	sxth	r1, r1
 8012f18:	428a      	cmp	r2, r1
 8012f1a:	da07      	bge.n	8012f2c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8012f1c:	88c0      	ldrh	r0, [r0, #6]
 8012f1e:	4410      	add	r0, r2
 8012f20:	b200      	sxth	r0, r0
 8012f22:	4283      	cmp	r3, r0
 8012f24:	bfac      	ite	ge
 8012f26:	2000      	movge	r0, #0
 8012f28:	2001      	movlt	r0, #1
 8012f2a:	bd10      	pop	{r4, pc}
 8012f2c:	2000      	movs	r0, #0
 8012f2e:	e7fc      	b.n	8012f2a <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08012f30 <_ZN8touchgfx4Rect10restrictToEss>:
 8012f30:	f9b0 3000 	ldrsh.w	r3, [r0]
 8012f34:	2b00      	cmp	r3, #0
 8012f36:	b510      	push	{r4, lr}
 8012f38:	da04      	bge.n	8012f44 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8012f3a:	8884      	ldrh	r4, [r0, #4]
 8012f3c:	4423      	add	r3, r4
 8012f3e:	8083      	strh	r3, [r0, #4]
 8012f40:	2300      	movs	r3, #0
 8012f42:	8003      	strh	r3, [r0, #0]
 8012f44:	f9b0 4000 	ldrsh.w	r4, [r0]
 8012f48:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012f4c:	1b09      	subs	r1, r1, r4
 8012f4e:	428b      	cmp	r3, r1
 8012f50:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8012f54:	bfc8      	it	gt
 8012f56:	8081      	strhgt	r1, [r0, #4]
 8012f58:	2b00      	cmp	r3, #0
 8012f5a:	da04      	bge.n	8012f66 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8012f5c:	88c1      	ldrh	r1, [r0, #6]
 8012f5e:	440b      	add	r3, r1
 8012f60:	80c3      	strh	r3, [r0, #6]
 8012f62:	2300      	movs	r3, #0
 8012f64:	8043      	strh	r3, [r0, #2]
 8012f66:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8012f6a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8012f6e:	1a52      	subs	r2, r2, r1
 8012f70:	4293      	cmp	r3, r2
 8012f72:	bfc8      	it	gt
 8012f74:	80c2      	strhgt	r2, [r0, #6]
 8012f76:	bd10      	pop	{r4, pc}

08012f78 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8012f78:	b510      	push	{r4, lr}
 8012f7a:	4b10      	ldr	r3, [pc, #64]	@ (8012fbc <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8012f7c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012f80:	4b0f      	ldr	r3, [pc, #60]	@ (8012fc0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8012f82:	460c      	mov	r4, r1
 8012f84:	4620      	mov	r0, r4
 8012f86:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012f8a:	f7ff ffd1 	bl	8012f30 <_ZN8touchgfx4Rect10restrictToEss>
 8012f8e:	4b0d      	ldr	r3, [pc, #52]	@ (8012fc4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8012f90:	6818      	ldr	r0, [r3, #0]
 8012f92:	b190      	cbz	r0, 8012fba <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8012f94:	6803      	ldr	r3, [r0, #0]
 8012f96:	4621      	mov	r1, r4
 8012f98:	689b      	ldr	r3, [r3, #8]
 8012f9a:	4798      	blx	r3
 8012f9c:	4b0a      	ldr	r3, [pc, #40]	@ (8012fc8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8012f9e:	6818      	ldr	r0, [r3, #0]
 8012fa0:	b118      	cbz	r0, 8012faa <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8012fa2:	6803      	ldr	r3, [r0, #0]
 8012fa4:	4621      	mov	r1, r4
 8012fa6:	689b      	ldr	r3, [r3, #8]
 8012fa8:	4798      	blx	r3
 8012faa:	4b08      	ldr	r3, [pc, #32]	@ (8012fcc <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8012fac:	6818      	ldr	r0, [r3, #0]
 8012fae:	6803      	ldr	r3, [r0, #0]
 8012fb0:	4621      	mov	r1, r4
 8012fb2:	69db      	ldr	r3, [r3, #28]
 8012fb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012fb8:	4718      	bx	r3
 8012fba:	bd10      	pop	{r4, pc}
 8012fbc:	2000239e 	.word	0x2000239e
 8012fc0:	2000239c 	.word	0x2000239c
 8012fc4:	200023e4 	.word	0x200023e4
 8012fc8:	200023e0 	.word	0x200023e0
 8012fcc:	200023a8 	.word	0x200023a8

08012fd0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8012fd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012fd2:	4606      	mov	r6, r0
 8012fd4:	4608      	mov	r0, r1
 8012fd6:	460f      	mov	r7, r1
 8012fd8:	f7fc fc2f 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 8012fdc:	b9e8      	cbnz	r0, 801301a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8012fde:	f9b7 5000 	ldrsh.w	r5, [r7]
 8012fe2:	f9b6 4000 	ldrsh.w	r4, [r6]
 8012fe6:	42a5      	cmp	r5, r4
 8012fe8:	db17      	blt.n	801301a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8012fea:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8012fee:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8012ff2:	429a      	cmp	r2, r3
 8012ff4:	db11      	blt.n	801301a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8012ff6:	88b9      	ldrh	r1, [r7, #4]
 8012ff8:	440d      	add	r5, r1
 8012ffa:	88b1      	ldrh	r1, [r6, #4]
 8012ffc:	440c      	add	r4, r1
 8012ffe:	b22d      	sxth	r5, r5
 8013000:	b224      	sxth	r4, r4
 8013002:	42a5      	cmp	r5, r4
 8013004:	dc09      	bgt.n	801301a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013006:	88f8      	ldrh	r0, [r7, #6]
 8013008:	4410      	add	r0, r2
 801300a:	88f2      	ldrh	r2, [r6, #6]
 801300c:	4413      	add	r3, r2
 801300e:	b200      	sxth	r0, r0
 8013010:	b21b      	sxth	r3, r3
 8013012:	4298      	cmp	r0, r3
 8013014:	bfcc      	ite	gt
 8013016:	2000      	movgt	r0, #0
 8013018:	2001      	movle	r0, #1
 801301a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801301c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 801301c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801301e:	4604      	mov	r4, r0
 8013020:	4608      	mov	r0, r1
 8013022:	460d      	mov	r5, r1
 8013024:	f7fc fc09 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013028:	b978      	cbnz	r0, 801304a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801302a:	4620      	mov	r0, r4
 801302c:	f7fc fc05 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013030:	f9b5 6000 	ldrsh.w	r6, [r5]
 8013034:	b150      	cbz	r0, 801304c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8013036:	8026      	strh	r6, [r4, #0]
 8013038:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801303c:	8063      	strh	r3, [r4, #2]
 801303e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8013042:	80a3      	strh	r3, [r4, #4]
 8013044:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8013048:	80e3      	strh	r3, [r4, #6]
 801304a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801304c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8013050:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013054:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8013058:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 801305c:	88ed      	ldrh	r5, [r5, #6]
 801305e:	42b1      	cmp	r1, r6
 8013060:	460f      	mov	r7, r1
 8013062:	bfa8      	it	ge
 8013064:	4637      	movge	r7, r6
 8013066:	4293      	cmp	r3, r2
 8013068:	4618      	mov	r0, r3
 801306a:	4466      	add	r6, ip
 801306c:	bfa8      	it	ge
 801306e:	4610      	movge	r0, r2
 8013070:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8013074:	8027      	strh	r7, [r4, #0]
 8013076:	442a      	add	r2, r5
 8013078:	88e5      	ldrh	r5, [r4, #6]
 801307a:	8060      	strh	r0, [r4, #2]
 801307c:	4461      	add	r1, ip
 801307e:	442b      	add	r3, r5
 8013080:	b236      	sxth	r6, r6
 8013082:	b209      	sxth	r1, r1
 8013084:	b212      	sxth	r2, r2
 8013086:	b21b      	sxth	r3, r3
 8013088:	428e      	cmp	r6, r1
 801308a:	bfac      	ite	ge
 801308c:	ebc7 0106 	rsbge	r1, r7, r6
 8013090:	ebc7 0101 	rsblt	r1, r7, r1
 8013094:	429a      	cmp	r2, r3
 8013096:	bfac      	ite	ge
 8013098:	ebc0 0202 	rsbge	r2, r0, r2
 801309c:	ebc0 0203 	rsblt	r2, r0, r3
 80130a0:	80a1      	strh	r1, [r4, #4]
 80130a2:	80e2      	strh	r2, [r4, #6]
 80130a4:	e7d1      	b.n	801304a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080130a8 <_ZN8touchgfx11Application11getInstanceEv>:
 80130a8:	4b01      	ldr	r3, [pc, #4]	@ (80130b0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80130aa:	6818      	ldr	r0, [r3, #0]
 80130ac:	4770      	bx	lr
 80130ae:	bf00      	nop
 80130b0:	200023f4 	.word	0x200023f4

080130b4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80130b4:	b510      	push	{r4, lr}
 80130b6:	2300      	movs	r3, #0
 80130b8:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 80130bc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80130c0:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 80130c4:	4604      	mov	r4, r0
 80130c6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80130ca:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 80130ce:	429a      	cmp	r2, r3
 80130d0:	d90e      	bls.n	80130f0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80130d2:	18e2      	adds	r2, r4, r3
 80130d4:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 80130d8:	b122      	cbz	r2, 80130e4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80130da:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80130de:	6803      	ldr	r3, [r0, #0]
 80130e0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80130e2:	4798      	blx	r3
 80130e4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80130e8:	3301      	adds	r3, #1
 80130ea:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80130ee:	e7ea      	b.n	80130c6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80130f0:	bd10      	pop	{r4, pc}

080130f2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80130f2:	2300      	movs	r3, #0
 80130f4:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80130f8:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 80130fc:	30a4      	adds	r0, #164	@ 0xa4
 80130fe:	f802 3b01 	strb.w	r3, [r2], #1
 8013102:	4282      	cmp	r2, r0
 8013104:	d1fb      	bne.n	80130fe <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8013106:	4770      	bx	lr

08013108 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8013108:	b570      	push	{r4, r5, r6, lr}
 801310a:	4c0b      	ldr	r4, [pc, #44]	@ (8013138 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 801310c:	4605      	mov	r5, r0
 801310e:	6820      	ldr	r0, [r4, #0]
 8013110:	460e      	mov	r6, r1
 8013112:	b110      	cbz	r0, 801311a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8013114:	6803      	ldr	r3, [r0, #0]
 8013116:	695b      	ldr	r3, [r3, #20]
 8013118:	4798      	blx	r3
 801311a:	1d28      	adds	r0, r5, #4
 801311c:	f7ff ffe9 	bl	80130f2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8013120:	6026      	str	r6, [r4, #0]
 8013122:	6833      	ldr	r3, [r6, #0]
 8013124:	4630      	mov	r0, r6
 8013126:	68db      	ldr	r3, [r3, #12]
 8013128:	4798      	blx	r3
 801312a:	682b      	ldr	r3, [r5, #0]
 801312c:	4628      	mov	r0, r5
 801312e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013130:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013134:	4718      	bx	r3
 8013136:	bf00      	nop
 8013138:	200023e4 	.word	0x200023e4

0801313c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 801313c:	2300      	movs	r3, #0
 801313e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 8013142:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 8013146:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013148:	461a      	mov	r2, r3
 801314a:	461c      	mov	r4, r3
 801314c:	461d      	mov	r5, r3
 801314e:	459c      	cmp	ip, r3
 8013150:	dd1a      	ble.n	8013188 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8013152:	18c6      	adds	r6, r0, r3
 8013154:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8013158:	b16e      	cbz	r6, 8013176 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801315a:	429a      	cmp	r2, r3
 801315c:	d008      	beq.n	8013170 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801315e:	fa1f fe82 	uxth.w	lr, r2
 8013162:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8013166:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801316a:	1887      	adds	r7, r0, r2
 801316c:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8013170:	3201      	adds	r2, #1
 8013172:	3301      	adds	r3, #1
 8013174:	e7eb      	b.n	801314e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8013176:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 801317a:	4299      	cmp	r1, r3
 801317c:	bfa8      	it	ge
 801317e:	3501      	addge	r5, #1
 8013180:	429e      	cmp	r6, r3
 8013182:	bfc8      	it	gt
 8013184:	3401      	addgt	r4, #1
 8013186:	e7f4      	b.n	8013172 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8013188:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 801318c:	1b49      	subs	r1, r1, r5
 801318e:	1b1b      	subs	r3, r3, r4
 8013190:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 8013194:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8013198:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801319c:	4293      	cmp	r3, r2
 801319e:	dd03      	ble.n	80131a8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80131a0:	3b01      	subs	r3, #1
 80131a2:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80131a6:	e7f7      	b.n	8013198 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80131a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080131ac <_ZN8touchgfx11Application15handleTickEventEv>:
 80131ac:	b570      	push	{r4, r5, r6, lr}
 80131ae:	4d16      	ldr	r5, [pc, #88]	@ (8013208 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80131b0:	4604      	mov	r4, r0
 80131b2:	6828      	ldr	r0, [r5, #0]
 80131b4:	b140      	cbz	r0, 80131c8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80131b6:	7a03      	ldrb	r3, [r0, #8]
 80131b8:	b933      	cbnz	r3, 80131c8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80131ba:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80131be:	6803      	ldr	r3, [r0, #0]
 80131c0:	689b      	ldr	r3, [r3, #8]
 80131c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80131c6:	4718      	bx	r3
 80131c8:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 80131cc:	4e0f      	ldr	r6, [pc, #60]	@ (801320c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80131ce:	b973      	cbnz	r3, 80131ee <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80131d0:	b168      	cbz	r0, 80131ee <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80131d2:	7a03      	ldrb	r3, [r0, #8]
 80131d4:	b15b      	cbz	r3, 80131ee <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80131d6:	6830      	ldr	r0, [r6, #0]
 80131d8:	b110      	cbz	r0, 80131e0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80131da:	6803      	ldr	r3, [r0, #0]
 80131dc:	691b      	ldr	r3, [r3, #16]
 80131de:	4798      	blx	r3
 80131e0:	6828      	ldr	r0, [r5, #0]
 80131e2:	6803      	ldr	r3, [r0, #0]
 80131e4:	68db      	ldr	r3, [r3, #12]
 80131e6:	4798      	blx	r3
 80131e8:	2301      	movs	r3, #1
 80131ea:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80131ee:	3404      	adds	r4, #4
 80131f0:	4620      	mov	r0, r4
 80131f2:	f7ff ff5f 	bl	80130b4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80131f6:	4620      	mov	r0, r4
 80131f8:	f7ff ffa0 	bl	801313c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80131fc:	6830      	ldr	r0, [r6, #0]
 80131fe:	b110      	cbz	r0, 8013206 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8013200:	6803      	ldr	r3, [r0, #0]
 8013202:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8013204:	e7dd      	b.n	80131c2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8013206:	bd70      	pop	{r4, r5, r6, pc}
 8013208:	200023e8 	.word	0x200023e8
 801320c:	200023e4 	.word	0x200023e4

08013210 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8013210:	4603      	mov	r3, r0
 8013212:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 8013216:	2200      	movs	r2, #0
 8013218:	801a      	strh	r2, [r3, #0]
 801321a:	805a      	strh	r2, [r3, #2]
 801321c:	809a      	strh	r2, [r3, #4]
 801321e:	80da      	strh	r2, [r3, #6]
 8013220:	3308      	adds	r3, #8
 8013222:	428b      	cmp	r3, r1
 8013224:	d1f8      	bne.n	8013218 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8013226:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 801322a:	4770      	bx	lr

0801322c <_ZN8touchgfx11ApplicationC1Ev>:
 801322c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801322e:	4606      	mov	r6, r0
 8013230:	4b1c      	ldr	r3, [pc, #112]	@ (80132a4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8013232:	f846 3b04 	str.w	r3, [r6], #4
 8013236:	4604      	mov	r4, r0
 8013238:	2500      	movs	r5, #0
 801323a:	22a8      	movs	r2, #168	@ 0xa8
 801323c:	2100      	movs	r1, #0
 801323e:	4630      	mov	r0, r6
 8013240:	f011 ffa4 	bl	802518c <memset>
 8013244:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8013248:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801324c:	f7ff ffe0 	bl	8013210 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8013250:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8013254:	f7ff ffdc 	bl	8013210 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8013258:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 801325c:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 8013260:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 8013264:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8013268:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 801326c:	490e      	ldr	r1, [pc, #56]	@ (80132a8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801326e:	480f      	ldr	r0, [pc, #60]	@ (80132ac <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8013270:	4f0f      	ldr	r7, [pc, #60]	@ (80132b0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8013272:	f010 fcc7 	bl	8023c04 <CRC_Lock>
 8013276:	4b0f      	ldr	r3, [pc, #60]	@ (80132b4 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8013278:	b158      	cbz	r0, 8013292 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801327a:	801d      	strh	r5, [r3, #0]
 801327c:	4a0e      	ldr	r2, [pc, #56]	@ (80132b8 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801327e:	2300      	movs	r3, #0
 8013280:	6013      	str	r3, [r2, #0]
 8013282:	4a0e      	ldr	r2, [pc, #56]	@ (80132bc <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8013284:	603b      	str	r3, [r7, #0]
 8013286:	4630      	mov	r0, r6
 8013288:	6013      	str	r3, [r2, #0]
 801328a:	f7ff ff32 	bl	80130f2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801328e:	4620      	mov	r0, r4
 8013290:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013292:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8013296:	2002      	movs	r0, #2
 8013298:	801a      	strh	r2, [r3, #0]
 801329a:	6038      	str	r0, [r7, #0]
 801329c:	f001 fa52 	bl	8014744 <_ZN8touchgfx6Screen4drawEv>
 80132a0:	e7ec      	b.n	801327c <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80132a2:	bf00      	nop
 80132a4:	08029c2c 	.word	0x08029c2c
 80132a8:	b5e8b5cd 	.word	0xb5e8b5cd
 80132ac:	f407a5c2 	.word	0xf407a5c2
 80132b0:	200023e4 	.word	0x200023e4
 80132b4:	2000002c 	.word	0x2000002c
 80132b8:	200023f4 	.word	0x200023f4
 80132bc:	200023e8 	.word	0x200023e8

080132c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80132c0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 80132c4:	3b01      	subs	r3, #1
 80132c6:	b29b      	uxth	r3, r3
 80132c8:	428b      	cmp	r3, r1
 80132ca:	b510      	push	{r4, lr}
 80132cc:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 80132d0:	d908      	bls.n	80132e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80132d2:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80132d6:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80132da:	681a      	ldr	r2, [r3, #0]
 80132dc:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80132e0:	685a      	ldr	r2, [r3, #4]
 80132e2:	6062      	str	r2, [r4, #4]
 80132e4:	bd10      	pop	{r4, pc}
	...

080132e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80132e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132ec:	4b8f      	ldr	r3, [pc, #572]	@ (801352c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80132ee:	b08f      	sub	sp, #60	@ 0x3c
 80132f0:	ac0a      	add	r4, sp, #40	@ 0x28
 80132f2:	e884 0006 	stmia.w	r4, {r1, r2}
 80132f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80132fa:	4b8d      	ldr	r3, [pc, #564]	@ (8013530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80132fc:	4683      	mov	fp, r0
 80132fe:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013302:	4620      	mov	r0, r4
 8013304:	f7ff fe14 	bl	8012f30 <_ZN8touchgfx4Rect10restrictToEss>
 8013308:	4620      	mov	r0, r4
 801330a:	f7fc fa96 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 801330e:	2800      	cmp	r0, #0
 8013310:	d16a      	bne.n	80133e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8013312:	9403      	str	r4, [sp, #12]
 8013314:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8013318:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 801331c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8013320:	35a4      	adds	r5, #164	@ 0xa4
 8013322:	9301      	str	r3, [sp, #4]
 8013324:	b15c      	cbz	r4, 801333e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8013326:	4629      	mov	r1, r5
 8013328:	9803      	ldr	r0, [sp, #12]
 801332a:	f7ff fe51 	bl	8012fd0 <_ZNK8touchgfx4Rect8includesERKS0_>
 801332e:	3c01      	subs	r4, #1
 8013330:	b118      	cbz	r0, 801333a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8013332:	b2a1      	uxth	r1, r4
 8013334:	9801      	ldr	r0, [sp, #4]
 8013336:	f7ff ffc3 	bl	80132c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801333a:	3d08      	subs	r5, #8
 801333c:	e7f2      	b.n	8013324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801333e:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 8013342:	f8cd a010 	str.w	sl, [sp, #16]
 8013346:	f10a 33ff 	add.w	r3, sl, #4294967295
 801334a:	9302      	str	r3, [sp, #8]
 801334c:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8013350:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8013354:	9306      	str	r3, [sp, #24]
 8013356:	445c      	add	r4, fp
 8013358:	2500      	movs	r5, #0
 801335a:	4626      	mov	r6, r4
 801335c:	f8cd a014 	str.w	sl, [sp, #20]
 8013360:	462f      	mov	r7, r5
 8013362:	9b05      	ldr	r3, [sp, #20]
 8013364:	2b00      	cmp	r3, #0
 8013366:	d073      	beq.n	8013450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8013368:	9903      	ldr	r1, [sp, #12]
 801336a:	4630      	mov	r0, r6
 801336c:	f7ff fdbe 	bl	8012eec <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013370:	b350      	cbz	r0, 80133c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8013372:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8013376:	f9b6 c000 	ldrsh.w	ip, [r6]
 801337a:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 801337e:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8013382:	45e6      	cmp	lr, ip
 8013384:	db33      	blt.n	80133ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8013386:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801338a:	88b3      	ldrh	r3, [r6, #4]
 801338c:	4472      	add	r2, lr
 801338e:	4463      	add	r3, ip
 8013390:	b212      	sxth	r2, r2
 8013392:	b21b      	sxth	r3, r3
 8013394:	429a      	cmp	r2, r3
 8013396:	dc2a      	bgt.n	80133ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8013398:	88f3      	ldrh	r3, [r6, #6]
 801339a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801339e:	fa1f f289 	uxth.w	r2, r9
 80133a2:	4413      	add	r3, r2
 80133a4:	b29b      	uxth	r3, r3
 80133a6:	45c8      	cmp	r8, r9
 80133a8:	fa1f fc88 	uxth.w	ip, r8
 80133ac:	fa0f fe83 	sxth.w	lr, r3
 80133b0:	db0f      	blt.n	80133d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80133b2:	eba3 030c 	sub.w	r3, r3, ip
 80133b6:	1ac9      	subs	r1, r1, r3
 80133b8:	b209      	sxth	r1, r1
 80133ba:	2900      	cmp	r1, #0
 80133bc:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80133c0:	dd12      	ble.n	80133e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80133c2:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 80133c6:	4605      	mov	r5, r0
 80133c8:	9b05      	ldr	r3, [sp, #20]
 80133ca:	3b01      	subs	r3, #1
 80133cc:	9305      	str	r3, [sp, #20]
 80133ce:	3e08      	subs	r6, #8
 80133d0:	e7c7      	b.n	8013362 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80133d2:	4461      	add	r1, ip
 80133d4:	b209      	sxth	r1, r1
 80133d6:	4571      	cmp	r1, lr
 80133d8:	dc38      	bgt.n	801344c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80133da:	eba2 020c 	sub.w	r2, r2, ip
 80133de:	b212      	sxth	r2, r2
 80133e0:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80133e4:	2a00      	cmp	r2, #0
 80133e6:	dcee      	bgt.n	80133c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80133e8:	b00f      	add	sp, #60	@ 0x3c
 80133ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133ee:	45c8      	cmp	r8, r9
 80133f0:	db2c      	blt.n	801344c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80133f2:	88f3      	ldrh	r3, [r6, #6]
 80133f4:	4499      	add	r9, r3
 80133f6:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 80133fa:	4498      	add	r8, r3
 80133fc:	fa0f f989 	sxth.w	r9, r9
 8013400:	fa0f f888 	sxth.w	r8, r8
 8013404:	45c1      	cmp	r9, r8
 8013406:	db21      	blt.n	801344c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8013408:	88b3      	ldrh	r3, [r6, #4]
 801340a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801340e:	fa1f f28c 	uxth.w	r2, ip
 8013412:	4413      	add	r3, r2
 8013414:	b29b      	uxth	r3, r3
 8013416:	45e6      	cmp	lr, ip
 8013418:	fa1f f88e 	uxth.w	r8, lr
 801341c:	fa0f f983 	sxth.w	r9, r3
 8013420:	db0a      	blt.n	8013438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8013422:	eba3 0308 	sub.w	r3, r3, r8
 8013426:	1ac9      	subs	r1, r1, r3
 8013428:	b209      	sxth	r1, r1
 801342a:	2900      	cmp	r1, #0
 801342c:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8013430:	ddda      	ble.n	80133e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8013432:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8013436:	e7c6      	b.n	80133c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8013438:	4441      	add	r1, r8
 801343a:	b209      	sxth	r1, r1
 801343c:	4549      	cmp	r1, r9
 801343e:	dc05      	bgt.n	801344c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8013440:	eba2 0208 	sub.w	r2, r2, r8
 8013444:	b212      	sxth	r2, r2
 8013446:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 801344a:	e7cb      	b.n	80133e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 801344c:	4607      	mov	r7, r0
 801344e:	e7bb      	b.n	80133c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8013450:	2d00      	cmp	r5, #0
 8013452:	d181      	bne.n	8013358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8013454:	2f00      	cmp	r7, #0
 8013456:	f000 81dd 	beq.w	8013814 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801345a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 801345e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 8013462:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8013466:	b2b3      	uxth	r3, r6
 8013468:	9305      	str	r3, [sp, #20]
 801346a:	9a05      	ldr	r2, [sp, #20]
 801346c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8013470:	4413      	add	r3, r2
 8013472:	b2ba      	uxth	r2, r7
 8013474:	4492      	add	sl, r2
 8013476:	b29b      	uxth	r3, r3
 8013478:	fa1f fa8a 	uxth.w	sl, sl
 801347c:	fa0f f883 	sxth.w	r8, r3
 8013480:	fa0f f98a 	sxth.w	r9, sl
 8013484:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8013488:	9b04      	ldr	r3, [sp, #16]
 801348a:	2b00      	cmp	r3, #0
 801348c:	d052      	beq.n	8013534 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801348e:	9903      	ldr	r1, [sp, #12]
 8013490:	4620      	mov	r0, r4
 8013492:	f7ff fd2b 	bl	8012eec <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013496:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801349a:	b1c0      	cbz	r0, 80134ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801349c:	f9b4 e000 	ldrsh.w	lr, [r4]
 80134a0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80134a4:	4576      	cmp	r6, lr
 80134a6:	dc22      	bgt.n	80134ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80134a8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80134ac:	44f4      	add	ip, lr
 80134ae:	fa0f fc8c 	sxth.w	ip, ip
 80134b2:	45e0      	cmp	r8, ip
 80134b4:	db1b      	blt.n	80134ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80134b6:	428f      	cmp	r7, r1
 80134b8:	fa1f fc81 	uxth.w	ip, r1
 80134bc:	88e1      	ldrh	r1, [r4, #6]
 80134be:	dc0d      	bgt.n	80134dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80134c0:	ebaa 0c0c 	sub.w	ip, sl, ip
 80134c4:	eba1 010c 	sub.w	r1, r1, ip
 80134c8:	f8a4 9002 	strh.w	r9, [r4, #2]
 80134cc:	80e1      	strh	r1, [r4, #6]
 80134ce:	4628      	mov	r0, r5
 80134d0:	9904      	ldr	r1, [sp, #16]
 80134d2:	3901      	subs	r1, #1
 80134d4:	9104      	str	r1, [sp, #16]
 80134d6:	3c08      	subs	r4, #8
 80134d8:	4605      	mov	r5, r0
 80134da:	e7d3      	b.n	8013484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80134dc:	4461      	add	r1, ip
 80134de:	b209      	sxth	r1, r1
 80134e0:	4549      	cmp	r1, r9
 80134e2:	dcf5      	bgt.n	80134d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80134e4:	eba2 0c0c 	sub.w	ip, r2, ip
 80134e8:	f8a4 c006 	strh.w	ip, [r4, #6]
 80134ec:	e7ef      	b.n	80134ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80134ee:	428f      	cmp	r7, r1
 80134f0:	dcee      	bgt.n	80134d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80134f2:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80134f6:	4461      	add	r1, ip
 80134f8:	b209      	sxth	r1, r1
 80134fa:	4589      	cmp	r9, r1
 80134fc:	dbe8      	blt.n	80134d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80134fe:	4576      	cmp	r6, lr
 8013500:	fa1f fc8e 	uxth.w	ip, lr
 8013504:	88a1      	ldrh	r1, [r4, #4]
 8013506:	dc07      	bgt.n	8013518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8013508:	eba3 0c0c 	sub.w	ip, r3, ip
 801350c:	eba1 010c 	sub.w	r1, r1, ip
 8013510:	f8a4 8000 	strh.w	r8, [r4]
 8013514:	80a1      	strh	r1, [r4, #4]
 8013516:	e7da      	b.n	80134ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013518:	4461      	add	r1, ip
 801351a:	b209      	sxth	r1, r1
 801351c:	4588      	cmp	r8, r1
 801351e:	dbd7      	blt.n	80134d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8013520:	9905      	ldr	r1, [sp, #20]
 8013522:	eba1 0c0c 	sub.w	ip, r1, ip
 8013526:	f8a4 c004 	strh.w	ip, [r4, #4]
 801352a:	e7d0      	b.n	80134ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801352c:	2000239e 	.word	0x2000239e
 8013530:	2000239c 	.word	0x2000239c
 8013534:	2d00      	cmp	r5, #0
 8013536:	f000 816d 	beq.w	8013814 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801353a:	9b06      	ldr	r3, [sp, #24]
 801353c:	445b      	add	r3, fp
 801353e:	461c      	mov	r4, r3
 8013540:	9b02      	ldr	r3, [sp, #8]
 8013542:	3301      	adds	r3, #1
 8013544:	f000 8166 	beq.w	8013814 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8013548:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 801354c:	4629      	mov	r1, r5
 801354e:	9803      	ldr	r0, [sp, #12]
 8013550:	f7ff fd3e 	bl	8012fd0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8013554:	b120      	cbz	r0, 8013560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8013556:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801355a:	9801      	ldr	r0, [sp, #4]
 801355c:	f7ff feb0 	bl	80132c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013560:	9903      	ldr	r1, [sp, #12]
 8013562:	4628      	mov	r0, r5
 8013564:	f7ff fcc2 	bl	8012eec <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013568:	2800      	cmp	r0, #0
 801356a:	f000 809c 	beq.w	80136a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801356e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 8013572:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8013576:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 801357a:	9309      	str	r3, [sp, #36]	@ 0x24
 801357c:	fa1f f189 	uxth.w	r1, r9
 8013580:	eb01 0c03 	add.w	ip, r1, r3
 8013584:	fa1f fa8c 	uxth.w	sl, ip
 8013588:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801358c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8013590:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8013594:	b283      	uxth	r3, r0
 8013596:	eb03 050c 	add.w	r5, r3, ip
 801359a:	b2ad      	uxth	r5, r5
 801359c:	9505      	str	r5, [sp, #20]
 801359e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80135a2:	9504      	str	r5, [sp, #16]
 80135a4:	4548      	cmp	r0, r9
 80135a6:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 80135aa:	f340 8099 	ble.w	80136e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80135ae:	1a5b      	subs	r3, r3, r1
 80135b0:	b29b      	uxth	r3, r3
 80135b2:	4596      	cmp	lr, r2
 80135b4:	fa0f f08a 	sxth.w	r0, sl
 80135b8:	b21e      	sxth	r6, r3
 80135ba:	dd2e      	ble.n	801361a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80135bc:	9f02      	ldr	r7, [sp, #8]
 80135be:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 80135c2:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80135c6:	9f04      	ldr	r7, [sp, #16]
 80135c8:	1a3f      	subs	r7, r7, r0
 80135ca:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 80135ce:	fa1f fe8e 	uxth.w	lr, lr
 80135d2:	b292      	uxth	r2, r2
 80135d4:	ebae 0102 	sub.w	r1, lr, r2
 80135d8:	44a6      	add	lr, r4
 80135da:	4402      	add	r2, r0
 80135dc:	b289      	uxth	r1, r1
 80135de:	fa0f fe8e 	sxth.w	lr, lr
 80135e2:	b212      	sxth	r2, r2
 80135e4:	b20d      	sxth	r5, r1
 80135e6:	ebae 0202 	sub.w	r2, lr, r2
 80135ea:	436f      	muls	r7, r5
 80135ec:	4372      	muls	r2, r6
 80135ee:	4297      	cmp	r7, r2
 80135f0:	db09      	blt.n	8013606 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80135f2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 80135f6:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 80135fa:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80135fe:	449c      	add	ip, r3
 8013600:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8013604:	e686      	b.n	8013314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013606:	4421      	add	r1, r4
 8013608:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 801360c:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8013610:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8013614:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8013618:	e67c      	b.n	8013314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801361a:	9f04      	ldr	r7, [sp, #16]
 801361c:	42b8      	cmp	r0, r7
 801361e:	da27      	bge.n	8013670 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8013620:	9902      	ldr	r1, [sp, #8]
 8013622:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8013626:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801362a:	eb05 010e 	add.w	r1, r5, lr
 801362e:	fa1f f881 	uxth.w	r8, r1
 8013632:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8013636:	4411      	add	r1, r2
 8013638:	eba1 0108 	sub.w	r1, r1, r8
 801363c:	b289      	uxth	r1, r1
 801363e:	fa0f f988 	sxth.w	r9, r8
 8013642:	eba2 020e 	sub.w	r2, r2, lr
 8013646:	fa0f f881 	sxth.w	r8, r1
 801364a:	1a3f      	subs	r7, r7, r0
 801364c:	4372      	muls	r2, r6
 801364e:	fb08 f707 	mul.w	r7, r8, r7
 8013652:	42ba      	cmp	r2, r7
 8013654:	dc06      	bgt.n	8013664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8013656:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 801365a:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 801365e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 8013662:	e7ca      	b.n	80135fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8013664:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8013668:	4429      	add	r1, r5
 801366a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801366e:	e651      	b.n	8013314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013670:	9805      	ldr	r0, [sp, #20]
 8013672:	ebaa 0000 	sub.w	r0, sl, r0
 8013676:	b280      	uxth	r0, r0
 8013678:	2d06      	cmp	r5, #6
 801367a:	fa0f fe80 	sxth.w	lr, r0
 801367e:	d817      	bhi.n	80136b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8013680:	9b04      	ldr	r3, [sp, #16]
 8013682:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8013686:	1c6b      	adds	r3, r5, #1
 8013688:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 801368c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8013690:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8013694:	9b01      	ldr	r3, [sp, #4]
 8013696:	9801      	ldr	r0, [sp, #4]
 8013698:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801369c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80136a0:	805a      	strh	r2, [r3, #2]
 80136a2:	809e      	strh	r6, [r3, #4]
 80136a4:	80d9      	strh	r1, [r3, #6]
 80136a6:	9b02      	ldr	r3, [sp, #8]
 80136a8:	3b01      	subs	r3, #1
 80136aa:	9302      	str	r3, [sp, #8]
 80136ac:	3c08      	subs	r4, #8
 80136ae:	e747      	b.n	8013540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80136b0:	9a02      	ldr	r2, [sp, #8]
 80136b2:	45b6      	cmp	lr, r6
 80136b4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80136b8:	db0d      	blt.n	80136d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80136ba:	449c      	add	ip, r3
 80136bc:	fa1f fc8c 	uxth.w	ip, ip
 80136c0:	445a      	add	r2, fp
 80136c2:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 80136c6:	448c      	add	ip, r1
 80136c8:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 80136cc:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 80136d0:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 80136d4:	e61e      	b.n	8013314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80136d6:	445a      	add	r2, fp
 80136d8:	4484      	add	ip, r0
 80136da:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 80136de:	e78f      	b.n	8013600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80136e0:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 80136e4:	fa1f f18e 	uxth.w	r1, lr
 80136e8:	eb01 0806 	add.w	r8, r1, r6
 80136ec:	b293      	uxth	r3, r2
 80136ee:	fa1f f888 	uxth.w	r8, r8
 80136f2:	9306      	str	r3, [sp, #24]
 80136f4:	fa0f f388 	sxth.w	r3, r8
 80136f8:	9307      	str	r3, [sp, #28]
 80136fa:	9f06      	ldr	r7, [sp, #24]
 80136fc:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8013700:	443b      	add	r3, r7
 8013702:	b29b      	uxth	r3, r3
 8013704:	4596      	cmp	lr, r2
 8013706:	9308      	str	r3, [sp, #32]
 8013708:	da24      	bge.n	8013754 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 801370a:	9905      	ldr	r1, [sp, #20]
 801370c:	eba3 0308 	sub.w	r3, r3, r8
 8013710:	ebaa 0401 	sub.w	r4, sl, r1
 8013714:	b2a4      	uxth	r4, r4
 8013716:	b29b      	uxth	r3, r3
 8013718:	b225      	sxth	r5, r4
 801371a:	b219      	sxth	r1, r3
 801371c:	eba2 020e 	sub.w	r2, r2, lr
 8013720:	eba9 0000 	sub.w	r0, r9, r0
 8013724:	436a      	muls	r2, r5
 8013726:	4348      	muls	r0, r1
 8013728:	4282      	cmp	r2, r0
 801372a:	9a02      	ldr	r2, [sp, #8]
 801372c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8013730:	445a      	add	r2, fp
 8013732:	dc06      	bgt.n	8013742 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8013734:	9b07      	ldr	r3, [sp, #28]
 8013736:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 801373a:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 801373e:	44a4      	add	ip, r4
 8013740:	e75e      	b.n	8013600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8013742:	9904      	ldr	r1, [sp, #16]
 8013744:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8013748:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 801374c:	4433      	add	r3, r6
 801374e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8013752:	e5df      	b.n	8013314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013754:	9f06      	ldr	r7, [sp, #24]
 8013756:	9b04      	ldr	r3, [sp, #16]
 8013758:	1bc9      	subs	r1, r1, r7
 801375a:	fa0f f78a 	sxth.w	r7, sl
 801375e:	b289      	uxth	r1, r1
 8013760:	429f      	cmp	r7, r3
 8013762:	fa0f fe81 	sxth.w	lr, r1
 8013766:	dd23      	ble.n	80137b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8013768:	9a05      	ldr	r2, [sp, #20]
 801376a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801376e:	9d07      	ldr	r5, [sp, #28]
 8013770:	ebaa 0202 	sub.w	r2, sl, r2
 8013774:	b292      	uxth	r2, r2
 8013776:	eba5 0a03 	sub.w	sl, r5, r3
 801377a:	b214      	sxth	r4, r2
 801377c:	eba9 0000 	sub.w	r0, r9, r0
 8013780:	9b02      	ldr	r3, [sp, #8]
 8013782:	fb0e f000 	mul.w	r0, lr, r0
 8013786:	fb04 fa0a 	mul.w	sl, r4, sl
 801378a:	00db      	lsls	r3, r3, #3
 801378c:	4550      	cmp	r0, sl
 801378e:	445b      	add	r3, fp
 8013790:	db03      	blt.n	801379a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8013792:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8013796:	4494      	add	ip, r2
 8013798:	e732      	b.n	8013600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801379a:	9a04      	ldr	r2, [sp, #16]
 801379c:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 80137a0:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 80137a4:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 80137a8:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80137ac:	4431      	add	r1, r6
 80137ae:	e75c      	b.n	801366a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80137b0:	9b08      	ldr	r3, [sp, #32]
 80137b2:	eba3 0308 	sub.w	r3, r3, r8
 80137b6:	b29b      	uxth	r3, r3
 80137b8:	2d06      	cmp	r5, #6
 80137ba:	b218      	sxth	r0, r3
 80137bc:	d813      	bhi.n	80137e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80137be:	9b07      	ldr	r3, [sp, #28]
 80137c0:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 80137c4:	1c6b      	adds	r3, r5, #1
 80137c6:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 80137ca:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 80137ce:	9b01      	ldr	r3, [sp, #4]
 80137d0:	9901      	ldr	r1, [sp, #4]
 80137d2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80137d6:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80137da:	805a      	strh	r2, [r3, #2]
 80137dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80137de:	809a      	strh	r2, [r3, #4]
 80137e0:	f8a3 e006 	strh.w	lr, [r3, #6]
 80137e4:	e75f      	b.n	80136a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80137e6:	9c02      	ldr	r4, [sp, #8]
 80137e8:	4570      	cmp	r0, lr
 80137ea:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80137ee:	db0d      	blt.n	801380c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80137f0:	4431      	add	r1, r6
 80137f2:	9b06      	ldr	r3, [sp, #24]
 80137f4:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80137f8:	b289      	uxth	r1, r1
 80137fa:	445c      	add	r4, fp
 80137fc:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8013800:	4419      	add	r1, r3
 8013802:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8013806:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 801380a:	e583      	b.n	8013314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801380c:	445c      	add	r4, fp
 801380e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8013812:	e79b      	b.n	801374c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8013814:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8013818:	1e65      	subs	r5, r4, #1
 801381a:	b2ad      	uxth	r5, r5
 801381c:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8013820:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8013824:	42b5      	cmp	r5, r6
 8013826:	d044      	beq.n	80138b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8013828:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801382c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8013830:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8013834:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8013838:	4282      	cmp	r2, r0
 801383a:	d11f      	bne.n	801387c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 801383c:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8013840:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8013844:	459c      	cmp	ip, r3
 8013846:	d119      	bne.n	801387c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8013848:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 801384c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8013850:	19d8      	adds	r0, r3, r7
 8013852:	b200      	sxth	r0, r0
 8013854:	4288      	cmp	r0, r1
 8013856:	d109      	bne.n	801386c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8013858:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 801385c:	4413      	add	r3, r2
 801385e:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8013862:	4629      	mov	r1, r5
 8013864:	9801      	ldr	r0, [sp, #4]
 8013866:	f7ff fd2b 	bl	80132c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801386a:	e003      	b.n	8013874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801386c:	4411      	add	r1, r2
 801386e:	b209      	sxth	r1, r1
 8013870:	42b9      	cmp	r1, r7
 8013872:	d0f3      	beq.n	801385c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8013874:	3d01      	subs	r5, #1
 8013876:	b2ad      	uxth	r5, r5
 8013878:	3c08      	subs	r4, #8
 801387a:	e7d3      	b.n	8013824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801387c:	42b9      	cmp	r1, r7
 801387e:	d1f9      	bne.n	8013874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8013880:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8013884:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8013888:	4299      	cmp	r1, r3
 801388a:	d1f3      	bne.n	8013874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801388c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8013890:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8013894:	181f      	adds	r7, r3, r0
 8013896:	b23f      	sxth	r7, r7
 8013898:	42ba      	cmp	r2, r7
 801389a:	d105      	bne.n	80138a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 801389c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 80138a0:	440b      	add	r3, r1
 80138a2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80138a6:	e7dc      	b.n	8013862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80138a8:	440a      	add	r2, r1
 80138aa:	b212      	sxth	r2, r2
 80138ac:	4290      	cmp	r0, r2
 80138ae:	d1e1      	bne.n	8013874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80138b0:	e7f6      	b.n	80138a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80138b2:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 80138b6:	2e07      	cmp	r6, #7
 80138b8:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80138bc:	d812      	bhi.n	80138e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80138be:	1c75      	adds	r5, r6, #1
 80138c0:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 80138c4:	9d01      	ldr	r5, [sp, #4]
 80138c6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80138ca:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80138ce:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80138d2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80138d6:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80138da:	442c      	add	r4, r5
 80138dc:	8061      	strh	r1, [r4, #2]
 80138de:	80a2      	strh	r2, [r4, #4]
 80138e0:	80e3      	strh	r3, [r4, #6]
 80138e2:	e581      	b.n	80133e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80138e4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80138e8:	3e01      	subs	r6, #1
 80138ea:	445c      	add	r4, fp
 80138ec:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 80138f0:	f04f 37ff 	mov.w	r7, #4294967295
 80138f4:	2500      	movs	r5, #0
 80138f6:	9305      	str	r3, [sp, #20]
 80138f8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80138fc:	9302      	str	r3, [sp, #8]
 80138fe:	1e72      	subs	r2, r6, #1
 8013900:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8013904:	9304      	str	r3, [sp, #16]
 8013906:	4691      	mov	r9, r2
 8013908:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 801390c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8013910:	bf14      	ite	ne
 8013912:	9905      	ldrne	r1, [sp, #20]
 8013914:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8013918:	6818      	ldr	r0, [r3, #0]
 801391a:	9207      	str	r2, [sp, #28]
 801391c:	bf18      	it	ne
 801391e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8013922:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8013926:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801392a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801392e:	9306      	str	r3, [sp, #24]
 8013930:	fb18 f801 	smulbb	r8, r8, r1
 8013934:	6859      	ldr	r1, [r3, #4]
 8013936:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801393a:	4671      	mov	r1, lr
 801393c:	a80c      	add	r0, sp, #48	@ 0x30
 801393e:	f7ff fb6d 	bl	801301c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8013942:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8013946:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801394a:	9b04      	ldr	r3, [sp, #16]
 801394c:	9a02      	ldr	r2, [sp, #8]
 801394e:	fb10 f001 	smulbb	r0, r0, r1
 8013952:	fb02 8803 	mla	r8, r2, r3, r8
 8013956:	eba0 0108 	sub.w	r1, r0, r8
 801395a:	f04f 0c08 	mov.w	ip, #8
 801395e:	fb90 f0fc 	sdiv	r0, r0, ip
 8013962:	4288      	cmp	r0, r1
 8013964:	dc20      	bgt.n	80139a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8013966:	4551      	cmp	r1, sl
 8013968:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801396c:	da03      	bge.n	8013976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801396e:	b1d9      	cbz	r1, 80139a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8013970:	468a      	mov	sl, r1
 8013972:	464f      	mov	r7, r9
 8013974:	4635      	mov	r5, r6
 8013976:	f109 39ff 	add.w	r9, r9, #4294967295
 801397a:	f119 0f02 	cmn.w	r9, #2
 801397e:	d1c5      	bne.n	801390c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8013980:	4616      	mov	r6, r2
 8013982:	3201      	adds	r2, #1
 8013984:	f1a4 0408 	sub.w	r4, r4, #8
 8013988:	d1b6      	bne.n	80138f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 801398a:	9b01      	ldr	r3, [sp, #4]
 801398c:	b2ac      	uxth	r4, r5
 801398e:	00ed      	lsls	r5, r5, #3
 8013990:	1958      	adds	r0, r3, r5
 8013992:	1c7b      	adds	r3, r7, #1
 8013994:	d10b      	bne.n	80139ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8013996:	4601      	mov	r1, r0
 8013998:	9803      	ldr	r0, [sp, #12]
 801399a:	f7ff fb3f 	bl	801301c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801399e:	4621      	mov	r1, r4
 80139a0:	9801      	ldr	r0, [sp, #4]
 80139a2:	f7ff fc8d 	bl	80132c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80139a6:	e4b5      	b.n	8013314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80139a8:	464f      	mov	r7, r9
 80139aa:	4635      	mov	r5, r6
 80139ac:	e7ed      	b.n	801398a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80139ae:	9b01      	ldr	r3, [sp, #4]
 80139b0:	00ff      	lsls	r7, r7, #3
 80139b2:	19d9      	adds	r1, r3, r7
 80139b4:	f7ff fb32 	bl	801301c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80139b8:	9b03      	ldr	r3, [sp, #12]
 80139ba:	cb03      	ldmia	r3!, {r0, r1}
 80139bc:	445f      	add	r7, fp
 80139be:	445d      	add	r5, fp
 80139c0:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 80139c4:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 80139c8:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80139cc:	9b03      	ldr	r3, [sp, #12]
 80139ce:	6869      	ldr	r1, [r5, #4]
 80139d0:	c303      	stmia	r3!, {r0, r1}
 80139d2:	e7e4      	b.n	801399e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080139d4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80139d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139d8:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 80139dc:	b09b      	sub	sp, #108	@ 0x6c
 80139de:	4604      	mov	r4, r0
 80139e0:	4630      	mov	r0, r6
 80139e2:	f7fb ff2a 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 80139e6:	4605      	mov	r5, r0
 80139e8:	b948      	cbnz	r0, 80139fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80139ea:	6823      	ldr	r3, [r4, #0]
 80139ec:	e896 0006 	ldmia.w	r6, {r1, r2}
 80139f0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80139f2:	4620      	mov	r0, r4
 80139f4:	4798      	blx	r3
 80139f6:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 80139fa:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 80139fe:	4bc6      	ldr	r3, [pc, #792]	@ (8013d18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8013a00:	681b      	ldr	r3, [r3, #0]
 8013a02:	2b00      	cmp	r3, #0
 8013a04:	d03f      	beq.n	8013a86 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8013a06:	4dc5      	ldr	r5, [pc, #788]	@ (8013d1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8013a08:	4628      	mov	r0, r5
 8013a0a:	f7fb ff16 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013a0e:	4606      	mov	r6, r0
 8013a10:	2800      	cmp	r0, #0
 8013a12:	d138      	bne.n	8013a86 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8013a14:	4628      	mov	r0, r5
 8013a16:	f7ff f99f 	bl	8012d58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8013a1a:	6823      	ldr	r3, [r4, #0]
 8013a1c:	6829      	ldr	r1, [r5, #0]
 8013a1e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8013a20:	686a      	ldr	r2, [r5, #4]
 8013a22:	4620      	mov	r0, r4
 8013a24:	4798      	blx	r3
 8013a26:	802e      	strh	r6, [r5, #0]
 8013a28:	806e      	strh	r6, [r5, #2]
 8013a2a:	80ae      	strh	r6, [r5, #4]
 8013a2c:	80ee      	strh	r6, [r5, #6]
 8013a2e:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 8013a32:	4dbb      	ldr	r5, [pc, #748]	@ (8013d20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8013a34:	4640      	mov	r0, r8
 8013a36:	f7ff fbeb 	bl	8013210 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8013a3a:	882e      	ldrh	r6, [r5, #0]
 8013a3c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8013a40:	4633      	mov	r3, r6
 8013a42:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8013a46:	42bb      	cmp	r3, r7
 8013a48:	d224      	bcs.n	8013a94 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8013a4a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8013a4e:	2907      	cmp	r1, #7
 8013a50:	d816      	bhi.n	8013a80 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8013a52:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8013a56:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8013a5a:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8013a5e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8013a62:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8013a66:	1c4a      	adds	r2, r1, #1
 8013a68:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8013a6c:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8013a70:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8013a74:	f8a2 a002 	strh.w	sl, [r2, #2]
 8013a78:	f8a2 e004 	strh.w	lr, [r2, #4]
 8013a7c:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013a80:	3301      	adds	r3, #1
 8013a82:	b29b      	uxth	r3, r3
 8013a84:	e7df      	b.n	8013a46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8013a86:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8013a8a:	2b00      	cmp	r3, #0
 8013a8c:	d1cf      	bne.n	8013a2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8013a8e:	b01b      	add	sp, #108	@ 0x6c
 8013a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a94:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8013a98:	42b3      	cmp	r3, r6
 8013a9a:	d90c      	bls.n	8013ab6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8013a9c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8013aa0:	6822      	ldr	r2, [r4, #0]
 8013aa2:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8013aa6:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8013aa8:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8013aac:	4620      	mov	r0, r4
 8013aae:	3601      	adds	r6, #1
 8013ab0:	47b8      	blx	r7
 8013ab2:	b2b6      	uxth	r6, r6
 8013ab4:	e7ee      	b.n	8013a94 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8013ab6:	4a9b      	ldr	r2, [pc, #620]	@ (8013d24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8013ab8:	6813      	ldr	r3, [r2, #0]
 8013aba:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8013abe:	2b01      	cmp	r3, #1
 8013ac0:	4691      	mov	r9, r2
 8013ac2:	f040 80e2 	bne.w	8013c8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8013ac6:	8829      	ldrh	r1, [r5, #0]
 8013ac8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8013acc:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8013ad0:	33ae      	adds	r3, #174	@ 0xae
 8013ad2:	2600      	movs	r6, #0
 8013ad4:	428f      	cmp	r7, r1
 8013ad6:	f103 0308 	add.w	r3, r3, #8
 8013ada:	dd0a      	ble.n	8013af2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8013adc:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8013ae0:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8013ae4:	4402      	add	r2, r0
 8013ae6:	b212      	sxth	r2, r2
 8013ae8:	4296      	cmp	r6, r2
 8013aea:	bfb8      	it	lt
 8013aec:	4616      	movlt	r6, r2
 8013aee:	3101      	adds	r1, #1
 8013af0:	e7f0      	b.n	8013ad4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8013af2:	4b8d      	ldr	r3, [pc, #564]	@ (8013d28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8013af4:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 8013d24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8013af8:	881b      	ldrh	r3, [r3, #0]
 8013afa:	2b0f      	cmp	r3, #15
 8013afc:	bf88      	it	hi
 8013afe:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8013b02:	f04f 0300 	mov.w	r3, #0
 8013b06:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8013b0a:	bf98      	it	ls
 8013b0c:	f04f 0b01 	movls.w	fp, #1
 8013b10:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8013b14:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8013b18:	4b82      	ldr	r3, [pc, #520]	@ (8013d24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8013b1a:	4438      	add	r0, r7
 8013b1c:	b207      	sxth	r7, r0
 8013b1e:	6818      	ldr	r0, [r3, #0]
 8013b20:	42b7      	cmp	r7, r6
 8013b22:	6803      	ldr	r3, [r0, #0]
 8013b24:	f280 8083 	bge.w	8013c2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8013b28:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8013b2c:	4798      	blx	r3
 8013b2e:	eb07 030b 	add.w	r3, r7, fp
 8013b32:	4298      	cmp	r0, r3
 8013b34:	da07      	bge.n	8013b46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8013b36:	42b0      	cmp	r0, r6
 8013b38:	da05      	bge.n	8013b46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8013b3a:	4287      	cmp	r7, r0
 8013b3c:	dd6c      	ble.n	8013c18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8013b3e:	2f00      	cmp	r7, #0
 8013b40:	dd6a      	ble.n	8013c18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8013b42:	4630      	mov	r0, r6
 8013b44:	e004      	b.n	8013b50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8013b46:	4287      	cmp	r7, r0
 8013b48:	dcfb      	bgt.n	8013b42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8013b4a:	42b0      	cmp	r0, r6
 8013b4c:	bfa8      	it	ge
 8013b4e:	4630      	movge	r0, r6
 8013b50:	4b76      	ldr	r3, [pc, #472]	@ (8013d2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8013b52:	f8ad 7016 	strh.w	r7, [sp, #22]
 8013b56:	1bc0      	subs	r0, r0, r7
 8013b58:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013b5c:	882f      	ldrh	r7, [r5, #0]
 8013b5e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013b62:	2200      	movs	r2, #0
 8013b64:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013b68:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013b6c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8013b70:	42bb      	cmp	r3, r7
 8013b72:	d9cd      	bls.n	8013b10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8013b74:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8013b78:	ab07      	add	r3, sp, #28
 8013b7a:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8013b7e:	6851      	ldr	r1, [r2, #4]
 8013b80:	c303      	stmia	r3!, {r0, r1}
 8013b82:	a905      	add	r1, sp, #20
 8013b84:	a807      	add	r0, sp, #28
 8013b86:	f7ff f9b1 	bl	8012eec <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013b8a:	2800      	cmp	r0, #0
 8013b8c:	d04c      	beq.n	8013c28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8013b8e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8013b92:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8013b96:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8013b9a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8013b9e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8013ba2:	9302      	str	r3, [sp, #8]
 8013ba4:	4686      	mov	lr, r0
 8013ba6:	4290      	cmp	r0, r2
 8013ba8:	4450      	add	r0, sl
 8013baa:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8013bae:	bfb8      	it	lt
 8013bb0:	4696      	movlt	lr, r2
 8013bb2:	4452      	add	r2, sl
 8013bb4:	4299      	cmp	r1, r3
 8013bb6:	b280      	uxth	r0, r0
 8013bb8:	b292      	uxth	r2, r2
 8013bba:	468c      	mov	ip, r1
 8013bbc:	fa0f fa82 	sxth.w	sl, r2
 8013bc0:	bfb8      	it	lt
 8013bc2:	469c      	movlt	ip, r3
 8013bc4:	b203      	sxth	r3, r0
 8013bc6:	4553      	cmp	r3, sl
 8013bc8:	bfb8      	it	lt
 8013bca:	4602      	movlt	r2, r0
 8013bcc:	eba2 020e 	sub.w	r2, r2, lr
 8013bd0:	f8ad 2020 	strh.w	r2, [sp, #32]
 8013bd4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8013bd8:	9b02      	ldr	r3, [sp, #8]
 8013bda:	f8ad e01c 	strh.w	lr, [sp, #28]
 8013bde:	4411      	add	r1, r2
 8013be0:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8013be4:	f8ad c01e 	strh.w	ip, [sp, #30]
 8013be8:	4413      	add	r3, r2
 8013bea:	b289      	uxth	r1, r1
 8013bec:	b29b      	uxth	r3, r3
 8013bee:	b208      	sxth	r0, r1
 8013bf0:	b21a      	sxth	r2, r3
 8013bf2:	4290      	cmp	r0, r2
 8013bf4:	bfb8      	it	lt
 8013bf6:	460b      	movlt	r3, r1
 8013bf8:	eba3 030c 	sub.w	r3, r3, ip
 8013bfc:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8013c00:	a807      	add	r0, sp, #28
 8013c02:	f7fb fe1a 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013c06:	b920      	cbnz	r0, 8013c12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8013c08:	6823      	ldr	r3, [r4, #0]
 8013c0a:	a907      	add	r1, sp, #28
 8013c0c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8013c0e:	4620      	mov	r0, r4
 8013c10:	4798      	blx	r3
 8013c12:	3701      	adds	r7, #1
 8013c14:	b2bf      	uxth	r7, r7
 8013c16:	e7a9      	b.n	8013b6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8013c18:	f8d9 0000 	ldr.w	r0, [r9]
 8013c1c:	6803      	ldr	r3, [r0, #0]
 8013c1e:	2101      	movs	r1, #1
 8013c20:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8013c24:	4798      	blx	r3
 8013c26:	e773      	b.n	8013b10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8013c28:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8013c2c:	e7e8      	b.n	8013c00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8013c2e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8013c30:	4798      	blx	r3
 8013c32:	4b3f      	ldr	r3, [pc, #252]	@ (8013d30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8013c34:	781b      	ldrb	r3, [r3, #0]
 8013c36:	2b00      	cmp	r3, #0
 8013c38:	f43f af29 	beq.w	8013a8e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8013c3c:	2300      	movs	r3, #0
 8013c3e:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8013c42:	882b      	ldrh	r3, [r5, #0]
 8013c44:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8013c48:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8013c4c:	42ab      	cmp	r3, r5
 8013c4e:	f4bf af1e 	bcs.w	8013a8e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8013c52:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8013c56:	2907      	cmp	r1, #7
 8013c58:	d814      	bhi.n	8013c84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8013c5a:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8013c5e:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8013c62:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8013c66:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8013c6a:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8013c6e:	1c4a      	adds	r2, r1, #1
 8013c70:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8013c74:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8013c78:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8013c7c:	f8a2 c002 	strh.w	ip, [r2, #2]
 8013c80:	8097      	strh	r7, [r2, #4]
 8013c82:	80d6      	strh	r6, [r2, #6]
 8013c84:	3301      	adds	r3, #1
 8013c86:	b29b      	uxth	r3, r3
 8013c88:	e7e0      	b.n	8013c4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8013c8a:	2b02      	cmp	r3, #2
 8013c8c:	f040 8133 	bne.w	8013ef6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8013c90:	4b28      	ldr	r3, [pc, #160]	@ (8013d34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8013c92:	781b      	ldrb	r3, [r3, #0]
 8013c94:	2b01      	cmp	r3, #1
 8013c96:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8013c9a:	f000 8098 	beq.w	8013dce <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8013c9e:	882a      	ldrh	r2, [r5, #0]
 8013ca0:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8013ca4:	3201      	adds	r2, #1
 8013ca6:	b292      	uxth	r2, r2
 8013ca8:	2900      	cmp	r1, #0
 8013caa:	d0c2      	beq.n	8013c32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8013cac:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 8013cb0:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8013cb4:	441e      	add	r6, r3
 8013cb6:	b236      	sxth	r6, r6
 8013cb8:	4694      	mov	ip, r2
 8013cba:	f04f 0900 	mov.w	r9, #0
 8013cbe:	fa1f f38c 	uxth.w	r3, ip
 8013cc2:	4299      	cmp	r1, r3
 8013cc4:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8013cc8:	f240 80bf 	bls.w	8013e4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8013ccc:	4427      	add	r7, r4
 8013cce:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8013cd2:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8013cd6:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8013cda:	4283      	cmp	r3, r0
 8013cdc:	f340 80a1 	ble.w	8013e22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8013ce0:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 8013ce4:	4406      	add	r6, r0
 8013ce6:	b236      	sxth	r6, r6
 8013ce8:	429e      	cmp	r6, r3
 8013cea:	bfa8      	it	ge
 8013cec:	461e      	movge	r6, r3
 8013cee:	46e1      	mov	r9, ip
 8013cf0:	f10c 0c01 	add.w	ip, ip, #1
 8013cf4:	e7e3      	b.n	8013cbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8013cf6:	d10a      	bne.n	8013d0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8013cf8:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8013cfc:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8013d00:	4562      	cmp	r2, ip
 8013d02:	bfb8      	it	lt
 8013d04:	4662      	movlt	r2, ip
 8013d06:	4288      	cmp	r0, r1
 8013d08:	bfb8      	it	lt
 8013d0a:	461f      	movlt	r7, r3
 8013d0c:	e087      	b.n	8013e1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8013d0e:	428a      	cmp	r2, r1
 8013d10:	bfb8      	it	lt
 8013d12:	460a      	movlt	r2, r1
 8013d14:	e083      	b.n	8013e1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8013d16:	bf00      	nop
 8013d18:	200023e0 	.word	0x200023e0
 8013d1c:	200023ec 	.word	0x200023ec
 8013d20:	2000002c 	.word	0x2000002c
 8013d24:	200023a8 	.word	0x200023a8
 8013d28:	2000239e 	.word	0x2000239e
 8013d2c:	2000239c 	.word	0x2000239c
 8013d30:	200023a6 	.word	0x200023a6
 8013d34:	200023a0 	.word	0x200023a0
 8013d38:	19a1      	adds	r1, r4, r6
 8013d3a:	ab07      	add	r3, sp, #28
 8013d3c:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8013d40:	6849      	ldr	r1, [r1, #4]
 8013d42:	c303      	stmia	r3!, {r0, r1}
 8013d44:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8013d48:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8013d4c:	2b13      	cmp	r3, #19
 8013d4e:	bfd8      	it	le
 8013d50:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8013d54:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013d58:	440b      	add	r3, r1
 8013d5a:	1a9b      	subs	r3, r3, r2
 8013d5c:	a807      	add	r0, sp, #28
 8013d5e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013d62:	f7ff f813 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013d66:	a807      	add	r0, sp, #28
 8013d68:	f7fb fd67 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013d6c:	bb78      	cbnz	r0, 8013dce <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8013d6e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 8013d72:	f8d9 0000 	ldr.w	r0, [r9]
 8013d76:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013d7a:	f8d0 e000 	ldr.w	lr, [r0]
 8013d7e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8013d82:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8013d86:	f1bc 0f14 	cmp.w	ip, #20
 8013d8a:	bfa8      	it	ge
 8013d8c:	f04f 0c14 	movge.w	ip, #20
 8013d90:	fa1f fc8c 	uxth.w	ip, ip
 8013d94:	f8cd c000 	str.w	ip, [sp]
 8013d98:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8013d9c:	47d8      	blx	fp
 8013d9e:	4683      	mov	fp, r0
 8013da0:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8013da4:	a807      	add	r0, sp, #28
 8013da6:	f7fe ffd7 	bl	8012d58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8013daa:	6823      	ldr	r3, [r4, #0]
 8013dac:	4426      	add	r6, r4
 8013dae:	4620      	mov	r0, r4
 8013db0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8013db2:	a907      	add	r1, sp, #28
 8013db4:	4798      	blx	r3
 8013db6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8013dba:	eba0 000b 	sub.w	r0, r0, fp
 8013dbe:	b200      	sxth	r0, r0
 8013dc0:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8013dc4:	b918      	cbnz	r0, 8013dce <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8013dc6:	b2b9      	uxth	r1, r7
 8013dc8:	4650      	mov	r0, sl
 8013dca:	f7ff fa79 	bl	80132c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013dce:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8013dd2:	f1bb 0f00 	cmp.w	fp, #0
 8013dd6:	f43f af2c 	beq.w	8013c32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8013dda:	882b      	ldrh	r3, [r5, #0]
 8013ddc:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8013de0:	3301      	adds	r3, #1
 8013de2:	b29b      	uxth	r3, r3
 8013de4:	2700      	movs	r7, #0
 8013de6:	b299      	uxth	r1, r3
 8013de8:	458b      	cmp	fp, r1
 8013dea:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8013dee:	d9a3      	bls.n	8013d38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8013df0:	4426      	add	r6, r4
 8013df2:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8013df6:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 8013dfa:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8013dfe:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8013e02:	4408      	add	r0, r1
 8013e04:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8013e08:	4461      	add	r1, ip
 8013e0a:	b200      	sxth	r0, r0
 8013e0c:	b209      	sxth	r1, r1
 8013e0e:	4288      	cmp	r0, r1
 8013e10:	f6bf af71 	bge.w	8013cf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8013e14:	4584      	cmp	ip, r0
 8013e16:	4662      	mov	r2, ip
 8013e18:	461f      	mov	r7, r3
 8013e1a:	bfb8      	it	lt
 8013e1c:	4602      	movlt	r2, r0
 8013e1e:	3301      	adds	r3, #1
 8013e20:	e7e1      	b.n	8013de6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8013e22:	d10e      	bne.n	8013e42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8013e24:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8013e28:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8013e2c:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8013e30:	4473      	add	r3, lr
 8013e32:	b21b      	sxth	r3, r3
 8013e34:	429e      	cmp	r6, r3
 8013e36:	bfa8      	it	ge
 8013e38:	461e      	movge	r6, r3
 8013e3a:	4287      	cmp	r7, r0
 8013e3c:	bfb8      	it	lt
 8013e3e:	46e1      	movlt	r9, ip
 8013e40:	e756      	b.n	8013cf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8013e42:	4286      	cmp	r6, r0
 8013e44:	bfa8      	it	ge
 8013e46:	4606      	movge	r6, r0
 8013e48:	e752      	b.n	8013cf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8013e4a:	eb0a 0007 	add.w	r0, sl, r7
 8013e4e:	4427      	add	r7, r4
 8013e50:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8013e54:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8013e58:	f1bb 0f13 	cmp.w	fp, #19
 8013e5c:	bfde      	ittt	le
 8013e5e:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 8013e62:	445e      	addle	r6, fp
 8013e64:	b236      	sxthle	r6, r6
 8013e66:	f7fb fce8 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013e6a:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8013e6e:	2800      	cmp	r0, #0
 8013e70:	f47f af1a 	bne.w	8013ca8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8013e74:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8013e78:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8013e7c:	482a      	ldr	r0, [pc, #168]	@ (8013f28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8013e7e:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8013e82:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8013e86:	6800      	ldr	r0, [r0, #0]
 8013e88:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013e8c:	1ab6      	subs	r6, r6, r2
 8013e8e:	2e14      	cmp	r6, #20
 8013e90:	f8ad 201e 	strh.w	r2, [sp, #30]
 8013e94:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013e98:	bfa8      	it	ge
 8013e9a:	2614      	movge	r6, #20
 8013e9c:	f8d0 c000 	ldr.w	ip, [r0]
 8013ea0:	b2b6      	uxth	r6, r6
 8013ea2:	fa1f fb8b 	uxth.w	fp, fp
 8013ea6:	455e      	cmp	r6, fp
 8013ea8:	bf94      	ite	ls
 8013eaa:	9600      	strls	r6, [sp, #0]
 8013eac:	f8cd b000 	strhi.w	fp, [sp]
 8013eb0:	b292      	uxth	r2, r2
 8013eb2:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 8013eb6:	b29b      	uxth	r3, r3
 8013eb8:	b289      	uxth	r1, r1
 8013eba:	47b0      	blx	r6
 8013ebc:	6823      	ldr	r3, [r4, #0]
 8013ebe:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8013ec2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8013ec4:	a907      	add	r1, sp, #28
 8013ec6:	4620      	mov	r0, r4
 8013ec8:	4798      	blx	r3
 8013eca:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 8013ece:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8013ed2:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8013ed6:	1a5b      	subs	r3, r3, r1
 8013ed8:	440a      	add	r2, r1
 8013eda:	b21b      	sxth	r3, r3
 8013edc:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8013ee0:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8013ee4:	2b00      	cmp	r3, #0
 8013ee6:	f47f aeda 	bne.w	8013c9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8013eea:	fa1f f189 	uxth.w	r1, r9
 8013eee:	4650      	mov	r0, sl
 8013ef0:	f7ff f9e6 	bl	80132c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013ef4:	e6d3      	b.n	8013c9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8013ef6:	882e      	ldrh	r6, [r5, #0]
 8013ef8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8013efc:	42b3      	cmp	r3, r6
 8013efe:	f67f ae98 	bls.w	8013c32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8013f02:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8013f06:	ab07      	add	r3, sp, #28
 8013f08:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8013f0c:	6851      	ldr	r1, [r2, #4]
 8013f0e:	c303      	stmia	r3!, {r0, r1}
 8013f10:	a807      	add	r0, sp, #28
 8013f12:	f7fb fc92 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013f16:	b920      	cbnz	r0, 8013f22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8013f18:	6823      	ldr	r3, [r4, #0]
 8013f1a:	a907      	add	r1, sp, #28
 8013f1c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8013f1e:	4620      	mov	r0, r4
 8013f20:	4798      	blx	r3
 8013f22:	3601      	adds	r6, #1
 8013f24:	b2b6      	uxth	r6, r6
 8013f26:	e7e7      	b.n	8013ef8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8013f28:	200023a8 	.word	0x200023a8

08013f2c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8013f2c:	4b03      	ldr	r3, [pc, #12]	@ (8013f3c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8013f2e:	2200      	movs	r2, #0
 8013f30:	801a      	strh	r2, [r3, #0]
 8013f32:	805a      	strh	r2, [r3, #2]
 8013f34:	809a      	strh	r2, [r3, #4]
 8013f36:	80da      	strh	r2, [r3, #6]
 8013f38:	4770      	bx	lr
 8013f3a:	bf00      	nop
 8013f3c:	200023ec 	.word	0x200023ec

08013f40 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8013f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f44:	4606      	mov	r6, r0
 8013f46:	b09d      	sub	sp, #116	@ 0x74
 8013f48:	a803      	add	r0, sp, #12
 8013f4a:	4614      	mov	r4, r2
 8013f4c:	468a      	mov	sl, r1
 8013f4e:	461d      	mov	r5, r3
 8013f50:	f000 fd72 	bl	8014a38 <_ZN8touchgfx12TextProviderC1Ev>
 8013f54:	6833      	ldr	r3, [r6, #0]
 8013f56:	4630      	mov	r0, r6
 8013f58:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013f5a:	4798      	blx	r3
 8013f5c:	6833      	ldr	r3, [r6, #0]
 8013f5e:	4607      	mov	r7, r0
 8013f60:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8013f62:	4630      	mov	r0, r6
 8013f64:	4798      	blx	r3
 8013f66:	462a      	mov	r2, r5
 8013f68:	9000      	str	r0, [sp, #0]
 8013f6a:	4621      	mov	r1, r4
 8013f6c:	463b      	mov	r3, r7
 8013f6e:	a803      	add	r0, sp, #12
 8013f70:	f000 fdbd 	bl	8014aee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013f74:	2500      	movs	r5, #0
 8013f76:	462c      	mov	r4, r5
 8013f78:	46a9      	mov	r9, r5
 8013f7a:	46a8      	mov	r8, r5
 8013f7c:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8013f80:	2300      	movs	r3, #0
 8013f82:	9302      	str	r3, [sp, #8]
 8013f84:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013f88:	429c      	cmp	r4, r3
 8013f8a:	d002      	beq.n	8013f92 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8013f8c:	455c      	cmp	r4, fp
 8013f8e:	bf18      	it	ne
 8013f90:	4625      	movne	r5, r4
 8013f92:	ab02      	add	r3, sp, #8
 8013f94:	4632      	mov	r2, r6
 8013f96:	4651      	mov	r1, sl
 8013f98:	a803      	add	r0, sp, #12
 8013f9a:	f001 f8ab 	bl	80150f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013f9e:	4604      	mov	r4, r0
 8013fa0:	b108      	cbz	r0, 8013fa6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8013fa2:	280a      	cmp	r0, #10
 8013fa4:	d10a      	bne.n	8013fbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8013fa6:	45c1      	cmp	r9, r8
 8013fa8:	bf38      	it	cc
 8013faa:	46c1      	movcc	r9, r8
 8013fac:	f04f 0800 	mov.w	r8, #0
 8013fb0:	2c00      	cmp	r4, #0
 8013fb2:	d1e5      	bne.n	8013f80 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8013fb4:	4648      	mov	r0, r9
 8013fb6:	b01d      	add	sp, #116	@ 0x74
 8013fb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013fbc:	9a02      	ldr	r2, [sp, #8]
 8013fbe:	2a00      	cmp	r2, #0
 8013fc0:	d0de      	beq.n	8013f80 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8013fc2:	7b57      	ldrb	r7, [r2, #13]
 8013fc4:	6833      	ldr	r3, [r6, #0]
 8013fc6:	8894      	ldrh	r4, [r2, #4]
 8013fc8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013fca:	007f      	lsls	r7, r7, #1
 8013fcc:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8013fd0:	7a97      	ldrb	r7, [r2, #10]
 8013fd2:	4629      	mov	r1, r5
 8013fd4:	4307      	orrs	r7, r0
 8013fd6:	4630      	mov	r0, r6
 8013fd8:	4798      	blx	r3
 8013fda:	4438      	add	r0, r7
 8013fdc:	4480      	add	r8, r0
 8013fde:	fa1f f888 	uxth.w	r8, r8
 8013fe2:	e7e5      	b.n	8013fb0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08013fe4 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8013fe4:	b508      	push	{r3, lr}
 8013fe6:	6803      	ldr	r3, [r0, #0]
 8013fe8:	68db      	ldr	r3, [r3, #12]
 8013fea:	4798      	blx	r3
 8013fec:	b128      	cbz	r0, 8013ffa <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8013fee:	7b43      	ldrb	r3, [r0, #13]
 8013ff0:	7a80      	ldrb	r0, [r0, #10]
 8013ff2:	005b      	lsls	r3, r3, #1
 8013ff4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013ff8:	4318      	orrs	r0, r3
 8013ffa:	bd08      	pop	{r3, pc}

08013ffc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8013ffc:	b40e      	push	{r1, r2, r3}
 8013ffe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014000:	b09e      	sub	sp, #120	@ 0x78
 8014002:	ab23      	add	r3, sp, #140	@ 0x8c
 8014004:	4605      	mov	r5, r0
 8014006:	f853 4b04 	ldr.w	r4, [r3], #4
 801400a:	9303      	str	r3, [sp, #12]
 801400c:	a805      	add	r0, sp, #20
 801400e:	f000 fd13 	bl	8014a38 <_ZN8touchgfx12TextProviderC1Ev>
 8014012:	682b      	ldr	r3, [r5, #0]
 8014014:	4628      	mov	r0, r5
 8014016:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8014018:	4798      	blx	r3
 801401a:	682b      	ldr	r3, [r5, #0]
 801401c:	4606      	mov	r6, r0
 801401e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8014020:	4628      	mov	r0, r5
 8014022:	4798      	blx	r3
 8014024:	4633      	mov	r3, r6
 8014026:	ae1e      	add	r6, sp, #120	@ 0x78
 8014028:	4621      	mov	r1, r4
 801402a:	9000      	str	r0, [sp, #0]
 801402c:	9a03      	ldr	r2, [sp, #12]
 801402e:	2400      	movs	r4, #0
 8014030:	a805      	add	r0, sp, #20
 8014032:	f000 fd5c 	bl	8014aee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014036:	f846 4d68 	str.w	r4, [r6, #-104]!
 801403a:	462a      	mov	r2, r5
 801403c:	4633      	mov	r3, r6
 801403e:	4621      	mov	r1, r4
 8014040:	a805      	add	r0, sp, #20
 8014042:	f001 f857 	bl	80150f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014046:	b1f0      	cbz	r0, 8014086 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8014048:	280a      	cmp	r0, #10
 801404a:	d018      	beq.n	801407e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801404c:	9f04      	ldr	r7, [sp, #16]
 801404e:	b1b7      	cbz	r7, 801407e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8014050:	7b78      	ldrb	r0, [r7, #13]
 8014052:	7a3b      	ldrb	r3, [r7, #8]
 8014054:	88ea      	ldrh	r2, [r5, #6]
 8014056:	00c1      	lsls	r1, r0, #3
 8014058:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801405c:	4319      	orrs	r1, r3
 801405e:	0643      	lsls	r3, r0, #25
 8014060:	bf44      	itt	mi
 8014062:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8014066:	b219      	sxthmi	r1, r3
 8014068:	0100      	lsls	r0, r0, #4
 801406a:	79fb      	ldrb	r3, [r7, #7]
 801406c:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8014070:	4303      	orrs	r3, r0
 8014072:	4413      	add	r3, r2
 8014074:	1a5b      	subs	r3, r3, r1
 8014076:	b21b      	sxth	r3, r3
 8014078:	429c      	cmp	r4, r3
 801407a:	bfb8      	it	lt
 801407c:	461c      	movlt	r4, r3
 801407e:	4633      	mov	r3, r6
 8014080:	462a      	mov	r2, r5
 8014082:	2100      	movs	r1, #0
 8014084:	e7dc      	b.n	8014040 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8014086:	b2a0      	uxth	r0, r4
 8014088:	b01e      	add	sp, #120	@ 0x78
 801408a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801408e:	b003      	add	sp, #12
 8014090:	4770      	bx	lr

08014092 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8014092:	7a43      	ldrb	r3, [r0, #9]
 8014094:	8880      	ldrh	r0, [r0, #4]
 8014096:	4418      	add	r0, r3
 8014098:	b280      	uxth	r0, r0
 801409a:	4770      	bx	lr

0801409c <_ZNK8touchgfx4Font13getFontHeightEv>:
 801409c:	6803      	ldr	r3, [r0, #0]
 801409e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80140a0:	4718      	bx	r3

080140a2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80140a2:	b40e      	push	{r1, r2, r3}
 80140a4:	b570      	push	{r4, r5, r6, lr}
 80140a6:	b09d      	sub	sp, #116	@ 0x74
 80140a8:	ab21      	add	r3, sp, #132	@ 0x84
 80140aa:	4604      	mov	r4, r0
 80140ac:	f853 5b04 	ldr.w	r5, [r3], #4
 80140b0:	9302      	str	r3, [sp, #8]
 80140b2:	a803      	add	r0, sp, #12
 80140b4:	f000 fcc0 	bl	8014a38 <_ZN8touchgfx12TextProviderC1Ev>
 80140b8:	6823      	ldr	r3, [r4, #0]
 80140ba:	4620      	mov	r0, r4
 80140bc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80140be:	4798      	blx	r3
 80140c0:	6823      	ldr	r3, [r4, #0]
 80140c2:	4606      	mov	r6, r0
 80140c4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80140c6:	4620      	mov	r0, r4
 80140c8:	4798      	blx	r3
 80140ca:	4633      	mov	r3, r6
 80140cc:	9000      	str	r0, [sp, #0]
 80140ce:	9a02      	ldr	r2, [sp, #8]
 80140d0:	4629      	mov	r1, r5
 80140d2:	a803      	add	r0, sp, #12
 80140d4:	f000 fd0b 	bl	8014aee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80140d8:	a803      	add	r0, sp, #12
 80140da:	f001 f8d9 	bl	8015290 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80140de:	2401      	movs	r4, #1
 80140e0:	b2a3      	uxth	r3, r4
 80140e2:	b140      	cbz	r0, 80140f6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80140e4:	280a      	cmp	r0, #10
 80140e6:	bf08      	it	eq
 80140e8:	3301      	addeq	r3, #1
 80140ea:	a803      	add	r0, sp, #12
 80140ec:	bf08      	it	eq
 80140ee:	b21c      	sxtheq	r4, r3
 80140f0:	f001 f8ce 	bl	8015290 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80140f4:	e7f4      	b.n	80140e0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80140f6:	4618      	mov	r0, r3
 80140f8:	b01d      	add	sp, #116	@ 0x74
 80140fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80140fe:	b003      	add	sp, #12
 8014100:	4770      	bx	lr

08014102 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8014102:	b40e      	push	{r1, r2, r3}
 8014104:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014106:	b09e      	sub	sp, #120	@ 0x78
 8014108:	ab23      	add	r3, sp, #140	@ 0x8c
 801410a:	4604      	mov	r4, r0
 801410c:	f853 5b04 	ldr.w	r5, [r3], #4
 8014110:	9303      	str	r3, [sp, #12]
 8014112:	a805      	add	r0, sp, #20
 8014114:	f000 fc90 	bl	8014a38 <_ZN8touchgfx12TextProviderC1Ev>
 8014118:	6823      	ldr	r3, [r4, #0]
 801411a:	4620      	mov	r0, r4
 801411c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801411e:	4798      	blx	r3
 8014120:	6823      	ldr	r3, [r4, #0]
 8014122:	4606      	mov	r6, r0
 8014124:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8014126:	4620      	mov	r0, r4
 8014128:	4798      	blx	r3
 801412a:	4633      	mov	r3, r6
 801412c:	4629      	mov	r1, r5
 801412e:	9000      	str	r0, [sp, #0]
 8014130:	9a03      	ldr	r2, [sp, #12]
 8014132:	a805      	add	r0, sp, #20
 8014134:	ad1e      	add	r5, sp, #120	@ 0x78
 8014136:	f000 fcda 	bl	8014aee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801413a:	2100      	movs	r1, #0
 801413c:	f845 1d68 	str.w	r1, [r5, #-104]!
 8014140:	4622      	mov	r2, r4
 8014142:	462b      	mov	r3, r5
 8014144:	a805      	add	r0, sp, #20
 8014146:	f000 ffd5 	bl	80150f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801414a:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801414e:	b1d8      	cbz	r0, 8014188 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8014150:	280a      	cmp	r0, #10
 8014152:	d012      	beq.n	801417a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8014154:	9804      	ldr	r0, [sp, #16]
 8014156:	b180      	cbz	r0, 801417a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8014158:	7b47      	ldrb	r7, [r0, #13]
 801415a:	88e2      	ldrh	r2, [r4, #6]
 801415c:	00fb      	lsls	r3, r7, #3
 801415e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8014162:	7a03      	ldrb	r3, [r0, #8]
 8014164:	430b      	orrs	r3, r1
 8014166:	0679      	lsls	r1, r7, #25
 8014168:	bf44      	itt	mi
 801416a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801416e:	b21b      	sxthmi	r3, r3
 8014170:	1ad3      	subs	r3, r2, r3
 8014172:	b21b      	sxth	r3, r3
 8014174:	429e      	cmp	r6, r3
 8014176:	bfa8      	it	ge
 8014178:	461e      	movge	r6, r3
 801417a:	462b      	mov	r3, r5
 801417c:	4622      	mov	r2, r4
 801417e:	2100      	movs	r1, #0
 8014180:	a805      	add	r0, sp, #20
 8014182:	f000 ffb7 	bl	80150f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014186:	e7e2      	b.n	801414e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8014188:	4630      	mov	r0, r6
 801418a:	b01e      	add	sp, #120	@ 0x78
 801418c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014190:	b003      	add	sp, #12
 8014192:	4770      	bx	lr

08014194 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8014194:	b513      	push	{r0, r1, r4, lr}
 8014196:	6803      	ldr	r3, [r0, #0]
 8014198:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801419c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80141a0:	f8ad 1004 	strh.w	r1, [sp, #4]
 80141a4:	2400      	movs	r4, #0
 80141a6:	9400      	str	r4, [sp, #0]
 80141a8:	f8ad 2006 	strh.w	r2, [sp, #6]
 80141ac:	691b      	ldr	r3, [r3, #16]
 80141ae:	4669      	mov	r1, sp
 80141b0:	4798      	blx	r3
 80141b2:	b002      	add	sp, #8
 80141b4:	bd10      	pop	{r4, pc}

080141b6 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80141b6:	b538      	push	{r3, r4, r5, lr}
 80141b8:	680b      	ldr	r3, [r1, #0]
 80141ba:	460c      	mov	r4, r1
 80141bc:	68db      	ldr	r3, [r3, #12]
 80141be:	4605      	mov	r5, r0
 80141c0:	4798      	blx	r3
 80141c2:	6823      	ldr	r3, [r4, #0]
 80141c4:	4620      	mov	r0, r4
 80141c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80141c8:	4629      	mov	r1, r5
 80141ca:	4798      	blx	r3
 80141cc:	4628      	mov	r0, r5
 80141ce:	bd38      	pop	{r3, r4, r5, pc}

080141d0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80141d0:	b410      	push	{r4}
 80141d2:	880a      	ldrh	r2, [r1, #0]
 80141d4:	8884      	ldrh	r4, [r0, #4]
 80141d6:	4422      	add	r2, r4
 80141d8:	800a      	strh	r2, [r1, #0]
 80141da:	88c4      	ldrh	r4, [r0, #6]
 80141dc:	884a      	ldrh	r2, [r1, #2]
 80141de:	4422      	add	r2, r4
 80141e0:	804a      	strh	r2, [r1, #2]
 80141e2:	6940      	ldr	r0, [r0, #20]
 80141e4:	b120      	cbz	r0, 80141f0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80141e6:	6803      	ldr	r3, [r0, #0]
 80141e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80141ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80141ee:	4718      	bx	r3
 80141f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80141f4:	4770      	bx	lr

080141f6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80141f6:	b570      	push	{r4, r5, r6, lr}
 80141f8:	8882      	ldrh	r2, [r0, #4]
 80141fa:	880b      	ldrh	r3, [r1, #0]
 80141fc:	4413      	add	r3, r2
 80141fe:	800b      	strh	r3, [r1, #0]
 8014200:	88c2      	ldrh	r2, [r0, #6]
 8014202:	884b      	ldrh	r3, [r1, #2]
 8014204:	460c      	mov	r4, r1
 8014206:	4413      	add	r3, r2
 8014208:	804b      	strh	r3, [r1, #2]
 801420a:	4605      	mov	r5, r0
 801420c:	1d01      	adds	r1, r0, #4
 801420e:	4620      	mov	r0, r4
 8014210:	f7fb fad0 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 8014214:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8014218:	2b00      	cmp	r3, #0
 801421a:	dd0b      	ble.n	8014234 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801421c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8014220:	2b00      	cmp	r3, #0
 8014222:	dd07      	ble.n	8014234 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8014224:	6968      	ldr	r0, [r5, #20]
 8014226:	b128      	cbz	r0, 8014234 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8014228:	6803      	ldr	r3, [r0, #0]
 801422a:	4621      	mov	r1, r4
 801422c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801422e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014232:	4718      	bx	r3
 8014234:	bd70      	pop	{r4, r5, r6, pc}
	...

08014238 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8014238:	b570      	push	{r4, r5, r6, lr}
 801423a:	8882      	ldrh	r2, [r0, #4]
 801423c:	880b      	ldrh	r3, [r1, #0]
 801423e:	4413      	add	r3, r2
 8014240:	800b      	strh	r3, [r1, #0]
 8014242:	88c2      	ldrh	r2, [r0, #6]
 8014244:	884b      	ldrh	r3, [r1, #2]
 8014246:	460c      	mov	r4, r1
 8014248:	4413      	add	r3, r2
 801424a:	804b      	strh	r3, [r1, #2]
 801424c:	4605      	mov	r5, r0
 801424e:	1d01      	adds	r1, r0, #4
 8014250:	4620      	mov	r0, r4
 8014252:	f7fb faaf 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 8014256:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801425a:	2b00      	cmp	r3, #0
 801425c:	dd19      	ble.n	8014292 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801425e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8014262:	2b00      	cmp	r3, #0
 8014264:	dd15      	ble.n	8014292 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8014266:	6968      	ldr	r0, [r5, #20]
 8014268:	b128      	cbz	r0, 8014276 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801426a:	6803      	ldr	r3, [r0, #0]
 801426c:	4621      	mov	r1, r4
 801426e:	691b      	ldr	r3, [r3, #16]
 8014270:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014274:	4718      	bx	r3
 8014276:	4b07      	ldr	r3, [pc, #28]	@ (8014294 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8014278:	681b      	ldr	r3, [r3, #0]
 801427a:	3304      	adds	r3, #4
 801427c:	429d      	cmp	r5, r3
 801427e:	d108      	bne.n	8014292 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8014280:	f7fe ff12 	bl	80130a8 <_ZN8touchgfx11Application11getInstanceEv>
 8014284:	6803      	ldr	r3, [r0, #0]
 8014286:	6821      	ldr	r1, [r4, #0]
 8014288:	6862      	ldr	r2, [r4, #4]
 801428a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801428c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014290:	4718      	bx	r3
 8014292:	bd70      	pop	{r4, r5, r6, pc}
 8014294:	200023e4 	.word	0x200023e4

08014298 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8014298:	b570      	push	{r4, r5, r6, lr}
 801429a:	4604      	mov	r4, r0
 801429c:	4616      	mov	r6, r2
 801429e:	460d      	mov	r5, r1
 80142a0:	b901      	cbnz	r1, 80142a4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80142a2:	b192      	cbz	r2, 80142ca <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80142a4:	6823      	ldr	r3, [r4, #0]
 80142a6:	4620      	mov	r0, r4
 80142a8:	699b      	ldr	r3, [r3, #24]
 80142aa:	4798      	blx	r3
 80142ac:	88e2      	ldrh	r2, [r4, #6]
 80142ae:	88a1      	ldrh	r1, [r4, #4]
 80142b0:	4432      	add	r2, r6
 80142b2:	4429      	add	r1, r5
 80142b4:	4620      	mov	r0, r4
 80142b6:	b212      	sxth	r2, r2
 80142b8:	b209      	sxth	r1, r1
 80142ba:	f7f5 fe28 	bl	8009f0e <_ZN8touchgfx8Drawable5setXYEss>
 80142be:	6823      	ldr	r3, [r4, #0]
 80142c0:	4620      	mov	r0, r4
 80142c2:	699b      	ldr	r3, [r3, #24]
 80142c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142c8:	4718      	bx	r3
 80142ca:	bd70      	pop	{r4, r5, r6, pc}

080142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80142cc:	b510      	push	{r4, lr}
 80142ce:	4604      	mov	r4, r0
 80142d0:	4608      	mov	r0, r1
 80142d2:	2300      	movs	r3, #0
 80142d4:	8023      	strh	r3, [r4, #0]
 80142d6:	8063      	strh	r3, [r4, #2]
 80142d8:	6803      	ldr	r3, [r0, #0]
 80142da:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80142de:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80142e2:	80a1      	strh	r1, [r4, #4]
 80142e4:	80e2      	strh	r2, [r4, #6]
 80142e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80142e8:	4621      	mov	r1, r4
 80142ea:	4798      	blx	r3
 80142ec:	4620      	mov	r0, r4
 80142ee:	bd10      	pop	{r4, pc}

080142f0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80142f0:	b530      	push	{r4, r5, lr}
 80142f2:	8083      	strh	r3, [r0, #4]
 80142f4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80142f8:	80c3      	strh	r3, [r0, #6]
 80142fa:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80142fe:	7203      	strb	r3, [r0, #8]
 8014300:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014304:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8014308:	7243      	strb	r3, [r0, #9]
 801430a:	7a83      	ldrb	r3, [r0, #10]
 801430c:	6141      	str	r1, [r0, #20]
 801430e:	f365 0306 	bfi	r3, r5, #0, #7
 8014312:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8014316:	8302      	strh	r2, [r0, #24]
 8014318:	f365 13c7 	bfi	r3, r5, #7, #1
 801431c:	7283      	strb	r3, [r0, #10]
 801431e:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8014322:	72c3      	strb	r3, [r0, #11]
 8014324:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8014328:	7303      	strb	r3, [r0, #12]
 801432a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801432e:	81c3      	strh	r3, [r0, #14]
 8014330:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8014334:	8203      	strh	r3, [r0, #16]
 8014336:	4b01      	ldr	r3, [pc, #4]	@ (801433c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8014338:	6003      	str	r3, [r0, #0]
 801433a:	bd30      	pop	{r4, r5, pc}
 801433c:	08029ce8 	.word	0x08029ce8

08014340 <_ZNK8touchgfx9ConstFont4findEt>:
 8014340:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014342:	6944      	ldr	r4, [r0, #20]
 8014344:	b3bc      	cbz	r4, 80143b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014346:	88a3      	ldrh	r3, [r4, #4]
 8014348:	8b02      	ldrh	r2, [r0, #24]
 801434a:	1acb      	subs	r3, r1, r3
 801434c:	f102 32ff 	add.w	r2, r2, #4294967295
 8014350:	d431      	bmi.n	80143b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014352:	4293      	cmp	r3, r2
 8014354:	dd0c      	ble.n	8014370 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8014356:	230e      	movs	r3, #14
 8014358:	fb03 4302 	mla	r3, r3, r2, r4
 801435c:	889b      	ldrh	r3, [r3, #4]
 801435e:	1a5b      	subs	r3, r3, r1
 8014360:	1ad3      	subs	r3, r2, r3
 8014362:	429a      	cmp	r2, r3
 8014364:	db27      	blt.n	80143b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014366:	2b00      	cmp	r3, #0
 8014368:	bfbc      	itt	lt
 801436a:	2302      	movlt	r3, #2
 801436c:	fb92 f3f3 	sdivlt	r3, r2, r3
 8014370:	2500      	movs	r5, #0
 8014372:	260e      	movs	r6, #14
 8014374:	4295      	cmp	r5, r2
 8014376:	dc1e      	bgt.n	80143b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014378:	fb06 4003 	mla	r0, r6, r3, r4
 801437c:	8887      	ldrh	r7, [r0, #4]
 801437e:	42b9      	cmp	r1, r7
 8014380:	d01a      	beq.n	80143b8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8014382:	d20d      	bcs.n	80143a0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8014384:	1e5a      	subs	r2, r3, #1
 8014386:	4295      	cmp	r5, r2
 8014388:	dc15      	bgt.n	80143b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801438a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801438e:	1a5b      	subs	r3, r3, r1
 8014390:	1ad3      	subs	r3, r2, r3
 8014392:	429a      	cmp	r2, r3
 8014394:	db0f      	blt.n	80143b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014396:	429d      	cmp	r5, r3
 8014398:	ddec      	ble.n	8014374 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801439a:	1953      	adds	r3, r2, r5
 801439c:	105b      	asrs	r3, r3, #1
 801439e:	e7e9      	b.n	8014374 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80143a0:	1c5d      	adds	r5, r3, #1
 80143a2:	42aa      	cmp	r2, r5
 80143a4:	db07      	blt.n	80143b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80143a6:	8a43      	ldrh	r3, [r0, #18]
 80143a8:	1acb      	subs	r3, r1, r3
 80143aa:	442b      	add	r3, r5
 80143ac:	429d      	cmp	r5, r3
 80143ae:	dc02      	bgt.n	80143b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80143b0:	429a      	cmp	r2, r3
 80143b2:	dadf      	bge.n	8014374 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80143b4:	e7f1      	b.n	801439a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80143b6:	2000      	movs	r0, #0
 80143b8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080143ba <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80143ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80143bc:	4604      	mov	r4, r0
 80143be:	4617      	mov	r7, r2
 80143c0:	461e      	mov	r6, r3
 80143c2:	b911      	cbnz	r1, 80143ca <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80143c4:	2500      	movs	r5, #0
 80143c6:	4628      	mov	r0, r5
 80143c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80143ca:	290a      	cmp	r1, #10
 80143cc:	d0fa      	beq.n	80143c4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80143ce:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80143d2:	4291      	cmp	r1, r2
 80143d4:	d0f6      	beq.n	80143c4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80143d6:	f242 020b 	movw	r2, #8203	@ 0x200b
 80143da:	4291      	cmp	r1, r2
 80143dc:	d0f2      	beq.n	80143c4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80143de:	f7ff ffaf 	bl	8014340 <_ZNK8touchgfx9ConstFont4findEt>
 80143e2:	4605      	mov	r5, r0
 80143e4:	b950      	cbnz	r0, 80143fc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80143e6:	6823      	ldr	r3, [r4, #0]
 80143e8:	4620      	mov	r0, r4
 80143ea:	691b      	ldr	r3, [r3, #16]
 80143ec:	4798      	blx	r3
 80143ee:	4601      	mov	r1, r0
 80143f0:	4620      	mov	r0, r4
 80143f2:	f7ff ffa5 	bl	8014340 <_ZNK8touchgfx9ConstFont4findEt>
 80143f6:	4605      	mov	r5, r0
 80143f8:	2800      	cmp	r0, #0
 80143fa:	d0e3      	beq.n	80143c4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80143fc:	6823      	ldr	r3, [r4, #0]
 80143fe:	4629      	mov	r1, r5
 8014400:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8014402:	4620      	mov	r0, r4
 8014404:	4798      	blx	r3
 8014406:	6038      	str	r0, [r7, #0]
 8014408:	6823      	ldr	r3, [r4, #0]
 801440a:	4620      	mov	r0, r4
 801440c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801440e:	4798      	blx	r3
 8014410:	7030      	strb	r0, [r6, #0]
 8014412:	e7d8      	b.n	80143c6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08014414 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8014414:	2000      	movs	r0, #0
 8014416:	4770      	bx	lr

08014418 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8014418:	2001      	movs	r0, #1
 801441a:	4770      	bx	lr

0801441c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801441c:	2002      	movs	r0, #2
 801441e:	4770      	bx	lr

08014420 <_ZN8touchgfx12GestureEventD1Ev>:
 8014420:	4770      	bx	lr

08014422 <_ZN8touchgfx9DragEventD1Ev>:
 8014422:	4770      	bx	lr

08014424 <_ZN8touchgfx10ClickEventD1Ev>:
 8014424:	4770      	bx	lr

08014426 <_ZN8touchgfx10ClickEventD0Ev>:
 8014426:	b510      	push	{r4, lr}
 8014428:	210c      	movs	r1, #12
 801442a:	4604      	mov	r4, r0
 801442c:	f00f fcf3 	bl	8023e16 <_ZdlPvj>
 8014430:	4620      	mov	r0, r4
 8014432:	bd10      	pop	{r4, pc}

08014434 <_ZN8touchgfx9DragEventD0Ev>:
 8014434:	b510      	push	{r4, lr}
 8014436:	2110      	movs	r1, #16
 8014438:	4604      	mov	r4, r0
 801443a:	f00f fcec 	bl	8023e16 <_ZdlPvj>
 801443e:	4620      	mov	r0, r4
 8014440:	bd10      	pop	{r4, pc}

08014442 <_ZN8touchgfx12GestureEventD0Ev>:
 8014442:	b510      	push	{r4, lr}
 8014444:	210c      	movs	r1, #12
 8014446:	4604      	mov	r4, r0
 8014448:	f00f fce5 	bl	8023e16 <_ZdlPvj>
 801444c:	4620      	mov	r0, r4
 801444e:	bd10      	pop	{r4, pc}

08014450 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8014450:	b530      	push	{r4, r5, lr}
 8014452:	460d      	mov	r5, r1
 8014454:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8014456:	b087      	sub	sp, #28
 8014458:	4604      	mov	r4, r0
 801445a:	b301      	cbz	r1, 801449e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801445c:	a801      	add	r0, sp, #4
 801445e:	f7ff ff35 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014462:	892a      	ldrh	r2, [r5, #8]
 8014464:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8014468:	7928      	ldrb	r0, [r5, #4]
 801446a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801446e:	f88d 0010 	strb.w	r0, [sp, #16]
 8014472:	1ad2      	subs	r2, r2, r3
 8014474:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8014476:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8014478:	f8ad 1012 	strh.w	r1, [sp, #18]
 801447c:	441a      	add	r2, r3
 801447e:	896b      	ldrh	r3, [r5, #10]
 8014480:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8014484:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014488:	1b5b      	subs	r3, r3, r5
 801448a:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 801448c:	442b      	add	r3, r5
 801448e:	4d05      	ldr	r5, [pc, #20]	@ (80144a4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8014490:	9503      	str	r5, [sp, #12]
 8014492:	f8ad 3016 	strh.w	r3, [sp, #22]
 8014496:	6803      	ldr	r3, [r0, #0]
 8014498:	a903      	add	r1, sp, #12
 801449a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801449c:	4798      	blx	r3
 801449e:	b007      	add	sp, #28
 80144a0:	bd30      	pop	{r4, r5, pc}
 80144a2:	bf00      	nop
 80144a4:	08029d70 	.word	0x08029d70

080144a8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80144a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80144ac:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80144ae:	b08a      	sub	sp, #40	@ 0x28
 80144b0:	4604      	mov	r4, r0
 80144b2:	460d      	mov	r5, r1
 80144b4:	b113      	cbz	r3, 80144bc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80144b6:	790b      	ldrb	r3, [r1, #4]
 80144b8:	2b00      	cmp	r3, #0
 80144ba:	d044      	beq.n	8014546 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80144bc:	f104 0804 	add.w	r8, r4, #4
 80144c0:	4641      	mov	r1, r8
 80144c2:	a803      	add	r0, sp, #12
 80144c4:	f7ff ff02 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80144c8:	792b      	ldrb	r3, [r5, #4]
 80144ca:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80144ce:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80144d2:	b983      	cbnz	r3, 80144f6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80144d4:	892a      	ldrh	r2, [r5, #8]
 80144d6:	88e9      	ldrh	r1, [r5, #6]
 80144d8:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 80144dc:	1b92      	subs	r2, r2, r6
 80144de:	1bc9      	subs	r1, r1, r7
 80144e0:	9301      	str	r3, [sp, #4]
 80144e2:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 80144e6:	9300      	str	r3, [sp, #0]
 80144e8:	b212      	sxth	r2, r2
 80144ea:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 80144ee:	b209      	sxth	r1, r1
 80144f0:	4640      	mov	r0, r8
 80144f2:	f7fb f87b 	bl	800f5ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80144f6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80144f8:	b329      	cbz	r1, 8014546 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80144fa:	a805      	add	r0, sp, #20
 80144fc:	f7ff fee6 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014500:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8014504:	792b      	ldrb	r3, [r5, #4]
 8014506:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8014508:	f88d 3020 	strb.w	r3, [sp, #32]
 801450c:	1abf      	subs	r7, r7, r2
 801450e:	88ea      	ldrh	r2, [r5, #6]
 8014510:	4417      	add	r7, r2
 8014512:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8014514:	4417      	add	r7, r2
 8014516:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801451a:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 801451e:	1ab6      	subs	r6, r6, r2
 8014520:	892a      	ldrh	r2, [r5, #8]
 8014522:	4416      	add	r6, r2
 8014524:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8014526:	4416      	add	r6, r2
 8014528:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 801452c:	4a07      	ldr	r2, [pc, #28]	@ (801454c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801452e:	9207      	str	r2, [sp, #28]
 8014530:	2600      	movs	r6, #0
 8014532:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8014536:	6803      	ldr	r3, [r0, #0]
 8014538:	a907      	add	r1, sp, #28
 801453a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801453c:	4798      	blx	r3
 801453e:	792b      	ldrb	r3, [r5, #4]
 8014540:	b10b      	cbz	r3, 8014546 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8014542:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8014546:	b00a      	add	sp, #40	@ 0x28
 8014548:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801454c:	08029d48 	.word	0x08029d48

08014550 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8014550:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014554:	460c      	mov	r4, r1
 8014556:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8014558:	b088      	sub	sp, #32
 801455a:	4605      	mov	r5, r0
 801455c:	2900      	cmp	r1, #0
 801455e:	d06d      	beq.n	801463c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8014560:	4668      	mov	r0, sp
 8014562:	f7ff feb3 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014566:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8014568:	88e3      	ldrh	r3, [r4, #6]
 801456a:	f9bd 8000 	ldrsh.w	r8, [sp]
 801456e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8014572:	440b      	add	r3, r1
 8014574:	b21b      	sxth	r3, r3
 8014576:	4543      	cmp	r3, r8
 8014578:	db31      	blt.n	80145de <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801457a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801457e:	44c4      	add	ip, r8
 8014580:	fa0f fc8c 	sxth.w	ip, ip
 8014584:	4563      	cmp	r3, ip
 8014586:	da2a      	bge.n	80145de <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014588:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 801458a:	8926      	ldrh	r6, [r4, #8]
 801458c:	4416      	add	r6, r2
 801458e:	b236      	sxth	r6, r6
 8014590:	42be      	cmp	r6, r7
 8014592:	db24      	blt.n	80145de <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014594:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8014598:	4438      	add	r0, r7
 801459a:	b200      	sxth	r0, r0
 801459c:	4286      	cmp	r6, r0
 801459e:	da1e      	bge.n	80145de <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80145a0:	8963      	ldrh	r3, [r4, #10]
 80145a2:	4419      	add	r1, r3
 80145a4:	b209      	sxth	r1, r1
 80145a6:	4541      	cmp	r1, r8
 80145a8:	db08      	blt.n	80145bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80145aa:	4561      	cmp	r1, ip
 80145ac:	da06      	bge.n	80145bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80145ae:	89a3      	ldrh	r3, [r4, #12]
 80145b0:	441a      	add	r2, r3
 80145b2:	b212      	sxth	r2, r2
 80145b4:	42ba      	cmp	r2, r7
 80145b6:	db01      	blt.n	80145bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80145b8:	4282      	cmp	r2, r0
 80145ba:	db10      	blt.n	80145de <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80145bc:	4b21      	ldr	r3, [pc, #132]	@ (8014644 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80145be:	9304      	str	r3, [sp, #16]
 80145c0:	2302      	movs	r3, #2
 80145c2:	f88d 3014 	strb.w	r3, [sp, #20]
 80145c6:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80145c8:	2300      	movs	r3, #0
 80145ca:	f8ad 3016 	strh.w	r3, [sp, #22]
 80145ce:	f8ad 3018 	strh.w	r3, [sp, #24]
 80145d2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80145d6:	6803      	ldr	r3, [r0, #0]
 80145d8:	a904      	add	r1, sp, #16
 80145da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80145dc:	4798      	blx	r3
 80145de:	1d29      	adds	r1, r5, #4
 80145e0:	a802      	add	r0, sp, #8
 80145e2:	f7ff fe73 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80145e6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80145ea:	88e0      	ldrh	r0, [r4, #6]
 80145ec:	7921      	ldrb	r1, [r4, #4]
 80145ee:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 80145f2:	8922      	ldrh	r2, [r4, #8]
 80145f4:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 80145f6:	f88d 1014 	strb.w	r1, [sp, #20]
 80145fa:	eba3 0808 	sub.w	r8, r3, r8
 80145fe:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8014602:	1bdf      	subs	r7, r3, r7
 8014604:	b2bb      	uxth	r3, r7
 8014606:	fa1f f888 	uxth.w	r8, r8
 801460a:	8967      	ldrh	r7, [r4, #10]
 801460c:	89a4      	ldrh	r4, [r4, #12]
 801460e:	4440      	add	r0, r8
 8014610:	4460      	add	r0, ip
 8014612:	441a      	add	r2, r3
 8014614:	44b8      	add	r8, r7
 8014616:	4423      	add	r3, r4
 8014618:	f8ad 0016 	strh.w	r0, [sp, #22]
 801461c:	4433      	add	r3, r6
 801461e:	4432      	add	r2, r6
 8014620:	44e0      	add	r8, ip
 8014622:	4c09      	ldr	r4, [pc, #36]	@ (8014648 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8014624:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8014626:	9404      	str	r4, [sp, #16]
 8014628:	f8ad 2018 	strh.w	r2, [sp, #24]
 801462c:	f8ad 801a 	strh.w	r8, [sp, #26]
 8014630:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014634:	6803      	ldr	r3, [r0, #0]
 8014636:	a904      	add	r1, sp, #16
 8014638:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801463a:	4798      	blx	r3
 801463c:	b008      	add	sp, #32
 801463e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014642:	bf00      	nop
 8014644:	08029d48 	.word	0x08029d48
 8014648:	08029d5c 	.word	0x08029d5c

0801464c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801464c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801464e:	4604      	mov	r4, r0
 8014650:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8014654:	3201      	adds	r2, #1
 8014656:	d112      	bne.n	801467e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8014658:	6803      	ldr	r3, [r0, #0]
 801465a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801465e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8014662:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014666:	2500      	movs	r5, #0
 8014668:	9500      	str	r5, [sp, #0]
 801466a:	466d      	mov	r5, sp
 801466c:	4629      	mov	r1, r5
 801466e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014672:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014674:	4798      	blx	r3
 8014676:	e895 0003 	ldmia.w	r5, {r0, r1}
 801467a:	e884 0003 	stmia.w	r4, {r0, r1}
 801467e:	4620      	mov	r0, r4
 8014680:	b003      	add	sp, #12
 8014682:	bd30      	pop	{r4, r5, pc}

08014684 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8014684:	b513      	push	{r0, r1, r4, lr}
 8014686:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801468a:	3301      	adds	r3, #1
 801468c:	4604      	mov	r4, r0
 801468e:	d109      	bne.n	80146a4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8014690:	4601      	mov	r1, r0
 8014692:	4668      	mov	r0, sp
 8014694:	f7ff fe1a 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014698:	f8bd 3000 	ldrh.w	r3, [sp]
 801469c:	8423      	strh	r3, [r4, #32]
 801469e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80146a2:	8463      	strh	r3, [r4, #34]	@ 0x22
 80146a4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80146a8:	b002      	add	sp, #8
 80146aa:	bd10      	pop	{r4, pc}

080146ac <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80146ac:	b513      	push	{r0, r1, r4, lr}
 80146ae:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 80146b2:	3301      	adds	r3, #1
 80146b4:	4604      	mov	r4, r0
 80146b6:	d109      	bne.n	80146cc <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80146b8:	4601      	mov	r1, r0
 80146ba:	4668      	mov	r0, sp
 80146bc:	f7ff fe06 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80146c0:	f8bd 3000 	ldrh.w	r3, [sp]
 80146c4:	8423      	strh	r3, [r4, #32]
 80146c6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80146ca:	8463      	strh	r3, [r4, #34]	@ 0x22
 80146cc:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 80146d0:	b002      	add	sp, #8
 80146d2:	bd10      	pop	{r4, pc}

080146d4 <_ZN8touchgfx6ScreenC1Ev>:
 80146d4:	b570      	push	{r4, r5, r6, lr}
 80146d6:	4605      	mov	r5, r0
 80146d8:	4b16      	ldr	r3, [pc, #88]	@ (8014734 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80146da:	f845 3b04 	str.w	r3, [r5], #4
 80146de:	2300      	movs	r3, #0
 80146e0:	8103      	strh	r3, [r0, #8]
 80146e2:	8143      	strh	r3, [r0, #10]
 80146e4:	8183      	strh	r3, [r0, #12]
 80146e6:	81c3      	strh	r3, [r0, #14]
 80146e8:	8203      	strh	r3, [r0, #16]
 80146ea:	8243      	strh	r3, [r0, #18]
 80146ec:	8283      	strh	r3, [r0, #20]
 80146ee:	82c3      	strh	r3, [r0, #22]
 80146f0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80146f4:	6203      	str	r3, [r0, #32]
 80146f6:	8483      	strh	r3, [r0, #36]	@ 0x24
 80146f8:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80146fa:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 80146fe:	4a0e      	ldr	r2, [pc, #56]	@ (8014738 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8014700:	6343      	str	r3, [r0, #52]	@ 0x34
 8014702:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8014706:	4b0d      	ldr	r3, [pc, #52]	@ (801473c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8014708:	6042      	str	r2, [r0, #4]
 801470a:	f9b3 6000 	ldrsh.w	r6, [r3]
 801470e:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8014710:	4a0b      	ldr	r2, [pc, #44]	@ (8014740 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8014712:	4604      	mov	r4, r0
 8014714:	2101      	movs	r1, #1
 8014716:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 801471a:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 801471e:	f9b2 1000 	ldrsh.w	r1, [r2]
 8014722:	4628      	mov	r0, r5
 8014724:	4798      	blx	r3
 8014726:	6863      	ldr	r3, [r4, #4]
 8014728:	4628      	mov	r0, r5
 801472a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801472c:	4631      	mov	r1, r6
 801472e:	4798      	blx	r3
 8014730:	4620      	mov	r0, r4
 8014732:	bd70      	pop	{r4, r5, r6, pc}
 8014734:	08029d84 	.word	0x08029d84
 8014738:	080295c0 	.word	0x080295c0
 801473c:	2000239e 	.word	0x2000239e
 8014740:	2000239c 	.word	0x2000239c

08014744 <_ZN8touchgfx6Screen4drawEv>:
 8014744:	b507      	push	{r0, r1, r2, lr}
 8014746:	4b09      	ldr	r3, [pc, #36]	@ (801476c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8014748:	f9b3 2000 	ldrsh.w	r2, [r3]
 801474c:	4b08      	ldr	r3, [pc, #32]	@ (8014770 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801474e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014752:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014756:	f8ad 3006 	strh.w	r3, [sp, #6]
 801475a:	6803      	ldr	r3, [r0, #0]
 801475c:	2100      	movs	r1, #0
 801475e:	9100      	str	r1, [sp, #0]
 8014760:	689b      	ldr	r3, [r3, #8]
 8014762:	4669      	mov	r1, sp
 8014764:	4798      	blx	r3
 8014766:	b003      	add	sp, #12
 8014768:	f85d fb04 	ldr.w	pc, [sp], #4
 801476c:	2000239c 	.word	0x2000239c
 8014770:	2000239e 	.word	0x2000239e

08014774 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8014774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014778:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801477c:	2b00      	cmp	r3, #0
 801477e:	b089      	sub	sp, #36	@ 0x24
 8014780:	4680      	mov	r8, r0
 8014782:	460c      	mov	r4, r1
 8014784:	4615      	mov	r5, r2
 8014786:	dd0e      	ble.n	80147a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014788:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801478c:	2b00      	cmp	r3, #0
 801478e:	dd0a      	ble.n	80147a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014790:	4628      	mov	r0, r5
 8014792:	f7ff ff5b 	bl	801464c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8014796:	4621      	mov	r1, r4
 8014798:	f7fe fba8 	bl	8012eec <_ZNK8touchgfx4Rect9intersectERKS0_>
 801479c:	69eb      	ldr	r3, [r5, #28]
 801479e:	b928      	cbnz	r0, 80147ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80147a0:	461d      	mov	r5, r3
 80147a2:	2b00      	cmp	r3, #0
 80147a4:	d1f4      	bne.n	8014790 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80147a6:	b009      	add	sp, #36	@ 0x24
 80147a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147ac:	ae04      	add	r6, sp, #16
 80147ae:	2b00      	cmp	r3, #0
 80147b0:	f000 80b5 	beq.w	801491e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80147b4:	682b      	ldr	r3, [r5, #0]
 80147b6:	4629      	mov	r1, r5
 80147b8:	68db      	ldr	r3, [r3, #12]
 80147ba:	a802      	add	r0, sp, #8
 80147bc:	4798      	blx	r3
 80147be:	4628      	mov	r0, r5
 80147c0:	f7ff ff60 	bl	8014684 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80147c4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80147c8:	4407      	add	r7, r0
 80147ca:	4628      	mov	r0, r5
 80147cc:	f7ff ff6e 	bl	80146ac <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80147d0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80147d4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80147d8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80147dc:	4418      	add	r0, r3
 80147de:	4621      	mov	r1, r4
 80147e0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80147e4:	f8ad 0012 	strh.w	r0, [sp, #18]
 80147e8:	b23f      	sxth	r7, r7
 80147ea:	4630      	mov	r0, r6
 80147ec:	f8ad 3016 	strh.w	r3, [sp, #22]
 80147f0:	f8ad 7010 	strh.w	r7, [sp, #16]
 80147f4:	f7fa ffde 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 80147f8:	4628      	mov	r0, r5
 80147fa:	f7ff ff27 	bl	801464c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80147fe:	4602      	mov	r2, r0
 8014800:	e896 0003 	ldmia.w	r6, {r0, r1}
 8014804:	ab06      	add	r3, sp, #24
 8014806:	e883 0003 	stmia.w	r3, {r0, r1}
 801480a:	4611      	mov	r1, r2
 801480c:	4618      	mov	r0, r3
 801480e:	f7fa ffd1 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 8014812:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014816:	f9b4 1000 	ldrsh.w	r1, [r4]
 801481a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801481e:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8014822:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8014826:	4299      	cmp	r1, r3
 8014828:	d10b      	bne.n	8014842 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801482a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801482e:	4552      	cmp	r2, sl
 8014830:	d107      	bne.n	8014842 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8014832:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8014836:	455a      	cmp	r2, fp
 8014838:	d103      	bne.n	8014842 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801483a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801483e:	454a      	cmp	r2, r9
 8014840:	d06d      	beq.n	801491e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8014842:	f1bb 0f00 	cmp.w	fp, #0
 8014846:	dd65      	ble.n	8014914 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8014848:	f1b9 0f00 	cmp.w	r9, #0
 801484c:	dd62      	ble.n	8014914 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801484e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8014852:	fa1f f08a 	uxth.w	r0, sl
 8014856:	4552      	cmp	r2, sl
 8014858:	9000      	str	r0, [sp, #0]
 801485a:	da12      	bge.n	8014882 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801485c:	9301      	str	r3, [sp, #4]
 801485e:	9b00      	ldr	r3, [sp, #0]
 8014860:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014864:	f8ad 2012 	strh.w	r2, [sp, #18]
 8014868:	1a9a      	subs	r2, r3, r2
 801486a:	f8ad 1010 	strh.w	r1, [sp, #16]
 801486e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8014872:	f8ad 2016 	strh.w	r2, [sp, #22]
 8014876:	69ea      	ldr	r2, [r5, #28]
 8014878:	4631      	mov	r1, r6
 801487a:	4640      	mov	r0, r8
 801487c:	f7ff ff7a 	bl	8014774 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014880:	9b01      	ldr	r3, [sp, #4]
 8014882:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014886:	429a      	cmp	r2, r3
 8014888:	b29f      	uxth	r7, r3
 801488a:	da0d      	bge.n	80148a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801488c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014890:	1aba      	subs	r2, r7, r2
 8014892:	f8ad a012 	strh.w	sl, [sp, #18]
 8014896:	f8ad 2014 	strh.w	r2, [sp, #20]
 801489a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801489e:	69ea      	ldr	r2, [r5, #28]
 80148a0:	4631      	mov	r1, r6
 80148a2:	4640      	mov	r0, r8
 80148a4:	f7ff ff66 	bl	8014774 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80148a8:	8822      	ldrh	r2, [r4, #0]
 80148aa:	88a3      	ldrh	r3, [r4, #4]
 80148ac:	445f      	add	r7, fp
 80148ae:	4413      	add	r3, r2
 80148b0:	b29b      	uxth	r3, r3
 80148b2:	b2bf      	uxth	r7, r7
 80148b4:	b23a      	sxth	r2, r7
 80148b6:	b219      	sxth	r1, r3
 80148b8:	4291      	cmp	r1, r2
 80148ba:	dd0d      	ble.n	80148d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80148bc:	1bdb      	subs	r3, r3, r7
 80148be:	f8ad 2010 	strh.w	r2, [sp, #16]
 80148c2:	f8ad a012 	strh.w	sl, [sp, #18]
 80148c6:	f8ad 3014 	strh.w	r3, [sp, #20]
 80148ca:	f8ad 9016 	strh.w	r9, [sp, #22]
 80148ce:	69ea      	ldr	r2, [r5, #28]
 80148d0:	4631      	mov	r1, r6
 80148d2:	4640      	mov	r0, r8
 80148d4:	f7ff ff4e 	bl	8014774 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80148d8:	88e2      	ldrh	r2, [r4, #6]
 80148da:	8863      	ldrh	r3, [r4, #2]
 80148dc:	4413      	add	r3, r2
 80148de:	9a00      	ldr	r2, [sp, #0]
 80148e0:	444a      	add	r2, r9
 80148e2:	b29b      	uxth	r3, r3
 80148e4:	fa1f f982 	uxth.w	r9, r2
 80148e8:	fa0f f289 	sxth.w	r2, r9
 80148ec:	b219      	sxth	r1, r3
 80148ee:	428a      	cmp	r2, r1
 80148f0:	da15      	bge.n	801491e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80148f2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80148f6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80148fa:	f8ad 1014 	strh.w	r1, [sp, #20]
 80148fe:	eba3 0309 	sub.w	r3, r3, r9
 8014902:	f8ad 0010 	strh.w	r0, [sp, #16]
 8014906:	f8ad 2012 	strh.w	r2, [sp, #18]
 801490a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801490e:	69ea      	ldr	r2, [r5, #28]
 8014910:	4631      	mov	r1, r6
 8014912:	e001      	b.n	8014918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8014914:	69ea      	ldr	r2, [r5, #28]
 8014916:	4621      	mov	r1, r4
 8014918:	4640      	mov	r0, r8
 801491a:	f7ff ff2b 	bl	8014774 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801491e:	4628      	mov	r0, r5
 8014920:	f7ff fe94 	bl	801464c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8014924:	6861      	ldr	r1, [r4, #4]
 8014926:	4602      	mov	r2, r0
 8014928:	6820      	ldr	r0, [r4, #0]
 801492a:	4633      	mov	r3, r6
 801492c:	c303      	stmia	r3!, {r0, r1}
 801492e:	4611      	mov	r1, r2
 8014930:	4630      	mov	r0, r6
 8014932:	f7fa ff3f 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 8014936:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801493a:	2b00      	cmp	r3, #0
 801493c:	f77f af33 	ble.w	80147a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014940:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014944:	2b00      	cmp	r3, #0
 8014946:	f77f af2e 	ble.w	80147a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801494a:	4628      	mov	r0, r5
 801494c:	f7ff fe9a 	bl	8014684 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8014950:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8014954:	1a18      	subs	r0, r3, r0
 8014956:	f8ad 0010 	strh.w	r0, [sp, #16]
 801495a:	4628      	mov	r0, r5
 801495c:	f7ff fea6 	bl	80146ac <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8014960:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014964:	1a18      	subs	r0, r3, r0
 8014966:	f8ad 0012 	strh.w	r0, [sp, #18]
 801496a:	682b      	ldr	r3, [r5, #0]
 801496c:	4631      	mov	r1, r6
 801496e:	689b      	ldr	r3, [r3, #8]
 8014970:	4628      	mov	r0, r5
 8014972:	4798      	blx	r3
 8014974:	e717      	b.n	80147a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08014976 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8014976:	b570      	push	{r4, r5, r6, lr}
 8014978:	460c      	mov	r4, r1
 801497a:	b086      	sub	sp, #24
 801497c:	1d06      	adds	r6, r0, #4
 801497e:	2300      	movs	r3, #0
 8014980:	4631      	mov	r1, r6
 8014982:	4605      	mov	r5, r0
 8014984:	a802      	add	r0, sp, #8
 8014986:	9301      	str	r3, [sp, #4]
 8014988:	f7ff fca0 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801498c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014990:	8822      	ldrh	r2, [r4, #0]
 8014992:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8014996:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801499a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801499e:	1ad2      	subs	r2, r2, r3
 80149a0:	8863      	ldrh	r3, [r4, #2]
 80149a2:	f8ad 2010 	strh.w	r2, [sp, #16]
 80149a6:	1a5b      	subs	r3, r3, r1
 80149a8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80149ac:	f8ad 1016 	strh.w	r1, [sp, #22]
 80149b0:	aa01      	add	r2, sp, #4
 80149b2:	a904      	add	r1, sp, #16
 80149b4:	4630      	mov	r0, r6
 80149b6:	f8ad 3012 	strh.w	r3, [sp, #18]
 80149ba:	f7fa ffd3 	bl	800f964 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80149be:	9a01      	ldr	r2, [sp, #4]
 80149c0:	b11a      	cbz	r2, 80149ca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80149c2:	4621      	mov	r1, r4
 80149c4:	4628      	mov	r0, r5
 80149c6:	f7ff fed5 	bl	8014774 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80149ca:	b006      	add	sp, #24
 80149cc:	bd70      	pop	{r4, r5, r6, pc}

080149ce <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80149ce:	b530      	push	{r4, r5, lr}
 80149d0:	4602      	mov	r2, r0
 80149d2:	4604      	mov	r4, r0
 80149d4:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80149d8:	b085      	sub	sp, #20
 80149da:	460d      	mov	r5, r1
 80149dc:	6851      	ldr	r1, [r2, #4]
 80149de:	466b      	mov	r3, sp
 80149e0:	c303      	stmia	r3!, {r0, r1}
 80149e2:	4629      	mov	r1, r5
 80149e4:	4668      	mov	r0, sp
 80149e6:	f7fa fee5 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 80149ea:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80149ee:	b12b      	cbz	r3, 80149fc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80149f0:	4669      	mov	r1, sp
 80149f2:	4620      	mov	r0, r4
 80149f4:	f7ff ffbf 	bl	8014976 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80149f8:	b005      	add	sp, #20
 80149fa:	bd30      	pop	{r4, r5, pc}
 80149fc:	3404      	adds	r4, #4
 80149fe:	4621      	mov	r1, r4
 8014a00:	a802      	add	r0, sp, #8
 8014a02:	f7ff fc63 	bl	80142cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014a06:	f8bd 3000 	ldrh.w	r3, [sp]
 8014a0a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8014a0e:	1a9b      	subs	r3, r3, r2
 8014a10:	f8ad 3000 	strh.w	r3, [sp]
 8014a14:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014a18:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014a1c:	4669      	mov	r1, sp
 8014a1e:	1a9b      	subs	r3, r3, r2
 8014a20:	4620      	mov	r0, r4
 8014a22:	f8ad 3002 	strh.w	r3, [sp, #2]
 8014a26:	f7fa ff64 	bl	800f8f2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8014a2a:	e7e5      	b.n	80149f8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08014a2c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8014a2c:	680a      	ldr	r2, [r1, #0]
 8014a2e:	460b      	mov	r3, r1
 8014a30:	6992      	ldr	r2, [r2, #24]
 8014a32:	1d01      	adds	r1, r0, #4
 8014a34:	4618      	mov	r0, r3
 8014a36:	4710      	bx	r2

08014a38 <_ZN8touchgfx12TextProviderC1Ev>:
 8014a38:	b538      	push	{r3, r4, r5, lr}
 8014a3a:	2500      	movs	r5, #0
 8014a3c:	2302      	movs	r3, #2
 8014a3e:	4604      	mov	r4, r0
 8014a40:	e9c0 5500 	strd	r5, r5, [r0]
 8014a44:	7403      	strb	r3, [r0, #16]
 8014a46:	6145      	str	r5, [r0, #20]
 8014a48:	7605      	strb	r5, [r0, #24]
 8014a4a:	83c5      	strh	r5, [r0, #30]
 8014a4c:	8405      	strh	r5, [r0, #32]
 8014a4e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8014a50:	8705      	strh	r5, [r0, #56]	@ 0x38
 8014a52:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8014a54:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8014a58:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8014a5c:	220e      	movs	r2, #14
 8014a5e:	4629      	mov	r1, r5
 8014a60:	304c      	adds	r0, #76	@ 0x4c
 8014a62:	f010 fb93 	bl	802518c <memset>
 8014a66:	2301      	movs	r3, #1
 8014a68:	4620      	mov	r0, r4
 8014a6a:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8014a6e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8014a72:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8014a76:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8014a7a:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8014a7e:	f7f8 fa1f 	bl	800cec0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8014a82:	4620      	mov	r0, r4
 8014a84:	bd38      	pop	{r3, r4, r5, pc}

08014a86 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8014a86:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8014a88:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014a8c:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8014a8e:	fab0 f080 	clz	r0, r0
 8014a92:	0940      	lsrs	r0, r0, #5
 8014a94:	4770      	bx	lr

08014a96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8014a96:	b530      	push	{r4, r5, lr}
 8014a98:	2500      	movs	r5, #0
 8014a9a:	2401      	movs	r4, #1
 8014a9c:	6843      	ldr	r3, [r0, #4]
 8014a9e:	b913      	cbnz	r3, 8014aa6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8014aa0:	6803      	ldr	r3, [r0, #0]
 8014aa2:	b313      	cbz	r3, 8014aea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8014aa4:	6043      	str	r3, [r0, #4]
 8014aa6:	7e03      	ldrb	r3, [r0, #24]
 8014aa8:	b143      	cbz	r3, 8014abc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8014aaa:	6943      	ldr	r3, [r0, #20]
 8014aac:	b12b      	cbz	r3, 8014aba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8014aae:	881a      	ldrh	r2, [r3, #0]
 8014ab0:	b11a      	cbz	r2, 8014aba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8014ab2:	1c9a      	adds	r2, r3, #2
 8014ab4:	6142      	str	r2, [r0, #20]
 8014ab6:	8818      	ldrh	r0, [r3, #0]
 8014ab8:	bd30      	pop	{r4, r5, pc}
 8014aba:	7605      	strb	r5, [r0, #24]
 8014abc:	6843      	ldr	r3, [r0, #4]
 8014abe:	8819      	ldrh	r1, [r3, #0]
 8014ac0:	b199      	cbz	r1, 8014aea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8014ac2:	1c9a      	adds	r2, r3, #2
 8014ac4:	2902      	cmp	r1, #2
 8014ac6:	6042      	str	r2, [r0, #4]
 8014ac8:	d1f5      	bne.n	8014ab6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8014aca:	7c03      	ldrb	r3, [r0, #16]
 8014acc:	2b01      	cmp	r3, #1
 8014ace:	d8e5      	bhi.n	8014a9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014ad0:	1c5a      	adds	r2, r3, #1
 8014ad2:	3302      	adds	r3, #2
 8014ad4:	7402      	strb	r2, [r0, #16]
 8014ad6:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8014ada:	6143      	str	r3, [r0, #20]
 8014adc:	2b00      	cmp	r3, #0
 8014ade:	d0dd      	beq.n	8014a9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014ae0:	881b      	ldrh	r3, [r3, #0]
 8014ae2:	2b00      	cmp	r3, #0
 8014ae4:	d0da      	beq.n	8014a9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014ae6:	7604      	strb	r4, [r0, #24]
 8014ae8:	e7d8      	b.n	8014a9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014aea:	2000      	movs	r0, #0
 8014aec:	e7e4      	b.n	8014ab8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08014aee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8014aee:	b430      	push	{r4, r5}
 8014af0:	6001      	str	r1, [r0, #0]
 8014af2:	2100      	movs	r1, #0
 8014af4:	6041      	str	r1, [r0, #4]
 8014af6:	6815      	ldr	r5, [r2, #0]
 8014af8:	6085      	str	r5, [r0, #8]
 8014afa:	6852      	ldr	r2, [r2, #4]
 8014afc:	6443      	str	r3, [r0, #68]	@ 0x44
 8014afe:	9b02      	ldr	r3, [sp, #8]
 8014b00:	60c2      	str	r2, [r0, #12]
 8014b02:	7401      	strb	r1, [r0, #16]
 8014b04:	6141      	str	r1, [r0, #20]
 8014b06:	7601      	strb	r1, [r0, #24]
 8014b08:	8701      	strh	r1, [r0, #56]	@ 0x38
 8014b0a:	8401      	strh	r1, [r0, #32]
 8014b0c:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8014b10:	6483      	str	r3, [r0, #72]	@ 0x48
 8014b12:	bc30      	pop	{r4, r5}
 8014b14:	f7f8 b9d4 	b.w	800cec0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08014b18 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8014b18:	b408      	push	{r3}
 8014b1a:	b510      	push	{r4, lr}
 8014b1c:	b085      	sub	sp, #20
 8014b1e:	ac07      	add	r4, sp, #28
 8014b20:	f854 3b04 	ldr.w	r3, [r4], #4
 8014b24:	9300      	str	r3, [sp, #0]
 8014b26:	4613      	mov	r3, r2
 8014b28:	4622      	mov	r2, r4
 8014b2a:	9403      	str	r4, [sp, #12]
 8014b2c:	f7ff ffdf 	bl	8014aee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014b30:	b005      	add	sp, #20
 8014b32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014b36:	b001      	add	sp, #4
 8014b38:	4770      	bx	lr

08014b3a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8014b3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014b3c:	4605      	mov	r5, r0
 8014b3e:	4608      	mov	r0, r1
 8014b40:	b1e9      	cbz	r1, 8014b7e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8014b42:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8014b46:	460b      	mov	r3, r1
 8014b48:	f101 0708 	add.w	r7, r1, #8
 8014b4c:	4622      	mov	r2, r4
 8014b4e:	6818      	ldr	r0, [r3, #0]
 8014b50:	6859      	ldr	r1, [r3, #4]
 8014b52:	4626      	mov	r6, r4
 8014b54:	c603      	stmia	r6!, {r0, r1}
 8014b56:	3308      	adds	r3, #8
 8014b58:	42bb      	cmp	r3, r7
 8014b5a:	4634      	mov	r4, r6
 8014b5c:	d1f7      	bne.n	8014b4e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8014b5e:	6818      	ldr	r0, [r3, #0]
 8014b60:	6030      	str	r0, [r6, #0]
 8014b62:	889b      	ldrh	r3, [r3, #4]
 8014b64:	80b3      	strh	r3, [r6, #4]
 8014b66:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8014b6a:	015b      	lsls	r3, r3, #5
 8014b6c:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8014b70:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8014b74:	430b      	orrs	r3, r1
 8014b76:	425b      	negs	r3, r3
 8014b78:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8014b7c:	4610      	mov	r0, r2
 8014b7e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014b80 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8014b80:	b538      	push	{r3, r4, r5, lr}
 8014b82:	460c      	mov	r4, r1
 8014b84:	6811      	ldr	r1, [r2, #0]
 8014b86:	4610      	mov	r0, r2
 8014b88:	68cd      	ldr	r5, [r1, #12]
 8014b8a:	4619      	mov	r1, r3
 8014b8c:	47a8      	blx	r5
 8014b8e:	2800      	cmp	r0, #0
 8014b90:	bf08      	it	eq
 8014b92:	4620      	moveq	r0, r4
 8014b94:	bd38      	pop	{r3, r4, r5, pc}
	...

08014b98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8014b98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014b9a:	4604      	mov	r4, r0
 8014b9c:	4615      	mov	r5, r2
 8014b9e:	4608      	mov	r0, r1
 8014ba0:	b93a      	cbnz	r2, 8014bb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8014ba2:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 8014ba6:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 8014baa:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 8014bae:	4628      	mov	r0, r5
 8014bb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014bb2:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8014bb6:	8893      	ldrh	r3, [r2, #4]
 8014bb8:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8014bbc:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8014bc0:	79ee      	ldrb	r6, [r5, #7]
 8014bc2:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 8014bc6:	4316      	orrs	r6, r2
 8014bc8:	19da      	adds	r2, r3, r7
 8014bca:	b291      	uxth	r1, r2
 8014bcc:	291d      	cmp	r1, #29
 8014bce:	b2b7      	uxth	r7, r6
 8014bd0:	d87a      	bhi.n	8014cc8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8014bd2:	2201      	movs	r2, #1
 8014bd4:	408a      	lsls	r2, r1
 8014bd6:	4975      	ldr	r1, [pc, #468]	@ (8014dac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8014bd8:	420a      	tst	r2, r1
 8014bda:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8014bde:	d12d      	bne.n	8014c3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8014be0:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8014be4:	d070      	beq.n	8014cc8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8014be6:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 8014bea:	462b      	mov	r3, r5
 8014bec:	f105 0e08 	add.w	lr, r5, #8
 8014bf0:	4615      	mov	r5, r2
 8014bf2:	6818      	ldr	r0, [r3, #0]
 8014bf4:	6859      	ldr	r1, [r3, #4]
 8014bf6:	4694      	mov	ip, r2
 8014bf8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014bfc:	3308      	adds	r3, #8
 8014bfe:	4573      	cmp	r3, lr
 8014c00:	4662      	mov	r2, ip
 8014c02:	d1f6      	bne.n	8014bf2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8014c04:	6818      	ldr	r0, [r3, #0]
 8014c06:	f8cc 0000 	str.w	r0, [ip]
 8014c0a:	889b      	ldrh	r3, [r3, #4]
 8014c0c:	f8ac 3004 	strh.w	r3, [ip, #4]
 8014c10:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 8014c14:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 8014c18:	b2b3      	uxth	r3, r6
 8014c1a:	1aca      	subs	r2, r1, r3
 8014c1c:	b292      	uxth	r2, r2
 8014c1e:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 8014c22:	10d2      	asrs	r2, r2, #3
 8014c24:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8014c28:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8014c2c:	4302      	orrs	r2, r0
 8014c2e:	1bcf      	subs	r7, r1, r7
 8014c30:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 8014c34:	1afb      	subs	r3, r7, r3
 8014c36:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8014c3a:	e7b8      	b.n	8014bae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8014c3c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8014c3e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014c42:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8014c44:	f640 6333 	movw	r3, #3635	@ 0xe33
 8014c48:	4299      	cmp	r1, r3
 8014c4a:	d110      	bne.n	8014c6e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8014c4c:	6803      	ldr	r3, [r0, #0]
 8014c4e:	68db      	ldr	r3, [r3, #12]
 8014c50:	4798      	blx	r3
 8014c52:	7b41      	ldrb	r1, [r0, #13]
 8014c54:	00cb      	lsls	r3, r1, #3
 8014c56:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8014c5a:	7a03      	ldrb	r3, [r0, #8]
 8014c5c:	0648      	lsls	r0, r1, #25
 8014c5e:	ea43 0302 	orr.w	r3, r3, r2
 8014c62:	bf44      	itt	mi
 8014c64:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8014c68:	b21b      	sxthmi	r3, r3
 8014c6a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8014c6e:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 8014c72:	443b      	add	r3, r7
 8014c74:	4433      	add	r3, r6
 8014c76:	b29b      	uxth	r3, r3
 8014c78:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 8014c7c:	462a      	mov	r2, r5
 8014c7e:	f105 0c08 	add.w	ip, r5, #8
 8014c82:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8014c86:	4635      	mov	r5, r6
 8014c88:	6810      	ldr	r0, [r2, #0]
 8014c8a:	6851      	ldr	r1, [r2, #4]
 8014c8c:	4637      	mov	r7, r6
 8014c8e:	c703      	stmia	r7!, {r0, r1}
 8014c90:	3208      	adds	r2, #8
 8014c92:	4562      	cmp	r2, ip
 8014c94:	463e      	mov	r6, r7
 8014c96:	d1f7      	bne.n	8014c88 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8014c98:	6810      	ldr	r0, [r2, #0]
 8014c9a:	6038      	str	r0, [r7, #0]
 8014c9c:	8892      	ldrh	r2, [r2, #4]
 8014c9e:	80ba      	strh	r2, [r7, #4]
 8014ca0:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8014ca4:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8014ca8:	10db      	asrs	r3, r3, #3
 8014caa:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8014cae:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8014cb2:	4313      	orrs	r3, r2
 8014cb4:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8014cb8:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 8014cbc:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 8014cc0:	1a9b      	subs	r3, r3, r2
 8014cc2:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 8014cc6:	e772      	b.n	8014bae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8014cc8:	f023 0204 	bic.w	r2, r3, #4
 8014ccc:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8014cd0:	428a      	cmp	r2, r1
 8014cd2:	d003      	beq.n	8014cdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8014cd4:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8014cd8:	4293      	cmp	r3, r2
 8014cda:	d120      	bne.n	8014d1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8014cdc:	3b01      	subs	r3, #1
 8014cde:	4602      	mov	r2, r0
 8014ce0:	b29b      	uxth	r3, r3
 8014ce2:	4629      	mov	r1, r5
 8014ce4:	4620      	mov	r0, r4
 8014ce6:	f7ff ff4b 	bl	8014b80 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8014cea:	7b41      	ldrb	r1, [r0, #13]
 8014cec:	00cb      	lsls	r3, r1, #3
 8014cee:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8014cf2:	7a03      	ldrb	r3, [r0, #8]
 8014cf4:	0649      	lsls	r1, r1, #25
 8014cf6:	ea43 0302 	orr.w	r3, r3, r2
 8014cfa:	bf44      	itt	mi
 8014cfc:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8014d00:	b21b      	sxthmi	r3, r3
 8014d02:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8014d06:	7b6b      	ldrb	r3, [r5, #13]
 8014d08:	7aaa      	ldrb	r2, [r5, #10]
 8014d0a:	005b      	lsls	r3, r3, #1
 8014d0c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8014d10:	4313      	orrs	r3, r2
 8014d12:	115a      	asrs	r2, r3, #5
 8014d14:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8014d18:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8014d1c:	e036      	b.n	8014d8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8014d1e:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8014d22:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8014d26:	7a2a      	ldrb	r2, [r5, #8]
 8014d28:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 8014d2c:	ea42 0201 	orr.w	r2, r2, r1
 8014d30:	bf1c      	itt	ne
 8014d32:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 8014d36:	b212      	sxthne	r2, r2
 8014d38:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 8014d3c:	f640 6109 	movw	r1, #3593	@ 0xe09
 8014d40:	f023 0210 	bic.w	r2, r3, #16
 8014d44:	428a      	cmp	r2, r1
 8014d46:	d003      	beq.n	8014d50 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8014d48:	f640 6213 	movw	r2, #3603	@ 0xe13
 8014d4c:	4293      	cmp	r3, r2
 8014d4e:	d12a      	bne.n	8014da6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8014d50:	7b6e      	ldrb	r6, [r5, #13]
 8014d52:	0076      	lsls	r6, r6, #1
 8014d54:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8014d58:	7aae      	ldrb	r6, [r5, #10]
 8014d5a:	4316      	orrs	r6, r2
 8014d5c:	f640 6213 	movw	r2, #3603	@ 0xe13
 8014d60:	4293      	cmp	r3, r2
 8014d62:	bf18      	it	ne
 8014d64:	f103 33ff 	addne.w	r3, r3, #4294967295
 8014d68:	4602      	mov	r2, r0
 8014d6a:	bf14      	ite	ne
 8014d6c:	b29b      	uxthne	r3, r3
 8014d6e:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8014d72:	4629      	mov	r1, r5
 8014d74:	4620      	mov	r0, r4
 8014d76:	f7ff ff03 	bl	8014b80 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8014d7a:	7b43      	ldrb	r3, [r0, #13]
 8014d7c:	7a82      	ldrb	r2, [r0, #10]
 8014d7e:	005b      	lsls	r3, r3, #1
 8014d80:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8014d84:	4313      	orrs	r3, r2
 8014d86:	1af6      	subs	r6, r6, r3
 8014d88:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 8014d8c:	7b69      	ldrb	r1, [r5, #13]
 8014d8e:	00cb      	lsls	r3, r1, #3
 8014d90:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8014d94:	7a2b      	ldrb	r3, [r5, #8]
 8014d96:	4313      	orrs	r3, r2
 8014d98:	064a      	lsls	r2, r1, #25
 8014d9a:	bf44      	itt	mi
 8014d9c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8014da0:	b21b      	sxthmi	r3, r3
 8014da2:	1bdb      	subs	r3, r3, r7
 8014da4:	e747      	b.n	8014c36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8014da6:	2300      	movs	r3, #0
 8014da8:	e7b6      	b.n	8014d18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8014daa:	bf00      	nop
 8014dac:	3fc00079 	.word	0x3fc00079

08014db0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8014db0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014db4:	4604      	mov	r4, r0
 8014db6:	b942      	cbnz	r2, 8014dca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8014db8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8014dbc:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8014dc0:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8014dc4:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8014dc8:	e047      	b.n	8014e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8014dca:	7b51      	ldrb	r1, [r2, #13]
 8014dcc:	8893      	ldrh	r3, [r2, #4]
 8014dce:	010d      	lsls	r5, r1, #4
 8014dd0:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8014dd4:	79d5      	ldrb	r5, [r2, #7]
 8014dd6:	4305      	orrs	r5, r0
 8014dd8:	2d04      	cmp	r5, #4
 8014dda:	bfcc      	ite	gt
 8014ddc:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8014de0:	f04f 0e01 	movle.w	lr, #1
 8014de4:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8014de8:	f200 80ab 	bhi.w	8014f42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8014dec:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8014df0:	4283      	cmp	r3, r0
 8014df2:	d216      	bcs.n	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014df4:	f240 605b 	movw	r0, #1627	@ 0x65b
 8014df8:	4283      	cmp	r3, r0
 8014dfa:	d859      	bhi.n	8014eb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8014dfc:	f240 6057 	movw	r0, #1623	@ 0x657
 8014e00:	4283      	cmp	r3, r0
 8014e02:	d20e      	bcs.n	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014e04:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8014e08:	d24a      	bcs.n	8014ea0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8014e0a:	f240 604e 	movw	r0, #1614	@ 0x64e
 8014e0e:	4283      	cmp	r3, r0
 8014e10:	d207      	bcs.n	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014e12:	f240 601a 	movw	r0, #1562	@ 0x61a
 8014e16:	4283      	cmp	r3, r0
 8014e18:	d02a      	beq.n	8014e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014e1a:	d821      	bhi.n	8014e60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8014e1c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8014e20:	d35b      	bcc.n	8014eda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8014e22:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8014e26:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8014e2a:	f040 80d0 	bne.w	8014fce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8014e2e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8014e32:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8014e36:	f040 80ca 	bne.w	8014fce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8014e3a:	00cb      	lsls	r3, r1, #3
 8014e3c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8014e40:	7a13      	ldrb	r3, [r2, #8]
 8014e42:	0649      	lsls	r1, r1, #25
 8014e44:	ea43 0300 	orr.w	r3, r3, r0
 8014e48:	bf44      	itt	mi
 8014e4a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8014e4e:	b21b      	sxthmi	r3, r3
 8014e50:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8014e54:	1b5d      	subs	r5, r3, r5
 8014e56:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8014e5a:	4610      	mov	r0, r2
 8014e5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014e60:	f240 604b 	movw	r0, #1611	@ 0x64b
 8014e64:	4283      	cmp	r3, r0
 8014e66:	d338      	bcc.n	8014eda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8014e68:	f240 604c 	movw	r0, #1612	@ 0x64c
 8014e6c:	4283      	cmp	r3, r0
 8014e6e:	d9d8      	bls.n	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014e70:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8014e74:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8014e78:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8014e7c:	f040 80f2 	bne.w	8015064 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8014e80:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8014e84:	f040 80ee 	bne.w	8015064 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8014e88:	00cb      	lsls	r3, r1, #3
 8014e8a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8014e8e:	7a13      	ldrb	r3, [r2, #8]
 8014e90:	064e      	lsls	r6, r1, #25
 8014e92:	ea43 0300 	orr.w	r3, r3, r0
 8014e96:	bf44      	itt	mi
 8014e98:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8014e9c:	b21b      	sxthmi	r3, r3
 8014e9e:	e7d9      	b.n	8014e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8014ea0:	f240 6054 	movw	r0, #1620	@ 0x654
 8014ea4:	4283      	cmp	r3, r0
 8014ea6:	d8e3      	bhi.n	8014e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014ea8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8014eac:	d9e0      	bls.n	8014e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014eae:	e7b8      	b.n	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014eb0:	f240 6074 	movw	r0, #1652	@ 0x674
 8014eb4:	4283      	cmp	r3, r0
 8014eb6:	d0b4      	beq.n	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014eb8:	d82d      	bhi.n	8014f16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8014eba:	f240 605e 	movw	r0, #1630	@ 0x65e
 8014ebe:	4283      	cmp	r3, r0
 8014ec0:	d804      	bhi.n	8014ecc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8014ec2:	f240 605d 	movw	r0, #1629	@ 0x65d
 8014ec6:	4283      	cmp	r3, r0
 8014ec8:	d3d2      	bcc.n	8014e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014eca:	e7aa      	b.n	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014ecc:	f240 605f 	movw	r0, #1631	@ 0x65f
 8014ed0:	4283      	cmp	r3, r0
 8014ed2:	d0cd      	beq.n	8014e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014ed4:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8014ed8:	d0a3      	beq.n	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014eda:	00cb      	lsls	r3, r1, #3
 8014edc:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8014ee0:	7a13      	ldrb	r3, [r2, #8]
 8014ee2:	0649      	lsls	r1, r1, #25
 8014ee4:	ea43 0300 	orr.w	r3, r3, r0
 8014ee8:	bf44      	itt	mi
 8014eea:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8014eee:	b21b      	sxthmi	r3, r3
 8014ef0:	1b5d      	subs	r5, r3, r5
 8014ef2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8014ef6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8014efa:	7b53      	ldrb	r3, [r2, #13]
 8014efc:	015b      	lsls	r3, r3, #5
 8014efe:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8014f02:	7993      	ldrb	r3, [r2, #6]
 8014f04:	430b      	orrs	r3, r1
 8014f06:	005b      	lsls	r3, r3, #1
 8014f08:	2105      	movs	r1, #5
 8014f0a:	fb93 f3f1 	sdiv	r3, r3, r1
 8014f0e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8014f12:	440b      	add	r3, r1
 8014f14:	e756      	b.n	8014dc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8014f16:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8014f1a:	4283      	cmp	r3, r0
 8014f1c:	d809      	bhi.n	8014f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8014f1e:	f240 60df 	movw	r0, #1759	@ 0x6df
 8014f22:	4283      	cmp	r3, r0
 8014f24:	f4bf af7d 	bcs.w	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014f28:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8014f2c:	2b05      	cmp	r3, #5
 8014f2e:	d8d4      	bhi.n	8014eda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8014f30:	e777      	b.n	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014f32:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8014f36:	4283      	cmp	r3, r0
 8014f38:	d09a      	beq.n	8014e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014f3a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8014f3e:	4283      	cmp	r3, r0
 8014f40:	e7ca      	b.n	8014ed8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8014f42:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8014f46:	d22b      	bcs.n	8014fa0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8014f48:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8014f4c:	4283      	cmp	r3, r0
 8014f4e:	d28f      	bcs.n	8014e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014f50:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8014f54:	4283      	cmp	r3, r0
 8014f56:	d816      	bhi.n	8014f86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8014f58:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8014f5c:	4283      	cmp	r3, r0
 8014f5e:	f4bf af60 	bcs.w	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014f62:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8014f66:	4283      	cmp	r3, r0
 8014f68:	d80a      	bhi.n	8014f80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8014f6a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8014f6e:	4283      	cmp	r3, r0
 8014f70:	f4bf af57 	bcs.w	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014f74:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8014f78:	4283      	cmp	r3, r0
 8014f7a:	f43f af79 	beq.w	8014e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014f7e:	e7ac      	b.n	8014eda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8014f80:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8014f84:	e7f8      	b.n	8014f78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8014f86:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8014f8a:	4283      	cmp	r3, r0
 8014f8c:	d802      	bhi.n	8014f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8014f8e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8014f92:	e798      	b.n	8014ec6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8014f94:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8014f98:	4283      	cmp	r3, r0
 8014f9a:	f47f af42 	bne.w	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014f9e:	e767      	b.n	8014e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014fa0:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8014fa4:	4283      	cmp	r3, r0
 8014fa6:	f43f af63 	beq.w	8014e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014faa:	d802      	bhi.n	8014fb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8014fac:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8014fb0:	e7f2      	b.n	8014f98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8014fb2:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8014fb6:	4283      	cmp	r3, r0
 8014fb8:	d805      	bhi.n	8014fc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8014fba:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8014fbe:	4283      	cmp	r3, r0
 8014fc0:	f4ff af2f 	bcc.w	8014e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014fc4:	e754      	b.n	8014e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014fc6:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8014fca:	4283      	cmp	r3, r0
 8014fcc:	e7af      	b.n	8014f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8014fce:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8014fd2:	4617      	mov	r7, r2
 8014fd4:	f102 0808 	add.w	r8, r2, #8
 8014fd8:	4666      	mov	r6, ip
 8014fda:	6838      	ldr	r0, [r7, #0]
 8014fdc:	6879      	ldr	r1, [r7, #4]
 8014fde:	46e6      	mov	lr, ip
 8014fe0:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8014fe4:	3708      	adds	r7, #8
 8014fe6:	4547      	cmp	r7, r8
 8014fe8:	46f4      	mov	ip, lr
 8014fea:	d1f6      	bne.n	8014fda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8014fec:	6838      	ldr	r0, [r7, #0]
 8014fee:	f8ce 0000 	str.w	r0, [lr]
 8014ff2:	88b9      	ldrh	r1, [r7, #4]
 8014ff4:	f8ae 1004 	strh.w	r1, [lr, #4]
 8014ff8:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8014ffc:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8015000:	d009      	beq.n	8015016 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8015002:	7b51      	ldrb	r1, [r2, #13]
 8015004:	7992      	ldrb	r2, [r2, #6]
 8015006:	0149      	lsls	r1, r1, #5
 8015008:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801500c:	4311      	orrs	r1, r2
 801500e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8015012:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8015016:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801501a:	b2ad      	uxth	r5, r5
 801501c:	d00d      	beq.n	801503a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801501e:	442b      	add	r3, r5
 8015020:	b29b      	uxth	r3, r3
 8015022:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8015026:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801502a:	10db      	asrs	r3, r3, #3
 801502c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8015030:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8015034:	4313      	orrs	r3, r2
 8015036:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801503a:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801503e:	00cb      	lsls	r3, r1, #3
 8015040:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015044:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8015048:	064f      	lsls	r7, r1, #25
 801504a:	ea43 0302 	orr.w	r3, r3, r2
 801504e:	bf44      	itt	mi
 8015050:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015054:	b21b      	sxthmi	r3, r3
 8015056:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801505a:	1b5b      	subs	r3, r3, r5
 801505c:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8015060:	4632      	mov	r2, r6
 8015062:	e6fa      	b.n	8014e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8015064:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8015068:	4617      	mov	r7, r2
 801506a:	f102 0908 	add.w	r9, r2, #8
 801506e:	4666      	mov	r6, ip
 8015070:	6838      	ldr	r0, [r7, #0]
 8015072:	6879      	ldr	r1, [r7, #4]
 8015074:	46e0      	mov	r8, ip
 8015076:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801507a:	3708      	adds	r7, #8
 801507c:	454f      	cmp	r7, r9
 801507e:	46c4      	mov	ip, r8
 8015080:	d1f6      	bne.n	8015070 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8015082:	6838      	ldr	r0, [r7, #0]
 8015084:	f8c8 0000 	str.w	r0, [r8]
 8015088:	88b9      	ldrh	r1, [r7, #4]
 801508a:	f8a8 1004 	strh.w	r1, [r8, #4]
 801508e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8015092:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8015096:	d009      	beq.n	80150ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8015098:	7b51      	ldrb	r1, [r2, #13]
 801509a:	7992      	ldrb	r2, [r2, #6]
 801509c:	0149      	lsls	r1, r1, #5
 801509e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80150a2:	4311      	orrs	r1, r2
 80150a4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80150a8:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80150ac:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80150b0:	d00e      	beq.n	80150d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80150b2:	eba3 030e 	sub.w	r3, r3, lr
 80150b6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80150ba:	b29b      	uxth	r3, r3
 80150bc:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80150c0:	10db      	asrs	r3, r3, #3
 80150c2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80150c6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80150ca:	4313      	orrs	r3, r2
 80150cc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80150d0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80150d4:	00cb      	lsls	r3, r1, #3
 80150d6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80150da:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80150de:	0648      	lsls	r0, r1, #25
 80150e0:	ea43 0302 	orr.w	r3, r3, r2
 80150e4:	bf44      	itt	mi
 80150e6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80150ea:	b21b      	sxthmi	r3, r3
 80150ec:	1b5d      	subs	r5, r3, r5
 80150ee:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80150f2:	e7b5      	b.n	8015060 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080150f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80150f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80150f8:	461e      	mov	r6, r3
 80150fa:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80150fc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015100:	4604      	mov	r4, r0
 8015102:	4617      	mov	r7, r2
 8015104:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8015108:	f7f7 fe34 	bl	800cd74 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801510c:	4605      	mov	r5, r0
 801510e:	b918      	cbnz	r0, 8015118 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8015110:	6030      	str	r0, [r6, #0]
 8015112:	4628      	mov	r0, r5
 8015114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015118:	683b      	ldr	r3, [r7, #0]
 801511a:	4601      	mov	r1, r0
 801511c:	68db      	ldr	r3, [r3, #12]
 801511e:	4638      	mov	r0, r7
 8015120:	4798      	blx	r3
 8015122:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8015126:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801512a:	4602      	mov	r2, r0
 801512c:	6030      	str	r0, [r6, #0]
 801512e:	d213      	bcs.n	8015158 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8015130:	4643      	mov	r3, r8
 8015132:	4639      	mov	r1, r7
 8015134:	4620      	mov	r0, r4
 8015136:	f7ff fe3b 	bl	8014db0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801513a:	6030      	str	r0, [r6, #0]
 801513c:	6833      	ldr	r3, [r6, #0]
 801513e:	b143      	cbz	r3, 8015152 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8015140:	7b5a      	ldrb	r2, [r3, #13]
 8015142:	7a9b      	ldrb	r3, [r3, #10]
 8015144:	0052      	lsls	r2, r2, #1
 8015146:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801514a:	4313      	orrs	r3, r2
 801514c:	bf0c      	ite	eq
 801514e:	2301      	moveq	r3, #1
 8015150:	2300      	movne	r3, #0
 8015152:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8015156:	e7dc      	b.n	8015112 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8015158:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801515c:	b29b      	uxth	r3, r3
 801515e:	2b7f      	cmp	r3, #127	@ 0x7f
 8015160:	d804      	bhi.n	801516c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8015162:	4639      	mov	r1, r7
 8015164:	4620      	mov	r0, r4
 8015166:	f7ff fd17 	bl	8014b98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801516a:	e7e6      	b.n	801513a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801516c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8015170:	2b00      	cmp	r3, #0
 8015172:	d0e3      	beq.n	801513c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8015174:	f640 1302 	movw	r3, #2306	@ 0x902
 8015178:	429d      	cmp	r5, r3
 801517a:	d1df      	bne.n	801513c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801517c:	4601      	mov	r1, r0
 801517e:	4620      	mov	r0, r4
 8015180:	f7ff fcdb 	bl	8014b3a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8015184:	e7d9      	b.n	801513a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08015186 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8015186:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801518a:	461e      	mov	r6, r3
 801518c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801518e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015192:	4604      	mov	r4, r0
 8015194:	4617      	mov	r7, r2
 8015196:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801519a:	f7f7 fdeb 	bl	800cd74 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801519e:	4605      	mov	r5, r0
 80151a0:	b918      	cbnz	r0, 80151aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80151a2:	6030      	str	r0, [r6, #0]
 80151a4:	4628      	mov	r0, r5
 80151a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80151aa:	683b      	ldr	r3, [r7, #0]
 80151ac:	4601      	mov	r1, r0
 80151ae:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80151b2:	4638      	mov	r0, r7
 80151b4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80151b8:	47c8      	blx	r9
 80151ba:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80151be:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80151c2:	4602      	mov	r2, r0
 80151c4:	6030      	str	r0, [r6, #0]
 80151c6:	d213      	bcs.n	80151f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80151c8:	4643      	mov	r3, r8
 80151ca:	4639      	mov	r1, r7
 80151cc:	4620      	mov	r0, r4
 80151ce:	f7ff fdef 	bl	8014db0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80151d2:	6030      	str	r0, [r6, #0]
 80151d4:	6833      	ldr	r3, [r6, #0]
 80151d6:	b143      	cbz	r3, 80151ea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80151d8:	7b5a      	ldrb	r2, [r3, #13]
 80151da:	7a9b      	ldrb	r3, [r3, #10]
 80151dc:	0052      	lsls	r2, r2, #1
 80151de:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80151e2:	4313      	orrs	r3, r2
 80151e4:	bf0c      	ite	eq
 80151e6:	2301      	moveq	r3, #1
 80151e8:	2300      	movne	r3, #0
 80151ea:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80151ee:	e7d9      	b.n	80151a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80151f0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80151f4:	b29b      	uxth	r3, r3
 80151f6:	2b7f      	cmp	r3, #127	@ 0x7f
 80151f8:	d804      	bhi.n	8015204 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80151fa:	4639      	mov	r1, r7
 80151fc:	4620      	mov	r0, r4
 80151fe:	f7ff fccb 	bl	8014b98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8015202:	e7e6      	b.n	80151d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8015204:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8015208:	2b00      	cmp	r3, #0
 801520a:	d0e3      	beq.n	80151d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801520c:	f640 1302 	movw	r3, #2306	@ 0x902
 8015210:	429d      	cmp	r5, r3
 8015212:	d1df      	bne.n	80151d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8015214:	4601      	mov	r1, r0
 8015216:	4620      	mov	r0, r4
 8015218:	f7ff fc8f 	bl	8014b3a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801521c:	e7d9      	b.n	80151d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801521e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801521e:	b510      	push	{r4, lr}
 8015220:	4604      	mov	r4, r0
 8015222:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8015226:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8015228:	b1f1      	cbz	r1, 8015268 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801522a:	2b0a      	cmp	r3, #10
 801522c:	d02f      	beq.n	801528e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801522e:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8015230:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8015234:	3901      	subs	r1, #1
 8015236:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8015238:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 801523c:	1c51      	adds	r1, r2, #1
 801523e:	b289      	uxth	r1, r1
 8015240:	2901      	cmp	r1, #1
 8015242:	bf84      	itt	hi
 8015244:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8015248:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 801524a:	f103 0201 	add.w	r2, r3, #1
 801524e:	8722      	strh	r2, [r4, #56]	@ 0x38
 8015250:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8015252:	bf98      	it	ls
 8015254:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8015256:	4413      	add	r3, r2
 8015258:	b29b      	uxth	r3, r3
 801525a:	2b09      	cmp	r3, #9
 801525c:	bf88      	it	hi
 801525e:	3b0a      	subhi	r3, #10
 8015260:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015264:	8458      	strh	r0, [r3, #34]	@ 0x22
 8015266:	e7dc      	b.n	8015222 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8015268:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801526a:	2b0a      	cmp	r3, #10
 801526c:	d00f      	beq.n	801528e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801526e:	4620      	mov	r0, r4
 8015270:	f7ff fc11 	bl	8014a96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8015274:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8015276:	1c5a      	adds	r2, r3, #1
 8015278:	8722      	strh	r2, [r4, #56]	@ 0x38
 801527a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801527c:	4413      	add	r3, r2
 801527e:	b29b      	uxth	r3, r3
 8015280:	2b09      	cmp	r3, #9
 8015282:	bf88      	it	hi
 8015284:	3b0a      	subhi	r3, #10
 8015286:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801528a:	8458      	strh	r0, [r3, #34]	@ 0x22
 801528c:	e7ec      	b.n	8015268 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801528e:	bd10      	pop	{r4, pc}

08015290 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8015290:	b538      	push	{r3, r4, r5, lr}
 8015292:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8015294:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8015298:	4604      	mov	r4, r0
 801529a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 801529c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801529e:	3a01      	subs	r2, #1
 80152a0:	8702      	strh	r2, [r0, #56]	@ 0x38
 80152a2:	1c5a      	adds	r2, r3, #1
 80152a4:	b292      	uxth	r2, r2
 80152a6:	2a09      	cmp	r2, #9
 80152a8:	bf86      	itte	hi
 80152aa:	3b09      	subhi	r3, #9
 80152ac:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 80152ae:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 80152b0:	f7ff ffb5 	bl	801521e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80152b4:	8c23      	ldrh	r3, [r4, #32]
 80152b6:	2b01      	cmp	r3, #1
 80152b8:	bf9c      	itt	ls
 80152ba:	3301      	addls	r3, #1
 80152bc:	8423      	strhls	r3, [r4, #32]
 80152be:	8be3      	ldrh	r3, [r4, #30]
 80152c0:	b90b      	cbnz	r3, 80152c6 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80152c2:	2302      	movs	r3, #2
 80152c4:	83e3      	strh	r3, [r4, #30]
 80152c6:	8be3      	ldrh	r3, [r4, #30]
 80152c8:	3b01      	subs	r3, #1
 80152ca:	b29b      	uxth	r3, r3
 80152cc:	83e3      	strh	r3, [r4, #30]
 80152ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80152d2:	4628      	mov	r0, r5
 80152d4:	8365      	strh	r5, [r4, #26]
 80152d6:	bd38      	pop	{r3, r4, r5, pc}

080152d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80152d8:	428a      	cmp	r2, r1
 80152da:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80152de:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 80152e0:	d931      	bls.n	8015346 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80152e2:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80152e4:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80152e8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80152ec:	19ee      	adds	r6, r5, r7
 80152ee:	1a54      	subs	r4, r2, r1
 80152f0:	3e01      	subs	r6, #1
 80152f2:	fa1f fe84 	uxth.w	lr, r4
 80152f6:	b2b4      	uxth	r4, r6
 80152f8:	eba4 090e 	sub.w	r9, r4, lr
 80152fc:	fa1f f989 	uxth.w	r9, r9
 8015300:	2c09      	cmp	r4, #9
 8015302:	4626      	mov	r6, r4
 8015304:	bf88      	it	hi
 8015306:	f1a4 060a 	subhi.w	r6, r4, #10
 801530a:	f1bc 0f00 	cmp.w	ip, #0
 801530e:	bf08      	it	eq
 8015310:	f04f 0c02 	moveq.w	ip, #2
 8015314:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015318:	f10c 3cff 	add.w	ip, ip, #4294967295
 801531c:	fa1f fc8c 	uxth.w	ip, ip
 8015320:	3c01      	subs	r4, #1
 8015322:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8015326:	b2a4      	uxth	r4, r4
 8015328:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801532c:	454c      	cmp	r4, r9
 801532e:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8015332:	d1e5      	bne.n	8015300 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8015334:	eba5 050e 	sub.w	r5, r5, lr
 8015338:	eb0e 0408 	add.w	r4, lr, r8
 801533c:	8705      	strh	r5, [r0, #56]	@ 0x38
 801533e:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8015342:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8015346:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8015348:	1a64      	subs	r4, r4, r1
 801534a:	4439      	add	r1, r7
 801534c:	b289      	uxth	r1, r1
 801534e:	2909      	cmp	r1, #9
 8015350:	bf88      	it	hi
 8015352:	390a      	subhi	r1, #10
 8015354:	8704      	strh	r4, [r0, #56]	@ 0x38
 8015356:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8015358:	250a      	movs	r5, #10
 801535a:	b18a      	cbz	r2, 8015380 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801535c:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801535e:	3a01      	subs	r2, #1
 8015360:	b292      	uxth	r2, r2
 8015362:	3101      	adds	r1, #1
 8015364:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8015368:	8701      	strh	r1, [r0, #56]	@ 0x38
 801536a:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801536c:	b901      	cbnz	r1, 8015370 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801536e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8015370:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8015372:	3901      	subs	r1, #1
 8015374:	b289      	uxth	r1, r1
 8015376:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8015378:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801537c:	844c      	strh	r4, [r1, #34]	@ 0x22
 801537e:	e7ec      	b.n	801535a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8015380:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015384:	f7ff bf4b 	b.w	801521e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08015388 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8015388:	b570      	push	{r4, r5, r6, lr}
 801538a:	2500      	movs	r5, #0
 801538c:	4295      	cmp	r5, r2
 801538e:	d011      	beq.n	80153b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8015390:	8bc4      	ldrh	r4, [r0, #30]
 8015392:	f831 6b02 	ldrh.w	r6, [r1], #2
 8015396:	4414      	add	r4, r2
 8015398:	3c01      	subs	r4, #1
 801539a:	1b64      	subs	r4, r4, r5
 801539c:	b2a4      	uxth	r4, r4
 801539e:	2c01      	cmp	r4, #1
 80153a0:	bf88      	it	hi
 80153a2:	3c02      	subhi	r4, #2
 80153a4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80153a8:	8b64      	ldrh	r4, [r4, #26]
 80153aa:	42b4      	cmp	r4, r6
 80153ac:	d117      	bne.n	80153de <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80153ae:	3501      	adds	r5, #1
 80153b0:	b2ad      	uxth	r5, r5
 80153b2:	e7eb      	b.n	801538c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80153b4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80153b8:	2400      	movs	r4, #0
 80153ba:	4413      	add	r3, r2
 80153bc:	b2a2      	uxth	r2, r4
 80153be:	429a      	cmp	r2, r3
 80153c0:	da0f      	bge.n	80153e2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80153c2:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 80153c4:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80153c8:	4432      	add	r2, r6
 80153ca:	b292      	uxth	r2, r2
 80153cc:	2a09      	cmp	r2, #9
 80153ce:	bf88      	it	hi
 80153d0:	3a0a      	subhi	r2, #10
 80153d2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80153d6:	3401      	adds	r4, #1
 80153d8:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 80153da:	42aa      	cmp	r2, r5
 80153dc:	d0ee      	beq.n	80153bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80153de:	2000      	movs	r0, #0
 80153e0:	bd70      	pop	{r4, r5, r6, pc}
 80153e2:	2001      	movs	r0, #1
 80153e4:	e7fc      	b.n	80153e0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080153e6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80153e6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153ea:	4605      	mov	r5, r0
 80153ec:	4616      	mov	r6, r2
 80153ee:	1c8c      	adds	r4, r1, #2
 80153f0:	8809      	ldrh	r1, [r1, #0]
 80153f2:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80153f6:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80153fa:	42b3      	cmp	r3, r6
 80153fc:	d124      	bne.n	8015448 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80153fe:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8015402:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8015406:	f001 070f 	and.w	r7, r1, #15
 801540a:	f8cd 8000 	str.w	r8, [sp]
 801540e:	464b      	mov	r3, r9
 8015410:	4652      	mov	r2, sl
 8015412:	4621      	mov	r1, r4
 8015414:	4628      	mov	r0, r5
 8015416:	f7ff ffb7 	bl	8015388 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801541a:	4683      	mov	fp, r0
 801541c:	b168      	cbz	r0, 801543a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801541e:	eb0a 0109 	add.w	r1, sl, r9
 8015422:	4441      	add	r1, r8
 8015424:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8015428:	463a      	mov	r2, r7
 801542a:	4649      	mov	r1, r9
 801542c:	4628      	mov	r0, r5
 801542e:	f7ff ff53 	bl	80152d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8015432:	4658      	mov	r0, fp
 8015434:	b003      	add	sp, #12
 8015436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801543a:	eb07 010a 	add.w	r1, r7, sl
 801543e:	4449      	add	r1, r9
 8015440:	4441      	add	r1, r8
 8015442:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8015446:	e7d2      	b.n	80153ee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8015448:	f04f 0b00 	mov.w	fp, #0
 801544c:	e7f1      	b.n	8015432 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801544e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801544e:	b570      	push	{r4, r5, r6, lr}
 8015450:	8810      	ldrh	r0, [r2, #0]
 8015452:	4298      	cmp	r0, r3
 8015454:	d817      	bhi.n	8015486 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8015456:	1e48      	subs	r0, r1, #1
 8015458:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801545c:	4298      	cmp	r0, r3
 801545e:	d312      	bcc.n	8015486 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8015460:	2400      	movs	r4, #0
 8015462:	428c      	cmp	r4, r1
 8015464:	d20f      	bcs.n	8015486 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8015466:	1860      	adds	r0, r4, r1
 8015468:	1040      	asrs	r0, r0, #1
 801546a:	0085      	lsls	r5, r0, #2
 801546c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8015470:	42b3      	cmp	r3, r6
 8015472:	d902      	bls.n	801547a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8015474:	3001      	adds	r0, #1
 8015476:	b284      	uxth	r4, r0
 8015478:	e7f3      	b.n	8015462 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801547a:	d201      	bcs.n	8015480 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801547c:	b281      	uxth	r1, r0
 801547e:	e7f0      	b.n	8015462 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8015480:	442a      	add	r2, r5
 8015482:	8850      	ldrh	r0, [r2, #2]
 8015484:	bd70      	pop	{r4, r5, r6, pc}
 8015486:	2000      	movs	r0, #0
 8015488:	e7fc      	b.n	8015484 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801548a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801548a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801548e:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8015490:	886f      	ldrh	r7, [r5, #2]
 8015492:	4604      	mov	r4, r0
 8015494:	087f      	lsrs	r7, r7, #1
 8015496:	260b      	movs	r6, #11
 8015498:	3e01      	subs	r6, #1
 801549a:	d013      	beq.n	80154c4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801549c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801549e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80154a2:	462a      	mov	r2, r5
 80154a4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80154a8:	4639      	mov	r1, r7
 80154aa:	4643      	mov	r3, r8
 80154ac:	4620      	mov	r0, r4
 80154ae:	f7ff ffce 	bl	801544e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80154b2:	b138      	cbz	r0, 80154c4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80154b4:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80154b8:	4642      	mov	r2, r8
 80154ba:	4620      	mov	r0, r4
 80154bc:	f7ff ff93 	bl	80153e6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80154c0:	2800      	cmp	r0, #0
 80154c2:	d1e9      	bne.n	8015498 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80154c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080154c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80154c8:	b570      	push	{r4, r5, r6, lr}
 80154ca:	694a      	ldr	r2, [r1, #20]
 80154cc:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80154ce:	684b      	ldr	r3, [r1, #4]
 80154d0:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80154d2:	1b54      	subs	r4, r2, r5
 80154d4:	f000 8106 	beq.w	80156e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80154d8:	1b9b      	subs	r3, r3, r6
 80154da:	d003      	beq.n	80154e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80154dc:	4363      	muls	r3, r4
 80154de:	2210      	movs	r2, #16
 80154e0:	fb93 f3f2 	sdiv	r3, r3, r2
 80154e4:	680c      	ldr	r4, [r1, #0]
 80154e6:	698a      	ldr	r2, [r1, #24]
 80154e8:	1b65      	subs	r5, r4, r5
 80154ea:	f000 80fd 	beq.w	80156e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80154ee:	1b92      	subs	r2, r2, r6
 80154f0:	d003      	beq.n	80154fa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80154f2:	436a      	muls	r2, r5
 80154f4:	2410      	movs	r4, #16
 80154f6:	fb92 f2f4 	sdiv	r2, r2, r4
 80154fa:	1a9b      	subs	r3, r3, r2
 80154fc:	ee07 3a90 	vmov	s15, r3
 8015500:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8015724 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8015504:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015508:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801550c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8015510:	460a      	mov	r2, r1
 8015512:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8015516:	4603      	mov	r3, r0
 8015518:	f100 040c 	add.w	r4, r0, #12
 801551c:	eeb1 6a43 	vneg.f32	s12, s6
 8015520:	edd2 7a02 	vldr	s15, [r2, #8]
 8015524:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8015528:	3214      	adds	r2, #20
 801552a:	ece3 6a01 	vstmia	r3!, {s13}
 801552e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8015532:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8015536:	429c      	cmp	r4, r3
 8015538:	edc3 7a02 	vstr	s15, [r3, #8]
 801553c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8015540:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8015544:	edc3 7a05 	vstr	s15, [r3, #20]
 8015548:	d1ea      	bne.n	8015520 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801554a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801554c:	698b      	ldr	r3, [r1, #24]
 801554e:	edd0 4a02 	vldr	s9, [r0, #8]
 8015552:	edd0 3a00 	vldr	s7, [r0]
 8015556:	edd0 6a01 	vldr	s13, [r0, #4]
 801555a:	ed90 5a05 	vldr	s10, [r0, #20]
 801555e:	ed90 2a03 	vldr	s4, [r0, #12]
 8015562:	edd0 5a04 	vldr	s11, [r0, #16]
 8015566:	ed90 1a07 	vldr	s2, [r0, #28]
 801556a:	edd0 2a06 	vldr	s5, [r0, #24]
 801556e:	1a9b      	subs	r3, r3, r2
 8015570:	ee07 3a90 	vmov	s15, r3
 8015574:	684b      	ldr	r3, [r1, #4]
 8015576:	1a9b      	subs	r3, r3, r2
 8015578:	ee07 3a10 	vmov	s14, r3
 801557c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015580:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8015584:	ee67 7a84 	vmul.f32	s15, s15, s8
 8015588:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801558c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015590:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8015594:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015598:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801559c:	eee6 7a87 	vfma.f32	s15, s13, s14
 80155a0:	ee32 5a45 	vsub.f32	s10, s4, s10
 80155a4:	ee67 7a83 	vmul.f32	s15, s15, s6
 80155a8:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 80155ac:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80155ae:	694a      	ldr	r2, [r1, #20]
 80155b0:	1b13      	subs	r3, r2, r4
 80155b2:	ee07 3a10 	vmov	s14, r3
 80155b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80155ba:	680b      	ldr	r3, [r1, #0]
 80155bc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80155c0:	1b1b      	subs	r3, r3, r4
 80155c2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80155c6:	ee07 3a10 	vmov	s14, r3
 80155ca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80155ce:	ee27 7a04 	vmul.f32	s14, s14, s8
 80155d2:	eee6 4a87 	vfma.f32	s9, s13, s14
 80155d6:	ee64 4a86 	vmul.f32	s9, s9, s12
 80155da:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 80155de:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80155e0:	698b      	ldr	r3, [r1, #24]
 80155e2:	1a9b      	subs	r3, r3, r2
 80155e4:	ee06 3a90 	vmov	s13, r3
 80155e8:	684b      	ldr	r3, [r1, #4]
 80155ea:	1a9b      	subs	r3, r3, r2
 80155ec:	ee07 3a10 	vmov	s14, r3
 80155f0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80155f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80155f8:	ee66 6a84 	vmul.f32	s13, s13, s8
 80155fc:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015600:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8015604:	eee5 6a87 	vfma.f32	s13, s11, s14
 8015608:	ee66 6a83 	vmul.f32	s13, s13, s6
 801560c:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8015610:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8015612:	694a      	ldr	r2, [r1, #20]
 8015614:	1b13      	subs	r3, r2, r4
 8015616:	ee07 3a10 	vmov	s14, r3
 801561a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801561e:	680b      	ldr	r3, [r1, #0]
 8015620:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015624:	1b1b      	subs	r3, r3, r4
 8015626:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801562a:	ee07 3a10 	vmov	s14, r3
 801562e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015632:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015636:	eea5 5a87 	vfma.f32	s10, s11, s14
 801563a:	edd0 5a08 	vldr	s11, [r0, #32]
 801563e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8015642:	ee31 1a65 	vsub.f32	s2, s2, s11
 8015646:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801564a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801564c:	698b      	ldr	r3, [r1, #24]
 801564e:	1a9b      	subs	r3, r3, r2
 8015650:	ee07 3a10 	vmov	s14, r3
 8015654:	684b      	ldr	r3, [r1, #4]
 8015656:	1a9b      	subs	r3, r3, r2
 8015658:	ee01 3a90 	vmov	s3, r3
 801565c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015660:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8015664:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015668:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801566c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8015670:	ee61 1a84 	vmul.f32	s3, s3, s8
 8015674:	eea1 7a21 	vfma.f32	s14, s2, s3
 8015678:	ee27 7a03 	vmul.f32	s14, s14, s6
 801567c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8015680:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8015682:	694a      	ldr	r2, [r1, #20]
 8015684:	1b13      	subs	r3, r2, r4
 8015686:	ee03 3a10 	vmov	s6, r3
 801568a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801568e:	680b      	ldr	r3, [r1, #0]
 8015690:	ee23 3a04 	vmul.f32	s6, s6, s8
 8015694:	1b1b      	subs	r3, r3, r4
 8015696:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801569a:	ee03 3a10 	vmov	s6, r3
 801569e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80156a2:	ee23 4a04 	vmul.f32	s8, s6, s8
 80156a6:	eee1 5a04 	vfma.f32	s11, s2, s8
 80156aa:	ee25 6a86 	vmul.f32	s12, s11, s12
 80156ae:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80156b2:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 80156b6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80156ba:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80156be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80156c2:	dd13      	ble.n	80156ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80156c4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80156c8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80156cc:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80156ce:	eee3 7a87 	vfma.f32	s15, s7, s14
 80156d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80156d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80156da:	dd15      	ble.n	8015708 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80156dc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80156e0:	6403      	str	r3, [r0, #64]	@ 0x40
 80156e2:	bd70      	pop	{r4, r5, r6, pc}
 80156e4:	4623      	mov	r3, r4
 80156e6:	e6fd      	b.n	80154e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80156e8:	462a      	mov	r2, r5
 80156ea:	e706      	b.n	80154fa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80156ec:	d502      	bpl.n	80156f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80156ee:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80156f2:	e7e9      	b.n	80156c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80156f4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80156f8:	eea3 2a85 	vfma.f32	s4, s7, s10
 80156fc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8015700:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015704:	dade      	bge.n	80156c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8015706:	e7f2      	b.n	80156ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8015708:	d502      	bpl.n	8015710 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801570a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801570e:	e7e7      	b.n	80156e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8015710:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8015714:	eee3 4a86 	vfma.f32	s9, s7, s12
 8015718:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801571c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015720:	dadc      	bge.n	80156dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8015722:	e7f2      	b.n	801570a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8015724:	3d800000 	.word	0x3d800000

08015728 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8015728:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801572c:	2714      	movs	r7, #20
 801572e:	435f      	muls	r7, r3
 8015730:	eb02 0c07 	add.w	ip, r2, r7
 8015734:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8015738:	f115 0e0f 	adds.w	lr, r5, #15
 801573c:	f100 80a2 	bmi.w	8015884 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8015740:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8015744:	9c08      	ldr	r4, [sp, #32]
 8015746:	f8c0 e014 	str.w	lr, [r0, #20]
 801574a:	2614      	movs	r6, #20
 801574c:	4366      	muls	r6, r4
 801574e:	eb02 0806 	add.w	r8, r2, r6
 8015752:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8015756:	f115 040f 	adds.w	r4, r5, #15
 801575a:	f100 809f 	bmi.w	801589c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801575e:	1124      	asrs	r4, r4, #4
 8015760:	eba4 040e 	sub.w	r4, r4, lr
 8015764:	6184      	str	r4, [r0, #24]
 8015766:	2c00      	cmp	r4, #0
 8015768:	f000 808a 	beq.w	8015880 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801576c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8015770:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8015774:	5995      	ldr	r5, [r2, r6]
 8015776:	eba4 0809 	sub.w	r8, r4, r9
 801577a:	59d4      	ldr	r4, [r2, r7]
 801577c:	eba5 0a04 	sub.w	sl, r5, r4
 8015780:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8015784:	fb0e fe05 	mul.w	lr, lr, r5
 8015788:	fb0a ee19 	mls	lr, sl, r9, lr
 801578c:	fb08 e404 	mla	r4, r8, r4, lr
 8015790:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8015794:	3c01      	subs	r4, #1
 8015796:	19a4      	adds	r4, r4, r6
 8015798:	f100 808c 	bmi.w	80158b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801579c:	fb94 fef6 	sdiv	lr, r4, r6
 80157a0:	f8c0 e000 	str.w	lr, [r0]
 80157a4:	fb06 441e 	mls	r4, r6, lr, r4
 80157a8:	6104      	str	r4, [r0, #16]
 80157aa:	2d00      	cmp	r5, #0
 80157ac:	f2c0 8095 	blt.w	80158da <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80157b0:	fb95 f4f6 	sdiv	r4, r5, r6
 80157b4:	6044      	str	r4, [r0, #4]
 80157b6:	fb06 5514 	mls	r5, r6, r4, r5
 80157ba:	6085      	str	r5, [r0, #8]
 80157bc:	60c6      	str	r6, [r0, #12]
 80157be:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80157c2:	6945      	ldr	r5, [r0, #20]
 80157c4:	59d2      	ldr	r2, [r2, r7]
 80157c6:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 80158fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80157ca:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80157ce:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80157d2:	ee07 4a10 	vmov	s14, r4
 80157d6:	6804      	ldr	r4, [r0, #0]
 80157d8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80157dc:	ee07 2a90 	vmov	s15, r2
 80157e0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80157e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80157e8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80157ec:	ee27 7a26 	vmul.f32	s14, s14, s13
 80157f0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80157f4:	edd3 6a00 	vldr	s13, [r3]
 80157f8:	eee6 6a07 	vfma.f32	s13, s12, s14
 80157fc:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8015800:	eee6 6a27 	vfma.f32	s13, s12, s15
 8015804:	edc0 6a07 	vstr	s13, [r0, #28]
 8015808:	edd0 6a01 	vldr	s13, [r0, #4]
 801580c:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8015810:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8015814:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8015818:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801581c:	ed80 6a08 	vstr	s12, [r0, #32]
 8015820:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8015822:	6242      	str	r2, [r0, #36]	@ 0x24
 8015824:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8015828:	ed93 6a03 	vldr	s12, [r3, #12]
 801582c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8015830:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8015834:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8015838:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 801583c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8015840:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8015844:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8015848:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 801584c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801584e:	6302      	str	r2, [r0, #48]	@ 0x30
 8015850:	ed93 6a06 	vldr	s12, [r3, #24]
 8015854:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8015858:	eea5 6a87 	vfma.f32	s12, s11, s14
 801585c:	eeb0 7a46 	vmov.f32	s14, s12
 8015860:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8015864:	eea6 7a27 	vfma.f32	s14, s12, s15
 8015868:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801586c:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8015870:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8015874:	eee6 7a87 	vfma.f32	s15, s13, s14
 8015878:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801587c:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801587e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8015880:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015884:	f1c5 0501 	rsb	r5, r5, #1
 8015888:	f015 050f 	ands.w	r5, r5, #15
 801588c:	bf18      	it	ne
 801588e:	2501      	movne	r5, #1
 8015890:	2410      	movs	r4, #16
 8015892:	fb9e fef4 	sdiv	lr, lr, r4
 8015896:	ebae 0e05 	sub.w	lr, lr, r5
 801589a:	e753      	b.n	8015744 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801589c:	f1c5 0501 	rsb	r5, r5, #1
 80158a0:	f015 050f 	ands.w	r5, r5, #15
 80158a4:	bf18      	it	ne
 80158a6:	2501      	movne	r5, #1
 80158a8:	f04f 0910 	mov.w	r9, #16
 80158ac:	fb94 f4f9 	sdiv	r4, r4, r9
 80158b0:	1b64      	subs	r4, r4, r5
 80158b2:	e755      	b.n	8015760 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80158b4:	4264      	negs	r4, r4
 80158b6:	fb94 fef6 	sdiv	lr, r4, r6
 80158ba:	f1ce 0800 	rsb	r8, lr, #0
 80158be:	fb06 441e 	mls	r4, r6, lr, r4
 80158c2:	f8c0 8000 	str.w	r8, [r0]
 80158c6:	6104      	str	r4, [r0, #16]
 80158c8:	2c00      	cmp	r4, #0
 80158ca:	f43f af6e 	beq.w	80157aa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80158ce:	ea6f 0e0e 	mvn.w	lr, lr
 80158d2:	f8c0 e000 	str.w	lr, [r0]
 80158d6:	1b34      	subs	r4, r6, r4
 80158d8:	e766      	b.n	80157a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80158da:	426d      	negs	r5, r5
 80158dc:	fb95 f4f6 	sdiv	r4, r5, r6
 80158e0:	f1c4 0e00 	rsb	lr, r4, #0
 80158e4:	fb06 5514 	mls	r5, r6, r4, r5
 80158e8:	f8c0 e004 	str.w	lr, [r0, #4]
 80158ec:	6085      	str	r5, [r0, #8]
 80158ee:	2d00      	cmp	r5, #0
 80158f0:	f43f af64 	beq.w	80157bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80158f4:	43e4      	mvns	r4, r4
 80158f6:	6044      	str	r4, [r0, #4]
 80158f8:	1b75      	subs	r5, r6, r5
 80158fa:	e75e      	b.n	80157ba <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80158fc:	3d800000 	.word	0x3d800000

08015900 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8015900:	4602      	mov	r2, r0
 8015902:	b148      	cbz	r0, 8015918 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8015904:	2300      	movs	r3, #0
 8015906:	b298      	uxth	r0, r3
 8015908:	3301      	adds	r3, #1
 801590a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801590e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8015912:	2900      	cmp	r1, #0
 8015914:	d1f7      	bne.n	8015906 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8015916:	4770      	bx	lr
 8015918:	4770      	bx	lr

0801591a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801591a:	b530      	push	{r4, r5, lr}
 801591c:	4604      	mov	r4, r0
 801591e:	b159      	cbz	r1, 8015938 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8015920:	b148      	cbz	r0, 8015936 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8015922:	2300      	movs	r3, #0
 8015924:	b298      	uxth	r0, r3
 8015926:	4282      	cmp	r2, r0
 8015928:	d905      	bls.n	8015936 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801592a:	5ccd      	ldrb	r5, [r1, r3]
 801592c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8015930:	3301      	adds	r3, #1
 8015932:	2d00      	cmp	r5, #0
 8015934:	d1f6      	bne.n	8015924 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8015936:	bd30      	pop	{r4, r5, pc}
 8015938:	4608      	mov	r0, r1
 801593a:	e7fc      	b.n	8015936 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801593c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801593c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801593e:	b08b      	sub	sp, #44	@ 0x2c
 8015940:	468c      	mov	ip, r1
 8015942:	2100      	movs	r1, #0
 8015944:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8015948:	4604      	mov	r4, r0
 801594a:	261f      	movs	r6, #31
 801594c:	af01      	add	r7, sp, #4
 801594e:	fb94 fef3 	sdiv	lr, r4, r3
 8015952:	fb03 441e 	mls	r4, r3, lr, r4
 8015956:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801595a:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801595e:	b2ec      	uxtb	r4, r5
 8015960:	2d09      	cmp	r5, #9
 8015962:	bfd4      	ite	le
 8015964:	3430      	addle	r4, #48	@ 0x30
 8015966:	3457      	addgt	r4, #87	@ 0x57
 8015968:	b2e4      	uxtb	r4, r4
 801596a:	55bc      	strb	r4, [r7, r6]
 801596c:	4674      	mov	r4, lr
 801596e:	1e71      	subs	r1, r6, #1
 8015970:	b974      	cbnz	r4, 8015990 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8015972:	2800      	cmp	r0, #0
 8015974:	da05      	bge.n	8015982 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8015976:	ab0a      	add	r3, sp, #40	@ 0x28
 8015978:	4419      	add	r1, r3
 801597a:	232d      	movs	r3, #45	@ 0x2d
 801597c:	f801 3c24 	strb.w	r3, [r1, #-36]
 8015980:	1eb1      	subs	r1, r6, #2
 8015982:	3101      	adds	r1, #1
 8015984:	4439      	add	r1, r7
 8015986:	4660      	mov	r0, ip
 8015988:	f7ff ffc7 	bl	801591a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801598c:	b00b      	add	sp, #44	@ 0x2c
 801598e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015990:	460e      	mov	r6, r1
 8015992:	e7dc      	b.n	801594e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08015994 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8015994:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015996:	b08b      	sub	sp, #44	@ 0x2c
 8015998:	468c      	mov	ip, r1
 801599a:	2100      	movs	r1, #0
 801599c:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 80159a0:	ae01      	add	r6, sp, #4
 80159a2:	211f      	movs	r1, #31
 80159a4:	fbb0 f7f3 	udiv	r7, r0, r3
 80159a8:	fb03 0517 	mls	r5, r3, r7, r0
 80159ac:	b2ec      	uxtb	r4, r5
 80159ae:	2d09      	cmp	r5, #9
 80159b0:	bfd4      	ite	le
 80159b2:	3430      	addle	r4, #48	@ 0x30
 80159b4:	3457      	addgt	r4, #87	@ 0x57
 80159b6:	b2e4      	uxtb	r4, r4
 80159b8:	558c      	strb	r4, [r1, r6]
 80159ba:	4638      	mov	r0, r7
 80159bc:	1e4c      	subs	r4, r1, #1
 80159be:	b92f      	cbnz	r7, 80159cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80159c0:	4431      	add	r1, r6
 80159c2:	4660      	mov	r0, ip
 80159c4:	f7ff ffa9 	bl	801591a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80159c8:	b00b      	add	sp, #44	@ 0x2c
 80159ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80159cc:	4621      	mov	r1, r4
 80159ce:	e7e9      	b.n	80159a4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080159d0 <_ZN8touchgfx7Unicode4itoaElPtti>:
 80159d0:	b410      	push	{r4}
 80159d2:	b131      	cbz	r1, 80159e2 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80159d4:	1e9c      	subs	r4, r3, #2
 80159d6:	2c22      	cmp	r4, #34	@ 0x22
 80159d8:	d803      	bhi.n	80159e2 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80159da:	f85d 4b04 	ldr.w	r4, [sp], #4
 80159de:	f7ff bfad 	b.w	801593c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80159e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80159e6:	4770      	bx	lr

080159e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80159e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80159ec:	4691      	mov	r9, r2
 80159ee:	b085      	sub	sp, #20
 80159f0:	6802      	ldr	r2, [r0, #0]
 80159f2:	9201      	str	r2, [sp, #4]
 80159f4:	4688      	mov	r8, r1
 80159f6:	4683      	mov	fp, r0
 80159f8:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 80159fc:	9103      	str	r1, [sp, #12]
 80159fe:	4610      	mov	r0, r2
 8015a00:	461c      	mov	r4, r3
 8015a02:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8015a06:	9302      	str	r3, [sp, #8]
 8015a08:	f7ff ff7a 	bl	8015900 <_ZN8touchgfx7Unicode6strlenEPKt>
 8015a0c:	f1b8 0f00 	cmp.w	r8, #0
 8015a10:	bf0c      	ite	eq
 8015a12:	4684      	moveq	ip, r0
 8015a14:	f100 0c01 	addne.w	ip, r0, #1
 8015a18:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 8015a1c:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8015a20:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8015a22:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8015a24:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8015a28:	9903      	ldr	r1, [sp, #12]
 8015a2a:	fa1f fc8c 	uxth.w	ip, ip
 8015a2e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8015a32:	d041      	beq.n	8015ab8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8015a34:	d834      	bhi.n	8015aa0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8015a36:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8015a3a:	d059      	beq.n	8015af0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8015a3c:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8015a40:	d03a      	beq.n	8015ab8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8015a42:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8015a46:	d034      	beq.n	8015ab2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8015a48:	2400      	movs	r4, #0
 8015a4a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8015a4e:	3a01      	subs	r2, #1
 8015a50:	b169      	cbz	r1, 8015a6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8015a52:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8015a54:	458c      	cmp	ip, r1
 8015a56:	da09      	bge.n	8015a6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8015a58:	eba1 010c 	sub.w	r1, r1, ip
 8015a5c:	b289      	uxth	r1, r1
 8015a5e:	b933      	cbnz	r3, 8015a6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8015a60:	2e00      	cmp	r6, #0
 8015a62:	d051      	beq.n	8015b08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8015a64:	2800      	cmp	r0, #0
 8015a66:	d04f      	beq.n	8015b08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8015a68:	440c      	add	r4, r1
 8015a6a:	b2a4      	uxth	r4, r4
 8015a6c:	2100      	movs	r1, #0
 8015a6e:	682b      	ldr	r3, [r5, #0]
 8015a70:	4293      	cmp	r3, r2
 8015a72:	da07      	bge.n	8015a84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8015a74:	f1b8 0f00 	cmp.w	r8, #0
 8015a78:	d004      	beq.n	8015a84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8015a7a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8015a7e:	682b      	ldr	r3, [r5, #0]
 8015a80:	3301      	adds	r3, #1
 8015a82:	602b      	str	r3, [r5, #0]
 8015a84:	2730      	movs	r7, #48	@ 0x30
 8015a86:	2c00      	cmp	r4, #0
 8015a88:	d04e      	beq.n	8015b28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8015a8a:	682e      	ldr	r6, [r5, #0]
 8015a8c:	3c01      	subs	r4, #1
 8015a8e:	42b2      	cmp	r2, r6
 8015a90:	b2a4      	uxth	r4, r4
 8015a92:	dd49      	ble.n	8015b28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8015a94:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8015a98:	682b      	ldr	r3, [r5, #0]
 8015a9a:	3301      	adds	r3, #1
 8015a9c:	602b      	str	r3, [r5, #0]
 8015a9e:	e7f2      	b.n	8015a86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8015aa0:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8015aa4:	d01d      	beq.n	8015ae2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8015aa6:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8015aaa:	d002      	beq.n	8015ab2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8015aac:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8015ab0:	e7c9      	b.n	8015a46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8015ab2:	4684      	mov	ip, r0
 8015ab4:	f04f 0800 	mov.w	r8, #0
 8015ab8:	2c00      	cmp	r4, #0
 8015aba:	d0c6      	beq.n	8015a4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8015abc:	b947      	cbnz	r7, 8015ad0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8015abe:	2801      	cmp	r0, #1
 8015ac0:	d106      	bne.n	8015ad0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8015ac2:	8814      	ldrh	r4, [r2, #0]
 8015ac4:	2c30      	cmp	r4, #48	@ 0x30
 8015ac6:	bf02      	ittt	eq
 8015ac8:	3202      	addeq	r2, #2
 8015aca:	f8cb 2000 	streq.w	r2, [fp]
 8015ace:	4638      	moveq	r0, r7
 8015ad0:	45bc      	cmp	ip, r7
 8015ad2:	da14      	bge.n	8015afe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8015ad4:	b2bf      	uxth	r7, r7
 8015ad6:	eba7 040c 	sub.w	r4, r7, ip
 8015ada:	b2a4      	uxth	r4, r4
 8015adc:	46bc      	mov	ip, r7
 8015ade:	2600      	movs	r6, #0
 8015ae0:	e7b3      	b.n	8015a4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8015ae2:	4684      	mov	ip, r0
 8015ae4:	b16c      	cbz	r4, 8015b02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8015ae6:	42b8      	cmp	r0, r7
 8015ae8:	dd00      	ble.n	8015aec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8015aea:	b2b8      	uxth	r0, r7
 8015aec:	2400      	movs	r4, #0
 8015aee:	e003      	b.n	8015af8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8015af0:	f04f 0c01 	mov.w	ip, #1
 8015af4:	2400      	movs	r4, #0
 8015af6:	4660      	mov	r0, ip
 8015af8:	4626      	mov	r6, r4
 8015afa:	46a0      	mov	r8, r4
 8015afc:	e7a5      	b.n	8015a4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8015afe:	2400      	movs	r4, #0
 8015b00:	e7ed      	b.n	8015ade <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8015b02:	4626      	mov	r6, r4
 8015b04:	46a0      	mov	r8, r4
 8015b06:	e7a0      	b.n	8015a4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8015b08:	2900      	cmp	r1, #0
 8015b0a:	d0b0      	beq.n	8015a6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8015b0c:	2720      	movs	r7, #32
 8015b0e:	682e      	ldr	r6, [r5, #0]
 8015b10:	2900      	cmp	r1, #0
 8015b12:	d0ac      	beq.n	8015a6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8015b14:	3901      	subs	r1, #1
 8015b16:	4296      	cmp	r6, r2
 8015b18:	b289      	uxth	r1, r1
 8015b1a:	daa7      	bge.n	8015a6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8015b1c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8015b20:	682b      	ldr	r3, [r5, #0]
 8015b22:	3301      	adds	r3, #1
 8015b24:	602b      	str	r3, [r5, #0]
 8015b26:	e7f2      	b.n	8015b0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8015b28:	b188      	cbz	r0, 8015b4e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8015b2a:	682b      	ldr	r3, [r5, #0]
 8015b2c:	3801      	subs	r0, #1
 8015b2e:	429a      	cmp	r2, r3
 8015b30:	b280      	uxth	r0, r0
 8015b32:	dd0c      	ble.n	8015b4e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8015b34:	f8db 3000 	ldr.w	r3, [fp]
 8015b38:	1c9c      	adds	r4, r3, #2
 8015b3a:	f8cb 4000 	str.w	r4, [fp]
 8015b3e:	881c      	ldrh	r4, [r3, #0]
 8015b40:	682b      	ldr	r3, [r5, #0]
 8015b42:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8015b46:	682b      	ldr	r3, [r5, #0]
 8015b48:	3301      	adds	r3, #1
 8015b4a:	602b      	str	r3, [r5, #0]
 8015b4c:	e7ec      	b.n	8015b28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8015b4e:	2620      	movs	r6, #32
 8015b50:	b151      	cbz	r1, 8015b68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8015b52:	6828      	ldr	r0, [r5, #0]
 8015b54:	3901      	subs	r1, #1
 8015b56:	4282      	cmp	r2, r0
 8015b58:	b289      	uxth	r1, r1
 8015b5a:	dd05      	ble.n	8015b68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8015b5c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8015b60:	682b      	ldr	r3, [r5, #0]
 8015b62:	3301      	adds	r3, #1
 8015b64:	602b      	str	r3, [r5, #0]
 8015b66:	e7f3      	b.n	8015b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8015b68:	b005      	add	sp, #20
 8015b6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015b6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8015b6e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015b72:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8015b76:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8015b7a:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8015b7e:	2400      	movs	r4, #0
 8015b80:	8014      	strh	r4, [r2, #0]
 8015b82:	701c      	strb	r4, [r3, #0]
 8015b84:	f888 4000 	strb.w	r4, [r8]
 8015b88:	f88c 4000 	strb.w	r4, [ip]
 8015b8c:	f88e 4000 	strb.w	r4, [lr]
 8015b90:	703c      	strb	r4, [r7, #0]
 8015b92:	6804      	ldr	r4, [r0, #0]
 8015b94:	b1a4      	cbz	r4, 8015bc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8015b96:	8824      	ldrh	r4, [r4, #0]
 8015b98:	f04f 0901 	mov.w	r9, #1
 8015b9c:	b314      	cbz	r4, 8015be4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8015b9e:	2c2b      	cmp	r4, #43	@ 0x2b
 8015ba0:	d001      	beq.n	8015ba6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8015ba2:	2c20      	cmp	r4, #32
 8015ba4:	d110      	bne.n	8015bc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8015ba6:	8014      	strh	r4, [r2, #0]
 8015ba8:	6804      	ldr	r4, [r0, #0]
 8015baa:	b10c      	cbz	r4, 8015bb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8015bac:	3402      	adds	r4, #2
 8015bae:	6004      	str	r4, [r0, #0]
 8015bb0:	680c      	ldr	r4, [r1, #0]
 8015bb2:	b10c      	cbz	r4, 8015bb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8015bb4:	3401      	adds	r4, #1
 8015bb6:	600c      	str	r4, [r1, #0]
 8015bb8:	6804      	ldr	r4, [r0, #0]
 8015bba:	b17c      	cbz	r4, 8015bdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8015bbc:	8824      	ldrh	r4, [r4, #0]
 8015bbe:	e7ed      	b.n	8015b9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8015bc0:	680c      	ldr	r4, [r1, #0]
 8015bc2:	b17c      	cbz	r4, 8015be4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8015bc4:	7824      	ldrb	r4, [r4, #0]
 8015bc6:	e7e7      	b.n	8015b98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8015bc8:	2c2d      	cmp	r4, #45	@ 0x2d
 8015bca:	d102      	bne.n	8015bd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8015bcc:	f883 9000 	strb.w	r9, [r3]
 8015bd0:	e7ea      	b.n	8015ba8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8015bd2:	2c23      	cmp	r4, #35	@ 0x23
 8015bd4:	d107      	bne.n	8015be6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8015bd6:	f888 9000 	strb.w	r9, [r8]
 8015bda:	e7e5      	b.n	8015ba8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8015bdc:	680c      	ldr	r4, [r1, #0]
 8015bde:	b10c      	cbz	r4, 8015be4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8015be0:	7824      	ldrb	r4, [r4, #0]
 8015be2:	e7db      	b.n	8015b9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8015be4:	2400      	movs	r4, #0
 8015be6:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8015bea:	2b09      	cmp	r3, #9
 8015bec:	d901      	bls.n	8015bf2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8015bee:	2c2a      	cmp	r4, #42	@ 0x2a
 8015bf0:	d122      	bne.n	8015c38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8015bf2:	2301      	movs	r3, #1
 8015bf4:	2c30      	cmp	r4, #48	@ 0x30
 8015bf6:	f88e 3000 	strb.w	r3, [lr]
 8015bfa:	d10d      	bne.n	8015c18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8015bfc:	f88c 3000 	strb.w	r3, [ip]
 8015c00:	6803      	ldr	r3, [r0, #0]
 8015c02:	b10b      	cbz	r3, 8015c08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8015c04:	3302      	adds	r3, #2
 8015c06:	6003      	str	r3, [r0, #0]
 8015c08:	680b      	ldr	r3, [r1, #0]
 8015c0a:	b10b      	cbz	r3, 8015c10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8015c0c:	3301      	adds	r3, #1
 8015c0e:	600b      	str	r3, [r1, #0]
 8015c10:	6803      	ldr	r3, [r0, #0]
 8015c12:	2b00      	cmp	r3, #0
 8015c14:	d02f      	beq.n	8015c76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8015c16:	881c      	ldrh	r4, [r3, #0]
 8015c18:	2c2a      	cmp	r4, #42	@ 0x2a
 8015c1a:	d135      	bne.n	8015c88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8015c1c:	f04f 33ff 	mov.w	r3, #4294967295
 8015c20:	6033      	str	r3, [r6, #0]
 8015c22:	6803      	ldr	r3, [r0, #0]
 8015c24:	b10b      	cbz	r3, 8015c2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8015c26:	3302      	adds	r3, #2
 8015c28:	6003      	str	r3, [r0, #0]
 8015c2a:	680b      	ldr	r3, [r1, #0]
 8015c2c:	b10b      	cbz	r3, 8015c32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8015c2e:	3301      	adds	r3, #1
 8015c30:	600b      	str	r3, [r1, #0]
 8015c32:	6803      	ldr	r3, [r0, #0]
 8015c34:	b31b      	cbz	r3, 8015c7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8015c36:	881c      	ldrh	r4, [r3, #0]
 8015c38:	2c2e      	cmp	r4, #46	@ 0x2e
 8015c3a:	d11a      	bne.n	8015c72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8015c3c:	2301      	movs	r3, #1
 8015c3e:	703b      	strb	r3, [r7, #0]
 8015c40:	6803      	ldr	r3, [r0, #0]
 8015c42:	b10b      	cbz	r3, 8015c48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8015c44:	3302      	adds	r3, #2
 8015c46:	6003      	str	r3, [r0, #0]
 8015c48:	680b      	ldr	r3, [r1, #0]
 8015c4a:	b10b      	cbz	r3, 8015c50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8015c4c:	3301      	adds	r3, #1
 8015c4e:	600b      	str	r3, [r1, #0]
 8015c50:	6803      	ldr	r3, [r0, #0]
 8015c52:	2b00      	cmp	r3, #0
 8015c54:	d036      	beq.n	8015cc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8015c56:	881b      	ldrh	r3, [r3, #0]
 8015c58:	2b2a      	cmp	r3, #42	@ 0x2a
 8015c5a:	d137      	bne.n	8015ccc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8015c5c:	f04f 33ff 	mov.w	r3, #4294967295
 8015c60:	602b      	str	r3, [r5, #0]
 8015c62:	6803      	ldr	r3, [r0, #0]
 8015c64:	b10b      	cbz	r3, 8015c6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8015c66:	3302      	adds	r3, #2
 8015c68:	6003      	str	r3, [r0, #0]
 8015c6a:	680b      	ldr	r3, [r1, #0]
 8015c6c:	b10b      	cbz	r3, 8015c72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8015c6e:	3301      	adds	r3, #1
 8015c70:	600b      	str	r3, [r1, #0]
 8015c72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015c76:	680c      	ldr	r4, [r1, #0]
 8015c78:	b134      	cbz	r4, 8015c88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8015c7a:	7824      	ldrb	r4, [r4, #0]
 8015c7c:	e7cc      	b.n	8015c18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8015c7e:	680b      	ldr	r3, [r1, #0]
 8015c80:	2b00      	cmp	r3, #0
 8015c82:	d0f6      	beq.n	8015c72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8015c84:	781c      	ldrb	r4, [r3, #0]
 8015c86:	e7d7      	b.n	8015c38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8015c88:	2300      	movs	r3, #0
 8015c8a:	6033      	str	r3, [r6, #0]
 8015c8c:	220a      	movs	r2, #10
 8015c8e:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8015c92:	fa1f f38c 	uxth.w	r3, ip
 8015c96:	2b09      	cmp	r3, #9
 8015c98:	d8ce      	bhi.n	8015c38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8015c9a:	6833      	ldr	r3, [r6, #0]
 8015c9c:	fb02 c303 	mla	r3, r2, r3, ip
 8015ca0:	6033      	str	r3, [r6, #0]
 8015ca2:	6803      	ldr	r3, [r0, #0]
 8015ca4:	b10b      	cbz	r3, 8015caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8015ca6:	3302      	adds	r3, #2
 8015ca8:	6003      	str	r3, [r0, #0]
 8015caa:	680b      	ldr	r3, [r1, #0]
 8015cac:	b10b      	cbz	r3, 8015cb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8015cae:	3301      	adds	r3, #1
 8015cb0:	600b      	str	r3, [r1, #0]
 8015cb2:	6803      	ldr	r3, [r0, #0]
 8015cb4:	b10b      	cbz	r3, 8015cba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8015cb6:	881c      	ldrh	r4, [r3, #0]
 8015cb8:	e7e9      	b.n	8015c8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8015cba:	680c      	ldr	r4, [r1, #0]
 8015cbc:	2c00      	cmp	r4, #0
 8015cbe:	d0e6      	beq.n	8015c8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8015cc0:	7824      	ldrb	r4, [r4, #0]
 8015cc2:	e7e4      	b.n	8015c8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8015cc4:	680b      	ldr	r3, [r1, #0]
 8015cc6:	b10b      	cbz	r3, 8015ccc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8015cc8:	781b      	ldrb	r3, [r3, #0]
 8015cca:	e7c5      	b.n	8015c58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8015ccc:	2200      	movs	r2, #0
 8015cce:	602a      	str	r2, [r5, #0]
 8015cd0:	240a      	movs	r4, #10
 8015cd2:	3b30      	subs	r3, #48	@ 0x30
 8015cd4:	b29e      	uxth	r6, r3
 8015cd6:	2e09      	cmp	r6, #9
 8015cd8:	682a      	ldr	r2, [r5, #0]
 8015cda:	d813      	bhi.n	8015d04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8015cdc:	fb04 3302 	mla	r3, r4, r2, r3
 8015ce0:	602b      	str	r3, [r5, #0]
 8015ce2:	6803      	ldr	r3, [r0, #0]
 8015ce4:	b10b      	cbz	r3, 8015cea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8015ce6:	3302      	adds	r3, #2
 8015ce8:	6003      	str	r3, [r0, #0]
 8015cea:	680b      	ldr	r3, [r1, #0]
 8015cec:	b10b      	cbz	r3, 8015cf2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8015cee:	3301      	adds	r3, #1
 8015cf0:	600b      	str	r3, [r1, #0]
 8015cf2:	6803      	ldr	r3, [r0, #0]
 8015cf4:	b10b      	cbz	r3, 8015cfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8015cf6:	881b      	ldrh	r3, [r3, #0]
 8015cf8:	e7eb      	b.n	8015cd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8015cfa:	680b      	ldr	r3, [r1, #0]
 8015cfc:	2b00      	cmp	r3, #0
 8015cfe:	d0e8      	beq.n	8015cd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8015d00:	781b      	ldrb	r3, [r3, #0]
 8015d02:	e7e6      	b.n	8015cd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8015d04:	2a06      	cmp	r2, #6
 8015d06:	bfa8      	it	ge
 8015d08:	2206      	movge	r2, #6
 8015d0a:	602a      	str	r2, [r5, #0]
 8015d0c:	e7b1      	b.n	8015c72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08015d0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8015d0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d12:	b0a3      	sub	sp, #140	@ 0x8c
 8015d14:	2600      	movs	r6, #0
 8015d16:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8015d1a:	4607      	mov	r7, r0
 8015d1c:	4688      	mov	r8, r1
 8015d1e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8015d22:	4631      	mov	r1, r6
 8015d24:	2242      	movs	r2, #66	@ 0x42
 8015d26:	4648      	mov	r0, r9
 8015d28:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8015d2a:	960d      	str	r6, [sp, #52]	@ 0x34
 8015d2c:	f00f fa2e 	bl	802518c <memset>
 8015d30:	b15f      	cbz	r7, 8015d4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8015d32:	f108 3aff 	add.w	sl, r8, #4294967295
 8015d36:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015d38:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015d3a:	b152      	cbz	r2, 8015d52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8015d3c:	8812      	ldrh	r2, [r2, #0]
 8015d3e:	b10a      	cbz	r2, 8015d44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8015d40:	459a      	cmp	sl, r3
 8015d42:	dc2e      	bgt.n	8015da2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8015d44:	2200      	movs	r2, #0
 8015d46:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8015d4a:	4638      	mov	r0, r7
 8015d4c:	b023      	add	sp, #140	@ 0x8c
 8015d4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d52:	9a08      	ldr	r2, [sp, #32]
 8015d54:	2a00      	cmp	r2, #0
 8015d56:	d0f5      	beq.n	8015d44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8015d58:	7812      	ldrb	r2, [r2, #0]
 8015d5a:	e7f0      	b.n	8015d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8015d5c:	2d00      	cmp	r5, #0
 8015d5e:	d0ea      	beq.n	8015d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8015d60:	782a      	ldrb	r2, [r5, #0]
 8015d62:	b142      	cbz	r2, 8015d76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8015d64:	2a25      	cmp	r2, #37	@ 0x25
 8015d66:	d001      	beq.n	8015d6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8015d68:	459a      	cmp	sl, r3
 8015d6a:	dc08      	bgt.n	8015d7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8015d6c:	f1bb 0f00 	cmp.w	fp, #0
 8015d70:	d121      	bne.n	8015db6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8015d72:	2d00      	cmp	r5, #0
 8015d74:	d0df      	beq.n	8015d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8015d76:	782a      	ldrb	r2, [r5, #0]
 8015d78:	f04f 0b00 	mov.w	fp, #0
 8015d7c:	e01d      	b.n	8015dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8015d7e:	f1bb 0f00 	cmp.w	fp, #0
 8015d82:	d078      	beq.n	8015e76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8015d84:	f8bb 2000 	ldrh.w	r2, [fp]
 8015d88:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8015d8c:	f1bb 0f00 	cmp.w	fp, #0
 8015d90:	d002      	beq.n	8015d98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8015d92:	f10b 0202 	add.w	r2, fp, #2
 8015d96:	9209      	str	r2, [sp, #36]	@ 0x24
 8015d98:	b10d      	cbz	r5, 8015d9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8015d9a:	3501      	adds	r5, #1
 8015d9c:	9508      	str	r5, [sp, #32]
 8015d9e:	3301      	adds	r3, #1
 8015da0:	930d      	str	r3, [sp, #52]	@ 0x34
 8015da2:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8015da6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015da8:	f1bb 0f00 	cmp.w	fp, #0
 8015dac:	d0d6      	beq.n	8015d5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8015dae:	f8bb 2000 	ldrh.w	r2, [fp]
 8015db2:	2a00      	cmp	r2, #0
 8015db4:	d1d6      	bne.n	8015d64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8015db6:	f8bb 2000 	ldrh.w	r2, [fp]
 8015dba:	2a00      	cmp	r2, #0
 8015dbc:	d0bb      	beq.n	8015d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8015dbe:	459a      	cmp	sl, r3
 8015dc0:	ddb9      	ble.n	8015d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8015dc2:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8015dc6:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8015dca:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8015dce:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8015dd2:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8015dd6:	960e      	str	r6, [sp, #56]	@ 0x38
 8015dd8:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8015ddc:	960f      	str	r6, [sp, #60]	@ 0x3c
 8015dde:	f1bb 0f00 	cmp.w	fp, #0
 8015de2:	d002      	beq.n	8015dea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8015de4:	f10b 0302 	add.w	r3, fp, #2
 8015de8:	9309      	str	r3, [sp, #36]	@ 0x24
 8015dea:	b10d      	cbz	r5, 8015df0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8015dec:	1c6b      	adds	r3, r5, #1
 8015dee:	9308      	str	r3, [sp, #32]
 8015df0:	ab0f      	add	r3, sp, #60	@ 0x3c
 8015df2:	9305      	str	r3, [sp, #20]
 8015df4:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8015df8:	9304      	str	r3, [sp, #16]
 8015dfa:	ab0e      	add	r3, sp, #56	@ 0x38
 8015dfc:	9303      	str	r3, [sp, #12]
 8015dfe:	ab0c      	add	r3, sp, #48	@ 0x30
 8015e00:	9302      	str	r3, [sp, #8]
 8015e02:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8015e06:	9301      	str	r3, [sp, #4]
 8015e08:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8015e0c:	9300      	str	r3, [sp, #0]
 8015e0e:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8015e12:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8015e16:	a908      	add	r1, sp, #32
 8015e18:	a809      	add	r0, sp, #36	@ 0x24
 8015e1a:	f7ff fea8 	bl	8015b6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8015e1e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015e20:	2b00      	cmp	r3, #0
 8015e22:	bfbe      	ittt	lt
 8015e24:	6823      	ldrlt	r3, [r4, #0]
 8015e26:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8015e2a:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8015e2c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8015e2e:	bfb8      	it	lt
 8015e30:	3404      	addlt	r4, #4
 8015e32:	2b00      	cmp	r3, #0
 8015e34:	bfb8      	it	lt
 8015e36:	6823      	ldrlt	r3, [r4, #0]
 8015e38:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8015e3c:	bfbe      	ittt	lt
 8015e3e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8015e42:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8015e44:	3404      	addlt	r4, #4
 8015e46:	b1d9      	cbz	r1, 8015e80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8015e48:	880b      	ldrh	r3, [r1, #0]
 8015e4a:	2b69      	cmp	r3, #105	@ 0x69
 8015e4c:	d01f      	beq.n	8015e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015e4e:	d82f      	bhi.n	8015eb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8015e50:	2b58      	cmp	r3, #88	@ 0x58
 8015e52:	d01c      	beq.n	8015e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015e54:	d818      	bhi.n	8015e88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8015e56:	2b25      	cmp	r3, #37	@ 0x25
 8015e58:	d034      	beq.n	8015ec4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8015e5a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8015e5e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015e60:	f1bb 0f00 	cmp.w	fp, #0
 8015e64:	f000 80b8 	beq.w	8015fd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8015e68:	f8bb 5000 	ldrh.w	r5, [fp]
 8015e6c:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8015e70:	3301      	adds	r3, #1
 8015e72:	930d      	str	r3, [sp, #52]	@ 0x34
 8015e74:	e029      	b.n	8015eca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8015e76:	b10d      	cbz	r5, 8015e7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8015e78:	782a      	ldrb	r2, [r5, #0]
 8015e7a:	e785      	b.n	8015d88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8015e7c:	462a      	mov	r2, r5
 8015e7e:	e783      	b.n	8015d88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8015e80:	2a00      	cmp	r2, #0
 8015e82:	d0ea      	beq.n	8015e5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8015e84:	7813      	ldrb	r3, [r2, #0]
 8015e86:	e7e0      	b.n	8015e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8015e88:	3b63      	subs	r3, #99	@ 0x63
 8015e8a:	2b01      	cmp	r3, #1
 8015e8c:	d8e5      	bhi.n	8015e5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8015e8e:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8015e92:	b329      	cbz	r1, 8015ee0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8015e94:	880b      	ldrh	r3, [r1, #0]
 8015e96:	2b69      	cmp	r3, #105	@ 0x69
 8015e98:	d063      	beq.n	8015f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8015e9a:	d825      	bhi.n	8015ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8015e9c:	2b63      	cmp	r3, #99	@ 0x63
 8015e9e:	d038      	beq.n	8015f12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8015ea0:	2b64      	cmp	r3, #100	@ 0x64
 8015ea2:	d05e      	beq.n	8015f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8015ea4:	2b58      	cmp	r3, #88	@ 0x58
 8015ea6:	d07b      	beq.n	8015fa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8015ea8:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8015eac:	4625      	mov	r5, r4
 8015eae:	e036      	b.n	8015f1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015eb0:	2b73      	cmp	r3, #115	@ 0x73
 8015eb2:	d0ec      	beq.n	8015e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015eb4:	d802      	bhi.n	8015ebc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8015eb6:	2b6f      	cmp	r3, #111	@ 0x6f
 8015eb8:	d1cf      	bne.n	8015e5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8015eba:	e7e8      	b.n	8015e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015ebc:	2b75      	cmp	r3, #117	@ 0x75
 8015ebe:	d0e6      	beq.n	8015e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015ec0:	2b78      	cmp	r3, #120	@ 0x78
 8015ec2:	e7f9      	b.n	8015eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8015ec4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015ec6:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8015eca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015ecc:	b10b      	cbz	r3, 8015ed2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8015ece:	3302      	adds	r3, #2
 8015ed0:	9309      	str	r3, [sp, #36]	@ 0x24
 8015ed2:	9b08      	ldr	r3, [sp, #32]
 8015ed4:	2b00      	cmp	r3, #0
 8015ed6:	f43f af2e 	beq.w	8015d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8015eda:	3301      	adds	r3, #1
 8015edc:	9308      	str	r3, [sp, #32]
 8015ede:	e72a      	b.n	8015d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8015ee0:	2a00      	cmp	r2, #0
 8015ee2:	d0e1      	beq.n	8015ea8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8015ee4:	7813      	ldrb	r3, [r2, #0]
 8015ee6:	e7d6      	b.n	8015e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8015ee8:	2b73      	cmp	r3, #115	@ 0x73
 8015eea:	d036      	beq.n	8015f5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8015eec:	d807      	bhi.n	8015efe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8015eee:	2b6f      	cmp	r3, #111	@ 0x6f
 8015ef0:	d1da      	bne.n	8015ea8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8015ef2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015ef4:	1d25      	adds	r5, r4, #4
 8015ef6:	eba8 0202 	sub.w	r2, r8, r2
 8015efa:	2308      	movs	r3, #8
 8015efc:	e04a      	b.n	8015f94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8015efe:	2b75      	cmp	r3, #117	@ 0x75
 8015f00:	d043      	beq.n	8015f8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8015f02:	2b78      	cmp	r3, #120	@ 0x78
 8015f04:	d1d0      	bne.n	8015ea8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8015f06:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015f08:	1d25      	adds	r5, r4, #4
 8015f0a:	eba8 0202 	sub.w	r2, r8, r2
 8015f0e:	2310      	movs	r3, #16
 8015f10:	e040      	b.n	8015f94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8015f12:	6823      	ldr	r3, [r4, #0]
 8015f14:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8015f18:	1d25      	adds	r5, r4, #4
 8015f1a:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 8015f1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015f20:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8015f24:	2b00      	cmp	r3, #0
 8015f26:	d052      	beq.n	8015fce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8015f28:	881a      	ldrh	r2, [r3, #0]
 8015f2a:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8015f2e:	a80d      	add	r0, sp, #52	@ 0x34
 8015f30:	9005      	str	r0, [sp, #20]
 8015f32:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8015f36:	9004      	str	r0, [sp, #16]
 8015f38:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8015f3a:	9003      	str	r0, [sp, #12]
 8015f3c:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8015f40:	9002      	str	r0, [sp, #8]
 8015f42:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8015f44:	9001      	str	r0, [sp, #4]
 8015f46:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8015f4a:	9000      	str	r0, [sp, #0]
 8015f4c:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8015f50:	a810      	add	r0, sp, #64	@ 0x40
 8015f52:	f7ff fd49 	bl	80159e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8015f56:	462c      	mov	r4, r5
 8015f58:	e7b7      	b.n	8015eca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8015f5a:	6823      	ldr	r3, [r4, #0]
 8015f5c:	1d25      	adds	r5, r4, #4
 8015f5e:	9310      	str	r3, [sp, #64]	@ 0x40
 8015f60:	e7dd      	b.n	8015f1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015f62:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015f64:	6820      	ldr	r0, [r4, #0]
 8015f66:	eba8 0202 	sub.w	r2, r8, r2
 8015f6a:	230a      	movs	r3, #10
 8015f6c:	b292      	uxth	r2, r2
 8015f6e:	4649      	mov	r1, r9
 8015f70:	f7ff fce4 	bl	801593c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8015f74:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8015f78:	2b2d      	cmp	r3, #45	@ 0x2d
 8015f7a:	f104 0504 	add.w	r5, r4, #4
 8015f7e:	d1ce      	bne.n	8015f1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015f80:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015f84:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015f86:	3302      	adds	r3, #2
 8015f88:	e7e9      	b.n	8015f5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8015f8a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015f8c:	1d25      	adds	r5, r4, #4
 8015f8e:	eba8 0202 	sub.w	r2, r8, r2
 8015f92:	230a      	movs	r3, #10
 8015f94:	b292      	uxth	r2, r2
 8015f96:	4649      	mov	r1, r9
 8015f98:	6820      	ldr	r0, [r4, #0]
 8015f9a:	f7ff fcfb 	bl	8015994 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8015f9e:	e7be      	b.n	8015f1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015fa0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015fa2:	6820      	ldr	r0, [r4, #0]
 8015fa4:	eba8 0202 	sub.w	r2, r8, r2
 8015fa8:	b292      	uxth	r2, r2
 8015faa:	2310      	movs	r3, #16
 8015fac:	4649      	mov	r1, r9
 8015fae:	f7ff fcf1 	bl	8015994 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8015fb2:	1d25      	adds	r5, r4, #4
 8015fb4:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8015fb8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8015fbc:	2b00      	cmp	r3, #0
 8015fbe:	d0ae      	beq.n	8015f1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015fc0:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8015fc4:	2919      	cmp	r1, #25
 8015fc6:	d8f7      	bhi.n	8015fb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8015fc8:	3b20      	subs	r3, #32
 8015fca:	8013      	strh	r3, [r2, #0]
 8015fcc:	e7f4      	b.n	8015fb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8015fce:	9a08      	ldr	r2, [sp, #32]
 8015fd0:	2a00      	cmp	r2, #0
 8015fd2:	d0aa      	beq.n	8015f2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8015fd4:	7812      	ldrb	r2, [r2, #0]
 8015fd6:	e7a8      	b.n	8015f2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8015fd8:	2d00      	cmp	r5, #0
 8015fda:	f43f af47 	beq.w	8015e6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8015fde:	782d      	ldrb	r5, [r5, #0]
 8015fe0:	e744      	b.n	8015e6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08015fe2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8015fe2:	b507      	push	{r0, r1, r2, lr}
 8015fe4:	9300      	str	r3, [sp, #0]
 8015fe6:	4613      	mov	r3, r2
 8015fe8:	2200      	movs	r2, #0
 8015fea:	f7ff fe90 	bl	8015d0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8015fee:	b003      	add	sp, #12
 8015ff0:	f85d fb04 	ldr.w	pc, [sp], #4

08015ff4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8015ff4:	b40c      	push	{r2, r3}
 8015ff6:	b507      	push	{r0, r1, r2, lr}
 8015ff8:	ab04      	add	r3, sp, #16
 8015ffa:	f853 2b04 	ldr.w	r2, [r3], #4
 8015ffe:	9301      	str	r3, [sp, #4]
 8016000:	f7ff ffef 	bl	8015fe2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8016004:	b003      	add	sp, #12
 8016006:	f85d eb04 	ldr.w	lr, [sp], #4
 801600a:	b002      	add	sp, #8
 801600c:	4770      	bx	lr
	...

08016010 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8016010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016014:	b0c5      	sub	sp, #276	@ 0x114
 8016016:	2400      	movs	r4, #0
 8016018:	af11      	add	r7, sp, #68	@ 0x44
 801601a:	4606      	mov	r6, r0
 801601c:	468a      	mov	sl, r1
 801601e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8016022:	4621      	mov	r1, r4
 8016024:	22c8      	movs	r2, #200	@ 0xc8
 8016026:	4638      	mov	r0, r7
 8016028:	f8dd b138 	ldr.w	fp, [sp, #312]	@ 0x138
 801602c:	940d      	str	r4, [sp, #52]	@ 0x34
 801602e:	f00f f8ad 	bl	802518c <memset>
 8016032:	b16e      	cbz	r6, 8016050 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8016034:	ed9f 5aa8 	vldr	s10, [pc, #672]	@ 80162d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8016038:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801603a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801603c:	b162      	cbz	r2, 8016058 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801603e:	8812      	ldrh	r2, [r2, #0]
 8016040:	b11a      	cbz	r2, 801604a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8016042:	f10a 31ff 	add.w	r1, sl, #4294967295
 8016046:	4299      	cmp	r1, r3
 8016048:	dc2e      	bgt.n	80160a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801604a:	2200      	movs	r2, #0
 801604c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8016050:	4630      	mov	r0, r6
 8016052:	b045      	add	sp, #276	@ 0x114
 8016054:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016058:	9a08      	ldr	r2, [sp, #32]
 801605a:	2a00      	cmp	r2, #0
 801605c:	d0f5      	beq.n	801604a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801605e:	7812      	ldrb	r2, [r2, #0]
 8016060:	e7ee      	b.n	8016040 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8016062:	2d00      	cmp	r5, #0
 8016064:	d0e8      	beq.n	8016038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8016066:	782a      	ldrb	r2, [r5, #0]
 8016068:	b142      	cbz	r2, 801607c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801606a:	2a25      	cmp	r2, #37	@ 0x25
 801606c:	d001      	beq.n	8016072 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801606e:	4299      	cmp	r1, r3
 8016070:	dc08      	bgt.n	8016084 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8016072:	f1b8 0f00 	cmp.w	r8, #0
 8016076:	d121      	bne.n	80160bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8016078:	2d00      	cmp	r5, #0
 801607a:	d0dd      	beq.n	8016038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801607c:	782a      	ldrb	r2, [r5, #0]
 801607e:	f04f 0800 	mov.w	r8, #0
 8016082:	e01d      	b.n	80160c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8016084:	f1b8 0f00 	cmp.w	r8, #0
 8016088:	d07f      	beq.n	801618a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801608a:	f8b8 2000 	ldrh.w	r2, [r8]
 801608e:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8016092:	f1b8 0f00 	cmp.w	r8, #0
 8016096:	d002      	beq.n	801609e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8016098:	f108 0202 	add.w	r2, r8, #2
 801609c:	9209      	str	r2, [sp, #36]	@ 0x24
 801609e:	b10d      	cbz	r5, 80160a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 80160a0:	3501      	adds	r5, #1
 80160a2:	9508      	str	r5, [sp, #32]
 80160a4:	3301      	adds	r3, #1
 80160a6:	930d      	str	r3, [sp, #52]	@ 0x34
 80160a8:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 80160ac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80160ae:	f1b8 0f00 	cmp.w	r8, #0
 80160b2:	d0d6      	beq.n	8016062 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 80160b4:	f8b8 2000 	ldrh.w	r2, [r8]
 80160b8:	2a00      	cmp	r2, #0
 80160ba:	d1d6      	bne.n	801606a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 80160bc:	f8b8 2000 	ldrh.w	r2, [r8]
 80160c0:	2a00      	cmp	r2, #0
 80160c2:	d0b9      	beq.n	8016038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80160c4:	4299      	cmp	r1, r3
 80160c6:	ddb7      	ble.n	8016038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80160c8:	2300      	movs	r3, #0
 80160ca:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80160ce:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
 80160d2:	f88d 302e 	strb.w	r3, [sp, #46]	@ 0x2e
 80160d6:	f88d 302f 	strb.w	r3, [sp, #47]	@ 0x2f
 80160da:	f88d 3030 	strb.w	r3, [sp, #48]	@ 0x30
 80160de:	930e      	str	r3, [sp, #56]	@ 0x38
 80160e0:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 80160e4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80160e6:	f1b8 0f00 	cmp.w	r8, #0
 80160ea:	d002      	beq.n	80160f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 80160ec:	f108 0302 	add.w	r3, r8, #2
 80160f0:	9309      	str	r3, [sp, #36]	@ 0x24
 80160f2:	b10d      	cbz	r5, 80160f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 80160f4:	1c6b      	adds	r3, r5, #1
 80160f6:	9308      	str	r3, [sp, #32]
 80160f8:	ab0f      	add	r3, sp, #60	@ 0x3c
 80160fa:	9305      	str	r3, [sp, #20]
 80160fc:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8016100:	9304      	str	r3, [sp, #16]
 8016102:	ab0e      	add	r3, sp, #56	@ 0x38
 8016104:	9303      	str	r3, [sp, #12]
 8016106:	ab0c      	add	r3, sp, #48	@ 0x30
 8016108:	9302      	str	r3, [sp, #8]
 801610a:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 801610e:	9301      	str	r3, [sp, #4]
 8016110:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8016114:	9300      	str	r3, [sp, #0]
 8016116:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 801611a:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 801611e:	a908      	add	r1, sp, #32
 8016120:	a809      	add	r0, sp, #36	@ 0x24
 8016122:	f7ff fd24 	bl	8015b6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8016126:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016128:	2b00      	cmp	r3, #0
 801612a:	da0b      	bge.n	8016144 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801612c:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8016130:	edd3 7a00 	vldr	s15, [r3]
 8016134:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016138:	3401      	adds	r4, #1
 801613a:	ee17 3a90 	vmov	r3, s15
 801613e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016142:	930e      	str	r3, [sp, #56]	@ 0x38
 8016144:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8016146:	2b00      	cmp	r3, #0
 8016148:	da0b      	bge.n	8016162 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801614a:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801614e:	edd3 7a00 	vldr	s15, [r3]
 8016152:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016156:	3401      	adds	r4, #1
 8016158:	ee17 3a90 	vmov	r3, s15
 801615c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016160:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016162:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016164:	b1b3      	cbz	r3, 8016194 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8016166:	881a      	ldrh	r2, [r3, #0]
 8016168:	2a25      	cmp	r2, #37	@ 0x25
 801616a:	d018      	beq.n	801619e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801616c:	2a66      	cmp	r2, #102	@ 0x66
 801616e:	d01c      	beq.n	80161aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8016170:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8016174:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016176:	f1b8 0f00 	cmp.w	r8, #0
 801617a:	f000 8121 	beq.w	80163c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801617e:	f8b8 5000 	ldrh.w	r5, [r8]
 8016182:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8016186:	3301      	adds	r3, #1
 8016188:	e00d      	b.n	80161a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801618a:	b10d      	cbz	r5, 8016190 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801618c:	782a      	ldrb	r2, [r5, #0]
 801618e:	e77e      	b.n	801608e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8016190:	462a      	mov	r2, r5
 8016192:	e77c      	b.n	801608e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8016194:	9b08      	ldr	r3, [sp, #32]
 8016196:	2b00      	cmp	r3, #0
 8016198:	d0ea      	beq.n	8016170 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801619a:	781a      	ldrb	r2, [r3, #0]
 801619c:	e7e4      	b.n	8016168 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801619e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80161a0:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80161a4:	3302      	adds	r3, #2
 80161a6:	930d      	str	r3, [sp, #52]	@ 0x34
 80161a8:	e041      	b.n	801622e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 80161aa:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80161ae:	edd3 7a00 	vldr	s15, [r3]
 80161b2:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 80161b6:	9710      	str	r7, [sp, #64]	@ 0x40
 80161b8:	3401      	adds	r4, #1
 80161ba:	b923      	cbnz	r3, 80161c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 80161bc:	2301      	movs	r3, #1
 80161be:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 80161c2:	2306      	movs	r3, #6
 80161c4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80161c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80161ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80161ce:	bf48      	it	mi
 80161d0:	eef1 7a67 	vnegmi.f32	s15, s15
 80161d4:	eeb0 7ae7 	vabs.f32	s14, s15
 80161d8:	bf48      	it	mi
 80161da:	232d      	movmi	r3, #45	@ 0x2d
 80161dc:	eeb4 7a45 	vcmp.f32	s14, s10
 80161e0:	bf48      	it	mi
 80161e2:	f8ad 3032 	strhmi.w	r3, [sp, #50]	@ 0x32
 80161e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80161ea:	dd2b      	ble.n	8016244 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 80161ec:	4b3b      	ldr	r3, [pc, #236]	@ (80162dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 80161ee:	9311      	str	r3, [sp, #68]	@ 0x44
 80161f0:	2366      	movs	r3, #102	@ 0x66
 80161f2:	9312      	str	r3, [sp, #72]	@ 0x48
 80161f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80161f6:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 80161fa:	2b00      	cmp	r3, #0
 80161fc:	f000 80da 	beq.w	80163b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8016200:	881a      	ldrh	r2, [r3, #0]
 8016202:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8016206:	a80d      	add	r0, sp, #52	@ 0x34
 8016208:	9005      	str	r0, [sp, #20]
 801620a:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 801620e:	9004      	str	r0, [sp, #16]
 8016210:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8016212:	9003      	str	r0, [sp, #12]
 8016214:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8016218:	9002      	str	r0, [sp, #8]
 801621a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801621c:	9001      	str	r0, [sp, #4]
 801621e:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8016222:	9000      	str	r0, [sp, #0]
 8016224:	e9cd a606 	strd	sl, r6, [sp, #24]
 8016228:	a810      	add	r0, sp, #64	@ 0x40
 801622a:	f7ff fbdd 	bl	80159e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801622e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016230:	b10b      	cbz	r3, 8016236 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 8016232:	3302      	adds	r3, #2
 8016234:	9309      	str	r3, [sp, #36]	@ 0x24
 8016236:	9b08      	ldr	r3, [sp, #32]
 8016238:	2b00      	cmp	r3, #0
 801623a:	f43f aefd 	beq.w	8016038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801623e:	3301      	adds	r3, #1
 8016240:	9308      	str	r3, [sp, #32]
 8016242:	e6f9      	b.n	8016038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8016244:	eef4 7a67 	vcmp.f32	s15, s15
 8016248:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801624c:	d63a      	bvs.n	80162c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801624e:	f10d 0846 	add.w	r8, sp, #70	@ 0x46
 8016252:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
 8016256:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 801625a:	eeb0 6a67 	vmov.f32	s12, s15
 801625e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016262:	eef0 5a47 	vmov.f32	s11, s14
 8016266:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801626a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801626e:	da2d      	bge.n	80162cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8016270:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016272:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8016276:	2100      	movs	r1, #0
 8016278:	eef0 4a46 	vmov.f32	s9, s12
 801627c:	ebaa 0202 	sub.w	r2, sl, r2
 8016280:	eef4 6ac6 	vcmpe.f32	s13, s12
 8016284:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016288:	b28d      	uxth	r5, r1
 801628a:	db2c      	blt.n	80162e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801628c:	1a53      	subs	r3, r2, r1
 801628e:	2b00      	cmp	r3, #0
 8016290:	dd29      	ble.n	80162e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8016292:	3101      	adds	r1, #1
 8016294:	2964      	cmp	r1, #100	@ 0x64
 8016296:	d025      	beq.n	80162e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8016298:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801629c:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80162a0:	ee17 3a10 	vmov	r3, s14
 80162a4:	2b09      	cmp	r3, #9
 80162a6:	bfa8      	it	ge
 80162a8:	2309      	movge	r3, #9
 80162aa:	ee07 3a10 	vmov	s14, r3
 80162ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80162b2:	f103 0030 	add.w	r0, r3, #48	@ 0x30
 80162b6:	eee7 7a66 	vfms.f32	s15, s14, s13
 80162ba:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 80162be:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 80162c2:	e7dd      	b.n	8016280 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 80162c4:	4b06      	ldr	r3, [pc, #24]	@ (80162e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 80162c6:	9311      	str	r3, [sp, #68]	@ 0x44
 80162c8:	236e      	movs	r3, #110	@ 0x6e
 80162ca:	e792      	b.n	80161f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 80162cc:	ee66 6a87 	vmul.f32	s13, s13, s14
 80162d0:	ee86 6a07 	vdiv.f32	s12, s12, s14
 80162d4:	e7c7      	b.n	8016266 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 80162d6:	bf00      	nop
 80162d8:	7f7fffff 	.word	0x7f7fffff
 80162dc:	006e0069 	.word	0x006e0069
 80162e0:	0061006e 	.word	0x0061006e
 80162e4:	2563      	movs	r5, #99	@ 0x63
 80162e6:	2a63      	cmp	r2, #99	@ 0x63
 80162e8:	bfd4      	ite	le
 80162ea:	ebc5 0202 	rsble	r2, r5, r2
 80162ee:	f1c5 0263 	rsbgt	r2, r5, #99	@ 0x63
 80162f2:	2a00      	cmp	r2, #0
 80162f4:	dd43      	ble.n	801637e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80162f6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80162f8:	2b00      	cmp	r3, #0
 80162fa:	dd40      	ble.n	801637e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80162fc:	f04f 0901 	mov.w	r9, #1
 8016300:	210a      	movs	r1, #10
 8016302:	f113 33ff 	adds.w	r3, r3, #4294967295
 8016306:	d30c      	bcc.n	8016322 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8016308:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801630c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8016310:	ee17 0a10 	vmov	r0, s14
 8016314:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016318:	fb01 0909 	mla	r9, r1, r9, r0
 801631c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8016320:	e7ef      	b.n	8016302 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 8016322:	3501      	adds	r5, #1
 8016324:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016326:	b292      	uxth	r2, r2
 8016328:	230a      	movs	r3, #10
 801632a:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801632e:	4648      	mov	r0, r9
 8016330:	f7ff fb4e 	bl	80159d0 <_ZN8touchgfx7Unicode4itoaElPtti>
 8016334:	f1b9 0f01 	cmp.w	r9, #1
 8016338:	dc1f      	bgt.n	801637a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801633a:	f89d 302e 	ldrb.w	r3, [sp, #46]	@ 0x2e
 801633e:	2b00      	cmp	r3, #0
 8016340:	bf0c      	ite	eq
 8016342:	2300      	moveq	r3, #0
 8016344:	232e      	movne	r3, #46	@ 0x2e
 8016346:	aa44      	add	r2, sp, #272	@ 0x110
 8016348:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801634c:	eef4 7ae4 	vcmpe.f32	s15, s9
 8016350:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016354:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8016358:	f6ff af4c 	blt.w	80161f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801635c:	2300      	movs	r3, #0
 801635e:	f838 2b02 	ldrh.w	r2, [r8], #2
 8016362:	1c59      	adds	r1, r3, #1
 8016364:	b98a      	cbnz	r2, 801638a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8016366:	b29b      	uxth	r3, r3
 8016368:	2130      	movs	r1, #48	@ 0x30
 801636a:	b983      	cbnz	r3, 801638e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801636c:	2331      	movs	r3, #49	@ 0x31
 801636e:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8016372:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016374:	3b02      	subs	r3, #2
 8016376:	9310      	str	r3, [sp, #64]	@ 0x40
 8016378:	e73c      	b.n	80161f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801637a:	232e      	movs	r3, #46	@ 0x2e
 801637c:	e7e3      	b.n	8016346 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801637e:	ab44      	add	r3, sp, #272	@ 0x110
 8016380:	3501      	adds	r5, #1
 8016382:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016386:	2300      	movs	r3, #0
 8016388:	e7e0      	b.n	801634c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801638a:	460b      	mov	r3, r1
 801638c:	e7e7      	b.n	801635e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801638e:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8016392:	f1a2 0030 	sub.w	r0, r2, #48	@ 0x30
 8016396:	2808      	cmp	r0, #8
 8016398:	d806      	bhi.n	80163a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801639a:	a944      	add	r1, sp, #272	@ 0x110
 801639c:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80163a0:	3201      	adds	r2, #1
 80163a2:	f823 2ccc 	strh.w	r2, [r3, #-204]
 80163a6:	e725      	b.n	80161f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80163a8:	2a39      	cmp	r2, #57	@ 0x39
 80163aa:	bf08      	it	eq
 80163ac:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 80163b0:	3b01      	subs	r3, #1
 80163b2:	e7da      	b.n	801636a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 80163b4:	9a08      	ldr	r2, [sp, #32]
 80163b6:	2a00      	cmp	r2, #0
 80163b8:	f43f af23 	beq.w	8016202 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80163bc:	7812      	ldrb	r2, [r2, #0]
 80163be:	e720      	b.n	8016202 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80163c0:	2d00      	cmp	r5, #0
 80163c2:	f43f aede 	beq.w	8016182 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80163c6:	782d      	ldrb	r5, [r5, #0]
 80163c8:	e6db      	b.n	8016182 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80163ca:	bf00      	nop

080163cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80163cc:	b507      	push	{r0, r1, r2, lr}
 80163ce:	9300      	str	r3, [sp, #0]
 80163d0:	4613      	mov	r3, r2
 80163d2:	2200      	movs	r2, #0
 80163d4:	f7ff fe1c 	bl	8016010 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80163d8:	b003      	add	sp, #12
 80163da:	f85d fb04 	ldr.w	pc, [sp], #4

080163de <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt>:
 80163de:	b5f0      	push	{r4, r5, r6, r7, lr}
 80163e0:	4603      	mov	r3, r0
 80163e2:	2000      	movs	r0, #0
 80163e4:	4290      	cmp	r0, r2
 80163e6:	d209      	bcs.n	80163fc <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x1e>
 80163e8:	781c      	ldrb	r4, [r3, #0]
 80163ea:	0625      	lsls	r5, r4, #24
 80163ec:	d407      	bmi.n	80163fe <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x20>
 80163ee:	800c      	strh	r4, [r1, #0]
 80163f0:	3301      	adds	r3, #1
 80163f2:	1c8c      	adds	r4, r1, #2
 80163f4:	8809      	ldrh	r1, [r1, #0]
 80163f6:	3001      	adds	r0, #1
 80163f8:	b280      	uxth	r0, r0
 80163fa:	bb69      	cbnz	r1, 8016458 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x7a>
 80163fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80163fe:	f004 05e0 	and.w	r5, r4, #224	@ 0xe0
 8016402:	2dc0      	cmp	r5, #192	@ 0xc0
 8016404:	d10d      	bne.n	8016422 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x44>
 8016406:	785d      	ldrb	r5, [r3, #1]
 8016408:	f005 06c0 	and.w	r6, r5, #192	@ 0xc0
 801640c:	2e80      	cmp	r6, #128	@ 0x80
 801640e:	d108      	bne.n	8016422 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x44>
 8016410:	01a4      	lsls	r4, r4, #6
 8016412:	f404 64f8 	and.w	r4, r4, #1984	@ 0x7c0
 8016416:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801641a:	432c      	orrs	r4, r5
 801641c:	800c      	strh	r4, [r1, #0]
 801641e:	3302      	adds	r3, #2
 8016420:	e7e7      	b.n	80163f2 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x14>
 8016422:	f004 05f0 	and.w	r5, r4, #240	@ 0xf0
 8016426:	2de0      	cmp	r5, #224	@ 0xe0
 8016428:	d114      	bne.n	8016454 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x76>
 801642a:	785e      	ldrb	r6, [r3, #1]
 801642c:	f006 05c0 	and.w	r5, r6, #192	@ 0xc0
 8016430:	2d80      	cmp	r5, #128	@ 0x80
 8016432:	d10f      	bne.n	8016454 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x76>
 8016434:	789d      	ldrb	r5, [r3, #2]
 8016436:	f005 07c0 	and.w	r7, r5, #192	@ 0xc0
 801643a:	2f80      	cmp	r7, #128	@ 0x80
 801643c:	d10a      	bne.n	8016454 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x76>
 801643e:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016442:	01b6      	lsls	r6, r6, #6
 8016444:	ea45 3404 	orr.w	r4, r5, r4, lsl #12
 8016448:	f406 667c 	and.w	r6, r6, #4032	@ 0xfc0
 801644c:	4334      	orrs	r4, r6
 801644e:	800c      	strh	r4, [r1, #0]
 8016450:	3303      	adds	r3, #3
 8016452:	e7ce      	b.n	80163f2 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x14>
 8016454:	3301      	adds	r3, #1
 8016456:	460c      	mov	r4, r1
 8016458:	4621      	mov	r1, r4
 801645a:	e7c3      	b.n	80163e4 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x6>

0801645c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801645c:	4b01      	ldr	r3, [pc, #4]	@ (8016464 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801645e:	6018      	str	r0, [r3, #0]
 8016460:	4770      	bx	lr
 8016462:	bf00      	nop
 8016464:	20002408 	.word	0x20002408

08016468 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8016468:	4b06      	ldr	r3, [pc, #24]	@ (8016484 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801646a:	881a      	ldrh	r2, [r3, #0]
 801646c:	4282      	cmp	r2, r0
 801646e:	d807      	bhi.n	8016480 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8016470:	4b05      	ldr	r3, [pc, #20]	@ (8016488 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8016472:	881b      	ldrh	r3, [r3, #0]
 8016474:	4413      	add	r3, r2
 8016476:	4298      	cmp	r0, r3
 8016478:	bfac      	ite	ge
 801647a:	2000      	movge	r0, #0
 801647c:	2001      	movlt	r0, #1
 801647e:	4770      	bx	lr
 8016480:	2000      	movs	r0, #0
 8016482:	4770      	bx	lr
 8016484:	20002428 	.word	0x20002428
 8016488:	2000242c 	.word	0x2000242c

0801648c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801648c:	b508      	push	{r3, lr}
 801648e:	4601      	mov	r1, r0
 8016490:	f7ff ffea 	bl	8016468 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8016494:	b118      	cbz	r0, 801649e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8016496:	4b02      	ldr	r3, [pc, #8]	@ (80164a0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8016498:	681b      	ldr	r3, [r3, #0]
 801649a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801649e:	bd08      	pop	{r3, pc}
 80164a0:	2000240c 	.word	0x2000240c

080164a4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80164a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80164a6:	4c24      	ldr	r4, [pc, #144]	@ (8016538 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80164a8:	6823      	ldr	r3, [r4, #0]
 80164aa:	2b00      	cmp	r3, #0
 80164ac:	d042      	beq.n	8016534 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80164ae:	4a23      	ldr	r2, [pc, #140]	@ (801653c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80164b0:	4d23      	ldr	r5, [pc, #140]	@ (8016540 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80164b2:	8811      	ldrh	r1, [r2, #0]
 80164b4:	f8b5 c000 	ldrh.w	ip, [r5]
 80164b8:	4822      	ldr	r0, [pc, #136]	@ (8016544 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80164ba:	4461      	add	r1, ip
 80164bc:	1c4a      	adds	r2, r1, #1
 80164be:	f022 0201 	bic.w	r2, r2, #1
 80164c2:	008f      	lsls	r7, r1, #2
 80164c4:	0412      	lsls	r2, r2, #16
 80164c6:	19de      	adds	r6, r3, r7
 80164c8:	0c12      	lsrs	r2, r2, #16
 80164ca:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80164ce:	6006      	str	r6, [r0, #0]
 80164d0:	4e1d      	ldr	r6, [pc, #116]	@ (8016548 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80164d2:	19da      	adds	r2, r3, r7
 80164d4:	6032      	str	r2, [r6, #0]
 80164d6:	220e      	movs	r2, #14
 80164d8:	fb02 f20c 	mul.w	r2, r2, ip
 80164dc:	3203      	adds	r2, #3
 80164de:	f022 0203 	bic.w	r2, r2, #3
 80164e2:	443a      	add	r2, r7
 80164e4:	4f19      	ldr	r7, [pc, #100]	@ (801654c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80164e6:	4413      	add	r3, r2
 80164e8:	603b      	str	r3, [r7, #0]
 80164ea:	4f19      	ldr	r7, [pc, #100]	@ (8016550 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80164ec:	2300      	movs	r3, #0
 80164ee:	803b      	strh	r3, [r7, #0]
 80164f0:	4f18      	ldr	r7, [pc, #96]	@ (8016554 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80164f2:	683f      	ldr	r7, [r7, #0]
 80164f4:	1aba      	subs	r2, r7, r2
 80164f6:	4f18      	ldr	r7, [pc, #96]	@ (8016558 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80164f8:	603a      	str	r2, [r7, #0]
 80164fa:	4a18      	ldr	r2, [pc, #96]	@ (801655c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80164fc:	469c      	mov	ip, r3
 80164fe:	8013      	strh	r3, [r2, #0]
 8016500:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8016504:	428b      	cmp	r3, r1
 8016506:	d10d      	bne.n	8016524 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8016508:	882d      	ldrh	r5, [r5, #0]
 801650a:	6830      	ldr	r0, [r6, #0]
 801650c:	2300      	movs	r3, #0
 801650e:	240e      	movs	r4, #14
 8016510:	429d      	cmp	r5, r3
 8016512:	d90f      	bls.n	8016534 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8016514:	fb04 0203 	mla	r2, r4, r3, r0
 8016518:	3301      	adds	r3, #1
 801651a:	7b11      	ldrb	r1, [r2, #12]
 801651c:	f36f 1145 	bfc	r1, #5, #1
 8016520:	7311      	strb	r1, [r2, #12]
 8016522:	e7f5      	b.n	8016510 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8016524:	6822      	ldr	r2, [r4, #0]
 8016526:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801652a:	6802      	ldr	r2, [r0, #0]
 801652c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8016530:	3301      	adds	r3, #1
 8016532:	e7e7      	b.n	8016504 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8016534:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016536:	bf00      	nop
 8016538:	2000240c 	.word	0x2000240c
 801653c:	20002428 	.word	0x20002428
 8016540:	2000242c 	.word	0x2000242c
 8016544:	20002420 	.word	0x20002420
 8016548:	20002410 	.word	0x20002410
 801654c:	20002418 	.word	0x20002418
 8016550:	2000242a 	.word	0x2000242a
 8016554:	20002414 	.word	0x20002414
 8016558:	20002424 	.word	0x20002424
 801655c:	2000241c 	.word	0x2000241c

08016560 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8016560:	4b06      	ldr	r3, [pc, #24]	@ (801657c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8016562:	681b      	ldr	r3, [r3, #0]
 8016564:	b943      	cbnz	r3, 8016578 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8016566:	b139      	cbz	r1, 8016578 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8016568:	4b05      	ldr	r3, [pc, #20]	@ (8016580 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801656a:	801a      	strh	r2, [r3, #0]
 801656c:	4b05      	ldr	r3, [pc, #20]	@ (8016584 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801656e:	6019      	str	r1, [r3, #0]
 8016570:	4b05      	ldr	r3, [pc, #20]	@ (8016588 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8016572:	6018      	str	r0, [r3, #0]
 8016574:	f7ff bf96 	b.w	80164a4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8016578:	4770      	bx	lr
 801657a:	bf00      	nop
 801657c:	20002418 	.word	0x20002418
 8016580:	2000242c 	.word	0x2000242c
 8016584:	20002414 	.word	0x20002414
 8016588:	2000240c 	.word	0x2000240c

0801658c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801658c:	b470      	push	{r4, r5, r6}
 801658e:	4c07      	ldr	r4, [pc, #28]	@ (80165ac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8016590:	6826      	ldr	r6, [r4, #0]
 8016592:	4605      	mov	r5, r0
 8016594:	4610      	mov	r0, r2
 8016596:	9a03      	ldr	r2, [sp, #12]
 8016598:	b936      	cbnz	r6, 80165a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801659a:	6025      	str	r5, [r4, #0]
 801659c:	4c04      	ldr	r4, [pc, #16]	@ (80165b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801659e:	8021      	strh	r1, [r4, #0]
 80165a0:	bc70      	pop	{r4, r5, r6}
 80165a2:	4619      	mov	r1, r3
 80165a4:	f7ff bfdc 	b.w	8016560 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80165a8:	bc70      	pop	{r4, r5, r6}
 80165aa:	4770      	bx	lr
 80165ac:	20002430 	.word	0x20002430
 80165b0:	20002428 	.word	0x20002428

080165b4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80165b4:	4a12      	ldr	r2, [pc, #72]	@ (8016600 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80165b6:	8803      	ldrh	r3, [r0, #0]
 80165b8:	8812      	ldrh	r2, [r2, #0]
 80165ba:	4293      	cmp	r3, r2
 80165bc:	d207      	bcs.n	80165ce <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80165be:	4a11      	ldr	r2, [pc, #68]	@ (8016604 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80165c0:	6812      	ldr	r2, [r2, #0]
 80165c2:	2114      	movs	r1, #20
 80165c4:	fb01 2303 	mla	r3, r1, r3, r2
 80165c8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80165cc:	4770      	bx	lr
 80165ce:	490e      	ldr	r1, [pc, #56]	@ (8016608 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80165d0:	8809      	ldrh	r1, [r1, #0]
 80165d2:	4411      	add	r1, r2
 80165d4:	428b      	cmp	r3, r1
 80165d6:	da04      	bge.n	80165e2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80165d8:	1a9b      	subs	r3, r3, r2
 80165da:	4a0c      	ldr	r2, [pc, #48]	@ (801660c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80165dc:	210e      	movs	r1, #14
 80165de:	6812      	ldr	r2, [r2, #0]
 80165e0:	e7f0      	b.n	80165c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80165e2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80165e6:	4293      	cmp	r3, r2
 80165e8:	d108      	bne.n	80165fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80165ea:	4b09      	ldr	r3, [pc, #36]	@ (8016610 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80165ec:	781b      	ldrb	r3, [r3, #0]
 80165ee:	b91b      	cbnz	r3, 80165f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80165f0:	4b08      	ldr	r3, [pc, #32]	@ (8016614 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80165f2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80165f6:	4770      	bx	lr
 80165f8:	4b07      	ldr	r3, [pc, #28]	@ (8016618 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80165fa:	e7fa      	b.n	80165f2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80165fc:	2000      	movs	r0, #0
 80165fe:	4770      	bx	lr
 8016600:	20002428 	.word	0x20002428
 8016604:	20002430 	.word	0x20002430
 8016608:	2000242c 	.word	0x2000242c
 801660c:	20002410 	.word	0x20002410
 8016610:	200023a0 	.word	0x200023a0
 8016614:	200023a2 	.word	0x200023a2
 8016618:	200023a4 	.word	0x200023a4

0801661c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801661c:	4a12      	ldr	r2, [pc, #72]	@ (8016668 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801661e:	8803      	ldrh	r3, [r0, #0]
 8016620:	8812      	ldrh	r2, [r2, #0]
 8016622:	4293      	cmp	r3, r2
 8016624:	d207      	bcs.n	8016636 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8016626:	4a11      	ldr	r2, [pc, #68]	@ (801666c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8016628:	6812      	ldr	r2, [r2, #0]
 801662a:	2114      	movs	r1, #20
 801662c:	fb01 2303 	mla	r3, r1, r3, r2
 8016630:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8016634:	4770      	bx	lr
 8016636:	490e      	ldr	r1, [pc, #56]	@ (8016670 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8016638:	8809      	ldrh	r1, [r1, #0]
 801663a:	4411      	add	r1, r2
 801663c:	428b      	cmp	r3, r1
 801663e:	da04      	bge.n	801664a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8016640:	1a9b      	subs	r3, r3, r2
 8016642:	4a0c      	ldr	r2, [pc, #48]	@ (8016674 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8016644:	210e      	movs	r1, #14
 8016646:	6812      	ldr	r2, [r2, #0]
 8016648:	e7f0      	b.n	801662c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801664a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801664e:	4293      	cmp	r3, r2
 8016650:	d108      	bne.n	8016664 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8016652:	4b09      	ldr	r3, [pc, #36]	@ (8016678 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8016654:	781b      	ldrb	r3, [r3, #0]
 8016656:	b91b      	cbnz	r3, 8016660 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8016658:	4b08      	ldr	r3, [pc, #32]	@ (801667c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801665a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801665e:	4770      	bx	lr
 8016660:	4b07      	ldr	r3, [pc, #28]	@ (8016680 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8016662:	e7fa      	b.n	801665a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8016664:	2000      	movs	r0, #0
 8016666:	4770      	bx	lr
 8016668:	20002428 	.word	0x20002428
 801666c:	20002430 	.word	0x20002430
 8016670:	2000242c 	.word	0x2000242c
 8016674:	20002410 	.word	0x20002410
 8016678:	200023a0 	.word	0x200023a0
 801667c:	200023a4 	.word	0x200023a4
 8016680:	200023a2 	.word	0x200023a2

08016684 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8016684:	b510      	push	{r4, lr}
 8016686:	4a1f      	ldr	r2, [pc, #124]	@ (8016704 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8016688:	880b      	ldrh	r3, [r1, #0]
 801668a:	8812      	ldrh	r2, [r2, #0]
 801668c:	4293      	cmp	r3, r2
 801668e:	d213      	bcs.n	80166b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8016690:	4a1d      	ldr	r2, [pc, #116]	@ (8016708 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8016692:	6812      	ldr	r2, [r2, #0]
 8016694:	2114      	movs	r1, #20
 8016696:	fb01 2303 	mla	r3, r1, r3, r2
 801669a:	8a1a      	ldrh	r2, [r3, #16]
 801669c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80166a0:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80166a4:	8a5b      	ldrh	r3, [r3, #18]
 80166a6:	8004      	strh	r4, [r0, #0]
 80166a8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80166ac:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80166b0:	8041      	strh	r1, [r0, #2]
 80166b2:	8082      	strh	r2, [r0, #4]
 80166b4:	80c3      	strh	r3, [r0, #6]
 80166b6:	e00e      	b.n	80166d6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80166b8:	4914      	ldr	r1, [pc, #80]	@ (801670c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80166ba:	8809      	ldrh	r1, [r1, #0]
 80166bc:	4411      	add	r1, r2
 80166be:	428b      	cmp	r3, r1
 80166c0:	da0a      	bge.n	80166d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80166c2:	1a9b      	subs	r3, r3, r2
 80166c4:	4a12      	ldr	r2, [pc, #72]	@ (8016710 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80166c6:	6812      	ldr	r2, [r2, #0]
 80166c8:	210e      	movs	r1, #14
 80166ca:	fb01 2303 	mla	r3, r1, r3, r2
 80166ce:	681a      	ldr	r2, [r3, #0]
 80166d0:	6002      	str	r2, [r0, #0]
 80166d2:	685a      	ldr	r2, [r3, #4]
 80166d4:	6042      	str	r2, [r0, #4]
 80166d6:	bd10      	pop	{r4, pc}
 80166d8:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80166dc:	4293      	cmp	r3, r2
 80166de:	d10b      	bne.n	80166f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80166e0:	4b0c      	ldr	r3, [pc, #48]	@ (8016714 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80166e2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80166e6:	4b0c      	ldr	r3, [pc, #48]	@ (8016718 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80166e8:	8081      	strh	r1, [r0, #4]
 80166ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 80166ee:	80c2      	strh	r2, [r0, #6]
 80166f0:	2300      	movs	r3, #0
 80166f2:	8003      	strh	r3, [r0, #0]
 80166f4:	8043      	strh	r3, [r0, #2]
 80166f6:	e7ee      	b.n	80166d6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80166f8:	2300      	movs	r3, #0
 80166fa:	8003      	strh	r3, [r0, #0]
 80166fc:	8043      	strh	r3, [r0, #2]
 80166fe:	8083      	strh	r3, [r0, #4]
 8016700:	e7d8      	b.n	80166b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8016702:	bf00      	nop
 8016704:	20002428 	.word	0x20002428
 8016708:	20002430 	.word	0x20002430
 801670c:	2000242c 	.word	0x2000242c
 8016710:	20002410 	.word	0x20002410
 8016714:	2000239c 	.word	0x2000239c
 8016718:	2000239e 	.word	0x2000239e

0801671c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801671c:	4a17      	ldr	r2, [pc, #92]	@ (801677c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801671e:	8803      	ldrh	r3, [r0, #0]
 8016720:	8812      	ldrh	r2, [r2, #0]
 8016722:	4293      	cmp	r3, r2
 8016724:	d213      	bcs.n	801674e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8016726:	4a16      	ldr	r2, [pc, #88]	@ (8016780 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8016728:	6812      	ldr	r2, [r2, #0]
 801672a:	2114      	movs	r1, #20
 801672c:	fb01 2303 	mla	r3, r1, r3, r2
 8016730:	8a1a      	ldrh	r2, [r3, #16]
 8016732:	8919      	ldrh	r1, [r3, #8]
 8016734:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8016738:	428a      	cmp	r2, r1
 801673a:	db1d      	blt.n	8016778 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801673c:	8a58      	ldrh	r0, [r3, #18]
 801673e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8016742:	895b      	ldrh	r3, [r3, #10]
 8016744:	4298      	cmp	r0, r3
 8016746:	bfac      	ite	ge
 8016748:	2000      	movge	r0, #0
 801674a:	2001      	movlt	r0, #1
 801674c:	4770      	bx	lr
 801674e:	490d      	ldr	r1, [pc, #52]	@ (8016784 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8016750:	8809      	ldrh	r1, [r1, #0]
 8016752:	4411      	add	r1, r2
 8016754:	428b      	cmp	r3, r1
 8016756:	da0d      	bge.n	8016774 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8016758:	1a9b      	subs	r3, r3, r2
 801675a:	4a0b      	ldr	r2, [pc, #44]	@ (8016788 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801675c:	6812      	ldr	r2, [r2, #0]
 801675e:	210e      	movs	r1, #14
 8016760:	fb01 2303 	mla	r3, r1, r3, r2
 8016764:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8016768:	891a      	ldrh	r2, [r3, #8]
 801676a:	4291      	cmp	r1, r2
 801676c:	db04      	blt.n	8016778 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801676e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8016772:	e7e6      	b.n	8016742 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8016774:	2000      	movs	r0, #0
 8016776:	4770      	bx	lr
 8016778:	2001      	movs	r0, #1
 801677a:	4770      	bx	lr
 801677c:	20002428 	.word	0x20002428
 8016780:	20002430 	.word	0x20002430
 8016784:	2000242c 	.word	0x2000242c
 8016788:	20002410 	.word	0x20002410

0801678c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801678c:	4a12      	ldr	r2, [pc, #72]	@ (80167d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801678e:	8803      	ldrh	r3, [r0, #0]
 8016790:	8811      	ldrh	r1, [r2, #0]
 8016792:	428b      	cmp	r3, r1
 8016794:	d20b      	bcs.n	80167ae <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8016796:	4a11      	ldr	r2, [pc, #68]	@ (80167dc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8016798:	6812      	ldr	r2, [r2, #0]
 801679a:	b112      	cbz	r2, 80167a2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801679c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80167a0:	b9c0      	cbnz	r0, 80167d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80167a2:	4a0f      	ldr	r2, [pc, #60]	@ (80167e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80167a4:	6811      	ldr	r1, [r2, #0]
 80167a6:	2214      	movs	r2, #20
 80167a8:	4353      	muls	r3, r2
 80167aa:	58c8      	ldr	r0, [r1, r3]
 80167ac:	4770      	bx	lr
 80167ae:	4a0d      	ldr	r2, [pc, #52]	@ (80167e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80167b0:	8812      	ldrh	r2, [r2, #0]
 80167b2:	440a      	add	r2, r1
 80167b4:	4293      	cmp	r3, r2
 80167b6:	da04      	bge.n	80167c2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80167b8:	4a08      	ldr	r2, [pc, #32]	@ (80167dc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80167ba:	6812      	ldr	r2, [r2, #0]
 80167bc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80167c0:	4770      	bx	lr
 80167c2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80167c6:	4293      	cmp	r3, r2
 80167c8:	d103      	bne.n	80167d2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80167ca:	4b07      	ldr	r3, [pc, #28]	@ (80167e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80167cc:	681b      	ldr	r3, [r3, #0]
 80167ce:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80167d0:	4770      	bx	lr
 80167d2:	2000      	movs	r0, #0
 80167d4:	4770      	bx	lr
 80167d6:	bf00      	nop
 80167d8:	20002428 	.word	0x20002428
 80167dc:	2000240c 	.word	0x2000240c
 80167e0:	20002430 	.word	0x20002430
 80167e4:	2000242c 	.word	0x2000242c
 80167e8:	200023a8 	.word	0x200023a8

080167ec <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80167ec:	4b24      	ldr	r3, [pc, #144]	@ (8016880 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80167ee:	8802      	ldrh	r2, [r0, #0]
 80167f0:	8818      	ldrh	r0, [r3, #0]
 80167f2:	4282      	cmp	r2, r0
 80167f4:	d221      	bcs.n	801683a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80167f6:	4b23      	ldr	r3, [pc, #140]	@ (8016884 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80167f8:	6819      	ldr	r1, [r3, #0]
 80167fa:	2314      	movs	r3, #20
 80167fc:	fb03 1302 	mla	r3, r3, r2, r1
 8016800:	6858      	ldr	r0, [r3, #4]
 8016802:	2800      	cmp	r0, #0
 8016804:	d03a      	beq.n	801687c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8016806:	4920      	ldr	r1, [pc, #128]	@ (8016888 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8016808:	6809      	ldr	r1, [r1, #0]
 801680a:	2900      	cmp	r1, #0
 801680c:	d036      	beq.n	801687c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801680e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8016812:	2900      	cmp	r1, #0
 8016814:	d032      	beq.n	801687c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8016816:	891a      	ldrh	r2, [r3, #8]
 8016818:	8958      	ldrh	r0, [r3, #10]
 801681a:	4350      	muls	r0, r2
 801681c:	7c5a      	ldrb	r2, [r3, #17]
 801681e:	7cdb      	ldrb	r3, [r3, #19]
 8016820:	0952      	lsrs	r2, r2, #5
 8016822:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8016826:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801682a:	2b0b      	cmp	r3, #11
 801682c:	bf18      	it	ne
 801682e:	0040      	lslne	r0, r0, #1
 8016830:	3003      	adds	r0, #3
 8016832:	f020 0003 	bic.w	r0, r0, #3
 8016836:	4408      	add	r0, r1
 8016838:	4770      	bx	lr
 801683a:	4b14      	ldr	r3, [pc, #80]	@ (801688c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801683c:	881b      	ldrh	r3, [r3, #0]
 801683e:	4403      	add	r3, r0
 8016840:	429a      	cmp	r2, r3
 8016842:	da1a      	bge.n	801687a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8016844:	4b12      	ldr	r3, [pc, #72]	@ (8016890 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8016846:	681b      	ldr	r3, [r3, #0]
 8016848:	1a10      	subs	r0, r2, r0
 801684a:	210e      	movs	r1, #14
 801684c:	fb01 3000 	mla	r0, r1, r0, r3
 8016850:	7b03      	ldrb	r3, [r0, #12]
 8016852:	f003 031f 	and.w	r3, r3, #31
 8016856:	2b0b      	cmp	r3, #11
 8016858:	d10b      	bne.n	8016872 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801685a:	8903      	ldrh	r3, [r0, #8]
 801685c:	8940      	ldrh	r0, [r0, #10]
 801685e:	4358      	muls	r0, r3
 8016860:	4b09      	ldr	r3, [pc, #36]	@ (8016888 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8016862:	6819      	ldr	r1, [r3, #0]
 8016864:	3003      	adds	r0, #3
 8016866:	f020 0303 	bic.w	r3, r0, #3
 801686a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801686e:	4418      	add	r0, r3
 8016870:	4770      	bx	lr
 8016872:	2b0d      	cmp	r3, #13
 8016874:	d101      	bne.n	801687a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8016876:	300d      	adds	r0, #13
 8016878:	4770      	bx	lr
 801687a:	2000      	movs	r0, #0
 801687c:	4770      	bx	lr
 801687e:	bf00      	nop
 8016880:	20002428 	.word	0x20002428
 8016884:	20002430 	.word	0x20002430
 8016888:	2000240c 	.word	0x2000240c
 801688c:	2000242c 	.word	0x2000242c
 8016890:	20002410 	.word	0x20002410

08016894 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8016894:	b510      	push	{r4, lr}
 8016896:	4a17      	ldr	r2, [pc, #92]	@ (80168f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8016898:	8803      	ldrh	r3, [r0, #0]
 801689a:	8812      	ldrh	r2, [r2, #0]
 801689c:	4293      	cmp	r3, r2
 801689e:	d20c      	bcs.n	80168ba <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80168a0:	4a15      	ldr	r2, [pc, #84]	@ (80168f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80168a2:	6812      	ldr	r2, [r2, #0]
 80168a4:	2114      	movs	r1, #20
 80168a6:	fb01 2303 	mla	r3, r1, r3, r2
 80168aa:	7c58      	ldrb	r0, [r3, #17]
 80168ac:	0942      	lsrs	r2, r0, #5
 80168ae:	7cd8      	ldrb	r0, [r3, #19]
 80168b0:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80168b4:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80168b8:	bd10      	pop	{r4, pc}
 80168ba:	4910      	ldr	r1, [pc, #64]	@ (80168fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80168bc:	8809      	ldrh	r1, [r1, #0]
 80168be:	4411      	add	r1, r2
 80168c0:	428b      	cmp	r3, r1
 80168c2:	da09      	bge.n	80168d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80168c4:	1a9b      	subs	r3, r3, r2
 80168c6:	4a0e      	ldr	r2, [pc, #56]	@ (8016900 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80168c8:	6812      	ldr	r2, [r2, #0]
 80168ca:	210e      	movs	r1, #14
 80168cc:	fb01 2303 	mla	r3, r1, r3, r2
 80168d0:	7b18      	ldrb	r0, [r3, #12]
 80168d2:	f000 001f 	and.w	r0, r0, #31
 80168d6:	e7ef      	b.n	80168b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80168d8:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80168dc:	4293      	cmp	r3, r2
 80168de:	d106      	bne.n	80168ee <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80168e0:	f7f2 fbe6 	bl	80090b0 <_ZN8touchgfx3HAL3lcdEv>
 80168e4:	6803      	ldr	r3, [r0, #0]
 80168e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80168ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80168ec:	4718      	bx	r3
 80168ee:	2000      	movs	r0, #0
 80168f0:	e7e2      	b.n	80168b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80168f2:	bf00      	nop
 80168f4:	20002428 	.word	0x20002428
 80168f8:	20002430 	.word	0x20002430
 80168fc:	2000242c 	.word	0x2000242c
 8016900:	20002410 	.word	0x20002410

08016904 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8016904:	2010      	movs	r0, #16
 8016906:	4770      	bx	lr

08016908 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8016908:	2000      	movs	r0, #0
 801690a:	4770      	bx	lr

0801690c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801690c:	4b02      	ldr	r3, [pc, #8]	@ (8016918 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801690e:	8818      	ldrh	r0, [r3, #0]
 8016910:	0040      	lsls	r0, r0, #1
 8016912:	b280      	uxth	r0, r0
 8016914:	4770      	bx	lr
 8016916:	bf00      	nop
 8016918:	200023a2 	.word	0x200023a2

0801691c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801691c:	2bff      	cmp	r3, #255	@ 0xff
 801691e:	d050      	beq.n	80169c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8016920:	2a0b      	cmp	r2, #11
 8016922:	d04a      	beq.n	80169ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8016924:	d80e      	bhi.n	8016944 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8016926:	2a03      	cmp	r2, #3
 8016928:	d03f      	beq.n	80169aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801692a:	d804      	bhi.n	8016936 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801692c:	2a01      	cmp	r2, #1
 801692e:	d03e      	beq.n	80169ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8016930:	d93f      	bls.n	80169b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8016932:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8016934:	4770      	bx	lr
 8016936:	2a09      	cmp	r2, #9
 8016938:	d03f      	beq.n	80169ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801693a:	d83c      	bhi.n	80169b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801693c:	2a08      	cmp	r2, #8
 801693e:	d03a      	beq.n	80169b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8016940:	2000      	movs	r0, #0
 8016942:	4770      	bx	lr
 8016944:	2a2f      	cmp	r2, #47	@ 0x2f
 8016946:	d024      	beq.n	8016992 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8016948:	d80d      	bhi.n	8016966 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801694a:	2a2d      	cmp	r2, #45	@ 0x2d
 801694c:	d014      	beq.n	8016978 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801694e:	d826      	bhi.n	801699e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8016950:	2a2c      	cmp	r2, #44	@ 0x2c
 8016952:	d1f5      	bne.n	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016954:	684b      	ldr	r3, [r1, #4]
 8016956:	781b      	ldrb	r3, [r3, #0]
 8016958:	2b01      	cmp	r3, #1
 801695a:	d018      	beq.n	801698e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801695c:	d323      	bcc.n	80169a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801695e:	2b02      	cmp	r3, #2
 8016960:	d1ee      	bne.n	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016962:	6880      	ldr	r0, [r0, #8]
 8016964:	4770      	bx	lr
 8016966:	2a31      	cmp	r2, #49	@ 0x31
 8016968:	d004      	beq.n	8016974 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801696a:	d328      	bcc.n	80169be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801696c:	2a32      	cmp	r2, #50	@ 0x32
 801696e:	d026      	beq.n	80169be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8016970:	2a33      	cmp	r2, #51	@ 0x33
 8016972:	d1e5      	bne.n	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016974:	6f00      	ldr	r0, [r0, #112]	@ 0x70
 8016976:	4770      	bx	lr
 8016978:	684b      	ldr	r3, [r1, #4]
 801697a:	781b      	ldrb	r3, [r3, #0]
 801697c:	2b01      	cmp	r3, #1
 801697e:	d004      	beq.n	801698a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016980:	d30b      	bcc.n	801699a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8016982:	2b02      	cmp	r3, #2
 8016984:	d1dc      	bne.n	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016986:	6900      	ldr	r0, [r0, #16]
 8016988:	4770      	bx	lr
 801698a:	6a00      	ldr	r0, [r0, #32]
 801698c:	4770      	bx	lr
 801698e:	6980      	ldr	r0, [r0, #24]
 8016990:	4770      	bx	lr
 8016992:	684b      	ldr	r3, [r1, #4]
 8016994:	781b      	ldrb	r3, [r3, #0]
 8016996:	2b00      	cmp	r3, #0
 8016998:	d1d2      	bne.n	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801699a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 801699c:	4770      	bx	lr
 801699e:	684b      	ldr	r3, [r1, #4]
 80169a0:	781b      	ldrb	r3, [r3, #0]
 80169a2:	2b00      	cmp	r3, #0
 80169a4:	d1cc      	bne.n	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80169a6:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80169a8:	4770      	bx	lr
 80169aa:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 80169ac:	4770      	bx	lr
 80169ae:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 80169b0:	4770      	bx	lr
 80169b2:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 80169b4:	4770      	bx	lr
 80169b6:	6d80      	ldr	r0, [r0, #88]	@ 0x58
 80169b8:	4770      	bx	lr
 80169ba:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 80169bc:	4770      	bx	lr
 80169be:	6e80      	ldr	r0, [r0, #104]	@ 0x68
 80169c0:	4770      	bx	lr
 80169c2:	2a0b      	cmp	r2, #11
 80169c4:	d049      	beq.n	8016a5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80169c6:	d80e      	bhi.n	80169e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80169c8:	2a03      	cmp	r2, #3
 80169ca:	d040      	beq.n	8016a4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80169cc:	d804      	bhi.n	80169d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80169ce:	2a01      	cmp	r2, #1
 80169d0:	d03f      	beq.n	8016a52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80169d2:	d940      	bls.n	8016a56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80169d4:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 80169d6:	4770      	bx	lr
 80169d8:	2a09      	cmp	r2, #9
 80169da:	d03e      	beq.n	8016a5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80169dc:	d801      	bhi.n	80169e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80169de:	2a08      	cmp	r2, #8
 80169e0:	d1ae      	bne.n	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80169e2:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
 80169e4:	4770      	bx	lr
 80169e6:	2a2f      	cmp	r2, #47	@ 0x2f
 80169e8:	d024      	beq.n	8016a34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80169ea:	d80d      	bhi.n	8016a08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80169ec:	2a2d      	cmp	r2, #45	@ 0x2d
 80169ee:	d014      	beq.n	8016a1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80169f0:	d826      	bhi.n	8016a40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80169f2:	2a2c      	cmp	r2, #44	@ 0x2c
 80169f4:	d1a4      	bne.n	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80169f6:	684b      	ldr	r3, [r1, #4]
 80169f8:	781b      	ldrb	r3, [r3, #0]
 80169fa:	2b01      	cmp	r3, #1
 80169fc:	d018      	beq.n	8016a30 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80169fe:	d324      	bcc.n	8016a4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8016a00:	2b02      	cmp	r3, #2
 8016a02:	d19d      	bne.n	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016a04:	68c0      	ldr	r0, [r0, #12]
 8016a06:	4770      	bx	lr
 8016a08:	2a31      	cmp	r2, #49	@ 0x31
 8016a0a:	d004      	beq.n	8016a16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8016a0c:	d327      	bcc.n	8016a5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8016a0e:	2a32      	cmp	r2, #50	@ 0x32
 8016a10:	d025      	beq.n	8016a5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8016a12:	2a33      	cmp	r2, #51	@ 0x33
 8016a14:	d194      	bne.n	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016a16:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8016a18:	4770      	bx	lr
 8016a1a:	684b      	ldr	r3, [r1, #4]
 8016a1c:	781b      	ldrb	r3, [r3, #0]
 8016a1e:	2b01      	cmp	r3, #1
 8016a20:	d004      	beq.n	8016a2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8016a22:	d30b      	bcc.n	8016a3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8016a24:	2b02      	cmp	r3, #2
 8016a26:	d18b      	bne.n	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016a28:	6940      	ldr	r0, [r0, #20]
 8016a2a:	4770      	bx	lr
 8016a2c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8016a2e:	4770      	bx	lr
 8016a30:	69c0      	ldr	r0, [r0, #28]
 8016a32:	4770      	bx	lr
 8016a34:	684b      	ldr	r3, [r1, #4]
 8016a36:	781b      	ldrb	r3, [r3, #0]
 8016a38:	2b00      	cmp	r3, #0
 8016a3a:	d181      	bne.n	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016a3c:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8016a3e:	4770      	bx	lr
 8016a40:	684b      	ldr	r3, [r1, #4]
 8016a42:	781b      	ldrb	r3, [r3, #0]
 8016a44:	2b00      	cmp	r3, #0
 8016a46:	f47f af7b 	bne.w	8016940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016a4a:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8016a4c:	4770      	bx	lr
 8016a4e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8016a50:	4770      	bx	lr
 8016a52:	6d40      	ldr	r0, [r0, #84]	@ 0x54
 8016a54:	4770      	bx	lr
 8016a56:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 8016a58:	4770      	bx	lr
 8016a5a:	6e40      	ldr	r0, [r0, #100]	@ 0x64
 8016a5c:	4770      	bx	lr
 8016a5e:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
 8016a60:	4770      	bx	lr

08016a62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016a62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a66:	b087      	sub	sp, #28
 8016a68:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8016a6a:	9205      	str	r2, [sp, #20]
 8016a6c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016a70:	9202      	str	r2, [sp, #8]
 8016a72:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8016a76:	9101      	str	r1, [sp, #4]
 8016a78:	6841      	ldr	r1, [r0, #4]
 8016a7a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8016a7e:	fb01 2404 	mla	r4, r1, r4, r2
 8016a82:	6802      	ldr	r2, [r0, #0]
 8016a84:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016a88:	f8de 2000 	ldr.w	r2, [lr]
 8016a8c:	9203      	str	r2, [sp, #12]
 8016a8e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8016a92:	3204      	adds	r2, #4
 8016a94:	9204      	str	r2, [sp, #16]
 8016a96:	9a02      	ldr	r2, [sp, #8]
 8016a98:	43d6      	mvns	r6, r2
 8016a9a:	b2f6      	uxtb	r6, r6
 8016a9c:	9a01      	ldr	r2, [sp, #4]
 8016a9e:	2a00      	cmp	r2, #0
 8016aa0:	dc03      	bgt.n	8016aaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016aa2:	9a05      	ldr	r2, [sp, #20]
 8016aa4:	2a00      	cmp	r2, #0
 8016aa6:	f340 8129 	ble.w	8016cfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016aaa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016aac:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8016ab0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8016ab4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016ab8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016aba:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016abe:	2b00      	cmp	r3, #0
 8016ac0:	dd0e      	ble.n	8016ae0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016ac2:	1408      	asrs	r0, r1, #16
 8016ac4:	d405      	bmi.n	8016ad2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016ac6:	4560      	cmp	r0, ip
 8016ac8:	da03      	bge.n	8016ad2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016aca:	1410      	asrs	r0, r2, #16
 8016acc:	d401      	bmi.n	8016ad2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016ace:	42b8      	cmp	r0, r7
 8016ad0:	db07      	blt.n	8016ae2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016ad2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016ad4:	4401      	add	r1, r0
 8016ad6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8016ad8:	3b01      	subs	r3, #1
 8016ada:	4402      	add	r2, r0
 8016adc:	3402      	adds	r4, #2
 8016ade:	e7ee      	b.n	8016abe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016ae0:	d071      	beq.n	8016bc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016ae2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8016ae4:	1e58      	subs	r0, r3, #1
 8016ae6:	fb05 1500 	mla	r5, r5, r0, r1
 8016aea:	142d      	asrs	r5, r5, #16
 8016aec:	d45f      	bmi.n	8016bae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8016aee:	4565      	cmp	r5, ip
 8016af0:	da5d      	bge.n	8016bae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8016af2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8016af4:	fb05 2000 	mla	r0, r5, r0, r2
 8016af8:	1400      	asrs	r0, r0, #16
 8016afa:	d458      	bmi.n	8016bae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8016afc:	42b8      	cmp	r0, r7
 8016afe:	da56      	bge.n	8016bae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8016b00:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8016b04:	4699      	mov	r9, r3
 8016b06:	46a2      	mov	sl, r4
 8016b08:	f1b9 0f00 	cmp.w	r9, #0
 8016b0c:	dd57      	ble.n	8016bbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8016b0e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016b12:	9803      	ldr	r0, [sp, #12]
 8016b14:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8016b18:	140d      	asrs	r5, r1, #16
 8016b1a:	fb07 000c 	mla	r0, r7, ip, r0
 8016b1e:	f109 39ff 	add.w	r9, r9, #4294967295
 8016b22:	5d40      	ldrb	r0, [r0, r5]
 8016b24:	9d04      	ldr	r5, [sp, #16]
 8016b26:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8016b2a:	f8ba 5000 	ldrh.w	r5, [sl]
 8016b2e:	122f      	asrs	r7, r5, #8
 8016b30:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016b34:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016b38:	fb17 f706 	smulbb	r7, r7, r6
 8016b3c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016b40:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016b44:	00ed      	lsls	r5, r5, #3
 8016b46:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8016b4a:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8016b4e:	10c7      	asrs	r7, r0, #3
 8016b50:	b2ed      	uxtb	r5, r5
 8016b52:	00c0      	lsls	r0, r0, #3
 8016b54:	fb18 f806 	smulbb	r8, r8, r6
 8016b58:	fb15 f506 	smulbb	r5, r5, r6
 8016b5c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016b60:	b2c0      	uxtb	r0, r0
 8016b62:	fa1f fc8c 	uxth.w	ip, ip
 8016b66:	fb07 870b 	mla	r7, r7, fp, r8
 8016b6a:	fb00 500b 	mla	r0, r0, fp, r5
 8016b6e:	b280      	uxth	r0, r0
 8016b70:	b2bf      	uxth	r7, r7
 8016b72:	f10c 0501 	add.w	r5, ip, #1
 8016b76:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016b7a:	f107 0801 	add.w	r8, r7, #1
 8016b7e:	1c45      	adds	r5, r0, #1
 8016b80:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016b84:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8016b88:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016b8a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016b8e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016b92:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016b96:	ea45 0c0c 	orr.w	ip, r5, ip
 8016b9a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8016b9e:	4401      	add	r1, r0
 8016ba0:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8016ba2:	ea4c 0c08 	orr.w	ip, ip, r8
 8016ba6:	f82a cb02 	strh.w	ip, [sl], #2
 8016baa:	4402      	add	r2, r0
 8016bac:	e7ac      	b.n	8016b08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8016bae:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8016bb2:	f04f 0800 	mov.w	r8, #0
 8016bb6:	eb03 0008 	add.w	r0, r3, r8
 8016bba:	2800      	cmp	r0, #0
 8016bbc:	dc41      	bgt.n	8016c42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8016bbe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016bc2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016bc6:	9b01      	ldr	r3, [sp, #4]
 8016bc8:	2b00      	cmp	r3, #0
 8016bca:	f340 8097 	ble.w	8016cfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016bce:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016bd2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8016bd6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016bda:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016bdc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016be0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016be4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016be8:	eef0 6a62 	vmov.f32	s13, s5
 8016bec:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016bf0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016bf4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016bf8:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8016bfc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016c00:	eef0 6a43 	vmov.f32	s13, s6
 8016c04:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016c08:	ee12 2a90 	vmov	r2, s5
 8016c0c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016c10:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c14:	ee13 2a10 	vmov	r2, s6
 8016c18:	9313      	str	r3, [sp, #76]	@ 0x4c
 8016c1a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016c1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c20:	9314      	str	r3, [sp, #80]	@ 0x50
 8016c22:	9b01      	ldr	r3, [sp, #4]
 8016c24:	9a05      	ldr	r2, [sp, #20]
 8016c26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016c2a:	3b01      	subs	r3, #1
 8016c2c:	9301      	str	r3, [sp, #4]
 8016c2e:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8016c32:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016c34:	eeb0 3a67 	vmov.f32	s6, s15
 8016c38:	bf08      	it	eq
 8016c3a:	4613      	moveq	r3, r2
 8016c3c:	eef0 2a47 	vmov.f32	s5, s14
 8016c40:	e72c      	b.n	8016a9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016c42:	140f      	asrs	r7, r1, #16
 8016c44:	d453      	bmi.n	8016cee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8016c46:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016c4a:	42bd      	cmp	r5, r7
 8016c4c:	dd4f      	ble.n	8016cee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8016c4e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016c52:	d44c      	bmi.n	8016cee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8016c54:	f8de 000c 	ldr.w	r0, [lr, #12]
 8016c58:	4560      	cmp	r0, ip
 8016c5a:	dd48      	ble.n	8016cee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8016c5c:	9803      	ldr	r0, [sp, #12]
 8016c5e:	b22d      	sxth	r5, r5
 8016c60:	fb0c 0505 	mla	r5, ip, r5, r0
 8016c64:	5de8      	ldrb	r0, [r5, r7]
 8016c66:	9d04      	ldr	r5, [sp, #16]
 8016c68:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8016c6c:	f06f 0501 	mvn.w	r5, #1
 8016c70:	fb05 fb08 	mul.w	fp, r5, r8
 8016c74:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016c78:	f834 500b 	ldrh.w	r5, [r4, fp]
 8016c7c:	122f      	asrs	r7, r5, #8
 8016c7e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016c82:	fb17 f706 	smulbb	r7, r7, r6
 8016c86:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8016c8a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016c8e:	00ed      	lsls	r5, r5, #3
 8016c90:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8016c94:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8016c98:	10c7      	asrs	r7, r0, #3
 8016c9a:	b2ed      	uxtb	r5, r5
 8016c9c:	00c0      	lsls	r0, r0, #3
 8016c9e:	fb19 f906 	smulbb	r9, r9, r6
 8016ca2:	fb15 f506 	smulbb	r5, r5, r6
 8016ca6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016caa:	b2c0      	uxtb	r0, r0
 8016cac:	fa1f fc8c 	uxth.w	ip, ip
 8016cb0:	fb07 970a 	mla	r7, r7, sl, r9
 8016cb4:	fb00 500a 	mla	r0, r0, sl, r5
 8016cb8:	b2bf      	uxth	r7, r7
 8016cba:	b280      	uxth	r0, r0
 8016cbc:	f10c 0501 	add.w	r5, ip, #1
 8016cc0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016cc4:	f107 0901 	add.w	r9, r7, #1
 8016cc8:	1c45      	adds	r5, r0, #1
 8016cca:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016cce:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8016cd2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016cd6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016cda:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016cde:	ea45 0c0c 	orr.w	ip, r5, ip
 8016ce2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016ce6:	ea4c 0c09 	orr.w	ip, ip, r9
 8016cea:	f824 c00b 	strh.w	ip, [r4, fp]
 8016cee:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016cf0:	4401      	add	r1, r0
 8016cf2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8016cf4:	f108 38ff 	add.w	r8, r8, #4294967295
 8016cf8:	4402      	add	r2, r0
 8016cfa:	e75c      	b.n	8016bb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8016cfc:	b007      	add	sp, #28
 8016cfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016d02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016d02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d06:	b085      	sub	sp, #20
 8016d08:	4693      	mov	fp, r2
 8016d0a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016d0c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8016d0e:	6870      	ldr	r0, [r6, #4]
 8016d10:	9100      	str	r1, [sp, #0]
 8016d12:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8016d16:	fb00 2404 	mla	r4, r0, r4, r2
 8016d1a:	6832      	ldr	r2, [r6, #0]
 8016d1c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016d20:	682a      	ldr	r2, [r5, #0]
 8016d22:	9201      	str	r2, [sp, #4]
 8016d24:	686a      	ldr	r2, [r5, #4]
 8016d26:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8016d2a:	3204      	adds	r2, #4
 8016d2c:	9202      	str	r2, [sp, #8]
 8016d2e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016d32:	9a00      	ldr	r2, [sp, #0]
 8016d34:	2a00      	cmp	r2, #0
 8016d36:	dc03      	bgt.n	8016d40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016d38:	f1bb 0f00 	cmp.w	fp, #0
 8016d3c:	f340 80a0 	ble.w	8016e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8016d40:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016d42:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016d46:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016d4a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8016d4e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016d50:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016d54:	2b00      	cmp	r3, #0
 8016d56:	dd0c      	ble.n	8016d72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016d58:	1406      	asrs	r6, r0, #16
 8016d5a:	d405      	bmi.n	8016d68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016d5c:	454e      	cmp	r6, r9
 8016d5e:	da03      	bge.n	8016d68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016d60:	1416      	asrs	r6, r2, #16
 8016d62:	d401      	bmi.n	8016d68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016d64:	4546      	cmp	r6, r8
 8016d66:	db05      	blt.n	8016d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016d68:	4470      	add	r0, lr
 8016d6a:	4462      	add	r2, ip
 8016d6c:	3b01      	subs	r3, #1
 8016d6e:	3402      	adds	r4, #2
 8016d70:	e7f0      	b.n	8016d54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016d72:	d00f      	beq.n	8016d94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016d74:	1e5e      	subs	r6, r3, #1
 8016d76:	fb0e 0706 	mla	r7, lr, r6, r0
 8016d7a:	143f      	asrs	r7, r7, #16
 8016d7c:	d541      	bpl.n	8016e02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8016d7e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8016d82:	4698      	mov	r8, r3
 8016d84:	9603      	str	r6, [sp, #12]
 8016d86:	f1b8 0f00 	cmp.w	r8, #0
 8016d8a:	dc59      	bgt.n	8016e40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016d8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016d90:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016d94:	9b00      	ldr	r3, [sp, #0]
 8016d96:	2b00      	cmp	r3, #0
 8016d98:	dd72      	ble.n	8016e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8016d9a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016d9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016da2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016da6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016da8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016dac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016db0:	eeb0 6a62 	vmov.f32	s12, s5
 8016db4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016db8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016dbc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016dc0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8016dc4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016dc8:	eeb0 6a43 	vmov.f32	s12, s6
 8016dcc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016dd0:	ee12 2a90 	vmov	r2, s5
 8016dd4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016dd8:	fb92 fef3 	sdiv	lr, r2, r3
 8016ddc:	ee13 2a10 	vmov	r2, s6
 8016de0:	fb92 fcf3 	sdiv	ip, r2, r3
 8016de4:	9b00      	ldr	r3, [sp, #0]
 8016de6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016dea:	3b01      	subs	r3, #1
 8016dec:	9300      	str	r3, [sp, #0]
 8016dee:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8016df2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016df4:	eeb0 3a67 	vmov.f32	s6, s15
 8016df8:	bf08      	it	eq
 8016dfa:	465b      	moveq	r3, fp
 8016dfc:	eef0 2a47 	vmov.f32	s5, s14
 8016e00:	e797      	b.n	8016d32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016e02:	454f      	cmp	r7, r9
 8016e04:	dabb      	bge.n	8016d7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016e06:	fb0c 2606 	mla	r6, ip, r6, r2
 8016e0a:	1436      	asrs	r6, r6, #16
 8016e0c:	d4b7      	bmi.n	8016d7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016e0e:	4546      	cmp	r6, r8
 8016e10:	dab5      	bge.n	8016d7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016e12:	461e      	mov	r6, r3
 8016e14:	46a0      	mov	r8, r4
 8016e16:	2e00      	cmp	r6, #0
 8016e18:	ddb8      	ble.n	8016d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016e1a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8016e1e:	9901      	ldr	r1, [sp, #4]
 8016e20:	1417      	asrs	r7, r2, #16
 8016e22:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016e26:	fb0a 1707 	mla	r7, sl, r7, r1
 8016e2a:	9902      	ldr	r1, [sp, #8]
 8016e2c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8016e30:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8016e34:	f828 7b02 	strh.w	r7, [r8], #2
 8016e38:	4470      	add	r0, lr
 8016e3a:	4462      	add	r2, ip
 8016e3c:	3e01      	subs	r6, #1
 8016e3e:	e7ea      	b.n	8016e16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8016e40:	ea5f 4920 	movs.w	r9, r0, asr #16
 8016e44:	d417      	bmi.n	8016e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8016e46:	68ae      	ldr	r6, [r5, #8]
 8016e48:	454e      	cmp	r6, r9
 8016e4a:	dd14      	ble.n	8016e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8016e4c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016e50:	d411      	bmi.n	8016e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8016e52:	68ef      	ldr	r7, [r5, #12]
 8016e54:	4557      	cmp	r7, sl
 8016e56:	dd0e      	ble.n	8016e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8016e58:	9f01      	ldr	r7, [sp, #4]
 8016e5a:	b236      	sxth	r6, r6
 8016e5c:	fb0a 7606 	mla	r6, sl, r6, r7
 8016e60:	9f02      	ldr	r7, [sp, #8]
 8016e62:	f816 6009 	ldrb.w	r6, [r6, r9]
 8016e66:	f06f 0101 	mvn.w	r1, #1
 8016e6a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8016e6e:	fb01 f608 	mul.w	r6, r1, r8
 8016e72:	9903      	ldr	r1, [sp, #12]
 8016e74:	538f      	strh	r7, [r1, r6]
 8016e76:	4470      	add	r0, lr
 8016e78:	4462      	add	r2, ip
 8016e7a:	f108 38ff 	add.w	r8, r8, #4294967295
 8016e7e:	e782      	b.n	8016d86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016e80:	b005      	add	sp, #20
 8016e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016e86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016e86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e8a:	b087      	sub	sp, #28
 8016e8c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8016e8e:	9205      	str	r2, [sp, #20]
 8016e90:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016e94:	9203      	str	r2, [sp, #12]
 8016e96:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8016e9a:	9102      	str	r1, [sp, #8]
 8016e9c:	6861      	ldr	r1, [r4, #4]
 8016e9e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8016ea2:	fb01 2000 	mla	r0, r1, r0, r2
 8016ea6:	6822      	ldr	r2, [r4, #0]
 8016ea8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8016eac:	9200      	str	r2, [sp, #0]
 8016eae:	f8dc 2000 	ldr.w	r2, [ip]
 8016eb2:	9204      	str	r2, [sp, #16]
 8016eb4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8016eb8:	3204      	adds	r2, #4
 8016eba:	9201      	str	r2, [sp, #4]
 8016ebc:	9a03      	ldr	r2, [sp, #12]
 8016ebe:	43d5      	mvns	r5, r2
 8016ec0:	b2ed      	uxtb	r5, r5
 8016ec2:	9a02      	ldr	r2, [sp, #8]
 8016ec4:	2a00      	cmp	r2, #0
 8016ec6:	dc03      	bgt.n	8016ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8016ec8:	9a05      	ldr	r2, [sp, #20]
 8016eca:	2a00      	cmp	r2, #0
 8016ecc:	f340 812c 	ble.w	8017128 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8016ed0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016ed2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8016ed6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8016eda:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016ede:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016ee0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016ee4:	2b00      	cmp	r3, #0
 8016ee6:	dd10      	ble.n	8016f0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016ee8:	140c      	asrs	r4, r1, #16
 8016eea:	d405      	bmi.n	8016ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016eec:	4574      	cmp	r4, lr
 8016eee:	da03      	bge.n	8016ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016ef0:	1414      	asrs	r4, r2, #16
 8016ef2:	d401      	bmi.n	8016ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016ef4:	42bc      	cmp	r4, r7
 8016ef6:	db09      	blt.n	8016f0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8016ef8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8016efa:	9800      	ldr	r0, [sp, #0]
 8016efc:	4421      	add	r1, r4
 8016efe:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016f00:	3002      	adds	r0, #2
 8016f02:	4422      	add	r2, r4
 8016f04:	3b01      	subs	r3, #1
 8016f06:	9000      	str	r0, [sp, #0]
 8016f08:	e7ec      	b.n	8016ee4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8016f0a:	d071      	beq.n	8016ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8016f0c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016f0e:	1e5c      	subs	r4, r3, #1
 8016f10:	fb06 1604 	mla	r6, r6, r4, r1
 8016f14:	1436      	asrs	r6, r6, #16
 8016f16:	d45d      	bmi.n	8016fd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016f18:	4576      	cmp	r6, lr
 8016f1a:	da5b      	bge.n	8016fd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016f1c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8016f1e:	fb06 2404 	mla	r4, r6, r4, r2
 8016f22:	1424      	asrs	r4, r4, #16
 8016f24:	d456      	bmi.n	8016fd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016f26:	42bc      	cmp	r4, r7
 8016f28:	da54      	bge.n	8016fd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016f2a:	f8dd 9000 	ldr.w	r9, [sp]
 8016f2e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8016f32:	4698      	mov	r8, r3
 8016f34:	f1b8 0f00 	cmp.w	r8, #0
 8016f38:	dd54      	ble.n	8016fe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8016f3a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8016f3e:	9804      	ldr	r0, [sp, #16]
 8016f40:	1414      	asrs	r4, r2, #16
 8016f42:	fb07 0404 	mla	r4, r7, r4, r0
 8016f46:	140e      	asrs	r6, r1, #16
 8016f48:	9801      	ldr	r0, [sp, #4]
 8016f4a:	f814 e006 	ldrb.w	lr, [r4, r6]
 8016f4e:	f8b9 4000 	ldrh.w	r4, [r9]
 8016f52:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016f56:	eb00 0b0e 	add.w	fp, r0, lr
 8016f5a:	1227      	asrs	r7, r4, #8
 8016f5c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8016f60:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016f64:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8016f68:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016f6a:	fb16 f60a 	smulbb	r6, r6, sl
 8016f6e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016f72:	fb07 6705 	mla	r7, r7, r5, r6
 8016f76:	10e6      	asrs	r6, r4, #3
 8016f78:	00e4      	lsls	r4, r4, #3
 8016f7a:	b2e4      	uxtb	r4, r4
 8016f7c:	fb1b fb0a 	smulbb	fp, fp, sl
 8016f80:	fb14 f405 	smulbb	r4, r4, r5
 8016f84:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016f88:	b2bf      	uxth	r7, r7
 8016f8a:	fb06 b605 	mla	r6, r6, r5, fp
 8016f8e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8016f92:	b2b6      	uxth	r6, r6
 8016f94:	fa1f fe8e 	uxth.w	lr, lr
 8016f98:	1c7c      	adds	r4, r7, #1
 8016f9a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8016f9e:	f106 0b01 	add.w	fp, r6, #1
 8016fa2:	f10e 0401 	add.w	r4, lr, #1
 8016fa6:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8016faa:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8016fae:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016fb2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8016fb6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8016fba:	4327      	orrs	r7, r4
 8016fbc:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8016fc0:	4401      	add	r1, r0
 8016fc2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8016fc4:	ea47 070b 	orr.w	r7, r7, fp
 8016fc8:	f829 7b02 	strh.w	r7, [r9], #2
 8016fcc:	4402      	add	r2, r0
 8016fce:	f108 38ff 	add.w	r8, r8, #4294967295
 8016fd2:	e7af      	b.n	8016f34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8016fd4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8016fd8:	f04f 0e00 	mov.w	lr, #0
 8016fdc:	eb03 040e 	add.w	r4, r3, lr
 8016fe0:	2c00      	cmp	r4, #0
 8016fe2:	dc43      	bgt.n	801706c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8016fe4:	9a00      	ldr	r2, [sp, #0]
 8016fe6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016fea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016fee:	9300      	str	r3, [sp, #0]
 8016ff0:	9b02      	ldr	r3, [sp, #8]
 8016ff2:	2b00      	cmp	r3, #0
 8016ff4:	f340 8098 	ble.w	8017128 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8016ff8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016ffc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017000:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017004:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017006:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801700a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801700e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017012:	eef0 6a62 	vmov.f32	s13, s5
 8017016:	ee61 7a27 	vmul.f32	s15, s2, s15
 801701a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801701e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017022:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8017026:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801702a:	eef0 6a43 	vmov.f32	s13, s6
 801702e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017032:	ee12 2a90 	vmov	r2, s5
 8017036:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801703a:	fb92 f3f3 	sdiv	r3, r2, r3
 801703e:	ee13 2a10 	vmov	r2, s6
 8017042:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017044:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017046:	fb92 f3f3 	sdiv	r3, r2, r3
 801704a:	9314      	str	r3, [sp, #80]	@ 0x50
 801704c:	9b02      	ldr	r3, [sp, #8]
 801704e:	9a05      	ldr	r2, [sp, #20]
 8017050:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017054:	3b01      	subs	r3, #1
 8017056:	9302      	str	r3, [sp, #8]
 8017058:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801705c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801705e:	eeb0 3a67 	vmov.f32	s6, s15
 8017062:	bf08      	it	eq
 8017064:	4613      	moveq	r3, r2
 8017066:	eef0 2a47 	vmov.f32	s5, s14
 801706a:	e72a      	b.n	8016ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801706c:	140f      	asrs	r7, r1, #16
 801706e:	d454      	bmi.n	801711a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017070:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8017074:	42be      	cmp	r6, r7
 8017076:	dd50      	ble.n	801711a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017078:	ea5f 4822 	movs.w	r8, r2, asr #16
 801707c:	d44d      	bmi.n	801711a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801707e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8017082:	4544      	cmp	r4, r8
 8017084:	dd49      	ble.n	801711a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017086:	9c04      	ldr	r4, [sp, #16]
 8017088:	b236      	sxth	r6, r6
 801708a:	fb08 4606 	mla	r6, r8, r6, r4
 801708e:	f06f 0001 	mvn.w	r0, #1
 8017092:	f816 8007 	ldrb.w	r8, [r6, r7]
 8017096:	9c01      	ldr	r4, [sp, #4]
 8017098:	fb00 fa0e 	mul.w	sl, r0, lr
 801709c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80170a0:	9800      	ldr	r0, [sp, #0]
 80170a2:	eb04 0b08 	add.w	fp, r4, r8
 80170a6:	f830 400a 	ldrh.w	r4, [r0, sl]
 80170aa:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80170ae:	9801      	ldr	r0, [sp, #4]
 80170b0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80170b4:	f810 8008 	ldrb.w	r8, [r0, r8]
 80170b8:	9800      	ldr	r0, [sp, #0]
 80170ba:	1227      	asrs	r7, r4, #8
 80170bc:	fb16 f609 	smulbb	r6, r6, r9
 80170c0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80170c4:	fb07 6705 	mla	r7, r7, r5, r6
 80170c8:	10e6      	asrs	r6, r4, #3
 80170ca:	00e4      	lsls	r4, r4, #3
 80170cc:	b2e4      	uxtb	r4, r4
 80170ce:	fb1b fb09 	smulbb	fp, fp, r9
 80170d2:	fb14 f405 	smulbb	r4, r4, r5
 80170d6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80170da:	b2bf      	uxth	r7, r7
 80170dc:	fb06 b605 	mla	r6, r6, r5, fp
 80170e0:	fb08 4809 	mla	r8, r8, r9, r4
 80170e4:	b2b6      	uxth	r6, r6
 80170e6:	fa1f f888 	uxth.w	r8, r8
 80170ea:	1c7c      	adds	r4, r7, #1
 80170ec:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80170f0:	f106 0b01 	add.w	fp, r6, #1
 80170f4:	f108 0401 	add.w	r4, r8, #1
 80170f8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80170fc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017100:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017104:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8017108:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801710c:	4327      	orrs	r7, r4
 801710e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8017112:	ea47 070b 	orr.w	r7, r7, fp
 8017116:	f820 700a 	strh.w	r7, [r0, sl]
 801711a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801711c:	4401      	add	r1, r0
 801711e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017120:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017124:	4402      	add	r2, r0
 8017126:	e759      	b.n	8016fdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8017128:	b007      	add	sp, #28
 801712a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017130 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017134:	b085      	sub	sp, #20
 8017136:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801713a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801713c:	9203      	str	r2, [sp, #12]
 801713e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8017142:	6870      	ldr	r0, [r6, #4]
 8017144:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8017146:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801714a:	686f      	ldr	r7, [r5, #4]
 801714c:	9101      	str	r1, [sp, #4]
 801714e:	fb00 2404 	mla	r4, r0, r4, r2
 8017152:	6832      	ldr	r2, [r6, #0]
 8017154:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017158:	682a      	ldr	r2, [r5, #0]
 801715a:	9202      	str	r2, [sp, #8]
 801715c:	3704      	adds	r7, #4
 801715e:	9a01      	ldr	r2, [sp, #4]
 8017160:	2a00      	cmp	r2, #0
 8017162:	dc03      	bgt.n	801716c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017164:	9a03      	ldr	r2, [sp, #12]
 8017166:	2a00      	cmp	r2, #0
 8017168:	f340 80cc 	ble.w	8017304 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801716c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801716e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017172:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8017176:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801717a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801717c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017180:	2b00      	cmp	r3, #0
 8017182:	dd0d      	ble.n	80171a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017184:	1406      	asrs	r6, r0, #16
 8017186:	d405      	bmi.n	8017194 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017188:	454e      	cmp	r6, r9
 801718a:	da03      	bge.n	8017194 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801718c:	1416      	asrs	r6, r2, #16
 801718e:	d401      	bmi.n	8017194 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017190:	4546      	cmp	r6, r8
 8017192:	db06      	blt.n	80171a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017194:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8017196:	4460      	add	r0, ip
 8017198:	4432      	add	r2, r6
 801719a:	3b01      	subs	r3, #1
 801719c:	3402      	adds	r4, #2
 801719e:	e7ef      	b.n	8017180 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80171a0:	d00f      	beq.n	80171c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80171a2:	1e5e      	subs	r6, r3, #1
 80171a4:	fb0c 0e06 	mla	lr, ip, r6, r0
 80171a8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80171ac:	d543      	bpl.n	8017236 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80171ae:	4698      	mov	r8, r3
 80171b0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80171b4:	f1b8 0f00 	cmp.w	r8, #0
 80171b8:	dc71      	bgt.n	801729e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80171ba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80171be:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80171c2:	9b01      	ldr	r3, [sp, #4]
 80171c4:	2b00      	cmp	r3, #0
 80171c6:	f340 809d 	ble.w	8017304 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80171ca:	ee30 0a04 	vadd.f32	s0, s0, s8
 80171ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80171d2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80171d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80171d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80171dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80171e0:	eeb0 6a62 	vmov.f32	s12, s5
 80171e4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80171e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80171ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 80171f0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80171f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80171f8:	eeb0 6a43 	vmov.f32	s12, s6
 80171fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017200:	ee12 2a90 	vmov	r2, s5
 8017204:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017208:	fb92 fcf3 	sdiv	ip, r2, r3
 801720c:	ee13 2a10 	vmov	r2, s6
 8017210:	fb92 f3f3 	sdiv	r3, r2, r3
 8017214:	9312      	str	r3, [sp, #72]	@ 0x48
 8017216:	9b01      	ldr	r3, [sp, #4]
 8017218:	9a03      	ldr	r2, [sp, #12]
 801721a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801721e:	3b01      	subs	r3, #1
 8017220:	9301      	str	r3, [sp, #4]
 8017222:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8017226:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017228:	eeb0 3a67 	vmov.f32	s6, s15
 801722c:	bf08      	it	eq
 801722e:	4613      	moveq	r3, r2
 8017230:	eef0 2a47 	vmov.f32	s5, s14
 8017234:	e793      	b.n	801715e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8017236:	45ce      	cmp	lr, r9
 8017238:	dab9      	bge.n	80171ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801723a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801723c:	fb01 2606 	mla	r6, r1, r6, r2
 8017240:	1436      	asrs	r6, r6, #16
 8017242:	d4b4      	bmi.n	80171ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017244:	4546      	cmp	r6, r8
 8017246:	dab2      	bge.n	80171ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017248:	4698      	mov	r8, r3
 801724a:	46a2      	mov	sl, r4
 801724c:	f1b8 0f00 	cmp.w	r8, #0
 8017250:	ddb3      	ble.n	80171ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017252:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017256:	9902      	ldr	r1, [sp, #8]
 8017258:	1416      	asrs	r6, r2, #16
 801725a:	fb09 1606 	mla	r6, r9, r6, r1
 801725e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8017262:	492a      	ldr	r1, [pc, #168]	@ (801730c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8017264:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8017268:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801726c:	eb07 0b0e 	add.w	fp, r7, lr
 8017270:	4460      	add	r0, ip
 8017272:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8017276:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801727a:	00f6      	lsls	r6, r6, #3
 801727c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8017280:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017284:	ea49 0606 	orr.w	r6, r9, r6
 8017288:	f817 900e 	ldrb.w	r9, [r7, lr]
 801728c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801728e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8017292:	f82a 6b02 	strh.w	r6, [sl], #2
 8017296:	440a      	add	r2, r1
 8017298:	f108 38ff 	add.w	r8, r8, #4294967295
 801729c:	e7d6      	b.n	801724c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801729e:	ea5f 4920 	movs.w	r9, r0, asr #16
 80172a2:	d429      	bmi.n	80172f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80172a4:	68ae      	ldr	r6, [r5, #8]
 80172a6:	454e      	cmp	r6, r9
 80172a8:	dd26      	ble.n	80172f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80172aa:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80172ae:	d423      	bmi.n	80172f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80172b0:	68e9      	ldr	r1, [r5, #12]
 80172b2:	4559      	cmp	r1, fp
 80172b4:	dd20      	ble.n	80172f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80172b6:	9902      	ldr	r1, [sp, #8]
 80172b8:	fa0f fe86 	sxth.w	lr, r6
 80172bc:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80172c0:	f06f 0101 	mvn.w	r1, #1
 80172c4:	f81e e009 	ldrb.w	lr, [lr, r9]
 80172c8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80172cc:	eb07 060e 	add.w	r6, r7, lr
 80172d0:	fb01 f908 	mul.w	r9, r1, r8
 80172d4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80172d8:	7876      	ldrb	r6, [r6, #1]
 80172da:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80172de:	00f6      	lsls	r6, r6, #3
 80172e0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80172e4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80172e8:	ea4b 0606 	orr.w	r6, fp, r6
 80172ec:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80172f0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80172f4:	f82a 6009 	strh.w	r6, [sl, r9]
 80172f8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80172fa:	4460      	add	r0, ip
 80172fc:	440a      	add	r2, r1
 80172fe:	f108 38ff 	add.w	r8, r8, #4294967295
 8017302:	e757      	b.n	80171b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017304:	b005      	add	sp, #20
 8017306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801730a:	bf00      	nop
 801730c:	fffff800 	.word	0xfffff800

08017310 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017314:	b087      	sub	sp, #28
 8017316:	468b      	mov	fp, r1
 8017318:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801731a:	9204      	str	r2, [sp, #16]
 801731c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017320:	9205      	str	r2, [sp, #20]
 8017322:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8017326:	6841      	ldr	r1, [r0, #4]
 8017328:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801732c:	fb01 2404 	mla	r4, r1, r4, r2
 8017330:	6802      	ldr	r2, [r0, #0]
 8017332:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017336:	f8dc 2000 	ldr.w	r2, [ip]
 801733a:	9201      	str	r2, [sp, #4]
 801733c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8017340:	3204      	adds	r2, #4
 8017342:	9202      	str	r2, [sp, #8]
 8017344:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017348:	f1bb 0f00 	cmp.w	fp, #0
 801734c:	dc03      	bgt.n	8017356 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801734e:	9a04      	ldr	r2, [sp, #16]
 8017350:	2a00      	cmp	r2, #0
 8017352:	f340 8138 	ble.w	80175c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8017356:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017358:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801735c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8017360:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8017364:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017366:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801736a:	2b00      	cmp	r3, #0
 801736c:	dd0e      	ble.n	801738c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801736e:	1402      	asrs	r2, r0, #16
 8017370:	d405      	bmi.n	801737e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017372:	42ba      	cmp	r2, r7
 8017374:	da03      	bge.n	801737e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017376:	140a      	asrs	r2, r1, #16
 8017378:	d401      	bmi.n	801737e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801737a:	42b2      	cmp	r2, r6
 801737c:	db07      	blt.n	801738e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801737e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017380:	4410      	add	r0, r2
 8017382:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017384:	3b01      	subs	r3, #1
 8017386:	4411      	add	r1, r2
 8017388:	3402      	adds	r4, #2
 801738a:	e7ee      	b.n	801736a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801738c:	d019      	beq.n	80173c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801738e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8017390:	1e5a      	subs	r2, r3, #1
 8017392:	fb05 0502 	mla	r5, r5, r2, r0
 8017396:	142d      	asrs	r5, r5, #16
 8017398:	d409      	bmi.n	80173ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801739a:	42bd      	cmp	r5, r7
 801739c:	da07      	bge.n	80173ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801739e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80173a0:	fb05 1202 	mla	r2, r5, r2, r1
 80173a4:	1412      	asrs	r2, r2, #16
 80173a6:	d402      	bmi.n	80173ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80173a8:	42b2      	cmp	r2, r6
 80173aa:	f2c0 80ac 	blt.w	8017506 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80173ae:	f04f 0e00 	mov.w	lr, #0
 80173b2:	eb03 020e 	add.w	r2, r3, lr
 80173b6:	2a00      	cmp	r2, #0
 80173b8:	dc3e      	bgt.n	8017438 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80173ba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80173be:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80173c2:	f1bb 0f00 	cmp.w	fp, #0
 80173c6:	f340 80fe 	ble.w	80175c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80173ca:	ee30 0a04 	vadd.f32	s0, s0, s8
 80173ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80173d2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80173d6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80173d8:	f1bb 0b01 	subs.w	fp, fp, #1
 80173dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80173e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80173e4:	eeb0 6a62 	vmov.f32	s12, s5
 80173e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80173ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80173f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80173f4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80173f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80173fc:	eeb0 6a43 	vmov.f32	s12, s6
 8017400:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017404:	ee12 2a90 	vmov	r2, s5
 8017408:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801740c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017410:	ee13 2a10 	vmov	r2, s6
 8017414:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017418:	9313      	str	r3, [sp, #76]	@ 0x4c
 801741a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801741c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017420:	9a04      	ldr	r2, [sp, #16]
 8017422:	9314      	str	r3, [sp, #80]	@ 0x50
 8017424:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8017428:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801742a:	eeb0 3a67 	vmov.f32	s6, s15
 801742e:	bf08      	it	eq
 8017430:	4613      	moveq	r3, r2
 8017432:	eef0 2a47 	vmov.f32	s5, s14
 8017436:	e787      	b.n	8017348 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8017438:	1406      	asrs	r6, r0, #16
 801743a:	d45d      	bmi.n	80174f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801743c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8017440:	42b5      	cmp	r5, r6
 8017442:	dd59      	ble.n	80174f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017444:	140f      	asrs	r7, r1, #16
 8017446:	d457      	bmi.n	80174f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017448:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801744c:	42ba      	cmp	r2, r7
 801744e:	dd53      	ble.n	80174f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017450:	9a01      	ldr	r2, [sp, #4]
 8017452:	b22d      	sxth	r5, r5
 8017454:	fb07 2505 	mla	r5, r7, r5, r2
 8017458:	5daa      	ldrb	r2, [r5, r6]
 801745a:	9d02      	ldr	r5, [sp, #8]
 801745c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8017460:	0e2e      	lsrs	r6, r5, #24
 8017462:	d049      	beq.n	80174f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017464:	f06f 0201 	mvn.w	r2, #1
 8017468:	fb02 f20e 	mul.w	r2, r2, lr
 801746c:	9203      	str	r2, [sp, #12]
 801746e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8017472:	9a05      	ldr	r2, [sp, #20]
 8017474:	4356      	muls	r6, r2
 8017476:	1c72      	adds	r2, r6, #1
 8017478:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801747c:	1212      	asrs	r2, r2, #8
 801747e:	fa1f f982 	uxth.w	r9, r2
 8017482:	ea4f 2728 	mov.w	r7, r8, asr #8
 8017486:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801748a:	43d2      	mvns	r2, r2
 801748c:	b2d2      	uxtb	r2, r2
 801748e:	fb16 f609 	smulbb	r6, r6, r9
 8017492:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017496:	fb07 6702 	mla	r7, r7, r2, r6
 801749a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801749e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80174a2:	b2ed      	uxtb	r5, r5
 80174a4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80174a8:	fa5f f888 	uxtb.w	r8, r8
 80174ac:	fb15 f509 	smulbb	r5, r5, r9
 80174b0:	fb08 5502 	mla	r5, r8, r2, r5
 80174b4:	b2bf      	uxth	r7, r7
 80174b6:	fb1a fa09 	smulbb	sl, sl, r9
 80174ba:	b2ad      	uxth	r5, r5
 80174bc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80174c0:	fb06 a602 	mla	r6, r6, r2, sl
 80174c4:	1c7a      	adds	r2, r7, #1
 80174c6:	f105 0a01 	add.w	sl, r5, #1
 80174ca:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80174ce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80174d2:	b2b6      	uxth	r6, r6
 80174d4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80174d8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80174dc:	ea4a 0707 	orr.w	r7, sl, r7
 80174e0:	f106 0a01 	add.w	sl, r6, #1
 80174e4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80174e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80174ec:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80174f0:	9a03      	ldr	r2, [sp, #12]
 80174f2:	ea47 070a 	orr.w	r7, r7, sl
 80174f6:	52a7      	strh	r7, [r4, r2]
 80174f8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80174fa:	4410      	add	r0, r2
 80174fc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80174fe:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017502:	4411      	add	r1, r2
 8017504:	e755      	b.n	80173b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017506:	f04f 0800 	mov.w	r8, #0
 801750a:	eba3 0208 	sub.w	r2, r3, r8
 801750e:	2a00      	cmp	r2, #0
 8017510:	f77f af53 	ble.w	80173ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017514:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8017518:	9f01      	ldr	r7, [sp, #4]
 801751a:	140a      	asrs	r2, r1, #16
 801751c:	1405      	asrs	r5, r0, #16
 801751e:	fb06 7202 	mla	r2, r6, r2, r7
 8017522:	5d52      	ldrb	r2, [r2, r5]
 8017524:	9d02      	ldr	r5, [sp, #8]
 8017526:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801752a:	0e2e      	lsrs	r6, r5, #24
 801752c:	d044      	beq.n	80175b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801752e:	9a05      	ldr	r2, [sp, #20]
 8017530:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8017534:	4356      	muls	r6, r2
 8017536:	1c72      	adds	r2, r6, #1
 8017538:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801753c:	1212      	asrs	r2, r2, #8
 801753e:	fa1f f982 	uxth.w	r9, r2
 8017542:	ea4f 272e 	mov.w	r7, lr, asr #8
 8017546:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801754a:	43d2      	mvns	r2, r2
 801754c:	b2d2      	uxtb	r2, r2
 801754e:	fb16 f609 	smulbb	r6, r6, r9
 8017552:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017556:	fb07 6702 	mla	r7, r7, r2, r6
 801755a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801755e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8017562:	b2ed      	uxtb	r5, r5
 8017564:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017568:	fa5f fe8e 	uxtb.w	lr, lr
 801756c:	fb15 f509 	smulbb	r5, r5, r9
 8017570:	fb0e 5502 	mla	r5, lr, r2, r5
 8017574:	b2bf      	uxth	r7, r7
 8017576:	fb1a fa09 	smulbb	sl, sl, r9
 801757a:	b2ad      	uxth	r5, r5
 801757c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017580:	fb06 a602 	mla	r6, r6, r2, sl
 8017584:	1c7a      	adds	r2, r7, #1
 8017586:	f105 0a01 	add.w	sl, r5, #1
 801758a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801758e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017592:	b2b6      	uxth	r6, r6
 8017594:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017598:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801759c:	ea4a 0707 	orr.w	r7, sl, r7
 80175a0:	f106 0a01 	add.w	sl, r6, #1
 80175a4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80175a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80175ac:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80175b0:	ea47 070a 	orr.w	r7, r7, sl
 80175b4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80175b8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80175ba:	4410      	add	r0, r2
 80175bc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80175be:	f108 0801 	add.w	r8, r8, #1
 80175c2:	4411      	add	r1, r2
 80175c4:	e7a1      	b.n	801750a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80175c6:	b007      	add	sp, #28
 80175c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080175cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80175cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80175d0:	b085      	sub	sp, #20
 80175d2:	468b      	mov	fp, r1
 80175d4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80175d6:	9203      	str	r2, [sp, #12]
 80175d8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80175dc:	6841      	ldr	r1, [r0, #4]
 80175de:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80175e2:	fb01 2404 	mla	r4, r1, r4, r2
 80175e6:	6802      	ldr	r2, [r0, #0]
 80175e8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80175ec:	f8de 2000 	ldr.w	r2, [lr]
 80175f0:	9200      	str	r2, [sp, #0]
 80175f2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80175f6:	3204      	adds	r2, #4
 80175f8:	9201      	str	r2, [sp, #4]
 80175fa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80175fe:	f1bb 0f00 	cmp.w	fp, #0
 8017602:	dc03      	bgt.n	801760c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8017604:	9a03      	ldr	r2, [sp, #12]
 8017606:	2a00      	cmp	r2, #0
 8017608:	f340 8153 	ble.w	80178b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801760c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801760e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017612:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8017616:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801761a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801761c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017620:	2b00      	cmp	r3, #0
 8017622:	dd0e      	ble.n	8017642 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017624:	1408      	asrs	r0, r1, #16
 8017626:	d405      	bmi.n	8017634 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017628:	42b8      	cmp	r0, r7
 801762a:	da03      	bge.n	8017634 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801762c:	1410      	asrs	r0, r2, #16
 801762e:	d401      	bmi.n	8017634 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017630:	42b0      	cmp	r0, r6
 8017632:	db07      	blt.n	8017644 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017634:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017636:	4401      	add	r1, r0
 8017638:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801763a:	3b01      	subs	r3, #1
 801763c:	4402      	add	r2, r0
 801763e:	3402      	adds	r4, #2
 8017640:	e7ee      	b.n	8017620 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8017642:	d017      	beq.n	8017674 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017644:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8017646:	1e58      	subs	r0, r3, #1
 8017648:	fb05 1500 	mla	r5, r5, r0, r1
 801764c:	142d      	asrs	r5, r5, #16
 801764e:	d409      	bmi.n	8017664 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017650:	42bd      	cmp	r5, r7
 8017652:	da07      	bge.n	8017664 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017654:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8017656:	fb05 2000 	mla	r0, r5, r0, r2
 801765a:	1400      	asrs	r0, r0, #16
 801765c:	d402      	bmi.n	8017664 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801765e:	42b0      	cmp	r0, r6
 8017660:	f2c0 80bc 	blt.w	80177dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8017664:	2600      	movs	r6, #0
 8017666:	1998      	adds	r0, r3, r6
 8017668:	2800      	cmp	r0, #0
 801766a:	dc3e      	bgt.n	80176ea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801766c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017670:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017674:	f1bb 0f00 	cmp.w	fp, #0
 8017678:	f340 811b 	ble.w	80178b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801767c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017680:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017684:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017688:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801768a:	f1bb 0b01 	subs.w	fp, fp, #1
 801768e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017692:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017696:	eeb0 6a62 	vmov.f32	s12, s5
 801769a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801769e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80176a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80176a6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80176aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80176ae:	eeb0 6a43 	vmov.f32	s12, s6
 80176b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80176b6:	ee12 2a90 	vmov	r2, s5
 80176ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80176be:	fb92 f3f3 	sdiv	r3, r2, r3
 80176c2:	ee13 2a10 	vmov	r2, s6
 80176c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80176ca:	9311      	str	r3, [sp, #68]	@ 0x44
 80176cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80176ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80176d2:	9a03      	ldr	r2, [sp, #12]
 80176d4:	9312      	str	r3, [sp, #72]	@ 0x48
 80176d6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80176da:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80176dc:	eeb0 3a67 	vmov.f32	s6, s15
 80176e0:	bf08      	it	eq
 80176e2:	4613      	moveq	r3, r2
 80176e4:	eef0 2a47 	vmov.f32	s5, s14
 80176e8:	e789      	b.n	80175fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80176ea:	140f      	asrs	r7, r1, #16
 80176ec:	d426      	bmi.n	801773c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80176ee:	f8de 5008 	ldr.w	r5, [lr, #8]
 80176f2:	42bd      	cmp	r5, r7
 80176f4:	dd22      	ble.n	801773c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80176f6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80176fa:	d41f      	bmi.n	801773c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80176fc:	f8de 000c 	ldr.w	r0, [lr, #12]
 8017700:	4560      	cmp	r0, ip
 8017702:	dd1b      	ble.n	801773c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017704:	9800      	ldr	r0, [sp, #0]
 8017706:	b22d      	sxth	r5, r5
 8017708:	fb0c 0505 	mla	r5, ip, r5, r0
 801770c:	5de8      	ldrb	r0, [r5, r7]
 801770e:	9d01      	ldr	r5, [sp, #4]
 8017710:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8017714:	0e07      	lsrs	r7, r0, #24
 8017716:	2fff      	cmp	r7, #255	@ 0xff
 8017718:	d116      	bne.n	8017748 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801771a:	f06f 0501 	mvn.w	r5, #1
 801771e:	fb05 f706 	mul.w	r7, r5, r6
 8017722:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8017726:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801772a:	0945      	lsrs	r5, r0, #5
 801772c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017730:	ea4c 0505 	orr.w	r5, ip, r5
 8017734:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017738:	4305      	orrs	r5, r0
 801773a:	53e5      	strh	r5, [r4, r7]
 801773c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801773e:	4401      	add	r1, r0
 8017740:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8017742:	3e01      	subs	r6, #1
 8017744:	4402      	add	r2, r0
 8017746:	e78e      	b.n	8017666 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017748:	b2fd      	uxtb	r5, r7
 801774a:	2f00      	cmp	r7, #0
 801774c:	d0f6      	beq.n	801773c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801774e:	f06f 0701 	mvn.w	r7, #1
 8017752:	4377      	muls	r7, r6
 8017754:	fa1f f985 	uxth.w	r9, r5
 8017758:	f834 8007 	ldrh.w	r8, [r4, r7]
 801775c:	9702      	str	r7, [sp, #8]
 801775e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8017762:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8017766:	43ed      	mvns	r5, r5
 8017768:	b2ed      	uxtb	r5, r5
 801776a:	fb17 f709 	smulbb	r7, r7, r9
 801776e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017772:	fb0c 7c05 	mla	ip, ip, r5, r7
 8017776:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801777a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801777e:	b2c0      	uxtb	r0, r0
 8017780:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017784:	fa5f f888 	uxtb.w	r8, r8
 8017788:	fb10 f009 	smulbb	r0, r0, r9
 801778c:	fb08 0005 	mla	r0, r8, r5, r0
 8017790:	b280      	uxth	r0, r0
 8017792:	fa1f fc8c 	uxth.w	ip, ip
 8017796:	fb1a fa09 	smulbb	sl, sl, r9
 801779a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801779e:	fb07 a705 	mla	r7, r7, r5, sl
 80177a2:	f100 0a01 	add.w	sl, r0, #1
 80177a6:	f10c 0501 	add.w	r5, ip, #1
 80177aa:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80177ae:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80177b2:	b2bf      	uxth	r7, r7
 80177b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80177b8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80177bc:	ea4a 0c0c 	orr.w	ip, sl, ip
 80177c0:	f107 0a01 	add.w	sl, r7, #1
 80177c4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80177c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80177cc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80177d0:	9802      	ldr	r0, [sp, #8]
 80177d2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80177d6:	f824 c000 	strh.w	ip, [r4, r0]
 80177da:	e7af      	b.n	801773c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80177dc:	f04f 0800 	mov.w	r8, #0
 80177e0:	eba3 0008 	sub.w	r0, r3, r8
 80177e4:	2800      	cmp	r0, #0
 80177e6:	f77f af41 	ble.w	801766c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80177ea:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80177ee:	9f00      	ldr	r7, [sp, #0]
 80177f0:	1410      	asrs	r0, r2, #16
 80177f2:	140d      	asrs	r5, r1, #16
 80177f4:	fb06 7000 	mla	r0, r6, r0, r7
 80177f8:	5d40      	ldrb	r0, [r0, r5]
 80177fa:	9d01      	ldr	r5, [sp, #4]
 80177fc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8017800:	0e2e      	lsrs	r6, r5, #24
 8017802:	2eff      	cmp	r6, #255	@ 0xff
 8017804:	d112      	bne.n	801782c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8017806:	482c      	ldr	r0, [pc, #176]	@ (80178b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8017808:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801780c:	0968      	lsrs	r0, r5, #5
 801780e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8017812:	4330      	orrs	r0, r6
 8017814:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017818:	4328      	orrs	r0, r5
 801781a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801781e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017820:	4401      	add	r1, r0
 8017822:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8017824:	f108 0801 	add.w	r8, r8, #1
 8017828:	4402      	add	r2, r0
 801782a:	e7d9      	b.n	80177e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801782c:	b2f0      	uxtb	r0, r6
 801782e:	2e00      	cmp	r6, #0
 8017830:	d0f5      	beq.n	801781e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8017832:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8017836:	fa1f f980 	uxth.w	r9, r0
 801783a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801783e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8017842:	43c0      	mvns	r0, r0
 8017844:	b2c0      	uxtb	r0, r0
 8017846:	fb16 f609 	smulbb	r6, r6, r9
 801784a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801784e:	fb07 6700 	mla	r7, r7, r0, r6
 8017852:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8017856:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801785a:	b2ed      	uxtb	r5, r5
 801785c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017860:	fa5f fc8c 	uxtb.w	ip, ip
 8017864:	fb15 f509 	smulbb	r5, r5, r9
 8017868:	fb0c 5500 	mla	r5, ip, r0, r5
 801786c:	b2bf      	uxth	r7, r7
 801786e:	fb1a fa09 	smulbb	sl, sl, r9
 8017872:	b2ad      	uxth	r5, r5
 8017874:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017878:	fb06 a600 	mla	r6, r6, r0, sl
 801787c:	1c78      	adds	r0, r7, #1
 801787e:	f105 0a01 	add.w	sl, r5, #1
 8017882:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8017886:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801788a:	b2b6      	uxth	r6, r6
 801788c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017890:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017894:	ea4a 0707 	orr.w	r7, sl, r7
 8017898:	f106 0a01 	add.w	sl, r6, #1
 801789c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80178a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80178a4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80178a8:	ea47 070a 	orr.w	r7, r7, sl
 80178ac:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80178b0:	e7b5      	b.n	801781e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80178b2:	b005      	add	sp, #20
 80178b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80178b8:	fffff800 	.word	0xfffff800

080178bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80178bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80178c0:	b087      	sub	sp, #28
 80178c2:	468b      	mov	fp, r1
 80178c4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80178c6:	9204      	str	r2, [sp, #16]
 80178c8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80178cc:	9205      	str	r2, [sp, #20]
 80178ce:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80178d2:	6861      	ldr	r1, [r4, #4]
 80178d4:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80178d8:	fb01 2000 	mla	r0, r1, r0, r2
 80178dc:	6822      	ldr	r2, [r4, #0]
 80178de:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80178e2:	f8de 2000 	ldr.w	r2, [lr]
 80178e6:	9201      	str	r2, [sp, #4]
 80178e8:	f8de 2004 	ldr.w	r2, [lr, #4]
 80178ec:	9202      	str	r2, [sp, #8]
 80178ee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80178f2:	f1bb 0f00 	cmp.w	fp, #0
 80178f6:	dc03      	bgt.n	8017900 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80178f8:	9a04      	ldr	r2, [sp, #16]
 80178fa:	2a00      	cmp	r2, #0
 80178fc:	f340 8142 	ble.w	8017b84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8017900:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017902:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017906:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801790a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801790e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017910:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017914:	2b00      	cmp	r3, #0
 8017916:	dd0e      	ble.n	8017936 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017918:	140c      	asrs	r4, r1, #16
 801791a:	d405      	bmi.n	8017928 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801791c:	42bc      	cmp	r4, r7
 801791e:	da03      	bge.n	8017928 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017920:	1414      	asrs	r4, r2, #16
 8017922:	d401      	bmi.n	8017928 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017924:	42b4      	cmp	r4, r6
 8017926:	db07      	blt.n	8017938 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017928:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801792a:	4421      	add	r1, r4
 801792c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801792e:	3b01      	subs	r3, #1
 8017930:	4422      	add	r2, r4
 8017932:	3002      	adds	r0, #2
 8017934:	e7ee      	b.n	8017914 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8017936:	d019      	beq.n	801796c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8017938:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801793a:	1e5c      	subs	r4, r3, #1
 801793c:	fb05 1504 	mla	r5, r5, r4, r1
 8017940:	142d      	asrs	r5, r5, #16
 8017942:	d409      	bmi.n	8017958 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017944:	42bd      	cmp	r5, r7
 8017946:	da07      	bge.n	8017958 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017948:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801794a:	fb05 2404 	mla	r4, r5, r4, r2
 801794e:	1424      	asrs	r4, r4, #16
 8017950:	d402      	bmi.n	8017958 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017952:	42b4      	cmp	r4, r6
 8017954:	f2c0 80b1 	blt.w	8017aba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8017958:	f04f 0800 	mov.w	r8, #0
 801795c:	eb03 0408 	add.w	r4, r3, r8
 8017960:	2c00      	cmp	r4, #0
 8017962:	dc3e      	bgt.n	80179e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8017964:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017968:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801796c:	f1bb 0f00 	cmp.w	fp, #0
 8017970:	f340 8108 	ble.w	8017b84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8017974:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017978:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801797c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017980:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017982:	f1bb 0b01 	subs.w	fp, fp, #1
 8017986:	ee31 1a05 	vadd.f32	s2, s2, s10
 801798a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801798e:	eeb0 6a62 	vmov.f32	s12, s5
 8017992:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017996:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801799a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801799e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80179a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80179a6:	eeb0 6a43 	vmov.f32	s12, s6
 80179aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80179ae:	ee12 2a90 	vmov	r2, s5
 80179b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80179b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80179ba:	ee13 2a10 	vmov	r2, s6
 80179be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80179c2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80179c4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80179c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80179ca:	9a04      	ldr	r2, [sp, #16]
 80179cc:	9314      	str	r3, [sp, #80]	@ 0x50
 80179ce:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80179d2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80179d4:	eeb0 3a67 	vmov.f32	s6, s15
 80179d8:	bf08      	it	eq
 80179da:	4613      	moveq	r3, r2
 80179dc:	eef0 2a47 	vmov.f32	s5, s14
 80179e0:	e787      	b.n	80178f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80179e2:	140e      	asrs	r6, r1, #16
 80179e4:	d462      	bmi.n	8017aac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80179e6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80179ea:	42b5      	cmp	r5, r6
 80179ec:	dd5e      	ble.n	8017aac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80179ee:	1417      	asrs	r7, r2, #16
 80179f0:	d45c      	bmi.n	8017aac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80179f2:	f8de 400c 	ldr.w	r4, [lr, #12]
 80179f6:	42bc      	cmp	r4, r7
 80179f8:	dd58      	ble.n	8017aac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80179fa:	b22d      	sxth	r5, r5
 80179fc:	fb07 6505 	mla	r5, r7, r5, r6
 8017a00:	9c02      	ldr	r4, [sp, #8]
 8017a02:	5d66      	ldrb	r6, [r4, r5]
 8017a04:	2e00      	cmp	r6, #0
 8017a06:	d051      	beq.n	8017aac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8017a08:	9c01      	ldr	r4, [sp, #4]
 8017a0a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8017a0e:	f06f 0401 	mvn.w	r4, #1
 8017a12:	fb04 f408 	mul.w	r4, r4, r8
 8017a16:	9403      	str	r4, [sp, #12]
 8017a18:	5b05      	ldrh	r5, [r0, r4]
 8017a1a:	9c05      	ldr	r4, [sp, #20]
 8017a1c:	4366      	muls	r6, r4
 8017a1e:	1c74      	adds	r4, r6, #1
 8017a20:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8017a24:	1224      	asrs	r4, r4, #8
 8017a26:	b2a7      	uxth	r7, r4
 8017a28:	122e      	asrs	r6, r5, #8
 8017a2a:	43e4      	mvns	r4, r4
 8017a2c:	b2e4      	uxtb	r4, r4
 8017a2e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8017a32:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017a36:	fb16 f604 	smulbb	r6, r6, r4
 8017a3a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8017a3e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017a42:	00ed      	lsls	r5, r5, #3
 8017a44:	fb0c 6c07 	mla	ip, ip, r7, r6
 8017a48:	b2ed      	uxtb	r5, r5
 8017a4a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8017a4e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8017a52:	fb15 f504 	smulbb	r5, r5, r4
 8017a56:	fa5f f989 	uxtb.w	r9, r9
 8017a5a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8017a5e:	fb09 5507 	mla	r5, r9, r7, r5
 8017a62:	fb1a fa04 	smulbb	sl, sl, r4
 8017a66:	fa1f fc8c 	uxth.w	ip, ip
 8017a6a:	b2ad      	uxth	r5, r5
 8017a6c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017a70:	fb06 a607 	mla	r6, r6, r7, sl
 8017a74:	f10c 0401 	add.w	r4, ip, #1
 8017a78:	f105 0a01 	add.w	sl, r5, #1
 8017a7c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8017a80:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017a84:	b2b6      	uxth	r6, r6
 8017a86:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017a8a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017a8e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8017a92:	f106 0a01 	add.w	sl, r6, #1
 8017a96:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017a9a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017a9e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017aa2:	9c03      	ldr	r4, [sp, #12]
 8017aa4:	ea4c 0c0a 	orr.w	ip, ip, sl
 8017aa8:	f820 c004 	strh.w	ip, [r0, r4]
 8017aac:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017aae:	4421      	add	r1, r4
 8017ab0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8017ab2:	f108 38ff 	add.w	r8, r8, #4294967295
 8017ab6:	4422      	add	r2, r4
 8017ab8:	e750      	b.n	801795c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017aba:	f04f 0900 	mov.w	r9, #0
 8017abe:	eba3 0409 	sub.w	r4, r3, r9
 8017ac2:	2c00      	cmp	r4, #0
 8017ac4:	f77f af4e 	ble.w	8017964 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017ac8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8017acc:	140d      	asrs	r5, r1, #16
 8017ace:	1414      	asrs	r4, r2, #16
 8017ad0:	fb06 5404 	mla	r4, r6, r4, r5
 8017ad4:	9d02      	ldr	r5, [sp, #8]
 8017ad6:	5d2e      	ldrb	r6, [r5, r4]
 8017ad8:	2e00      	cmp	r6, #0
 8017ada:	d04c      	beq.n	8017b76 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8017adc:	9d01      	ldr	r5, [sp, #4]
 8017ade:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8017ae2:	9c05      	ldr	r4, [sp, #20]
 8017ae4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8017ae8:	4366      	muls	r6, r4
 8017aea:	1c74      	adds	r4, r6, #1
 8017aec:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8017af0:	1224      	asrs	r4, r4, #8
 8017af2:	b2a7      	uxth	r7, r4
 8017af4:	122e      	asrs	r6, r5, #8
 8017af6:	43e4      	mvns	r4, r4
 8017af8:	b2e4      	uxtb	r4, r4
 8017afa:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8017afe:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017b02:	fb16 f604 	smulbb	r6, r6, r4
 8017b06:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8017b0a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017b0e:	00ed      	lsls	r5, r5, #3
 8017b10:	fb0c 6c07 	mla	ip, ip, r7, r6
 8017b14:	b2ed      	uxtb	r5, r5
 8017b16:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8017b1a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017b1e:	fb15 f504 	smulbb	r5, r5, r4
 8017b22:	fa5f f888 	uxtb.w	r8, r8
 8017b26:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8017b2a:	fb08 5507 	mla	r5, r8, r7, r5
 8017b2e:	fb1a fa04 	smulbb	sl, sl, r4
 8017b32:	fa1f fc8c 	uxth.w	ip, ip
 8017b36:	b2ad      	uxth	r5, r5
 8017b38:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017b3c:	fb06 a607 	mla	r6, r6, r7, sl
 8017b40:	f10c 0401 	add.w	r4, ip, #1
 8017b44:	f105 0a01 	add.w	sl, r5, #1
 8017b48:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8017b4c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017b50:	b2b6      	uxth	r6, r6
 8017b52:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017b56:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017b5a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8017b5e:	f106 0a01 	add.w	sl, r6, #1
 8017b62:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017b66:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017b6a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017b6e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8017b72:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8017b76:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017b78:	4421      	add	r1, r4
 8017b7a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8017b7c:	f109 0901 	add.w	r9, r9, #1
 8017b80:	4422      	add	r2, r4
 8017b82:	e79c      	b.n	8017abe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8017b84:	b007      	add	sp, #28
 8017b86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017b8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017b8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b8e:	b085      	sub	sp, #20
 8017b90:	468b      	mov	fp, r1
 8017b92:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017b94:	9203      	str	r2, [sp, #12]
 8017b96:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8017b9a:	6861      	ldr	r1, [r4, #4]
 8017b9c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8017ba0:	fb01 2000 	mla	r0, r1, r0, r2
 8017ba4:	6822      	ldr	r2, [r4, #0]
 8017ba6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8017baa:	f8d8 2000 	ldr.w	r2, [r8]
 8017bae:	9200      	str	r2, [sp, #0]
 8017bb0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8017bb4:	9201      	str	r2, [sp, #4]
 8017bb6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017bba:	f1bb 0f00 	cmp.w	fp, #0
 8017bbe:	dc03      	bgt.n	8017bc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017bc0:	9a03      	ldr	r2, [sp, #12]
 8017bc2:	2a00      	cmp	r2, #0
 8017bc4:	f340 8146 	ble.w	8017e54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8017bc8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017bca:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8017bce:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8017bd2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8017bd6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017bd8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017bdc:	2b00      	cmp	r3, #0
 8017bde:	dd0e      	ble.n	8017bfe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8017be0:	140c      	asrs	r4, r1, #16
 8017be2:	d405      	bmi.n	8017bf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017be4:	42bc      	cmp	r4, r7
 8017be6:	da03      	bge.n	8017bf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017be8:	1414      	asrs	r4, r2, #16
 8017bea:	d401      	bmi.n	8017bf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017bec:	42b4      	cmp	r4, r6
 8017bee:	db07      	blt.n	8017c00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017bf0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8017bf2:	4421      	add	r1, r4
 8017bf4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017bf6:	3b01      	subs	r3, #1
 8017bf8:	4422      	add	r2, r4
 8017bfa:	3002      	adds	r0, #2
 8017bfc:	e7ee      	b.n	8017bdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8017bfe:	d017      	beq.n	8017c30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017c00:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8017c02:	1e5c      	subs	r4, r3, #1
 8017c04:	fb05 1504 	mla	r5, r5, r4, r1
 8017c08:	142d      	asrs	r5, r5, #16
 8017c0a:	d409      	bmi.n	8017c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017c0c:	42bd      	cmp	r5, r7
 8017c0e:	da07      	bge.n	8017c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017c10:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8017c12:	fb05 2404 	mla	r4, r5, r4, r2
 8017c16:	1424      	asrs	r4, r4, #16
 8017c18:	d402      	bmi.n	8017c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017c1a:	42b4      	cmp	r4, r6
 8017c1c:	f2c0 80b3 	blt.w	8017d86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8017c20:	2600      	movs	r6, #0
 8017c22:	199c      	adds	r4, r3, r6
 8017c24:	2c00      	cmp	r4, #0
 8017c26:	dc3e      	bgt.n	8017ca6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8017c28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017c2c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017c30:	f1bb 0f00 	cmp.w	fp, #0
 8017c34:	f340 810e 	ble.w	8017e54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8017c38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017c3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017c40:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017c44:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017c46:	f1bb 0b01 	subs.w	fp, fp, #1
 8017c4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017c4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017c52:	eeb0 6a62 	vmov.f32	s12, s5
 8017c56:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017c5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017c5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017c62:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8017c66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017c6a:	eeb0 6a43 	vmov.f32	s12, s6
 8017c6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017c72:	ee12 2a90 	vmov	r2, s5
 8017c76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017c7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c7e:	ee13 2a10 	vmov	r2, s6
 8017c82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017c86:	9311      	str	r3, [sp, #68]	@ 0x44
 8017c88:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017c8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c8e:	9a03      	ldr	r2, [sp, #12]
 8017c90:	9312      	str	r3, [sp, #72]	@ 0x48
 8017c92:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8017c96:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017c98:	eeb0 3a67 	vmov.f32	s6, s15
 8017c9c:	bf08      	it	eq
 8017c9e:	4613      	moveq	r3, r2
 8017ca0:	eef0 2a47 	vmov.f32	s5, s14
 8017ca4:	e789      	b.n	8017bba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017ca6:	140f      	asrs	r7, r1, #16
 8017ca8:	d418      	bmi.n	8017cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017caa:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8017cae:	42bd      	cmp	r5, r7
 8017cb0:	dd14      	ble.n	8017cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017cb2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017cb6:	d411      	bmi.n	8017cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017cb8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8017cbc:	4564      	cmp	r4, ip
 8017cbe:	dd0d      	ble.n	8017cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017cc0:	b22d      	sxth	r5, r5
 8017cc2:	fb0c 7505 	mla	r5, ip, r5, r7
 8017cc6:	9c01      	ldr	r4, [sp, #4]
 8017cc8:	5d64      	ldrb	r4, [r4, r5]
 8017cca:	2cff      	cmp	r4, #255	@ 0xff
 8017ccc:	d10c      	bne.n	8017ce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8017cce:	9c00      	ldr	r4, [sp, #0]
 8017cd0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8017cd4:	f06f 0401 	mvn.w	r4, #1
 8017cd8:	4374      	muls	r4, r6
 8017cda:	5305      	strh	r5, [r0, r4]
 8017cdc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8017cde:	4421      	add	r1, r4
 8017ce0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017ce2:	3e01      	subs	r6, #1
 8017ce4:	4422      	add	r2, r4
 8017ce6:	e79c      	b.n	8017c22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017ce8:	2c00      	cmp	r4, #0
 8017cea:	d0f7      	beq.n	8017cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017cec:	9f00      	ldr	r7, [sp, #0]
 8017cee:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8017cf2:	f06f 0501 	mvn.w	r5, #1
 8017cf6:	4375      	muls	r5, r6
 8017cf8:	9502      	str	r5, [sp, #8]
 8017cfa:	5b45      	ldrh	r5, [r0, r5]
 8017cfc:	fa1f fc84 	uxth.w	ip, r4
 8017d00:	122f      	asrs	r7, r5, #8
 8017d02:	43e4      	mvns	r4, r4
 8017d04:	b2e4      	uxtb	r4, r4
 8017d06:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8017d0a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017d0e:	fb17 f704 	smulbb	r7, r7, r4
 8017d12:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8017d16:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8017d1a:	00ed      	lsls	r5, r5, #3
 8017d1c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8017d20:	b2ed      	uxtb	r5, r5
 8017d22:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8017d26:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8017d2a:	fb15 f504 	smulbb	r5, r5, r4
 8017d2e:	fa5f f989 	uxtb.w	r9, r9
 8017d32:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8017d36:	fb09 550c 	mla	r5, r9, ip, r5
 8017d3a:	fb1a fa04 	smulbb	sl, sl, r4
 8017d3e:	fa1f fe8e 	uxth.w	lr, lr
 8017d42:	b2ad      	uxth	r5, r5
 8017d44:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017d48:	fb07 a70c 	mla	r7, r7, ip, sl
 8017d4c:	f10e 0401 	add.w	r4, lr, #1
 8017d50:	f105 0a01 	add.w	sl, r5, #1
 8017d54:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8017d58:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017d5c:	b2bf      	uxth	r7, r7
 8017d5e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017d62:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8017d66:	ea4a 0e0e 	orr.w	lr, sl, lr
 8017d6a:	f107 0a01 	add.w	sl, r7, #1
 8017d6e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017d72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017d76:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017d7a:	9c02      	ldr	r4, [sp, #8]
 8017d7c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8017d80:	f820 e004 	strh.w	lr, [r0, r4]
 8017d84:	e7aa      	b.n	8017cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017d86:	f04f 0900 	mov.w	r9, #0
 8017d8a:	eba3 0409 	sub.w	r4, r3, r9
 8017d8e:	2c00      	cmp	r4, #0
 8017d90:	f77f af4a 	ble.w	8017c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017d94:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8017d98:	1414      	asrs	r4, r2, #16
 8017d9a:	140d      	asrs	r5, r1, #16
 8017d9c:	fb06 5504 	mla	r5, r6, r4, r5
 8017da0:	9c01      	ldr	r4, [sp, #4]
 8017da2:	5d64      	ldrb	r4, [r4, r5]
 8017da4:	2cff      	cmp	r4, #255	@ 0xff
 8017da6:	d10b      	bne.n	8017dc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8017da8:	9c00      	ldr	r4, [sp, #0]
 8017daa:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8017dae:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8017db2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8017db4:	4421      	add	r1, r4
 8017db6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017db8:	f109 0901 	add.w	r9, r9, #1
 8017dbc:	4422      	add	r2, r4
 8017dbe:	e7e4      	b.n	8017d8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8017dc0:	2c00      	cmp	r4, #0
 8017dc2:	d0f6      	beq.n	8017db2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8017dc4:	9e00      	ldr	r6, [sp, #0]
 8017dc6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8017dca:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8017dce:	b2a7      	uxth	r7, r4
 8017dd0:	122e      	asrs	r6, r5, #8
 8017dd2:	43e4      	mvns	r4, r4
 8017dd4:	b2e4      	uxtb	r4, r4
 8017dd6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017dda:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017dde:	fb16 f604 	smulbb	r6, r6, r4
 8017de2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8017de6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017dea:	00ed      	lsls	r5, r5, #3
 8017dec:	fb0c 6c07 	mla	ip, ip, r7, r6
 8017df0:	b2ed      	uxtb	r5, r5
 8017df2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8017df6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017dfa:	fb15 f504 	smulbb	r5, r5, r4
 8017dfe:	fa5f fe8e 	uxtb.w	lr, lr
 8017e02:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8017e06:	fb0e 5507 	mla	r5, lr, r7, r5
 8017e0a:	fb1a fa04 	smulbb	sl, sl, r4
 8017e0e:	fa1f fc8c 	uxth.w	ip, ip
 8017e12:	b2ad      	uxth	r5, r5
 8017e14:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017e18:	fb06 a607 	mla	r6, r6, r7, sl
 8017e1c:	f10c 0401 	add.w	r4, ip, #1
 8017e20:	f105 0a01 	add.w	sl, r5, #1
 8017e24:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8017e28:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017e2c:	b2b6      	uxth	r6, r6
 8017e2e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017e32:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017e36:	ea4a 0c0c 	orr.w	ip, sl, ip
 8017e3a:	f106 0a01 	add.w	sl, r6, #1
 8017e3e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017e42:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017e46:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017e4a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8017e4e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8017e52:	e7ae      	b.n	8017db2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8017e54:	b005      	add	sp, #20
 8017e56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017e5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017e5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e5e:	b085      	sub	sp, #20
 8017e60:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017e62:	9203      	str	r2, [sp, #12]
 8017e64:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8017e68:	9201      	str	r2, [sp, #4]
 8017e6a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8017e6e:	9100      	str	r1, [sp, #0]
 8017e70:	6841      	ldr	r1, [r0, #4]
 8017e72:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8017e76:	fb01 2404 	mla	r4, r1, r4, r2
 8017e7a:	6802      	ldr	r2, [r0, #0]
 8017e7c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017e80:	f8de 2000 	ldr.w	r2, [lr]
 8017e84:	9202      	str	r2, [sp, #8]
 8017e86:	9a01      	ldr	r2, [sp, #4]
 8017e88:	43d6      	mvns	r6, r2
 8017e8a:	b2f6      	uxtb	r6, r6
 8017e8c:	9a00      	ldr	r2, [sp, #0]
 8017e8e:	2a00      	cmp	r2, #0
 8017e90:	dc03      	bgt.n	8017e9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8017e92:	9a03      	ldr	r2, [sp, #12]
 8017e94:	2a00      	cmp	r2, #0
 8017e96:	f340 8124 	ble.w	80180e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8017e9a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017e9c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8017ea0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8017ea4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8017ea8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017eaa:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017eae:	2b00      	cmp	r3, #0
 8017eb0:	dd0e      	ble.n	8017ed0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017eb2:	1408      	asrs	r0, r1, #16
 8017eb4:	d405      	bmi.n	8017ec2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017eb6:	4560      	cmp	r0, ip
 8017eb8:	da03      	bge.n	8017ec2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017eba:	1410      	asrs	r0, r2, #16
 8017ebc:	d401      	bmi.n	8017ec2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017ebe:	42b8      	cmp	r0, r7
 8017ec0:	db07      	blt.n	8017ed2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017ec2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017ec4:	4401      	add	r1, r0
 8017ec6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8017ec8:	3b01      	subs	r3, #1
 8017eca:	4402      	add	r2, r0
 8017ecc:	3402      	adds	r4, #2
 8017ece:	e7ee      	b.n	8017eae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8017ed0:	d06e      	beq.n	8017fb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8017ed2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8017ed4:	1e58      	subs	r0, r3, #1
 8017ed6:	fb05 1500 	mla	r5, r5, r0, r1
 8017eda:	142d      	asrs	r5, r5, #16
 8017edc:	d45c      	bmi.n	8017f98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017ede:	4565      	cmp	r5, ip
 8017ee0:	da5a      	bge.n	8017f98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017ee2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8017ee4:	fb05 2000 	mla	r0, r5, r0, r2
 8017ee8:	1400      	asrs	r0, r0, #16
 8017eea:	d455      	bmi.n	8017f98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017eec:	42b8      	cmp	r0, r7
 8017eee:	da53      	bge.n	8017f98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017ef0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8017ef4:	4699      	mov	r9, r3
 8017ef6:	46a2      	mov	sl, r4
 8017ef8:	f1b9 0f00 	cmp.w	r9, #0
 8017efc:	dd54      	ble.n	8017fa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017efe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017f02:	140d      	asrs	r5, r1, #16
 8017f04:	1410      	asrs	r0, r2, #16
 8017f06:	fb07 5000 	mla	r0, r7, r0, r5
 8017f0a:	9d02      	ldr	r5, [sp, #8]
 8017f0c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017f10:	f8ba 5000 	ldrh.w	r5, [sl]
 8017f14:	122f      	asrs	r7, r5, #8
 8017f16:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017f1a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017f1e:	fb17 f706 	smulbb	r7, r7, r6
 8017f22:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017f26:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017f2a:	00ed      	lsls	r5, r5, #3
 8017f2c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8017f30:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8017f34:	10c7      	asrs	r7, r0, #3
 8017f36:	b2ed      	uxtb	r5, r5
 8017f38:	00c0      	lsls	r0, r0, #3
 8017f3a:	fb18 f806 	smulbb	r8, r8, r6
 8017f3e:	fb15 f506 	smulbb	r5, r5, r6
 8017f42:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017f46:	b2c0      	uxtb	r0, r0
 8017f48:	fa1f fc8c 	uxth.w	ip, ip
 8017f4c:	fb07 870b 	mla	r7, r7, fp, r8
 8017f50:	fb00 500b 	mla	r0, r0, fp, r5
 8017f54:	b280      	uxth	r0, r0
 8017f56:	b2bf      	uxth	r7, r7
 8017f58:	f10c 0501 	add.w	r5, ip, #1
 8017f5c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017f60:	f107 0801 	add.w	r8, r7, #1
 8017f64:	1c45      	adds	r5, r0, #1
 8017f66:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017f6a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8017f6e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017f70:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017f74:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017f78:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017f7c:	ea45 0c0c 	orr.w	ip, r5, ip
 8017f80:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8017f84:	4401      	add	r1, r0
 8017f86:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8017f88:	ea4c 0c08 	orr.w	ip, ip, r8
 8017f8c:	f82a cb02 	strh.w	ip, [sl], #2
 8017f90:	4402      	add	r2, r0
 8017f92:	f109 39ff 	add.w	r9, r9, #4294967295
 8017f96:	e7af      	b.n	8017ef8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017f98:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8017f9c:	f04f 0800 	mov.w	r8, #0
 8017fa0:	eb03 0008 	add.w	r0, r3, r8
 8017fa4:	2800      	cmp	r0, #0
 8017fa6:	dc41      	bgt.n	801802c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017fa8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017fac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017fb0:	9b00      	ldr	r3, [sp, #0]
 8017fb2:	2b00      	cmp	r3, #0
 8017fb4:	f340 8095 	ble.w	80180e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8017fb8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017fbc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017fc0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017fc4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017fc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017fca:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017fce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017fd2:	eef0 6a62 	vmov.f32	s13, s5
 8017fd6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017fda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017fde:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017fe2:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8017fe6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017fea:	eef0 6a43 	vmov.f32	s13, s6
 8017fee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017ff2:	ee12 2a90 	vmov	r2, s5
 8017ff6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017ffa:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ffe:	ee13 2a10 	vmov	r2, s6
 8018002:	9311      	str	r3, [sp, #68]	@ 0x44
 8018004:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018006:	fb92 f3f3 	sdiv	r3, r2, r3
 801800a:	9312      	str	r3, [sp, #72]	@ 0x48
 801800c:	9b00      	ldr	r3, [sp, #0]
 801800e:	9a03      	ldr	r2, [sp, #12]
 8018010:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018014:	3b01      	subs	r3, #1
 8018016:	9300      	str	r3, [sp, #0]
 8018018:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 801801c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801801e:	eeb0 3a67 	vmov.f32	s6, s15
 8018022:	bf08      	it	eq
 8018024:	4613      	moveq	r3, r2
 8018026:	eef0 2a47 	vmov.f32	s5, s14
 801802a:	e72f      	b.n	8017e8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801802c:	140f      	asrs	r7, r1, #16
 801802e:	d451      	bmi.n	80180d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018030:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018034:	42bd      	cmp	r5, r7
 8018036:	dd4d      	ble.n	80180d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018038:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801803c:	d44a      	bmi.n	80180d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801803e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018042:	4560      	cmp	r0, ip
 8018044:	dd46      	ble.n	80180d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018046:	b22d      	sxth	r5, r5
 8018048:	fb0c 7505 	mla	r5, ip, r5, r7
 801804c:	9802      	ldr	r0, [sp, #8]
 801804e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8018052:	f06f 0501 	mvn.w	r5, #1
 8018056:	fb05 fb08 	mul.w	fp, r5, r8
 801805a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801805e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018062:	122f      	asrs	r7, r5, #8
 8018064:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018068:	fb17 f706 	smulbb	r7, r7, r6
 801806c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018070:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018074:	00ed      	lsls	r5, r5, #3
 8018076:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801807a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801807e:	10c7      	asrs	r7, r0, #3
 8018080:	b2ed      	uxtb	r5, r5
 8018082:	00c0      	lsls	r0, r0, #3
 8018084:	fb19 f906 	smulbb	r9, r9, r6
 8018088:	fb15 f506 	smulbb	r5, r5, r6
 801808c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018090:	b2c0      	uxtb	r0, r0
 8018092:	fa1f fc8c 	uxth.w	ip, ip
 8018096:	fb07 970a 	mla	r7, r7, sl, r9
 801809a:	fb00 500a 	mla	r0, r0, sl, r5
 801809e:	b2bf      	uxth	r7, r7
 80180a0:	b280      	uxth	r0, r0
 80180a2:	f10c 0501 	add.w	r5, ip, #1
 80180a6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80180aa:	f107 0901 	add.w	r9, r7, #1
 80180ae:	1c45      	adds	r5, r0, #1
 80180b0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80180b4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80180b8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80180bc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80180c0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80180c4:	ea45 0c0c 	orr.w	ip, r5, ip
 80180c8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80180cc:	ea4c 0c09 	orr.w	ip, ip, r9
 80180d0:	f824 c00b 	strh.w	ip, [r4, fp]
 80180d4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80180d6:	4401      	add	r1, r0
 80180d8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80180da:	f108 38ff 	add.w	r8, r8, #4294967295
 80180de:	4402      	add	r2, r0
 80180e0:	e75e      	b.n	8017fa0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80180e2:	b005      	add	sp, #20
 80180e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080180e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80180e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180ec:	b085      	sub	sp, #20
 80180ee:	4693      	mov	fp, r2
 80180f0:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80180f2:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80180f4:	6870      	ldr	r0, [r6, #4]
 80180f6:	9101      	str	r1, [sp, #4]
 80180f8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80180fc:	fb00 2404 	mla	r4, r0, r4, r2
 8018100:	6832      	ldr	r2, [r6, #0]
 8018102:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8018106:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801810a:	682a      	ldr	r2, [r5, #0]
 801810c:	9202      	str	r2, [sp, #8]
 801810e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018112:	9a01      	ldr	r2, [sp, #4]
 8018114:	2a00      	cmp	r2, #0
 8018116:	dc03      	bgt.n	8018120 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018118:	f1bb 0f00 	cmp.w	fp, #0
 801811c:	f340 809a 	ble.w	8018254 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8018120:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018122:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018126:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801812a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801812e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018130:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018134:	2b00      	cmp	r3, #0
 8018136:	dd0c      	ble.n	8018152 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8018138:	1406      	asrs	r6, r0, #16
 801813a:	d405      	bmi.n	8018148 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801813c:	454e      	cmp	r6, r9
 801813e:	da03      	bge.n	8018148 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018140:	1416      	asrs	r6, r2, #16
 8018142:	d401      	bmi.n	8018148 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018144:	4546      	cmp	r6, r8
 8018146:	db05      	blt.n	8018154 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018148:	4470      	add	r0, lr
 801814a:	4462      	add	r2, ip
 801814c:	3b01      	subs	r3, #1
 801814e:	3402      	adds	r4, #2
 8018150:	e7f0      	b.n	8018134 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018152:	d00f      	beq.n	8018174 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018154:	1e5e      	subs	r6, r3, #1
 8018156:	fb0e 0706 	mla	r7, lr, r6, r0
 801815a:	143f      	asrs	r7, r7, #16
 801815c:	d541      	bpl.n	80181e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801815e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018162:	4698      	mov	r8, r3
 8018164:	9603      	str	r6, [sp, #12]
 8018166:	f1b8 0f00 	cmp.w	r8, #0
 801816a:	dc56      	bgt.n	801821a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801816c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018170:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018174:	9b01      	ldr	r3, [sp, #4]
 8018176:	2b00      	cmp	r3, #0
 8018178:	dd6c      	ble.n	8018254 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801817a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801817e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018182:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018186:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018188:	ee31 1a05 	vadd.f32	s2, s2, s10
 801818c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018190:	eeb0 6a62 	vmov.f32	s12, s5
 8018194:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018198:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801819c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80181a0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80181a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80181a8:	eeb0 6a43 	vmov.f32	s12, s6
 80181ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80181b0:	ee12 2a90 	vmov	r2, s5
 80181b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80181b8:	fb92 fef3 	sdiv	lr, r2, r3
 80181bc:	ee13 2a10 	vmov	r2, s6
 80181c0:	fb92 fcf3 	sdiv	ip, r2, r3
 80181c4:	9b01      	ldr	r3, [sp, #4]
 80181c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80181ca:	3b01      	subs	r3, #1
 80181cc:	9301      	str	r3, [sp, #4]
 80181ce:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80181d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80181d4:	eeb0 3a67 	vmov.f32	s6, s15
 80181d8:	bf08      	it	eq
 80181da:	465b      	moveq	r3, fp
 80181dc:	eef0 2a47 	vmov.f32	s5, s14
 80181e0:	e797      	b.n	8018112 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80181e2:	454f      	cmp	r7, r9
 80181e4:	dabb      	bge.n	801815e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80181e6:	fb0c 2606 	mla	r6, ip, r6, r2
 80181ea:	1436      	asrs	r6, r6, #16
 80181ec:	d4b7      	bmi.n	801815e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80181ee:	4546      	cmp	r6, r8
 80181f0:	dab5      	bge.n	801815e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80181f2:	461e      	mov	r6, r3
 80181f4:	46a0      	mov	r8, r4
 80181f6:	2e00      	cmp	r6, #0
 80181f8:	ddb8      	ble.n	801816c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80181fa:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80181fe:	9902      	ldr	r1, [sp, #8]
 8018200:	1417      	asrs	r7, r2, #16
 8018202:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018206:	fb0a 9707 	mla	r7, sl, r7, r9
 801820a:	4470      	add	r0, lr
 801820c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018210:	f828 7b02 	strh.w	r7, [r8], #2
 8018214:	4462      	add	r2, ip
 8018216:	3e01      	subs	r6, #1
 8018218:	e7ed      	b.n	80181f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801821a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801821e:	d414      	bmi.n	801824a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018220:	68ae      	ldr	r6, [r5, #8]
 8018222:	454e      	cmp	r6, r9
 8018224:	dd11      	ble.n	801824a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018226:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801822a:	d40e      	bmi.n	801824a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801822c:	68ef      	ldr	r7, [r5, #12]
 801822e:	4557      	cmp	r7, sl
 8018230:	dd0b      	ble.n	801824a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018232:	b236      	sxth	r6, r6
 8018234:	fb0a 9606 	mla	r6, sl, r6, r9
 8018238:	9f02      	ldr	r7, [sp, #8]
 801823a:	f06f 0101 	mvn.w	r1, #1
 801823e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018242:	fb01 f608 	mul.w	r6, r1, r8
 8018246:	9903      	ldr	r1, [sp, #12]
 8018248:	538f      	strh	r7, [r1, r6]
 801824a:	4470      	add	r0, lr
 801824c:	4462      	add	r2, ip
 801824e:	f108 38ff 	add.w	r8, r8, #4294967295
 8018252:	e788      	b.n	8018166 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018254:	b005      	add	sp, #20
 8018256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801825a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801825a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801825e:	b087      	sub	sp, #28
 8018260:	468b      	mov	fp, r1
 8018262:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8018264:	9203      	str	r2, [sp, #12]
 8018266:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801826a:	9204      	str	r2, [sp, #16]
 801826c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8018270:	6841      	ldr	r1, [r0, #4]
 8018272:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8018276:	fb01 2505 	mla	r5, r1, r5, r2
 801827a:	6802      	ldr	r2, [r0, #0]
 801827c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8018280:	f8d9 2000 	ldr.w	r2, [r9]
 8018284:	9201      	str	r2, [sp, #4]
 8018286:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801828a:	f1bb 0f00 	cmp.w	fp, #0
 801828e:	dc03      	bgt.n	8018298 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018290:	9a03      	ldr	r2, [sp, #12]
 8018292:	2a00      	cmp	r2, #0
 8018294:	f340 8159 	ble.w	801854a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018298:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801829a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801829e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80182a2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80182a6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80182a8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80182ac:	2b00      	cmp	r3, #0
 80182ae:	dd0e      	ble.n	80182ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80182b0:	1402      	asrs	r2, r0, #16
 80182b2:	d405      	bmi.n	80182c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80182b4:	42ba      	cmp	r2, r7
 80182b6:	da03      	bge.n	80182c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80182b8:	140a      	asrs	r2, r1, #16
 80182ba:	d401      	bmi.n	80182c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80182bc:	42b2      	cmp	r2, r6
 80182be:	db07      	blt.n	80182d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80182c0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80182c2:	4410      	add	r0, r2
 80182c4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80182c6:	3b01      	subs	r3, #1
 80182c8:	4411      	add	r1, r2
 80182ca:	3502      	adds	r5, #2
 80182cc:	e7ee      	b.n	80182ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80182ce:	d017      	beq.n	8018300 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80182d0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80182d2:	1e5a      	subs	r2, r3, #1
 80182d4:	fb04 0402 	mla	r4, r4, r2, r0
 80182d8:	1424      	asrs	r4, r4, #16
 80182da:	d409      	bmi.n	80182f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80182dc:	42bc      	cmp	r4, r7
 80182de:	da07      	bge.n	80182f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80182e0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80182e2:	fb04 1202 	mla	r2, r4, r2, r1
 80182e6:	1412      	asrs	r2, r2, #16
 80182e8:	d402      	bmi.n	80182f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80182ea:	42b2      	cmp	r2, r6
 80182ec:	f2c0 80bf 	blt.w	801846e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80182f0:	2700      	movs	r7, #0
 80182f2:	19da      	adds	r2, r3, r7
 80182f4:	2a00      	cmp	r2, #0
 80182f6:	dc3e      	bgt.n	8018376 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80182f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80182fc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8018300:	f1bb 0f00 	cmp.w	fp, #0
 8018304:	f340 8121 	ble.w	801854a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018308:	ee30 0a04 	vadd.f32	s0, s0, s8
 801830c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018310:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018314:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018316:	f1bb 0b01 	subs.w	fp, fp, #1
 801831a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801831e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018322:	eeb0 6a62 	vmov.f32	s12, s5
 8018326:	ee61 7a27 	vmul.f32	s15, s2, s15
 801832a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801832e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018332:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8018336:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801833a:	eeb0 6a43 	vmov.f32	s12, s6
 801833e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018342:	ee12 2a90 	vmov	r2, s5
 8018346:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801834a:	fb92 f3f3 	sdiv	r3, r2, r3
 801834e:	ee13 2a10 	vmov	r2, s6
 8018352:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018356:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018358:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801835a:	fb92 f3f3 	sdiv	r3, r2, r3
 801835e:	9a03      	ldr	r2, [sp, #12]
 8018360:	9314      	str	r3, [sp, #80]	@ 0x50
 8018362:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8018366:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018368:	eeb0 3a67 	vmov.f32	s6, s15
 801836c:	bf08      	it	eq
 801836e:	4613      	moveq	r3, r2
 8018370:	eef0 2a47 	vmov.f32	s5, s14
 8018374:	e789      	b.n	801828a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018376:	1406      	asrs	r6, r0, #16
 8018378:	d42d      	bmi.n	80183d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801837a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801837e:	42b4      	cmp	r4, r6
 8018380:	dd29      	ble.n	80183d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018382:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8018386:	d426      	bmi.n	80183d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018388:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801838c:	4562      	cmp	r2, ip
 801838e:	dd22      	ble.n	80183d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018390:	b224      	sxth	r4, r4
 8018392:	9a01      	ldr	r2, [sp, #4]
 8018394:	fb0c 6404 	mla	r4, ip, r4, r6
 8018398:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801839c:	0e22      	lsrs	r2, r4, #24
 801839e:	d01a      	beq.n	80183d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80183a0:	9e04      	ldr	r6, [sp, #16]
 80183a2:	4372      	muls	r2, r6
 80183a4:	1c56      	adds	r6, r2, #1
 80183a6:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80183aa:	1212      	asrs	r2, r2, #8
 80183ac:	0a26      	lsrs	r6, r4, #8
 80183ae:	2aff      	cmp	r2, #255	@ 0xff
 80183b0:	9605      	str	r6, [sp, #20]
 80183b2:	d116      	bne.n	80183e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80183b4:	f06f 0201 	mvn.w	r2, #1
 80183b8:	fb02 fc07 	mul.w	ip, r2, r7
 80183bc:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80183c0:	0962      	lsrs	r2, r4, #5
 80183c2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80183c6:	f026 0607 	bic.w	r6, r6, #7
 80183ca:	4316      	orrs	r6, r2
 80183cc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80183d0:	4326      	orrs	r6, r4
 80183d2:	f825 600c 	strh.w	r6, [r5, ip]
 80183d6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80183d8:	4410      	add	r0, r2
 80183da:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80183dc:	3f01      	subs	r7, #1
 80183de:	4411      	add	r1, r2
 80183e0:	e787      	b.n	80182f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80183e2:	f06f 0601 	mvn.w	r6, #1
 80183e6:	437e      	muls	r6, r7
 80183e8:	fa1f fa82 	uxth.w	sl, r2
 80183ec:	f835 8006 	ldrh.w	r8, [r5, r6]
 80183f0:	9602      	str	r6, [sp, #8]
 80183f2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80183f6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80183fa:	43d2      	mvns	r2, r2
 80183fc:	b2d2      	uxtb	r2, r2
 80183fe:	fb1c fc0a 	smulbb	ip, ip, sl
 8018402:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8018406:	fb0e ce02 	mla	lr, lr, r2, ip
 801840a:	b2e4      	uxtb	r4, r4
 801840c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8018410:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018414:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8018418:	fa5f f888 	uxtb.w	r8, r8
 801841c:	fb14 f40a 	smulbb	r4, r4, sl
 8018420:	fb08 4402 	mla	r4, r8, r2, r4
 8018424:	fa1f fe8e 	uxth.w	lr, lr
 8018428:	fb16 f60a 	smulbb	r6, r6, sl
 801842c:	b2a4      	uxth	r4, r4
 801842e:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8018432:	fb0c 6c02 	mla	ip, ip, r2, r6
 8018436:	f10e 0201 	add.w	r2, lr, #1
 801843a:	1c66      	adds	r6, r4, #1
 801843c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8018440:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8018444:	fa1f fc8c 	uxth.w	ip, ip
 8018448:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801844c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8018450:	ea46 0e0e 	orr.w	lr, r6, lr
 8018454:	f10c 0601 	add.w	r6, ip, #1
 8018458:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801845c:	0976      	lsrs	r6, r6, #5
 801845e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018462:	9a02      	ldr	r2, [sp, #8]
 8018464:	ea4e 0e06 	orr.w	lr, lr, r6
 8018468:	f825 e002 	strh.w	lr, [r5, r2]
 801846c:	e7b3      	b.n	80183d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801846e:	f04f 0800 	mov.w	r8, #0
 8018472:	eba3 0208 	sub.w	r2, r3, r8
 8018476:	2a00      	cmp	r2, #0
 8018478:	f77f af3e 	ble.w	80182f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801847c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8018480:	1404      	asrs	r4, r0, #16
 8018482:	140a      	asrs	r2, r1, #16
 8018484:	fb06 4202 	mla	r2, r6, r2, r4
 8018488:	9c01      	ldr	r4, [sp, #4]
 801848a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801848e:	0e22      	lsrs	r2, r4, #24
 8018490:	d016      	beq.n	80184c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8018492:	9e04      	ldr	r6, [sp, #16]
 8018494:	4372      	muls	r2, r6
 8018496:	1c56      	adds	r6, r2, #1
 8018498:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801849c:	1212      	asrs	r2, r2, #8
 801849e:	2aff      	cmp	r2, #255	@ 0xff
 80184a0:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80184a4:	d113      	bne.n	80184ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80184a6:	0962      	lsrs	r2, r4, #5
 80184a8:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80184ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80184b0:	f026 0607 	bic.w	r6, r6, #7
 80184b4:	4316      	orrs	r6, r2
 80184b6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80184ba:	4326      	orrs	r6, r4
 80184bc:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80184c0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80184c2:	4410      	add	r0, r2
 80184c4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80184c6:	f108 0801 	add.w	r8, r8, #1
 80184ca:	4411      	add	r1, r2
 80184cc:	e7d1      	b.n	8018472 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80184ce:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80184d2:	fa1f fa82 	uxth.w	sl, r2
 80184d6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80184da:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80184de:	43d2      	mvns	r2, r2
 80184e0:	b2d2      	uxtb	r2, r2
 80184e2:	fb17 f70a 	smulbb	r7, r7, sl
 80184e6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80184ea:	fb0c 7c02 	mla	ip, ip, r2, r7
 80184ee:	b2e4      	uxtb	r4, r4
 80184f0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80184f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80184f8:	fa5f fe8e 	uxtb.w	lr, lr
 80184fc:	fb14 f40a 	smulbb	r4, r4, sl
 8018500:	fb0e 4402 	mla	r4, lr, r2, r4
 8018504:	b2f6      	uxtb	r6, r6
 8018506:	fa1f fc8c 	uxth.w	ip, ip
 801850a:	fb16 f60a 	smulbb	r6, r6, sl
 801850e:	b2a4      	uxth	r4, r4
 8018510:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018514:	fb07 6702 	mla	r7, r7, r2, r6
 8018518:	f10c 0201 	add.w	r2, ip, #1
 801851c:	1c66      	adds	r6, r4, #1
 801851e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018522:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8018526:	b2bf      	uxth	r7, r7
 8018528:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801852c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018530:	ea46 0c0c 	orr.w	ip, r6, ip
 8018534:	1c7e      	adds	r6, r7, #1
 8018536:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801853a:	0976      	lsrs	r6, r6, #5
 801853c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018540:	ea4c 0c06 	orr.w	ip, ip, r6
 8018544:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8018548:	e7ba      	b.n	80184c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801854a:	b007      	add	sp, #28
 801854c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018550 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018554:	b085      	sub	sp, #20
 8018556:	468b      	mov	fp, r1
 8018558:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801855a:	9203      	str	r2, [sp, #12]
 801855c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018560:	6841      	ldr	r1, [r0, #4]
 8018562:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8018566:	fb01 2404 	mla	r4, r1, r4, r2
 801856a:	6802      	ldr	r2, [r0, #0]
 801856c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018570:	f8d8 2000 	ldr.w	r2, [r8]
 8018574:	9201      	str	r2, [sp, #4]
 8018576:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801857a:	f1bb 0f00 	cmp.w	fp, #0
 801857e:	dc03      	bgt.n	8018588 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018580:	9a03      	ldr	r2, [sp, #12]
 8018582:	2a00      	cmp	r2, #0
 8018584:	f340 814f 	ble.w	8018826 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8018588:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801858a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801858e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8018592:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018596:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018598:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801859c:	2b00      	cmp	r3, #0
 801859e:	dd0e      	ble.n	80185be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80185a0:	1408      	asrs	r0, r1, #16
 80185a2:	d405      	bmi.n	80185b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80185a4:	42b8      	cmp	r0, r7
 80185a6:	da03      	bge.n	80185b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80185a8:	1410      	asrs	r0, r2, #16
 80185aa:	d401      	bmi.n	80185b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80185ac:	42b0      	cmp	r0, r6
 80185ae:	db07      	blt.n	80185c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80185b0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80185b2:	4401      	add	r1, r0
 80185b4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80185b6:	3b01      	subs	r3, #1
 80185b8:	4402      	add	r2, r0
 80185ba:	3402      	adds	r4, #2
 80185bc:	e7ee      	b.n	801859c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80185be:	d017      	beq.n	80185f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80185c0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80185c2:	1e58      	subs	r0, r3, #1
 80185c4:	fb05 1500 	mla	r5, r5, r0, r1
 80185c8:	142d      	asrs	r5, r5, #16
 80185ca:	d409      	bmi.n	80185e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80185cc:	42bd      	cmp	r5, r7
 80185ce:	da07      	bge.n	80185e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80185d0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80185d2:	fb05 2000 	mla	r0, r5, r0, r2
 80185d6:	1400      	asrs	r0, r0, #16
 80185d8:	d402      	bmi.n	80185e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80185da:	42b0      	cmp	r0, r6
 80185dc:	f2c0 80ba 	blt.w	8018754 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80185e0:	2600      	movs	r6, #0
 80185e2:	1998      	adds	r0, r3, r6
 80185e4:	2800      	cmp	r0, #0
 80185e6:	dc3e      	bgt.n	8018666 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80185e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80185ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80185f0:	f1bb 0f00 	cmp.w	fp, #0
 80185f4:	f340 8117 	ble.w	8018826 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80185f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80185fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018600:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018604:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018606:	f1bb 0b01 	subs.w	fp, fp, #1
 801860a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801860e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018612:	eeb0 6a62 	vmov.f32	s12, s5
 8018616:	ee61 7a27 	vmul.f32	s15, s2, s15
 801861a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801861e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018622:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018626:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801862a:	eeb0 6a43 	vmov.f32	s12, s6
 801862e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018632:	ee12 2a90 	vmov	r2, s5
 8018636:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801863a:	fb92 f3f3 	sdiv	r3, r2, r3
 801863e:	ee13 2a10 	vmov	r2, s6
 8018642:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018646:	9311      	str	r3, [sp, #68]	@ 0x44
 8018648:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801864a:	fb92 f3f3 	sdiv	r3, r2, r3
 801864e:	9a03      	ldr	r2, [sp, #12]
 8018650:	9312      	str	r3, [sp, #72]	@ 0x48
 8018652:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8018656:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018658:	eeb0 3a67 	vmov.f32	s6, s15
 801865c:	bf08      	it	eq
 801865e:	4613      	moveq	r3, r2
 8018660:	eef0 2a47 	vmov.f32	s5, s14
 8018664:	e789      	b.n	801857a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8018666:	140f      	asrs	r7, r1, #16
 8018668:	d424      	bmi.n	80186b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801866a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801866e:	42bd      	cmp	r5, r7
 8018670:	dd20      	ble.n	80186b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018672:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018676:	d41d      	bmi.n	80186b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018678:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801867c:	4560      	cmp	r0, ip
 801867e:	dd19      	ble.n	80186b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018680:	b22d      	sxth	r5, r5
 8018682:	fb0c 7505 	mla	r5, ip, r5, r7
 8018686:	9801      	ldr	r0, [sp, #4]
 8018688:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801868c:	0e07      	lsrs	r7, r0, #24
 801868e:	2fff      	cmp	r7, #255	@ 0xff
 8018690:	d116      	bne.n	80186c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018692:	f06f 0501 	mvn.w	r5, #1
 8018696:	fb05 f706 	mul.w	r7, r5, r6
 801869a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801869e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80186a2:	0945      	lsrs	r5, r0, #5
 80186a4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80186a8:	ea4c 0505 	orr.w	r5, ip, r5
 80186ac:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80186b0:	4305      	orrs	r5, r0
 80186b2:	53e5      	strh	r5, [r4, r7]
 80186b4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80186b6:	4401      	add	r1, r0
 80186b8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80186ba:	3e01      	subs	r6, #1
 80186bc:	4402      	add	r2, r0
 80186be:	e790      	b.n	80185e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80186c0:	b2fd      	uxtb	r5, r7
 80186c2:	2f00      	cmp	r7, #0
 80186c4:	d0f6      	beq.n	80186b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80186c6:	f06f 0701 	mvn.w	r7, #1
 80186ca:	4377      	muls	r7, r6
 80186cc:	fa1f f985 	uxth.w	r9, r5
 80186d0:	f834 e007 	ldrh.w	lr, [r4, r7]
 80186d4:	9702      	str	r7, [sp, #8]
 80186d6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80186da:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80186de:	43ed      	mvns	r5, r5
 80186e0:	b2ed      	uxtb	r5, r5
 80186e2:	fb17 f709 	smulbb	r7, r7, r9
 80186e6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80186ea:	fb0c 7c05 	mla	ip, ip, r5, r7
 80186ee:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80186f2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80186f6:	b2c0      	uxtb	r0, r0
 80186f8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80186fc:	fa5f fe8e 	uxtb.w	lr, lr
 8018700:	fb10 f009 	smulbb	r0, r0, r9
 8018704:	fb0e 0005 	mla	r0, lr, r5, r0
 8018708:	b280      	uxth	r0, r0
 801870a:	fa1f fc8c 	uxth.w	ip, ip
 801870e:	fb1a fa09 	smulbb	sl, sl, r9
 8018712:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018716:	fb07 a705 	mla	r7, r7, r5, sl
 801871a:	f100 0a01 	add.w	sl, r0, #1
 801871e:	f10c 0501 	add.w	r5, ip, #1
 8018722:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8018726:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801872a:	b2bf      	uxth	r7, r7
 801872c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018730:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018734:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018738:	f107 0a01 	add.w	sl, r7, #1
 801873c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018740:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018744:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018748:	9802      	ldr	r0, [sp, #8]
 801874a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801874e:	f824 c000 	strh.w	ip, [r4, r0]
 8018752:	e7af      	b.n	80186b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018754:	f04f 0e00 	mov.w	lr, #0
 8018758:	eba3 000e 	sub.w	r0, r3, lr
 801875c:	2800      	cmp	r0, #0
 801875e:	f77f af43 	ble.w	80185e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018762:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8018766:	140d      	asrs	r5, r1, #16
 8018768:	1410      	asrs	r0, r2, #16
 801876a:	fb06 5000 	mla	r0, r6, r0, r5
 801876e:	9d01      	ldr	r5, [sp, #4]
 8018770:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8018774:	0e2e      	lsrs	r6, r5, #24
 8018776:	2eff      	cmp	r6, #255	@ 0xff
 8018778:	d112      	bne.n	80187a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801877a:	482c      	ldr	r0, [pc, #176]	@ (801882c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801877c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8018780:	0968      	lsrs	r0, r5, #5
 8018782:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018786:	4330      	orrs	r0, r6
 8018788:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801878c:	4328      	orrs	r0, r5
 801878e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8018792:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018794:	4401      	add	r1, r0
 8018796:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018798:	f10e 0e01 	add.w	lr, lr, #1
 801879c:	4402      	add	r2, r0
 801879e:	e7db      	b.n	8018758 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80187a0:	b2f0      	uxtb	r0, r6
 80187a2:	2e00      	cmp	r6, #0
 80187a4:	d0f5      	beq.n	8018792 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80187a6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80187aa:	fa1f f980 	uxth.w	r9, r0
 80187ae:	ea4f 272c 	mov.w	r7, ip, asr #8
 80187b2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80187b6:	43c0      	mvns	r0, r0
 80187b8:	b2c0      	uxtb	r0, r0
 80187ba:	fb16 f609 	smulbb	r6, r6, r9
 80187be:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80187c2:	fb07 6700 	mla	r7, r7, r0, r6
 80187c6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80187ca:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80187ce:	b2ed      	uxtb	r5, r5
 80187d0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80187d4:	fa5f fc8c 	uxtb.w	ip, ip
 80187d8:	fb15 f509 	smulbb	r5, r5, r9
 80187dc:	fb0c 5500 	mla	r5, ip, r0, r5
 80187e0:	b2bf      	uxth	r7, r7
 80187e2:	fb1a fa09 	smulbb	sl, sl, r9
 80187e6:	b2ad      	uxth	r5, r5
 80187e8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80187ec:	fb06 a600 	mla	r6, r6, r0, sl
 80187f0:	1c78      	adds	r0, r7, #1
 80187f2:	f105 0a01 	add.w	sl, r5, #1
 80187f6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80187fa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80187fe:	b2b6      	uxth	r6, r6
 8018800:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018804:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018808:	ea4a 0707 	orr.w	r7, sl, r7
 801880c:	f106 0a01 	add.w	sl, r6, #1
 8018810:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018814:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018818:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801881c:	ea47 070a 	orr.w	r7, r7, sl
 8018820:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8018824:	e7b5      	b.n	8018792 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8018826:	b005      	add	sp, #20
 8018828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801882c:	fffff800 	.word	0xfffff800

08018830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018834:	b087      	sub	sp, #28
 8018836:	468b      	mov	fp, r1
 8018838:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801883a:	9203      	str	r2, [sp, #12]
 801883c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018840:	9204      	str	r2, [sp, #16]
 8018842:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8018846:	6841      	ldr	r1, [r0, #4]
 8018848:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801884c:	fb01 2404 	mla	r4, r1, r4, r2
 8018850:	6802      	ldr	r2, [r0, #0]
 8018852:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018856:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801885a:	3201      	adds	r2, #1
 801885c:	f022 0201 	bic.w	r2, r2, #1
 8018860:	9200      	str	r2, [sp, #0]
 8018862:	f8d9 2000 	ldr.w	r2, [r9]
 8018866:	9201      	str	r2, [sp, #4]
 8018868:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801886c:	f1bb 0f00 	cmp.w	fp, #0
 8018870:	dc03      	bgt.n	801887a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018872:	9a03      	ldr	r2, [sp, #12]
 8018874:	2a00      	cmp	r2, #0
 8018876:	f340 8169 	ble.w	8018b4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801887a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801887c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8018880:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8018884:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8018888:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801888a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801888e:	2b00      	cmp	r3, #0
 8018890:	dd0e      	ble.n	80188b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018892:	1402      	asrs	r2, r0, #16
 8018894:	d405      	bmi.n	80188a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018896:	42ba      	cmp	r2, r7
 8018898:	da03      	bge.n	80188a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801889a:	140a      	asrs	r2, r1, #16
 801889c:	d401      	bmi.n	80188a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801889e:	42b2      	cmp	r2, r6
 80188a0:	db07      	blt.n	80188b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80188a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80188a4:	4410      	add	r0, r2
 80188a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80188a8:	3b01      	subs	r3, #1
 80188aa:	4411      	add	r1, r2
 80188ac:	3402      	adds	r4, #2
 80188ae:	e7ee      	b.n	801888e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80188b0:	d017      	beq.n	80188e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80188b2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80188b4:	1e5a      	subs	r2, r3, #1
 80188b6:	fb05 0502 	mla	r5, r5, r2, r0
 80188ba:	142d      	asrs	r5, r5, #16
 80188bc:	d409      	bmi.n	80188d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80188be:	42bd      	cmp	r5, r7
 80188c0:	da07      	bge.n	80188d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80188c2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80188c4:	fb05 1202 	mla	r2, r5, r2, r1
 80188c8:	1412      	asrs	r2, r2, #16
 80188ca:	d402      	bmi.n	80188d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80188cc:	42b2      	cmp	r2, r6
 80188ce:	f2c0 80c7 	blt.w	8018a60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80188d2:	2700      	movs	r7, #0
 80188d4:	19da      	adds	r2, r3, r7
 80188d6:	2a00      	cmp	r2, #0
 80188d8:	dc3e      	bgt.n	8018958 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80188da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80188de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80188e2:	f1bb 0f00 	cmp.w	fp, #0
 80188e6:	f340 8131 	ble.w	8018b4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80188ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 80188ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80188f2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80188f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80188f8:	f1bb 0b01 	subs.w	fp, fp, #1
 80188fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018900:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018904:	eeb0 6a62 	vmov.f32	s12, s5
 8018908:	ee61 7a27 	vmul.f32	s15, s2, s15
 801890c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018910:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018914:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8018918:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801891c:	eeb0 6a43 	vmov.f32	s12, s6
 8018920:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018924:	ee12 2a90 	vmov	r2, s5
 8018928:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801892c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018930:	ee13 2a10 	vmov	r2, s6
 8018934:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018938:	9313      	str	r3, [sp, #76]	@ 0x4c
 801893a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801893c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018940:	9a03      	ldr	r2, [sp, #12]
 8018942:	9314      	str	r3, [sp, #80]	@ 0x50
 8018944:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8018948:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801894a:	eeb0 3a67 	vmov.f32	s6, s15
 801894e:	bf08      	it	eq
 8018950:	4613      	moveq	r3, r2
 8018952:	eef0 2a47 	vmov.f32	s5, s14
 8018956:	e789      	b.n	801886c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018958:	1405      	asrs	r5, r0, #16
 801895a:	d435      	bmi.n	80189c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801895c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8018960:	42aa      	cmp	r2, r5
 8018962:	dd31      	ble.n	80189c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018964:	140e      	asrs	r6, r1, #16
 8018966:	d42f      	bmi.n	80189c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018968:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801896c:	42b2      	cmp	r2, r6
 801896e:	dd2b      	ble.n	80189c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018970:	9a00      	ldr	r2, [sp, #0]
 8018972:	fb06 5502 	mla	r5, r6, r2, r5
 8018976:	086a      	lsrs	r2, r5, #1
 8018978:	9e01      	ldr	r6, [sp, #4]
 801897a:	5cb2      	ldrb	r2, [r6, r2]
 801897c:	07ee      	lsls	r6, r5, #31
 801897e:	bf54      	ite	pl
 8018980:	f002 020f 	andpl.w	r2, r2, #15
 8018984:	1112      	asrmi	r2, r2, #4
 8018986:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801898a:	b2d2      	uxtb	r2, r2
 801898c:	b1e2      	cbz	r2, 80189c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801898e:	9d04      	ldr	r5, [sp, #16]
 8018990:	436a      	muls	r2, r5
 8018992:	1c55      	adds	r5, r2, #1
 8018994:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8018998:	4d6e      	ldr	r5, [pc, #440]	@ (8018b54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801899a:	682d      	ldr	r5, [r5, #0]
 801899c:	1212      	asrs	r2, r2, #8
 801899e:	0a2e      	lsrs	r6, r5, #8
 80189a0:	2aff      	cmp	r2, #255	@ 0xff
 80189a2:	9605      	str	r6, [sp, #20]
 80189a4:	d116      	bne.n	80189d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80189a6:	f06f 0201 	mvn.w	r2, #1
 80189aa:	fb02 fc07 	mul.w	ip, r2, r7
 80189ae:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80189b2:	096a      	lsrs	r2, r5, #5
 80189b4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80189b8:	f026 0607 	bic.w	r6, r6, #7
 80189bc:	4316      	orrs	r6, r2
 80189be:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80189c2:	432e      	orrs	r6, r5
 80189c4:	f824 600c 	strh.w	r6, [r4, ip]
 80189c8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80189ca:	4410      	add	r0, r2
 80189cc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80189ce:	3f01      	subs	r7, #1
 80189d0:	4411      	add	r1, r2
 80189d2:	e77f      	b.n	80188d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80189d4:	f06f 0601 	mvn.w	r6, #1
 80189d8:	437e      	muls	r6, r7
 80189da:	fa1f fa82 	uxth.w	sl, r2
 80189de:	f834 8006 	ldrh.w	r8, [r4, r6]
 80189e2:	9602      	str	r6, [sp, #8]
 80189e4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80189e8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80189ec:	43d2      	mvns	r2, r2
 80189ee:	b2d2      	uxtb	r2, r2
 80189f0:	fb1c fc0a 	smulbb	ip, ip, sl
 80189f4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80189f8:	fb0e ce02 	mla	lr, lr, r2, ip
 80189fc:	b2ed      	uxtb	r5, r5
 80189fe:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8018a02:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018a06:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8018a0a:	fa5f f888 	uxtb.w	r8, r8
 8018a0e:	fb15 f50a 	smulbb	r5, r5, sl
 8018a12:	fb08 5502 	mla	r5, r8, r2, r5
 8018a16:	fa1f fe8e 	uxth.w	lr, lr
 8018a1a:	fb16 f60a 	smulbb	r6, r6, sl
 8018a1e:	b2ad      	uxth	r5, r5
 8018a20:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8018a24:	fb0c 6c02 	mla	ip, ip, r2, r6
 8018a28:	f10e 0201 	add.w	r2, lr, #1
 8018a2c:	1c6e      	adds	r6, r5, #1
 8018a2e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8018a32:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8018a36:	fa1f fc8c 	uxth.w	ip, ip
 8018a3a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018a3e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8018a42:	ea46 0e0e 	orr.w	lr, r6, lr
 8018a46:	f10c 0601 	add.w	r6, ip, #1
 8018a4a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8018a4e:	0976      	lsrs	r6, r6, #5
 8018a50:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018a54:	9a02      	ldr	r2, [sp, #8]
 8018a56:	ea4e 0e06 	orr.w	lr, lr, r6
 8018a5a:	f824 e002 	strh.w	lr, [r4, r2]
 8018a5e:	e7b3      	b.n	80189c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018a60:	f04f 0800 	mov.w	r8, #0
 8018a64:	eba3 0208 	sub.w	r2, r3, r8
 8018a68:	2a00      	cmp	r2, #0
 8018a6a:	f77f af36 	ble.w	80188da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8018a6e:	9e00      	ldr	r6, [sp, #0]
 8018a70:	1402      	asrs	r2, r0, #16
 8018a72:	140d      	asrs	r5, r1, #16
 8018a74:	fb06 2505 	mla	r5, r6, r5, r2
 8018a78:	086a      	lsrs	r2, r5, #1
 8018a7a:	9e01      	ldr	r6, [sp, #4]
 8018a7c:	5cb2      	ldrb	r2, [r6, r2]
 8018a7e:	07ed      	lsls	r5, r5, #31
 8018a80:	bf54      	ite	pl
 8018a82:	f002 020f 	andpl.w	r2, r2, #15
 8018a86:	1112      	asrmi	r2, r2, #4
 8018a88:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018a8c:	b2d2      	uxtb	r2, r2
 8018a8e:	b1c2      	cbz	r2, 8018ac2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8018a90:	9d04      	ldr	r5, [sp, #16]
 8018a92:	436a      	muls	r2, r5
 8018a94:	1c55      	adds	r5, r2, #1
 8018a96:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8018a9a:	4d2e      	ldr	r5, [pc, #184]	@ (8018b54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8018a9c:	1212      	asrs	r2, r2, #8
 8018a9e:	682e      	ldr	r6, [r5, #0]
 8018aa0:	2aff      	cmp	r2, #255	@ 0xff
 8018aa2:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8018aa6:	d113      	bne.n	8018ad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018aa8:	0972      	lsrs	r2, r6, #5
 8018aaa:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8018aae:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018ab2:	f025 0507 	bic.w	r5, r5, #7
 8018ab6:	4315      	orrs	r5, r2
 8018ab8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8018abc:	4335      	orrs	r5, r6
 8018abe:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8018ac2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018ac4:	4410      	add	r0, r2
 8018ac6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018ac8:	f108 0801 	add.w	r8, r8, #1
 8018acc:	4411      	add	r1, r2
 8018ace:	e7c9      	b.n	8018a64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018ad0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8018ad4:	fa1f fa82 	uxth.w	sl, r2
 8018ad8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018adc:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8018ae0:	43d2      	mvns	r2, r2
 8018ae2:	b2d2      	uxtb	r2, r2
 8018ae4:	fb17 f70a 	smulbb	r7, r7, sl
 8018ae8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018aec:	fb0c 7c02 	mla	ip, ip, r2, r7
 8018af0:	b2f6      	uxtb	r6, r6
 8018af2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8018af6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018afa:	fa5f fe8e 	uxtb.w	lr, lr
 8018afe:	fb16 f60a 	smulbb	r6, r6, sl
 8018b02:	fb0e 6602 	mla	r6, lr, r2, r6
 8018b06:	b2ed      	uxtb	r5, r5
 8018b08:	fa1f fc8c 	uxth.w	ip, ip
 8018b0c:	fb15 f50a 	smulbb	r5, r5, sl
 8018b10:	b2b6      	uxth	r6, r6
 8018b12:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018b16:	fb07 5702 	mla	r7, r7, r2, r5
 8018b1a:	f10c 0201 	add.w	r2, ip, #1
 8018b1e:	1c75      	adds	r5, r6, #1
 8018b20:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018b24:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8018b28:	b2bf      	uxth	r7, r7
 8018b2a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018b2e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018b32:	ea45 0c0c 	orr.w	ip, r5, ip
 8018b36:	1c7d      	adds	r5, r7, #1
 8018b38:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8018b3c:	096d      	lsrs	r5, r5, #5
 8018b3e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018b42:	ea4c 0c05 	orr.w	ip, ip, r5
 8018b46:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8018b4a:	e7ba      	b.n	8018ac2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8018b4c:	b007      	add	sp, #28
 8018b4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b52:	bf00      	nop
 8018b54:	200023b0 	.word	0x200023b0

08018b58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b5c:	b087      	sub	sp, #28
 8018b5e:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8018e6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8018b62:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8018b64:	9205      	str	r2, [sp, #20]
 8018b66:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8018b6a:	9101      	str	r1, [sp, #4]
 8018b6c:	6841      	ldr	r1, [r0, #4]
 8018b6e:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8018b72:	fb01 2404 	mla	r4, r1, r4, r2
 8018b76:	6802      	ldr	r2, [r0, #0]
 8018b78:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018b7c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8018b80:	3201      	adds	r2, #1
 8018b82:	f022 0201 	bic.w	r2, r2, #1
 8018b86:	9202      	str	r2, [sp, #8]
 8018b88:	f8db 2000 	ldr.w	r2, [fp]
 8018b8c:	9203      	str	r2, [sp, #12]
 8018b8e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018b92:	9a01      	ldr	r2, [sp, #4]
 8018b94:	2a00      	cmp	r2, #0
 8018b96:	dc03      	bgt.n	8018ba0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018b98:	9a05      	ldr	r2, [sp, #20]
 8018b9a:	2a00      	cmp	r2, #0
 8018b9c:	f340 8162 	ble.w	8018e64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8018ba0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8018ba2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8018ba6:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8018baa:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8018bae:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018bb0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018bb4:	2b00      	cmp	r3, #0
 8018bb6:	dd0e      	ble.n	8018bd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018bb8:	1402      	asrs	r2, r0, #16
 8018bba:	d405      	bmi.n	8018bc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018bbc:	42ba      	cmp	r2, r7
 8018bbe:	da03      	bge.n	8018bc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018bc0:	140a      	asrs	r2, r1, #16
 8018bc2:	d401      	bmi.n	8018bc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018bc4:	42b2      	cmp	r2, r6
 8018bc6:	db07      	blt.n	8018bd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018bc8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018bca:	4410      	add	r0, r2
 8018bcc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018bce:	3b01      	subs	r3, #1
 8018bd0:	4411      	add	r1, r2
 8018bd2:	3402      	adds	r4, #2
 8018bd4:	e7ee      	b.n	8018bb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018bd6:	d017      	beq.n	8018c08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018bd8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8018bda:	1e5a      	subs	r2, r3, #1
 8018bdc:	fb05 0502 	mla	r5, r5, r2, r0
 8018be0:	142d      	asrs	r5, r5, #16
 8018be2:	d409      	bmi.n	8018bf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018be4:	42bd      	cmp	r5, r7
 8018be6:	da07      	bge.n	8018bf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018be8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8018bea:	fb05 1202 	mla	r2, r5, r2, r1
 8018bee:	1412      	asrs	r2, r2, #16
 8018bf0:	d402      	bmi.n	8018bf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018bf2:	42b2      	cmp	r2, r6
 8018bf4:	f2c0 80c3 	blt.w	8018d7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8018bf8:	2500      	movs	r5, #0
 8018bfa:	195a      	adds	r2, r3, r5
 8018bfc:	2a00      	cmp	r2, #0
 8018bfe:	dc3f      	bgt.n	8018c80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8018c00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018c04:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018c08:	9b01      	ldr	r3, [sp, #4]
 8018c0a:	2b00      	cmp	r3, #0
 8018c0c:	f340 812a 	ble.w	8018e64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8018c10:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018c14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018c18:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018c1c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018c1e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018c22:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018c26:	eeb0 6a62 	vmov.f32	s12, s5
 8018c2a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018c2e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c32:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018c36:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8018c3a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018c3e:	eeb0 6a43 	vmov.f32	s12, s6
 8018c42:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018c46:	ee12 2a90 	vmov	r2, s5
 8018c4a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018c4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c52:	ee13 2a10 	vmov	r2, s6
 8018c56:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018c58:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018c5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c5e:	9314      	str	r3, [sp, #80]	@ 0x50
 8018c60:	9b01      	ldr	r3, [sp, #4]
 8018c62:	9a05      	ldr	r2, [sp, #20]
 8018c64:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c68:	3b01      	subs	r3, #1
 8018c6a:	9301      	str	r3, [sp, #4]
 8018c6c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8018c70:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018c72:	eeb0 3a67 	vmov.f32	s6, s15
 8018c76:	bf08      	it	eq
 8018c78:	4613      	moveq	r3, r2
 8018c7a:	eef0 2a47 	vmov.f32	s5, s14
 8018c7e:	e788      	b.n	8018b92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018c80:	1406      	asrs	r6, r0, #16
 8018c82:	d42c      	bmi.n	8018cde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018c84:	f8db 2008 	ldr.w	r2, [fp, #8]
 8018c88:	42b2      	cmp	r2, r6
 8018c8a:	dd28      	ble.n	8018cde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018c8c:	140f      	asrs	r7, r1, #16
 8018c8e:	d426      	bmi.n	8018cde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018c90:	f8db 200c 	ldr.w	r2, [fp, #12]
 8018c94:	42ba      	cmp	r2, r7
 8018c96:	dd22      	ble.n	8018cde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018c98:	9a02      	ldr	r2, [sp, #8]
 8018c9a:	fb07 6602 	mla	r6, r7, r2, r6
 8018c9e:	0872      	lsrs	r2, r6, #1
 8018ca0:	9f03      	ldr	r7, [sp, #12]
 8018ca2:	5cba      	ldrb	r2, [r7, r2]
 8018ca4:	07f6      	lsls	r6, r6, #31
 8018ca6:	bf54      	ite	pl
 8018ca8:	f002 020f 	andpl.w	r2, r2, #15
 8018cac:	1112      	asrmi	r2, r2, #4
 8018cae:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018cb2:	b2d2      	uxtb	r2, r2
 8018cb4:	2aff      	cmp	r2, #255	@ 0xff
 8018cb6:	d118      	bne.n	8018cea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8018cb8:	f8d8 2000 	ldr.w	r2, [r8]
 8018cbc:	f06f 0601 	mvn.w	r6, #1
 8018cc0:	fb06 f705 	mul.w	r7, r6, r5
 8018cc4:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8018cc8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8018ccc:	0956      	lsrs	r6, r2, #5
 8018cce:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018cd2:	ea4c 0606 	orr.w	r6, ip, r6
 8018cd6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018cda:	4316      	orrs	r6, r2
 8018cdc:	53e6      	strh	r6, [r4, r7]
 8018cde:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018ce0:	4410      	add	r0, r2
 8018ce2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018ce4:	3d01      	subs	r5, #1
 8018ce6:	4411      	add	r1, r2
 8018ce8:	e787      	b.n	8018bfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8018cea:	2a00      	cmp	r2, #0
 8018cec:	d0f7      	beq.n	8018cde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018cee:	f06f 0601 	mvn.w	r6, #1
 8018cf2:	436e      	muls	r6, r5
 8018cf4:	f8d8 c000 	ldr.w	ip, [r8]
 8018cf8:	f834 e006 	ldrh.w	lr, [r4, r6]
 8018cfc:	9604      	str	r6, [sp, #16]
 8018cfe:	fa1f f982 	uxth.w	r9, r2
 8018d02:	ea4f 272e 	mov.w	r7, lr, asr #8
 8018d06:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8018d0a:	43d2      	mvns	r2, r2
 8018d0c:	b2d2      	uxtb	r2, r2
 8018d0e:	fb16 f609 	smulbb	r6, r6, r9
 8018d12:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018d16:	fb07 6702 	mla	r7, r7, r2, r6
 8018d1a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8018d1e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018d22:	fa5f fc8c 	uxtb.w	ip, ip
 8018d26:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018d2a:	fa5f fe8e 	uxtb.w	lr, lr
 8018d2e:	fb1c fc09 	smulbb	ip, ip, r9
 8018d32:	fb0e cc02 	mla	ip, lr, r2, ip
 8018d36:	b2bf      	uxth	r7, r7
 8018d38:	fb1a fa09 	smulbb	sl, sl, r9
 8018d3c:	fa1f fc8c 	uxth.w	ip, ip
 8018d40:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018d44:	fb06 a602 	mla	r6, r6, r2, sl
 8018d48:	1c7a      	adds	r2, r7, #1
 8018d4a:	f10c 0a01 	add.w	sl, ip, #1
 8018d4e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018d52:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8018d56:	b2b6      	uxth	r6, r6
 8018d58:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018d5c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018d60:	ea4a 0707 	orr.w	r7, sl, r7
 8018d64:	f106 0a01 	add.w	sl, r6, #1
 8018d68:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018d6c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018d70:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018d74:	9a04      	ldr	r2, [sp, #16]
 8018d76:	ea47 070a 	orr.w	r7, r7, sl
 8018d7a:	52a7      	strh	r7, [r4, r2]
 8018d7c:	e7af      	b.n	8018cde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018d7e:	f04f 0e00 	mov.w	lr, #0
 8018d82:	eba3 020e 	sub.w	r2, r3, lr
 8018d86:	2a00      	cmp	r2, #0
 8018d88:	f77f af3a 	ble.w	8018c00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018d8c:	9e02      	ldr	r6, [sp, #8]
 8018d8e:	1402      	asrs	r2, r0, #16
 8018d90:	140d      	asrs	r5, r1, #16
 8018d92:	fb06 2505 	mla	r5, r6, r5, r2
 8018d96:	086a      	lsrs	r2, r5, #1
 8018d98:	9e03      	ldr	r6, [sp, #12]
 8018d9a:	5cb2      	ldrb	r2, [r6, r2]
 8018d9c:	07ed      	lsls	r5, r5, #31
 8018d9e:	bf54      	ite	pl
 8018da0:	f002 020f 	andpl.w	r2, r2, #15
 8018da4:	1112      	asrmi	r2, r2, #4
 8018da6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018daa:	b2d2      	uxtb	r2, r2
 8018dac:	2aff      	cmp	r2, #255	@ 0xff
 8018dae:	d115      	bne.n	8018ddc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8018db0:	f8d8 5000 	ldr.w	r5, [r8]
 8018db4:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8018db8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8018dbc:	096a      	lsrs	r2, r5, #5
 8018dbe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018dc2:	4332      	orrs	r2, r6
 8018dc4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8018dc8:	432a      	orrs	r2, r5
 8018dca:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8018dce:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018dd0:	4410      	add	r0, r2
 8018dd2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018dd4:	f10e 0e01 	add.w	lr, lr, #1
 8018dd8:	4411      	add	r1, r2
 8018dda:	e7d2      	b.n	8018d82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8018ddc:	2a00      	cmp	r2, #0
 8018dde:	d0f6      	beq.n	8018dce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8018de0:	f8d8 7000 	ldr.w	r7, [r8]
 8018de4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8018de8:	fa1f f982 	uxth.w	r9, r2
 8018dec:	ea4f 262c 	mov.w	r6, ip, asr #8
 8018df0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8018df4:	43d2      	mvns	r2, r2
 8018df6:	b2d2      	uxtb	r2, r2
 8018df8:	fb15 f509 	smulbb	r5, r5, r9
 8018dfc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018e00:	fb06 5602 	mla	r6, r6, r2, r5
 8018e04:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8018e08:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018e0c:	b2ff      	uxtb	r7, r7
 8018e0e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018e12:	fa5f fc8c 	uxtb.w	ip, ip
 8018e16:	fb17 f709 	smulbb	r7, r7, r9
 8018e1a:	fb0c 7702 	mla	r7, ip, r2, r7
 8018e1e:	b2b6      	uxth	r6, r6
 8018e20:	fb1a fa09 	smulbb	sl, sl, r9
 8018e24:	b2bf      	uxth	r7, r7
 8018e26:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018e2a:	fb05 a502 	mla	r5, r5, r2, sl
 8018e2e:	1c72      	adds	r2, r6, #1
 8018e30:	f107 0a01 	add.w	sl, r7, #1
 8018e34:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8018e38:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018e3c:	b2ad      	uxth	r5, r5
 8018e3e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018e42:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8018e46:	ea4a 0606 	orr.w	r6, sl, r6
 8018e4a:	f105 0a01 	add.w	sl, r5, #1
 8018e4e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018e52:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018e56:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018e5a:	ea46 060a 	orr.w	r6, r6, sl
 8018e5e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8018e62:	e7b4      	b.n	8018dce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8018e64:	b007      	add	sp, #28
 8018e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018e6a:	bf00      	nop
 8018e6c:	200023b0 	.word	0x200023b0

08018e70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8018e70:	4770      	bx	lr

08018e72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8018e72:	4770      	bx	lr

08018e74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8018e74:	4770      	bx	lr

08018e76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8018e76:	4770      	bx	lr

08018e78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8018e78:	4770      	bx	lr

08018e7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8018e7a:	4770      	bx	lr

08018e7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8018e7c:	4770      	bx	lr

08018e7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8018e7e:	4770      	bx	lr

08018e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8018e80:	4770      	bx	lr

08018e82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8018e82:	4770      	bx	lr

08018e84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8018e84:	4770      	bx	lr

08018e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8018e86:	4770      	bx	lr

08018e88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8018e88:	4770      	bx	lr

08018e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8018e8a:	4770      	bx	lr

08018e8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8018e8c:	4770      	bx	lr

08018e8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8018e8e:	4770      	bx	lr

08018e90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8018e90:	4770      	bx	lr

08018e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8018e92:	4770      	bx	lr

08018e94 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8018e94:	4770      	bx	lr

08018e96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8018e96:	4770      	bx	lr

08018e98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8018e98:	4770      	bx	lr

08018e9a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8018e9a:	4770      	bx	lr

08018e9c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8018e9c:	4770      	bx	lr

08018e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8018e9e:	4770      	bx	lr

08018ea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8018ea0:	4770      	bx	lr

08018ea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8018ea2:	4770      	bx	lr

08018ea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8018ea4:	4770      	bx	lr

08018ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8018ea6:	4770      	bx	lr

08018ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8018ea8:	4770      	bx	lr

08018eaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8018eaa:	4770      	bx	lr

08018eac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8018eac:	4770      	bx	lr

08018eae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8018eae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018eb2:	b088      	sub	sp, #32
 8018eb4:	ac08      	add	r4, sp, #32
 8018eb6:	4606      	mov	r6, r0
 8018eb8:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8018ebc:	4620      	mov	r0, r4
 8018ebe:	4688      	mov	r8, r1
 8018ec0:	4691      	mov	r9, r2
 8018ec2:	f7fd fc63 	bl	801678c <_ZNK8touchgfx6Bitmap7getDataEv>
 8018ec6:	6833      	ldr	r3, [r6, #0]
 8018ec8:	4605      	mov	r5, r0
 8018eca:	4620      	mov	r0, r4
 8018ecc:	699f      	ldr	r7, [r3, #24]
 8018ece:	f7fd fb71 	bl	80165b4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018ed2:	4682      	mov	sl, r0
 8018ed4:	4620      	mov	r0, r4
 8018ed6:	f7fd fba1 	bl	801661c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018eda:	9500      	str	r5, [sp, #0]
 8018edc:	e9cd a001 	strd	sl, r0, [sp, #4]
 8018ee0:	464b      	mov	r3, r9
 8018ee2:	a806      	add	r0, sp, #24
 8018ee4:	4642      	mov	r2, r8
 8018ee6:	4631      	mov	r1, r6
 8018ee8:	47b8      	blx	r7
 8018eea:	4628      	mov	r0, r5
 8018eec:	b008      	add	sp, #32
 8018eee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08018ef4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8018ef4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8018ef8:	2300      	movs	r3, #0
 8018efa:	9300      	str	r3, [sp, #0]
 8018efc:	4b3d      	ldr	r3, [pc, #244]	@ (8018ff4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8018efe:	781b      	ldrb	r3, [r3, #0]
 8018f00:	2b00      	cmp	r3, #0
 8018f02:	d137      	bne.n	8018f74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8018f04:	4a3c      	ldr	r2, [pc, #240]	@ (8018ff8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8018f06:	f9b2 2000 	ldrsh.w	r2, [r2]
 8018f0a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8018f0e:	2b00      	cmp	r3, #0
 8018f10:	d132      	bne.n	8018f78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8018f12:	4b3a      	ldr	r3, [pc, #232]	@ (8018ffc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8018f14:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018f18:	6808      	ldr	r0, [r1, #0]
 8018f1a:	6849      	ldr	r1, [r1, #4]
 8018f1c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018f20:	ac02      	add	r4, sp, #8
 8018f22:	ab02      	add	r3, sp, #8
 8018f24:	c303      	stmia	r3!, {r0, r1}
 8018f26:	4669      	mov	r1, sp
 8018f28:	4620      	mov	r0, r4
 8018f2a:	f7f9 ff57 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018f2e:	4668      	mov	r0, sp
 8018f30:	f7f9 ff2c 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018f34:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8018f38:	f8bd 2000 	ldrh.w	r2, [sp]
 8018f3c:	4d30      	ldr	r5, [pc, #192]	@ (8019000 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8018f3e:	4413      	add	r3, r2
 8018f40:	f8ad 3008 	strh.w	r3, [sp, #8]
 8018f44:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8018f48:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018f4c:	6828      	ldr	r0, [r5, #0]
 8018f4e:	4413      	add	r3, r2
 8018f50:	f8ad 300a 	strh.w	r3, [sp, #10]
 8018f54:	6803      	ldr	r3, [r0, #0]
 8018f56:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018f58:	4798      	blx	r3
 8018f5a:	f010 0f01 	tst.w	r0, #1
 8018f5e:	462f      	mov	r7, r5
 8018f60:	d00c      	beq.n	8018f7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8018f62:	6828      	ldr	r0, [r5, #0]
 8018f64:	6803      	ldr	r3, [r0, #0]
 8018f66:	e894 0006 	ldmia.w	r4, {r1, r2}
 8018f6a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8018f6c:	4798      	blx	r3
 8018f6e:	b004      	add	sp, #16
 8018f70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018f74:	4a21      	ldr	r2, [pc, #132]	@ (8018ffc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8018f76:	e7c6      	b.n	8018f06 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8018f78:	4b1f      	ldr	r3, [pc, #124]	@ (8018ff8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8018f7a:	e7cb      	b.n	8018f14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8018f7c:	6838      	ldr	r0, [r7, #0]
 8018f7e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8018f82:	6803      	ldr	r3, [r0, #0]
 8018f84:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8018f88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018f8a:	4798      	blx	r3
 8018f8c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8018f90:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018f94:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8018f98:	fb16 3602 	smlabb	r6, r6, r2, r3
 8018f9c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018fa0:	6838      	ldr	r0, [r7, #0]
 8018fa2:	6803      	ldr	r3, [r0, #0]
 8018fa4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018fa6:	4798      	blx	r3
 8018fa8:	4a13      	ldr	r2, [pc, #76]	@ (8018ff8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8018faa:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8018fae:	8813      	ldrh	r3, [r2, #0]
 8018fb0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8018fb4:	fb03 1404 	mla	r4, r3, r4, r1
 8018fb8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018fbc:	435d      	muls	r5, r3
 8018fbe:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8018fc2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8018fc6:	4691      	mov	r9, r2
 8018fc8:	6838      	ldr	r0, [r7, #0]
 8018fca:	42ac      	cmp	r4, r5
 8018fcc:	6803      	ldr	r3, [r0, #0]
 8018fce:	d20e      	bcs.n	8018fee <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8018fd0:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8018fd4:	4632      	mov	r2, r6
 8018fd6:	4643      	mov	r3, r8
 8018fd8:	4621      	mov	r1, r4
 8018fda:	47d0      	blx	sl
 8018fdc:	f8b9 3000 	ldrh.w	r3, [r9]
 8018fe0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018fe4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8018fe8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8018fec:	e7ec      	b.n	8018fc8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8018fee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018ff0:	4798      	blx	r3
 8018ff2:	e7bc      	b.n	8018f6e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8018ff4:	200023a0 	.word	0x200023a0
 8018ff8:	200023a2 	.word	0x200023a2
 8018ffc:	200023a4 	.word	0x200023a4
 8019000:	200023a8 	.word	0x200023a8

08019004 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8019004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019008:	b08b      	sub	sp, #44	@ 0x2c
 801900a:	460f      	mov	r7, r1
 801900c:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8019010:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8019014:	4616      	mov	r6, r2
 8019016:	f1bb 0f00 	cmp.w	fp, #0
 801901a:	d04a      	beq.n	80190b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801901c:	6810      	ldr	r0, [r2, #0]
 801901e:	6851      	ldr	r1, [r2, #4]
 8019020:	ad06      	add	r5, sp, #24
 8019022:	c503      	stmia	r5!, {r0, r1}
 8019024:	6818      	ldr	r0, [r3, #0]
 8019026:	6859      	ldr	r1, [r3, #4]
 8019028:	ad08      	add	r5, sp, #32
 801902a:	c503      	stmia	r5!, {r0, r1}
 801902c:	a806      	add	r0, sp, #24
 801902e:	f7f9 fead 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019032:	4631      	mov	r1, r6
 8019034:	a808      	add	r0, sp, #32
 8019036:	f7f9 fed1 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801903a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801903e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8019042:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8019046:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801904a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 801904e:	fb16 2103 	smlabb	r1, r6, r3, r2
 8019052:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8019056:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801905a:	4f5f      	ldr	r7, [pc, #380]	@ (80191d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801905c:	440a      	add	r2, r1
 801905e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019062:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019066:	6838      	ldr	r0, [r7, #0]
 8019068:	4413      	add	r3, r2
 801906a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801906e:	6803      	ldr	r3, [r0, #0]
 8019070:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019072:	4798      	blx	r3
 8019074:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8019078:	46b9      	mov	r9, r7
 801907a:	d11d      	bne.n	80190b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801907c:	b9fc      	cbnz	r4, 80190be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801907e:	f010 0f01 	tst.w	r0, #1
 8019082:	d01c      	beq.n	80190be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8019084:	f8d9 0000 	ldr.w	r0, [r9]
 8019088:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801908c:	6801      	ldr	r1, [r0, #0]
 801908e:	f8cd b00c 	str.w	fp, [sp, #12]
 8019092:	2700      	movs	r7, #0
 8019094:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8019098:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801909c:	9402      	str	r4, [sp, #8]
 801909e:	b2ad      	uxth	r5, r5
 80190a0:	fa1f f488 	uxth.w	r4, r8
 80190a4:	9501      	str	r5, [sp, #4]
 80190a6:	9400      	str	r4, [sp, #0]
 80190a8:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 80190aa:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80190ae:	4631      	mov	r1, r6
 80190b0:	47a0      	blx	r4
 80190b2:	b00b      	add	sp, #44	@ 0x2c
 80190b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190b8:	f010 0f04 	tst.w	r0, #4
 80190bc:	e7e1      	b.n	8019082 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80190be:	f8d9 0000 	ldr.w	r0, [r9]
 80190c2:	6803      	ldr	r3, [r0, #0]
 80190c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80190c6:	4798      	blx	r3
 80190c8:	4b44      	ldr	r3, [pc, #272]	@ (80191dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80190ca:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80190ce:	881a      	ldrh	r2, [r3, #0]
 80190d0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80190d4:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80190d8:	fb02 1404 	mla	r4, r2, r4, r1
 80190dc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80190e0:	469a      	mov	sl, r3
 80190e2:	fb05 f502 	mul.w	r5, r5, r2
 80190e6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80190ea:	d059      	beq.n	80191a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80190ec:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 80190f0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80190f4:	fa1f f28b 	uxth.w	r2, fp
 80190f8:	fa1f f989 	uxth.w	r9, r9
 80190fc:	469e      	mov	lr, r3
 80190fe:	42ac      	cmp	r4, r5
 8019100:	d264      	bcs.n	80191cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8019102:	eb04 0a07 	add.w	sl, r4, r7
 8019106:	4554      	cmp	r4, sl
 8019108:	d23d      	bcs.n	8019186 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801910a:	8821      	ldrh	r1, [r4, #0]
 801910c:	f836 3b02 	ldrh.w	r3, [r6], #2
 8019110:	1208      	asrs	r0, r1, #8
 8019112:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019116:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801911a:	fb10 f009 	smulbb	r0, r0, r9
 801911e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8019122:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019126:	00c9      	lsls	r1, r1, #3
 8019128:	fb0c 0c02 	mla	ip, ip, r2, r0
 801912c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8019130:	10d8      	asrs	r0, r3, #3
 8019132:	b2c9      	uxtb	r1, r1
 8019134:	00db      	lsls	r3, r3, #3
 8019136:	fa1f fc8c 	uxth.w	ip, ip
 801913a:	fb1b fb09 	smulbb	fp, fp, r9
 801913e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8019142:	b2db      	uxtb	r3, r3
 8019144:	fb11 f109 	smulbb	r1, r1, r9
 8019148:	fb00 b002 	mla	r0, r0, r2, fp
 801914c:	fb03 1302 	mla	r3, r3, r2, r1
 8019150:	f10c 0b01 	add.w	fp, ip, #1
 8019154:	b29b      	uxth	r3, r3
 8019156:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801915a:	b280      	uxth	r0, r0
 801915c:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8019160:	f103 0c01 	add.w	ip, r3, #1
 8019164:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019168:	1c43      	adds	r3, r0, #1
 801916a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801916e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019172:	0940      	lsrs	r0, r0, #5
 8019174:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019178:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801917c:	ea4c 0c00 	orr.w	ip, ip, r0
 8019180:	f824 cb02 	strh.w	ip, [r4], #2
 8019184:	e7bf      	b.n	8019106 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8019186:	f8be 3000 	ldrh.w	r3, [lr]
 801918a:	eba3 0308 	sub.w	r3, r3, r8
 801918e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019192:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8019196:	eba3 0308 	sub.w	r3, r3, r8
 801919a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801919e:	e7ae      	b.n	80190fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80191a0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80191a4:	f8d9 0000 	ldr.w	r0, [r9]
 80191a8:	42ac      	cmp	r4, r5
 80191aa:	6803      	ldr	r3, [r0, #0]
 80191ac:	d20e      	bcs.n	80191cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80191ae:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 80191b2:	4632      	mov	r2, r6
 80191b4:	463b      	mov	r3, r7
 80191b6:	4621      	mov	r1, r4
 80191b8:	47c0      	blx	r8
 80191ba:	f8ba 3000 	ldrh.w	r3, [sl]
 80191be:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80191c2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80191c6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80191ca:	e7eb      	b.n	80191a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80191cc:	4b02      	ldr	r3, [pc, #8]	@ (80191d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80191ce:	6818      	ldr	r0, [r3, #0]
 80191d0:	6803      	ldr	r3, [r0, #0]
 80191d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80191d4:	4798      	blx	r3
 80191d6:	e76c      	b.n	80190b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80191d8:	200023a8 	.word	0x200023a8
 80191dc:	200023a2 	.word	0x200023a2

080191e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 80191e0:	b510      	push	{r4, lr}
 80191e2:	2104      	movs	r1, #4
 80191e4:	4604      	mov	r4, r0
 80191e6:	f00a fe16 	bl	8023e16 <_ZdlPvj>
 80191ea:	4620      	mov	r0, r4
 80191ec:	bd10      	pop	{r4, pc}

080191ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 80191ee:	b510      	push	{r4, lr}
 80191f0:	2104      	movs	r1, #4
 80191f2:	4604      	mov	r4, r0
 80191f4:	f00a fe0f 	bl	8023e16 <_ZdlPvj>
 80191f8:	4620      	mov	r0, r4
 80191fa:	bd10      	pop	{r4, pc}

080191fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 80191fc:	b510      	push	{r4, lr}
 80191fe:	f640 0144 	movw	r1, #2116	@ 0x844
 8019202:	4604      	mov	r4, r0
 8019204:	f00a fe07 	bl	8023e16 <_ZdlPvj>
 8019208:	4620      	mov	r0, r4
 801920a:	bd10      	pop	{r4, pc}

0801920c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801920c:	b510      	push	{r4, lr}
 801920e:	2104      	movs	r1, #4
 8019210:	4604      	mov	r4, r0
 8019212:	f00a fe00 	bl	8023e16 <_ZdlPvj>
 8019216:	4620      	mov	r0, r4
 8019218:	bd10      	pop	{r4, pc}

0801921a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801921a:	b510      	push	{r4, lr}
 801921c:	2104      	movs	r1, #4
 801921e:	4604      	mov	r4, r0
 8019220:	f00a fdf9 	bl	8023e16 <_ZdlPvj>
 8019224:	4620      	mov	r0, r4
 8019226:	bd10      	pop	{r4, pc}

08019228 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019228:	b510      	push	{r4, lr}
 801922a:	2104      	movs	r1, #4
 801922c:	4604      	mov	r4, r0
 801922e:	f00a fdf2 	bl	8023e16 <_ZdlPvj>
 8019232:	4620      	mov	r0, r4
 8019234:	bd10      	pop	{r4, pc}

08019236 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8019236:	b510      	push	{r4, lr}
 8019238:	2104      	movs	r1, #4
 801923a:	4604      	mov	r4, r0
 801923c:	f00a fdeb 	bl	8023e16 <_ZdlPvj>
 8019240:	4620      	mov	r0, r4
 8019242:	bd10      	pop	{r4, pc}

08019244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019244:	b510      	push	{r4, lr}
 8019246:	2104      	movs	r1, #4
 8019248:	4604      	mov	r4, r0
 801924a:	f00a fde4 	bl	8023e16 <_ZdlPvj>
 801924e:	4620      	mov	r0, r4
 8019250:	bd10      	pop	{r4, pc}

08019252 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8019252:	b510      	push	{r4, lr}
 8019254:	2104      	movs	r1, #4
 8019256:	4604      	mov	r4, r0
 8019258:	f00a fddd 	bl	8023e16 <_ZdlPvj>
 801925c:	4620      	mov	r0, r4
 801925e:	bd10      	pop	{r4, pc}

08019260 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019260:	b510      	push	{r4, lr}
 8019262:	2104      	movs	r1, #4
 8019264:	4604      	mov	r4, r0
 8019266:	f00a fdd6 	bl	8023e16 <_ZdlPvj>
 801926a:	4620      	mov	r0, r4
 801926c:	bd10      	pop	{r4, pc}

0801926e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801926e:	b510      	push	{r4, lr}
 8019270:	2104      	movs	r1, #4
 8019272:	4604      	mov	r4, r0
 8019274:	f00a fdcf 	bl	8023e16 <_ZdlPvj>
 8019278:	4620      	mov	r0, r4
 801927a:	bd10      	pop	{r4, pc}

0801927c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801927c:	b510      	push	{r4, lr}
 801927e:	2104      	movs	r1, #4
 8019280:	4604      	mov	r4, r0
 8019282:	f00a fdc8 	bl	8023e16 <_ZdlPvj>
 8019286:	4620      	mov	r0, r4
 8019288:	bd10      	pop	{r4, pc}

0801928a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801928a:	b510      	push	{r4, lr}
 801928c:	2104      	movs	r1, #4
 801928e:	4604      	mov	r4, r0
 8019290:	f00a fdc1 	bl	8023e16 <_ZdlPvj>
 8019294:	4620      	mov	r0, r4
 8019296:	bd10      	pop	{r4, pc}

08019298 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019298:	b510      	push	{r4, lr}
 801929a:	2104      	movs	r1, #4
 801929c:	4604      	mov	r4, r0
 801929e:	f00a fdba 	bl	8023e16 <_ZdlPvj>
 80192a2:	4620      	mov	r0, r4
 80192a4:	bd10      	pop	{r4, pc}

080192a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80192a6:	b510      	push	{r4, lr}
 80192a8:	2104      	movs	r1, #4
 80192aa:	4604      	mov	r4, r0
 80192ac:	f00a fdb3 	bl	8023e16 <_ZdlPvj>
 80192b0:	4620      	mov	r0, r4
 80192b2:	bd10      	pop	{r4, pc}

080192b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80192b4:	b510      	push	{r4, lr}
 80192b6:	2104      	movs	r1, #4
 80192b8:	4604      	mov	r4, r0
 80192ba:	f00a fdac 	bl	8023e16 <_ZdlPvj>
 80192be:	4620      	mov	r0, r4
 80192c0:	bd10      	pop	{r4, pc}

080192c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80192c2:	b510      	push	{r4, lr}
 80192c4:	2104      	movs	r1, #4
 80192c6:	4604      	mov	r4, r0
 80192c8:	f00a fda5 	bl	8023e16 <_ZdlPvj>
 80192cc:	4620      	mov	r0, r4
 80192ce:	bd10      	pop	{r4, pc}

080192d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80192d0:	b510      	push	{r4, lr}
 80192d2:	2104      	movs	r1, #4
 80192d4:	4604      	mov	r4, r0
 80192d6:	f00a fd9e 	bl	8023e16 <_ZdlPvj>
 80192da:	4620      	mov	r0, r4
 80192dc:	bd10      	pop	{r4, pc}

080192de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80192de:	b510      	push	{r4, lr}
 80192e0:	2104      	movs	r1, #4
 80192e2:	4604      	mov	r4, r0
 80192e4:	f00a fd97 	bl	8023e16 <_ZdlPvj>
 80192e8:	4620      	mov	r0, r4
 80192ea:	bd10      	pop	{r4, pc}

080192ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80192ec:	b510      	push	{r4, lr}
 80192ee:	2104      	movs	r1, #4
 80192f0:	4604      	mov	r4, r0
 80192f2:	f00a fd90 	bl	8023e16 <_ZdlPvj>
 80192f6:	4620      	mov	r0, r4
 80192f8:	bd10      	pop	{r4, pc}

080192fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80192fa:	b510      	push	{r4, lr}
 80192fc:	2104      	movs	r1, #4
 80192fe:	4604      	mov	r4, r0
 8019300:	f00a fd89 	bl	8023e16 <_ZdlPvj>
 8019304:	4620      	mov	r0, r4
 8019306:	bd10      	pop	{r4, pc}

08019308 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019308:	b510      	push	{r4, lr}
 801930a:	2104      	movs	r1, #4
 801930c:	4604      	mov	r4, r0
 801930e:	f00a fd82 	bl	8023e16 <_ZdlPvj>
 8019312:	4620      	mov	r0, r4
 8019314:	bd10      	pop	{r4, pc}

08019316 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019316:	b510      	push	{r4, lr}
 8019318:	2104      	movs	r1, #4
 801931a:	4604      	mov	r4, r0
 801931c:	f00a fd7b 	bl	8023e16 <_ZdlPvj>
 8019320:	4620      	mov	r0, r4
 8019322:	bd10      	pop	{r4, pc}

08019324 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019324:	b510      	push	{r4, lr}
 8019326:	2104      	movs	r1, #4
 8019328:	4604      	mov	r4, r0
 801932a:	f00a fd74 	bl	8023e16 <_ZdlPvj>
 801932e:	4620      	mov	r0, r4
 8019330:	bd10      	pop	{r4, pc}

08019332 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019332:	b510      	push	{r4, lr}
 8019334:	2104      	movs	r1, #4
 8019336:	4604      	mov	r4, r0
 8019338:	f00a fd6d 	bl	8023e16 <_ZdlPvj>
 801933c:	4620      	mov	r0, r4
 801933e:	bd10      	pop	{r4, pc}

08019340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019340:	b510      	push	{r4, lr}
 8019342:	2104      	movs	r1, #4
 8019344:	4604      	mov	r4, r0
 8019346:	f00a fd66 	bl	8023e16 <_ZdlPvj>
 801934a:	4620      	mov	r0, r4
 801934c:	bd10      	pop	{r4, pc}

0801934e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801934e:	b510      	push	{r4, lr}
 8019350:	2104      	movs	r1, #4
 8019352:	4604      	mov	r4, r0
 8019354:	f00a fd5f 	bl	8023e16 <_ZdlPvj>
 8019358:	4620      	mov	r0, r4
 801935a:	bd10      	pop	{r4, pc}

0801935c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801935c:	b510      	push	{r4, lr}
 801935e:	2104      	movs	r1, #4
 8019360:	4604      	mov	r4, r0
 8019362:	f00a fd58 	bl	8023e16 <_ZdlPvj>
 8019366:	4620      	mov	r0, r4
 8019368:	bd10      	pop	{r4, pc}

0801936a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801936a:	b510      	push	{r4, lr}
 801936c:	2104      	movs	r1, #4
 801936e:	4604      	mov	r4, r0
 8019370:	f00a fd51 	bl	8023e16 <_ZdlPvj>
 8019374:	4620      	mov	r0, r4
 8019376:	bd10      	pop	{r4, pc}

08019378 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8019378:	b510      	push	{r4, lr}
 801937a:	2104      	movs	r1, #4
 801937c:	4604      	mov	r4, r0
 801937e:	f00a fd4a 	bl	8023e16 <_ZdlPvj>
 8019382:	4620      	mov	r0, r4
 8019384:	bd10      	pop	{r4, pc}

08019386 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8019386:	b510      	push	{r4, lr}
 8019388:	2104      	movs	r1, #4
 801938a:	4604      	mov	r4, r0
 801938c:	f00a fd43 	bl	8023e16 <_ZdlPvj>
 8019390:	4620      	mov	r0, r4
 8019392:	bd10      	pop	{r4, pc}

08019394 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8019394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019398:	b08f      	sub	sp, #60	@ 0x3c
 801939a:	461c      	mov	r4, r3
 801939c:	9205      	str	r2, [sp, #20]
 801939e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80193a2:	9100      	str	r1, [sp, #0]
 80193a4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80193a6:	9201      	str	r2, [sp, #4]
 80193a8:	2a00      	cmp	r2, #0
 80193aa:	f000 8115 	beq.w	80195d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 80193ae:	6820      	ldr	r0, [r4, #0]
 80193b0:	6861      	ldr	r1, [r4, #4]
 80193b2:	aa0a      	add	r2, sp, #40	@ 0x28
 80193b4:	c203      	stmia	r2!, {r0, r1}
 80193b6:	6818      	ldr	r0, [r3, #0]
 80193b8:	6859      	ldr	r1, [r3, #4]
 80193ba:	aa0c      	add	r2, sp, #48	@ 0x30
 80193bc:	c203      	stmia	r2!, {r0, r1}
 80193be:	a80a      	add	r0, sp, #40	@ 0x28
 80193c0:	f7f9 fce4 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80193c4:	4621      	mov	r1, r4
 80193c6:	a80c      	add	r0, sp, #48	@ 0x30
 80193c8:	f7f9 fd08 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80193cc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80193d0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80193d4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80193d8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80193dc:	bfde      	ittt	le
 80193de:	b2b3      	uxthle	r3, r6
 80193e0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80193e4:	fb92 f3f3 	sdivle	r3, r2, r3
 80193e8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80193ec:	bfc8      	it	gt
 80193ee:	2301      	movgt	r3, #1
 80193f0:	fb92 f1f3 	sdiv	r1, r2, r3
 80193f4:	fa1f fc81 	uxth.w	ip, r1
 80193f8:	fb0c 2413 	mls	r4, ip, r3, r2
 80193fc:	fb14 f406 	smulbb	r4, r4, r6
 8019400:	441d      	add	r5, r3
 8019402:	4404      	add	r4, r0
 8019404:	4661      	mov	r1, ip
 8019406:	3d01      	subs	r5, #1
 8019408:	b2a4      	uxth	r4, r4
 801940a:	fb95 f5f3 	sdiv	r5, r5, r3
 801940e:	b131      	cbz	r1, 801941e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8019410:	9b05      	ldr	r3, [sp, #20]
 8019412:	9900      	ldr	r1, [sp, #0]
 8019414:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8019418:	ba1b      	rev	r3, r3
 801941a:	4419      	add	r1, r3
 801941c:	9100      	str	r1, [sp, #0]
 801941e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8019422:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8019426:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801942a:	4418      	add	r0, r3
 801942c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8019430:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8019434:	441a      	add	r2, r3
 8019436:	4b6a      	ldr	r3, [pc, #424]	@ (80195e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8019438:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801943c:	6818      	ldr	r0, [r3, #0]
 801943e:	6803      	ldr	r3, [r0, #0]
 8019440:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019442:	4798      	blx	r3
 8019444:	4967      	ldr	r1, [pc, #412]	@ (80195e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8019446:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801944a:	880b      	ldrh	r3, [r1, #0]
 801944c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8019450:	9109      	str	r1, [sp, #36]	@ 0x24
 8019452:	fb03 c202 	mla	r2, r3, r2, ip
 8019456:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801945a:	4373      	muls	r3, r6
 801945c:	b2ad      	uxth	r5, r5
 801945e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019462:	00ad      	lsls	r5, r5, #2
 8019464:	9306      	str	r3, [sp, #24]
 8019466:	1d2b      	adds	r3, r5, #4
 8019468:	9307      	str	r3, [sp, #28]
 801946a:	9b01      	ldr	r3, [sp, #4]
 801946c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8019470:	9103      	str	r1, [sp, #12]
 8019472:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8019476:	2c00      	cmp	r4, #0
 8019478:	bf0c      	ite	eq
 801947a:	46c6      	moveq	lr, r8
 801947c:	f04f 0e00 	movne.w	lr, #0
 8019480:	2300      	movs	r3, #0
 8019482:	b292      	uxth	r2, r2
 8019484:	fa1f fe8e 	uxth.w	lr, lr
 8019488:	9302      	str	r3, [sp, #8]
 801948a:	9204      	str	r2, [sp, #16]
 801948c:	9a06      	ldr	r2, [sp, #24]
 801948e:	4282      	cmp	r2, r0
 8019490:	f240 809d 	bls.w	80195ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8019494:	b963      	cbnz	r3, 80194b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8019496:	9b00      	ldr	r3, [sp, #0]
 8019498:	781a      	ldrb	r2, [r3, #0]
 801949a:	0993      	lsrs	r3, r2, #6
 801949c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80194a0:	9202      	str	r2, [sp, #8]
 80194a2:	1e5a      	subs	r2, r3, #1
 80194a4:	2a02      	cmp	r2, #2
 80194a6:	d815      	bhi.n	80194d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 80194a8:	9a00      	ldr	r2, [sp, #0]
 80194aa:	3201      	adds	r2, #1
 80194ac:	9200      	str	r2, [sp, #0]
 80194ae:	b29b      	uxth	r3, r3
 80194b0:	b1b4      	cbz	r4, 80194e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 80194b2:	429c      	cmp	r4, r3
 80194b4:	bf95      	itete	ls
 80194b6:	1b1c      	subls	r4, r3, r4
 80194b8:	1ae4      	subhi	r4, r4, r3
 80194ba:	fa1f fa84 	uxthls.w	sl, r4
 80194be:	b2a4      	uxthhi	r4, r4
 80194c0:	bf87      	ittee	hi
 80194c2:	4671      	movhi	r1, lr
 80194c4:	f04f 0a00 	movhi.w	sl, #0
 80194c8:	fa1f f188 	uxthls.w	r1, r8
 80194cc:	2400      	movls	r4, #0
 80194ce:	4653      	mov	r3, sl
 80194d0:	468e      	mov	lr, r1
 80194d2:	e7db      	b.n	801948c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 80194d4:	9a00      	ldr	r2, [sp, #0]
 80194d6:	9b00      	ldr	r3, [sp, #0]
 80194d8:	3202      	adds	r2, #2
 80194da:	785b      	ldrb	r3, [r3, #1]
 80194dc:	9200      	str	r2, [sp, #0]
 80194de:	e7e7      	b.n	80194b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 80194e0:	2202      	movs	r2, #2
 80194e2:	4615      	mov	r5, r2
 80194e4:	9907      	ldr	r1, [sp, #28]
 80194e6:	9a02      	ldr	r2, [sp, #8]
 80194e8:	fb15 1202 	smlabb	r2, r5, r2, r1
 80194ec:	9905      	ldr	r1, [sp, #20]
 80194ee:	4573      	cmp	r3, lr
 80194f0:	f831 c002 	ldrh.w	ip, [r1, r2]
 80194f4:	9a01      	ldr	r2, [sp, #4]
 80194f6:	bf2b      	itete	cs
 80194f8:	eba3 0a0e 	subcs.w	sl, r3, lr
 80194fc:	ebae 0103 	subcc.w	r1, lr, r3
 8019500:	46f1      	movcs	r9, lr
 8019502:	4699      	movcc	r9, r3
 8019504:	bf27      	ittee	cs
 8019506:	fa1f fa8a 	uxthcs.w	sl, sl
 801950a:	4621      	movcs	r1, r4
 801950c:	b289      	uxthcc	r1, r1
 801950e:	46a2      	movcc	sl, r4
 8019510:	2aff      	cmp	r2, #255	@ 0xff
 8019512:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019516:	d105      	bne.n	8019524 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8019518:	4481      	add	r9, r0
 801951a:	4581      	cmp	r9, r0
 801951c:	d045      	beq.n	80195aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801951e:	f820 cb02 	strh.w	ip, [r0], #2
 8019522:	e7fa      	b.n	801951a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8019524:	9d03      	ldr	r5, [sp, #12]
 8019526:	ea4f 222c 	mov.w	r2, ip, asr #8
 801952a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801952e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019532:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019536:	436a      	muls	r2, r5
 8019538:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801953c:	fa5f fc8c 	uxtb.w	ip, ip
 8019540:	9208      	str	r2, [sp, #32]
 8019542:	fb0b fb05 	mul.w	fp, fp, r5
 8019546:	fb0c fc05 	mul.w	ip, ip, r5
 801954a:	4481      	add	r9, r0
 801954c:	4581      	cmp	r9, r0
 801954e:	d02c      	beq.n	80195aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8019550:	8802      	ldrh	r2, [r0, #0]
 8019552:	9d04      	ldr	r5, [sp, #16]
 8019554:	9f04      	ldr	r7, [sp, #16]
 8019556:	1216      	asrs	r6, r2, #8
 8019558:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801955c:	fb16 f605 	smulbb	r6, r6, r5
 8019560:	9d08      	ldr	r5, [sp, #32]
 8019562:	442e      	add	r6, r5
 8019564:	10d5      	asrs	r5, r2, #3
 8019566:	00d2      	lsls	r2, r2, #3
 8019568:	b2d2      	uxtb	r2, r2
 801956a:	fb12 f207 	smulbb	r2, r2, r7
 801956e:	b2b6      	uxth	r6, r6
 8019570:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019574:	4462      	add	r2, ip
 8019576:	fb15 f507 	smulbb	r5, r5, r7
 801957a:	b292      	uxth	r2, r2
 801957c:	1c77      	adds	r7, r6, #1
 801957e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8019582:	1c57      	adds	r7, r2, #1
 8019584:	445d      	add	r5, fp
 8019586:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801958a:	b2ad      	uxth	r5, r5
 801958c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019590:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8019594:	4316      	orrs	r6, r2
 8019596:	1c6a      	adds	r2, r5, #1
 8019598:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801959c:	096d      	lsrs	r5, r5, #5
 801959e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80195a2:	432e      	orrs	r6, r5
 80195a4:	f820 6b02 	strh.w	r6, [r0], #2
 80195a8:	e7d0      	b.n	801954c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 80195aa:	4573      	cmp	r3, lr
 80195ac:	d38f      	bcc.n	80194ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 80195ae:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80195b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80195b4:	fa1f f188 	uxth.w	r1, r8
 80195b8:	1a64      	subs	r4, r4, r1
 80195ba:	881b      	ldrh	r3, [r3, #0]
 80195bc:	b2a4      	uxth	r4, r4
 80195be:	2c00      	cmp	r4, #0
 80195c0:	eba3 0308 	sub.w	r3, r3, r8
 80195c4:	bf18      	it	ne
 80195c6:	2100      	movne	r1, #0
 80195c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80195cc:	e77f      	b.n	80194ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 80195ce:	4b04      	ldr	r3, [pc, #16]	@ (80195e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80195d0:	6818      	ldr	r0, [r3, #0]
 80195d2:	6803      	ldr	r3, [r0, #0]
 80195d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80195d6:	4798      	blx	r3
 80195d8:	b00f      	add	sp, #60	@ 0x3c
 80195da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80195de:	bf00      	nop
 80195e0:	200023a8 	.word	0x200023a8
 80195e4:	200023a2 	.word	0x200023a2

080195e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80195e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80195ec:	b09f      	sub	sp, #124	@ 0x7c
 80195ee:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 80195f2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 80195f6:	9209      	str	r2, [sp, #36]	@ 0x24
 80195f8:	461d      	mov	r5, r3
 80195fa:	4604      	mov	r4, r0
 80195fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80195fe:	2a00      	cmp	r2, #0
 8019600:	f000 81eb 	beq.w	80199da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8019604:	6828      	ldr	r0, [r5, #0]
 8019606:	6869      	ldr	r1, [r5, #4]
 8019608:	aa1a      	add	r2, sp, #104	@ 0x68
 801960a:	c203      	stmia	r2!, {r0, r1}
 801960c:	6818      	ldr	r0, [r3, #0]
 801960e:	6859      	ldr	r1, [r3, #4]
 8019610:	aa1c      	add	r2, sp, #112	@ 0x70
 8019612:	c203      	stmia	r2!, {r0, r1}
 8019614:	a81a      	add	r0, sp, #104	@ 0x68
 8019616:	f7f9 fbb9 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801961a:	4629      	mov	r1, r5
 801961c:	a81c      	add	r0, sp, #112	@ 0x70
 801961e:	f7f9 fbdd 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019622:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8019626:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801962a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801962e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8019632:	bfd7      	itett	le
 8019634:	b29a      	uxthle	r2, r3
 8019636:	2201      	movgt	r2, #1
 8019638:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801963c:	fb91 f2f2 	sdivle	r2, r1, r2
 8019640:	9202      	str	r2, [sp, #8]
 8019642:	9802      	ldr	r0, [sp, #8]
 8019644:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8019648:	fb92 f0f0 	sdiv	r0, r2, r0
 801964c:	b280      	uxth	r0, r0
 801964e:	9010      	str	r0, [sp, #64]	@ 0x40
 8019650:	9902      	ldr	r1, [sp, #8]
 8019652:	9802      	ldr	r0, [sp, #8]
 8019654:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8019656:	4488      	add	r8, r1
 8019658:	fb05 2510 	mls	r5, r5, r0, r2
 801965c:	fb15 f503 	smulbb	r5, r5, r3
 8019660:	f108 38ff 	add.w	r8, r8, #4294967295
 8019664:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8019668:	fb98 f8f1 	sdiv	r8, r8, r1
 801966c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8019670:	440d      	add	r5, r1
 8019672:	4419      	add	r1, r3
 8019674:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8019678:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801967c:	441a      	add	r2, r3
 801967e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8019682:	9304      	str	r3, [sp, #16]
 8019684:	4b95      	ldr	r3, [pc, #596]	@ (80198dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8019686:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801968a:	6818      	ldr	r0, [r3, #0]
 801968c:	6803      	ldr	r3, [r0, #0]
 801968e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019690:	4798      	blx	r3
 8019692:	4b93      	ldr	r3, [pc, #588]	@ (80198e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8019694:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8019698:	881a      	ldrh	r2, [r3, #0]
 801969a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801969e:	9318      	str	r3, [sp, #96]	@ 0x60
 80196a0:	fb02 7101 	mla	r1, r2, r1, r7
 80196a4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80196a8:	4356      	muls	r6, r2
 80196aa:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 80196ae:	f108 0801 	add.w	r8, r8, #1
 80196b2:	920a      	str	r2, [sp, #40]	@ 0x28
 80196b4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80196b6:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 80196ba:	930f      	str	r3, [sp, #60]	@ 0x3c
 80196bc:	fa1f f888 	uxth.w	r8, r8
 80196c0:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 80196c4:	f108 0204 	add.w	r2, r8, #4
 80196c8:	9211      	str	r2, [sp, #68]	@ 0x44
 80196ca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80196cc:	4b85      	ldr	r3, [pc, #532]	@ (80198e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 80196ce:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 80196d2:	b2ad      	uxth	r5, r5
 80196d4:	9215      	str	r2, [sp, #84]	@ 0x54
 80196d6:	2d00      	cmp	r5, #0
 80196d8:	9a04      	ldr	r2, [sp, #16]
 80196da:	f04f 0100 	mov.w	r1, #0
 80196de:	bf18      	it	ne
 80196e0:	2200      	movne	r2, #0
 80196e2:	1b1b      	subs	r3, r3, r4
 80196e4:	b292      	uxth	r2, r2
 80196e6:	910d      	str	r1, [sp, #52]	@ 0x34
 80196e8:	9319      	str	r3, [sp, #100]	@ 0x64
 80196ea:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80196ec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80196ee:	fa11 f383 	uxtah	r3, r1, r3
 80196f2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80196f4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80196f8:	3304      	adds	r3, #4
 80196fa:	9306      	str	r3, [sp, #24]
 80196fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80196fe:	4283      	cmp	r3, r0
 8019700:	f240 8166 	bls.w	80199d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8019704:	9902      	ldr	r1, [sp, #8]
 8019706:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801970a:	fbb5 f3f3 	udiv	r3, r5, r3
 801970e:	1acb      	subs	r3, r1, r3
 8019710:	b29b      	uxth	r3, r3
 8019712:	9316      	str	r3, [sp, #88]	@ 0x58
 8019714:	9b06      	ldr	r3, [sp, #24]
 8019716:	9e06      	ldr	r6, [sp, #24]
 8019718:	7859      	ldrb	r1, [r3, #1]
 801971a:	789b      	ldrb	r3, [r3, #2]
 801971c:	7836      	ldrb	r6, [r6, #0]
 801971e:	9612      	str	r6, [sp, #72]	@ 0x48
 8019720:	021b      	lsls	r3, r3, #8
 8019722:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8019726:	9906      	ldr	r1, [sp, #24]
 8019728:	78c9      	ldrb	r1, [r1, #3]
 801972a:	430b      	orrs	r3, r1
 801972c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801972e:	3601      	adds	r6, #1
 8019730:	4419      	add	r1, r3
 8019732:	9605      	str	r6, [sp, #20]
 8019734:	1c4e      	adds	r6, r1, #1
 8019736:	9603      	str	r6, [sp, #12]
 8019738:	7849      	ldrb	r1, [r1, #1]
 801973a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801973c:	0209      	lsls	r1, r1, #8
 801973e:	5cf3      	ldrb	r3, [r6, r3]
 8019740:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8019744:	4319      	orrs	r1, r3
 8019746:	b28b      	uxth	r3, r1
 8019748:	930c      	str	r3, [sp, #48]	@ 0x30
 801974a:	2300      	movs	r3, #0
 801974c:	f04f 0a01 	mov.w	sl, #1
 8019750:	9307      	str	r3, [sp, #28]
 8019752:	469c      	mov	ip, r3
 8019754:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8019758:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801975c:	46d3      	mov	fp, sl
 801975e:	4657      	mov	r7, sl
 8019760:	930e      	str	r3, [sp, #56]	@ 0x38
 8019762:	2d00      	cmp	r5, #0
 8019764:	d07e      	beq.n	8019864 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8019766:	42af      	cmp	r7, r5
 8019768:	d26e      	bcs.n	8019848 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801976a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801976c:	9201      	str	r2, [sp, #4]
 801976e:	1bed      	subs	r5, r5, r7
 8019770:	4283      	cmp	r3, r0
 8019772:	b2ad      	uxth	r5, r5
 8019774:	d802      	bhi.n	801977c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8019776:	e073      	b.n	8019860 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8019778:	2b00      	cmp	r3, #0
 801977a:	d15f      	bne.n	801983c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801977c:	9b03      	ldr	r3, [sp, #12]
 801977e:	785b      	ldrb	r3, [r3, #1]
 8019780:	f1cb 0207 	rsb	r2, fp, #7
 8019784:	4093      	lsls	r3, r2
 8019786:	005b      	lsls	r3, r3, #1
 8019788:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801978c:	9b03      	ldr	r3, [sp, #12]
 801978e:	781b      	ldrb	r3, [r3, #0]
 8019790:	fa43 f30b 	asr.w	r3, r3, fp
 8019794:	b2db      	uxtb	r3, r3
 8019796:	4313      	orrs	r3, r2
 8019798:	f10b 0201 	add.w	r2, fp, #1
 801979c:	fa5f fb82 	uxtb.w	fp, r2
 80197a0:	9a03      	ldr	r2, [sp, #12]
 80197a2:	f1bb 0f08 	cmp.w	fp, #8
 80197a6:	bf15      	itete	ne
 80197a8:	3201      	addne	r2, #1
 80197aa:	3202      	addeq	r2, #2
 80197ac:	9203      	strne	r2, [sp, #12]
 80197ae:	9203      	streq	r2, [sp, #12]
 80197b0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80197b2:	b29f      	uxth	r7, r3
 80197b4:	bf08      	it	eq
 80197b6:	f04f 0b00 	moveq.w	fp, #0
 80197ba:	42ba      	cmp	r2, r7
 80197bc:	d309      	bcc.n	80197d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 80197be:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 80197c2:	2301      	movs	r3, #1
 80197c4:	9a05      	ldr	r2, [sp, #20]
 80197c6:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 80197ca:	d30e      	bcc.n	80197ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 80197cc:	469a      	mov	sl, r3
 80197ce:	2600      	movs	r6, #0
 80197d0:	e035      	b.n	801983e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 80197d2:	9b05      	ldr	r3, [sp, #20]
 80197d4:	429f      	cmp	r7, r3
 80197d6:	d318      	bcc.n	801980a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 80197d8:	eb04 030a 	add.w	r3, r4, sl
 80197dc:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 80197e0:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 80197e4:	f10a 0301 	add.w	r3, sl, #1
 80197e8:	b29b      	uxth	r3, r3
 80197ea:	9a05      	ldr	r2, [sp, #20]
 80197ec:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 80197f0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80197f2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80197f6:	7116      	strb	r6, [r2, #4]
 80197f8:	f10a 0601 	add.w	r6, sl, #1
 80197fc:	80d1      	strh	r1, [r2, #6]
 80197fe:	7156      	strb	r6, [r2, #5]
 8019800:	9a05      	ldr	r2, [sp, #20]
 8019802:	3201      	adds	r2, #1
 8019804:	b292      	uxth	r2, r2
 8019806:	9205      	str	r2, [sp, #20]
 8019808:	e7e0      	b.n	80197cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801980a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801980e:	463a      	mov	r2, r7
 8019810:	795b      	ldrb	r3, [r3, #5]
 8019812:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8019816:	4426      	add	r6, r4
 8019818:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801981a:	eb01 0c06 	add.w	ip, r1, r6
 801981e:	f1bc 0f00 	cmp.w	ip, #0
 8019822:	dd07      	ble.n	8019834 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8019824:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8019828:	f892 c004 	ldrb.w	ip, [r2, #4]
 801982c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8019830:	88d2      	ldrh	r2, [r2, #6]
 8019832:	e7f1      	b.n	8019818 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8019834:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8019838:	b29b      	uxth	r3, r3
 801983a:	e7c3      	b.n	80197c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801983c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801983e:	970c      	str	r7, [sp, #48]	@ 0x30
 8019840:	9a01      	ldr	r2, [sp, #4]
 8019842:	46b4      	mov	ip, r6
 8019844:	461f      	mov	r7, r3
 8019846:	e78c      	b.n	8019762 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8019848:	1b7b      	subs	r3, r7, r5
 801984a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801984e:	9201      	str	r2, [sp, #4]
 8019850:	eb0c 0605 	add.w	r6, ip, r5
 8019854:	b29b      	uxth	r3, r3
 8019856:	b2b6      	uxth	r6, r6
 8019858:	2500      	movs	r5, #0
 801985a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801985c:	4282      	cmp	r2, r0
 801985e:	d88b      	bhi.n	8019778 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8019860:	9a01      	ldr	r2, [sp, #4]
 8019862:	e74b      	b.n	80196fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8019864:	4297      	cmp	r7, r2
 8019866:	d332      	bcc.n	80198ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8019868:	1abb      	subs	r3, r7, r2
 801986a:	b29b      	uxth	r3, r3
 801986c:	9208      	str	r2, [sp, #32]
 801986e:	9501      	str	r5, [sp, #4]
 8019870:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019872:	29ff      	cmp	r1, #255	@ 0xff
 8019874:	9908      	ldr	r1, [sp, #32]
 8019876:	eb0c 0601 	add.w	r6, ip, r1
 801987a:	d135      	bne.n	80198e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801987c:	f1a0 0e02 	sub.w	lr, r0, #2
 8019880:	b2b6      	uxth	r6, r6
 8019882:	45b4      	cmp	ip, r6
 8019884:	f040 808c 	bne.w	80199a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8019888:	9908      	ldr	r1, [sp, #32]
 801988a:	4297      	cmp	r7, r2
 801988c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8019890:	d3e2      	bcc.n	8019858 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8019892:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8019894:	9904      	ldr	r1, [sp, #16]
 8019896:	8812      	ldrh	r2, [r2, #0]
 8019898:	1a52      	subs	r2, r2, r1
 801989a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801989e:	9a07      	ldr	r2, [sp, #28]
 80198a0:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80198a2:	3201      	adds	r2, #1
 80198a4:	428a      	cmp	r2, r1
 80198a6:	9207      	str	r2, [sp, #28]
 80198a8:	f040 8087 	bne.w	80199ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 80198ac:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80198b0:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 80198b4:	9b04      	ldr	r3, [sp, #16]
 80198b6:	1bed      	subs	r5, r5, r7
 80198b8:	b2ad      	uxth	r5, r5
 80198ba:	2d00      	cmp	r5, #0
 80198bc:	bf08      	it	eq
 80198be:	461a      	moveq	r2, r3
 80198c0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80198c2:	bf18      	it	ne
 80198c4:	2200      	movne	r2, #0
 80198c6:	3301      	adds	r3, #1
 80198c8:	930d      	str	r3, [sp, #52]	@ 0x34
 80198ca:	b292      	uxth	r2, r2
 80198cc:	e70d      	b.n	80196ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 80198ce:	1bd1      	subs	r1, r2, r7
 80198d0:	b28b      	uxth	r3, r1
 80198d2:	9301      	str	r3, [sp, #4]
 80198d4:	9708      	str	r7, [sp, #32]
 80198d6:	462b      	mov	r3, r5
 80198d8:	e7ca      	b.n	8019870 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 80198da:	bf00      	nop
 80198dc:	200023a8 	.word	0x200023a8
 80198e0:	200023a2 	.word	0x200023a2
 80198e4:	fffff7fb 	.word	0xfffff7fb
 80198e8:	b2b6      	uxth	r6, r6
 80198ea:	900b      	str	r0, [sp, #44]	@ 0x2c
 80198ec:	45b4      	cmp	ip, r6
 80198ee:	d0cb      	beq.n	8019888 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 80198f0:	f10c 0101 	add.w	r1, ip, #1
 80198f4:	44a4      	add	ip, r4
 80198f6:	9117      	str	r1, [sp, #92]	@ 0x5c
 80198f8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80198fc:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80198fe:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8019902:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8019904:	f8b1 c000 	ldrh.w	ip, [r1]
 8019908:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801990a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801990e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8019912:	fb1e fe01 	smulbb	lr, lr, r1
 8019916:	ea4f 2825 	mov.w	r8, r5, asr #8
 801991a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801991c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8019920:	fb08 e801 	mla	r8, r8, r1, lr
 8019924:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8019928:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801992a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801992e:	fb19 f901 	smulbb	r9, r9, r1
 8019932:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8019936:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019938:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801993c:	fb0e 9e01 	mla	lr, lr, r1, r9
 8019940:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019944:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8019946:	fa5f fc8c 	uxtb.w	ip, ip
 801994a:	fb1c fc01 	smulbb	ip, ip, r1
 801994e:	00ed      	lsls	r5, r5, #3
 8019950:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019952:	b2ed      	uxtb	r5, r5
 8019954:	fb05 c501 	mla	r5, r5, r1, ip
 8019958:	fa1f f888 	uxth.w	r8, r8
 801995c:	fa1f fe8e 	uxth.w	lr, lr
 8019960:	b2ad      	uxth	r5, r5
 8019962:	f108 0c01 	add.w	ip, r8, #1
 8019966:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801996a:	f10e 0901 	add.w	r9, lr, #1
 801996e:	f105 0c01 	add.w	ip, r5, #1
 8019972:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8019976:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801997a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801997e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8019982:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019986:	ea4c 0808 	orr.w	r8, ip, r8
 801998a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801998c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8019990:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019994:	ea48 0809 	orr.w	r8, r8, r9
 8019998:	f821 8b02 	strh.w	r8, [r1], #2
 801999c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801999e:	e7a5      	b.n	80198ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 80199a0:	f10c 0801 	add.w	r8, ip, #1
 80199a4:	44a4      	add	ip, r4
 80199a6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80199a8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80199ac:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80199b0:	f82e 5f02 	strh.w	r5, [lr, #2]!
 80199b4:	fa1f fc88 	uxth.w	ip, r8
 80199b8:	e763      	b.n	8019882 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 80199ba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80199be:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80199c2:	1aad      	subs	r5, r5, r2
 80199c4:	b2ad      	uxth	r5, r5
 80199c6:	2d00      	cmp	r5, #0
 80199c8:	bf18      	it	ne
 80199ca:	2200      	movne	r2, #0
 80199cc:	9201      	str	r2, [sp, #4]
 80199ce:	e744      	b.n	801985a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 80199d0:	4b03      	ldr	r3, [pc, #12]	@ (80199e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 80199d2:	6818      	ldr	r0, [r3, #0]
 80199d4:	6803      	ldr	r3, [r0, #0]
 80199d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80199d8:	4798      	blx	r3
 80199da:	b01f      	add	sp, #124	@ 0x7c
 80199dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199e0:	200023a8 	.word	0x200023a8

080199e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80199e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199e8:	b08f      	sub	sp, #60	@ 0x3c
 80199ea:	461c      	mov	r4, r3
 80199ec:	9203      	str	r2, [sp, #12]
 80199ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80199f2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80199f4:	9202      	str	r2, [sp, #8]
 80199f6:	460f      	mov	r7, r1
 80199f8:	2a00      	cmp	r2, #0
 80199fa:	f000 8128 	beq.w	8019c4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 80199fe:	6820      	ldr	r0, [r4, #0]
 8019a00:	6861      	ldr	r1, [r4, #4]
 8019a02:	aa0a      	add	r2, sp, #40	@ 0x28
 8019a04:	c203      	stmia	r2!, {r0, r1}
 8019a06:	6818      	ldr	r0, [r3, #0]
 8019a08:	6859      	ldr	r1, [r3, #4]
 8019a0a:	aa0c      	add	r2, sp, #48	@ 0x30
 8019a0c:	c203      	stmia	r2!, {r0, r1}
 8019a0e:	a80a      	add	r0, sp, #40	@ 0x28
 8019a10:	f7f9 f9bc 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019a14:	4621      	mov	r1, r4
 8019a16:	a80c      	add	r0, sp, #48	@ 0x30
 8019a18:	f7f9 f9e0 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019a1c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8019a20:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8019a24:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8019a28:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8019a2c:	bfde      	ittt	le
 8019a2e:	b2b3      	uxthle	r3, r6
 8019a30:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8019a34:	fb92 f3f3 	sdivle	r3, r2, r3
 8019a38:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8019a3c:	bfc8      	it	gt
 8019a3e:	2301      	movgt	r3, #1
 8019a40:	fb92 f1f3 	sdiv	r1, r2, r3
 8019a44:	fa1f fc81 	uxth.w	ip, r1
 8019a48:	fb0c 2413 	mls	r4, ip, r3, r2
 8019a4c:	fb14 f406 	smulbb	r4, r4, r6
 8019a50:	441d      	add	r5, r3
 8019a52:	4404      	add	r4, r0
 8019a54:	4661      	mov	r1, ip
 8019a56:	3d01      	subs	r5, #1
 8019a58:	b2a4      	uxth	r4, r4
 8019a5a:	fb95 f5f3 	sdiv	r5, r5, r3
 8019a5e:	b121      	cbz	r1, 8019a6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8019a60:	9b03      	ldr	r3, [sp, #12]
 8019a62:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8019a66:	ba1b      	rev	r3, r3
 8019a68:	441f      	add	r7, r3
 8019a6a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8019a6e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8019a72:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8019a76:	4418      	add	r0, r3
 8019a78:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8019a7c:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8019a80:	441a      	add	r2, r3
 8019a82:	4b74      	ldr	r3, [pc, #464]	@ (8019c54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8019a84:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8019a88:	6818      	ldr	r0, [r3, #0]
 8019a8a:	6803      	ldr	r3, [r0, #0]
 8019a8c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019a8e:	4798      	blx	r3
 8019a90:	4a71      	ldr	r2, [pc, #452]	@ (8019c58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8019a92:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8019a96:	8813      	ldrh	r3, [r2, #0]
 8019a98:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8019a9c:	9209      	str	r2, [sp, #36]	@ 0x24
 8019a9e:	fb03 c101 	mla	r1, r3, r1, ip
 8019aa2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8019aa6:	4373      	muls	r3, r6
 8019aa8:	b2ad      	uxth	r5, r5
 8019aaa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019aae:	00ad      	lsls	r5, r5, #2
 8019ab0:	2c00      	cmp	r4, #0
 8019ab2:	9304      	str	r3, [sp, #16]
 8019ab4:	f105 0304 	add.w	r3, r5, #4
 8019ab8:	9305      	str	r3, [sp, #20]
 8019aba:	bf0c      	ite	eq
 8019abc:	46c8      	moveq	r8, r9
 8019abe:	f04f 0800 	movne.w	r8, #0
 8019ac2:	2300      	movs	r3, #0
 8019ac4:	fa1f f888 	uxth.w	r8, r8
 8019ac8:	9301      	str	r3, [sp, #4]
 8019aca:	9a04      	ldr	r2, [sp, #16]
 8019acc:	4282      	cmp	r2, r0
 8019ace:	f240 80b9 	bls.w	8019c44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8019ad2:	b95b      	cbnz	r3, 8019aec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8019ad4:	783a      	ldrb	r2, [r7, #0]
 8019ad6:	0993      	lsrs	r3, r2, #6
 8019ad8:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8019adc:	9201      	str	r2, [sp, #4]
 8019ade:	1e5a      	subs	r2, r3, #1
 8019ae0:	2a02      	cmp	r2, #2
 8019ae2:	bf8d      	iteet	hi
 8019ae4:	787b      	ldrbhi	r3, [r7, #1]
 8019ae6:	3701      	addls	r7, #1
 8019ae8:	b29b      	uxthls	r3, r3
 8019aea:	3702      	addhi	r7, #2
 8019aec:	b184      	cbz	r4, 8019b10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8019aee:	429c      	cmp	r4, r3
 8019af0:	bf95      	itete	ls
 8019af2:	1b1c      	subls	r4, r3, r4
 8019af4:	1ae4      	subhi	r4, r4, r3
 8019af6:	fa1f fa84 	uxthls.w	sl, r4
 8019afa:	b2a4      	uxthhi	r4, r4
 8019afc:	bf87      	ittee	hi
 8019afe:	46c4      	movhi	ip, r8
 8019b00:	f04f 0a00 	movhi.w	sl, #0
 8019b04:	fa1f fc89 	uxthls.w	ip, r9
 8019b08:	2400      	movls	r4, #0
 8019b0a:	4653      	mov	r3, sl
 8019b0c:	46e0      	mov	r8, ip
 8019b0e:	e7dc      	b.n	8019aca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8019b10:	2204      	movs	r2, #4
 8019b12:	4615      	mov	r5, r2
 8019b14:	9905      	ldr	r1, [sp, #20]
 8019b16:	9a01      	ldr	r2, [sp, #4]
 8019b18:	fb15 1202 	smlabb	r2, r5, r2, r1
 8019b1c:	9903      	ldr	r1, [sp, #12]
 8019b1e:	588a      	ldr	r2, [r1, r2]
 8019b20:	4543      	cmp	r3, r8
 8019b22:	bf27      	ittee	cs
 8019b24:	eba3 0a08 	subcs.w	sl, r3, r8
 8019b28:	46c6      	movcs	lr, r8
 8019b2a:	eba8 0c03 	subcc.w	ip, r8, r3
 8019b2e:	469e      	movcc	lr, r3
 8019b30:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8019b34:	bf27      	ittee	cs
 8019b36:	fa1f fa8a 	uxthcs.w	sl, sl
 8019b3a:	46a4      	movcs	ip, r4
 8019b3c:	fa1f fc8c 	uxthcc.w	ip, ip
 8019b40:	46a2      	movcc	sl, r4
 8019b42:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8019b46:	2900      	cmp	r1, #0
 8019b48:	d066      	beq.n	8019c18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8019b4a:	29ff      	cmp	r1, #255	@ 0xff
 8019b4c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8019b50:	d114      	bne.n	8019b7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8019b52:	9d02      	ldr	r5, [sp, #8]
 8019b54:	2dff      	cmp	r5, #255	@ 0xff
 8019b56:	d111      	bne.n	8019b7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8019b58:	0951      	lsrs	r1, r2, #5
 8019b5a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019b5e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019b62:	f026 0607 	bic.w	r6, r6, #7
 8019b66:	430e      	orrs	r6, r1
 8019b68:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019b6c:	4316      	orrs	r6, r2
 8019b6e:	b2b6      	uxth	r6, r6
 8019b70:	4486      	add	lr, r0
 8019b72:	4586      	cmp	lr, r0
 8019b74:	d051      	beq.n	8019c1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8019b76:	f820 6b02 	strh.w	r6, [r0], #2
 8019b7a:	e7fa      	b.n	8019b72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8019b7c:	9d02      	ldr	r5, [sp, #8]
 8019b7e:	4369      	muls	r1, r5
 8019b80:	1c4d      	adds	r5, r1, #1
 8019b82:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8019b86:	122d      	asrs	r5, r5, #8
 8019b88:	ea6f 0b05 	mvn.w	fp, r5
 8019b8c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8019b90:	b2ad      	uxth	r5, r5
 8019b92:	b2f6      	uxtb	r6, r6
 8019b94:	b2d2      	uxtb	r2, r2
 8019b96:	fb11 f105 	smulbb	r1, r1, r5
 8019b9a:	fb16 f605 	smulbb	r6, r6, r5
 8019b9e:	fb12 f205 	smulbb	r2, r2, r5
 8019ba2:	b289      	uxth	r1, r1
 8019ba4:	b2b6      	uxth	r6, r6
 8019ba6:	b292      	uxth	r2, r2
 8019ba8:	9106      	str	r1, [sp, #24]
 8019baa:	9607      	str	r6, [sp, #28]
 8019bac:	9208      	str	r2, [sp, #32]
 8019bae:	4486      	add	lr, r0
 8019bb0:	fa5f fb8b 	uxtb.w	fp, fp
 8019bb4:	4586      	cmp	lr, r0
 8019bb6:	d030      	beq.n	8019c1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8019bb8:	8802      	ldrh	r2, [r0, #0]
 8019bba:	9906      	ldr	r1, [sp, #24]
 8019bbc:	1216      	asrs	r6, r2, #8
 8019bbe:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019bc2:	10d5      	asrs	r5, r2, #3
 8019bc4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8019bc8:	fb06 160b 	mla	r6, r6, fp, r1
 8019bcc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019bd0:	9907      	ldr	r1, [sp, #28]
 8019bd2:	00d2      	lsls	r2, r2, #3
 8019bd4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019bd8:	fb05 150b 	mla	r5, r5, fp, r1
 8019bdc:	b2d2      	uxtb	r2, r2
 8019bde:	9908      	ldr	r1, [sp, #32]
 8019be0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019be4:	b2b6      	uxth	r6, r6
 8019be6:	fb02 120b 	mla	r2, r2, fp, r1
 8019bea:	b292      	uxth	r2, r2
 8019bec:	1c71      	adds	r1, r6, #1
 8019bee:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8019bf2:	1c51      	adds	r1, r2, #1
 8019bf4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019bf8:	b2ad      	uxth	r5, r5
 8019bfa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019bfe:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8019c02:	4316      	orrs	r6, r2
 8019c04:	1c6a      	adds	r2, r5, #1
 8019c06:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8019c0a:	096d      	lsrs	r5, r5, #5
 8019c0c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019c10:	432e      	orrs	r6, r5
 8019c12:	f820 6b02 	strh.w	r6, [r0], #2
 8019c16:	e7cd      	b.n	8019bb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8019c18:	4470      	add	r0, lr
 8019c1a:	4543      	cmp	r3, r8
 8019c1c:	f4ff af75 	bcc.w	8019b0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8019c20:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8019c24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019c26:	fa1f fc89 	uxth.w	ip, r9
 8019c2a:	eba4 040c 	sub.w	r4, r4, ip
 8019c2e:	881b      	ldrh	r3, [r3, #0]
 8019c30:	b2a4      	uxth	r4, r4
 8019c32:	2c00      	cmp	r4, #0
 8019c34:	eba3 0309 	sub.w	r3, r3, r9
 8019c38:	bf18      	it	ne
 8019c3a:	f04f 0c00 	movne.w	ip, #0
 8019c3e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019c42:	e762      	b.n	8019b0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8019c44:	4b03      	ldr	r3, [pc, #12]	@ (8019c54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8019c46:	6818      	ldr	r0, [r3, #0]
 8019c48:	6803      	ldr	r3, [r0, #0]
 8019c4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019c4c:	4798      	blx	r3
 8019c4e:	b00f      	add	sp, #60	@ 0x3c
 8019c50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c54:	200023a8 	.word	0x200023a8
 8019c58:	200023a2 	.word	0x200023a2

08019c5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8019c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c60:	b093      	sub	sp, #76	@ 0x4c
 8019c62:	461c      	mov	r4, r3
 8019c64:	9205      	str	r2, [sp, #20]
 8019c66:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8019c6a:	9101      	str	r1, [sp, #4]
 8019c6c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019c6e:	9202      	str	r2, [sp, #8]
 8019c70:	2a00      	cmp	r2, #0
 8019c72:	f000 812c 	beq.w	8019ece <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8019c76:	6820      	ldr	r0, [r4, #0]
 8019c78:	6861      	ldr	r1, [r4, #4]
 8019c7a:	aa0e      	add	r2, sp, #56	@ 0x38
 8019c7c:	c203      	stmia	r2!, {r0, r1}
 8019c7e:	6818      	ldr	r0, [r3, #0]
 8019c80:	6859      	ldr	r1, [r3, #4]
 8019c82:	aa10      	add	r2, sp, #64	@ 0x40
 8019c84:	c203      	stmia	r2!, {r0, r1}
 8019c86:	a80e      	add	r0, sp, #56	@ 0x38
 8019c88:	f7f9 f880 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019c8c:	4621      	mov	r1, r4
 8019c8e:	a810      	add	r0, sp, #64	@ 0x40
 8019c90:	f7f9 f8a4 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019c94:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8019c98:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8019c9c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8019ca0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8019ca4:	bfde      	ittt	le
 8019ca6:	b2b3      	uxthle	r3, r6
 8019ca8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8019cac:	fb92 f3f3 	sdivle	r3, r2, r3
 8019cb0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8019cb4:	bfc8      	it	gt
 8019cb6:	2301      	movgt	r3, #1
 8019cb8:	fb92 f1f3 	sdiv	r1, r2, r3
 8019cbc:	fa1f fc81 	uxth.w	ip, r1
 8019cc0:	fb0c 2413 	mls	r4, ip, r3, r2
 8019cc4:	fb14 f406 	smulbb	r4, r4, r6
 8019cc8:	441d      	add	r5, r3
 8019cca:	4404      	add	r4, r0
 8019ccc:	4661      	mov	r1, ip
 8019cce:	3d01      	subs	r5, #1
 8019cd0:	b2a4      	uxth	r4, r4
 8019cd2:	fb95 f5f3 	sdiv	r5, r5, r3
 8019cd6:	b131      	cbz	r1, 8019ce6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8019cd8:	9b05      	ldr	r3, [sp, #20]
 8019cda:	9901      	ldr	r1, [sp, #4]
 8019cdc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8019ce0:	ba1b      	rev	r3, r3
 8019ce2:	4419      	add	r1, r3
 8019ce4:	9101      	str	r1, [sp, #4]
 8019ce6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8019cea:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8019cee:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8019cf2:	4418      	add	r0, r3
 8019cf4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8019cf8:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8019cfc:	441a      	add	r2, r3
 8019cfe:	4b75      	ldr	r3, [pc, #468]	@ (8019ed4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8019d00:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8019d04:	6818      	ldr	r0, [r3, #0]
 8019d06:	6803      	ldr	r3, [r0, #0]
 8019d08:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019d0a:	4798      	blx	r3
 8019d0c:	4972      	ldr	r1, [pc, #456]	@ (8019ed8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8019d0e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8019d12:	880b      	ldrh	r3, [r1, #0]
 8019d14:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8019d18:	910d      	str	r1, [sp, #52]	@ 0x34
 8019d1a:	fb03 c202 	mla	r2, r3, r2, ip
 8019d1e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019d22:	4373      	muls	r3, r6
 8019d24:	b2ad      	uxth	r5, r5
 8019d26:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019d2a:	00ad      	lsls	r5, r5, #2
 8019d2c:	9308      	str	r3, [sp, #32]
 8019d2e:	1d2b      	adds	r3, r5, #4
 8019d30:	9309      	str	r3, [sp, #36]	@ 0x24
 8019d32:	9b02      	ldr	r3, [sp, #8]
 8019d34:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019d38:	9106      	str	r1, [sp, #24]
 8019d3a:	43da      	mvns	r2, r3
 8019d3c:	2c00      	cmp	r4, #0
 8019d3e:	bf0c      	ite	eq
 8019d40:	46dc      	moveq	ip, fp
 8019d42:	f04f 0c00 	movne.w	ip, #0
 8019d46:	2300      	movs	r3, #0
 8019d48:	b2d2      	uxtb	r2, r2
 8019d4a:	fa1f fc8c 	uxth.w	ip, ip
 8019d4e:	9303      	str	r3, [sp, #12]
 8019d50:	9207      	str	r2, [sp, #28]
 8019d52:	9a08      	ldr	r2, [sp, #32]
 8019d54:	4282      	cmp	r2, r0
 8019d56:	f240 80b5 	bls.w	8019ec4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8019d5a:	b963      	cbnz	r3, 8019d76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8019d5c:	9b01      	ldr	r3, [sp, #4]
 8019d5e:	781a      	ldrb	r2, [r3, #0]
 8019d60:	0993      	lsrs	r3, r2, #6
 8019d62:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8019d66:	9203      	str	r2, [sp, #12]
 8019d68:	1e5a      	subs	r2, r3, #1
 8019d6a:	2a02      	cmp	r2, #2
 8019d6c:	d815      	bhi.n	8019d9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8019d6e:	9a01      	ldr	r2, [sp, #4]
 8019d70:	3201      	adds	r2, #1
 8019d72:	9201      	str	r2, [sp, #4]
 8019d74:	b29b      	uxth	r3, r3
 8019d76:	b1b4      	cbz	r4, 8019da6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8019d78:	429c      	cmp	r4, r3
 8019d7a:	bf95      	itete	ls
 8019d7c:	1b1c      	subls	r4, r3, r4
 8019d7e:	1ae4      	subhi	r4, r4, r3
 8019d80:	fa1f f884 	uxthls.w	r8, r4
 8019d84:	b2a4      	uxthhi	r4, r4
 8019d86:	bf87      	ittee	hi
 8019d88:	4666      	movhi	r6, ip
 8019d8a:	f04f 0800 	movhi.w	r8, #0
 8019d8e:	fa1f f68b 	uxthls.w	r6, fp
 8019d92:	2400      	movls	r4, #0
 8019d94:	4643      	mov	r3, r8
 8019d96:	46b4      	mov	ip, r6
 8019d98:	e7db      	b.n	8019d52 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8019d9a:	9a01      	ldr	r2, [sp, #4]
 8019d9c:	9b01      	ldr	r3, [sp, #4]
 8019d9e:	3202      	adds	r2, #2
 8019da0:	785b      	ldrb	r3, [r3, #1]
 8019da2:	9201      	str	r2, [sp, #4]
 8019da4:	e7e7      	b.n	8019d76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8019da6:	2203      	movs	r2, #3
 8019da8:	4615      	mov	r5, r2
 8019daa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019dac:	9a03      	ldr	r2, [sp, #12]
 8019dae:	fb15 1202 	smlabb	r2, r5, r2, r1
 8019db2:	9905      	ldr	r1, [sp, #20]
 8019db4:	4563      	cmp	r3, ip
 8019db6:	eb01 0502 	add.w	r5, r1, r2
 8019dba:	9902      	ldr	r1, [sp, #8]
 8019dbc:	bf29      	itett	cs
 8019dbe:	eba3 080c 	subcs.w	r8, r3, ip
 8019dc2:	ebac 0603 	subcc.w	r6, ip, r3
 8019dc6:	fa1f f888 	uxthcs.w	r8, r8
 8019dca:	46e1      	movcs	r9, ip
 8019dcc:	bf2f      	iteee	cs
 8019dce:	4626      	movcs	r6, r4
 8019dd0:	b2b6      	uxthcc	r6, r6
 8019dd2:	4699      	movcc	r9, r3
 8019dd4:	46a0      	movcc	r8, r4
 8019dd6:	29ff      	cmp	r1, #255	@ 0xff
 8019dd8:	d04a      	beq.n	8019e70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8019dda:	9f06      	ldr	r7, [sp, #24]
 8019ddc:	78a9      	ldrb	r1, [r5, #2]
 8019dde:	9004      	str	r0, [sp, #16]
 8019de0:	4379      	muls	r1, r7
 8019de2:	910a      	str	r1, [sp, #40]	@ 0x28
 8019de4:	7869      	ldrb	r1, [r5, #1]
 8019de6:	4379      	muls	r1, r7
 8019de8:	910b      	str	r1, [sp, #44]	@ 0x2c
 8019dea:	9905      	ldr	r1, [sp, #20]
 8019dec:	5c8a      	ldrb	r2, [r1, r2]
 8019dee:	437a      	muls	r2, r7
 8019df0:	920c      	str	r2, [sp, #48]	@ 0x30
 8019df2:	46ca      	mov	sl, r9
 8019df4:	f1ba 0f00 	cmp.w	sl, #0
 8019df8:	d03d      	beq.n	8019e76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8019dfa:	9a04      	ldr	r2, [sp, #16]
 8019dfc:	9f07      	ldr	r7, [sp, #28]
 8019dfe:	8812      	ldrh	r2, [r2, #0]
 8019e00:	1215      	asrs	r5, r2, #8
 8019e02:	46be      	mov	lr, r7
 8019e04:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019e08:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8019e0a:	10d1      	asrs	r1, r2, #3
 8019e0c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8019e10:	fb05 750e 	mla	r5, r5, lr, r7
 8019e14:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019e18:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8019e1a:	00d2      	lsls	r2, r2, #3
 8019e1c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8019e20:	fb01 710e 	mla	r1, r1, lr, r7
 8019e24:	b2d2      	uxtb	r2, r2
 8019e26:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8019e28:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019e2c:	b2ad      	uxth	r5, r5
 8019e2e:	fb02 720e 	mla	r2, r2, lr, r7
 8019e32:	b292      	uxth	r2, r2
 8019e34:	f105 0e01 	add.w	lr, r5, #1
 8019e38:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8019e3c:	f102 0e01 	add.w	lr, r2, #1
 8019e40:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8019e44:	b289      	uxth	r1, r1
 8019e46:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019e4a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019e4e:	4315      	orrs	r5, r2
 8019e50:	1c4a      	adds	r2, r1, #1
 8019e52:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019e56:	0949      	lsrs	r1, r1, #5
 8019e58:	9a04      	ldr	r2, [sp, #16]
 8019e5a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019e5e:	430d      	orrs	r5, r1
 8019e60:	f822 5b02 	strh.w	r5, [r2], #2
 8019e64:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019e68:	9204      	str	r2, [sp, #16]
 8019e6a:	fa1f fa8a 	uxth.w	sl, sl
 8019e6e:	e7c1      	b.n	8019df4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8019e70:	4649      	mov	r1, r9
 8019e72:	4686      	mov	lr, r0
 8019e74:	b999      	cbnz	r1, 8019e9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8019e76:	4563      	cmp	r3, ip
 8019e78:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8019e7c:	d38a      	bcc.n	8019d94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8019e7e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8019e82:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019e84:	fa1f f68b 	uxth.w	r6, fp
 8019e88:	1ba4      	subs	r4, r4, r6
 8019e8a:	881b      	ldrh	r3, [r3, #0]
 8019e8c:	b2a4      	uxth	r4, r4
 8019e8e:	2c00      	cmp	r4, #0
 8019e90:	eba3 030b 	sub.w	r3, r3, fp
 8019e94:	bf18      	it	ne
 8019e96:	2600      	movne	r6, #0
 8019e98:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019e9c:	e77a      	b.n	8019d94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8019e9e:	78aa      	ldrb	r2, [r5, #2]
 8019ea0:	4f0e      	ldr	r7, [pc, #56]	@ (8019edc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8019ea2:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8019ea6:	786a      	ldrb	r2, [r5, #1]
 8019ea8:	00d2      	lsls	r2, r2, #3
 8019eaa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019eae:	ea4a 0202 	orr.w	r2, sl, r2
 8019eb2:	f895 a000 	ldrb.w	sl, [r5]
 8019eb6:	3901      	subs	r1, #1
 8019eb8:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8019ebc:	f82e 2b02 	strh.w	r2, [lr], #2
 8019ec0:	b289      	uxth	r1, r1
 8019ec2:	e7d7      	b.n	8019e74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8019ec4:	4b03      	ldr	r3, [pc, #12]	@ (8019ed4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8019ec6:	6818      	ldr	r0, [r3, #0]
 8019ec8:	6803      	ldr	r3, [r0, #0]
 8019eca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019ecc:	4798      	blx	r3
 8019ece:	b013      	add	sp, #76	@ 0x4c
 8019ed0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019ed4:	200023a8 	.word	0x200023a8
 8019ed8:	200023a2 	.word	0x200023a2
 8019edc:	fffff800 	.word	0xfffff800

08019ee0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8019ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ee4:	b09d      	sub	sp, #116	@ 0x74
 8019ee6:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8019eea:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8019eee:	920e      	str	r2, [sp, #56]	@ 0x38
 8019ef0:	461c      	mov	r4, r3
 8019ef2:	4683      	mov	fp, r0
 8019ef4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019ef6:	2a00      	cmp	r2, #0
 8019ef8:	f000 81e0 	beq.w	801a2bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8019efc:	6820      	ldr	r0, [r4, #0]
 8019efe:	6861      	ldr	r1, [r4, #4]
 8019f00:	aa18      	add	r2, sp, #96	@ 0x60
 8019f02:	c203      	stmia	r2!, {r0, r1}
 8019f04:	6818      	ldr	r0, [r3, #0]
 8019f06:	6859      	ldr	r1, [r3, #4]
 8019f08:	aa1a      	add	r2, sp, #104	@ 0x68
 8019f0a:	c203      	stmia	r2!, {r0, r1}
 8019f0c:	a818      	add	r0, sp, #96	@ 0x60
 8019f0e:	f7f8 ff3d 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019f12:	4621      	mov	r1, r4
 8019f14:	a81a      	add	r0, sp, #104	@ 0x68
 8019f16:	f7f8 ff61 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019f1a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8019f1e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8019f22:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8019f26:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8019f2a:	bfd7      	itett	le
 8019f2c:	b29a      	uxthle	r2, r3
 8019f2e:	2201      	movgt	r2, #1
 8019f30:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8019f34:	fb91 f2f2 	sdivle	r2, r1, r2
 8019f38:	9202      	str	r2, [sp, #8]
 8019f3a:	9802      	ldr	r0, [sp, #8]
 8019f3c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8019f40:	fb92 f0f0 	sdiv	r0, r2, r0
 8019f44:	b280      	uxth	r0, r0
 8019f46:	900f      	str	r0, [sp, #60]	@ 0x3c
 8019f48:	9902      	ldr	r1, [sp, #8]
 8019f4a:	9802      	ldr	r0, [sp, #8]
 8019f4c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8019f4e:	440c      	add	r4, r1
 8019f50:	fb05 2510 	mls	r5, r5, r0, r2
 8019f54:	fb15 f503 	smulbb	r5, r5, r3
 8019f58:	3c01      	subs	r4, #1
 8019f5a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8019f5e:	fb94 f4f1 	sdiv	r4, r4, r1
 8019f62:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8019f66:	440d      	add	r5, r1
 8019f68:	4419      	add	r1, r3
 8019f6a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8019f6e:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8019f72:	441a      	add	r2, r3
 8019f74:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8019f78:	9306      	str	r3, [sp, #24]
 8019f7a:	4bb3      	ldr	r3, [pc, #716]	@ (801a248 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8019f7c:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8019f80:	6818      	ldr	r0, [r3, #0]
 8019f82:	6803      	ldr	r3, [r0, #0]
 8019f84:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019f86:	4798      	blx	r3
 8019f88:	4bb0      	ldr	r3, [pc, #704]	@ (801a24c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8019f8a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8019f8e:	881a      	ldrh	r2, [r3, #0]
 8019f90:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8019f94:	9316      	str	r3, [sp, #88]	@ 0x58
 8019f96:	fb02 7101 	mla	r1, r2, r1, r7
 8019f9a:	3401      	adds	r4, #1
 8019f9c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8019fa0:	b2a4      	uxth	r4, r4
 8019fa2:	4356      	muls	r6, r2
 8019fa4:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8019fa8:	00a4      	lsls	r4, r4, #2
 8019faa:	920a      	str	r2, [sp, #40]	@ 0x28
 8019fac:	1d22      	adds	r2, r4, #4
 8019fae:	b2ad      	uxth	r5, r5
 8019fb0:	9213      	str	r2, [sp, #76]	@ 0x4c
 8019fb2:	4ba7      	ldr	r3, [pc, #668]	@ (801a250 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8019fb4:	9a06      	ldr	r2, [sp, #24]
 8019fb6:	2d00      	cmp	r5, #0
 8019fb8:	bf0c      	ite	eq
 8019fba:	4611      	moveq	r1, r2
 8019fbc:	2100      	movne	r1, #0
 8019fbe:	2200      	movs	r2, #0
 8019fc0:	eba3 030b 	sub.w	r3, r3, fp
 8019fc4:	b289      	uxth	r1, r1
 8019fc6:	920d      	str	r2, [sp, #52]	@ 0x34
 8019fc8:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019fca:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019fcc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019fce:	fa12 f383 	uxtah	r3, r2, r3
 8019fd2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019fd4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8019fd8:	3304      	adds	r3, #4
 8019fda:	9308      	str	r3, [sp, #32]
 8019fdc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019fde:	4543      	cmp	r3, r8
 8019fe0:	f240 8167 	bls.w	801a2b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8019fe4:	9a02      	ldr	r2, [sp, #8]
 8019fe6:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8019fea:	fbb5 f3f3 	udiv	r3, r5, r3
 8019fee:	1ad3      	subs	r3, r2, r3
 8019ff0:	b29b      	uxth	r3, r3
 8019ff2:	9314      	str	r3, [sp, #80]	@ 0x50
 8019ff4:	9b08      	ldr	r3, [sp, #32]
 8019ff6:	9808      	ldr	r0, [sp, #32]
 8019ff8:	785a      	ldrb	r2, [r3, #1]
 8019ffa:	789b      	ldrb	r3, [r3, #2]
 8019ffc:	7800      	ldrb	r0, [r0, #0]
 8019ffe:	9010      	str	r0, [sp, #64]	@ 0x40
 801a000:	021b      	lsls	r3, r3, #8
 801a002:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801a006:	9a08      	ldr	r2, [sp, #32]
 801a008:	78d2      	ldrb	r2, [r2, #3]
 801a00a:	4313      	orrs	r3, r2
 801a00c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a00e:	3001      	adds	r0, #1
 801a010:	441a      	add	r2, r3
 801a012:	9007      	str	r0, [sp, #28]
 801a014:	1c50      	adds	r0, r2, #1
 801a016:	9005      	str	r0, [sp, #20]
 801a018:	7852      	ldrb	r2, [r2, #1]
 801a01a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801a01c:	0212      	lsls	r2, r2, #8
 801a01e:	5cc3      	ldrb	r3, [r0, r3]
 801a020:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801a024:	431a      	orrs	r2, r3
 801a026:	b293      	uxth	r3, r2
 801a028:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a02a:	2300      	movs	r3, #0
 801a02c:	9309      	str	r3, [sp, #36]	@ 0x24
 801a02e:	2301      	movs	r3, #1
 801a030:	9301      	str	r3, [sp, #4]
 801a032:	9304      	str	r3, [sp, #16]
 801a034:	2300      	movs	r3, #0
 801a036:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801a03a:	9303      	str	r3, [sp, #12]
 801a03c:	f04f 0e01 	mov.w	lr, #1
 801a040:	2d00      	cmp	r5, #0
 801a042:	d07c      	beq.n	801a13e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801a044:	45ae      	cmp	lr, r5
 801a046:	d26b      	bcs.n	801a120 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801a048:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a04a:	eba5 050e 	sub.w	r5, r5, lr
 801a04e:	4543      	cmp	r3, r8
 801a050:	b2ad      	uxth	r5, r5
 801a052:	460c      	mov	r4, r1
 801a054:	d802      	bhi.n	801a05c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801a056:	e070      	b.n	801a13a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801a058:	2b00      	cmp	r3, #0
 801a05a:	d15c      	bne.n	801a116 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801a05c:	9b05      	ldr	r3, [sp, #20]
 801a05e:	9a04      	ldr	r2, [sp, #16]
 801a060:	785b      	ldrb	r3, [r3, #1]
 801a062:	9904      	ldr	r1, [sp, #16]
 801a064:	f1c2 0207 	rsb	r2, r2, #7
 801a068:	4093      	lsls	r3, r2
 801a06a:	005b      	lsls	r3, r3, #1
 801a06c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801a070:	9b05      	ldr	r3, [sp, #20]
 801a072:	781b      	ldrb	r3, [r3, #0]
 801a074:	410b      	asrs	r3, r1
 801a076:	3101      	adds	r1, #1
 801a078:	b2c9      	uxtb	r1, r1
 801a07a:	2908      	cmp	r1, #8
 801a07c:	9104      	str	r1, [sp, #16]
 801a07e:	9905      	ldr	r1, [sp, #20]
 801a080:	bf0a      	itet	eq
 801a082:	3102      	addeq	r1, #2
 801a084:	3101      	addne	r1, #1
 801a086:	9105      	streq	r1, [sp, #20]
 801a088:	b2db      	uxtb	r3, r3
 801a08a:	bf0a      	itet	eq
 801a08c:	2100      	moveq	r1, #0
 801a08e:	9105      	strne	r1, [sp, #20]
 801a090:	9104      	streq	r1, [sp, #16]
 801a092:	4313      	orrs	r3, r2
 801a094:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801a096:	b29a      	uxth	r2, r3
 801a098:	4291      	cmp	r1, r2
 801a09a:	d30a      	bcc.n	801a0b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801a09c:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801a0a0:	2301      	movs	r3, #1
 801a0a2:	9907      	ldr	r1, [sp, #28]
 801a0a4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801a0a8:	d30f      	bcc.n	801a0ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801a0aa:	2100      	movs	r1, #0
 801a0ac:	9301      	str	r3, [sp, #4]
 801a0ae:	9103      	str	r1, [sp, #12]
 801a0b0:	e032      	b.n	801a118 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801a0b2:	9b07      	ldr	r3, [sp, #28]
 801a0b4:	429a      	cmp	r2, r3
 801a0b6:	d318      	bcc.n	801a0ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801a0b8:	9b01      	ldr	r3, [sp, #4]
 801a0ba:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801a0be:	445b      	add	r3, fp
 801a0c0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801a0c4:	9b01      	ldr	r3, [sp, #4]
 801a0c6:	3301      	adds	r3, #1
 801a0c8:	b29b      	uxth	r3, r3
 801a0ca:	9907      	ldr	r1, [sp, #28]
 801a0cc:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801a0d0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801a0d4:	7108      	strb	r0, [r1, #4]
 801a0d6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801a0d8:	80c8      	strh	r0, [r1, #6]
 801a0da:	9801      	ldr	r0, [sp, #4]
 801a0dc:	3001      	adds	r0, #1
 801a0de:	7148      	strb	r0, [r1, #5]
 801a0e0:	9907      	ldr	r1, [sp, #28]
 801a0e2:	3101      	adds	r1, #1
 801a0e4:	b289      	uxth	r1, r1
 801a0e6:	9107      	str	r1, [sp, #28]
 801a0e8:	e7df      	b.n	801a0aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801a0ea:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801a0ee:	4611      	mov	r1, r2
 801a0f0:	795b      	ldrb	r3, [r3, #5]
 801a0f2:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801a0f6:	4458      	add	r0, fp
 801a0f8:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801a0fa:	4406      	add	r6, r0
 801a0fc:	2e00      	cmp	r6, #0
 801a0fe:	dd06      	ble.n	801a10e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801a100:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801a104:	790e      	ldrb	r6, [r1, #4]
 801a106:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801a10a:	88c9      	ldrh	r1, [r1, #6]
 801a10c:	e7f4      	b.n	801a0f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801a10e:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801a112:	b29b      	uxth	r3, r3
 801a114:	e7c5      	b.n	801a0a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801a116:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a118:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a11a:	4621      	mov	r1, r4
 801a11c:	469e      	mov	lr, r3
 801a11e:	e78f      	b.n	801a040 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801a120:	9a03      	ldr	r2, [sp, #12]
 801a122:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801a126:	442a      	add	r2, r5
 801a128:	ebae 0305 	sub.w	r3, lr, r5
 801a12c:	b292      	uxth	r2, r2
 801a12e:	b29b      	uxth	r3, r3
 801a130:	9203      	str	r2, [sp, #12]
 801a132:	2500      	movs	r5, #0
 801a134:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a136:	4542      	cmp	r2, r8
 801a138:	d88e      	bhi.n	801a058 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801a13a:	4621      	mov	r1, r4
 801a13c:	e74e      	b.n	8019fdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801a13e:	458e      	cmp	lr, r1
 801a140:	bf29      	itett	cs
 801a142:	ebae 0301 	subcs.w	r3, lr, r1
 801a146:	eba1 040e 	subcc.w	r4, r1, lr
 801a14a:	b29b      	uxthcs	r3, r3
 801a14c:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801a14e:	bf2f      	iteee	cs
 801a150:	462c      	movcs	r4, r5
 801a152:	b2a4      	uxthcc	r4, r4
 801a154:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801a158:	462b      	movcc	r3, r5
 801a15a:	f04f 0900 	mov.w	r9, #0
 801a15e:	9a03      	ldr	r2, [sp, #12]
 801a160:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801a162:	444a      	add	r2, r9
 801a164:	4548      	cmp	r0, r9
 801a166:	b292      	uxth	r2, r2
 801a168:	d074      	beq.n	801a254 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801a16a:	445a      	add	r2, fp
 801a16c:	2004      	movs	r0, #4
 801a16e:	4605      	mov	r5, r0
 801a170:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801a174:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a176:	fb15 0202 	smlabb	r2, r5, r2, r0
 801a17a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801a17c:	5880      	ldr	r0, [r0, r2]
 801a17e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801a182:	d014      	beq.n	801a1ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801a184:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801a188:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801a18c:	d112      	bne.n	801a1b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801a18e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a190:	2aff      	cmp	r2, #255	@ 0xff
 801a192:	d10f      	bne.n	801a1b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801a194:	0942      	lsrs	r2, r0, #5
 801a196:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801a19a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a19e:	f025 0507 	bic.w	r5, r5, #7
 801a1a2:	4315      	orrs	r5, r2
 801a1a4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a1a8:	4305      	orrs	r5, r0
 801a1aa:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801a1ae:	f109 0901 	add.w	r9, r9, #1
 801a1b2:	e7d4      	b.n	801a15e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801a1b4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801a1b8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a1bc:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801a1c0:	9215      	str	r2, [sp, #84]	@ 0x54
 801a1c2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a1c4:	fb02 fa0a 	mul.w	sl, r2, sl
 801a1c8:	f10a 0201 	add.w	r2, sl, #1
 801a1cc:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801a1d0:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a1d4:	1212      	asrs	r2, r2, #8
 801a1d6:	fa1f fa82 	uxth.w	sl, r2
 801a1da:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801a1de:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a1e2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a1e6:	43d2      	mvns	r2, r2
 801a1e8:	b2d2      	uxtb	r2, r2
 801a1ea:	fb16 f60a 	smulbb	r6, r6, sl
 801a1ee:	fa5f fc8c 	uxtb.w	ip, ip
 801a1f2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801a1f6:	b2c0      	uxtb	r0, r0
 801a1f8:	fb07 6702 	mla	r7, r7, r2, r6
 801a1fc:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801a200:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801a202:	fb10 f00a 	smulbb	r0, r0, sl
 801a206:	fb0c 0002 	mla	r0, ip, r2, r0
 801a20a:	b2ed      	uxtb	r5, r5
 801a20c:	b2bf      	uxth	r7, r7
 801a20e:	fb15 f50a 	smulbb	r5, r5, sl
 801a212:	b280      	uxth	r0, r0
 801a214:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801a218:	fb06 5602 	mla	r6, r6, r2, r5
 801a21c:	1c7a      	adds	r2, r7, #1
 801a21e:	1c45      	adds	r5, r0, #1
 801a220:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a224:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a228:	b2b6      	uxth	r6, r6
 801a22a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a22e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801a232:	432f      	orrs	r7, r5
 801a234:	1c75      	adds	r5, r6, #1
 801a236:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a23a:	096d      	lsrs	r5, r5, #5
 801a23c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a240:	432f      	orrs	r7, r5
 801a242:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801a246:	e7b2      	b.n	801a1ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801a248:	200023a8 	.word	0x200023a8
 801a24c:	200023a2 	.word	0x200023a2
 801a250:	fffff7fb 	.word	0xfffff7fb
 801a254:	9203      	str	r2, [sp, #12]
 801a256:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801a258:	458e      	cmp	lr, r1
 801a25a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801a25e:	f4ff af68 	bcc.w	801a132 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801a262:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801a264:	9906      	ldr	r1, [sp, #24]
 801a266:	8812      	ldrh	r2, [r2, #0]
 801a268:	1a52      	subs	r2, r2, r1
 801a26a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801a26e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a270:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801a272:	3201      	adds	r2, #1
 801a274:	428a      	cmp	r2, r1
 801a276:	9209      	str	r2, [sp, #36]	@ 0x24
 801a278:	d111      	bne.n	801a29e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801a27a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801a27e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801a282:	9b06      	ldr	r3, [sp, #24]
 801a284:	eba5 0509 	sub.w	r5, r5, r9
 801a288:	b2ad      	uxth	r5, r5
 801a28a:	2d00      	cmp	r5, #0
 801a28c:	bf08      	it	eq
 801a28e:	4619      	moveq	r1, r3
 801a290:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a292:	bf18      	it	ne
 801a294:	2100      	movne	r1, #0
 801a296:	3301      	adds	r3, #1
 801a298:	930d      	str	r3, [sp, #52]	@ 0x34
 801a29a:	b289      	uxth	r1, r1
 801a29c:	e695      	b.n	8019fca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801a29e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801a2a2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801a2a6:	1b2d      	subs	r5, r5, r4
 801a2a8:	b2ad      	uxth	r5, r5
 801a2aa:	2d00      	cmp	r5, #0
 801a2ac:	bf18      	it	ne
 801a2ae:	2400      	movne	r4, #0
 801a2b0:	e740      	b.n	801a134 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801a2b2:	4b04      	ldr	r3, [pc, #16]	@ (801a2c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801a2b4:	6818      	ldr	r0, [r3, #0]
 801a2b6:	6803      	ldr	r3, [r0, #0]
 801a2b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a2ba:	4798      	blx	r3
 801a2bc:	b01d      	add	sp, #116	@ 0x74
 801a2be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a2c2:	bf00      	nop
 801a2c4:	200023a8 	.word	0x200023a8

0801a2c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801a2c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2cc:	b09f      	sub	sp, #124	@ 0x7c
 801a2ce:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801a2d2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801a2d6:	920a      	str	r2, [sp, #40]	@ 0x28
 801a2d8:	461d      	mov	r5, r3
 801a2da:	4604      	mov	r4, r0
 801a2dc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a2de:	2a00      	cmp	r2, #0
 801a2e0:	f000 81fa 	beq.w	801a6d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801a2e4:	6828      	ldr	r0, [r5, #0]
 801a2e6:	6869      	ldr	r1, [r5, #4]
 801a2e8:	aa1a      	add	r2, sp, #104	@ 0x68
 801a2ea:	c203      	stmia	r2!, {r0, r1}
 801a2ec:	6818      	ldr	r0, [r3, #0]
 801a2ee:	6859      	ldr	r1, [r3, #4]
 801a2f0:	aa1c      	add	r2, sp, #112	@ 0x70
 801a2f2:	c203      	stmia	r2!, {r0, r1}
 801a2f4:	a81a      	add	r0, sp, #104	@ 0x68
 801a2f6:	f7f8 fd49 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a2fa:	4629      	mov	r1, r5
 801a2fc:	a81c      	add	r0, sp, #112	@ 0x70
 801a2fe:	f7f8 fd6d 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a302:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801a306:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801a30a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801a30e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801a312:	bfd7      	itett	le
 801a314:	b29a      	uxthle	r2, r3
 801a316:	2201      	movgt	r2, #1
 801a318:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801a31c:	fb91 f2f2 	sdivle	r2, r1, r2
 801a320:	9201      	str	r2, [sp, #4]
 801a322:	9801      	ldr	r0, [sp, #4]
 801a324:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801a328:	fb92 f0f0 	sdiv	r0, r2, r0
 801a32c:	b280      	uxth	r0, r0
 801a32e:	9010      	str	r0, [sp, #64]	@ 0x40
 801a330:	9901      	ldr	r1, [sp, #4]
 801a332:	9801      	ldr	r0, [sp, #4]
 801a334:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801a336:	440e      	add	r6, r1
 801a338:	fb05 2510 	mls	r5, r5, r0, r2
 801a33c:	fb15 f503 	smulbb	r5, r5, r3
 801a340:	3e01      	subs	r6, #1
 801a342:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801a346:	fb96 f6f1 	sdiv	r6, r6, r1
 801a34a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801a34e:	440d      	add	r5, r1
 801a350:	4419      	add	r1, r3
 801a352:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801a356:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801a35a:	441a      	add	r2, r3
 801a35c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801a360:	9304      	str	r3, [sp, #16]
 801a362:	4b96      	ldr	r3, [pc, #600]	@ (801a5bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801a364:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801a368:	6818      	ldr	r0, [r3, #0]
 801a36a:	6803      	ldr	r3, [r0, #0]
 801a36c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a36e:	4798      	blx	r3
 801a370:	4b93      	ldr	r3, [pc, #588]	@ (801a5c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801a372:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801a376:	881a      	ldrh	r2, [r3, #0]
 801a378:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801a37c:	9318      	str	r3, [sp, #96]	@ 0x60
 801a37e:	fb02 c101 	mla	r1, r2, r1, ip
 801a382:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801a386:	4357      	muls	r7, r2
 801a388:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801a38c:	3601      	adds	r6, #1
 801a38e:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a390:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a392:	4b8c      	ldr	r3, [pc, #560]	@ (801a5c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801a394:	b2b6      	uxth	r6, r6
 801a396:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801a39a:	1d32      	adds	r2, r6, #4
 801a39c:	9206      	str	r2, [sp, #24]
 801a39e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a3a0:	43d2      	mvns	r2, r2
 801a3a2:	b2d2      	uxtb	r2, r2
 801a3a4:	b2ad      	uxth	r5, r5
 801a3a6:	9215      	str	r2, [sp, #84]	@ 0x54
 801a3a8:	9a04      	ldr	r2, [sp, #16]
 801a3aa:	2d00      	cmp	r5, #0
 801a3ac:	bf0c      	ite	eq
 801a3ae:	4611      	moveq	r1, r2
 801a3b0:	2100      	movne	r1, #0
 801a3b2:	2200      	movs	r2, #0
 801a3b4:	1b1b      	subs	r3, r3, r4
 801a3b6:	b289      	uxth	r1, r1
 801a3b8:	920d      	str	r2, [sp, #52]	@ 0x34
 801a3ba:	9319      	str	r3, [sp, #100]	@ 0x64
 801a3bc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801a3be:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a3c0:	fa12 f383 	uxtah	r3, r2, r3
 801a3c4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a3c6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801a3ca:	3304      	adds	r3, #4
 801a3cc:	9307      	str	r3, [sp, #28]
 801a3ce:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a3d0:	455b      	cmp	r3, fp
 801a3d2:	f240 817c 	bls.w	801a6ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801a3d6:	9a01      	ldr	r2, [sp, #4]
 801a3d8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801a3dc:	fbb5 f3f3 	udiv	r3, r5, r3
 801a3e0:	1ad3      	subs	r3, r2, r3
 801a3e2:	b29b      	uxth	r3, r3
 801a3e4:	9316      	str	r3, [sp, #88]	@ 0x58
 801a3e6:	9b07      	ldr	r3, [sp, #28]
 801a3e8:	9807      	ldr	r0, [sp, #28]
 801a3ea:	785a      	ldrb	r2, [r3, #1]
 801a3ec:	789b      	ldrb	r3, [r3, #2]
 801a3ee:	7800      	ldrb	r0, [r0, #0]
 801a3f0:	9011      	str	r0, [sp, #68]	@ 0x44
 801a3f2:	021b      	lsls	r3, r3, #8
 801a3f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801a3f8:	9a07      	ldr	r2, [sp, #28]
 801a3fa:	78d2      	ldrb	r2, [r2, #3]
 801a3fc:	4313      	orrs	r3, r2
 801a3fe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a400:	3001      	adds	r0, #1
 801a402:	441a      	add	r2, r3
 801a404:	9005      	str	r0, [sp, #20]
 801a406:	1c50      	adds	r0, r2, #1
 801a408:	9003      	str	r0, [sp, #12]
 801a40a:	7852      	ldrb	r2, [r2, #1]
 801a40c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a40e:	0212      	lsls	r2, r2, #8
 801a410:	5cc3      	ldrb	r3, [r0, r3]
 801a412:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801a416:	431a      	orrs	r2, r3
 801a418:	b293      	uxth	r3, r2
 801a41a:	930c      	str	r3, [sp, #48]	@ 0x30
 801a41c:	2300      	movs	r3, #0
 801a41e:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801a422:	9308      	str	r3, [sp, #32]
 801a424:	461a      	mov	r2, r3
 801a426:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801a42a:	930e      	str	r3, [sp, #56]	@ 0x38
 801a42c:	f04f 0801 	mov.w	r8, #1
 801a430:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801a434:	f8cd 8008 	str.w	r8, [sp, #8]
 801a438:	46c4      	mov	ip, r8
 801a43a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a43c:	2d00      	cmp	r5, #0
 801a43e:	d07c      	beq.n	801a53a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801a440:	45ac      	cmp	ip, r5
 801a442:	d26c      	bcs.n	801a51e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801a444:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a446:	eba5 050c 	sub.w	r5, r5, ip
 801a44a:	455b      	cmp	r3, fp
 801a44c:	b2ad      	uxth	r5, r5
 801a44e:	4608      	mov	r0, r1
 801a450:	d802      	bhi.n	801a458 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801a452:	e070      	b.n	801a536 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801a454:	2b00      	cmp	r3, #0
 801a456:	d15c      	bne.n	801a512 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801a458:	9b03      	ldr	r3, [sp, #12]
 801a45a:	9a02      	ldr	r2, [sp, #8]
 801a45c:	785b      	ldrb	r3, [r3, #1]
 801a45e:	9902      	ldr	r1, [sp, #8]
 801a460:	f1c2 0207 	rsb	r2, r2, #7
 801a464:	4093      	lsls	r3, r2
 801a466:	005b      	lsls	r3, r3, #1
 801a468:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801a46c:	9b03      	ldr	r3, [sp, #12]
 801a46e:	781b      	ldrb	r3, [r3, #0]
 801a470:	410b      	asrs	r3, r1
 801a472:	3101      	adds	r1, #1
 801a474:	b2c9      	uxtb	r1, r1
 801a476:	2908      	cmp	r1, #8
 801a478:	9102      	str	r1, [sp, #8]
 801a47a:	9903      	ldr	r1, [sp, #12]
 801a47c:	bf0a      	itet	eq
 801a47e:	3102      	addeq	r1, #2
 801a480:	3101      	addne	r1, #1
 801a482:	9103      	streq	r1, [sp, #12]
 801a484:	b2db      	uxtb	r3, r3
 801a486:	bf0a      	itet	eq
 801a488:	2100      	moveq	r1, #0
 801a48a:	9103      	strne	r1, [sp, #12]
 801a48c:	9102      	streq	r1, [sp, #8]
 801a48e:	4313      	orrs	r3, r2
 801a490:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801a492:	b29a      	uxth	r2, r3
 801a494:	4291      	cmp	r1, r2
 801a496:	d30a      	bcc.n	801a4ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801a498:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801a49c:	2301      	movs	r3, #1
 801a49e:	9905      	ldr	r1, [sp, #20]
 801a4a0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801a4a4:	d30f      	bcc.n	801a4c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801a4a6:	2100      	movs	r1, #0
 801a4a8:	4698      	mov	r8, r3
 801a4aa:	9100      	str	r1, [sp, #0]
 801a4ac:	e032      	b.n	801a514 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801a4ae:	9b05      	ldr	r3, [sp, #20]
 801a4b0:	429a      	cmp	r2, r3
 801a4b2:	d318      	bcc.n	801a4e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801a4b4:	eb04 0308 	add.w	r3, r4, r8
 801a4b8:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801a4bc:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801a4c0:	f108 0301 	add.w	r3, r8, #1
 801a4c4:	b29b      	uxth	r3, r3
 801a4c6:	9905      	ldr	r1, [sp, #20]
 801a4c8:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801a4cc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801a4d0:	710e      	strb	r6, [r1, #4]
 801a4d2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801a4d4:	80ce      	strh	r6, [r1, #6]
 801a4d6:	f108 0601 	add.w	r6, r8, #1
 801a4da:	714e      	strb	r6, [r1, #5]
 801a4dc:	9905      	ldr	r1, [sp, #20]
 801a4de:	3101      	adds	r1, #1
 801a4e0:	b289      	uxth	r1, r1
 801a4e2:	9105      	str	r1, [sp, #20]
 801a4e4:	e7df      	b.n	801a4a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801a4e6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801a4ea:	4611      	mov	r1, r2
 801a4ec:	795b      	ldrb	r3, [r3, #5]
 801a4ee:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801a4f2:	4426      	add	r6, r4
 801a4f4:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801a4f6:	4437      	add	r7, r6
 801a4f8:	2f00      	cmp	r7, #0
 801a4fa:	dd06      	ble.n	801a50a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801a4fc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801a500:	790f      	ldrb	r7, [r1, #4]
 801a502:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801a506:	88c9      	ldrh	r1, [r1, #6]
 801a508:	e7f4      	b.n	801a4f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801a50a:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801a50e:	b29b      	uxth	r3, r3
 801a510:	e7c5      	b.n	801a49e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801a512:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801a514:	920c      	str	r2, [sp, #48]	@ 0x30
 801a516:	4601      	mov	r1, r0
 801a518:	9a00      	ldr	r2, [sp, #0]
 801a51a:	469c      	mov	ip, r3
 801a51c:	e78e      	b.n	801a43c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801a51e:	1957      	adds	r7, r2, r5
 801a520:	ebac 0305 	sub.w	r3, ip, r5
 801a524:	b2ba      	uxth	r2, r7
 801a526:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801a52a:	9200      	str	r2, [sp, #0]
 801a52c:	b29b      	uxth	r3, r3
 801a52e:	2500      	movs	r5, #0
 801a530:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a532:	455a      	cmp	r2, fp
 801a534:	d88e      	bhi.n	801a454 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801a536:	4601      	mov	r1, r0
 801a538:	e749      	b.n	801a3ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801a53a:	458c      	cmp	ip, r1
 801a53c:	bf2c      	ite	cs
 801a53e:	4628      	movcs	r0, r5
 801a540:	462b      	movcc	r3, r5
 801a542:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801a544:	bf27      	ittee	cs
 801a546:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801a548:	ebac 0301 	subcs.w	r3, ip, r1
 801a54c:	eba1 000c 	subcc.w	r0, r1, ip
 801a550:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801a554:	bf2c      	ite	cs
 801a556:	b29b      	uxthcs	r3, r3
 801a558:	b280      	uxthcc	r0, r0
 801a55a:	2dff      	cmp	r5, #255	@ 0xff
 801a55c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801a55e:	eb02 0705 	add.w	r7, r2, r5
 801a562:	b2bd      	uxth	r5, r7
 801a564:	9500      	str	r5, [sp, #0]
 801a566:	d12f      	bne.n	801a5c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801a568:	465e      	mov	r6, fp
 801a56a:	9d00      	ldr	r5, [sp, #0]
 801a56c:	42aa      	cmp	r2, r5
 801a56e:	f040 8084 	bne.w	801a67a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801a572:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a574:	458c      	cmp	ip, r1
 801a576:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801a57a:	d3d8      	bcc.n	801a52e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801a57c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801a57e:	9904      	ldr	r1, [sp, #16]
 801a580:	8812      	ldrh	r2, [r2, #0]
 801a582:	1a52      	subs	r2, r2, r1
 801a584:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801a588:	9a08      	ldr	r2, [sp, #32]
 801a58a:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801a58c:	3201      	adds	r2, #1
 801a58e:	428a      	cmp	r2, r1
 801a590:	9208      	str	r2, [sp, #32]
 801a592:	f040 8092 	bne.w	801a6ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801a596:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801a59a:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801a59e:	9b04      	ldr	r3, [sp, #16]
 801a5a0:	eba5 050c 	sub.w	r5, r5, ip
 801a5a4:	b2ad      	uxth	r5, r5
 801a5a6:	2d00      	cmp	r5, #0
 801a5a8:	bf08      	it	eq
 801a5aa:	4619      	moveq	r1, r3
 801a5ac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a5ae:	bf18      	it	ne
 801a5b0:	2100      	movne	r1, #0
 801a5b2:	3301      	adds	r3, #1
 801a5b4:	930d      	str	r3, [sp, #52]	@ 0x34
 801a5b6:	b289      	uxth	r1, r1
 801a5b8:	e700      	b.n	801a3bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801a5ba:	bf00      	nop
 801a5bc:	200023a8 	.word	0x200023a8
 801a5c0:	200023a2 	.word	0x200023a2
 801a5c4:	fffff7fb 	.word	0xfffff7fb
 801a5c8:	46d9      	mov	r9, fp
 801a5ca:	9d00      	ldr	r5, [sp, #0]
 801a5cc:	42aa      	cmp	r2, r5
 801a5ce:	d0d0      	beq.n	801a572 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801a5d0:	1c55      	adds	r5, r2, #1
 801a5d2:	4422      	add	r2, r4
 801a5d4:	9517      	str	r5, [sp, #92]	@ 0x5c
 801a5d6:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801a5da:	9a06      	ldr	r2, [sp, #24]
 801a5dc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a5e0:	4472      	add	r2, lr
 801a5e2:	9212      	str	r2, [sp, #72]	@ 0x48
 801a5e4:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801a5e6:	f8b9 2000 	ldrh.w	r2, [r9]
 801a5ea:	f897 a002 	ldrb.w	sl, [r7, #2]
 801a5ee:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801a5f0:	1216      	asrs	r6, r2, #8
 801a5f2:	fb1a fa07 	smulbb	sl, sl, r7
 801a5f6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a5fa:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a5fc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a600:	fb06 a607 	mla	r6, r6, r7, sl
 801a604:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801a606:	f897 a001 	ldrb.w	sl, [r7, #1]
 801a60a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801a60c:	10d5      	asrs	r5, r2, #3
 801a60e:	fb1a fa07 	smulbb	sl, sl, r7
 801a612:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a616:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a618:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a61c:	fb05 a507 	mla	r5, r5, r7, sl
 801a620:	9f06      	ldr	r7, [sp, #24]
 801a622:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a626:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801a628:	00d2      	lsls	r2, r2, #3
 801a62a:	fb1e fe07 	smulbb	lr, lr, r7
 801a62e:	b2d2      	uxtb	r2, r2
 801a630:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a632:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a636:	b2b6      	uxth	r6, r6
 801a638:	fb02 e207 	mla	r2, r2, r7, lr
 801a63c:	b292      	uxth	r2, r2
 801a63e:	b2ad      	uxth	r5, r5
 801a640:	f106 0a01 	add.w	sl, r6, #1
 801a644:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801a648:	f102 0e01 	add.w	lr, r2, #1
 801a64c:	f105 0a01 	add.w	sl, r5, #1
 801a650:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801a654:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a658:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801a65c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a660:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a664:	ea4e 0606 	orr.w	r6, lr, r6
 801a668:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a66c:	ea46 060a 	orr.w	r6, r6, sl
 801a670:	f829 6b02 	strh.w	r6, [r9], #2
 801a674:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801a678:	e7a7      	b.n	801a5ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801a67a:	f102 0e01 	add.w	lr, r2, #1
 801a67e:	4422      	add	r2, r4
 801a680:	9f06      	ldr	r7, [sp, #24]
 801a682:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801a686:	9a06      	ldr	r2, [sp, #24]
 801a688:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a68c:	eb02 0a05 	add.w	sl, r2, r5
 801a690:	4a13      	ldr	r2, [pc, #76]	@ (801a6e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801a692:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801a696:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801a69a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a69e:	00d2      	lsls	r2, r2, #3
 801a6a0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a6a4:	ea49 0202 	orr.w	r2, r9, r2
 801a6a8:	f817 9005 	ldrb.w	r9, [r7, r5]
 801a6ac:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801a6b0:	f826 2b02 	strh.w	r2, [r6], #2
 801a6b4:	fa1f f28e 	uxth.w	r2, lr
 801a6b8:	e757      	b.n	801a56a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801a6ba:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801a6be:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801a6c2:	1a2d      	subs	r5, r5, r0
 801a6c4:	b2ad      	uxth	r5, r5
 801a6c6:	2d00      	cmp	r5, #0
 801a6c8:	bf18      	it	ne
 801a6ca:	2000      	movne	r0, #0
 801a6cc:	e730      	b.n	801a530 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801a6ce:	4b05      	ldr	r3, [pc, #20]	@ (801a6e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801a6d0:	6818      	ldr	r0, [r3, #0]
 801a6d2:	6803      	ldr	r3, [r0, #0]
 801a6d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a6d6:	4798      	blx	r3
 801a6d8:	b01f      	add	sp, #124	@ 0x7c
 801a6da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6de:	bf00      	nop
 801a6e0:	fffff800 	.word	0xfffff800
 801a6e4:	200023a8 	.word	0x200023a8

0801a6e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801a6e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6ec:	b091      	sub	sp, #68	@ 0x44
 801a6ee:	469b      	mov	fp, r3
 801a6f0:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801a6f4:	4616      	mov	r6, r2
 801a6f6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801a6fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a6fe:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801a702:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801a706:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801a70a:	4604      	mov	r4, r0
 801a70c:	460d      	mov	r5, r1
 801a70e:	4640      	mov	r0, r8
 801a710:	4659      	mov	r1, fp
 801a712:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801a716:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801a71a:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801a71e:	f7f5 f849 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 801a722:	4631      	mov	r1, r6
 801a724:	4640      	mov	r0, r8
 801a726:	f7f5 f845 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 801a72a:	4b74      	ldr	r3, [pc, #464]	@ (801a8fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801a72c:	8818      	ldrh	r0, [r3, #0]
 801a72e:	4b74      	ldr	r3, [pc, #464]	@ (801a900 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801a730:	8819      	ldrh	r1, [r3, #0]
 801a732:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801a736:	2b00      	cmp	r3, #0
 801a738:	b202      	sxth	r2, r0
 801a73a:	b20e      	sxth	r6, r1
 801a73c:	da07      	bge.n	801a74e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801a73e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801a742:	4463      	add	r3, ip
 801a744:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801a748:	2300      	movs	r3, #0
 801a74a:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801a74e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801a752:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801a756:	1ad2      	subs	r2, r2, r3
 801a758:	4594      	cmp	ip, r2
 801a75a:	bfc4      	itt	gt
 801a75c:	1ac2      	subgt	r2, r0, r3
 801a75e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801a762:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801a766:	2a00      	cmp	r2, #0
 801a768:	da07      	bge.n	801a77a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801a76a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801a76e:	4462      	add	r2, ip
 801a770:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801a774:	2200      	movs	r2, #0
 801a776:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801a77a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801a77e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801a782:	eba6 060a 	sub.w	r6, r6, sl
 801a786:	42b2      	cmp	r2, r6
 801a788:	bfc4      	itt	gt
 801a78a:	eba1 020a 	subgt.w	r2, r1, sl
 801a78e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801a792:	4a5c      	ldr	r2, [pc, #368]	@ (801a904 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801a794:	7812      	ldrb	r2, [r2, #0]
 801a796:	b9a2      	cbnz	r2, 801a7c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801a798:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801a79c:	4286      	cmp	r6, r0
 801a79e:	4640      	mov	r0, r8
 801a7a0:	9303      	str	r3, [sp, #12]
 801a7a2:	bf14      	ite	ne
 801a7a4:	2600      	movne	r6, #0
 801a7a6:	2601      	moveq	r6, #1
 801a7a8:	f7f5 f847 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 801a7ac:	9b03      	ldr	r3, [sp, #12]
 801a7ae:	b160      	cbz	r0, 801a7ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801a7b0:	2300      	movs	r3, #0
 801a7b2:	8023      	strh	r3, [r4, #0]
 801a7b4:	8063      	strh	r3, [r4, #2]
 801a7b6:	80a3      	strh	r3, [r4, #4]
 801a7b8:	4620      	mov	r0, r4
 801a7ba:	80e3      	strh	r3, [r4, #6]
 801a7bc:	b011      	add	sp, #68	@ 0x44
 801a7be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a7c2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801a7c6:	428e      	cmp	r6, r1
 801a7c8:	e7e9      	b.n	801a79e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801a7ca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801a7ce:	9205      	str	r2, [sp, #20]
 801a7d0:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801a7d4:	9206      	str	r2, [sp, #24]
 801a7d6:	f8bb 2000 	ldrh.w	r2, [fp]
 801a7da:	900e      	str	r0, [sp, #56]	@ 0x38
 801a7dc:	1a9b      	subs	r3, r3, r2
 801a7de:	b21b      	sxth	r3, r3
 801a7e0:	9303      	str	r3, [sp, #12]
 801a7e2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a7e6:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801a7ea:	ebaa 0a03 	sub.w	sl, sl, r3
 801a7ee:	fa0f f38a 	sxth.w	r3, sl
 801a7f2:	9304      	str	r3, [sp, #16]
 801a7f4:	9b03      	ldr	r3, [sp, #12]
 801a7f6:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801a7fa:	9b04      	ldr	r3, [sp, #16]
 801a7fc:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a800:	9b05      	ldr	r3, [sp, #20]
 801a802:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801a806:	a90e      	add	r1, sp, #56	@ 0x38
 801a808:	9b06      	ldr	r3, [sp, #24]
 801a80a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801a80e:	a80c      	add	r0, sp, #48	@ 0x30
 801a810:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801a814:	f7f8 fae2 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a818:	4640      	mov	r0, r8
 801a81a:	f7f8 fab7 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a81e:	a80e      	add	r0, sp, #56	@ 0x38
 801a820:	f7f8 fab4 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a824:	4b38      	ldr	r3, [pc, #224]	@ (801a908 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801a826:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801a82a:	881b      	ldrh	r3, [r3, #0]
 801a82c:	9307      	str	r3, [sp, #28]
 801a82e:	682b      	ldr	r3, [r5, #0]
 801a830:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801a90c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801a834:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a836:	4628      	mov	r0, r5
 801a838:	4798      	blx	r3
 801a83a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801a83e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801a842:	4681      	mov	r9, r0
 801a844:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801a848:	f8db 0000 	ldr.w	r0, [fp]
 801a84c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801a84e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a852:	6803      	ldr	r3, [r0, #0]
 801a854:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a856:	4798      	blx	r3
 801a858:	4607      	mov	r7, r0
 801a85a:	f8db 0000 	ldr.w	r0, [fp]
 801a85e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801a862:	6803      	ldr	r3, [r0, #0]
 801a864:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801a868:	9109      	str	r1, [sp, #36]	@ 0x24
 801a86a:	9208      	str	r2, [sp, #32]
 801a86c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a86e:	4798      	blx	r3
 801a870:	f010 0f01 	tst.w	r0, #1
 801a874:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a878:	d012      	beq.n	801a8a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801a87a:	f8db 0000 	ldr.w	r0, [fp]
 801a87e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801a882:	6803      	ldr	r3, [r0, #0]
 801a884:	9200      	str	r2, [sp, #0]
 801a886:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801a888:	e898 0006 	ldmia.w	r8, {r1, r2}
 801a88c:	462b      	mov	r3, r5
 801a88e:	47b0      	blx	r6
 801a890:	9b03      	ldr	r3, [sp, #12]
 801a892:	8023      	strh	r3, [r4, #0]
 801a894:	9b04      	ldr	r3, [sp, #16]
 801a896:	8063      	strh	r3, [r4, #2]
 801a898:	9b05      	ldr	r3, [sp, #20]
 801a89a:	80a3      	strh	r3, [r4, #4]
 801a89c:	9b06      	ldr	r3, [sp, #24]
 801a89e:	e78b      	b.n	801a7b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801a8a0:	fb09 f202 	mul.w	r2, r9, r2
 801a8a4:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801a8a8:	440f      	add	r7, r1
 801a8aa:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801a8ae:	b166      	cbz	r6, 801a8ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801a8b0:	9a07      	ldr	r2, [sp, #28]
 801a8b2:	4592      	cmp	sl, r2
 801a8b4:	d109      	bne.n	801a8ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801a8b6:	f8db 0000 	ldr.w	r0, [fp]
 801a8ba:	6802      	ldr	r2, [r0, #0]
 801a8bc:	fb09 f303 	mul.w	r3, r9, r3
 801a8c0:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801a8c2:	4629      	mov	r1, r5
 801a8c4:	463a      	mov	r2, r7
 801a8c6:	47b0      	blx	r6
 801a8c8:	e7e2      	b.n	801a890 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801a8ca:	fb0a f303 	mul.w	r3, sl, r3
 801a8ce:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801a90c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801a8d2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801a8d6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801a8da:	4545      	cmp	r5, r8
 801a8dc:	d2d8      	bcs.n	801a890 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801a8de:	f8db 0000 	ldr.w	r0, [fp]
 801a8e2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801a8e6:	6802      	ldr	r2, [r0, #0]
 801a8e8:	4629      	mov	r1, r5
 801a8ea:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801a8ee:	005b      	lsls	r3, r3, #1
 801a8f0:	463a      	mov	r2, r7
 801a8f2:	47d0      	blx	sl
 801a8f4:	444f      	add	r7, r9
 801a8f6:	4435      	add	r5, r6
 801a8f8:	e7ef      	b.n	801a8da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801a8fa:	bf00      	nop
 801a8fc:	2000239c 	.word	0x2000239c
 801a900:	2000239e 	.word	0x2000239e
 801a904:	200023a0 	.word	0x200023a0
 801a908:	200023a2 	.word	0x200023a2
 801a90c:	200023a8 	.word	0x200023a8

0801a910 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801a910:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a912:	4606      	mov	r6, r0
 801a914:	b087      	sub	sp, #28
 801a916:	460c      	mov	r4, r1
 801a918:	4617      	mov	r7, r2
 801a91a:	461d      	mov	r5, r3
 801a91c:	b333      	cbz	r3, 801a96c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a91e:	4608      	mov	r0, r1
 801a920:	f7f4 ff8b 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 801a924:	bb10      	cbnz	r0, 801a96c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a926:	6820      	ldr	r0, [r4, #0]
 801a928:	6861      	ldr	r1, [r4, #4]
 801a92a:	4c1c      	ldr	r4, [pc, #112]	@ (801a99c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801a92c:	ab04      	add	r3, sp, #16
 801a92e:	c303      	stmia	r3!, {r0, r1}
 801a930:	a804      	add	r0, sp, #16
 801a932:	f7f8 fa2b 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a936:	6820      	ldr	r0, [r4, #0]
 801a938:	6803      	ldr	r3, [r0, #0]
 801a93a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a93c:	4798      	blx	r3
 801a93e:	2dff      	cmp	r5, #255	@ 0xff
 801a940:	d016      	beq.n	801a970 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801a942:	f010 0f08 	tst.w	r0, #8
 801a946:	6820      	ldr	r0, [r4, #0]
 801a948:	d015      	beq.n	801a976 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801a94a:	2400      	movs	r4, #0
 801a94c:	6801      	ldr	r1, [r0, #0]
 801a94e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a952:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a956:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801a95a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801a95e:	9401      	str	r4, [sp, #4]
 801a960:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801a964:	9400      	str	r4, [sp, #0]
 801a966:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801a968:	4639      	mov	r1, r7
 801a96a:	47a0      	blx	r4
 801a96c:	b007      	add	sp, #28
 801a96e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a970:	f010 0f02 	tst.w	r0, #2
 801a974:	e7e7      	b.n	801a946 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801a976:	6803      	ldr	r3, [r0, #0]
 801a978:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a97a:	4798      	blx	r3
 801a97c:	4b08      	ldr	r3, [pc, #32]	@ (801a9a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801a97e:	881a      	ldrh	r2, [r3, #0]
 801a980:	6833      	ldr	r3, [r6, #0]
 801a982:	e9cd 7500 	strd	r7, r5, [sp]
 801a986:	4601      	mov	r1, r0
 801a988:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801a98a:	4630      	mov	r0, r6
 801a98c:	ab04      	add	r3, sp, #16
 801a98e:	47a8      	blx	r5
 801a990:	6820      	ldr	r0, [r4, #0]
 801a992:	6803      	ldr	r3, [r0, #0]
 801a994:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a996:	4798      	blx	r3
 801a998:	e7e8      	b.n	801a96c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a99a:	bf00      	nop
 801a99c:	200023a8 	.word	0x200023a8
 801a9a0:	200023a2 	.word	0x200023a2

0801a9a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801a9a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a9a8:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801a9ac:	9e08      	ldr	r6, [sp, #32]
 801a9ae:	4688      	mov	r8, r1
 801a9b0:	4614      	mov	r4, r2
 801a9b2:	461d      	mov	r5, r3
 801a9b4:	2f00      	cmp	r7, #0
 801a9b6:	f000 80a9 	beq.w	801ab0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a9ba:	4618      	mov	r0, r3
 801a9bc:	f7f4 ff3d 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 801a9c0:	2800      	cmp	r0, #0
 801a9c2:	f040 80a3 	bne.w	801ab0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a9c6:	f9b5 1000 	ldrsh.w	r1, [r5]
 801a9ca:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801a9ce:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801a9d2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801a9d6:	fb04 1303 	mla	r3, r4, r3, r1
 801a9da:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801a9de:	4365      	muls	r5, r4
 801a9e0:	2fff      	cmp	r7, #255	@ 0xff
 801a9e2:	eba4 0200 	sub.w	r2, r4, r0
 801a9e6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801a9ea:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801a9ee:	d04a      	beq.n	801aa86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801a9f0:	b2bc      	uxth	r4, r7
 801a9f2:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801a9f6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801a9fa:	fa5f f788 	uxtb.w	r7, r8
 801a9fe:	b2f3      	uxtb	r3, r6
 801aa00:	0040      	lsls	r0, r0, #1
 801aa02:	fb0e fe04 	mul.w	lr, lr, r4
 801aa06:	4367      	muls	r7, r4
 801aa08:	4363      	muls	r3, r4
 801aa0a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801aa0e:	fa1f fc8c 	uxth.w	ip, ip
 801aa12:	42a9      	cmp	r1, r5
 801aa14:	d27a      	bcs.n	801ab0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801aa16:	eb01 0900 	add.w	r9, r1, r0
 801aa1a:	4549      	cmp	r1, r9
 801aa1c:	d231      	bcs.n	801aa82 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801aa1e:	880a      	ldrh	r2, [r1, #0]
 801aa20:	1214      	asrs	r4, r2, #8
 801aa22:	10d6      	asrs	r6, r2, #3
 801aa24:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801aa28:	00d2      	lsls	r2, r2, #3
 801aa2a:	b2d2      	uxtb	r2, r2
 801aa2c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801aa30:	fb14 f40c 	smulbb	r4, r4, ip
 801aa34:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801aa38:	4474      	add	r4, lr
 801aa3a:	fb12 f20c 	smulbb	r2, r2, ip
 801aa3e:	b2a4      	uxth	r4, r4
 801aa40:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801aa44:	441a      	add	r2, r3
 801aa46:	b292      	uxth	r2, r2
 801aa48:	f104 0a01 	add.w	sl, r4, #1
 801aa4c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801aa50:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801aa54:	fb16 f60c 	smulbb	r6, r6, ip
 801aa58:	f102 0a01 	add.w	sl, r2, #1
 801aa5c:	443e      	add	r6, r7
 801aa5e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801aa62:	b2b6      	uxth	r6, r6
 801aa64:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801aa68:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aa6c:	4322      	orrs	r2, r4
 801aa6e:	1c74      	adds	r4, r6, #1
 801aa70:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801aa74:	0976      	lsrs	r6, r6, #5
 801aa76:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801aa7a:	4332      	orrs	r2, r6
 801aa7c:	f821 2b02 	strh.w	r2, [r1], #2
 801aa80:	e7cb      	b.n	801aa1a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801aa82:	4441      	add	r1, r8
 801aa84:	e7c5      	b.n	801aa12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801aa86:	4f22      	ldr	r7, [pc, #136]	@ (801ab10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801aa88:	0973      	lsrs	r3, r6, #5
 801aa8a:	ea08 0707 	and.w	r7, r8, r7
 801aa8e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801aa92:	433b      	orrs	r3, r7
 801aa94:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801aa98:	4333      	orrs	r3, r6
 801aa9a:	07e7      	lsls	r7, r4, #31
 801aa9c:	b29b      	uxth	r3, r3
 801aa9e:	d50b      	bpl.n	801aab8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801aaa0:	0040      	lsls	r0, r0, #1
 801aaa2:	0052      	lsls	r2, r2, #1
 801aaa4:	42a9      	cmp	r1, r5
 801aaa6:	d231      	bcs.n	801ab0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801aaa8:	180c      	adds	r4, r1, r0
 801aaaa:	42a1      	cmp	r1, r4
 801aaac:	d202      	bcs.n	801aab4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801aaae:	f821 3b02 	strh.w	r3, [r1], #2
 801aab2:	e7fa      	b.n	801aaaa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801aab4:	4411      	add	r1, r2
 801aab6:	e7f5      	b.n	801aaa4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801aab8:	078e      	lsls	r6, r1, #30
 801aaba:	d008      	beq.n	801aace <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801aabc:	0066      	lsls	r6, r4, #1
 801aabe:	460a      	mov	r2, r1
 801aac0:	42aa      	cmp	r2, r5
 801aac2:	d202      	bcs.n	801aaca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801aac4:	8013      	strh	r3, [r2, #0]
 801aac6:	4432      	add	r2, r6
 801aac8:	e7fa      	b.n	801aac0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801aaca:	3102      	adds	r1, #2
 801aacc:	3801      	subs	r0, #1
 801aace:	07c2      	lsls	r2, r0, #31
 801aad0:	d50b      	bpl.n	801aaea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801aad2:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801aad6:	3a01      	subs	r2, #1
 801aad8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801aadc:	0066      	lsls	r6, r4, #1
 801aade:	42aa      	cmp	r2, r5
 801aae0:	d202      	bcs.n	801aae8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801aae2:	8013      	strh	r3, [r2, #0]
 801aae4:	4432      	add	r2, r6
 801aae6:	e7fa      	b.n	801aade <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801aae8:	3801      	subs	r0, #1
 801aaea:	b178      	cbz	r0, 801ab0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801aaec:	1040      	asrs	r0, r0, #1
 801aaee:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801aaf2:	0080      	lsls	r0, r0, #2
 801aaf4:	0064      	lsls	r4, r4, #1
 801aaf6:	42a9      	cmp	r1, r5
 801aaf8:	d208      	bcs.n	801ab0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801aafa:	180e      	adds	r6, r1, r0
 801aafc:	460a      	mov	r2, r1
 801aafe:	42b2      	cmp	r2, r6
 801ab00:	d202      	bcs.n	801ab08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801ab02:	f842 3b04 	str.w	r3, [r2], #4
 801ab06:	e7fa      	b.n	801aafe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801ab08:	4421      	add	r1, r4
 801ab0a:	e7f4      	b.n	801aaf6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801ab0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ab10:	00fff800 	.word	0x00fff800

0801ab14 <_ZN8touchgfx8LCD16bppC1Ev>:
 801ab14:	2200      	movs	r2, #0
 801ab16:	4912      	ldr	r1, [pc, #72]	@ (801ab60 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801ab18:	6042      	str	r2, [r0, #4]
 801ab1a:	6001      	str	r1, [r0, #0]
 801ab1c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801ab20:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801ab24:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801ab28:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801ab2c:	e9c0 220a 	strd	r2, r2, [r0, #40]	@ 0x28
 801ab30:	e9c0 220c 	strd	r2, r2, [r0, #48]	@ 0x30
 801ab34:	e9c0 220e 	strd	r2, r2, [r0, #56]	@ 0x38
 801ab38:	e9c0 2210 	strd	r2, r2, [r0, #64]	@ 0x40
 801ab3c:	e9c0 2212 	strd	r2, r2, [r0, #72]	@ 0x48
 801ab40:	e9c0 2214 	strd	r2, r2, [r0, #80]	@ 0x50
 801ab44:	e9c0 2216 	strd	r2, r2, [r0, #88]	@ 0x58
 801ab48:	e9c0 2218 	strd	r2, r2, [r0, #96]	@ 0x60
 801ab4c:	e9c0 221a 	strd	r2, r2, [r0, #104]	@ 0x68
 801ab50:	e9c0 221c 	strd	r2, r2, [r0, #112]	@ 0x70
 801ab54:	e9c0 221e 	strd	r2, r2, [r0, #120]	@ 0x78
 801ab58:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
 801ab5c:	4770      	bx	lr
 801ab5e:	bf00      	nop
 801ab60:	0802a03c 	.word	0x0802a03c

0801ab64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801ab64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab68:	460d      	mov	r5, r1
 801ab6a:	b08d      	sub	sp, #52	@ 0x34
 801ab6c:	4604      	mov	r4, r0
 801ab6e:	6808      	ldr	r0, [r1, #0]
 801ab70:	6849      	ldr	r1, [r1, #4]
 801ab72:	4699      	mov	r9, r3
 801ab74:	ab08      	add	r3, sp, #32
 801ab76:	c303      	stmia	r3!, {r0, r1}
 801ab78:	6810      	ldr	r0, [r2, #0]
 801ab7a:	6851      	ldr	r1, [r2, #4]
 801ab7c:	ab0a      	add	r3, sp, #40	@ 0x28
 801ab7e:	c303      	stmia	r3!, {r0, r1}
 801ab80:	a808      	add	r0, sp, #32
 801ab82:	f7f8 f903 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ab86:	4629      	mov	r1, r5
 801ab88:	a80a      	add	r0, sp, #40	@ 0x28
 801ab8a:	f7f8 f927 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ab8e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801ab92:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801ab96:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801ab9a:	4d63      	ldr	r5, [pc, #396]	@ (801ad28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ab9c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801aba0:	6828      	ldr	r0, [r5, #0]
 801aba2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801aba6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801abaa:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801abae:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801abb2:	440a      	add	r2, r1
 801abb4:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801abb8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801abbc:	4413      	add	r3, r2
 801abbe:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801abc2:	6803      	ldr	r3, [r0, #0]
 801abc4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801abc6:	4798      	blx	r3
 801abc8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801abcc:	d119      	bne.n	801ac02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801abce:	f010 0f20 	tst.w	r0, #32
 801abd2:	6828      	ldr	r0, [r5, #0]
 801abd4:	d018      	beq.n	801ac08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801abd6:	2500      	movs	r5, #0
 801abd8:	6801      	ldr	r1, [r0, #0]
 801abda:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801abde:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801abe2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801abe6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801abea:	9502      	str	r5, [sp, #8]
 801abec:	b2b6      	uxth	r6, r6
 801abee:	fa1f f588 	uxth.w	r5, r8
 801abf2:	9601      	str	r6, [sp, #4]
 801abf4:	9500      	str	r5, [sp, #0]
 801abf6:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801abf8:	4621      	mov	r1, r4
 801abfa:	47a8      	blx	r5
 801abfc:	b00d      	add	sp, #52	@ 0x34
 801abfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac02:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801ac06:	e7e4      	b.n	801abd2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ac08:	6803      	ldr	r3, [r0, #0]
 801ac0a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ac0c:	4798      	blx	r3
 801ac0e:	4947      	ldr	r1, [pc, #284]	@ (801ad2c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ac10:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801ac14:	880b      	ldrh	r3, [r1, #0]
 801ac16:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801ac1a:	fb03 5202 	mla	r2, r3, r2, r5
 801ac1e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ac22:	4373      	muls	r3, r6
 801ac24:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ac28:	9307      	str	r3, [sp, #28]
 801ac2a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ac2e:	9306      	str	r3, [sp, #24]
 801ac30:	468a      	mov	sl, r1
 801ac32:	9b07      	ldr	r3, [sp, #28]
 801ac34:	4298      	cmp	r0, r3
 801ac36:	d270      	bcs.n	801ad1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801ac38:	9b06      	ldr	r3, [sp, #24]
 801ac3a:	4621      	mov	r1, r4
 801ac3c:	eb00 0b03 	add.w	fp, r0, r3
 801ac40:	4558      	cmp	r0, fp
 801ac42:	d25d      	bcs.n	801ad00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801ac44:	f851 4b04 	ldr.w	r4, [r1], #4
 801ac48:	0e23      	lsrs	r3, r4, #24
 801ac4a:	d014      	beq.n	801ac76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ac4c:	2bff      	cmp	r3, #255	@ 0xff
 801ac4e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ac52:	d112      	bne.n	801ac7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ac54:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801ac58:	d10f      	bne.n	801ac7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ac5a:	0963      	lsrs	r3, r4, #5
 801ac5c:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801ac60:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ac64:	f02c 0c07 	bic.w	ip, ip, #7
 801ac68:	ea43 0c0c 	orr.w	ip, r3, ip
 801ac6c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ac70:	ea4c 0404 	orr.w	r4, ip, r4
 801ac74:	8004      	strh	r4, [r0, #0]
 801ac76:	3002      	adds	r0, #2
 801ac78:	e7e2      	b.n	801ac40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801ac7a:	fb09 f303 	mul.w	r3, r9, r3
 801ac7e:	8807      	ldrh	r7, [r0, #0]
 801ac80:	1c5a      	adds	r2, r3, #1
 801ac82:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801ac86:	1212      	asrs	r2, r2, #8
 801ac88:	123e      	asrs	r6, r7, #8
 801ac8a:	b293      	uxth	r3, r2
 801ac8c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801ac90:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801ac94:	43d2      	mvns	r2, r2
 801ac96:	b2d2      	uxtb	r2, r2
 801ac98:	10fd      	asrs	r5, r7, #3
 801ac9a:	fb1e fe03 	smulbb	lr, lr, r3
 801ac9e:	00ff      	lsls	r7, r7, #3
 801aca0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801aca4:	fb06 e602 	mla	r6, r6, r2, lr
 801aca8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801acac:	b2ff      	uxtb	r7, r7
 801acae:	fa5f fc8c 	uxtb.w	ip, ip
 801acb2:	b2e4      	uxtb	r4, r4
 801acb4:	b2b6      	uxth	r6, r6
 801acb6:	fb1c fc03 	smulbb	ip, ip, r3
 801acba:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801acbe:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801acc2:	fb14 f403 	smulbb	r4, r4, r3
 801acc6:	fb05 c502 	mla	r5, r5, r2, ip
 801acca:	f106 0e01 	add.w	lr, r6, #1
 801acce:	fb07 4702 	mla	r7, r7, r2, r4
 801acd2:	b2ad      	uxth	r5, r5
 801acd4:	b2bf      	uxth	r7, r7
 801acd6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801acda:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801acde:	f105 0c01 	add.w	ip, r5, #1
 801ace2:	1c7e      	adds	r6, r7, #1
 801ace4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ace8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801acec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801acf0:	096d      	lsrs	r5, r5, #5
 801acf2:	ea46 060e 	orr.w	r6, r6, lr
 801acf6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801acfa:	432e      	orrs	r6, r5
 801acfc:	8006      	strh	r6, [r0, #0]
 801acfe:	e7ba      	b.n	801ac76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ad00:	f8ba 3000 	ldrh.w	r3, [sl]
 801ad04:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801ad08:	eba3 0308 	sub.w	r3, r3, r8
 801ad0c:	eba4 0408 	sub.w	r4, r4, r8
 801ad10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ad14:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ad18:	e78b      	b.n	801ac32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ad1a:	4b03      	ldr	r3, [pc, #12]	@ (801ad28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ad1c:	6818      	ldr	r0, [r3, #0]
 801ad1e:	6803      	ldr	r3, [r0, #0]
 801ad20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ad22:	4798      	blx	r3
 801ad24:	e76a      	b.n	801abfc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ad26:	bf00      	nop
 801ad28:	200023a8 	.word	0x200023a8
 801ad2c:	200023a2 	.word	0x200023a2

0801ad30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801ad30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ad34:	460c      	mov	r4, r1
 801ad36:	b085      	sub	sp, #20
 801ad38:	6810      	ldr	r0, [r2, #0]
 801ad3a:	6851      	ldr	r1, [r2, #4]
 801ad3c:	466d      	mov	r5, sp
 801ad3e:	c503      	stmia	r5!, {r0, r1}
 801ad40:	6818      	ldr	r0, [r3, #0]
 801ad42:	6859      	ldr	r1, [r3, #4]
 801ad44:	4616      	mov	r6, r2
 801ad46:	c503      	stmia	r5!, {r0, r1}
 801ad48:	4668      	mov	r0, sp
 801ad4a:	f7f8 f81f 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ad4e:	4631      	mov	r1, r6
 801ad50:	a802      	add	r0, sp, #8
 801ad52:	f7f8 f843 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ad56:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ad5a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ad5e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ad62:	4d28      	ldr	r5, [pc, #160]	@ (801ae04 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801ad64:	4e28      	ldr	r6, [pc, #160]	@ (801ae08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801ad66:	6828      	ldr	r0, [r5, #0]
 801ad68:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ad6c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ad70:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ad74:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ad78:	f8bd 1000 	ldrh.w	r1, [sp]
 801ad7c:	440a      	add	r2, r1
 801ad7e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ad82:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ad86:	4413      	add	r3, r2
 801ad88:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ad8c:	6803      	ldr	r3, [r0, #0]
 801ad8e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ad90:	4798      	blx	r3
 801ad92:	8833      	ldrh	r3, [r6, #0]
 801ad94:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801ad98:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ad9c:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 801ae0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801ada0:	fb03 1202 	mla	r2, r3, r2, r1
 801ada4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ada8:	fb08 f303 	mul.w	r3, r8, r3
 801adac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801adb0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801adb4:	4298      	cmp	r0, r3
 801adb6:	d21d      	bcs.n	801adf4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801adb8:	eb00 080c 	add.w	r8, r0, ip
 801adbc:	4540      	cmp	r0, r8
 801adbe:	d20f      	bcs.n	801ade0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801adc0:	f854 1b04 	ldr.w	r1, [r4], #4
 801adc4:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801adc8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801adcc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801add0:	ea42 0209 	orr.w	r2, r2, r9
 801add4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801add8:	430a      	orrs	r2, r1
 801adda:	f820 2b02 	strh.w	r2, [r0], #2
 801adde:	e7ed      	b.n	801adbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801ade0:	8832      	ldrh	r2, [r6, #0]
 801ade2:	1bd2      	subs	r2, r2, r7
 801ade4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ade8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801adec:	1bd2      	subs	r2, r2, r7
 801adee:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801adf2:	e7df      	b.n	801adb4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801adf4:	6828      	ldr	r0, [r5, #0]
 801adf6:	6803      	ldr	r3, [r0, #0]
 801adf8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801adfa:	4798      	blx	r3
 801adfc:	b005      	add	sp, #20
 801adfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ae02:	bf00      	nop
 801ae04:	200023a8 	.word	0x200023a8
 801ae08:	200023a2 	.word	0x200023a2
 801ae0c:	fffff800 	.word	0xfffff800

0801ae10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801ae10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ae14:	460e      	mov	r6, r1
 801ae16:	b08e      	sub	sp, #56	@ 0x38
 801ae18:	4604      	mov	r4, r0
 801ae1a:	6808      	ldr	r0, [r1, #0]
 801ae1c:	6849      	ldr	r1, [r1, #4]
 801ae1e:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801aff8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801ae22:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 801affc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801ae26:	461d      	mov	r5, r3
 801ae28:	ab0a      	add	r3, sp, #40	@ 0x28
 801ae2a:	c303      	stmia	r3!, {r0, r1}
 801ae2c:	6810      	ldr	r0, [r2, #0]
 801ae2e:	6851      	ldr	r1, [r2, #4]
 801ae30:	ab0c      	add	r3, sp, #48	@ 0x30
 801ae32:	c303      	stmia	r3!, {r0, r1}
 801ae34:	a80a      	add	r0, sp, #40	@ 0x28
 801ae36:	f7f7 ffa9 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ae3a:	4631      	mov	r1, r6
 801ae3c:	a80c      	add	r0, sp, #48	@ 0x30
 801ae3e:	f7f7 ffcd 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ae42:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801ae46:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801ae4a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801ae4e:	f8d8 0000 	ldr.w	r0, [r8]
 801ae52:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801ae56:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801ae5a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ae5e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ae62:	440c      	add	r4, r1
 801ae64:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801ae68:	440a      	add	r2, r1
 801ae6a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801ae6e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801ae72:	4413      	add	r3, r2
 801ae74:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801ae78:	6803      	ldr	r3, [r0, #0]
 801ae7a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801ae7c:	4798      	blx	r3
 801ae7e:	2dff      	cmp	r5, #255	@ 0xff
 801ae80:	d124      	bne.n	801aecc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801ae82:	f010 0f01 	tst.w	r0, #1
 801ae86:	f8d8 0000 	ldr.w	r0, [r8]
 801ae8a:	d022      	beq.n	801aed2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801ae8c:	2100      	movs	r1, #0
 801ae8e:	f8d0 c000 	ldr.w	ip, [r0]
 801ae92:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801ae96:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801ae9a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801ae9e:	f04f 0e01 	mov.w	lr, #1
 801aea2:	f8cd e018 	str.w	lr, [sp, #24]
 801aea6:	f8b9 e000 	ldrh.w	lr, [r9]
 801aeaa:	9503      	str	r5, [sp, #12]
 801aeac:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801aeb0:	b2b6      	uxth	r6, r6
 801aeb2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801aeb6:	9102      	str	r1, [sp, #8]
 801aeb8:	b2bf      	uxth	r7, r7
 801aeba:	9601      	str	r6, [sp, #4]
 801aebc:	9700      	str	r7, [sp, #0]
 801aebe:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801aec2:	4621      	mov	r1, r4
 801aec4:	47a8      	blx	r5
 801aec6:	b00e      	add	sp, #56	@ 0x38
 801aec8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801aecc:	f010 0f04 	tst.w	r0, #4
 801aed0:	e7d9      	b.n	801ae86 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801aed2:	6803      	ldr	r3, [r0, #0]
 801aed4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801aed6:	4798      	blx	r3
 801aed8:	f8b9 3000 	ldrh.w	r3, [r9]
 801aedc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801aee0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801aee4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801aee8:	fb03 1202 	mla	r2, r3, r2, r1
 801aeec:	ebac 0c07 	sub.w	ip, ip, r7
 801aef0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801aef4:	435e      	muls	r6, r3
 801aef6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801aefa:	2dff      	cmp	r5, #255	@ 0xff
 801aefc:	eba3 0707 	sub.w	r7, r3, r7
 801af00:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801af04:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801af08:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801af0c:	d049      	beq.n	801afa2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801af0e:	43eb      	mvns	r3, r5
 801af10:	fa1f f985 	uxth.w	r9, r5
 801af14:	b2db      	uxtb	r3, r3
 801af16:	42b0      	cmp	r0, r6
 801af18:	d266      	bcs.n	801afe8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801af1a:	eb00 0a0e 	add.w	sl, r0, lr
 801af1e:	4550      	cmp	r0, sl
 801af20:	4621      	mov	r1, r4
 801af22:	f104 0403 	add.w	r4, r4, #3
 801af26:	d25b      	bcs.n	801afe0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801af28:	8802      	ldrh	r2, [r0, #0]
 801af2a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801af2e:	ea4f 2822 	mov.w	r8, r2, asr #8
 801af32:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801af36:	fb11 f109 	smulbb	r1, r1, r9
 801af3a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801af3e:	10d5      	asrs	r5, r2, #3
 801af40:	fb08 1803 	mla	r8, r8, r3, r1
 801af44:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801af48:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801af4c:	fb11 f109 	smulbb	r1, r1, r9
 801af50:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801af54:	fb05 1503 	mla	r5, r5, r3, r1
 801af58:	00d2      	lsls	r2, r2, #3
 801af5a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801af5e:	b2d2      	uxtb	r2, r2
 801af60:	fb11 f109 	smulbb	r1, r1, r9
 801af64:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801af68:	fa1f f888 	uxth.w	r8, r8
 801af6c:	fb02 1203 	mla	r2, r2, r3, r1
 801af70:	b292      	uxth	r2, r2
 801af72:	f108 0101 	add.w	r1, r8, #1
 801af76:	b2ad      	uxth	r5, r5
 801af78:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801af7c:	1c51      	adds	r1, r2, #1
 801af7e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801af82:	1c69      	adds	r1, r5, #1
 801af84:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801af88:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801af8c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801af90:	096d      	lsrs	r5, r5, #5
 801af92:	ea42 0208 	orr.w	r2, r2, r8
 801af96:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801af9a:	432a      	orrs	r2, r5
 801af9c:	f820 2b02 	strh.w	r2, [r0], #2
 801afa0:	e7bd      	b.n	801af1e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801afa2:	4a14      	ldr	r2, [pc, #80]	@ (801aff4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801afa4:	42b0      	cmp	r0, r6
 801afa6:	d21f      	bcs.n	801afe8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801afa8:	eb00 050e 	add.w	r5, r0, lr
 801afac:	42a8      	cmp	r0, r5
 801afae:	4621      	mov	r1, r4
 801afb0:	f104 0403 	add.w	r4, r4, #3
 801afb4:	d210      	bcs.n	801afd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801afb6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801afba:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801afbe:	00db      	lsls	r3, r3, #3
 801afc0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801afc4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801afc8:	430b      	orrs	r3, r1
 801afca:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801afce:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801afd2:	f820 3b02 	strh.w	r3, [r0], #2
 801afd6:	e7e9      	b.n	801afac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801afd8:	4438      	add	r0, r7
 801afda:	eb01 040c 	add.w	r4, r1, ip
 801afde:	e7e1      	b.n	801afa4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801afe0:	4438      	add	r0, r7
 801afe2:	eb01 040c 	add.w	r4, r1, ip
 801afe6:	e796      	b.n	801af16 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801afe8:	4b03      	ldr	r3, [pc, #12]	@ (801aff8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801afea:	6818      	ldr	r0, [r3, #0]
 801afec:	6803      	ldr	r3, [r0, #0]
 801afee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801aff0:	4798      	blx	r3
 801aff2:	e768      	b.n	801aec6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801aff4:	fffff800 	.word	0xfffff800
 801aff8:	200023a8 	.word	0x200023a8
 801affc:	200023a2 	.word	0x200023a2

0801b000 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801b000:	b4f0      	push	{r4, r5, r6, r7}
 801b002:	4616      	mov	r6, r2
 801b004:	2e01      	cmp	r6, #1
 801b006:	461c      	mov	r4, r3
 801b008:	460d      	mov	r5, r1
 801b00a:	9a04      	ldr	r2, [sp, #16]
 801b00c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801b010:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801b014:	d012      	beq.n	801b03c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801b016:	d303      	bcc.n	801b020 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801b018:	2e02      	cmp	r6, #2
 801b01a:	d00a      	beq.n	801b032 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801b01c:	bcf0      	pop	{r4, r5, r6, r7}
 801b01e:	4770      	bx	lr
 801b020:	6805      	ldr	r5, [r0, #0]
 801b022:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801b026:	68ed      	ldr	r5, [r5, #12]
 801b028:	4613      	mov	r3, r2
 801b02a:	46ac      	mov	ip, r5
 801b02c:	4622      	mov	r2, r4
 801b02e:	bcf0      	pop	{r4, r5, r6, r7}
 801b030:	4760      	bx	ip
 801b032:	4621      	mov	r1, r4
 801b034:	4628      	mov	r0, r5
 801b036:	bcf0      	pop	{r4, r5, r6, r7}
 801b038:	f7ff bd94 	b.w	801ab64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b03c:	4621      	mov	r1, r4
 801b03e:	4628      	mov	r0, r5
 801b040:	bcf0      	pop	{r4, r5, r6, r7}
 801b042:	f7ff bee5 	b.w	801ae10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801b048 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801b048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b04c:	4681      	mov	r9, r0
 801b04e:	b093      	sub	sp, #76	@ 0x4c
 801b050:	6810      	ldr	r0, [r2, #0]
 801b052:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801b056:	4f6d      	ldr	r7, [pc, #436]	@ (801b20c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801b058:	4688      	mov	r8, r1
 801b05a:	6851      	ldr	r1, [r2, #4]
 801b05c:	ac0e      	add	r4, sp, #56	@ 0x38
 801b05e:	c403      	stmia	r4!, {r0, r1}
 801b060:	6818      	ldr	r0, [r3, #0]
 801b062:	6859      	ldr	r1, [r3, #4]
 801b064:	ac10      	add	r4, sp, #64	@ 0x40
 801b066:	4616      	mov	r6, r2
 801b068:	c403      	stmia	r4!, {r0, r1}
 801b06a:	a80e      	add	r0, sp, #56	@ 0x38
 801b06c:	f7f7 fe8e 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b070:	4631      	mov	r1, r6
 801b072:	a810      	add	r0, sp, #64	@ 0x40
 801b074:	f7f7 feb2 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b078:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801b07c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801b080:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801b084:	4e62      	ldr	r6, [pc, #392]	@ (801b210 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801b086:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801b08a:	6830      	ldr	r0, [r6, #0]
 801b08c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801b090:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b094:	4489      	add	r9, r1
 801b096:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801b09a:	440a      	add	r2, r1
 801b09c:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801b0a0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801b0a4:	4413      	add	r3, r2
 801b0a6:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801b0aa:	6803      	ldr	r3, [r0, #0]
 801b0ac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801b0ae:	4798      	blx	r3
 801b0b0:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801b0b4:	6830      	ldr	r0, [r6, #0]
 801b0b6:	d01d      	beq.n	801b0f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801b0b8:	2200      	movs	r2, #0
 801b0ba:	6801      	ldr	r1, [r0, #0]
 801b0bc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801b0c0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801b0c4:	220b      	movs	r2, #11
 801b0c6:	9207      	str	r2, [sp, #28]
 801b0c8:	883a      	ldrh	r2, [r7, #0]
 801b0ca:	9206      	str	r2, [sp, #24]
 801b0cc:	2201      	movs	r2, #1
 801b0ce:	e9cd a204 	strd	sl, r2, [sp, #16]
 801b0d2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801b0d6:	9203      	str	r2, [sp, #12]
 801b0d8:	b2a4      	uxth	r4, r4
 801b0da:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801b0de:	9200      	str	r2, [sp, #0]
 801b0e0:	b2ad      	uxth	r5, r5
 801b0e2:	9502      	str	r5, [sp, #8]
 801b0e4:	9401      	str	r4, [sp, #4]
 801b0e6:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 801b0e8:	4642      	mov	r2, r8
 801b0ea:	4649      	mov	r1, r9
 801b0ec:	47a0      	blx	r4
 801b0ee:	b013      	add	sp, #76	@ 0x4c
 801b0f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b0f4:	6803      	ldr	r3, [r0, #0]
 801b0f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b0f8:	4798      	blx	r3
 801b0fa:	883b      	ldrh	r3, [r7, #0]
 801b0fc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801b100:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801b104:	fb03 1202 	mla	r2, r3, r2, r1
 801b108:	435d      	muls	r5, r3
 801b10a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b10e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801b112:	920c      	str	r2, [sp, #48]	@ 0x30
 801b114:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801b118:	1b12      	subs	r2, r2, r4
 801b11a:	920d      	str	r2, [sp, #52]	@ 0x34
 801b11c:	0062      	lsls	r2, r4, #1
 801b11e:	1b1c      	subs	r4, r3, r4
 801b120:	0063      	lsls	r3, r4, #1
 801b122:	920a      	str	r2, [sp, #40]	@ 0x28
 801b124:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b126:	f04f 0e04 	mov.w	lr, #4
 801b12a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b12c:	4298      	cmp	r0, r3
 801b12e:	d266      	bcs.n	801b1fe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801b130:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b132:	eb00 0b03 	add.w	fp, r0, r3
 801b136:	4558      	cmp	r0, fp
 801b138:	d25c      	bcs.n	801b1f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801b13a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801b13e:	fb1e e303 	smlabb	r3, lr, r3, lr
 801b142:	f858 2003 	ldr.w	r2, [r8, r3]
 801b146:	0e11      	lsrs	r1, r2, #24
 801b148:	d012      	beq.n	801b170 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801b14a:	29ff      	cmp	r1, #255	@ 0xff
 801b14c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801b150:	d110      	bne.n	801b174 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801b152:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801b156:	d10d      	bne.n	801b174 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801b158:	0953      	lsrs	r3, r2, #5
 801b15a:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801b15e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b162:	f027 0707 	bic.w	r7, r7, #7
 801b166:	431f      	orrs	r7, r3
 801b168:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b16c:	433a      	orrs	r2, r7
 801b16e:	8002      	strh	r2, [r0, #0]
 801b170:	3002      	adds	r0, #2
 801b172:	e7e0      	b.n	801b136 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801b174:	fb0a f101 	mul.w	r1, sl, r1
 801b178:	8806      	ldrh	r6, [r0, #0]
 801b17a:	1c4b      	adds	r3, r1, #1
 801b17c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801b180:	1235      	asrs	r5, r6, #8
 801b182:	10f4      	asrs	r4, r6, #3
 801b184:	121b      	asrs	r3, r3, #8
 801b186:	00f6      	lsls	r6, r6, #3
 801b188:	b299      	uxth	r1, r3
 801b18a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801b18e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b192:	b2f6      	uxtb	r6, r6
 801b194:	43db      	mvns	r3, r3
 801b196:	b2d2      	uxtb	r2, r2
 801b198:	b2db      	uxtb	r3, r3
 801b19a:	fb1c fc01 	smulbb	ip, ip, r1
 801b19e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801b1a2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b1a6:	fb12 f201 	smulbb	r2, r2, r1
 801b1aa:	fb05 c503 	mla	r5, r5, r3, ip
 801b1ae:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801b1b2:	b2ff      	uxtb	r7, r7
 801b1b4:	fb06 2203 	mla	r2, r6, r3, r2
 801b1b8:	b2ad      	uxth	r5, r5
 801b1ba:	fb17 f701 	smulbb	r7, r7, r1
 801b1be:	b292      	uxth	r2, r2
 801b1c0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801b1c4:	fb04 7403 	mla	r4, r4, r3, r7
 801b1c8:	f105 0c01 	add.w	ip, r5, #1
 801b1cc:	1c57      	adds	r7, r2, #1
 801b1ce:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b1d2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801b1d6:	b2a4      	uxth	r4, r4
 801b1d8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b1dc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b1e0:	433d      	orrs	r5, r7
 801b1e2:	1c67      	adds	r7, r4, #1
 801b1e4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801b1e8:	0964      	lsrs	r4, r4, #5
 801b1ea:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801b1ee:	4325      	orrs	r5, r4
 801b1f0:	8005      	strh	r5, [r0, #0]
 801b1f2:	e7bd      	b.n	801b170 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801b1f4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b1f6:	4418      	add	r0, r3
 801b1f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b1fa:	4499      	add	r9, r3
 801b1fc:	e795      	b.n	801b12a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801b1fe:	4b04      	ldr	r3, [pc, #16]	@ (801b210 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801b200:	6818      	ldr	r0, [r3, #0]
 801b202:	6803      	ldr	r3, [r0, #0]
 801b204:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b206:	4798      	blx	r3
 801b208:	e771      	b.n	801b0ee <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801b20a:	bf00      	nop
 801b20c:	200023a2 	.word	0x200023a2
 801b210:	200023a8 	.word	0x200023a8

0801b214 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801b214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b218:	b087      	sub	sp, #28
 801b21a:	4680      	mov	r8, r0
 801b21c:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801b220:	460d      	mov	r5, r1
 801b222:	4614      	mov	r4, r2
 801b224:	2e00      	cmp	r6, #0
 801b226:	f000 80b9 	beq.w	801b39c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801b22a:	6810      	ldr	r0, [r2, #0]
 801b22c:	6851      	ldr	r1, [r2, #4]
 801b22e:	af02      	add	r7, sp, #8
 801b230:	c703      	stmia	r7!, {r0, r1}
 801b232:	6818      	ldr	r0, [r3, #0]
 801b234:	6859      	ldr	r1, [r3, #4]
 801b236:	af04      	add	r7, sp, #16
 801b238:	c703      	stmia	r7!, {r0, r1}
 801b23a:	a802      	add	r0, sp, #8
 801b23c:	f7f7 fda6 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b240:	4621      	mov	r1, r4
 801b242:	a804      	add	r0, sp, #16
 801b244:	f7f7 fdca 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b248:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801b24c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b250:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801b254:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801b258:	fb14 2103 	smlabb	r1, r4, r3, r2
 801b25c:	eb08 0401 	add.w	r4, r8, r1
 801b260:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b264:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801b268:	440a      	add	r2, r1
 801b26a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801b26e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b272:	4413      	add	r3, r2
 801b274:	f8ad 3012 	strh.w	r3, [sp, #18]
 801b278:	4b4a      	ldr	r3, [pc, #296]	@ (801b3a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801b27a:	6818      	ldr	r0, [r3, #0]
 801b27c:	6803      	ldr	r3, [r0, #0]
 801b27e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b280:	4798      	blx	r3
 801b282:	4b49      	ldr	r3, [pc, #292]	@ (801b3a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801b284:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801b288:	881a      	ldrh	r2, [r3, #0]
 801b28a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801b28e:	2eff      	cmp	r6, #255	@ 0xff
 801b290:	fb02 c101 	mla	r1, r2, r1, ip
 801b294:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b298:	fb02 f207 	mul.w	r2, r2, r7
 801b29c:	f105 0104 	add.w	r1, r5, #4
 801b2a0:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801b2a4:	461d      	mov	r5, r3
 801b2a6:	d05a      	beq.n	801b35e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801b2a8:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801b2ac:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b2b0:	b2b6      	uxth	r6, r6
 801b2b2:	fa1f fe8e 	uxth.w	lr, lr
 801b2b6:	9301      	str	r3, [sp, #4]
 801b2b8:	4282      	cmp	r2, r0
 801b2ba:	d96a      	bls.n	801b392 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801b2bc:	eb00 0b0a 	add.w	fp, r0, sl
 801b2c0:	4583      	cmp	fp, r0
 801b2c2:	d940      	bls.n	801b346 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801b2c4:	f814 3b01 	ldrb.w	r3, [r4], #1
 801b2c8:	8805      	ldrh	r5, [r0, #0]
 801b2ca:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801b2ce:	122f      	asrs	r7, r5, #8
 801b2d0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b2d4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b2d8:	fb17 f70e 	smulbb	r7, r7, lr
 801b2dc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b2e0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b2e4:	00ed      	lsls	r5, r5, #3
 801b2e6:	fb0c 7c06 	mla	ip, ip, r6, r7
 801b2ea:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801b2ee:	10df      	asrs	r7, r3, #3
 801b2f0:	b2ed      	uxtb	r5, r5
 801b2f2:	00db      	lsls	r3, r3, #3
 801b2f4:	fa1f fc8c 	uxth.w	ip, ip
 801b2f8:	fb19 f90e 	smulbb	r9, r9, lr
 801b2fc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b300:	b2db      	uxtb	r3, r3
 801b302:	fb15 f50e 	smulbb	r5, r5, lr
 801b306:	fb07 9706 	mla	r7, r7, r6, r9
 801b30a:	fb03 5306 	mla	r3, r3, r6, r5
 801b30e:	f10c 0901 	add.w	r9, ip, #1
 801b312:	b29b      	uxth	r3, r3
 801b314:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801b318:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801b31c:	f103 0c01 	add.w	ip, r3, #1
 801b320:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b324:	b2bf      	uxth	r7, r7
 801b326:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b32a:	ea4c 0c09 	orr.w	ip, ip, r9
 801b32e:	f107 0901 	add.w	r9, r7, #1
 801b332:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801b336:	097f      	lsrs	r7, r7, #5
 801b338:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b33c:	ea4c 0c07 	orr.w	ip, ip, r7
 801b340:	f820 cb02 	strh.w	ip, [r0], #2
 801b344:	e7bc      	b.n	801b2c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801b346:	9b01      	ldr	r3, [sp, #4]
 801b348:	881b      	ldrh	r3, [r3, #0]
 801b34a:	eba3 0308 	sub.w	r3, r3, r8
 801b34e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b352:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801b356:	eba3 0308 	sub.w	r3, r3, r8
 801b35a:	441c      	add	r4, r3
 801b35c:	e7ac      	b.n	801b2b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801b35e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b362:	4282      	cmp	r2, r0
 801b364:	d915      	bls.n	801b392 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801b366:	eb00 060a 	add.w	r6, r0, sl
 801b36a:	4286      	cmp	r6, r0
 801b36c:	d906      	bls.n	801b37c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801b36e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801b372:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801b376:	f820 3b02 	strh.w	r3, [r0], #2
 801b37a:	e7f6      	b.n	801b36a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801b37c:	882b      	ldrh	r3, [r5, #0]
 801b37e:	eba3 0308 	sub.w	r3, r3, r8
 801b382:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b386:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801b38a:	eba3 0308 	sub.w	r3, r3, r8
 801b38e:	441c      	add	r4, r3
 801b390:	e7e7      	b.n	801b362 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801b392:	4b04      	ldr	r3, [pc, #16]	@ (801b3a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801b394:	6818      	ldr	r0, [r3, #0]
 801b396:	6803      	ldr	r3, [r0, #0]
 801b398:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b39a:	4798      	blx	r3
 801b39c:	b007      	add	sp, #28
 801b39e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3a2:	bf00      	nop
 801b3a4:	200023a8 	.word	0x200023a8
 801b3a8:	200023a2 	.word	0x200023a2

0801b3ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801b3ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3b0:	b091      	sub	sp, #68	@ 0x44
 801b3b2:	4680      	mov	r8, r0
 801b3b4:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801b3b8:	460f      	mov	r7, r1
 801b3ba:	4614      	mov	r4, r2
 801b3bc:	2d00      	cmp	r5, #0
 801b3be:	d051      	beq.n	801b464 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801b3c0:	6810      	ldr	r0, [r2, #0]
 801b3c2:	6851      	ldr	r1, [r2, #4]
 801b3c4:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801b5c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801b3c8:	ae0c      	add	r6, sp, #48	@ 0x30
 801b3ca:	c603      	stmia	r6!, {r0, r1}
 801b3cc:	6818      	ldr	r0, [r3, #0]
 801b3ce:	6859      	ldr	r1, [r3, #4]
 801b3d0:	ae0e      	add	r6, sp, #56	@ 0x38
 801b3d2:	c603      	stmia	r6!, {r0, r1}
 801b3d4:	a80c      	add	r0, sp, #48	@ 0x30
 801b3d6:	f7f7 fcd9 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b3da:	4621      	mov	r1, r4
 801b3dc:	a80e      	add	r0, sp, #56	@ 0x38
 801b3de:	f7f7 fcfd 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b3e2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801b3e6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801b3ea:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801b3ee:	f8d9 0000 	ldr.w	r0, [r9]
 801b3f2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801b3f6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801b3fa:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b3fe:	eb08 0401 	add.w	r4, r8, r1
 801b402:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801b406:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801b5cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801b40a:	440a      	add	r2, r1
 801b40c:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801b410:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801b414:	4413      	add	r3, r2
 801b416:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801b41a:	6803      	ldr	r3, [r0, #0]
 801b41c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801b41e:	4798      	blx	r3
 801b420:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801b424:	f8d9 0000 	ldr.w	r0, [r9]
 801b428:	d01f      	beq.n	801b46a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801b42a:	2200      	movs	r2, #0
 801b42c:	6801      	ldr	r1, [r0, #0]
 801b42e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801b432:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801b436:	220b      	movs	r2, #11
 801b438:	9207      	str	r2, [sp, #28]
 801b43a:	f8b8 2000 	ldrh.w	r2, [r8]
 801b43e:	9206      	str	r2, [sp, #24]
 801b440:	2201      	movs	r2, #1
 801b442:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801b446:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801b44a:	9203      	str	r2, [sp, #12]
 801b44c:	fa1f f28a 	uxth.w	r2, sl
 801b450:	9202      	str	r2, [sp, #8]
 801b452:	b2b6      	uxth	r6, r6
 801b454:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801b458:	9200      	str	r2, [sp, #0]
 801b45a:	9601      	str	r6, [sp, #4]
 801b45c:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801b45e:	463a      	mov	r2, r7
 801b460:	4621      	mov	r1, r4
 801b462:	47a8      	blx	r5
 801b464:	b011      	add	sp, #68	@ 0x44
 801b466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b46a:	6803      	ldr	r3, [r0, #0]
 801b46c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b46e:	4798      	blx	r3
 801b470:	f8b8 2000 	ldrh.w	r2, [r8]
 801b474:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801b478:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801b47c:	2dff      	cmp	r5, #255	@ 0xff
 801b47e:	fb02 1303 	mla	r3, r2, r3, r1
 801b482:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b486:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801b48a:	fb0a fa02 	mul.w	sl, sl, r2
 801b48e:	d062      	beq.n	801b556 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801b490:	ea6f 0c05 	mvn.w	ip, r5
 801b494:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801b498:	930a      	str	r3, [sp, #40]	@ 0x28
 801b49a:	b2ad      	uxth	r5, r5
 801b49c:	fa5f fc8c 	uxtb.w	ip, ip
 801b4a0:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801b4a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b4a6:	4298      	cmp	r0, r3
 801b4a8:	f080 8085 	bcs.w	801b5b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801b4ac:	eb00 0b09 	add.w	fp, r0, r9
 801b4b0:	4558      	cmp	r0, fp
 801b4b2:	d246      	bcs.n	801b542 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801b4b4:	f814 eb01 	ldrb.w	lr, [r4], #1
 801b4b8:	2303      	movs	r3, #3
 801b4ba:	2204      	movs	r2, #4
 801b4bc:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801b4c0:	eb07 0a0e 	add.w	sl, r7, lr
 801b4c4:	8803      	ldrh	r3, [r0, #0]
 801b4c6:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801b4ca:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b4ce:	1219      	asrs	r1, r3, #8
 801b4d0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b4d4:	fb18 f805 	smulbb	r8, r8, r5
 801b4d8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801b4dc:	10da      	asrs	r2, r3, #3
 801b4de:	fb01 810c 	mla	r1, r1, ip, r8
 801b4e2:	00db      	lsls	r3, r3, #3
 801b4e4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b4e8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b4ec:	b2db      	uxtb	r3, r3
 801b4ee:	fb18 f805 	smulbb	r8, r8, r5
 801b4f2:	fb1e fe05 	smulbb	lr, lr, r5
 801b4f6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801b4fa:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801b4fe:	b289      	uxth	r1, r1
 801b500:	fb02 820c 	mla	r2, r2, ip, r8
 801b504:	fb03 e30c 	mla	r3, r3, ip, lr
 801b508:	b292      	uxth	r2, r2
 801b50a:	b29b      	uxth	r3, r3
 801b50c:	f101 0801 	add.w	r8, r1, #1
 801b510:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801b514:	f103 0e01 	add.w	lr, r3, #1
 801b518:	f102 0801 	add.w	r8, r2, #1
 801b51c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801b520:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801b524:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b528:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b52c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b530:	ea4e 0101 	orr.w	r1, lr, r1
 801b534:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801b538:	ea41 0108 	orr.w	r1, r1, r8
 801b53c:	f820 1b02 	strh.w	r1, [r0], #2
 801b540:	e7b6      	b.n	801b4b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801b542:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b544:	881b      	ldrh	r3, [r3, #0]
 801b546:	1b9b      	subs	r3, r3, r6
 801b548:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b54c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801b550:	1b9b      	subs	r3, r3, r6
 801b552:	441c      	add	r4, r3
 801b554:	e7a6      	b.n	801b4a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801b556:	491b      	ldr	r1, [pc, #108]	@ (801b5c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801b558:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801b55c:	2203      	movs	r2, #3
 801b55e:	2504      	movs	r5, #4
 801b560:	4550      	cmp	r0, sl
 801b562:	d228      	bcs.n	801b5b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801b564:	eb00 0c09 	add.w	ip, r0, r9
 801b568:	4560      	cmp	r0, ip
 801b56a:	4623      	mov	r3, r4
 801b56c:	d219      	bcs.n	801b5a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801b56e:	f893 e000 	ldrb.w	lr, [r3]
 801b572:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801b576:	eb07 0b0e 	add.w	fp, r7, lr
 801b57a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b57e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801b582:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b586:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801b58a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801b58e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801b592:	ea43 030b 	orr.w	r3, r3, fp
 801b596:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801b59a:	3401      	adds	r4, #1
 801b59c:	f820 3b02 	strh.w	r3, [r0], #2
 801b5a0:	e7e2      	b.n	801b568 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801b5a2:	f8b8 3000 	ldrh.w	r3, [r8]
 801b5a6:	1b9b      	subs	r3, r3, r6
 801b5a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b5ac:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801b5b0:	1b9b      	subs	r3, r3, r6
 801b5b2:	441c      	add	r4, r3
 801b5b4:	e7d4      	b.n	801b560 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801b5b6:	4b04      	ldr	r3, [pc, #16]	@ (801b5c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801b5b8:	6818      	ldr	r0, [r3, #0]
 801b5ba:	6803      	ldr	r3, [r0, #0]
 801b5bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b5be:	4798      	blx	r3
 801b5c0:	e750      	b.n	801b464 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801b5c2:	bf00      	nop
 801b5c4:	fffff800 	.word	0xfffff800
 801b5c8:	200023a8 	.word	0x200023a8
 801b5cc:	200023a2 	.word	0x200023a2

0801b5d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801b5d0:	b4f0      	push	{r4, r5, r6, r7}
 801b5d2:	460c      	mov	r4, r1
 801b5d4:	4611      	mov	r1, r2
 801b5d6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801b5da:	780f      	ldrb	r7, [r1, #0]
 801b5dc:	784e      	ldrb	r6, [r1, #1]
 801b5de:	2f01      	cmp	r7, #1
 801b5e0:	461a      	mov	r2, r3
 801b5e2:	9b04      	ldr	r3, [sp, #16]
 801b5e4:	d036      	beq.n	801b654 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801b5e6:	d31e      	bcc.n	801b626 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801b5e8:	2f02      	cmp	r7, #2
 801b5ea:	d14a      	bne.n	801b682 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b5ec:	2e03      	cmp	r6, #3
 801b5ee:	d848      	bhi.n	801b682 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b5f0:	e8df f006 	tbb	[pc, r6]
 801b5f4:	16140702 	.word	0x16140702
 801b5f8:	9504      	str	r5, [sp, #16]
 801b5fa:	4620      	mov	r0, r4
 801b5fc:	bcf0      	pop	{r4, r5, r6, r7}
 801b5fe:	f7ff be09 	b.w	801b214 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801b602:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 801b604:	2800      	cmp	r0, #0
 801b606:	d03c      	beq.n	801b682 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b608:	6806      	ldr	r6, [r0, #0]
 801b60a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b60e:	68b5      	ldr	r5, [r6, #8]
 801b610:	4613      	mov	r3, r2
 801b612:	46ac      	mov	ip, r5
 801b614:	460a      	mov	r2, r1
 801b616:	4621      	mov	r1, r4
 801b618:	bcf0      	pop	{r4, r5, r6, r7}
 801b61a:	4760      	bx	ip
 801b61c:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801b61e:	e7f1      	b.n	801b604 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801b620:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801b624:	e7ee      	b.n	801b604 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801b626:	2e03      	cmp	r6, #3
 801b628:	d82b      	bhi.n	801b682 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b62a:	e8df f006 	tbb	[pc, r6]
 801b62e:	0702      	.short	0x0702
 801b630:	100e      	.short	0x100e
 801b632:	9504      	str	r5, [sp, #16]
 801b634:	4620      	mov	r0, r4
 801b636:	bcf0      	pop	{r4, r5, r6, r7}
 801b638:	f7ff bd06 	b.w	801b048 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801b63c:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 801b63e:	b300      	cbz	r0, 801b682 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b640:	6806      	ldr	r6, [r0, #0]
 801b642:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b646:	68f5      	ldr	r5, [r6, #12]
 801b648:	e7e2      	b.n	801b610 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801b64a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801b64c:	e7f7      	b.n	801b63e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801b64e:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801b652:	e7f4      	b.n	801b63e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801b654:	2e03      	cmp	r6, #3
 801b656:	d814      	bhi.n	801b682 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b658:	e8df f006 	tbb	[pc, r6]
 801b65c:	100e0702 	.word	0x100e0702
 801b660:	9504      	str	r5, [sp, #16]
 801b662:	4620      	mov	r0, r4
 801b664:	bcf0      	pop	{r4, r5, r6, r7}
 801b666:	f7ff bea1 	b.w	801b3ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801b66a:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 801b66c:	b148      	cbz	r0, 801b682 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b66e:	6806      	ldr	r6, [r0, #0]
 801b670:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b674:	6935      	ldr	r5, [r6, #16]
 801b676:	e7cb      	b.n	801b610 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801b678:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801b67a:	e7f7      	b.n	801b66c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801b67c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801b680:	e7f4      	b.n	801b66c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801b682:	bcf0      	pop	{r4, r5, r6, r7}
 801b684:	4770      	bx	lr
	...

0801b688 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801b688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b68c:	4604      	mov	r4, r0
 801b68e:	b087      	sub	sp, #28
 801b690:	6810      	ldr	r0, [r2, #0]
 801b692:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801b696:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801b8d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801b69a:	460e      	mov	r6, r1
 801b69c:	6851      	ldr	r1, [r2, #4]
 801b69e:	ad02      	add	r5, sp, #8
 801b6a0:	c503      	stmia	r5!, {r0, r1}
 801b6a2:	6818      	ldr	r0, [r3, #0]
 801b6a4:	6859      	ldr	r1, [r3, #4]
 801b6a6:	ad04      	add	r5, sp, #16
 801b6a8:	4617      	mov	r7, r2
 801b6aa:	c503      	stmia	r5!, {r0, r1}
 801b6ac:	a802      	add	r0, sp, #8
 801b6ae:	f7f7 fb6d 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b6b2:	4639      	mov	r1, r7
 801b6b4:	a804      	add	r0, sp, #16
 801b6b6:	f7f7 fb91 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b6ba:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801b6be:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b6c2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801b6c6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801b6ca:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801b6ce:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b6d2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801b6d6:	440e      	add	r6, r1
 801b6d8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b6dc:	440a      	add	r2, r1
 801b6de:	f8ad 2010 	strh.w	r2, [sp, #16]
 801b6e2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b6e6:	4413      	add	r3, r2
 801b6e8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801b6ec:	4b77      	ldr	r3, [pc, #476]	@ (801b8cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801b6ee:	6818      	ldr	r0, [r3, #0]
 801b6f0:	6803      	ldr	r3, [r0, #0]
 801b6f2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b6f4:	4798      	blx	r3
 801b6f6:	f8b9 b000 	ldrh.w	fp, [r9]
 801b6fa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b6fe:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801b702:	fb0b 2303 	mla	r3, fp, r3, r2
 801b706:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b70a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801b70e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801b712:	fb05 f50b 	mul.w	r5, r5, fp
 801b716:	9300      	str	r3, [sp, #0]
 801b718:	d069      	beq.n	801b7ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801b71a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801b71e:	4558      	cmp	r0, fp
 801b720:	f080 80cc 	bcs.w	801b8bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801b724:	9b00      	ldr	r3, [sp, #0]
 801b726:	18c3      	adds	r3, r0, r3
 801b728:	9301      	str	r3, [sp, #4]
 801b72a:	4631      	mov	r1, r6
 801b72c:	9b01      	ldr	r3, [sp, #4]
 801b72e:	4298      	cmp	r0, r3
 801b730:	d24f      	bcs.n	801b7d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801b732:	f811 2b01 	ldrb.w	r2, [r1], #1
 801b736:	2a00      	cmp	r2, #0
 801b738:	d048      	beq.n	801b7cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801b73a:	fb0a f202 	mul.w	r2, sl, r2
 801b73e:	1c53      	adds	r3, r2, #1
 801b740:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b744:	121b      	asrs	r3, r3, #8
 801b746:	d041      	beq.n	801b7cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801b748:	8802      	ldrh	r2, [r0, #0]
 801b74a:	f8b4 c000 	ldrh.w	ip, [r4]
 801b74e:	b29e      	uxth	r6, r3
 801b750:	1215      	asrs	r5, r2, #8
 801b752:	43db      	mvns	r3, r3
 801b754:	b2db      	uxtb	r3, r3
 801b756:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b75a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b75e:	fb15 f503 	smulbb	r5, r5, r3
 801b762:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801b766:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b76a:	00d2      	lsls	r2, r2, #3
 801b76c:	fb07 5706 	mla	r7, r7, r6, r5
 801b770:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b774:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801b778:	b2d2      	uxtb	r2, r2
 801b77a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b77e:	b2bf      	uxth	r7, r7
 801b780:	fb1e fe03 	smulbb	lr, lr, r3
 801b784:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b788:	fa5f fc8c 	uxtb.w	ip, ip
 801b78c:	fb12 f203 	smulbb	r2, r2, r3
 801b790:	fb05 e506 	mla	r5, r5, r6, lr
 801b794:	fb0c 2c06 	mla	ip, ip, r6, r2
 801b798:	f107 0e01 	add.w	lr, r7, #1
 801b79c:	fa1f fc8c 	uxth.w	ip, ip
 801b7a0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801b7a4:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801b7a8:	f10c 0701 	add.w	r7, ip, #1
 801b7ac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b7b0:	b2ad      	uxth	r5, r5
 801b7b2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b7b6:	ea47 070e 	orr.w	r7, r7, lr
 801b7ba:	f105 0e01 	add.w	lr, r5, #1
 801b7be:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801b7c2:	096d      	lsrs	r5, r5, #5
 801b7c4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b7c8:	432f      	orrs	r7, r5
 801b7ca:	8007      	strh	r7, [r0, #0]
 801b7cc:	3002      	adds	r0, #2
 801b7ce:	3402      	adds	r4, #2
 801b7d0:	e7ac      	b.n	801b72c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801b7d2:	f8b9 3000 	ldrh.w	r3, [r9]
 801b7d6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801b7da:	eba3 0308 	sub.w	r3, r3, r8
 801b7de:	eba6 0608 	sub.w	r6, r6, r8
 801b7e2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801b7e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b7ea:	440e      	add	r6, r1
 801b7ec:	e797      	b.n	801b71e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801b7ee:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801b7f2:	42a8      	cmp	r0, r5
 801b7f4:	d262      	bcs.n	801b8bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801b7f6:	9b00      	ldr	r3, [sp, #0]
 801b7f8:	4631      	mov	r1, r6
 801b7fa:	eb00 0b03 	add.w	fp, r0, r3
 801b7fe:	4558      	cmp	r0, fp
 801b800:	d24e      	bcs.n	801b8a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801b802:	f811 3b01 	ldrb.w	r3, [r1], #1
 801b806:	b12b      	cbz	r3, 801b814 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801b808:	2bff      	cmp	r3, #255	@ 0xff
 801b80a:	f8b4 e000 	ldrh.w	lr, [r4]
 801b80e:	d104      	bne.n	801b81a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801b810:	f8a0 e000 	strh.w	lr, [r0]
 801b814:	3002      	adds	r0, #2
 801b816:	3402      	adds	r4, #2
 801b818:	e7f1      	b.n	801b7fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801b81a:	8802      	ldrh	r2, [r0, #0]
 801b81c:	b29f      	uxth	r7, r3
 801b81e:	1216      	asrs	r6, r2, #8
 801b820:	43db      	mvns	r3, r3
 801b822:	b2db      	uxtb	r3, r3
 801b824:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b828:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b82c:	fb16 f603 	smulbb	r6, r6, r3
 801b830:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801b834:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b838:	00d2      	lsls	r2, r2, #3
 801b83a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b83e:	b2d2      	uxtb	r2, r2
 801b840:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b844:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801b848:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b84c:	fb1a fa03 	smulbb	sl, sl, r3
 801b850:	fa1f fc8c 	uxth.w	ip, ip
 801b854:	fb12 f303 	smulbb	r3, r2, r3
 801b858:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b85c:	fa5f fe8e 	uxtb.w	lr, lr
 801b860:	fb06 a607 	mla	r6, r6, r7, sl
 801b864:	f10c 0201 	add.w	r2, ip, #1
 801b868:	fb0e 3307 	mla	r3, lr, r7, r3
 801b86c:	b2b6      	uxth	r6, r6
 801b86e:	b29b      	uxth	r3, r3
 801b870:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b874:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801b878:	f106 0a01 	add.w	sl, r6, #1
 801b87c:	f103 0c01 	add.w	ip, r3, #1
 801b880:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b884:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801b888:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b88c:	0976      	lsrs	r6, r6, #5
 801b88e:	ea4c 0c02 	orr.w	ip, ip, r2
 801b892:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801b896:	ea4c 0c06 	orr.w	ip, ip, r6
 801b89a:	f8a0 c000 	strh.w	ip, [r0]
 801b89e:	e7b9      	b.n	801b814 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801b8a0:	f8b9 3000 	ldrh.w	r3, [r9]
 801b8a4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801b8a8:	eba3 0308 	sub.w	r3, r3, r8
 801b8ac:	eba6 0608 	sub.w	r6, r6, r8
 801b8b0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801b8b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b8b8:	440e      	add	r6, r1
 801b8ba:	e79a      	b.n	801b7f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801b8bc:	4b03      	ldr	r3, [pc, #12]	@ (801b8cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801b8be:	6818      	ldr	r0, [r3, #0]
 801b8c0:	6803      	ldr	r3, [r0, #0]
 801b8c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b8c4:	4798      	blx	r3
 801b8c6:	b007      	add	sp, #28
 801b8c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b8cc:	200023a8 	.word	0x200023a8
 801b8d0:	200023a2 	.word	0x200023a2

0801b8d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801b8d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b8d8:	b089      	sub	sp, #36	@ 0x24
 801b8da:	4682      	mov	sl, r0
 801b8dc:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801b8e0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b8e2:	460f      	mov	r7, r1
 801b8e4:	4691      	mov	r9, r2
 801b8e6:	4698      	mov	r8, r3
 801b8e8:	2e00      	cmp	r6, #0
 801b8ea:	d03d      	beq.n	801b968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b8ec:	4608      	mov	r0, r1
 801b8ee:	f7fa fe61 	bl	80165b4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b8f2:	4605      	mov	r5, r0
 801b8f4:	4638      	mov	r0, r7
 801b8f6:	f7fa fe91 	bl	801661c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b8fa:	f8ad 000e 	strh.w	r0, [sp, #14]
 801b8fe:	4638      	mov	r0, r7
 801b900:	f8ad 9008 	strh.w	r9, [sp, #8]
 801b904:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b908:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b90c:	f7fa ff3e 	bl	801678c <_ZNK8touchgfx6Bitmap7getDataEv>
 801b910:	4605      	mov	r5, r0
 801b912:	4638      	mov	r0, r7
 801b914:	f7fa ff6a 	bl	80167ec <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801b918:	4681      	mov	r9, r0
 801b91a:	4638      	mov	r0, r7
 801b91c:	f7fa ffba 	bl	8016894 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801b920:	280b      	cmp	r0, #11
 801b922:	d821      	bhi.n	801b968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b924:	e8df f000 	tbb	[pc, r0]
 801b928:	2006aebe 	.word	0x2006aebe
 801b92c:	20202020 	.word	0x20202020
 801b930:	b5202020 	.word	0xb5202020
 801b934:	4bb0      	ldr	r3, [pc, #704]	@ (801bbf8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801b936:	6818      	ldr	r0, [r3, #0]
 801b938:	6803      	ldr	r3, [r0, #0]
 801b93a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801b93c:	4798      	blx	r3
 801b93e:	2eff      	cmp	r6, #255	@ 0xff
 801b940:	d101      	bne.n	801b946 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801b942:	0683      	lsls	r3, r0, #26
 801b944:	d506      	bpl.n	801b954 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801b946:	4633      	mov	r3, r6
 801b948:	4622      	mov	r2, r4
 801b94a:	a902      	add	r1, sp, #8
 801b94c:	4628      	mov	r0, r5
 801b94e:	f7ff f909 	bl	801ab64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b952:	e009      	b.n	801b968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b954:	4638      	mov	r0, r7
 801b956:	f7fa fee1 	bl	801671c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801b95a:	b940      	cbnz	r0, 801b96e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801b95c:	4623      	mov	r3, r4
 801b95e:	aa02      	add	r2, sp, #8
 801b960:	4629      	mov	r1, r5
 801b962:	4650      	mov	r0, sl
 801b964:	f7ff f9e4 	bl	801ad30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801b968:	b009      	add	sp, #36	@ 0x24
 801b96a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b96e:	f10d 0818 	add.w	r8, sp, #24
 801b972:	4639      	mov	r1, r7
 801b974:	4640      	mov	r0, r8
 801b976:	f7fa fe85 	bl	8016684 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801b97a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801b97e:	af04      	add	r7, sp, #16
 801b980:	e887 0003 	stmia.w	r7, {r0, r1}
 801b984:	4638      	mov	r0, r7
 801b986:	4621      	mov	r1, r4
 801b988:	f7f3 ff14 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 801b98c:	4638      	mov	r0, r7
 801b98e:	f7f3 ff54 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 801b992:	2800      	cmp	r0, #0
 801b994:	d1d7      	bne.n	801b946 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801b996:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b99a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801b99e:	4293      	cmp	r3, r2
 801b9a0:	dd12      	ble.n	801b9c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801b9a2:	1a9b      	subs	r3, r3, r2
 801b9a4:	f9b4 0000 	ldrsh.w	r0, [r4]
 801b9a8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b9ac:	f8ad 0018 	strh.w	r0, [sp, #24]
 801b9b0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801b9b4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801b9b8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b9bc:	4642      	mov	r2, r8
 801b9be:	4633      	mov	r3, r6
 801b9c0:	a902      	add	r1, sp, #8
 801b9c2:	4628      	mov	r0, r5
 801b9c4:	f7ff f8ce 	bl	801ab64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b9c8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801b9cc:	f9b4 2000 	ldrsh.w	r2, [r4]
 801b9d0:	4293      	cmp	r3, r2
 801b9d2:	dd12      	ble.n	801b9fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801b9d4:	1a9b      	subs	r3, r3, r2
 801b9d6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801b9da:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801b9de:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b9e2:	f8ad 001a 	strh.w	r0, [sp, #26]
 801b9e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b9ea:	f8ad 101e 	strh.w	r1, [sp, #30]
 801b9ee:	23ff      	movs	r3, #255	@ 0xff
 801b9f0:	4642      	mov	r2, r8
 801b9f2:	a902      	add	r1, sp, #8
 801b9f4:	4628      	mov	r0, r5
 801b9f6:	f7ff f8b5 	bl	801ab64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b9fa:	463b      	mov	r3, r7
 801b9fc:	aa02      	add	r2, sp, #8
 801b9fe:	4629      	mov	r1, r5
 801ba00:	4650      	mov	r0, sl
 801ba02:	f7ff f995 	bl	801ad30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801ba06:	88a2      	ldrh	r2, [r4, #4]
 801ba08:	8823      	ldrh	r3, [r4, #0]
 801ba0a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801ba0e:	4413      	add	r3, r2
 801ba10:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ba14:	440a      	add	r2, r1
 801ba16:	b29b      	uxth	r3, r3
 801ba18:	b292      	uxth	r2, r2
 801ba1a:	b211      	sxth	r1, r2
 801ba1c:	b218      	sxth	r0, r3
 801ba1e:	4288      	cmp	r0, r1
 801ba20:	dd12      	ble.n	801ba48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801ba22:	1a9b      	subs	r3, r3, r2
 801ba24:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ba28:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801ba2c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801ba30:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ba34:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ba38:	23ff      	movs	r3, #255	@ 0xff
 801ba3a:	4642      	mov	r2, r8
 801ba3c:	a902      	add	r1, sp, #8
 801ba3e:	4628      	mov	r0, r5
 801ba40:	f8ad 601a 	strh.w	r6, [sp, #26]
 801ba44:	f7ff f88e 	bl	801ab64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ba48:	88e2      	ldrh	r2, [r4, #6]
 801ba4a:	8863      	ldrh	r3, [r4, #2]
 801ba4c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801ba50:	4413      	add	r3, r2
 801ba52:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801ba56:	440a      	add	r2, r1
 801ba58:	b29b      	uxth	r3, r3
 801ba5a:	b292      	uxth	r2, r2
 801ba5c:	b211      	sxth	r1, r2
 801ba5e:	b218      	sxth	r0, r3
 801ba60:	4288      	cmp	r0, r1
 801ba62:	dd81      	ble.n	801b968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ba64:	1a9b      	subs	r3, r3, r2
 801ba66:	f9b4 6000 	ldrsh.w	r6, [r4]
 801ba6a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ba6e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ba72:	f8ad 6018 	strh.w	r6, [sp, #24]
 801ba76:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ba7a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ba7e:	23ff      	movs	r3, #255	@ 0xff
 801ba80:	4642      	mov	r2, r8
 801ba82:	e762      	b.n	801b94a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801ba84:	4633      	mov	r3, r6
 801ba86:	4622      	mov	r2, r4
 801ba88:	a902      	add	r1, sp, #8
 801ba8a:	4628      	mov	r0, r5
 801ba8c:	f7ff f9c0 	bl	801ae10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801ba90:	e76a      	b.n	801b968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ba92:	e9cd 4600 	strd	r4, r6, [sp]
 801ba96:	ab02      	add	r3, sp, #8
 801ba98:	464a      	mov	r2, r9
 801ba9a:	4629      	mov	r1, r5
 801ba9c:	4650      	mov	r0, sl
 801ba9e:	f7ff fd97 	bl	801b5d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801baa2:	e761      	b.n	801b968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801baa4:	4638      	mov	r0, r7
 801baa6:	f7fa fe39 	bl	801671c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801baaa:	b950      	cbnz	r0, 801bac2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801baac:	e9cd 6000 	strd	r6, r0, [sp]
 801bab0:	f8da 3000 	ldr.w	r3, [sl]
 801bab4:	aa02      	add	r2, sp, #8
 801bab6:	68de      	ldr	r6, [r3, #12]
 801bab8:	4629      	mov	r1, r5
 801baba:	4623      	mov	r3, r4
 801babc:	4650      	mov	r0, sl
 801babe:	47b0      	blx	r6
 801bac0:	e752      	b.n	801b968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801bac2:	f10d 0818 	add.w	r8, sp, #24
 801bac6:	4639      	mov	r1, r7
 801bac8:	4640      	mov	r0, r8
 801baca:	f7fa fddb 	bl	8016684 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801bace:	e898 0003 	ldmia.w	r8, {r0, r1}
 801bad2:	af04      	add	r7, sp, #16
 801bad4:	e887 0003 	stmia.w	r7, {r0, r1}
 801bad8:	4638      	mov	r0, r7
 801bada:	4621      	mov	r1, r4
 801badc:	f7f3 fe6a 	bl	800f7b4 <_ZN8touchgfx4RectaNERKS0_>
 801bae0:	4638      	mov	r0, r7
 801bae2:	f7f3 feaa 	bl	800f83a <_ZNK8touchgfx4Rect7isEmptyEv>
 801bae6:	b138      	cbz	r0, 801baf8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801bae8:	9600      	str	r6, [sp, #0]
 801baea:	4623      	mov	r3, r4
 801baec:	aa02      	add	r2, sp, #8
 801baee:	4649      	mov	r1, r9
 801baf0:	4628      	mov	r0, r5
 801baf2:	f7ff fdc9 	bl	801b688 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801baf6:	e737      	b.n	801b968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801baf8:	e9cd 6000 	strd	r6, r0, [sp]
 801bafc:	f8da 3000 	ldr.w	r3, [sl]
 801bb00:	aa02      	add	r2, sp, #8
 801bb02:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801bb06:	4629      	mov	r1, r5
 801bb08:	463b      	mov	r3, r7
 801bb0a:	4650      	mov	r0, sl
 801bb0c:	47d8      	blx	fp
 801bb0e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801bb12:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801bb16:	4293      	cmp	r3, r2
 801bb18:	dd13      	ble.n	801bb42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801bb1a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801bb1e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801bb22:	f8ad 0018 	strh.w	r0, [sp, #24]
 801bb26:	1a9b      	subs	r3, r3, r2
 801bb28:	f8ad 201a 	strh.w	r2, [sp, #26]
 801bb2c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801bb30:	f8ad 301e 	strh.w	r3, [sp, #30]
 801bb34:	9600      	str	r6, [sp, #0]
 801bb36:	4643      	mov	r3, r8
 801bb38:	aa02      	add	r2, sp, #8
 801bb3a:	4649      	mov	r1, r9
 801bb3c:	4628      	mov	r0, r5
 801bb3e:	f7ff fda3 	bl	801b688 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801bb42:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801bb46:	f9b4 2000 	ldrsh.w	r2, [r4]
 801bb4a:	4293      	cmp	r3, r2
 801bb4c:	dd13      	ble.n	801bb76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801bb4e:	1a9b      	subs	r3, r3, r2
 801bb50:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801bb54:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801bb58:	f8ad 2018 	strh.w	r2, [sp, #24]
 801bb5c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801bb60:	f8ad 301c 	strh.w	r3, [sp, #28]
 801bb64:	f8ad 101e 	strh.w	r1, [sp, #30]
 801bb68:	9600      	str	r6, [sp, #0]
 801bb6a:	4643      	mov	r3, r8
 801bb6c:	aa02      	add	r2, sp, #8
 801bb6e:	4649      	mov	r1, r9
 801bb70:	4628      	mov	r0, r5
 801bb72:	f7ff fd89 	bl	801b688 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801bb76:	88a2      	ldrh	r2, [r4, #4]
 801bb78:	8823      	ldrh	r3, [r4, #0]
 801bb7a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801bb7e:	4413      	add	r3, r2
 801bb80:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801bb84:	440a      	add	r2, r1
 801bb86:	b29b      	uxth	r3, r3
 801bb88:	b292      	uxth	r2, r2
 801bb8a:	b211      	sxth	r1, r2
 801bb8c:	b218      	sxth	r0, r3
 801bb8e:	4288      	cmp	r0, r1
 801bb90:	dd13      	ble.n	801bbba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801bb92:	1a9b      	subs	r3, r3, r2
 801bb94:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801bb98:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801bb9c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801bba0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801bba4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801bba8:	9600      	str	r6, [sp, #0]
 801bbaa:	4643      	mov	r3, r8
 801bbac:	aa02      	add	r2, sp, #8
 801bbae:	4649      	mov	r1, r9
 801bbb0:	4628      	mov	r0, r5
 801bbb2:	f8ad 701a 	strh.w	r7, [sp, #26]
 801bbb6:	f7ff fd67 	bl	801b688 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801bbba:	88e2      	ldrh	r2, [r4, #6]
 801bbbc:	8863      	ldrh	r3, [r4, #2]
 801bbbe:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801bbc2:	4413      	add	r3, r2
 801bbc4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801bbc8:	440a      	add	r2, r1
 801bbca:	b29b      	uxth	r3, r3
 801bbcc:	b292      	uxth	r2, r2
 801bbce:	b211      	sxth	r1, r2
 801bbd0:	b218      	sxth	r0, r3
 801bbd2:	4288      	cmp	r0, r1
 801bbd4:	f77f aec8 	ble.w	801b968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801bbd8:	f9b4 7000 	ldrsh.w	r7, [r4]
 801bbdc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801bbe0:	f8ad 7018 	strh.w	r7, [sp, #24]
 801bbe4:	1a9b      	subs	r3, r3, r2
 801bbe6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801bbea:	f8ad 101a 	strh.w	r1, [sp, #26]
 801bbee:	f8ad 001c 	strh.w	r0, [sp, #28]
 801bbf2:	9600      	str	r6, [sp, #0]
 801bbf4:	4643      	mov	r3, r8
 801bbf6:	e779      	b.n	801baec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801bbf8:	200023a8 	.word	0x200023a8

0801bbfc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801bbfc:	b180      	cbz	r0, 801bc20 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801bbfe:	2903      	cmp	r1, #3
 801bc00:	d81c      	bhi.n	801bc3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801bc02:	e8df f001 	tbb	[pc, r1]
 801bc06:	1d02      	.short	0x1d02
 801bc08:	1f08      	.short	0x1f08
 801bc0a:	4b10      	ldr	r3, [pc, #64]	@ (801bc4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801bc0c:	8818      	ldrh	r0, [r3, #0]
 801bc0e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801bc12:	4240      	negs	r0, r0
 801bc14:	4770      	bx	lr
 801bc16:	4b0d      	ldr	r3, [pc, #52]	@ (801bc4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801bc18:	8818      	ldrh	r0, [r3, #0]
 801bc1a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801bc1e:	4770      	bx	lr
 801bc20:	2903      	cmp	r1, #3
 801bc22:	d80b      	bhi.n	801bc3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801bc24:	a301      	add	r3, pc, #4	@ (adr r3, 801bc2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801bc26:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801bc2a:	bf00      	nop
 801bc2c:	0801bc41 	.word	0x0801bc41
 801bc30:	0801bc17 	.word	0x0801bc17
 801bc34:	0801bc45 	.word	0x0801bc45
 801bc38:	0801bc0b 	.word	0x0801bc0b
 801bc3c:	2000      	movs	r0, #0
 801bc3e:	4770      	bx	lr
 801bc40:	2001      	movs	r0, #1
 801bc42:	4770      	bx	lr
 801bc44:	f04f 30ff 	mov.w	r0, #4294967295
 801bc48:	4770      	bx	lr
 801bc4a:	bf00      	nop
 801bc4c:	200023a2 	.word	0x200023a2

0801bc50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801bc50:	b180      	cbz	r0, 801bc74 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801bc52:	2903      	cmp	r1, #3
 801bc54:	d81c      	bhi.n	801bc90 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801bc56:	e8df f001 	tbb	[pc, r1]
 801bc5a:	021d      	.short	0x021d
 801bc5c:	071f      	.short	0x071f
 801bc5e:	4b10      	ldr	r3, [pc, #64]	@ (801bca0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801bc60:	8818      	ldrh	r0, [r3, #0]
 801bc62:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801bc66:	4770      	bx	lr
 801bc68:	4b0d      	ldr	r3, [pc, #52]	@ (801bca0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801bc6a:	8818      	ldrh	r0, [r3, #0]
 801bc6c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801bc70:	4240      	negs	r0, r0
 801bc72:	4770      	bx	lr
 801bc74:	2903      	cmp	r1, #3
 801bc76:	d80b      	bhi.n	801bc90 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801bc78:	a301      	add	r3, pc, #4	@ (adr r3, 801bc80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801bc7a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801bc7e:	bf00      	nop
 801bc80:	0801bc5f 	.word	0x0801bc5f
 801bc84:	0801bc99 	.word	0x0801bc99
 801bc88:	0801bc69 	.word	0x0801bc69
 801bc8c:	0801bc95 	.word	0x0801bc95
 801bc90:	2000      	movs	r0, #0
 801bc92:	4770      	bx	lr
 801bc94:	2001      	movs	r0, #1
 801bc96:	4770      	bx	lr
 801bc98:	f04f 30ff 	mov.w	r0, #4294967295
 801bc9c:	4770      	bx	lr
 801bc9e:	bf00      	nop
 801bca0:	200023a2 	.word	0x200023a2

0801bca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801bca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bca8:	b099      	sub	sp, #100	@ 0x64
 801bcaa:	910b      	str	r1, [sp, #44]	@ 0x2c
 801bcac:	a914      	add	r1, sp, #80	@ 0x50
 801bcae:	e881 000c 	stmia.w	r1, {r2, r3}
 801bcb2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801bcb6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801bcba:	f891 900d 	ldrb.w	r9, [r1, #13]
 801bcbe:	9309      	str	r3, [sp, #36]	@ 0x24
 801bcc0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801bcc4:	9310      	str	r3, [sp, #64]	@ 0x40
 801bcc6:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801bcca:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801bcce:	930c      	str	r3, [sp, #48]	@ 0x30
 801bcd0:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801bcd4:	798f      	ldrb	r7, [r1, #6]
 801bcd6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801bcda:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801bcde:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801bce2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801bce6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801bcea:	431f      	orrs	r7, r3
 801bcec:	f000 8195 	beq.w	801c01a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801bcf0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801bcf4:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801bcf8:	f891 9007 	ldrb.w	r9, [r1, #7]
 801bcfc:	ea59 0903 	orrs.w	r9, r9, r3
 801bd00:	f000 818b 	beq.w	801c01a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801bd04:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801bd08:	b29b      	uxth	r3, r3
 801bd0a:	2d00      	cmp	r5, #0
 801bd0c:	f000 812e 	beq.w	801bf6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801bd10:	1aed      	subs	r5, r5, r3
 801bd12:	b2ad      	uxth	r5, r5
 801bd14:	042b      	lsls	r3, r5, #16
 801bd16:	d502      	bpl.n	801bd1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801bd18:	1b64      	subs	r4, r4, r5
 801bd1a:	b224      	sxth	r4, r4
 801bd1c:	2500      	movs	r5, #0
 801bd1e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801bd22:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801bd26:	428c      	cmp	r4, r1
 801bd28:	b28b      	uxth	r3, r1
 801bd2a:	bfbf      	itttt	lt
 801bd2c:	18ed      	addlt	r5, r5, r3
 801bd2e:	1b2c      	sublt	r4, r5, r4
 801bd30:	b2a5      	uxthlt	r5, r4
 801bd32:	460c      	movlt	r4, r1
 801bd34:	8891      	ldrh	r1, [r2, #4]
 801bd36:	440b      	add	r3, r1
 801bd38:	b21b      	sxth	r3, r3
 801bd3a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bd3c:	88d3      	ldrh	r3, [r2, #6]
 801bd3e:	8852      	ldrh	r2, [r2, #2]
 801bd40:	4413      	add	r3, r2
 801bd42:	b21b      	sxth	r3, r3
 801bd44:	930d      	str	r3, [sp, #52]	@ 0x34
 801bd46:	4bbe      	ldr	r3, [pc, #760]	@ (801c040 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801bd48:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801bd4a:	f893 b000 	ldrb.w	fp, [r3]
 801bd4e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801bd52:	f1dc 0300 	rsbs	r3, ip, #0
 801bd56:	eb43 030c 	adc.w	r3, r3, ip
 801bd5a:	930e      	str	r3, [sp, #56]	@ 0x38
 801bd5c:	4621      	mov	r1, r4
 801bd5e:	4653      	mov	r3, sl
 801bd60:	a814      	add	r0, sp, #80	@ 0x50
 801bd62:	f7f6 fe88 	bl	8012a76 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801bd66:	4621      	mov	r1, r4
 801bd68:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801bd6c:	4653      	mov	r3, sl
 801bd6e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801bd70:	a814      	add	r0, sp, #80	@ 0x50
 801bd72:	f7f6 fe9d 	bl	8012ab0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801bd76:	a918      	add	r1, sp, #96	@ 0x60
 801bd78:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801bd7c:	a817      	add	r0, sp, #92	@ 0x5c
 801bd7e:	f7f6 ffc3 	bl	8012d08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801bd82:	f1ba 0f00 	cmp.w	sl, #0
 801bd86:	f040 80f4 	bne.w	801bf72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801bd8a:	f1bb 0f01 	cmp.w	fp, #1
 801bd8e:	f040 80f8 	bne.w	801bf82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801bd92:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bd94:	2b00      	cmp	r3, #0
 801bd96:	f040 8145 	bne.w	801c024 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801bd9a:	b2ba      	uxth	r2, r7
 801bd9c:	b905      	cbnz	r5, 801bda0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801bd9e:	b16e      	cbz	r6, 801bdbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801bda0:	fb06 5302 	mla	r3, r6, r2, r5
 801bda4:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801bda6:	fb08 f303 	mul.w	r3, r8, r3
 801bdaa:	4631      	mov	r1, r6
 801bdac:	f003 0607 	and.w	r6, r3, #7
 801bdb0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801bdb4:	9328      	str	r3, [sp, #160]	@ 0xa0
 801bdb6:	eba9 0301 	sub.w	r3, r9, r1
 801bdba:	930a      	str	r3, [sp, #40]	@ 0x28
 801bdbc:	4651      	mov	r1, sl
 801bdbe:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801bdc0:	f7ff ff1c 	bl	801bbfc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801bdc4:	4681      	mov	r9, r0
 801bdc6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801bdc8:	f7ff ff42 	bl	801bc50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801bdcc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bdce:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801bdd0:	eba3 0a01 	sub.w	sl, r3, r1
 801bdd4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bdd6:	459a      	cmp	sl, r3
 801bdd8:	bfa8      	it	ge
 801bdda:	469a      	movge	sl, r3
 801bddc:	f1ba 0f00 	cmp.w	sl, #0
 801bde0:	4683      	mov	fp, r0
 801bde2:	f340 811a 	ble.w	801c01a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801bde6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801bde8:	1b64      	subs	r4, r4, r5
 801bdea:	1b1c      	subs	r4, r3, r4
 801bdec:	42bc      	cmp	r4, r7
 801bdee:	bfd4      	ite	le
 801bdf0:	ebc5 0504 	rsble	r5, r5, r4
 801bdf4:	ebc5 0507 	rsbgt	r5, r5, r7
 801bdf8:	2d00      	cmp	r5, #0
 801bdfa:	f340 810e 	ble.w	801c01a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801bdfe:	1b52      	subs	r2, r2, r5
 801be00:	fb08 f302 	mul.w	r3, r8, r2
 801be04:	930f      	str	r3, [sp, #60]	@ 0x3c
 801be06:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801be08:	2b00      	cmp	r3, #0
 801be0a:	f040 8116 	bne.w	801c03a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801be0e:	4b8d      	ldr	r3, [pc, #564]	@ (801c044 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801be10:	6818      	ldr	r0, [r3, #0]
 801be12:	6803      	ldr	r3, [r0, #0]
 801be14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801be16:	4798      	blx	r3
 801be18:	2301      	movs	r3, #1
 801be1a:	fa03 f308 	lsl.w	r3, r3, r8
 801be1e:	4a8a      	ldr	r2, [pc, #552]	@ (801c048 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801be20:	3b01      	subs	r3, #1
 801be22:	b2db      	uxtb	r3, r3
 801be24:	8811      	ldrh	r1, [r2, #0]
 801be26:	930e      	str	r3, [sp, #56]	@ 0x38
 801be28:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801be2c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 801be30:	fb01 2303 	mla	r3, r1, r3, r2
 801be34:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801be38:	930a      	str	r3, [sp, #40]	@ 0x28
 801be3a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801be3c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801be40:	9313      	str	r3, [sp, #76]	@ 0x4c
 801be42:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801be44:	0a19      	lsrs	r1, r3, #8
 801be46:	b2cb      	uxtb	r3, r1
 801be48:	9312      	str	r3, [sp, #72]	@ 0x48
 801be4a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801be4c:	b2db      	uxtb	r3, r3
 801be4e:	9311      	str	r3, [sp, #68]	@ 0x44
 801be50:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801be52:	095a      	lsrs	r2, r3, #5
 801be54:	4b7d      	ldr	r3, [pc, #500]	@ (801c04c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801be56:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801be5a:	400b      	ands	r3, r1
 801be5c:	4313      	orrs	r3, r2
 801be5e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801be60:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801be64:	4313      	orrs	r3, r2
 801be66:	b29b      	uxth	r3, r3
 801be68:	9310      	str	r3, [sp, #64]	@ 0x40
 801be6a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801be6c:	781a      	ldrb	r2, [r3, #0]
 801be6e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801be72:	4132      	asrs	r2, r6
 801be74:	fb05 b919 	mls	r9, r5, r9, fp
 801be78:	fb03 fb05 	mul.w	fp, r3, r5
 801be7c:	b2d2      	uxtb	r2, r2
 801be7e:	930d      	str	r3, [sp, #52]	@ 0x34
 801be80:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801be84:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801be88:	f0c0 80f5 	bcc.w	801c076 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801be8c:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801be90:	46ae      	mov	lr, r5
 801be92:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801be96:	f0c0 80dd 	bcc.w	801c054 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801be9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801be9c:	4013      	ands	r3, r2
 801be9e:	d055      	beq.n	801bf4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801bea0:	20ff      	movs	r0, #255	@ 0xff
 801bea2:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801bea4:	fb90 f1f1 	sdiv	r1, r0, r1
 801bea8:	434b      	muls	r3, r1
 801beaa:	2bfe      	cmp	r3, #254	@ 0xfe
 801beac:	dd03      	ble.n	801beb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801beae:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801beb0:	4281      	cmp	r1, r0
 801beb2:	f000 80cd 	beq.w	801c050 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801beb6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801beb8:	f8bc 4000 	ldrh.w	r4, [ip]
 801bebc:	fb11 f303 	smulbb	r3, r1, r3
 801bec0:	b29b      	uxth	r3, r3
 801bec2:	1c59      	adds	r1, r3, #1
 801bec4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801bec8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801becc:	b29f      	uxth	r7, r3
 801bece:	43db      	mvns	r3, r3
 801bed0:	b2db      	uxtb	r3, r3
 801bed2:	9309      	str	r3, [sp, #36]	@ 0x24
 801bed4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801bed6:	1220      	asrs	r0, r4, #8
 801bed8:	fb13 f907 	smulbb	r9, r3, r7
 801bedc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801bee0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bee2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801bee6:	fb00 9003 	mla	r0, r0, r3, r9
 801beea:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801beec:	10e1      	asrs	r1, r4, #3
 801beee:	fb13 f907 	smulbb	r9, r3, r7
 801bef2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801bef6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bef8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801befc:	fb01 9103 	mla	r1, r1, r3, r9
 801bf00:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801bf02:	00e4      	lsls	r4, r4, #3
 801bf04:	fb13 f707 	smulbb	r7, r3, r7
 801bf08:	b2e4      	uxtb	r4, r4
 801bf0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bf0c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801bf10:	fb04 7403 	mla	r4, r4, r3, r7
 801bf14:	b280      	uxth	r0, r0
 801bf16:	b2a4      	uxth	r4, r4
 801bf18:	1c43      	adds	r3, r0, #1
 801bf1a:	f104 0901 	add.w	r9, r4, #1
 801bf1e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bf22:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801bf26:	b289      	uxth	r1, r1
 801bf28:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801bf2c:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801bf30:	ea49 0000 	orr.w	r0, r9, r0
 801bf34:	f101 0901 	add.w	r9, r1, #1
 801bf38:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801bf3c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bf40:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801bf44:	ea40 0009 	orr.w	r0, r0, r9
 801bf48:	f8ac 0000 	strh.w	r0, [ip]
 801bf4c:	4446      	add	r6, r8
 801bf4e:	b2b6      	uxth	r6, r6
 801bf50:	2e07      	cmp	r6, #7
 801bf52:	bf81      	itttt	hi
 801bf54:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 801bf56:	785a      	ldrbhi	r2, [r3, #1]
 801bf58:	3301      	addhi	r3, #1
 801bf5a:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801bf5c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bf5e:	bf9a      	itte	ls
 801bf60:	fa42 f208 	asrls.w	r2, r2, r8
 801bf64:	b2d2      	uxtbls	r2, r2
 801bf66:	2600      	movhi	r6, #0
 801bf68:	449c      	add	ip, r3
 801bf6a:	e792      	b.n	801be92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801bf6c:	441c      	add	r4, r3
 801bf6e:	b224      	sxth	r4, r4
 801bf70:	e6d5      	b.n	801bd1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801bf72:	f1ba 0f01 	cmp.w	sl, #1
 801bf76:	f47f af0c 	bne.w	801bd92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bf7a:	f1bb 0f01 	cmp.w	fp, #1
 801bf7e:	f47f af08 	bne.w	801bd92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bf82:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 801c044 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801bf86:	f8db 0000 	ldr.w	r0, [fp]
 801bf8a:	6803      	ldr	r3, [r0, #0]
 801bf8c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801bf8e:	4798      	blx	r3
 801bf90:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801bf94:	465a      	mov	r2, fp
 801bf96:	d006      	beq.n	801bfa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801bf98:	f1b8 0f04 	cmp.w	r8, #4
 801bf9c:	d140      	bne.n	801c020 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801bf9e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bfa0:	3300      	adds	r3, #0
 801bfa2:	bf18      	it	ne
 801bfa4:	2301      	movne	r3, #1
 801bfa6:	0580      	lsls	r0, r0, #22
 801bfa8:	d56e      	bpl.n	801c088 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801bfaa:	f1b8 0f08 	cmp.w	r8, #8
 801bfae:	d16b      	bne.n	801c088 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801bfb0:	2b00      	cmp	r3, #0
 801bfb2:	bf0c      	ite	eq
 801bfb4:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 801bfb8:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801bfbc:	2d00      	cmp	r5, #0
 801bfbe:	f47f aee8 	bne.w	801bd92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bfc2:	2e00      	cmp	r6, #0
 801bfc4:	f47f aee5 	bne.w	801bd92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bfc8:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801bfca:	19e3      	adds	r3, r4, r7
 801bfcc:	4283      	cmp	r3, r0
 801bfce:	f73f aee0 	bgt.w	801bd92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bfd2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bfd4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801bfd6:	444b      	add	r3, r9
 801bfd8:	4283      	cmp	r3, r0
 801bfda:	f73f aeda 	bgt.w	801bd92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bfde:	6810      	ldr	r0, [r2, #0]
 801bfe0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 801bfe4:	6804      	ldr	r4, [r0, #0]
 801bfe6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801bfea:	b2bf      	uxth	r7, r7
 801bfec:	f1b8 0f08 	cmp.w	r8, #8
 801bff0:	f04f 0500 	mov.w	r5, #0
 801bff4:	bf18      	it	ne
 801bff6:	3701      	addne	r7, #1
 801bff8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801bffc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801bffe:	9104      	str	r1, [sp, #16]
 801c000:	bf18      	it	ne
 801c002:	f027 0701 	bicne.w	r7, r7, #1
 801c006:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801c008:	bf18      	it	ne
 801c00a:	b2bf      	uxthne	r7, r7
 801c00c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801c010:	e9cd 7900 	strd	r7, r9, [sp]
 801c014:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801c016:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801c018:	47a0      	blx	r4
 801c01a:	b019      	add	sp, #100	@ 0x64
 801c01c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c020:	2300      	movs	r3, #0
 801c022:	e7c0      	b.n	801bfa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801c024:	2208      	movs	r2, #8
 801c026:	fb92 f3f8 	sdiv	r3, r2, r8
 801c02a:	1e5a      	subs	r2, r3, #1
 801c02c:	443a      	add	r2, r7
 801c02e:	fb92 f2f3 	sdiv	r2, r2, r3
 801c032:	fb12 f203 	smulbb	r2, r2, r3
 801c036:	b292      	uxth	r2, r2
 801c038:	e6b0      	b.n	801bd9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801c03a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801c03c:	e6ec      	b.n	801be18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801c03e:	bf00      	nop
 801c040:	200023a0 	.word	0x200023a0
 801c044:	200023a8 	.word	0x200023a8
 801c048:	200023a2 	.word	0x200023a2
 801c04c:	00fff800 	.word	0x00fff800
 801c050:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801c052:	e779      	b.n	801bf48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801c054:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c056:	b153      	cbz	r3, 801c06e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801c058:	441e      	add	r6, r3
 801c05a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c05c:	b2b6      	uxth	r6, r6
 801c05e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801c062:	f006 0607 	and.w	r6, r6, #7
 801c066:	781a      	ldrb	r2, [r3, #0]
 801c068:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c06a:	4132      	asrs	r2, r6
 801c06c:	b2d2      	uxtb	r2, r2
 801c06e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c070:	445b      	add	r3, fp
 801c072:	930a      	str	r3, [sp, #40]	@ 0x28
 801c074:	e706      	b.n	801be84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801c076:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c078:	2b00      	cmp	r3, #0
 801c07a:	d1ce      	bne.n	801c01a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c07c:	4b05      	ldr	r3, [pc, #20]	@ (801c094 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801c07e:	6818      	ldr	r0, [r3, #0]
 801c080:	6803      	ldr	r3, [r0, #0]
 801c082:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c084:	4798      	blx	r3
 801c086:	e7c8      	b.n	801c01a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c088:	2b00      	cmp	r3, #0
 801c08a:	f43f ae82 	beq.w	801bd92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801c08e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801c092:	e793      	b.n	801bfbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801c094:	200023a8 	.word	0x200023a8

0801c098 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801c098:	b538      	push	{r3, r4, r5, lr}
 801c09a:	4c15      	ldr	r4, [pc, #84]	@ (801c0f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801c09c:	7823      	ldrb	r3, [r4, #0]
 801c09e:	f3bf 8f5b 	dmb	ish
 801c0a2:	07da      	lsls	r2, r3, #31
 801c0a4:	4605      	mov	r5, r0
 801c0a6:	d40b      	bmi.n	801c0c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801c0a8:	4620      	mov	r0, r4
 801c0aa:	f007 feb6 	bl	8023e1a <__cxa_guard_acquire>
 801c0ae:	b138      	cbz	r0, 801c0c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801c0b0:	4620      	mov	r0, r4
 801c0b2:	f007 febe 	bl	8023e32 <__cxa_guard_release>
 801c0b6:	4a0f      	ldr	r2, [pc, #60]	@ (801c0f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801c0b8:	490f      	ldr	r1, [pc, #60]	@ (801c0f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801c0ba:	4810      	ldr	r0, [pc, #64]	@ (801c0fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801c0bc:	f007 fea6 	bl	8023e0c <__aeabi_atexit>
 801c0c0:	4c0f      	ldr	r4, [pc, #60]	@ (801c100 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801c0c2:	7823      	ldrb	r3, [r4, #0]
 801c0c4:	f3bf 8f5b 	dmb	ish
 801c0c8:	07db      	lsls	r3, r3, #31
 801c0ca:	d40b      	bmi.n	801c0e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801c0cc:	4620      	mov	r0, r4
 801c0ce:	f007 fea4 	bl	8023e1a <__cxa_guard_acquire>
 801c0d2:	b138      	cbz	r0, 801c0e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801c0d4:	4620      	mov	r0, r4
 801c0d6:	f007 feac 	bl	8023e32 <__cxa_guard_release>
 801c0da:	4a06      	ldr	r2, [pc, #24]	@ (801c0f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801c0dc:	4909      	ldr	r1, [pc, #36]	@ (801c104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801c0de:	480a      	ldr	r0, [pc, #40]	@ (801c108 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801c0e0:	f007 fe94 	bl	8023e0c <__aeabi_atexit>
 801c0e4:	4b05      	ldr	r3, [pc, #20]	@ (801c0fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801c0e6:	612b      	str	r3, [r5, #16]
 801c0e8:	4b07      	ldr	r3, [pc, #28]	@ (801c108 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801c0ea:	616b      	str	r3, [r5, #20]
 801c0ec:	bd38      	pop	{r3, r4, r5, pc}
 801c0ee:	bf00      	nop
 801c0f0:	20002480 	.word	0x20002480
 801c0f4:	20000000 	.word	0x20000000
 801c0f8:	08018ea9 	.word	0x08018ea9
 801c0fc:	20000078 	.word	0x20000078
 801c100:	20002484 	.word	0x20002484
 801c104:	08018ea7 	.word	0x08018ea7
 801c108:	2000007c 	.word	0x2000007c

0801c10c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801c10c:	b538      	push	{r3, r4, r5, lr}
 801c10e:	4c15      	ldr	r4, [pc, #84]	@ (801c164 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801c110:	7823      	ldrb	r3, [r4, #0]
 801c112:	f3bf 8f5b 	dmb	ish
 801c116:	07da      	lsls	r2, r3, #31
 801c118:	4605      	mov	r5, r0
 801c11a:	d40b      	bmi.n	801c134 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801c11c:	4620      	mov	r0, r4
 801c11e:	f007 fe7c 	bl	8023e1a <__cxa_guard_acquire>
 801c122:	b138      	cbz	r0, 801c134 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801c124:	4620      	mov	r0, r4
 801c126:	f007 fe84 	bl	8023e32 <__cxa_guard_release>
 801c12a:	4a0f      	ldr	r2, [pc, #60]	@ (801c168 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801c12c:	490f      	ldr	r1, [pc, #60]	@ (801c16c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801c12e:	4810      	ldr	r0, [pc, #64]	@ (801c170 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801c130:	f007 fe6c 	bl	8023e0c <__aeabi_atexit>
 801c134:	4c0f      	ldr	r4, [pc, #60]	@ (801c174 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801c136:	7823      	ldrb	r3, [r4, #0]
 801c138:	f3bf 8f5b 	dmb	ish
 801c13c:	07db      	lsls	r3, r3, #31
 801c13e:	d40b      	bmi.n	801c158 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801c140:	4620      	mov	r0, r4
 801c142:	f007 fe6a 	bl	8023e1a <__cxa_guard_acquire>
 801c146:	b138      	cbz	r0, 801c158 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801c148:	4620      	mov	r0, r4
 801c14a:	f007 fe72 	bl	8023e32 <__cxa_guard_release>
 801c14e:	4a06      	ldr	r2, [pc, #24]	@ (801c168 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801c150:	4909      	ldr	r1, [pc, #36]	@ (801c178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801c152:	480a      	ldr	r0, [pc, #40]	@ (801c17c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801c154:	f007 fe5a 	bl	8023e0c <__aeabi_atexit>
 801c158:	4b05      	ldr	r3, [pc, #20]	@ (801c170 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801c15a:	60ab      	str	r3, [r5, #8]
 801c15c:	4b07      	ldr	r3, [pc, #28]	@ (801c17c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801c15e:	60eb      	str	r3, [r5, #12]
 801c160:	bd38      	pop	{r3, r4, r5, pc}
 801c162:	bf00      	nop
 801c164:	20002458 	.word	0x20002458
 801c168:	20000000 	.word	0x20000000
 801c16c:	08018ead 	.word	0x08018ead
 801c170:	20000050 	.word	0x20000050
 801c174:	2000245c 	.word	0x2000245c
 801c178:	08018eab 	.word	0x08018eab
 801c17c:	20000054 	.word	0x20000054

0801c180 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801c180:	b510      	push	{r4, lr}
 801c182:	4604      	mov	r4, r0
 801c184:	f7ff ff88 	bl	801c098 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801c188:	4620      	mov	r0, r4
 801c18a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c18e:	f7ff bfbd 	b.w	801c10c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801c194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801c194:	b538      	push	{r3, r4, r5, lr}
 801c196:	4c15      	ldr	r4, [pc, #84]	@ (801c1ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801c198:	7823      	ldrb	r3, [r4, #0]
 801c19a:	f3bf 8f5b 	dmb	ish
 801c19e:	07da      	lsls	r2, r3, #31
 801c1a0:	4605      	mov	r5, r0
 801c1a2:	d40b      	bmi.n	801c1bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801c1a4:	4620      	mov	r0, r4
 801c1a6:	f007 fe38 	bl	8023e1a <__cxa_guard_acquire>
 801c1aa:	b138      	cbz	r0, 801c1bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801c1ac:	4620      	mov	r0, r4
 801c1ae:	f007 fe40 	bl	8023e32 <__cxa_guard_release>
 801c1b2:	4a0f      	ldr	r2, [pc, #60]	@ (801c1f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801c1b4:	490f      	ldr	r1, [pc, #60]	@ (801c1f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801c1b6:	4810      	ldr	r0, [pc, #64]	@ (801c1f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801c1b8:	f007 fe28 	bl	8023e0c <__aeabi_atexit>
 801c1bc:	4c0f      	ldr	r4, [pc, #60]	@ (801c1fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801c1be:	7823      	ldrb	r3, [r4, #0]
 801c1c0:	f3bf 8f5b 	dmb	ish
 801c1c4:	07db      	lsls	r3, r3, #31
 801c1c6:	d40b      	bmi.n	801c1e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801c1c8:	4620      	mov	r0, r4
 801c1ca:	f007 fe26 	bl	8023e1a <__cxa_guard_acquire>
 801c1ce:	b138      	cbz	r0, 801c1e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801c1d0:	4620      	mov	r0, r4
 801c1d2:	f007 fe2e 	bl	8023e32 <__cxa_guard_release>
 801c1d6:	4a06      	ldr	r2, [pc, #24]	@ (801c1f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801c1d8:	4909      	ldr	r1, [pc, #36]	@ (801c200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801c1da:	480a      	ldr	r0, [pc, #40]	@ (801c204 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801c1dc:	f007 fe16 	bl	8023e0c <__aeabi_atexit>
 801c1e0:	4b05      	ldr	r3, [pc, #20]	@ (801c1f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801c1e2:	622b      	str	r3, [r5, #32]
 801c1e4:	4b07      	ldr	r3, [pc, #28]	@ (801c204 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801c1e6:	626b      	str	r3, [r5, #36]	@ 0x24
 801c1e8:	bd38      	pop	{r3, r4, r5, pc}
 801c1ea:	bf00      	nop
 801c1ec:	20002488 	.word	0x20002488
 801c1f0:	20000000 	.word	0x20000000
 801c1f4:	08018ea1 	.word	0x08018ea1
 801c1f8:	20000080 	.word	0x20000080
 801c1fc:	2000248c 	.word	0x2000248c
 801c200:	08018e9f 	.word	0x08018e9f
 801c204:	20000084 	.word	0x20000084

0801c208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801c208:	b538      	push	{r3, r4, r5, lr}
 801c20a:	4c15      	ldr	r4, [pc, #84]	@ (801c260 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801c20c:	7823      	ldrb	r3, [r4, #0]
 801c20e:	f3bf 8f5b 	dmb	ish
 801c212:	07da      	lsls	r2, r3, #31
 801c214:	4605      	mov	r5, r0
 801c216:	d40b      	bmi.n	801c230 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801c218:	4620      	mov	r0, r4
 801c21a:	f007 fdfe 	bl	8023e1a <__cxa_guard_acquire>
 801c21e:	b138      	cbz	r0, 801c230 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801c220:	4620      	mov	r0, r4
 801c222:	f007 fe06 	bl	8023e32 <__cxa_guard_release>
 801c226:	4a0f      	ldr	r2, [pc, #60]	@ (801c264 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801c228:	490f      	ldr	r1, [pc, #60]	@ (801c268 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801c22a:	4810      	ldr	r0, [pc, #64]	@ (801c26c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801c22c:	f007 fdee 	bl	8023e0c <__aeabi_atexit>
 801c230:	4c0f      	ldr	r4, [pc, #60]	@ (801c270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801c232:	7823      	ldrb	r3, [r4, #0]
 801c234:	f3bf 8f5b 	dmb	ish
 801c238:	07db      	lsls	r3, r3, #31
 801c23a:	d40b      	bmi.n	801c254 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801c23c:	4620      	mov	r0, r4
 801c23e:	f007 fdec 	bl	8023e1a <__cxa_guard_acquire>
 801c242:	b138      	cbz	r0, 801c254 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801c244:	4620      	mov	r0, r4
 801c246:	f007 fdf4 	bl	8023e32 <__cxa_guard_release>
 801c24a:	4a06      	ldr	r2, [pc, #24]	@ (801c264 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801c24c:	4909      	ldr	r1, [pc, #36]	@ (801c274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801c24e:	480a      	ldr	r0, [pc, #40]	@ (801c278 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801c250:	f007 fddc 	bl	8023e0c <__aeabi_atexit>
 801c254:	4b05      	ldr	r3, [pc, #20]	@ (801c26c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801c256:	61ab      	str	r3, [r5, #24]
 801c258:	4b07      	ldr	r3, [pc, #28]	@ (801c278 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801c25a:	61eb      	str	r3, [r5, #28]
 801c25c:	bd38      	pop	{r3, r4, r5, pc}
 801c25e:	bf00      	nop
 801c260:	20002460 	.word	0x20002460
 801c264:	20000000 	.word	0x20000000
 801c268:	08018ea5 	.word	0x08018ea5
 801c26c:	20000058 	.word	0x20000058
 801c270:	20002464 	.word	0x20002464
 801c274:	08018ea3 	.word	0x08018ea3
 801c278:	2000005c 	.word	0x2000005c

0801c27c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801c27c:	b510      	push	{r4, lr}
 801c27e:	4604      	mov	r4, r0
 801c280:	f7ff ff88 	bl	801c194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801c284:	4620      	mov	r0, r4
 801c286:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c28a:	f7ff bfbd 	b.w	801c208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801c290 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801c290:	b538      	push	{r3, r4, r5, lr}
 801c292:	4c15      	ldr	r4, [pc, #84]	@ (801c2e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801c294:	7823      	ldrb	r3, [r4, #0]
 801c296:	f3bf 8f5b 	dmb	ish
 801c29a:	07da      	lsls	r2, r3, #31
 801c29c:	4605      	mov	r5, r0
 801c29e:	d40b      	bmi.n	801c2b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801c2a0:	4620      	mov	r0, r4
 801c2a2:	f007 fdba 	bl	8023e1a <__cxa_guard_acquire>
 801c2a6:	b138      	cbz	r0, 801c2b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801c2a8:	4620      	mov	r0, r4
 801c2aa:	f007 fdc2 	bl	8023e32 <__cxa_guard_release>
 801c2ae:	4a0f      	ldr	r2, [pc, #60]	@ (801c2ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801c2b0:	490f      	ldr	r1, [pc, #60]	@ (801c2f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801c2b2:	4810      	ldr	r0, [pc, #64]	@ (801c2f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801c2b4:	f007 fdaa 	bl	8023e0c <__aeabi_atexit>
 801c2b8:	4c0f      	ldr	r4, [pc, #60]	@ (801c2f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801c2ba:	7823      	ldrb	r3, [r4, #0]
 801c2bc:	f3bf 8f5b 	dmb	ish
 801c2c0:	07db      	lsls	r3, r3, #31
 801c2c2:	d40b      	bmi.n	801c2dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801c2c4:	4620      	mov	r0, r4
 801c2c6:	f007 fda8 	bl	8023e1a <__cxa_guard_acquire>
 801c2ca:	b138      	cbz	r0, 801c2dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801c2cc:	4620      	mov	r0, r4
 801c2ce:	f007 fdb0 	bl	8023e32 <__cxa_guard_release>
 801c2d2:	4a06      	ldr	r2, [pc, #24]	@ (801c2ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801c2d4:	4909      	ldr	r1, [pc, #36]	@ (801c2fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801c2d6:	480a      	ldr	r0, [pc, #40]	@ (801c300 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801c2d8:	f007 fd98 	bl	8023e0c <__aeabi_atexit>
 801c2dc:	4b05      	ldr	r3, [pc, #20]	@ (801c2f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801c2de:	632b      	str	r3, [r5, #48]	@ 0x30
 801c2e0:	4b07      	ldr	r3, [pc, #28]	@ (801c300 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801c2e2:	636b      	str	r3, [r5, #52]	@ 0x34
 801c2e4:	bd38      	pop	{r3, r4, r5, pc}
 801c2e6:	bf00      	nop
 801c2e8:	20002498 	.word	0x20002498
 801c2ec:	20000000 	.word	0x20000000
 801c2f0:	08018e99 	.word	0x08018e99
 801c2f4:	20000090 	.word	0x20000090
 801c2f8:	2000249c 	.word	0x2000249c
 801c2fc:	08018e97 	.word	0x08018e97
 801c300:	20000094 	.word	0x20000094

0801c304 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801c304:	b538      	push	{r3, r4, r5, lr}
 801c306:	4c15      	ldr	r4, [pc, #84]	@ (801c35c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801c308:	7823      	ldrb	r3, [r4, #0]
 801c30a:	f3bf 8f5b 	dmb	ish
 801c30e:	07da      	lsls	r2, r3, #31
 801c310:	4605      	mov	r5, r0
 801c312:	d40b      	bmi.n	801c32c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801c314:	4620      	mov	r0, r4
 801c316:	f007 fd80 	bl	8023e1a <__cxa_guard_acquire>
 801c31a:	b138      	cbz	r0, 801c32c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801c31c:	4620      	mov	r0, r4
 801c31e:	f007 fd88 	bl	8023e32 <__cxa_guard_release>
 801c322:	4a0f      	ldr	r2, [pc, #60]	@ (801c360 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801c324:	490f      	ldr	r1, [pc, #60]	@ (801c364 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801c326:	4810      	ldr	r0, [pc, #64]	@ (801c368 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801c328:	f007 fd70 	bl	8023e0c <__aeabi_atexit>
 801c32c:	4c0f      	ldr	r4, [pc, #60]	@ (801c36c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801c32e:	7823      	ldrb	r3, [r4, #0]
 801c330:	f3bf 8f5b 	dmb	ish
 801c334:	07db      	lsls	r3, r3, #31
 801c336:	d40b      	bmi.n	801c350 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801c338:	4620      	mov	r0, r4
 801c33a:	f007 fd6e 	bl	8023e1a <__cxa_guard_acquire>
 801c33e:	b138      	cbz	r0, 801c350 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801c340:	4620      	mov	r0, r4
 801c342:	f007 fd76 	bl	8023e32 <__cxa_guard_release>
 801c346:	4a06      	ldr	r2, [pc, #24]	@ (801c360 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801c348:	4909      	ldr	r1, [pc, #36]	@ (801c370 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801c34a:	480a      	ldr	r0, [pc, #40]	@ (801c374 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801c34c:	f007 fd5e 	bl	8023e0c <__aeabi_atexit>
 801c350:	4b05      	ldr	r3, [pc, #20]	@ (801c368 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801c352:	62ab      	str	r3, [r5, #40]	@ 0x28
 801c354:	4b07      	ldr	r3, [pc, #28]	@ (801c374 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801c356:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801c358:	bd38      	pop	{r3, r4, r5, pc}
 801c35a:	bf00      	nop
 801c35c:	20002468 	.word	0x20002468
 801c360:	20000000 	.word	0x20000000
 801c364:	08018e9d 	.word	0x08018e9d
 801c368:	20000060 	.word	0x20000060
 801c36c:	2000246c 	.word	0x2000246c
 801c370:	08018e9b 	.word	0x08018e9b
 801c374:	20000064 	.word	0x20000064

0801c378 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801c378:	b510      	push	{r4, lr}
 801c37a:	4604      	mov	r4, r0
 801c37c:	f7ff ff88 	bl	801c290 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801c380:	4620      	mov	r0, r4
 801c382:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c386:	f7ff bfbd 	b.w	801c304 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801c38c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801c38c:	b538      	push	{r3, r4, r5, lr}
 801c38e:	4c15      	ldr	r4, [pc, #84]	@ (801c3e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801c390:	7823      	ldrb	r3, [r4, #0]
 801c392:	f3bf 8f5b 	dmb	ish
 801c396:	07da      	lsls	r2, r3, #31
 801c398:	4605      	mov	r5, r0
 801c39a:	d40b      	bmi.n	801c3b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801c39c:	4620      	mov	r0, r4
 801c39e:	f007 fd3c 	bl	8023e1a <__cxa_guard_acquire>
 801c3a2:	b138      	cbz	r0, 801c3b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801c3a4:	4620      	mov	r0, r4
 801c3a6:	f007 fd44 	bl	8023e32 <__cxa_guard_release>
 801c3aa:	4a0f      	ldr	r2, [pc, #60]	@ (801c3e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801c3ac:	490f      	ldr	r1, [pc, #60]	@ (801c3ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801c3ae:	4810      	ldr	r0, [pc, #64]	@ (801c3f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801c3b0:	f007 fd2c 	bl	8023e0c <__aeabi_atexit>
 801c3b4:	4c0f      	ldr	r4, [pc, #60]	@ (801c3f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801c3b6:	7823      	ldrb	r3, [r4, #0]
 801c3b8:	f3bf 8f5b 	dmb	ish
 801c3bc:	07db      	lsls	r3, r3, #31
 801c3be:	d40b      	bmi.n	801c3d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801c3c0:	4620      	mov	r0, r4
 801c3c2:	f007 fd2a 	bl	8023e1a <__cxa_guard_acquire>
 801c3c6:	b138      	cbz	r0, 801c3d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801c3c8:	4620      	mov	r0, r4
 801c3ca:	f007 fd32 	bl	8023e32 <__cxa_guard_release>
 801c3ce:	4a06      	ldr	r2, [pc, #24]	@ (801c3e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801c3d0:	4909      	ldr	r1, [pc, #36]	@ (801c3f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801c3d2:	480a      	ldr	r0, [pc, #40]	@ (801c3fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801c3d4:	f007 fd1a 	bl	8023e0c <__aeabi_atexit>
 801c3d8:	4b05      	ldr	r3, [pc, #20]	@ (801c3f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801c3da:	652b      	str	r3, [r5, #80]	@ 0x50
 801c3dc:	4b07      	ldr	r3, [pc, #28]	@ (801c3fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801c3de:	656b      	str	r3, [r5, #84]	@ 0x54
 801c3e0:	bd38      	pop	{r3, r4, r5, pc}
 801c3e2:	bf00      	nop
 801c3e4:	200024a0 	.word	0x200024a0
 801c3e8:	20000000 	.word	0x20000000
 801c3ec:	08018e89 	.word	0x08018e89
 801c3f0:	20000098 	.word	0x20000098
 801c3f4:	200024a4 	.word	0x200024a4
 801c3f8:	08018e87 	.word	0x08018e87
 801c3fc:	2000009c 	.word	0x2000009c

0801c400 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801c400:	b538      	push	{r3, r4, r5, lr}
 801c402:	4c15      	ldr	r4, [pc, #84]	@ (801c458 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801c404:	7823      	ldrb	r3, [r4, #0]
 801c406:	f3bf 8f5b 	dmb	ish
 801c40a:	07da      	lsls	r2, r3, #31
 801c40c:	4605      	mov	r5, r0
 801c40e:	d40b      	bmi.n	801c428 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801c410:	4620      	mov	r0, r4
 801c412:	f007 fd02 	bl	8023e1a <__cxa_guard_acquire>
 801c416:	b138      	cbz	r0, 801c428 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801c418:	4620      	mov	r0, r4
 801c41a:	f007 fd0a 	bl	8023e32 <__cxa_guard_release>
 801c41e:	4a0f      	ldr	r2, [pc, #60]	@ (801c45c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801c420:	490f      	ldr	r1, [pc, #60]	@ (801c460 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801c422:	4810      	ldr	r0, [pc, #64]	@ (801c464 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801c424:	f007 fcf2 	bl	8023e0c <__aeabi_atexit>
 801c428:	4c0f      	ldr	r4, [pc, #60]	@ (801c468 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801c42a:	7823      	ldrb	r3, [r4, #0]
 801c42c:	f3bf 8f5b 	dmb	ish
 801c430:	07db      	lsls	r3, r3, #31
 801c432:	d40b      	bmi.n	801c44c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801c434:	4620      	mov	r0, r4
 801c436:	f007 fcf0 	bl	8023e1a <__cxa_guard_acquire>
 801c43a:	b138      	cbz	r0, 801c44c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801c43c:	4620      	mov	r0, r4
 801c43e:	f007 fcf8 	bl	8023e32 <__cxa_guard_release>
 801c442:	4a06      	ldr	r2, [pc, #24]	@ (801c45c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801c444:	4909      	ldr	r1, [pc, #36]	@ (801c46c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801c446:	480a      	ldr	r0, [pc, #40]	@ (801c470 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801c448:	f007 fce0 	bl	8023e0c <__aeabi_atexit>
 801c44c:	4b05      	ldr	r3, [pc, #20]	@ (801c464 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801c44e:	64ab      	str	r3, [r5, #72]	@ 0x48
 801c450:	4b07      	ldr	r3, [pc, #28]	@ (801c470 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801c452:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801c454:	bd38      	pop	{r3, r4, r5, pc}
 801c456:	bf00      	nop
 801c458:	200024a8 	.word	0x200024a8
 801c45c:	20000000 	.word	0x20000000
 801c460:	08018e8d 	.word	0x08018e8d
 801c464:	200000a0 	.word	0x200000a0
 801c468:	200024ac 	.word	0x200024ac
 801c46c:	08018e8b 	.word	0x08018e8b
 801c470:	200000a4 	.word	0x200000a4

0801c474 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801c474:	b538      	push	{r3, r4, r5, lr}
 801c476:	4c15      	ldr	r4, [pc, #84]	@ (801c4cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801c478:	7823      	ldrb	r3, [r4, #0]
 801c47a:	f3bf 8f5b 	dmb	ish
 801c47e:	07da      	lsls	r2, r3, #31
 801c480:	4605      	mov	r5, r0
 801c482:	d40b      	bmi.n	801c49c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801c484:	4620      	mov	r0, r4
 801c486:	f007 fcc8 	bl	8023e1a <__cxa_guard_acquire>
 801c48a:	b138      	cbz	r0, 801c49c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801c48c:	4620      	mov	r0, r4
 801c48e:	f007 fcd0 	bl	8023e32 <__cxa_guard_release>
 801c492:	4a0f      	ldr	r2, [pc, #60]	@ (801c4d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801c494:	490f      	ldr	r1, [pc, #60]	@ (801c4d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801c496:	4810      	ldr	r0, [pc, #64]	@ (801c4d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801c498:	f007 fcb8 	bl	8023e0c <__aeabi_atexit>
 801c49c:	4c0f      	ldr	r4, [pc, #60]	@ (801c4dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801c49e:	7823      	ldrb	r3, [r4, #0]
 801c4a0:	f3bf 8f5b 	dmb	ish
 801c4a4:	07db      	lsls	r3, r3, #31
 801c4a6:	d40b      	bmi.n	801c4c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801c4a8:	4620      	mov	r0, r4
 801c4aa:	f007 fcb6 	bl	8023e1a <__cxa_guard_acquire>
 801c4ae:	b138      	cbz	r0, 801c4c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801c4b0:	4620      	mov	r0, r4
 801c4b2:	f007 fcbe 	bl	8023e32 <__cxa_guard_release>
 801c4b6:	4a06      	ldr	r2, [pc, #24]	@ (801c4d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801c4b8:	4909      	ldr	r1, [pc, #36]	@ (801c4e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801c4ba:	480a      	ldr	r0, [pc, #40]	@ (801c4e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801c4bc:	f007 fca6 	bl	8023e0c <__aeabi_atexit>
 801c4c0:	4b05      	ldr	r3, [pc, #20]	@ (801c4d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801c4c2:	642b      	str	r3, [r5, #64]	@ 0x40
 801c4c4:	4b07      	ldr	r3, [pc, #28]	@ (801c4e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801c4c6:	646b      	str	r3, [r5, #68]	@ 0x44
 801c4c8:	bd38      	pop	{r3, r4, r5, pc}
 801c4ca:	bf00      	nop
 801c4cc:	20002470 	.word	0x20002470
 801c4d0:	20000000 	.word	0x20000000
 801c4d4:	08018e91 	.word	0x08018e91
 801c4d8:	20000068 	.word	0x20000068
 801c4dc:	20002474 	.word	0x20002474
 801c4e0:	08018e8f 	.word	0x08018e8f
 801c4e4:	2000006c 	.word	0x2000006c

0801c4e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801c4e8:	b538      	push	{r3, r4, r5, lr}
 801c4ea:	4c15      	ldr	r4, [pc, #84]	@ (801c540 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801c4ec:	7823      	ldrb	r3, [r4, #0]
 801c4ee:	f3bf 8f5b 	dmb	ish
 801c4f2:	07da      	lsls	r2, r3, #31
 801c4f4:	4605      	mov	r5, r0
 801c4f6:	d40b      	bmi.n	801c510 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801c4f8:	4620      	mov	r0, r4
 801c4fa:	f007 fc8e 	bl	8023e1a <__cxa_guard_acquire>
 801c4fe:	b138      	cbz	r0, 801c510 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801c500:	4620      	mov	r0, r4
 801c502:	f007 fc96 	bl	8023e32 <__cxa_guard_release>
 801c506:	4a0f      	ldr	r2, [pc, #60]	@ (801c544 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801c508:	490f      	ldr	r1, [pc, #60]	@ (801c548 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801c50a:	4810      	ldr	r0, [pc, #64]	@ (801c54c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801c50c:	f007 fc7e 	bl	8023e0c <__aeabi_atexit>
 801c510:	4c0f      	ldr	r4, [pc, #60]	@ (801c550 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801c512:	7823      	ldrb	r3, [r4, #0]
 801c514:	f3bf 8f5b 	dmb	ish
 801c518:	07db      	lsls	r3, r3, #31
 801c51a:	d40b      	bmi.n	801c534 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801c51c:	4620      	mov	r0, r4
 801c51e:	f007 fc7c 	bl	8023e1a <__cxa_guard_acquire>
 801c522:	b138      	cbz	r0, 801c534 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801c524:	4620      	mov	r0, r4
 801c526:	f007 fc84 	bl	8023e32 <__cxa_guard_release>
 801c52a:	4a06      	ldr	r2, [pc, #24]	@ (801c544 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801c52c:	4909      	ldr	r1, [pc, #36]	@ (801c554 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801c52e:	480a      	ldr	r0, [pc, #40]	@ (801c558 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801c530:	f007 fc6c 	bl	8023e0c <__aeabi_atexit>
 801c534:	4b05      	ldr	r3, [pc, #20]	@ (801c54c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801c536:	63ab      	str	r3, [r5, #56]	@ 0x38
 801c538:	4b07      	ldr	r3, [pc, #28]	@ (801c558 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801c53a:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801c53c:	bd38      	pop	{r3, r4, r5, pc}
 801c53e:	bf00      	nop
 801c540:	20002490 	.word	0x20002490
 801c544:	20000000 	.word	0x20000000
 801c548:	08018e95 	.word	0x08018e95
 801c54c:	20000088 	.word	0x20000088
 801c550:	20002494 	.word	0x20002494
 801c554:	08018e93 	.word	0x08018e93
 801c558:	2000008c 	.word	0x2000008c

0801c55c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801c55c:	b510      	push	{r4, lr}
 801c55e:	4604      	mov	r4, r0
 801c560:	f7ff ff14 	bl	801c38c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801c564:	4620      	mov	r0, r4
 801c566:	f7ff ff85 	bl	801c474 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801c56a:	4620      	mov	r0, r4
 801c56c:	f7ff ff48 	bl	801c400 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801c570:	4620      	mov	r0, r4
 801c572:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c576:	f7ff bfb7 	b.w	801c4e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801c57c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801c57c:	b538      	push	{r3, r4, r5, lr}
 801c57e:	4c15      	ldr	r4, [pc, #84]	@ (801c5d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801c580:	7823      	ldrb	r3, [r4, #0]
 801c582:	f3bf 8f5b 	dmb	ish
 801c586:	07da      	lsls	r2, r3, #31
 801c588:	4605      	mov	r5, r0
 801c58a:	d40b      	bmi.n	801c5a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801c58c:	4620      	mov	r0, r4
 801c58e:	f007 fc44 	bl	8023e1a <__cxa_guard_acquire>
 801c592:	b138      	cbz	r0, 801c5a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801c594:	4620      	mov	r0, r4
 801c596:	f007 fc4c 	bl	8023e32 <__cxa_guard_release>
 801c59a:	4a0f      	ldr	r2, [pc, #60]	@ (801c5d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801c59c:	490f      	ldr	r1, [pc, #60]	@ (801c5dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801c59e:	4810      	ldr	r0, [pc, #64]	@ (801c5e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801c5a0:	f007 fc34 	bl	8023e0c <__aeabi_atexit>
 801c5a4:	4c0f      	ldr	r4, [pc, #60]	@ (801c5e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801c5a6:	7823      	ldrb	r3, [r4, #0]
 801c5a8:	f3bf 8f5b 	dmb	ish
 801c5ac:	07db      	lsls	r3, r3, #31
 801c5ae:	d40b      	bmi.n	801c5c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801c5b0:	4620      	mov	r0, r4
 801c5b2:	f007 fc32 	bl	8023e1a <__cxa_guard_acquire>
 801c5b6:	b138      	cbz	r0, 801c5c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801c5b8:	4620      	mov	r0, r4
 801c5ba:	f007 fc3a 	bl	8023e32 <__cxa_guard_release>
 801c5be:	4a06      	ldr	r2, [pc, #24]	@ (801c5d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801c5c0:	4909      	ldr	r1, [pc, #36]	@ (801c5e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801c5c2:	480a      	ldr	r0, [pc, #40]	@ (801c5ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801c5c4:	f007 fc22 	bl	8023e0c <__aeabi_atexit>
 801c5c8:	4b05      	ldr	r3, [pc, #20]	@ (801c5e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801c5ca:	662b      	str	r3, [r5, #96]	@ 0x60
 801c5cc:	4b07      	ldr	r3, [pc, #28]	@ (801c5ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801c5ce:	666b      	str	r3, [r5, #100]	@ 0x64
 801c5d0:	bd38      	pop	{r3, r4, r5, pc}
 801c5d2:	bf00      	nop
 801c5d4:	20002478 	.word	0x20002478
 801c5d8:	20000000 	.word	0x20000000
 801c5dc:	08018e81 	.word	0x08018e81
 801c5e0:	20000070 	.word	0x20000070
 801c5e4:	2000247c 	.word	0x2000247c
 801c5e8:	08018e7f 	.word	0x08018e7f
 801c5ec:	20000074 	.word	0x20000074

0801c5f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801c5f0:	b538      	push	{r3, r4, r5, lr}
 801c5f2:	4c15      	ldr	r4, [pc, #84]	@ (801c648 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801c5f4:	7823      	ldrb	r3, [r4, #0]
 801c5f6:	f3bf 8f5b 	dmb	ish
 801c5fa:	07da      	lsls	r2, r3, #31
 801c5fc:	4605      	mov	r5, r0
 801c5fe:	d40b      	bmi.n	801c618 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801c600:	4620      	mov	r0, r4
 801c602:	f007 fc0a 	bl	8023e1a <__cxa_guard_acquire>
 801c606:	b138      	cbz	r0, 801c618 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801c608:	4620      	mov	r0, r4
 801c60a:	f007 fc12 	bl	8023e32 <__cxa_guard_release>
 801c60e:	4a0f      	ldr	r2, [pc, #60]	@ (801c64c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801c610:	490f      	ldr	r1, [pc, #60]	@ (801c650 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801c612:	4810      	ldr	r0, [pc, #64]	@ (801c654 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801c614:	f007 fbfa 	bl	8023e0c <__aeabi_atexit>
 801c618:	4c0f      	ldr	r4, [pc, #60]	@ (801c658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801c61a:	7823      	ldrb	r3, [r4, #0]
 801c61c:	f3bf 8f5b 	dmb	ish
 801c620:	07db      	lsls	r3, r3, #31
 801c622:	d40b      	bmi.n	801c63c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801c624:	4620      	mov	r0, r4
 801c626:	f007 fbf8 	bl	8023e1a <__cxa_guard_acquire>
 801c62a:	b138      	cbz	r0, 801c63c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801c62c:	4620      	mov	r0, r4
 801c62e:	f007 fc00 	bl	8023e32 <__cxa_guard_release>
 801c632:	4a06      	ldr	r2, [pc, #24]	@ (801c64c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801c634:	4909      	ldr	r1, [pc, #36]	@ (801c65c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801c636:	480a      	ldr	r0, [pc, #40]	@ (801c660 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801c638:	f007 fbe8 	bl	8023e0c <__aeabi_atexit>
 801c63c:	4b05      	ldr	r3, [pc, #20]	@ (801c654 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801c63e:	65ab      	str	r3, [r5, #88]	@ 0x58
 801c640:	4b07      	ldr	r3, [pc, #28]	@ (801c660 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801c642:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801c644:	bd38      	pop	{r3, r4, r5, pc}
 801c646:	bf00      	nop
 801c648:	20002450 	.word	0x20002450
 801c64c:	20000000 	.word	0x20000000
 801c650:	08018e85 	.word	0x08018e85
 801c654:	20000048 	.word	0x20000048
 801c658:	20002454 	.word	0x20002454
 801c65c:	08018e83 	.word	0x08018e83
 801c660:	2000004c 	.word	0x2000004c

0801c664 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801c664:	b510      	push	{r4, lr}
 801c666:	4604      	mov	r4, r0
 801c668:	f7ff ff88 	bl	801c57c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801c66c:	4620      	mov	r0, r4
 801c66e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c672:	f7ff bfbd 	b.w	801c5f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801c678 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801c678:	b538      	push	{r3, r4, r5, lr}
 801c67a:	4c15      	ldr	r4, [pc, #84]	@ (801c6d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801c67c:	7823      	ldrb	r3, [r4, #0]
 801c67e:	f3bf 8f5b 	dmb	ish
 801c682:	07da      	lsls	r2, r3, #31
 801c684:	4605      	mov	r5, r0
 801c686:	d40b      	bmi.n	801c6a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801c688:	4620      	mov	r0, r4
 801c68a:	f007 fbc6 	bl	8023e1a <__cxa_guard_acquire>
 801c68e:	b138      	cbz	r0, 801c6a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801c690:	4620      	mov	r0, r4
 801c692:	f007 fbce 	bl	8023e32 <__cxa_guard_release>
 801c696:	4a0f      	ldr	r2, [pc, #60]	@ (801c6d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801c698:	490f      	ldr	r1, [pc, #60]	@ (801c6d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801c69a:	4810      	ldr	r0, [pc, #64]	@ (801c6dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801c69c:	f007 fbb6 	bl	8023e0c <__aeabi_atexit>
 801c6a0:	4c0f      	ldr	r4, [pc, #60]	@ (801c6e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801c6a2:	7823      	ldrb	r3, [r4, #0]
 801c6a4:	f3bf 8f5b 	dmb	ish
 801c6a8:	07db      	lsls	r3, r3, #31
 801c6aa:	d40b      	bmi.n	801c6c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801c6ac:	4620      	mov	r0, r4
 801c6ae:	f007 fbb4 	bl	8023e1a <__cxa_guard_acquire>
 801c6b2:	b138      	cbz	r0, 801c6c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801c6b4:	4620      	mov	r0, r4
 801c6b6:	f007 fbbc 	bl	8023e32 <__cxa_guard_release>
 801c6ba:	4a06      	ldr	r2, [pc, #24]	@ (801c6d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801c6bc:	4909      	ldr	r1, [pc, #36]	@ (801c6e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801c6be:	480a      	ldr	r0, [pc, #40]	@ (801c6e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801c6c0:	f007 fba4 	bl	8023e0c <__aeabi_atexit>
 801c6c4:	4b05      	ldr	r3, [pc, #20]	@ (801c6dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801c6c6:	672b      	str	r3, [r5, #112]	@ 0x70
 801c6c8:	4b07      	ldr	r3, [pc, #28]	@ (801c6e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801c6ca:	676b      	str	r3, [r5, #116]	@ 0x74
 801c6cc:	bd38      	pop	{r3, r4, r5, pc}
 801c6ce:	bf00      	nop
 801c6d0:	20002448 	.word	0x20002448
 801c6d4:	20000000 	.word	0x20000000
 801c6d8:	08018e79 	.word	0x08018e79
 801c6dc:	20000040 	.word	0x20000040
 801c6e0:	2000244c 	.word	0x2000244c
 801c6e4:	08018e77 	.word	0x08018e77
 801c6e8:	20000044 	.word	0x20000044

0801c6ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801c6ec:	b538      	push	{r3, r4, r5, lr}
 801c6ee:	4c15      	ldr	r4, [pc, #84]	@ (801c744 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801c6f0:	7823      	ldrb	r3, [r4, #0]
 801c6f2:	f3bf 8f5b 	dmb	ish
 801c6f6:	07da      	lsls	r2, r3, #31
 801c6f8:	4605      	mov	r5, r0
 801c6fa:	d40b      	bmi.n	801c714 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801c6fc:	4620      	mov	r0, r4
 801c6fe:	f007 fb8c 	bl	8023e1a <__cxa_guard_acquire>
 801c702:	b138      	cbz	r0, 801c714 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801c704:	4620      	mov	r0, r4
 801c706:	f007 fb94 	bl	8023e32 <__cxa_guard_release>
 801c70a:	4a0f      	ldr	r2, [pc, #60]	@ (801c748 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801c70c:	490f      	ldr	r1, [pc, #60]	@ (801c74c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801c70e:	4810      	ldr	r0, [pc, #64]	@ (801c750 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801c710:	f007 fb7c 	bl	8023e0c <__aeabi_atexit>
 801c714:	4c0f      	ldr	r4, [pc, #60]	@ (801c754 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801c716:	7823      	ldrb	r3, [r4, #0]
 801c718:	f3bf 8f5b 	dmb	ish
 801c71c:	07db      	lsls	r3, r3, #31
 801c71e:	d40b      	bmi.n	801c738 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801c720:	4620      	mov	r0, r4
 801c722:	f007 fb7a 	bl	8023e1a <__cxa_guard_acquire>
 801c726:	b138      	cbz	r0, 801c738 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801c728:	4620      	mov	r0, r4
 801c72a:	f007 fb82 	bl	8023e32 <__cxa_guard_release>
 801c72e:	4a06      	ldr	r2, [pc, #24]	@ (801c748 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801c730:	4909      	ldr	r1, [pc, #36]	@ (801c758 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801c732:	480a      	ldr	r0, [pc, #40]	@ (801c75c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801c734:	f007 fb6a 	bl	8023e0c <__aeabi_atexit>
 801c738:	4b05      	ldr	r3, [pc, #20]	@ (801c750 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801c73a:	66ab      	str	r3, [r5, #104]	@ 0x68
 801c73c:	4b07      	ldr	r3, [pc, #28]	@ (801c75c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801c73e:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801c740:	bd38      	pop	{r3, r4, r5, pc}
 801c742:	bf00      	nop
 801c744:	20002440 	.word	0x20002440
 801c748:	20000000 	.word	0x20000000
 801c74c:	08018e7d 	.word	0x08018e7d
 801c750:	20000038 	.word	0x20000038
 801c754:	20002444 	.word	0x20002444
 801c758:	08018e7b 	.word	0x08018e7b
 801c75c:	2000003c 	.word	0x2000003c

0801c760 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801c760:	b510      	push	{r4, lr}
 801c762:	4604      	mov	r4, r0
 801c764:	f7ff ff88 	bl	801c678 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801c768:	4620      	mov	r0, r4
 801c76a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c76e:	f7ff bfbd 	b.w	801c6ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801c772 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801c772:	b510      	push	{r4, lr}
 801c774:	4604      	mov	r4, r0
 801c776:	f7ff fff3 	bl	801c760 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801c77a:	4620      	mov	r0, r4
 801c77c:	f7ff ff72 	bl	801c664 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801c780:	4620      	mov	r0, r4
 801c782:	f7ff fdf9 	bl	801c378 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801c786:	4620      	mov	r0, r4
 801c788:	f7ff fcfa 	bl	801c180 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801c78c:	4620      	mov	r0, r4
 801c78e:	f7ff fd75 	bl	801c27c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801c792:	4620      	mov	r0, r4
 801c794:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c798:	f7ff bee0 	b.w	801c55c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801c79c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801c79c:	b538      	push	{r3, r4, r5, lr}
 801c79e:	4c0b      	ldr	r4, [pc, #44]	@ (801c7cc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801c7a0:	7823      	ldrb	r3, [r4, #0]
 801c7a2:	f3bf 8f5b 	dmb	ish
 801c7a6:	07db      	lsls	r3, r3, #31
 801c7a8:	4605      	mov	r5, r0
 801c7aa:	d40b      	bmi.n	801c7c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801c7ac:	4620      	mov	r0, r4
 801c7ae:	f007 fb34 	bl	8023e1a <__cxa_guard_acquire>
 801c7b2:	b138      	cbz	r0, 801c7c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801c7b4:	4620      	mov	r0, r4
 801c7b6:	f007 fb3c 	bl	8023e32 <__cxa_guard_release>
 801c7ba:	4a05      	ldr	r2, [pc, #20]	@ (801c7d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801c7bc:	4905      	ldr	r1, [pc, #20]	@ (801c7d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801c7be:	4806      	ldr	r0, [pc, #24]	@ (801c7d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801c7c0:	f007 fb24 	bl	8023e0c <__aeabi_atexit>
 801c7c4:	4b04      	ldr	r3, [pc, #16]	@ (801c7d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801c7c6:	67ab      	str	r3, [r5, #120]	@ 0x78
 801c7c8:	bd38      	pop	{r3, r4, r5, pc}
 801c7ca:	bf00      	nop
 801c7cc:	20002434 	.word	0x20002434
 801c7d0:	20000000 	.word	0x20000000
 801c7d4:	08018e75 	.word	0x08018e75
 801c7d8:	20000030 	.word	0x20000030

0801c7dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801c7dc:	b538      	push	{r3, r4, r5, lr}
 801c7de:	4c0b      	ldr	r4, [pc, #44]	@ (801c80c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801c7e0:	7823      	ldrb	r3, [r4, #0]
 801c7e2:	f3bf 8f5b 	dmb	ish
 801c7e6:	07db      	lsls	r3, r3, #31
 801c7e8:	4605      	mov	r5, r0
 801c7ea:	d40b      	bmi.n	801c804 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801c7ec:	4620      	mov	r0, r4
 801c7ee:	f007 fb14 	bl	8023e1a <__cxa_guard_acquire>
 801c7f2:	b138      	cbz	r0, 801c804 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801c7f4:	4620      	mov	r0, r4
 801c7f6:	f007 fb1c 	bl	8023e32 <__cxa_guard_release>
 801c7fa:	4a05      	ldr	r2, [pc, #20]	@ (801c810 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801c7fc:	4905      	ldr	r1, [pc, #20]	@ (801c814 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801c7fe:	4806      	ldr	r0, [pc, #24]	@ (801c818 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801c800:	f007 fb04 	bl	8023e0c <__aeabi_atexit>
 801c804:	4b04      	ldr	r3, [pc, #16]	@ (801c818 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801c806:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801c808:	bd38      	pop	{r3, r4, r5, pc}
 801c80a:	bf00      	nop
 801c80c:	20002438 	.word	0x20002438
 801c810:	20000000 	.word	0x20000000
 801c814:	08018e73 	.word	0x08018e73
 801c818:	20000034 	.word	0x20000034

0801c81c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801c81c:	b570      	push	{r4, r5, r6, lr}
 801c81e:	4d0d      	ldr	r5, [pc, #52]	@ (801c854 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801c820:	4c0d      	ldr	r4, [pc, #52]	@ (801c858 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801c822:	782b      	ldrb	r3, [r5, #0]
 801c824:	f3bf 8f5b 	dmb	ish
 801c828:	f013 0f01 	tst.w	r3, #1
 801c82c:	4606      	mov	r6, r0
 801c82e:	d10d      	bne.n	801c84c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801c830:	4628      	mov	r0, r5
 801c832:	f007 faf2 	bl	8023e1a <__cxa_guard_acquire>
 801c836:	b148      	cbz	r0, 801c84c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801c838:	4b08      	ldr	r3, [pc, #32]	@ (801c85c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801c83a:	6023      	str	r3, [r4, #0]
 801c83c:	4628      	mov	r0, r5
 801c83e:	f007 faf8 	bl	8023e32 <__cxa_guard_release>
 801c842:	4a07      	ldr	r2, [pc, #28]	@ (801c860 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801c844:	4907      	ldr	r1, [pc, #28]	@ (801c864 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801c846:	4620      	mov	r0, r4
 801c848:	f007 fae0 	bl	8023e0c <__aeabi_atexit>
 801c84c:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
 801c850:	bd70      	pop	{r4, r5, r6, pc}
 801c852:	bf00      	nop
 801c854:	2000243c 	.word	0x2000243c
 801c858:	200024b0 	.word	0x200024b0
 801c85c:	08029df0 	.word	0x08029df0
 801c860:	20000000 	.word	0x20000000
 801c864:	08018e71 	.word	0x08018e71

0801c868 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801c868:	b510      	push	{r4, lr}
 801c86a:	4604      	mov	r4, r0
 801c86c:	f7ff ff96 	bl	801c79c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801c870:	4620      	mov	r0, r4
 801c872:	f7ff ffb3 	bl	801c7dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801c876:	4620      	mov	r0, r4
 801c878:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c87c:	f7ff bfce 	b.w	801c81c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801c880 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801c880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c884:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801c888:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801c88c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801c890:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801c894:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801c898:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801c89c:	8808      	ldrh	r0, [r1, #0]
 801c89e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801c8a2:	2d00      	cmp	r5, #0
 801c8a4:	eb02 0a0c 	add.w	sl, r2, ip
 801c8a8:	f2c0 80b0 	blt.w	801ca0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801c8ac:	45ab      	cmp	fp, r5
 801c8ae:	f340 80ad 	ble.w	801ca0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801c8b2:	2c00      	cmp	r4, #0
 801c8b4:	f2c0 80a8 	blt.w	801ca08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801c8b8:	45a6      	cmp	lr, r4
 801c8ba:	f340 80a5 	ble.w	801ca08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801c8be:	f812 200c 	ldrb.w	r2, [r2, ip]
 801c8c2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801c8c6:	1c62      	adds	r2, r4, #1
 801c8c8:	f100 80a3 	bmi.w	801ca12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c8cc:	4596      	cmp	lr, r2
 801c8ce:	f340 80a0 	ble.w	801ca12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c8d2:	f1b9 0f00 	cmp.w	r9, #0
 801c8d6:	f000 809c 	beq.w	801ca12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c8da:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c8de:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801c8e2:	3501      	adds	r5, #1
 801c8e4:	f100 8099 	bmi.w	801ca1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c8e8:	45ab      	cmp	fp, r5
 801c8ea:	f340 8096 	ble.w	801ca1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c8ee:	2f00      	cmp	r7, #0
 801c8f0:	f000 8093 	beq.w	801ca1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c8f4:	2c00      	cmp	r4, #0
 801c8f6:	f2c0 808e 	blt.w	801ca16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801c8fa:	45a6      	cmp	lr, r4
 801c8fc:	f340 808b 	ble.w	801ca16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801c900:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801c904:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801c908:	3401      	adds	r4, #1
 801c90a:	f100 8089 	bmi.w	801ca20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c90e:	45a6      	cmp	lr, r4
 801c910:	f340 8086 	ble.w	801ca20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c914:	f1b9 0f00 	cmp.w	r9, #0
 801c918:	f000 8082 	beq.w	801ca20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c91c:	44d6      	add	lr, sl
 801c91e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c922:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801c926:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801c92a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c92e:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801c932:	fb19 fe07 	smulbb	lr, r9, r7
 801c936:	ea44 0808 	orr.w	r8, r4, r8
 801c93a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801c93e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801c942:	f1c7 0210 	rsb	r2, r7, #16
 801c946:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c94a:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801c94e:	ea44 0c0c 	orr.w	ip, r4, ip
 801c952:	eba2 0209 	sub.w	r2, r2, r9
 801c956:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801c95a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801c95e:	fb04 f40c 	mul.w	r4, r4, ip
 801c962:	fb02 4808 	mla	r8, r2, r8, r4
 801c966:	041a      	lsls	r2, r3, #16
 801c968:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c96c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c970:	4313      	orrs	r3, r2
 801c972:	042a      	lsls	r2, r5, #16
 801c974:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c978:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801c97c:	fb0e 8303 	mla	r3, lr, r3, r8
 801c980:	432a      	orrs	r2, r5
 801c982:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801c986:	fb07 3202 	mla	r2, r7, r2, r3
 801c98a:	0d53      	lsrs	r3, r2, #21
 801c98c:	0952      	lsrs	r2, r2, #5
 801c98e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c992:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c996:	431a      	orrs	r2, r3
 801c998:	b293      	uxth	r3, r2
 801c99a:	b2b4      	uxth	r4, r6
 801c99c:	1202      	asrs	r2, r0, #8
 801c99e:	43f6      	mvns	r6, r6
 801c9a0:	b2f6      	uxtb	r6, r6
 801c9a2:	121d      	asrs	r5, r3, #8
 801c9a4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c9a8:	fb12 f206 	smulbb	r2, r2, r6
 801c9ac:	10c7      	asrs	r7, r0, #3
 801c9ae:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c9b2:	00c0      	lsls	r0, r0, #3
 801c9b4:	fb05 2504 	mla	r5, r5, r4, r2
 801c9b8:	b2c0      	uxtb	r0, r0
 801c9ba:	10da      	asrs	r2, r3, #3
 801c9bc:	00db      	lsls	r3, r3, #3
 801c9be:	b2db      	uxtb	r3, r3
 801c9c0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c9c4:	fb10 f006 	smulbb	r0, r0, r6
 801c9c8:	b2ad      	uxth	r5, r5
 801c9ca:	fb03 0004 	mla	r0, r3, r4, r0
 801c9ce:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c9d2:	fb17 f706 	smulbb	r7, r7, r6
 801c9d6:	b280      	uxth	r0, r0
 801c9d8:	1c6b      	adds	r3, r5, #1
 801c9da:	fb02 7204 	mla	r2, r2, r4, r7
 801c9de:	b292      	uxth	r2, r2
 801c9e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c9e4:	1c43      	adds	r3, r0, #1
 801c9e6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c9ea:	1c50      	adds	r0, r2, #1
 801c9ec:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801c9f0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c9f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c9f8:	0952      	lsrs	r2, r2, #5
 801c9fa:	432b      	orrs	r3, r5
 801c9fc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ca00:	4313      	orrs	r3, r2
 801ca02:	800b      	strh	r3, [r1, #0]
 801ca04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca08:	4680      	mov	r8, r0
 801ca0a:	e75c      	b.n	801c8c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801ca0c:	4684      	mov	ip, r0
 801ca0e:	4680      	mov	r8, r0
 801ca10:	e767      	b.n	801c8e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801ca12:	4684      	mov	ip, r0
 801ca14:	e765      	b.n	801c8e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801ca16:	4605      	mov	r5, r0
 801ca18:	e776      	b.n	801c908 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801ca1a:	4603      	mov	r3, r0
 801ca1c:	4605      	mov	r5, r0
 801ca1e:	e782      	b.n	801c926 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801ca20:	4603      	mov	r3, r0
 801ca22:	e780      	b.n	801c926 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801ca24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ca24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca28:	b099      	sub	sp, #100	@ 0x64
 801ca2a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801ca2e:	9215      	str	r2, [sp, #84]	@ 0x54
 801ca30:	9309      	str	r3, [sp, #36]	@ 0x24
 801ca32:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801ca34:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801ca38:	930d      	str	r3, [sp, #52]	@ 0x34
 801ca3a:	910c      	str	r1, [sp, #48]	@ 0x30
 801ca3c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801ca40:	9016      	str	r0, [sp, #88]	@ 0x58
 801ca42:	6850      	ldr	r0, [r2, #4]
 801ca44:	6812      	ldr	r2, [r2, #0]
 801ca46:	fb00 1303 	mla	r3, r0, r3, r1
 801ca4a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801ca4e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ca50:	681b      	ldr	r3, [r3, #0]
 801ca52:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ca54:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ca56:	685e      	ldr	r6, [r3, #4]
 801ca58:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ca5a:	43db      	mvns	r3, r3
 801ca5c:	b2db      	uxtb	r3, r3
 801ca5e:	3604      	adds	r6, #4
 801ca60:	930a      	str	r3, [sp, #40]	@ 0x28
 801ca62:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ca64:	2b00      	cmp	r3, #0
 801ca66:	dc03      	bgt.n	801ca70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ca68:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801ca6a:	2b00      	cmp	r3, #0
 801ca6c:	f340 8225 	ble.w	801ceba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ca70:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ca72:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ca76:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ca7a:	1e48      	subs	r0, r1, #1
 801ca7c:	1e57      	subs	r7, r2, #1
 801ca7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ca80:	2b00      	cmp	r3, #0
 801ca82:	f340 80e3 	ble.w	801cc4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ca86:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801ca8a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ca8e:	d406      	bmi.n	801ca9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ca90:	4584      	cmp	ip, r0
 801ca92:	da04      	bge.n	801ca9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ca94:	2b00      	cmp	r3, #0
 801ca96:	db02      	blt.n	801ca9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ca98:	42bb      	cmp	r3, r7
 801ca9a:	f2c0 80d8 	blt.w	801cc4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ca9e:	f11c 0c01 	adds.w	ip, ip, #1
 801caa2:	f100 80c9 	bmi.w	801cc38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801caa6:	4561      	cmp	r1, ip
 801caa8:	f2c0 80c6 	blt.w	801cc38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801caac:	3301      	adds	r3, #1
 801caae:	f100 80c3 	bmi.w	801cc38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801cab2:	429a      	cmp	r2, r3
 801cab4:	f2c0 80c0 	blt.w	801cc38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801cab8:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801cabc:	4647      	mov	r7, r8
 801cabe:	f1bb 0f00 	cmp.w	fp, #0
 801cac2:	f340 80e3 	ble.w	801cc8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801cac6:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801cac8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801caca:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801cace:	689b      	ldr	r3, [r3, #8]
 801cad0:	ea5f 422a 	movs.w	r2, sl, asr #16
 801cad4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801cad8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801cadc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801cae0:	f100 8121 	bmi.w	801cd26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801cae4:	f103 39ff 	add.w	r9, r3, #4294967295
 801cae8:	454a      	cmp	r2, r9
 801caea:	f280 811c 	bge.w	801cd26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801caee:	f1bc 0f00 	cmp.w	ip, #0
 801caf2:	f2c0 8118 	blt.w	801cd26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801caf6:	f10e 39ff 	add.w	r9, lr, #4294967295
 801cafa:	45cc      	cmp	ip, r9
 801cafc:	f280 8113 	bge.w	801cd26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801cb00:	b21b      	sxth	r3, r3
 801cb02:	fb0c 2203 	mla	r2, ip, r3, r2
 801cb06:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cb08:	eb04 0902 	add.w	r9, r4, r2
 801cb0c:	5ca2      	ldrb	r2, [r4, r2]
 801cb0e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801cb12:	2800      	cmp	r0, #0
 801cb14:	f000 80fe 	beq.w	801cd14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801cb18:	f899 2001 	ldrb.w	r2, [r9, #1]
 801cb1c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801cb20:	9211      	str	r2, [sp, #68]	@ 0x44
 801cb22:	b151      	cbz	r1, 801cb3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801cb24:	eb09 0203 	add.w	r2, r9, r3
 801cb28:	f819 3003 	ldrb.w	r3, [r9, r3]
 801cb2c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cb30:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cb32:	7853      	ldrb	r3, [r2, #1]
 801cb34:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cb38:	9312      	str	r3, [sp, #72]	@ 0x48
 801cb3a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cb3c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801cb3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801cb42:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801cb46:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801cb4a:	ea4c 0c03 	orr.w	ip, ip, r3
 801cb4e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801cb50:	041b      	lsls	r3, r3, #16
 801cb52:	fb10 f201 	smulbb	r2, r0, r1
 801cb56:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801cb5a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cb5e:	10d2      	asrs	r2, r2, #3
 801cb60:	4323      	orrs	r3, r4
 801cb62:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801cb66:	4353      	muls	r3, r2
 801cb68:	fb09 330c 	mla	r3, r9, ip, r3
 801cb6c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801cb70:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801cb74:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801cb78:	ea4c 0e0e 	orr.w	lr, ip, lr
 801cb7c:	f1c1 0c10 	rsb	ip, r1, #16
 801cb80:	ebac 0c00 	sub.w	ip, ip, r0
 801cb84:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801cb88:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801cb8c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801cb8e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cb90:	0418      	lsls	r0, r3, #16
 801cb92:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801cb96:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801cb9a:	4318      	orrs	r0, r3
 801cb9c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801cba0:	fb02 c200 	mla	r2, r2, r0, ip
 801cba4:	0d53      	lsrs	r3, r2, #21
 801cba6:	0952      	lsrs	r2, r2, #5
 801cba8:	8838      	ldrh	r0, [r7, #0]
 801cbaa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cbae:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cbb2:	431a      	orrs	r2, r3
 801cbb4:	b292      	uxth	r2, r2
 801cbb6:	1201      	asrs	r1, r0, #8
 801cbb8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801cbbc:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801cbc0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801cbc4:	fb11 f104 	smulbb	r1, r1, r4
 801cbc8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801cbcc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801cbd0:	00c0      	lsls	r0, r0, #3
 801cbd2:	fb0c 1c03 	mla	ip, ip, r3, r1
 801cbd6:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801cbda:	10d1      	asrs	r1, r2, #3
 801cbdc:	b2c0      	uxtb	r0, r0
 801cbde:	00d2      	lsls	r2, r2, #3
 801cbe0:	b2d2      	uxtb	r2, r2
 801cbe2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cbe6:	fb1e fe04 	smulbb	lr, lr, r4
 801cbea:	fb10 f004 	smulbb	r0, r0, r4
 801cbee:	fa1f fc8c 	uxth.w	ip, ip
 801cbf2:	fb01 e103 	mla	r1, r1, r3, lr
 801cbf6:	fb02 0303 	mla	r3, r2, r3, r0
 801cbfa:	b29a      	uxth	r2, r3
 801cbfc:	f10c 0301 	add.w	r3, ip, #1
 801cc00:	b289      	uxth	r1, r1
 801cc02:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801cc06:	1c53      	adds	r3, r2, #1
 801cc08:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cc0c:	1c4a      	adds	r2, r1, #1
 801cc0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cc12:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801cc16:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cc1a:	0949      	lsrs	r1, r1, #5
 801cc1c:	ea43 030c 	orr.w	r3, r3, ip
 801cc20:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cc24:	430b      	orrs	r3, r1
 801cc26:	803b      	strh	r3, [r7, #0]
 801cc28:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801cc2a:	449a      	add	sl, r3
 801cc2c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801cc2e:	3702      	adds	r7, #2
 801cc30:	441d      	add	r5, r3
 801cc32:	f10b 3bff 	add.w	fp, fp, #4294967295
 801cc36:	e742      	b.n	801cabe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801cc38:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801cc3a:	449a      	add	sl, r3
 801cc3c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801cc3e:	441d      	add	r5, r3
 801cc40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cc42:	3b01      	subs	r3, #1
 801cc44:	9309      	str	r3, [sp, #36]	@ 0x24
 801cc46:	f108 0802 	add.w	r8, r8, #2
 801cc4a:	e718      	b.n	801ca7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801cc4c:	d023      	beq.n	801cc96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801cc4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cc50:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801cc52:	3b01      	subs	r3, #1
 801cc54:	fb00 a003 	mla	r0, r0, r3, sl
 801cc58:	1400      	asrs	r0, r0, #16
 801cc5a:	f53f af2d 	bmi.w	801cab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801cc5e:	3901      	subs	r1, #1
 801cc60:	4288      	cmp	r0, r1
 801cc62:	f6bf af29 	bge.w	801cab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801cc66:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801cc68:	fb01 5303 	mla	r3, r1, r3, r5
 801cc6c:	141b      	asrs	r3, r3, #16
 801cc6e:	f53f af23 	bmi.w	801cab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801cc72:	3a01      	subs	r2, #1
 801cc74:	4293      	cmp	r3, r2
 801cc76:	f6bf af1f 	bge.w	801cab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801cc7a:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801cc7e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801cc82:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801cc86:	f1be 0f00 	cmp.w	lr, #0
 801cc8a:	dc6c      	bgt.n	801cd66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801cc8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cc8e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cc92:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801cc96:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cc98:	2b00      	cmp	r3, #0
 801cc9a:	f340 810e 	ble.w	801ceba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801cc9e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cca2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cca6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ccaa:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801ccac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ccb0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ccb4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ccb8:	eef0 6a62 	vmov.f32	s13, s5
 801ccbc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ccc0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccc4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ccc8:	ee16 aa90 	vmov	sl, s13
 801cccc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ccd0:	eef0 6a43 	vmov.f32	s13, s6
 801ccd4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ccd8:	ee12 2a90 	vmov	r2, s5
 801ccdc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cce0:	fb92 f3f3 	sdiv	r3, r2, r3
 801cce4:	ee13 2a10 	vmov	r2, s6
 801cce8:	9325      	str	r3, [sp, #148]	@ 0x94
 801ccea:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801ccec:	fb92 f3f3 	sdiv	r3, r2, r3
 801ccf0:	9326      	str	r3, [sp, #152]	@ 0x98
 801ccf2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ccf4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801ccf6:	3b01      	subs	r3, #1
 801ccf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccfc:	930c      	str	r3, [sp, #48]	@ 0x30
 801ccfe:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cd00:	bf08      	it	eq
 801cd02:	4613      	moveq	r3, r2
 801cd04:	ee16 5a90 	vmov	r5, s13
 801cd08:	9309      	str	r3, [sp, #36]	@ 0x24
 801cd0a:	eeb0 3a67 	vmov.f32	s6, s15
 801cd0e:	eef0 2a47 	vmov.f32	s5, s14
 801cd12:	e6a6      	b.n	801ca62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801cd14:	2900      	cmp	r1, #0
 801cd16:	f43f af10 	beq.w	801cb3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801cd1a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801cd1e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cd22:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cd24:	e709      	b.n	801cb3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801cd26:	f112 0901 	adds.w	r9, r2, #1
 801cd2a:	f53f af7d 	bmi.w	801cc28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801cd2e:	454b      	cmp	r3, r9
 801cd30:	f6ff af7a 	blt.w	801cc28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801cd34:	f11c 0901 	adds.w	r9, ip, #1
 801cd38:	f53f af76 	bmi.w	801cc28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801cd3c:	45ce      	cmp	lr, r9
 801cd3e:	f6ff af73 	blt.w	801cc28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801cd42:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cd44:	9202      	str	r2, [sp, #8]
 801cd46:	b21b      	sxth	r3, r3
 801cd48:	fa0f f28e 	sxth.w	r2, lr
 801cd4c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801cd50:	e9cd c003 	strd	ip, r0, [sp, #12]
 801cd54:	9201      	str	r2, [sp, #4]
 801cd56:	9300      	str	r3, [sp, #0]
 801cd58:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801cd5a:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801cd5c:	4633      	mov	r3, r6
 801cd5e:	4639      	mov	r1, r7
 801cd60:	f7ff fd8e 	bl	801c880 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801cd64:	e760      	b.n	801cc28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801cd66:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801cd68:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cd6a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801cd6e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801cd72:	1429      	asrs	r1, r5, #16
 801cd74:	fb03 2101 	mla	r1, r3, r1, r2
 801cd78:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801cd7a:	440a      	add	r2, r1
 801cd7c:	5c61      	ldrb	r1, [r4, r1]
 801cd7e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801cd82:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801cd86:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801cd8a:	f1bc 0f00 	cmp.w	ip, #0
 801cd8e:	f000 808c 	beq.w	801ceaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801cd92:	7857      	ldrb	r7, [r2, #1]
 801cd94:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801cd98:	9413      	str	r4, [sp, #76]	@ 0x4c
 801cd9a:	b140      	cbz	r0, 801cdae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cd9c:	18d7      	adds	r7, r2, r3
 801cd9e:	5cd3      	ldrb	r3, [r2, r3]
 801cda0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cda4:	9310      	str	r3, [sp, #64]	@ 0x40
 801cda6:	787b      	ldrb	r3, [r7, #1]
 801cda8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cdac:	9314      	str	r3, [sp, #80]	@ 0x50
 801cdae:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cdb0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cdb2:	fb1c f200 	smulbb	r2, ip, r0
 801cdb6:	041f      	lsls	r7, r3, #16
 801cdb8:	10d2      	asrs	r2, r2, #3
 801cdba:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801cdbe:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801cdc2:	431f      	orrs	r7, r3
 801cdc4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801cdc8:	9317      	str	r3, [sp, #92]	@ 0x5c
 801cdca:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801cdcc:	041b      	lsls	r3, r3, #16
 801cdce:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801cdd2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cdd6:	ea43 030b 	orr.w	r3, r3, fp
 801cdda:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801cddc:	4353      	muls	r3, r2
 801cdde:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801cde2:	fb04 3707 	mla	r7, r4, r7, r3
 801cde6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801cdea:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801cdee:	ea43 0b01 	orr.w	fp, r3, r1
 801cdf2:	f1c0 0110 	rsb	r1, r0, #16
 801cdf6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801cdf8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cdfa:	eba1 0c0c 	sub.w	ip, r1, ip
 801cdfe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ce02:	fb0c 770b 	mla	r7, ip, fp, r7
 801ce06:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ce0a:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801ce0e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ce12:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ce16:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ce1a:	fb02 770c 	mla	r7, r2, ip, r7
 801ce1e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801ce20:	0d79      	lsrs	r1, r7, #21
 801ce22:	097f      	lsrs	r7, r7, #5
 801ce24:	8812      	ldrh	r2, [r2, #0]
 801ce26:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ce2a:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ce2e:	430f      	orrs	r7, r1
 801ce30:	b2bb      	uxth	r3, r7
 801ce32:	1211      	asrs	r1, r2, #8
 801ce34:	1218      	asrs	r0, r3, #8
 801ce36:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ce3a:	fb11 f104 	smulbb	r1, r1, r4
 801ce3e:	10d7      	asrs	r7, r2, #3
 801ce40:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ce44:	00d2      	lsls	r2, r2, #3
 801ce46:	fb00 1009 	mla	r0, r0, r9, r1
 801ce4a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ce4e:	10d9      	asrs	r1, r3, #3
 801ce50:	b2d2      	uxtb	r2, r2
 801ce52:	00db      	lsls	r3, r3, #3
 801ce54:	fb17 f704 	smulbb	r7, r7, r4
 801ce58:	fb12 f204 	smulbb	r2, r2, r4
 801ce5c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ce60:	b2db      	uxtb	r3, r3
 801ce62:	b280      	uxth	r0, r0
 801ce64:	fb01 7109 	mla	r1, r1, r9, r7
 801ce68:	fb03 2309 	mla	r3, r3, r9, r2
 801ce6c:	b29b      	uxth	r3, r3
 801ce6e:	b289      	uxth	r1, r1
 801ce70:	1c42      	adds	r2, r0, #1
 801ce72:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ce76:	1c4f      	adds	r7, r1, #1
 801ce78:	1c5a      	adds	r2, r3, #1
 801ce7a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ce7e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ce82:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801ce86:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ce8a:	0949      	lsrs	r1, r1, #5
 801ce8c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ce8e:	4310      	orrs	r0, r2
 801ce90:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ce94:	4308      	orrs	r0, r1
 801ce96:	f823 0b02 	strh.w	r0, [r3], #2
 801ce9a:	930e      	str	r3, [sp, #56]	@ 0x38
 801ce9c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ce9e:	449a      	add	sl, r3
 801cea0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801cea2:	f10e 3eff 	add.w	lr, lr, #4294967295
 801cea6:	441d      	add	r5, r3
 801cea8:	e6ed      	b.n	801cc86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801ceaa:	2800      	cmp	r0, #0
 801ceac:	f43f af7f 	beq.w	801cdae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ceb0:	5cd3      	ldrb	r3, [r2, r3]
 801ceb2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ceb6:	9310      	str	r3, [sp, #64]	@ 0x40
 801ceb8:	e779      	b.n	801cdae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ceba:	b019      	add	sp, #100	@ 0x64
 801cebc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cec0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801cec0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cec4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801cec8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801cecc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801ced0:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801ced4:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801ced8:	8808      	ldrh	r0, [r1, #0]
 801ceda:	fb08 470e 	mla	r7, r8, lr, r4
 801cede:	f1b8 0f00 	cmp.w	r8, #0
 801cee2:	eb02 0907 	add.w	r9, r2, r7
 801cee6:	db67      	blt.n	801cfb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801cee8:	45c2      	cmp	sl, r8
 801ceea:	dd65      	ble.n	801cfb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ceec:	2c00      	cmp	r4, #0
 801ceee:	db61      	blt.n	801cfb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801cef0:	45a6      	cmp	lr, r4
 801cef2:	dd5f      	ble.n	801cfb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801cef4:	5dd2      	ldrb	r2, [r2, r7]
 801cef6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801cefa:	1c62      	adds	r2, r4, #1
 801cefc:	d45f      	bmi.n	801cfbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801cefe:	4596      	cmp	lr, r2
 801cf00:	dd5d      	ble.n	801cfbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801cf02:	2d00      	cmp	r5, #0
 801cf04:	d05b      	beq.n	801cfbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801cf06:	f899 2001 	ldrb.w	r2, [r9, #1]
 801cf0a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801cf0e:	f118 0801 	adds.w	r8, r8, #1
 801cf12:	d458      	bmi.n	801cfc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801cf14:	45c2      	cmp	sl, r8
 801cf16:	dd56      	ble.n	801cfc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801cf18:	2e00      	cmp	r6, #0
 801cf1a:	d054      	beq.n	801cfc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801cf1c:	2c00      	cmp	r4, #0
 801cf1e:	db50      	blt.n	801cfc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801cf20:	45a6      	cmp	lr, r4
 801cf22:	dd4e      	ble.n	801cfc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801cf24:	f819 200e 	ldrb.w	r2, [r9, lr]
 801cf28:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801cf2c:	3401      	adds	r4, #1
 801cf2e:	d407      	bmi.n	801cf40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801cf30:	45a6      	cmp	lr, r4
 801cf32:	dd05      	ble.n	801cf40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801cf34:	b125      	cbz	r5, 801cf40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801cf36:	44ce      	add	lr, r9
 801cf38:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801cf3c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801cf40:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801cf44:	fb15 f406 	smulbb	r4, r5, r6
 801cf48:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cf4c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801cf50:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801cf54:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801cf58:	ea43 0c0c 	orr.w	ip, r3, ip
 801cf5c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801cf60:	f1c6 0310 	rsb	r3, r6, #16
 801cf64:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801cf68:	1b5b      	subs	r3, r3, r5
 801cf6a:	ea4e 0707 	orr.w	r7, lr, r7
 801cf6e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801cf72:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801cf76:	437d      	muls	r5, r7
 801cf78:	fb03 5c0c 	mla	ip, r3, ip, r5
 801cf7c:	0403      	lsls	r3, r0, #16
 801cf7e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cf82:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cf86:	4318      	orrs	r0, r3
 801cf88:	0413      	lsls	r3, r2, #16
 801cf8a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cf8e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cf92:	4313      	orrs	r3, r2
 801cf94:	fb04 c000 	mla	r0, r4, r0, ip
 801cf98:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801cf9c:	fb06 0003 	mla	r0, r6, r3, r0
 801cfa0:	0d43      	lsrs	r3, r0, #21
 801cfa2:	0940      	lsrs	r0, r0, #5
 801cfa4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cfa8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cfac:	4318      	orrs	r0, r3
 801cfae:	8008      	strh	r0, [r1, #0]
 801cfb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cfb4:	4684      	mov	ip, r0
 801cfb6:	e7a0      	b.n	801cefa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801cfb8:	4607      	mov	r7, r0
 801cfba:	4684      	mov	ip, r0
 801cfbc:	e7a7      	b.n	801cf0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801cfbe:	4607      	mov	r7, r0
 801cfc0:	e7a5      	b.n	801cf0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801cfc2:	4602      	mov	r2, r0
 801cfc4:	e7b2      	b.n	801cf2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801cfc6:	4602      	mov	r2, r0
 801cfc8:	e7ba      	b.n	801cf40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801cfca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cfca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfce:	b093      	sub	sp, #76	@ 0x4c
 801cfd0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801cfd4:	920f      	str	r2, [sp, #60]	@ 0x3c
 801cfd6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801cfd8:	9108      	str	r1, [sp, #32]
 801cfda:	9306      	str	r3, [sp, #24]
 801cfdc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801cfe0:	9010      	str	r0, [sp, #64]	@ 0x40
 801cfe2:	6850      	ldr	r0, [r2, #4]
 801cfe4:	6812      	ldr	r2, [r2, #0]
 801cfe6:	fb00 1303 	mla	r3, r0, r3, r1
 801cfea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801cfee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cff0:	681b      	ldr	r3, [r3, #0]
 801cff2:	9307      	str	r3, [sp, #28]
 801cff4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cff6:	685f      	ldr	r7, [r3, #4]
 801cff8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801cffc:	3704      	adds	r7, #4
 801cffe:	9b08      	ldr	r3, [sp, #32]
 801d000:	2b00      	cmp	r3, #0
 801d002:	dc03      	bgt.n	801d00c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801d004:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d006:	2b00      	cmp	r3, #0
 801d008:	f340 81b2 	ble.w	801d370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801d00c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d00e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d012:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d016:	1e48      	subs	r0, r1, #1
 801d018:	f102 3cff 	add.w	ip, r2, #4294967295
 801d01c:	9b06      	ldr	r3, [sp, #24]
 801d01e:	2b00      	cmp	r3, #0
 801d020:	f340 80a9 	ble.w	801d176 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801d024:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d028:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d02c:	d406      	bmi.n	801d03c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d02e:	4586      	cmp	lr, r0
 801d030:	da04      	bge.n	801d03c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d032:	2b00      	cmp	r3, #0
 801d034:	db02      	blt.n	801d03c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d036:	4563      	cmp	r3, ip
 801d038:	f2c0 809e 	blt.w	801d178 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801d03c:	f11e 0e01 	adds.w	lr, lr, #1
 801d040:	f100 808f 	bmi.w	801d162 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d044:	4571      	cmp	r1, lr
 801d046:	f2c0 808c 	blt.w	801d162 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d04a:	3301      	adds	r3, #1
 801d04c:	f100 8089 	bmi.w	801d162 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d050:	429a      	cmp	r2, r3
 801d052:	f2c0 8086 	blt.w	801d162 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d056:	f8dd b018 	ldr.w	fp, [sp, #24]
 801d05a:	46c8      	mov	r8, r9
 801d05c:	f1bb 0f00 	cmp.w	fp, #0
 801d060:	f340 80a6 	ble.w	801d1b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801d064:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801d066:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d068:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d06c:	689b      	ldr	r3, [r3, #8]
 801d06e:	1422      	asrs	r2, r4, #16
 801d070:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801d074:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801d078:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d07c:	f100 80e3 	bmi.w	801d246 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801d080:	f103 3aff 	add.w	sl, r3, #4294967295
 801d084:	4552      	cmp	r2, sl
 801d086:	f280 80de 	bge.w	801d246 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801d08a:	f1bc 0f00 	cmp.w	ip, #0
 801d08e:	f2c0 80da 	blt.w	801d246 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801d092:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d096:	45d4      	cmp	ip, sl
 801d098:	f280 80d5 	bge.w	801d246 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801d09c:	b21b      	sxth	r3, r3
 801d09e:	fb0c 2203 	mla	r2, ip, r3, r2
 801d0a2:	9d07      	ldr	r5, [sp, #28]
 801d0a4:	eb05 0a02 	add.w	sl, r5, r2
 801d0a8:	5caa      	ldrb	r2, [r5, r2]
 801d0aa:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801d0ae:	2800      	cmp	r0, #0
 801d0b0:	f000 80c0 	beq.w	801d234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801d0b4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d0b8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801d0bc:	920b      	str	r2, [sp, #44]	@ 0x2c
 801d0be:	b151      	cbz	r1, 801d0d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801d0c0:	eb0a 0203 	add.w	r2, sl, r3
 801d0c4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801d0c8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d0cc:	9309      	str	r3, [sp, #36]	@ 0x24
 801d0ce:	7853      	ldrb	r3, [r2, #1]
 801d0d0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d0d4:	930c      	str	r3, [sp, #48]	@ 0x30
 801d0d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d0d8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801d0da:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d0de:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d0e2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d0e6:	ea4c 0c03 	orr.w	ip, ip, r3
 801d0ea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d0ec:	041b      	lsls	r3, r3, #16
 801d0ee:	fb10 f201 	smulbb	r2, r0, r1
 801d0f2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801d0f6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d0fa:	10d2      	asrs	r2, r2, #3
 801d0fc:	432b      	orrs	r3, r5
 801d0fe:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801d102:	4353      	muls	r3, r2
 801d104:	fb0a 330c 	mla	r3, sl, ip, r3
 801d108:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801d10c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d110:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d114:	ea4c 0e0e 	orr.w	lr, ip, lr
 801d118:	f1c1 0c10 	rsb	ip, r1, #16
 801d11c:	ebac 0c00 	sub.w	ip, ip, r0
 801d120:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801d124:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801d128:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d12a:	0418      	lsls	r0, r3, #16
 801d12c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801d130:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d134:	4318      	orrs	r0, r3
 801d136:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801d13a:	fb02 c200 	mla	r2, r2, r0, ip
 801d13e:	0d53      	lsrs	r3, r2, #21
 801d140:	0952      	lsrs	r2, r2, #5
 801d142:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d146:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d14a:	431a      	orrs	r2, r3
 801d14c:	f8a8 2000 	strh.w	r2, [r8]
 801d150:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d152:	441c      	add	r4, r3
 801d154:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d156:	f108 0802 	add.w	r8, r8, #2
 801d15a:	441e      	add	r6, r3
 801d15c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d160:	e77c      	b.n	801d05c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d162:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d164:	441c      	add	r4, r3
 801d166:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d168:	441e      	add	r6, r3
 801d16a:	9b06      	ldr	r3, [sp, #24]
 801d16c:	3b01      	subs	r3, #1
 801d16e:	9306      	str	r3, [sp, #24]
 801d170:	f109 0902 	add.w	r9, r9, #2
 801d174:	e752      	b.n	801d01c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d176:	d020      	beq.n	801d1ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d178:	9b06      	ldr	r3, [sp, #24]
 801d17a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d17c:	3b01      	subs	r3, #1
 801d17e:	fb00 4003 	mla	r0, r0, r3, r4
 801d182:	1400      	asrs	r0, r0, #16
 801d184:	f53f af67 	bmi.w	801d056 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d188:	3901      	subs	r1, #1
 801d18a:	4288      	cmp	r0, r1
 801d18c:	f6bf af63 	bge.w	801d056 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d190:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d192:	fb01 6303 	mla	r3, r1, r3, r6
 801d196:	141b      	asrs	r3, r3, #16
 801d198:	f53f af5d 	bmi.w	801d056 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d19c:	3a01      	subs	r2, #1
 801d19e:	4293      	cmp	r3, r2
 801d1a0:	f6bf af59 	bge.w	801d056 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d1a4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801d1a8:	46ca      	mov	sl, r9
 801d1aa:	f1b8 0f00 	cmp.w	r8, #0
 801d1ae:	dc67      	bgt.n	801d280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d1b0:	9b06      	ldr	r3, [sp, #24]
 801d1b2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d1b6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801d1ba:	9b08      	ldr	r3, [sp, #32]
 801d1bc:	2b00      	cmp	r3, #0
 801d1be:	f340 80d7 	ble.w	801d370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801d1c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d1c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d1ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d1ce:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d1d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d1d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d1d8:	eeb0 6a62 	vmov.f32	s12, s5
 801d1dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d1e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d1e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d1e8:	ee16 4a10 	vmov	r4, s12
 801d1ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d1f0:	eeb0 6a43 	vmov.f32	s12, s6
 801d1f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d1f8:	ee12 2a90 	vmov	r2, s5
 801d1fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d200:	fb92 f3f3 	sdiv	r3, r2, r3
 801d204:	ee13 2a10 	vmov	r2, s6
 801d208:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d20a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d20c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d210:	9320      	str	r3, [sp, #128]	@ 0x80
 801d212:	9b08      	ldr	r3, [sp, #32]
 801d214:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d216:	3b01      	subs	r3, #1
 801d218:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d21c:	9308      	str	r3, [sp, #32]
 801d21e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d220:	bf08      	it	eq
 801d222:	4613      	moveq	r3, r2
 801d224:	ee16 6a10 	vmov	r6, s12
 801d228:	9306      	str	r3, [sp, #24]
 801d22a:	eeb0 3a67 	vmov.f32	s6, s15
 801d22e:	eef0 2a47 	vmov.f32	s5, s14
 801d232:	e6e4      	b.n	801cffe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801d234:	2900      	cmp	r1, #0
 801d236:	f43f af4e 	beq.w	801d0d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801d23a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801d23e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d242:	9309      	str	r3, [sp, #36]	@ 0x24
 801d244:	e747      	b.n	801d0d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801d246:	f112 0a01 	adds.w	sl, r2, #1
 801d24a:	d481      	bmi.n	801d150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d24c:	4553      	cmp	r3, sl
 801d24e:	f6ff af7f 	blt.w	801d150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d252:	f11c 0a01 	adds.w	sl, ip, #1
 801d256:	f53f af7b 	bmi.w	801d150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d25a:	45d6      	cmp	lr, sl
 801d25c:	f6ff af78 	blt.w	801d150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d260:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801d264:	b21b      	sxth	r3, r3
 801d266:	fa0f f28e 	sxth.w	r2, lr
 801d26a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801d26e:	9201      	str	r2, [sp, #4]
 801d270:	9300      	str	r3, [sp, #0]
 801d272:	9a07      	ldr	r2, [sp, #28]
 801d274:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801d276:	463b      	mov	r3, r7
 801d278:	4641      	mov	r1, r8
 801d27a:	f7ff fe21 	bl	801cec0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d27e:	e767      	b.n	801d150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d280:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d282:	9d07      	ldr	r5, [sp, #28]
 801d284:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801d288:	1422      	asrs	r2, r4, #16
 801d28a:	1431      	asrs	r1, r6, #16
 801d28c:	fb03 2101 	mla	r1, r3, r1, r2
 801d290:	9a07      	ldr	r2, [sp, #28]
 801d292:	440a      	add	r2, r1
 801d294:	5c69      	ldrb	r1, [r5, r1]
 801d296:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801d29a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d29e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801d2a2:	f1be 0f00 	cmp.w	lr, #0
 801d2a6:	d05c      	beq.n	801d362 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801d2a8:	f892 c001 	ldrb.w	ip, [r2, #1]
 801d2ac:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801d2b0:	950d      	str	r5, [sp, #52]	@ 0x34
 801d2b2:	b150      	cbz	r0, 801d2ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801d2b4:	eb02 0c03 	add.w	ip, r2, r3
 801d2b8:	5cd3      	ldrb	r3, [r2, r3]
 801d2ba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d2be:	930a      	str	r3, [sp, #40]	@ 0x28
 801d2c0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801d2c4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d2c8:	930e      	str	r3, [sp, #56]	@ 0x38
 801d2ca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d2cc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d2ce:	fb1e f200 	smulbb	r2, lr, r0
 801d2d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d2d6:	10d2      	asrs	r2, r2, #3
 801d2d8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d2dc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d2e0:	ea4c 0c03 	orr.w	ip, ip, r3
 801d2e4:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801d2e8:	9311      	str	r3, [sp, #68]	@ 0x44
 801d2ea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d2ec:	041b      	lsls	r3, r3, #16
 801d2ee:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801d2f2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801d2f6:	ea43 030b 	orr.w	r3, r3, fp
 801d2fa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d2fc:	4353      	muls	r3, r2
 801d2fe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d302:	fb05 3c0c 	mla	ip, r5, ip, r3
 801d306:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d30a:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801d30e:	ea43 0b01 	orr.w	fp, r3, r1
 801d312:	f1c0 0110 	rsb	r1, r0, #16
 801d316:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d318:	eba1 0e0e 	sub.w	lr, r1, lr
 801d31c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801d320:	fb0e cc0b 	mla	ip, lr, fp, ip
 801d324:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801d328:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801d32c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d330:	ea4b 0e0e 	orr.w	lr, fp, lr
 801d334:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801d338:	fb02 cc0e 	mla	ip, r2, lr, ip
 801d33c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801d340:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d344:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d348:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801d34c:	ea43 0c0c 	orr.w	ip, r3, ip
 801d350:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d352:	f82a cb02 	strh.w	ip, [sl], #2
 801d356:	441c      	add	r4, r3
 801d358:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d35a:	f108 38ff 	add.w	r8, r8, #4294967295
 801d35e:	441e      	add	r6, r3
 801d360:	e723      	b.n	801d1aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801d362:	2800      	cmp	r0, #0
 801d364:	d0b1      	beq.n	801d2ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801d366:	5cd3      	ldrb	r3, [r2, r3]
 801d368:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d36c:	930a      	str	r3, [sp, #40]	@ 0x28
 801d36e:	e7ac      	b.n	801d2ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801d370:	b013      	add	sp, #76	@ 0x4c
 801d372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d376 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801d376:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d37a:	880d      	ldrh	r5, [r1, #0]
 801d37c:	b087      	sub	sp, #28
 801d37e:	10ef      	asrs	r7, r5, #3
 801d380:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801d384:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d388:	00ed      	lsls	r5, r5, #3
 801d38a:	9701      	str	r7, [sp, #4]
 801d38c:	b2ed      	uxtb	r5, r5
 801d38e:	9502      	str	r5, [sp, #8]
 801d390:	9d01      	ldr	r5, [sp, #4]
 801d392:	9103      	str	r1, [sp, #12]
 801d394:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801d398:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801d39c:	9902      	ldr	r1, [sp, #8]
 801d39e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801d3a2:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801d3a6:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801d3aa:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801d3ae:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801d3b2:	022d      	lsls	r5, r5, #8
 801d3b4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801d3b8:	fb06 0709 	mla	r7, r6, r9, r0
 801d3bc:	430d      	orrs	r5, r1
 801d3be:	2e00      	cmp	r6, #0
 801d3c0:	eb02 0c07 	add.w	ip, r2, r7
 801d3c4:	9505      	str	r5, [sp, #20]
 801d3c6:	f2c0 80b6 	blt.w	801d536 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801d3ca:	45b3      	cmp	fp, r6
 801d3cc:	f340 80b3 	ble.w	801d536 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801d3d0:	2800      	cmp	r0, #0
 801d3d2:	f2c0 80ae 	blt.w	801d532 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801d3d6:	4581      	cmp	r9, r0
 801d3d8:	f340 80ab 	ble.w	801d532 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801d3dc:	5dd7      	ldrb	r7, [r2, r7]
 801d3de:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801d3e2:	441f      	add	r7, r3
 801d3e4:	1c42      	adds	r2, r0, #1
 801d3e6:	f100 80a9 	bmi.w	801d53c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801d3ea:	4591      	cmp	r9, r2
 801d3ec:	f340 80a6 	ble.w	801d53c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801d3f0:	2c00      	cmp	r4, #0
 801d3f2:	f000 80a3 	beq.w	801d53c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801d3f6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801d3fa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d3fe:	441d      	add	r5, r3
 801d400:	3601      	adds	r6, #1
 801d402:	f100 809f 	bmi.w	801d544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801d406:	45b3      	cmp	fp, r6
 801d408:	f340 809c 	ble.w	801d544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801d40c:	f1be 0f00 	cmp.w	lr, #0
 801d410:	f000 8098 	beq.w	801d544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801d414:	2800      	cmp	r0, #0
 801d416:	f2c0 8093 	blt.w	801d540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801d41a:	4581      	cmp	r9, r0
 801d41c:	f340 8090 	ble.w	801d540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801d420:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801d424:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801d428:	441e      	add	r6, r3
 801d42a:	3001      	adds	r0, #1
 801d42c:	f100 808d 	bmi.w	801d54a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801d430:	4581      	cmp	r9, r0
 801d432:	f340 808a 	ble.w	801d54a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801d436:	2c00      	cmp	r4, #0
 801d438:	f000 8087 	beq.w	801d54a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801d43c:	44e1      	add	r9, ip
 801d43e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801d442:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d446:	4413      	add	r3, r2
 801d448:	b2a4      	uxth	r4, r4
 801d44a:	fa1f fe8e 	uxth.w	lr, lr
 801d44e:	fb04 fb0e 	mul.w	fp, r4, lr
 801d452:	0124      	lsls	r4, r4, #4
 801d454:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801d458:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801d45c:	eba4 040b 	sub.w	r4, r4, fp
 801d460:	fa1f f08e 	uxth.w	r0, lr
 801d464:	b2a2      	uxth	r2, r4
 801d466:	78ac      	ldrb	r4, [r5, #2]
 801d468:	f897 c002 	ldrb.w	ip, [r7, #2]
 801d46c:	9901      	ldr	r1, [sp, #4]
 801d46e:	eba9 0900 	sub.w	r9, r9, r0
 801d472:	fa1f f989 	uxth.w	r9, r9
 801d476:	4354      	muls	r4, r2
 801d478:	fb09 440c 	mla	r4, r9, ip, r4
 801d47c:	f896 c002 	ldrb.w	ip, [r6, #2]
 801d480:	fb00 440c 	mla	r4, r0, ip, r4
 801d484:	f893 c002 	ldrb.w	ip, [r3, #2]
 801d488:	fa1f fe88 	uxth.w	lr, r8
 801d48c:	ea6f 0808 	mvn.w	r8, r8
 801d490:	fa5f f888 	uxtb.w	r8, r8
 801d494:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801d498:	fb1a fa08 	smulbb	sl, sl, r8
 801d49c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801d4a0:	fb0c ac0e 	mla	ip, ip, lr, sl
 801d4a4:	f895 a001 	ldrb.w	sl, [r5, #1]
 801d4a8:	787c      	ldrb	r4, [r7, #1]
 801d4aa:	782d      	ldrb	r5, [r5, #0]
 801d4ac:	783f      	ldrb	r7, [r7, #0]
 801d4ae:	fb02 fa0a 	mul.w	sl, r2, sl
 801d4b2:	fb09 aa04 	mla	sl, r9, r4, sl
 801d4b6:	7874      	ldrb	r4, [r6, #1]
 801d4b8:	436a      	muls	r2, r5
 801d4ba:	7835      	ldrb	r5, [r6, #0]
 801d4bc:	fb00 aa04 	mla	sl, r0, r4, sl
 801d4c0:	fb09 2207 	mla	r2, r9, r7, r2
 801d4c4:	785c      	ldrb	r4, [r3, #1]
 801d4c6:	781b      	ldrb	r3, [r3, #0]
 801d4c8:	fb00 2005 	mla	r0, r0, r5, r2
 801d4cc:	fb0b a404 	mla	r4, fp, r4, sl
 801d4d0:	fb0b 0b03 	mla	fp, fp, r3, r0
 801d4d4:	9b02      	ldr	r3, [sp, #8]
 801d4d6:	fb11 fa08 	smulbb	sl, r1, r8
 801d4da:	fa1f fc8c 	uxth.w	ip, ip
 801d4de:	fb13 f808 	smulbb	r8, r3, r8
 801d4e2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801d4e6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801d4ea:	fb04 a40e 	mla	r4, r4, lr, sl
 801d4ee:	f10c 0301 	add.w	r3, ip, #1
 801d4f2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801d4f6:	fa1f fe8e 	uxth.w	lr, lr
 801d4fa:	b2a4      	uxth	r4, r4
 801d4fc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d500:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801d504:	f104 0a01 	add.w	sl, r4, #1
 801d508:	f10e 0c01 	add.w	ip, lr, #1
 801d50c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d510:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d514:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d518:	0964      	lsrs	r4, r4, #5
 801d51a:	ea4c 0c03 	orr.w	ip, ip, r3
 801d51e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d522:	9b03      	ldr	r3, [sp, #12]
 801d524:	ea4c 0c04 	orr.w	ip, ip, r4
 801d528:	f8a3 c000 	strh.w	ip, [r3]
 801d52c:	b007      	add	sp, #28
 801d52e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d532:	af05      	add	r7, sp, #20
 801d534:	e756      	b.n	801d3e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801d536:	ad05      	add	r5, sp, #20
 801d538:	462f      	mov	r7, r5
 801d53a:	e761      	b.n	801d400 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801d53c:	ad05      	add	r5, sp, #20
 801d53e:	e75f      	b.n	801d400 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801d540:	ae05      	add	r6, sp, #20
 801d542:	e772      	b.n	801d42a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801d544:	ab05      	add	r3, sp, #20
 801d546:	461e      	mov	r6, r3
 801d548:	e77e      	b.n	801d448 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801d54a:	ab05      	add	r3, sp, #20
 801d54c:	e77c      	b.n	801d448 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801d54e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d54e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d552:	b095      	sub	sp, #84	@ 0x54
 801d554:	9212      	str	r2, [sp, #72]	@ 0x48
 801d556:	9309      	str	r3, [sp, #36]	@ 0x24
 801d558:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d55a:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801d55e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d560:	910e      	str	r1, [sp, #56]	@ 0x38
 801d562:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801d566:	9013      	str	r0, [sp, #76]	@ 0x4c
 801d568:	6850      	ldr	r0, [r2, #4]
 801d56a:	6812      	ldr	r2, [r2, #0]
 801d56c:	fb00 1303 	mla	r3, r0, r3, r1
 801d570:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d574:	930a      	str	r3, [sp, #40]	@ 0x28
 801d576:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d578:	681b      	ldr	r3, [r3, #0]
 801d57a:	930d      	str	r3, [sp, #52]	@ 0x34
 801d57c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d57e:	685c      	ldr	r4, [r3, #4]
 801d580:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d582:	43db      	mvns	r3, r3
 801d584:	b2db      	uxtb	r3, r3
 801d586:	3404      	adds	r4, #4
 801d588:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d58a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d58c:	2b00      	cmp	r3, #0
 801d58e:	dc03      	bgt.n	801d598 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d590:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801d592:	2b00      	cmp	r3, #0
 801d594:	f340 8255 	ble.w	801da42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801d598:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d59a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d59e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d5a2:	1e48      	subs	r0, r1, #1
 801d5a4:	1e55      	subs	r5, r2, #1
 801d5a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d5a8:	2b00      	cmp	r3, #0
 801d5aa:	f340 80f9 	ble.w	801d7a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d5ae:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801d5b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d5b2:	1436      	asrs	r6, r6, #16
 801d5b4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d5b8:	d406      	bmi.n	801d5c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d5ba:	4286      	cmp	r6, r0
 801d5bc:	da04      	bge.n	801d5c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d5be:	2b00      	cmp	r3, #0
 801d5c0:	db02      	blt.n	801d5c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d5c2:	42ab      	cmp	r3, r5
 801d5c4:	f2c0 80ed 	blt.w	801d7a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801d5c8:	3601      	adds	r6, #1
 801d5ca:	f100 80da 	bmi.w	801d782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d5ce:	42b1      	cmp	r1, r6
 801d5d0:	f2c0 80d7 	blt.w	801d782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d5d4:	3301      	adds	r3, #1
 801d5d6:	f100 80d4 	bmi.w	801d782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d5da:	429a      	cmp	r2, r3
 801d5dc:	f2c0 80d1 	blt.w	801d782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d5e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d5e2:	9311      	str	r3, [sp, #68]	@ 0x44
 801d5e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d5e6:	930c      	str	r3, [sp, #48]	@ 0x30
 801d5e8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d5ea:	2b00      	cmp	r3, #0
 801d5ec:	f340 80fa 	ble.w	801d7e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801d5f0:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801d5f2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d5f4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801d5f6:	68c6      	ldr	r6, [r0, #12]
 801d5f8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d5fa:	141d      	asrs	r5, r3, #16
 801d5fc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801d600:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d602:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801d604:	1400      	asrs	r0, r0, #16
 801d606:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801d60a:	6892      	ldr	r2, [r2, #8]
 801d60c:	f100 813e 	bmi.w	801d88c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d610:	1e57      	subs	r7, r2, #1
 801d612:	42b8      	cmp	r0, r7
 801d614:	f280 813a 	bge.w	801d88c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d618:	2d00      	cmp	r5, #0
 801d61a:	f2c0 8137 	blt.w	801d88c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d61e:	1e77      	subs	r7, r6, #1
 801d620:	42bd      	cmp	r5, r7
 801d622:	f280 8133 	bge.w	801d88c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d626:	b212      	sxth	r2, r2
 801d628:	fb05 0002 	mla	r0, r5, r2, r0
 801d62c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d62e:	f815 a000 	ldrb.w	sl, [r5, r0]
 801d632:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801d636:	182e      	adds	r6, r5, r0
 801d638:	eb04 050a 	add.w	r5, r4, sl
 801d63c:	2b00      	cmp	r3, #0
 801d63e:	f000 8117 	beq.w	801d870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801d642:	f896 c001 	ldrb.w	ip, [r6, #1]
 801d646:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d64a:	44a4      	add	ip, r4
 801d64c:	2900      	cmp	r1, #0
 801d64e:	f000 8117 	beq.w	801d880 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801d652:	18b0      	adds	r0, r6, r2
 801d654:	5cb2      	ldrb	r2, [r6, r2]
 801d656:	7840      	ldrb	r0, [r0, #1]
 801d658:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d65c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d660:	4422      	add	r2, r4
 801d662:	4420      	add	r0, r4
 801d664:	b29b      	uxth	r3, r3
 801d666:	b289      	uxth	r1, r1
 801d668:	fb03 f901 	mul.w	r9, r3, r1
 801d66c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d670:	011b      	lsls	r3, r3, #4
 801d672:	b289      	uxth	r1, r1
 801d674:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801d678:	f895 b002 	ldrb.w	fp, [r5, #2]
 801d67c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801d67e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801d682:	f8b6 e000 	ldrh.w	lr, [r6]
 801d686:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801d68a:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801d68e:	eba3 0309 	sub.w	r3, r3, r9
 801d692:	b29b      	uxth	r3, r3
 801d694:	eba8 0801 	sub.w	r8, r8, r1
 801d698:	fa1f f888 	uxth.w	r8, r8
 801d69c:	435f      	muls	r7, r3
 801d69e:	fb08 770b 	mla	r7, r8, fp, r7
 801d6a2:	f892 b002 	ldrb.w	fp, [r2, #2]
 801d6a6:	9310      	str	r3, [sp, #64]	@ 0x40
 801d6a8:	fb01 770b 	mla	r7, r1, fp, r7
 801d6ac:	f890 b002 	ldrb.w	fp, [r0, #2]
 801d6b0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d6b2:	fb09 770b 	mla	r7, r9, fp, r7
 801d6b6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801d6ba:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801d6be:	fb1b fb03 	smulbb	fp, fp, r3
 801d6c2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d6c6:	fb07 b706 	mla	r7, r7, r6, fp
 801d6ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d6cc:	f895 b001 	ldrb.w	fp, [r5, #1]
 801d6d0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801d6d4:	f89c c000 	ldrb.w	ip, [ip]
 801d6d8:	435d      	muls	r5, r3
 801d6da:	fb08 550b 	mla	r5, r8, fp, r5
 801d6de:	f892 b001 	ldrb.w	fp, [r2, #1]
 801d6e2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d6e4:	fb01 550b 	mla	r5, r1, fp, r5
 801d6e8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801d6ec:	fb09 550b 	mla	r5, r9, fp, r5
 801d6f0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801d6f4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801d6f8:	fb1b fb03 	smulbb	fp, fp, r3
 801d6fc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d6fe:	fb03 f30c 	mul.w	r3, r3, ip
 801d702:	f892 c000 	ldrb.w	ip, [r2]
 801d706:	fb08 330a 	mla	r3, r8, sl, r3
 801d70a:	fb01 330c 	mla	r3, r1, ip, r3
 801d70e:	f890 c000 	ldrb.w	ip, [r0]
 801d712:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d716:	fb09 3c0c 	mla	ip, r9, ip, r3
 801d71a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d71c:	fa5f fe8e 	uxtb.w	lr, lr
 801d720:	b2bf      	uxth	r7, r7
 801d722:	fb1e fe03 	smulbb	lr, lr, r3
 801d726:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801d72a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801d72e:	fb05 b506 	mla	r5, r5, r6, fp
 801d732:	1c7b      	adds	r3, r7, #1
 801d734:	fb0c e606 	mla	r6, ip, r6, lr
 801d738:	b2ad      	uxth	r5, r5
 801d73a:	b2b6      	uxth	r6, r6
 801d73c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801d740:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801d744:	f105 0b01 	add.w	fp, r5, #1
 801d748:	1c77      	adds	r7, r6, #1
 801d74a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801d74e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801d752:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d756:	096d      	lsrs	r5, r5, #5
 801d758:	431f      	orrs	r7, r3
 801d75a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d75e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d760:	433d      	orrs	r5, r7
 801d762:	801d      	strh	r5, [r3, #0]
 801d764:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d766:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d768:	3302      	adds	r3, #2
 801d76a:	930c      	str	r3, [sp, #48]	@ 0x30
 801d76c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d76e:	4413      	add	r3, r2
 801d770:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d772:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d774:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d776:	4413      	add	r3, r2
 801d778:	9320      	str	r3, [sp, #128]	@ 0x80
 801d77a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d77c:	3b01      	subs	r3, #1
 801d77e:	9311      	str	r3, [sp, #68]	@ 0x44
 801d780:	e732      	b.n	801d5e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d782:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d784:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801d786:	4433      	add	r3, r6
 801d788:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d78a:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801d78c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d78e:	4433      	add	r3, r6
 801d790:	9320      	str	r3, [sp, #128]	@ 0x80
 801d792:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d794:	3b01      	subs	r3, #1
 801d796:	9309      	str	r3, [sp, #36]	@ 0x24
 801d798:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d79a:	3302      	adds	r3, #2
 801d79c:	930a      	str	r3, [sp, #40]	@ 0x28
 801d79e:	e702      	b.n	801d5a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d7a0:	d027      	beq.n	801d7f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801d7a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d7a4:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801d7a6:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801d7a8:	3b01      	subs	r3, #1
 801d7aa:	fb00 5003 	mla	r0, r0, r3, r5
 801d7ae:	1400      	asrs	r0, r0, #16
 801d7b0:	f53f af16 	bmi.w	801d5e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d7b4:	3901      	subs	r1, #1
 801d7b6:	4288      	cmp	r0, r1
 801d7b8:	f6bf af12 	bge.w	801d5e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d7bc:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801d7be:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801d7c0:	fb01 0303 	mla	r3, r1, r3, r0
 801d7c4:	141b      	asrs	r3, r3, #16
 801d7c6:	f53f af0b 	bmi.w	801d5e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d7ca:	3a01      	subs	r2, #1
 801d7cc:	4293      	cmp	r3, r2
 801d7ce:	f6bf af07 	bge.w	801d5e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d7d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d7d4:	9311      	str	r3, [sp, #68]	@ 0x44
 801d7d6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801d7da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d7dc:	930c      	str	r3, [sp, #48]	@ 0x30
 801d7de:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d7e0:	2b00      	cmp	r3, #0
 801d7e2:	dc70      	bgt.n	801d8c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801d7e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d7e6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d7e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d7ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d7f0:	930a      	str	r3, [sp, #40]	@ 0x28
 801d7f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d7f4:	2b00      	cmp	r3, #0
 801d7f6:	f340 8124 	ble.w	801da42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801d7fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d7fe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d802:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d806:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d808:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d80c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d810:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d814:	eef0 6a62 	vmov.f32	s13, s5
 801d818:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d81c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d820:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d824:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801d828:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d82c:	eef0 6a43 	vmov.f32	s13, s6
 801d830:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d834:	ee12 2a90 	vmov	r2, s5
 801d838:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d83c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d840:	ee13 2a10 	vmov	r2, s6
 801d844:	9321      	str	r3, [sp, #132]	@ 0x84
 801d846:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d848:	fb92 f3f3 	sdiv	r3, r2, r3
 801d84c:	9322      	str	r3, [sp, #136]	@ 0x88
 801d84e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d850:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801d852:	3b01      	subs	r3, #1
 801d854:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d858:	930e      	str	r3, [sp, #56]	@ 0x38
 801d85a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d85c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801d860:	bf08      	it	eq
 801d862:	4613      	moveq	r3, r2
 801d864:	9309      	str	r3, [sp, #36]	@ 0x24
 801d866:	eeb0 3a67 	vmov.f32	s6, s15
 801d86a:	eef0 2a47 	vmov.f32	s5, s14
 801d86e:	e68c      	b.n	801d58a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d870:	b149      	cbz	r1, 801d886 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801d872:	5cb2      	ldrb	r2, [r6, r2]
 801d874:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d878:	4422      	add	r2, r4
 801d87a:	4628      	mov	r0, r5
 801d87c:	46ac      	mov	ip, r5
 801d87e:	e6f1      	b.n	801d664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d880:	4628      	mov	r0, r5
 801d882:	462a      	mov	r2, r5
 801d884:	e6ee      	b.n	801d664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d886:	4628      	mov	r0, r5
 801d888:	462a      	mov	r2, r5
 801d88a:	e7f7      	b.n	801d87c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801d88c:	1c47      	adds	r7, r0, #1
 801d88e:	f53f af69 	bmi.w	801d764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d892:	42ba      	cmp	r2, r7
 801d894:	f6ff af66 	blt.w	801d764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d898:	1c6f      	adds	r7, r5, #1
 801d89a:	f53f af63 	bmi.w	801d764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d89e:	42be      	cmp	r6, r7
 801d8a0:	f6ff af60 	blt.w	801d764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d8a4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801d8a6:	9002      	str	r0, [sp, #8]
 801d8a8:	b236      	sxth	r6, r6
 801d8aa:	b212      	sxth	r2, r2
 801d8ac:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801d8b0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801d8b4:	9200      	str	r2, [sp, #0]
 801d8b6:	9601      	str	r6, [sp, #4]
 801d8b8:	4623      	mov	r3, r4
 801d8ba:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801d8be:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801d8c0:	f7ff fd59 	bl	801d376 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801d8c4:	e74e      	b.n	801d764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d8c6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801d8c8:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801d8ca:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801d8cc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d8ce:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801d8d2:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801d8d4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801d8d8:	142d      	asrs	r5, r5, #16
 801d8da:	1400      	asrs	r0, r0, #16
 801d8dc:	fb02 5000 	mla	r0, r2, r0, r5
 801d8e0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d8e2:	f815 9000 	ldrb.w	r9, [r5, r0]
 801d8e6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801d8ea:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801d8ee:	182e      	adds	r6, r5, r0
 801d8f0:	eb04 0509 	add.w	r5, r4, r9
 801d8f4:	2b00      	cmp	r3, #0
 801d8f6:	f000 8096 	beq.w	801da26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801d8fa:	7877      	ldrb	r7, [r6, #1]
 801d8fc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801d900:	4427      	add	r7, r4
 801d902:	2900      	cmp	r1, #0
 801d904:	f000 8097 	beq.w	801da36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801d908:	18b0      	adds	r0, r6, r2
 801d90a:	5cb2      	ldrb	r2, [r6, r2]
 801d90c:	7840      	ldrb	r0, [r0, #1]
 801d90e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d912:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d916:	4422      	add	r2, r4
 801d918:	4420      	add	r0, r4
 801d91a:	b29b      	uxth	r3, r3
 801d91c:	b289      	uxth	r1, r1
 801d91e:	fb03 f801 	mul.w	r8, r3, r1
 801d922:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801d924:	f895 b002 	ldrb.w	fp, [r5, #2]
 801d928:	f8b6 c000 	ldrh.w	ip, [r6]
 801d92c:	78be      	ldrb	r6, [r7, #2]
 801d92e:	f814 9009 	ldrb.w	r9, [r4, r9]
 801d932:	011b      	lsls	r3, r3, #4
 801d934:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801d938:	b289      	uxth	r1, r1
 801d93a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801d93e:	eba3 0308 	sub.w	r3, r3, r8
 801d942:	b29b      	uxth	r3, r3
 801d944:	ebae 0e01 	sub.w	lr, lr, r1
 801d948:	fa1f fe8e 	uxth.w	lr, lr
 801d94c:	435e      	muls	r6, r3
 801d94e:	fb0e 660b 	mla	r6, lr, fp, r6
 801d952:	f892 b002 	ldrb.w	fp, [r2, #2]
 801d956:	9310      	str	r3, [sp, #64]	@ 0x40
 801d958:	fb01 660b 	mla	r6, r1, fp, r6
 801d95c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801d960:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d962:	fb08 660b 	mla	r6, r8, fp, r6
 801d966:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801d96a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801d96e:	fb1b fb03 	smulbb	fp, fp, r3
 801d972:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801d976:	fb06 b60a 	mla	r6, r6, sl, fp
 801d97a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d97c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801d980:	787d      	ldrb	r5, [r7, #1]
 801d982:	783f      	ldrb	r7, [r7, #0]
 801d984:	435d      	muls	r5, r3
 801d986:	fb0e 550b 	mla	r5, lr, fp, r5
 801d98a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801d98e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d990:	fb01 550b 	mla	r5, r1, fp, r5
 801d994:	f890 b001 	ldrb.w	fp, [r0, #1]
 801d998:	fb08 550b 	mla	r5, r8, fp, r5
 801d99c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801d9a0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801d9a4:	fb1b fb03 	smulbb	fp, fp, r3
 801d9a8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d9aa:	437b      	muls	r3, r7
 801d9ac:	7817      	ldrb	r7, [r2, #0]
 801d9ae:	fb0e 3309 	mla	r3, lr, r9, r3
 801d9b2:	fb01 3307 	mla	r3, r1, r7, r3
 801d9b6:	7807      	ldrb	r7, [r0, #0]
 801d9b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d9bc:	fb08 3707 	mla	r7, r8, r7, r3
 801d9c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d9c2:	fa5f fc8c 	uxtb.w	ip, ip
 801d9c6:	fb1c fc03 	smulbb	ip, ip, r3
 801d9ca:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801d9ce:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d9d2:	fb05 b50a 	mla	r5, r5, sl, fp
 801d9d6:	fb07 c70a 	mla	r7, r7, sl, ip
 801d9da:	b2b6      	uxth	r6, r6
 801d9dc:	b2ad      	uxth	r5, r5
 801d9de:	b2bf      	uxth	r7, r7
 801d9e0:	1c73      	adds	r3, r6, #1
 801d9e2:	1c7a      	adds	r2, r7, #1
 801d9e4:	f105 0b01 	add.w	fp, r5, #1
 801d9e8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801d9ec:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d9f0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801d9f4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d9f8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801d9fc:	096d      	lsrs	r5, r5, #5
 801d9fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801da00:	4316      	orrs	r6, r2
 801da02:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801da06:	432e      	orrs	r6, r5
 801da08:	f823 6b02 	strh.w	r6, [r3], #2
 801da0c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801da0e:	930c      	str	r3, [sp, #48]	@ 0x30
 801da10:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801da12:	4413      	add	r3, r2
 801da14:	931f      	str	r3, [sp, #124]	@ 0x7c
 801da16:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801da18:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801da1a:	4413      	add	r3, r2
 801da1c:	9320      	str	r3, [sp, #128]	@ 0x80
 801da1e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801da20:	3b01      	subs	r3, #1
 801da22:	9311      	str	r3, [sp, #68]	@ 0x44
 801da24:	e6db      	b.n	801d7de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801da26:	b149      	cbz	r1, 801da3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801da28:	5cb2      	ldrb	r2, [r6, r2]
 801da2a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801da2e:	4422      	add	r2, r4
 801da30:	4628      	mov	r0, r5
 801da32:	462f      	mov	r7, r5
 801da34:	e771      	b.n	801d91a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801da36:	4628      	mov	r0, r5
 801da38:	462a      	mov	r2, r5
 801da3a:	e76e      	b.n	801d91a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801da3c:	4628      	mov	r0, r5
 801da3e:	462a      	mov	r2, r5
 801da40:	e7f7      	b.n	801da32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801da42:	b015      	add	sp, #84	@ 0x54
 801da44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801da48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801da48:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da4c:	880f      	ldrh	r7, [r1, #0]
 801da4e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801da52:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801da56:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801da5a:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801da5e:	023c      	lsls	r4, r7, #8
 801da60:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801da64:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801da68:	017c      	lsls	r4, r7, #5
 801da6a:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801da6e:	00ff      	lsls	r7, r7, #3
 801da70:	ea4b 0404 	orr.w	r4, fp, r4
 801da74:	b2ff      	uxtb	r7, r7
 801da76:	fb05 ca0e 	mla	sl, r5, lr, ip
 801da7a:	4327      	orrs	r7, r4
 801da7c:	2d00      	cmp	r5, #0
 801da7e:	eb02 080a 	add.w	r8, r2, sl
 801da82:	9701      	str	r7, [sp, #4]
 801da84:	db7e      	blt.n	801db84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801da86:	45a9      	cmp	r9, r5
 801da88:	dd7c      	ble.n	801db84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801da8a:	f1bc 0f00 	cmp.w	ip, #0
 801da8e:	db77      	blt.n	801db80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801da90:	45e6      	cmp	lr, ip
 801da92:	dd75      	ble.n	801db80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801da94:	f812 700a 	ldrb.w	r7, [r2, sl]
 801da98:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801da9c:	441f      	add	r7, r3
 801da9e:	f11c 0201 	adds.w	r2, ip, #1
 801daa2:	d472      	bmi.n	801db8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801daa4:	4596      	cmp	lr, r2
 801daa6:	dd70      	ble.n	801db8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801daa8:	2800      	cmp	r0, #0
 801daaa:	d06e      	beq.n	801db8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801daac:	f898 4001 	ldrb.w	r4, [r8, #1]
 801dab0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801dab4:	441c      	add	r4, r3
 801dab6:	3501      	adds	r5, #1
 801dab8:	d46b      	bmi.n	801db92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801daba:	45a9      	cmp	r9, r5
 801dabc:	dd69      	ble.n	801db92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801dabe:	2e00      	cmp	r6, #0
 801dac0:	d067      	beq.n	801db92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801dac2:	f1bc 0f00 	cmp.w	ip, #0
 801dac6:	db62      	blt.n	801db8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801dac8:	45e6      	cmp	lr, ip
 801daca:	dd60      	ble.n	801db8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801dacc:	f818 500e 	ldrb.w	r5, [r8, lr]
 801dad0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801dad4:	441d      	add	r5, r3
 801dad6:	f11c 0201 	adds.w	r2, ip, #1
 801dada:	d45d      	bmi.n	801db98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801dadc:	4596      	cmp	lr, r2
 801dade:	dd5b      	ble.n	801db98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801dae0:	2800      	cmp	r0, #0
 801dae2:	d059      	beq.n	801db98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801dae4:	44c6      	add	lr, r8
 801dae6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801daea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801daee:	4413      	add	r3, r2
 801daf0:	b280      	uxth	r0, r0
 801daf2:	b2b2      	uxth	r2, r6
 801daf4:	fb00 f602 	mul.w	r6, r0, r2
 801daf8:	0100      	lsls	r0, r0, #4
 801dafa:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801dafe:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801db02:	1b80      	subs	r0, r0, r6
 801db04:	fa1f fc82 	uxth.w	ip, r2
 801db08:	b282      	uxth	r2, r0
 801db0a:	78a0      	ldrb	r0, [r4, #2]
 801db0c:	f897 e002 	ldrb.w	lr, [r7, #2]
 801db10:	f897 9000 	ldrb.w	r9, [r7]
 801db14:	787f      	ldrb	r7, [r7, #1]
 801db16:	eba8 080c 	sub.w	r8, r8, ip
 801db1a:	fa1f f888 	uxth.w	r8, r8
 801db1e:	4350      	muls	r0, r2
 801db20:	fb08 0e0e 	mla	lr, r8, lr, r0
 801db24:	78a8      	ldrb	r0, [r5, #2]
 801db26:	fb0c e000 	mla	r0, ip, r0, lr
 801db2a:	f893 e002 	ldrb.w	lr, [r3, #2]
 801db2e:	fb06 0e0e 	mla	lr, r6, lr, r0
 801db32:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801db36:	f894 e000 	ldrb.w	lr, [r4]
 801db3a:	fb02 fe0e 	mul.w	lr, r2, lr
 801db3e:	fb08 e909 	mla	r9, r8, r9, lr
 801db42:	f895 e000 	ldrb.w	lr, [r5]
 801db46:	fb0c 990e 	mla	r9, ip, lr, r9
 801db4a:	f893 e000 	ldrb.w	lr, [r3]
 801db4e:	785b      	ldrb	r3, [r3, #1]
 801db50:	fb06 9e0e 	mla	lr, r6, lr, r9
 801db54:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801db58:	ea4e 0e00 	orr.w	lr, lr, r0
 801db5c:	7860      	ldrb	r0, [r4, #1]
 801db5e:	4350      	muls	r0, r2
 801db60:	786a      	ldrb	r2, [r5, #1]
 801db62:	fb08 0007 	mla	r0, r8, r7, r0
 801db66:	fb0c 0202 	mla	r2, ip, r2, r0
 801db6a:	fb06 2303 	mla	r3, r6, r3, r2
 801db6e:	095b      	lsrs	r3, r3, #5
 801db70:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801db74:	ea4e 0303 	orr.w	r3, lr, r3
 801db78:	800b      	strh	r3, [r1, #0]
 801db7a:	b003      	add	sp, #12
 801db7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801db80:	af01      	add	r7, sp, #4
 801db82:	e78c      	b.n	801da9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801db84:	ac01      	add	r4, sp, #4
 801db86:	4627      	mov	r7, r4
 801db88:	e795      	b.n	801dab6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801db8a:	ac01      	add	r4, sp, #4
 801db8c:	e793      	b.n	801dab6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801db8e:	ad01      	add	r5, sp, #4
 801db90:	e7a1      	b.n	801dad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801db92:	ab01      	add	r3, sp, #4
 801db94:	461d      	mov	r5, r3
 801db96:	e7ab      	b.n	801daf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801db98:	ab01      	add	r3, sp, #4
 801db9a:	e7a9      	b.n	801daf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801db9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801db9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dba0:	b08f      	sub	sp, #60	@ 0x3c
 801dba2:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801dba6:	920c      	str	r2, [sp, #48]	@ 0x30
 801dba8:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801dbaa:	910a      	str	r1, [sp, #40]	@ 0x28
 801dbac:	9306      	str	r3, [sp, #24]
 801dbae:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801dbb2:	900d      	str	r0, [sp, #52]	@ 0x34
 801dbb4:	6850      	ldr	r0, [r2, #4]
 801dbb6:	6812      	ldr	r2, [r2, #0]
 801dbb8:	fb00 1303 	mla	r3, r0, r3, r1
 801dbbc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dbc0:	9307      	str	r3, [sp, #28]
 801dbc2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dbc4:	681b      	ldr	r3, [r3, #0]
 801dbc6:	9308      	str	r3, [sp, #32]
 801dbc8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dbca:	685c      	ldr	r4, [r3, #4]
 801dbcc:	3404      	adds	r4, #4
 801dbce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dbd0:	2b00      	cmp	r3, #0
 801dbd2:	dc03      	bgt.n	801dbdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801dbd4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801dbd6:	2b00      	cmp	r3, #0
 801dbd8:	f340 81d6 	ble.w	801df88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801dbdc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dbde:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dbe2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dbe6:	1e48      	subs	r0, r1, #1
 801dbe8:	1e56      	subs	r6, r2, #1
 801dbea:	9b06      	ldr	r3, [sp, #24]
 801dbec:	2b00      	cmp	r3, #0
 801dbee:	f340 80b7 	ble.w	801dd60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801dbf2:	ea5f 472b 	movs.w	r7, fp, asr #16
 801dbf6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801dbfa:	d406      	bmi.n	801dc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801dbfc:	4287      	cmp	r7, r0
 801dbfe:	da04      	bge.n	801dc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801dc00:	2b00      	cmp	r3, #0
 801dc02:	db02      	blt.n	801dc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801dc04:	42b3      	cmp	r3, r6
 801dc06:	f2c0 80ac 	blt.w	801dd62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801dc0a:	3701      	adds	r7, #1
 801dc0c:	f100 809d 	bmi.w	801dd4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801dc10:	42b9      	cmp	r1, r7
 801dc12:	f2c0 809a 	blt.w	801dd4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801dc16:	3301      	adds	r3, #1
 801dc18:	f100 8097 	bmi.w	801dd4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801dc1c:	429a      	cmp	r2, r3
 801dc1e:	f2c0 8094 	blt.w	801dd4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801dc22:	9b06      	ldr	r3, [sp, #24]
 801dc24:	930b      	str	r3, [sp, #44]	@ 0x2c
 801dc26:	9b07      	ldr	r3, [sp, #28]
 801dc28:	9309      	str	r3, [sp, #36]	@ 0x24
 801dc2a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dc2c:	2b00      	cmp	r3, #0
 801dc2e:	f340 80b5 	ble.w	801dd9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc32:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801dc34:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801dc36:	68c7      	ldr	r7, [r0, #12]
 801dc38:	6892      	ldr	r2, [r2, #8]
 801dc3a:	ea5f 402b 	movs.w	r0, fp, asr #16
 801dc3e:	ea4f 4625 	mov.w	r6, r5, asr #16
 801dc42:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801dc46:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801dc4a:	f100 80fb 	bmi.w	801de44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801dc4e:	f102 3cff 	add.w	ip, r2, #4294967295
 801dc52:	4560      	cmp	r0, ip
 801dc54:	f280 80f6 	bge.w	801de44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801dc58:	2e00      	cmp	r6, #0
 801dc5a:	f2c0 80f3 	blt.w	801de44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801dc5e:	f107 3cff 	add.w	ip, r7, #4294967295
 801dc62:	4566      	cmp	r6, ip
 801dc64:	f280 80ee 	bge.w	801de44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801dc68:	b212      	sxth	r2, r2
 801dc6a:	fb06 0002 	mla	r0, r6, r2, r0
 801dc6e:	9e08      	ldr	r6, [sp, #32]
 801dc70:	1837      	adds	r7, r6, r0
 801dc72:	5c30      	ldrb	r0, [r6, r0]
 801dc74:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801dc78:	eb04 0c08 	add.w	ip, r4, r8
 801dc7c:	2b00      	cmp	r3, #0
 801dc7e:	f000 80d3 	beq.w	801de28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801dc82:	787e      	ldrb	r6, [r7, #1]
 801dc84:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801dc88:	4426      	add	r6, r4
 801dc8a:	2900      	cmp	r1, #0
 801dc8c:	f000 80d4 	beq.w	801de38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801dc90:	18b8      	adds	r0, r7, r2
 801dc92:	5cba      	ldrb	r2, [r7, r2]
 801dc94:	7840      	ldrb	r0, [r0, #1]
 801dc96:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801dc9a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801dc9e:	4422      	add	r2, r4
 801dca0:	4420      	add	r0, r4
 801dca2:	b29b      	uxth	r3, r3
 801dca4:	b289      	uxth	r1, r1
 801dca6:	fb03 f901 	mul.w	r9, r3, r1
 801dcaa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801dcae:	011b      	lsls	r3, r3, #4
 801dcb0:	b289      	uxth	r1, r1
 801dcb2:	78b7      	ldrb	r7, [r6, #2]
 801dcb4:	f89c a002 	ldrb.w	sl, [ip, #2]
 801dcb8:	f89c c001 	ldrb.w	ip, [ip, #1]
 801dcbc:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801dcc0:	eba3 0309 	sub.w	r3, r3, r9
 801dcc4:	b29b      	uxth	r3, r3
 801dcc6:	ebae 0e01 	sub.w	lr, lr, r1
 801dcca:	fa1f fe8e 	uxth.w	lr, lr
 801dcce:	435f      	muls	r7, r3
 801dcd0:	fb0e 770a 	mla	r7, lr, sl, r7
 801dcd4:	f892 a002 	ldrb.w	sl, [r2, #2]
 801dcd8:	fb01 770a 	mla	r7, r1, sl, r7
 801dcdc:	f890 a002 	ldrb.w	sl, [r0, #2]
 801dce0:	fb09 7a0a 	mla	sl, r9, sl, r7
 801dce4:	f814 7008 	ldrb.w	r7, [r4, r8]
 801dce8:	f896 8000 	ldrb.w	r8, [r6]
 801dcec:	7876      	ldrb	r6, [r6, #1]
 801dcee:	fb03 f808 	mul.w	r8, r3, r8
 801dcf2:	fb0e 8807 	mla	r8, lr, r7, r8
 801dcf6:	7817      	ldrb	r7, [r2, #0]
 801dcf8:	fb01 8807 	mla	r8, r1, r7, r8
 801dcfc:	7807      	ldrb	r7, [r0, #0]
 801dcfe:	fb09 8707 	mla	r7, r9, r7, r8
 801dd02:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801dd06:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801dd0a:	ea47 070a 	orr.w	r7, r7, sl
 801dd0e:	4373      	muls	r3, r6
 801dd10:	f892 a001 	ldrb.w	sl, [r2, #1]
 801dd14:	fb0e 330c 	mla	r3, lr, ip, r3
 801dd18:	fb01 310a 	mla	r1, r1, sl, r3
 801dd1c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801dd20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dd22:	fb09 1a0a 	mla	sl, r9, sl, r1
 801dd26:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dd2a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801dd2e:	ea47 070a 	orr.w	r7, r7, sl
 801dd32:	801f      	strh	r7, [r3, #0]
 801dd34:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dd36:	3302      	adds	r3, #2
 801dd38:	9309      	str	r3, [sp, #36]	@ 0x24
 801dd3a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801dd3c:	449b      	add	fp, r3
 801dd3e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dd40:	441d      	add	r5, r3
 801dd42:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dd44:	3b01      	subs	r3, #1
 801dd46:	930b      	str	r3, [sp, #44]	@ 0x2c
 801dd48:	e76f      	b.n	801dc2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801dd4a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801dd4c:	449b      	add	fp, r3
 801dd4e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dd50:	441d      	add	r5, r3
 801dd52:	9b06      	ldr	r3, [sp, #24]
 801dd54:	3b01      	subs	r3, #1
 801dd56:	9306      	str	r3, [sp, #24]
 801dd58:	9b07      	ldr	r3, [sp, #28]
 801dd5a:	3302      	adds	r3, #2
 801dd5c:	9307      	str	r3, [sp, #28]
 801dd5e:	e744      	b.n	801dbea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801dd60:	d023      	beq.n	801ddaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801dd62:	9b06      	ldr	r3, [sp, #24]
 801dd64:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801dd66:	3b01      	subs	r3, #1
 801dd68:	fb00 b003 	mla	r0, r0, r3, fp
 801dd6c:	1400      	asrs	r0, r0, #16
 801dd6e:	f53f af58 	bmi.w	801dc22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801dd72:	3901      	subs	r1, #1
 801dd74:	4288      	cmp	r0, r1
 801dd76:	f6bf af54 	bge.w	801dc22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801dd7a:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801dd7c:	fb01 5303 	mla	r3, r1, r3, r5
 801dd80:	141b      	asrs	r3, r3, #16
 801dd82:	f53f af4e 	bmi.w	801dc22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801dd86:	3a01      	subs	r2, #1
 801dd88:	4293      	cmp	r3, r2
 801dd8a:	f6bf af4a 	bge.w	801dc22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801dd8e:	9b06      	ldr	r3, [sp, #24]
 801dd90:	9309      	str	r3, [sp, #36]	@ 0x24
 801dd92:	9b07      	ldr	r3, [sp, #28]
 801dd94:	930b      	str	r3, [sp, #44]	@ 0x2c
 801dd96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dd98:	2b00      	cmp	r3, #0
 801dd9a:	dc70      	bgt.n	801de7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801dd9c:	9b06      	ldr	r3, [sp, #24]
 801dd9e:	9a07      	ldr	r2, [sp, #28]
 801dda0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dda4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dda8:	9307      	str	r3, [sp, #28]
 801ddaa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ddac:	2b00      	cmp	r3, #0
 801ddae:	f340 80eb 	ble.w	801df88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ddb2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ddb6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ddba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ddbe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ddc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ddc4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ddc8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ddcc:	eef0 6a62 	vmov.f32	s13, s5
 801ddd0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ddd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ddd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dddc:	ee16 ba90 	vmov	fp, s13
 801dde0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dde4:	eef0 6a43 	vmov.f32	s13, s6
 801dde8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ddec:	ee12 2a90 	vmov	r2, s5
 801ddf0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ddf4:	fb92 f3f3 	sdiv	r3, r2, r3
 801ddf8:	ee13 2a10 	vmov	r2, s6
 801ddfc:	931b      	str	r3, [sp, #108]	@ 0x6c
 801ddfe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801de00:	fb92 f3f3 	sdiv	r3, r2, r3
 801de04:	931c      	str	r3, [sp, #112]	@ 0x70
 801de06:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801de08:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801de0a:	3b01      	subs	r3, #1
 801de0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de10:	930a      	str	r3, [sp, #40]	@ 0x28
 801de12:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801de14:	bf08      	it	eq
 801de16:	4613      	moveq	r3, r2
 801de18:	ee16 5a90 	vmov	r5, s13
 801de1c:	9306      	str	r3, [sp, #24]
 801de1e:	eeb0 3a67 	vmov.f32	s6, s15
 801de22:	eef0 2a47 	vmov.f32	s5, s14
 801de26:	e6d2      	b.n	801dbce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801de28:	b149      	cbz	r1, 801de3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801de2a:	5cba      	ldrb	r2, [r7, r2]
 801de2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801de30:	4422      	add	r2, r4
 801de32:	4660      	mov	r0, ip
 801de34:	4666      	mov	r6, ip
 801de36:	e734      	b.n	801dca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801de38:	4660      	mov	r0, ip
 801de3a:	4662      	mov	r2, ip
 801de3c:	e731      	b.n	801dca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801de3e:	4660      	mov	r0, ip
 801de40:	4662      	mov	r2, ip
 801de42:	e7f7      	b.n	801de34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801de44:	f110 0c01 	adds.w	ip, r0, #1
 801de48:	f53f af74 	bmi.w	801dd34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801de4c:	4562      	cmp	r2, ip
 801de4e:	f6ff af71 	blt.w	801dd34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801de52:	f116 0c01 	adds.w	ip, r6, #1
 801de56:	f53f af6d 	bmi.w	801dd34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801de5a:	4567      	cmp	r7, ip
 801de5c:	f6ff af6a 	blt.w	801dd34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801de60:	b23f      	sxth	r7, r7
 801de62:	b212      	sxth	r2, r2
 801de64:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801de68:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801de6c:	9200      	str	r2, [sp, #0]
 801de6e:	9701      	str	r7, [sp, #4]
 801de70:	4623      	mov	r3, r4
 801de72:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801de76:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801de78:	f7ff fde6 	bl	801da48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801de7c:	e75a      	b.n	801dd34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801de7e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801de80:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801de84:	ea4f 462b 	mov.w	r6, fp, asr #16
 801de88:	1428      	asrs	r0, r5, #16
 801de8a:	fb02 6000 	mla	r0, r2, r0, r6
 801de8e:	9e08      	ldr	r6, [sp, #32]
 801de90:	f816 8000 	ldrb.w	r8, [r6, r0]
 801de94:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801de98:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801de9c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801dea0:	1837      	adds	r7, r6, r0
 801dea2:	eb04 0c08 	add.w	ip, r4, r8
 801dea6:	2b00      	cmp	r3, #0
 801dea8:	d060      	beq.n	801df6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801deaa:	787e      	ldrb	r6, [r7, #1]
 801deac:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801deb0:	4426      	add	r6, r4
 801deb2:	2900      	cmp	r1, #0
 801deb4:	d062      	beq.n	801df7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801deb6:	18b8      	adds	r0, r7, r2
 801deb8:	5cba      	ldrb	r2, [r7, r2]
 801deba:	7840      	ldrb	r0, [r0, #1]
 801debc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801dec0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801dec4:	4422      	add	r2, r4
 801dec6:	4420      	add	r0, r4
 801dec8:	b29b      	uxth	r3, r3
 801deca:	b289      	uxth	r1, r1
 801decc:	fb03 f901 	mul.w	r9, r3, r1
 801ded0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ded4:	011b      	lsls	r3, r3, #4
 801ded6:	b289      	uxth	r1, r1
 801ded8:	78b7      	ldrb	r7, [r6, #2]
 801deda:	f89c a002 	ldrb.w	sl, [ip, #2]
 801dede:	f89c c001 	ldrb.w	ip, [ip, #1]
 801dee2:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801dee6:	eba3 0309 	sub.w	r3, r3, r9
 801deea:	b29b      	uxth	r3, r3
 801deec:	ebae 0e01 	sub.w	lr, lr, r1
 801def0:	fa1f fe8e 	uxth.w	lr, lr
 801def4:	435f      	muls	r7, r3
 801def6:	fb0e 770a 	mla	r7, lr, sl, r7
 801defa:	f892 a002 	ldrb.w	sl, [r2, #2]
 801defe:	fb01 770a 	mla	r7, r1, sl, r7
 801df02:	f890 a002 	ldrb.w	sl, [r0, #2]
 801df06:	fb09 7a0a 	mla	sl, r9, sl, r7
 801df0a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801df0e:	f896 8000 	ldrb.w	r8, [r6]
 801df12:	7876      	ldrb	r6, [r6, #1]
 801df14:	fb03 f808 	mul.w	r8, r3, r8
 801df18:	fb0e 8807 	mla	r8, lr, r7, r8
 801df1c:	7817      	ldrb	r7, [r2, #0]
 801df1e:	fb01 8807 	mla	r8, r1, r7, r8
 801df22:	7807      	ldrb	r7, [r0, #0]
 801df24:	fb09 8707 	mla	r7, r9, r7, r8
 801df28:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801df2c:	4373      	muls	r3, r6
 801df2e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801df32:	7856      	ldrb	r6, [r2, #1]
 801df34:	ea47 070a 	orr.w	r7, r7, sl
 801df38:	fb0e 330c 	mla	r3, lr, ip, r3
 801df3c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801df40:	fb01 3306 	mla	r3, r1, r6, r3
 801df44:	fb09 3a0a 	mla	sl, r9, sl, r3
 801df48:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801df4c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801df4e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801df52:	ea47 070a 	orr.w	r7, r7, sl
 801df56:	f823 7b02 	strh.w	r7, [r3], #2
 801df5a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801df5c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801df5e:	449b      	add	fp, r3
 801df60:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801df62:	441d      	add	r5, r3
 801df64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801df66:	3b01      	subs	r3, #1
 801df68:	9309      	str	r3, [sp, #36]	@ 0x24
 801df6a:	e714      	b.n	801dd96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801df6c:	b149      	cbz	r1, 801df82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801df6e:	5cba      	ldrb	r2, [r7, r2]
 801df70:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801df74:	4422      	add	r2, r4
 801df76:	4660      	mov	r0, ip
 801df78:	4666      	mov	r6, ip
 801df7a:	e7a5      	b.n	801dec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801df7c:	4660      	mov	r0, ip
 801df7e:	4662      	mov	r2, ip
 801df80:	e7a2      	b.n	801dec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801df82:	4660      	mov	r0, ip
 801df84:	4662      	mov	r2, ip
 801df86:	e7f7      	b.n	801df78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801df88:	b00f      	add	sp, #60	@ 0x3c
 801df8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801df8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801df8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df92:	b085      	sub	sp, #20
 801df94:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801df98:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801df9c:	9102      	str	r1, [sp, #8]
 801df9e:	2c00      	cmp	r4, #0
 801dfa0:	fb04 710c 	mla	r1, r4, ip, r7
 801dfa4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801dfa8:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801dfac:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801dfb0:	eb02 0e01 	add.w	lr, r2, r1
 801dfb4:	f2c0 8122 	blt.w	801e1fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801dfb8:	45a0      	cmp	r8, r4
 801dfba:	f340 811f 	ble.w	801e1fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801dfbe:	2f00      	cmp	r7, #0
 801dfc0:	f2c0 811a 	blt.w	801e1f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801dfc4:	45bc      	cmp	ip, r7
 801dfc6:	f340 8117 	ble.w	801e1f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801dfca:	5c52      	ldrb	r2, [r2, r1]
 801dfcc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801dfd0:	1c7a      	adds	r2, r7, #1
 801dfd2:	f100 8116 	bmi.w	801e202 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801dfd6:	4594      	cmp	ip, r2
 801dfd8:	f340 8113 	ble.w	801e202 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801dfdc:	2e00      	cmp	r6, #0
 801dfde:	f000 8112 	beq.w	801e206 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801dfe2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801dfe6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801dfea:	3401      	adds	r4, #1
 801dfec:	f100 810f 	bmi.w	801e20e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801dff0:	45a0      	cmp	r8, r4
 801dff2:	f340 810c 	ble.w	801e20e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801dff6:	2800      	cmp	r0, #0
 801dff8:	f000 810c 	beq.w	801e214 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801dffc:	2f00      	cmp	r7, #0
 801dffe:	f2c0 8104 	blt.w	801e20a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801e002:	45bc      	cmp	ip, r7
 801e004:	f340 8101 	ble.w	801e20a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801e008:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801e00c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801e010:	3701      	adds	r7, #1
 801e012:	f100 8102 	bmi.w	801e21a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801e016:	45bc      	cmp	ip, r7
 801e018:	f340 80ff 	ble.w	801e21a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801e01c:	2e00      	cmp	r6, #0
 801e01e:	f000 80fe 	beq.w	801e21e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801e022:	44f4      	add	ip, lr
 801e024:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801e028:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801e02c:	b2b6      	uxth	r6, r6
 801e02e:	b280      	uxth	r0, r0
 801e030:	fb00 fe06 	mul.w	lr, r0, r6
 801e034:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e038:	0136      	lsls	r6, r6, #4
 801e03a:	eba6 070e 	sub.w	r7, r6, lr
 801e03e:	b280      	uxth	r0, r0
 801e040:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801e044:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e048:	b2bf      	uxth	r7, r7
 801e04a:	1a1b      	subs	r3, r3, r0
 801e04c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e050:	b29b      	uxth	r3, r3
 801e052:	fb0a f607 	mul.w	r6, sl, r7
 801e056:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e05a:	fb0b 6603 	mla	r6, fp, r3, r6
 801e05e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e062:	fb00 6609 	mla	r6, r0, r9, r6
 801e066:	fb0e 6608 	mla	r6, lr, r8, r6
 801e06a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e06e:	9600      	str	r6, [sp, #0]
 801e070:	2e00      	cmp	r6, #0
 801e072:	f000 80be 	beq.w	801e1f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801e076:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e07a:	fb0b fc0c 	mul.w	ip, fp, ip
 801e07e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801e082:	fb0b f505 	mul.w	r5, fp, r5
 801e086:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e08a:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801e08e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e092:	44dc      	add	ip, fp
 801e094:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e098:	9501      	str	r5, [sp, #4]
 801e09a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801e09e:	9503      	str	r5, [sp, #12]
 801e0a0:	9d01      	ldr	r5, [sp, #4]
 801e0a2:	9e02      	ldr	r6, [sp, #8]
 801e0a4:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801e0a8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e0ac:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801e0b0:	fb0a fc0c 	mul.w	ip, sl, ip
 801e0b4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e0b8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e0bc:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e0c0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e0c4:	4465      	add	r5, ip
 801e0c6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e0ca:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801e0ce:	fb09 fc0c 	mul.w	ip, r9, ip
 801e0d2:	fb09 f904 	mul.w	r9, r9, r4
 801e0d6:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801e0da:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e0de:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801e0e2:	fb08 f404 	mul.w	r4, r8, r4
 801e0e6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e0ea:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e0ee:	fb08 f802 	mul.w	r8, r8, r2
 801e0f2:	fb0a fa01 	mul.w	sl, sl, r1
 801e0f6:	0a22      	lsrs	r2, r4, #8
 801e0f8:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801e0fc:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e100:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801e104:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e108:	4414      	add	r4, r2
 801e10a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e10e:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801e112:	0a2d      	lsrs	r5, r5, #8
 801e114:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e118:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e11c:	9a03      	ldr	r2, [sp, #12]
 801e11e:	8836      	ldrh	r6, [r6, #0]
 801e120:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e124:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e128:	437d      	muls	r5, r7
 801e12a:	4461      	add	r1, ip
 801e12c:	0a24      	lsrs	r4, r4, #8
 801e12e:	fb02 5503 	mla	r5, r2, r3, r5
 801e132:	0a09      	lsrs	r1, r1, #8
 801e134:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801e138:	fb04 540e 	mla	r4, r4, lr, r5
 801e13c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e140:	fb01 4100 	mla	r1, r1, r0, r4
 801e144:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e148:	0a09      	lsrs	r1, r1, #8
 801e14a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e14e:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801e152:	fb07 f70a 	mul.w	r7, r7, sl
 801e156:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e15a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801e15e:	fb03 7101 	mla	r1, r3, r1, r7
 801e162:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e166:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801e16a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e16e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801e172:	fb00 e101 	mla	r1, r0, r1, lr
 801e176:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801e17a:	9a00      	ldr	r2, [sp, #0]
 801e17c:	b287      	uxth	r7, r0
 801e17e:	437a      	muls	r2, r7
 801e180:	0a09      	lsrs	r1, r1, #8
 801e182:	1c53      	adds	r3, r2, #1
 801e184:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e188:	4321      	orrs	r1, r4
 801e18a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e18e:	1235      	asrs	r5, r6, #8
 801e190:	0c0a      	lsrs	r2, r1, #16
 801e192:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e196:	b2db      	uxtb	r3, r3
 801e198:	fb12 f207 	smulbb	r2, r2, r7
 801e19c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e1a0:	fb05 2503 	mla	r5, r5, r3, r2
 801e1a4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e1a8:	10f2      	asrs	r2, r6, #3
 801e1aa:	b2c8      	uxtb	r0, r1
 801e1ac:	00f6      	lsls	r6, r6, #3
 801e1ae:	fb14 f407 	smulbb	r4, r4, r7
 801e1b2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e1b6:	b2f6      	uxtb	r6, r6
 801e1b8:	fb10 f007 	smulbb	r0, r0, r7
 801e1bc:	fb02 4203 	mla	r2, r2, r3, r4
 801e1c0:	b2ad      	uxth	r5, r5
 801e1c2:	fb06 0303 	mla	r3, r6, r3, r0
 801e1c6:	b299      	uxth	r1, r3
 801e1c8:	b294      	uxth	r4, r2
 801e1ca:	1c6b      	adds	r3, r5, #1
 801e1cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e1d0:	1c62      	adds	r2, r4, #1
 801e1d2:	1c4b      	adds	r3, r1, #1
 801e1d4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e1d8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e1dc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e1e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e1e4:	0952      	lsrs	r2, r2, #5
 801e1e6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e1ea:	432b      	orrs	r3, r5
 801e1ec:	4313      	orrs	r3, r2
 801e1ee:	9a02      	ldr	r2, [sp, #8]
 801e1f0:	8013      	strh	r3, [r2, #0]
 801e1f2:	b005      	add	sp, #20
 801e1f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e1f8:	2500      	movs	r5, #0
 801e1fa:	e6e9      	b.n	801dfd0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801e1fc:	2100      	movs	r1, #0
 801e1fe:	460d      	mov	r5, r1
 801e200:	e6f3      	b.n	801dfea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801e202:	2100      	movs	r1, #0
 801e204:	e6f1      	b.n	801dfea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801e206:	4631      	mov	r1, r6
 801e208:	e6ef      	b.n	801dfea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801e20a:	2400      	movs	r4, #0
 801e20c:	e700      	b.n	801e010 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801e20e:	2200      	movs	r2, #0
 801e210:	4614      	mov	r4, r2
 801e212:	e70b      	b.n	801e02c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801e214:	4602      	mov	r2, r0
 801e216:	4604      	mov	r4, r0
 801e218:	e708      	b.n	801e02c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801e21a:	2200      	movs	r2, #0
 801e21c:	e706      	b.n	801e02c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801e21e:	4632      	mov	r2, r6
 801e220:	e704      	b.n	801e02c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801e222 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e222:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e226:	b09f      	sub	sp, #124	@ 0x7c
 801e228:	921b      	str	r2, [sp, #108]	@ 0x6c
 801e22a:	9309      	str	r3, [sp, #36]	@ 0x24
 801e22c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801e22e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801e232:	931c      	str	r3, [sp, #112]	@ 0x70
 801e234:	9119      	str	r1, [sp, #100]	@ 0x64
 801e236:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801e23a:	901d      	str	r0, [sp, #116]	@ 0x74
 801e23c:	6850      	ldr	r0, [r2, #4]
 801e23e:	6812      	ldr	r2, [r2, #0]
 801e240:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801e242:	fb00 1303 	mla	r3, r0, r3, r1
 801e246:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e24a:	930c      	str	r3, [sp, #48]	@ 0x30
 801e24c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e24e:	681b      	ldr	r3, [r3, #0]
 801e250:	9312      	str	r3, [sp, #72]	@ 0x48
 801e252:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e254:	685e      	ldr	r6, [r3, #4]
 801e256:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801e25a:	930d      	str	r3, [sp, #52]	@ 0x34
 801e25c:	3604      	adds	r6, #4
 801e25e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e260:	2b00      	cmp	r3, #0
 801e262:	dc03      	bgt.n	801e26c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e264:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e266:	2b00      	cmp	r3, #0
 801e268:	f340 8388 	ble.w	801e97c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801e26c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e26e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e272:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e276:	1e48      	subs	r0, r1, #1
 801e278:	1e57      	subs	r7, r2, #1
 801e27a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e27c:	2b00      	cmp	r3, #0
 801e27e:	f340 8195 	ble.w	801e5ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e282:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e284:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e288:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e28c:	d406      	bmi.n	801e29c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e28e:	4584      	cmp	ip, r0
 801e290:	da04      	bge.n	801e29c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e292:	2b00      	cmp	r3, #0
 801e294:	db02      	blt.n	801e29c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e296:	42bb      	cmp	r3, r7
 801e298:	f2c0 8189 	blt.w	801e5ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801e29c:	f11c 0c01 	adds.w	ip, ip, #1
 801e2a0:	f100 8177 	bmi.w	801e592 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e2a4:	4561      	cmp	r1, ip
 801e2a6:	f2c0 8174 	blt.w	801e592 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e2aa:	3301      	adds	r3, #1
 801e2ac:	f100 8171 	bmi.w	801e592 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e2b0:	429a      	cmp	r2, r3
 801e2b2:	f2c0 816e 	blt.w	801e592 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e2b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e2b8:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801e2ba:	931a      	str	r3, [sp, #104]	@ 0x68
 801e2bc:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801e2be:	2b00      	cmp	r3, #0
 801e2c0:	f340 8193 	ble.w	801e5ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801e2c4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e2c6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e2ca:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e2cc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801e2d0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e2d2:	141b      	asrs	r3, r3, #16
 801e2d4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e2d8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e2dc:	f100 81d6 	bmi.w	801e68c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801e2e0:	f100 38ff 	add.w	r8, r0, #4294967295
 801e2e4:	4543      	cmp	r3, r8
 801e2e6:	f280 81d1 	bge.w	801e68c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801e2ea:	f1bc 0f00 	cmp.w	ip, #0
 801e2ee:	f2c0 81cd 	blt.w	801e68c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801e2f2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e2f6:	45c4      	cmp	ip, r8
 801e2f8:	f280 81c8 	bge.w	801e68c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801e2fc:	b200      	sxth	r0, r0
 801e2fe:	fb0c 3300 	mla	r3, ip, r0, r3
 801e302:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e304:	eb04 0803 	add.w	r8, r4, r3
 801e308:	5ce3      	ldrb	r3, [r4, r3]
 801e30a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e30e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801e312:	2a00      	cmp	r2, #0
 801e314:	f000 81af 	beq.w	801e676 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801e318:	f898 c001 	ldrb.w	ip, [r8, #1]
 801e31c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801e320:	940e      	str	r4, [sp, #56]	@ 0x38
 801e322:	0e24      	lsrs	r4, r4, #24
 801e324:	9415      	str	r4, [sp, #84]	@ 0x54
 801e326:	b179      	cbz	r1, 801e348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801e328:	eb08 0c00 	add.w	ip, r8, r0
 801e32c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801e330:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801e334:	900a      	str	r0, [sp, #40]	@ 0x28
 801e336:	0e00      	lsrs	r0, r0, #24
 801e338:	9013      	str	r0, [sp, #76]	@ 0x4c
 801e33a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801e33e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801e342:	900f      	str	r0, [sp, #60]	@ 0x3c
 801e344:	0e00      	lsrs	r0, r0, #24
 801e346:	9016      	str	r0, [sp, #88]	@ 0x58
 801e348:	b292      	uxth	r2, r2
 801e34a:	b289      	uxth	r1, r1
 801e34c:	fb02 f901 	mul.w	r9, r2, r1
 801e350:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e354:	0112      	lsls	r2, r2, #4
 801e356:	eba2 0809 	sub.w	r8, r2, r9
 801e35a:	b289      	uxth	r1, r1
 801e35c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801e360:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801e362:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e364:	fa1f f888 	uxth.w	r8, r8
 801e368:	1a52      	subs	r2, r2, r1
 801e36a:	b292      	uxth	r2, r2
 801e36c:	fb08 f000 	mul.w	r0, r8, r0
 801e370:	fb02 000e 	mla	r0, r2, lr, r0
 801e374:	fb01 0004 	mla	r0, r1, r4, r0
 801e378:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801e37a:	fb09 0004 	mla	r0, r9, r4, r0
 801e37e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e382:	2800      	cmp	r0, #0
 801e384:	f000 80fa 	beq.w	801e57c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e388:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e38c:	d01b      	beq.n	801e3c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e38e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e392:	fb0e fa0a 	mul.w	sl, lr, sl
 801e396:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e39a:	fb0e fe03 	mul.w	lr, lr, r3
 801e39e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e3a2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e3a6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e3aa:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e3ae:	4453      	add	r3, sl
 801e3b0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e3b4:	0a1b      	lsrs	r3, r3, #8
 801e3b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e3ba:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e3be:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e3c2:	ea43 030c 	orr.w	r3, r3, ip
 801e3c6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801e3c8:	2cff      	cmp	r4, #255	@ 0xff
 801e3ca:	d021      	beq.n	801e410 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e3cc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e3ce:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801e3d2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801e3d4:	fb04 fb0b 	mul.w	fp, r4, fp
 801e3d8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e3da:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e3de:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801e3e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e3e4:	fb04 fa0a 	mul.w	sl, r4, sl
 801e3e8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e3ec:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e3f0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e3f4:	44de      	add	lr, fp
 801e3f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e3fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e3fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e402:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e406:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e40a:	ea4e 040a 	orr.w	r4, lr, sl
 801e40e:	940e      	str	r4, [sp, #56]	@ 0x38
 801e410:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e412:	2cff      	cmp	r4, #255	@ 0xff
 801e414:	d021      	beq.n	801e45a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801e416:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e418:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801e41c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e41e:	fb04 fb0b 	mul.w	fp, r4, fp
 801e422:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e424:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e428:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e42a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e42e:	fb04 fa0a 	mul.w	sl, r4, sl
 801e432:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e436:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e43a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e43e:	44de      	add	lr, fp
 801e440:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e444:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e448:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e44c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e450:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e454:	ea4e 040a 	orr.w	r4, lr, sl
 801e458:	940a      	str	r4, [sp, #40]	@ 0x28
 801e45a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801e45c:	2cff      	cmp	r4, #255	@ 0xff
 801e45e:	d021      	beq.n	801e4a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801e460:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e462:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801e466:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801e468:	fb04 fb0b 	mul.w	fp, r4, fp
 801e46c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e46e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e472:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801e474:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e478:	fb04 fa0a 	mul.w	sl, r4, sl
 801e47c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e480:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e484:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e488:	44de      	add	lr, fp
 801e48a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e48e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e492:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e496:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e49a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e49e:	ea4e 040a 	orr.w	r4, lr, sl
 801e4a2:	940f      	str	r4, [sp, #60]	@ 0x3c
 801e4a4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e4a6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e4aa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e4ac:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801e4b0:	fb08 fc0c 	mul.w	ip, r8, ip
 801e4b4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801e4b8:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801e4bc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e4be:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e4c2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801e4c6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e4c8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e4cc:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801e4d0:	fb08 f80e 	mul.w	r8, r8, lr
 801e4d4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e4d8:	fb02 8303 	mla	r3, r2, r3, r8
 801e4dc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e4de:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e4e0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801e4e4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e4e6:	fb01 330a 	mla	r3, r1, sl, r3
 801e4ea:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801e4ee:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e4f0:	fb09 3901 	mla	r9, r9, r1, r3
 801e4f4:	4342      	muls	r2, r0
 801e4f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e4fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e4fe:	883b      	ldrh	r3, [r7, #0]
 801e500:	1c50      	adds	r0, r2, #1
 801e502:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e506:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801e50a:	ea4c 0c09 	orr.w	ip, ip, r9
 801e50e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e512:	1219      	asrs	r1, r3, #8
 801e514:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e518:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e51c:	b2c0      	uxtb	r0, r0
 801e51e:	fb12 f204 	smulbb	r2, r2, r4
 801e522:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e526:	fb01 2100 	mla	r1, r1, r0, r2
 801e52a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e52e:	10da      	asrs	r2, r3, #3
 801e530:	fa5f fc8c 	uxtb.w	ip, ip
 801e534:	00db      	lsls	r3, r3, #3
 801e536:	fb1c fc04 	smulbb	ip, ip, r4
 801e53a:	b2db      	uxtb	r3, r3
 801e53c:	b289      	uxth	r1, r1
 801e53e:	fb03 c300 	mla	r3, r3, r0, ip
 801e542:	fa1f fc83 	uxth.w	ip, r3
 801e546:	1c4b      	adds	r3, r1, #1
 801e548:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e54c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e550:	fb1e fe04 	smulbb	lr, lr, r4
 801e554:	f10c 0301 	add.w	r3, ip, #1
 801e558:	fb02 e200 	mla	r2, r2, r0, lr
 801e55c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e560:	b292      	uxth	r2, r2
 801e562:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801e566:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e56a:	430b      	orrs	r3, r1
 801e56c:	1c51      	adds	r1, r2, #1
 801e56e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e572:	0952      	lsrs	r2, r2, #5
 801e574:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e578:	4313      	orrs	r3, r2
 801e57a:	803b      	strh	r3, [r7, #0]
 801e57c:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801e57e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801e580:	441a      	add	r2, r3
 801e582:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e584:	9229      	str	r2, [sp, #164]	@ 0xa4
 801e586:	441d      	add	r5, r3
 801e588:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801e58a:	3b01      	subs	r3, #1
 801e58c:	3702      	adds	r7, #2
 801e58e:	931a      	str	r3, [sp, #104]	@ 0x68
 801e590:	e694      	b.n	801e2bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e592:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801e594:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e596:	441c      	add	r4, r3
 801e598:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e59a:	9429      	str	r4, [sp, #164]	@ 0xa4
 801e59c:	441d      	add	r5, r3
 801e59e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e5a0:	3b01      	subs	r3, #1
 801e5a2:	9309      	str	r3, [sp, #36]	@ 0x24
 801e5a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e5a6:	3302      	adds	r3, #2
 801e5a8:	930c      	str	r3, [sp, #48]	@ 0x30
 801e5aa:	e666      	b.n	801e27a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e5ac:	d024      	beq.n	801e5f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801e5ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e5b0:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801e5b2:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e5b4:	3b01      	subs	r3, #1
 801e5b6:	fb00 4003 	mla	r0, r0, r3, r4
 801e5ba:	1400      	asrs	r0, r0, #16
 801e5bc:	f53f ae7b 	bmi.w	801e2b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5c0:	3901      	subs	r1, #1
 801e5c2:	4288      	cmp	r0, r1
 801e5c4:	f6bf ae77 	bge.w	801e2b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5c8:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801e5ca:	fb01 5303 	mla	r3, r1, r3, r5
 801e5ce:	141b      	asrs	r3, r3, #16
 801e5d0:	f53f ae71 	bmi.w	801e2b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5d4:	3a01      	subs	r2, #1
 801e5d6:	4293      	cmp	r3, r2
 801e5d8:	f6bf ae6d 	bge.w	801e2b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5dc:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801e5e0:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801e5e4:	f1bb 0f00 	cmp.w	fp, #0
 801e5e8:	dc70      	bgt.n	801e6cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801e5ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e5ec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e5f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e5f2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e5f6:	930c      	str	r3, [sp, #48]	@ 0x30
 801e5f8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e5fa:	2b00      	cmp	r3, #0
 801e5fc:	f340 81be 	ble.w	801e97c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801e600:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e604:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e608:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e60c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e60e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e612:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e616:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e61a:	eef0 6a62 	vmov.f32	s13, s5
 801e61e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e622:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e626:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e62a:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801e62e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e632:	eef0 6a43 	vmov.f32	s13, s6
 801e636:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e63a:	ee12 2a90 	vmov	r2, s5
 801e63e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e642:	fb92 f3f3 	sdiv	r3, r2, r3
 801e646:	ee13 2a10 	vmov	r2, s6
 801e64a:	932b      	str	r3, [sp, #172]	@ 0xac
 801e64c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e64e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e652:	932c      	str	r3, [sp, #176]	@ 0xb0
 801e654:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e656:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801e658:	3b01      	subs	r3, #1
 801e65a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e65e:	9319      	str	r3, [sp, #100]	@ 0x64
 801e660:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e662:	bf08      	it	eq
 801e664:	4613      	moveq	r3, r2
 801e666:	ee16 5a90 	vmov	r5, s13
 801e66a:	9309      	str	r3, [sp, #36]	@ 0x24
 801e66c:	eeb0 3a67 	vmov.f32	s6, s15
 801e670:	eef0 2a47 	vmov.f32	s5, s14
 801e674:	e5f3      	b.n	801e25e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e676:	2900      	cmp	r1, #0
 801e678:	f43f ae66 	beq.w	801e348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801e67c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801e680:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801e684:	900a      	str	r0, [sp, #40]	@ 0x28
 801e686:	0e00      	lsrs	r0, r0, #24
 801e688:	9013      	str	r0, [sp, #76]	@ 0x4c
 801e68a:	e65d      	b.n	801e348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801e68c:	f113 0801 	adds.w	r8, r3, #1
 801e690:	f53f af74 	bmi.w	801e57c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e694:	4540      	cmp	r0, r8
 801e696:	f6ff af71 	blt.w	801e57c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e69a:	f11c 0801 	adds.w	r8, ip, #1
 801e69e:	f53f af6d 	bmi.w	801e57c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e6a2:	45c6      	cmp	lr, r8
 801e6a4:	f6ff af6a 	blt.w	801e57c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e6a8:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801e6aa:	9302      	str	r3, [sp, #8]
 801e6ac:	b200      	sxth	r0, r0
 801e6ae:	fa0f f38e 	sxth.w	r3, lr
 801e6b2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e6b6:	e9cd c203 	strd	ip, r2, [sp, #12]
 801e6ba:	9301      	str	r3, [sp, #4]
 801e6bc:	9000      	str	r0, [sp, #0]
 801e6be:	4633      	mov	r3, r6
 801e6c0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801e6c2:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801e6c4:	4639      	mov	r1, r7
 801e6c6:	f7ff fc62 	bl	801df8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801e6ca:	e757      	b.n	801e57c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e6cc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e6ce:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e6d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e6d4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e6d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e6da:	1427      	asrs	r7, r4, #16
 801e6dc:	142b      	asrs	r3, r5, #16
 801e6de:	fb01 7303 	mla	r3, r1, r3, r7
 801e6e2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e6e4:	18e7      	adds	r7, r4, r3
 801e6e6:	5ce3      	ldrb	r3, [r4, r3]
 801e6e8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e6ec:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e6f0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e6f4:	2a00      	cmp	r2, #0
 801e6f6:	f000 8137 	beq.w	801e968 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e6fa:	f897 e001 	ldrb.w	lr, [r7, #1]
 801e6fe:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801e702:	9410      	str	r4, [sp, #64]	@ 0x40
 801e704:	0e24      	lsrs	r4, r4, #24
 801e706:	9417      	str	r4, [sp, #92]	@ 0x5c
 801e708:	b170      	cbz	r0, 801e728 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e70a:	eb07 0e01 	add.w	lr, r7, r1
 801e70e:	5c79      	ldrb	r1, [r7, r1]
 801e710:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e714:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e716:	0e09      	lsrs	r1, r1, #24
 801e718:	9114      	str	r1, [sp, #80]	@ 0x50
 801e71a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801e71e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e722:	9111      	str	r1, [sp, #68]	@ 0x44
 801e724:	0e09      	lsrs	r1, r1, #24
 801e726:	9118      	str	r1, [sp, #96]	@ 0x60
 801e728:	b292      	uxth	r2, r2
 801e72a:	b280      	uxth	r0, r0
 801e72c:	fb02 f800 	mul.w	r8, r2, r0
 801e730:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e734:	0112      	lsls	r2, r2, #4
 801e736:	eba2 0e08 	sub.w	lr, r2, r8
 801e73a:	b280      	uxth	r0, r0
 801e73c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801e740:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801e742:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e744:	fa1f fe8e 	uxth.w	lr, lr
 801e748:	1a12      	subs	r2, r2, r0
 801e74a:	b292      	uxth	r2, r2
 801e74c:	fb0e f101 	mul.w	r1, lr, r1
 801e750:	fb02 110c 	mla	r1, r2, ip, r1
 801e754:	fb00 1104 	mla	r1, r0, r4, r1
 801e758:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e75a:	fb08 1104 	mla	r1, r8, r4, r1
 801e75e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e762:	2900      	cmp	r1, #0
 801e764:	f000 80f5 	beq.w	801e952 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e768:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801e76c:	d019      	beq.n	801e7a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801e76e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e772:	fb0c fa0a 	mul.w	sl, ip, sl
 801e776:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e77a:	fb0c fc03 	mul.w	ip, ip, r3
 801e77e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e782:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e786:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e78a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801e78e:	4453      	add	r3, sl
 801e790:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e794:	0a1b      	lsrs	r3, r3, #8
 801e796:	0a3f      	lsrs	r7, r7, #8
 801e798:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e79c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801e7a0:	433b      	orrs	r3, r7
 801e7a2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e7a4:	2cff      	cmp	r4, #255	@ 0xff
 801e7a6:	d020      	beq.n	801e7ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801e7a8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e7aa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e7ae:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e7b0:	4367      	muls	r7, r4
 801e7b2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e7b4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e7b8:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e7ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e7be:	fb04 fa0a 	mul.w	sl, r4, sl
 801e7c2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e7c6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e7ca:	44bc      	add	ip, r7
 801e7cc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e7d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e7d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e7d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e7dc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e7e0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e7e4:	ea4c 040a 	orr.w	r4, ip, sl
 801e7e8:	9410      	str	r4, [sp, #64]	@ 0x40
 801e7ea:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e7ec:	2cff      	cmp	r4, #255	@ 0xff
 801e7ee:	d020      	beq.n	801e832 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801e7f0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e7f2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e7f6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e7f8:	4367      	muls	r7, r4
 801e7fa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e7fc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e800:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e802:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e806:	fb04 fa0a 	mul.w	sl, r4, sl
 801e80a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e80e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e812:	44bc      	add	ip, r7
 801e814:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e818:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e81c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e820:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e824:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e828:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e82c:	ea4c 040a 	orr.w	r4, ip, sl
 801e830:	940b      	str	r4, [sp, #44]	@ 0x2c
 801e832:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e834:	2cff      	cmp	r4, #255	@ 0xff
 801e836:	d020      	beq.n	801e87a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801e838:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801e83a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e83e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e840:	4367      	muls	r7, r4
 801e842:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801e844:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e848:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e84a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e84e:	fb04 fa0a 	mul.w	sl, r4, sl
 801e852:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e856:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e85a:	44bc      	add	ip, r7
 801e85c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e860:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e864:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e868:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e86c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e870:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e874:	ea4c 040a 	orr.w	r4, ip, sl
 801e878:	9411      	str	r4, [sp, #68]	@ 0x44
 801e87a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e87c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e880:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e882:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801e886:	fb0e f707 	mul.w	r7, lr, r7
 801e88a:	fb02 770c 	mla	r7, r2, ip, r7
 801e88e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e892:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801e894:	fb00 770c 	mla	r7, r0, ip, r7
 801e898:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e89c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e89e:	fb08 770c 	mla	r7, r8, ip, r7
 801e8a2:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801e8a6:	fb0e fe0c 	mul.w	lr, lr, ip
 801e8aa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e8ae:	fb02 e303 	mla	r3, r2, r3, lr
 801e8b2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e8b4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e8b6:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801e8ba:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801e8bc:	fb00 330a 	mla	r3, r0, sl, r3
 801e8c0:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801e8c4:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e8c8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e8ca:	f8b9 0000 	ldrh.w	r0, [r9]
 801e8ce:	434b      	muls	r3, r1
 801e8d0:	0a3f      	lsrs	r7, r7, #8
 801e8d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e8d6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e8da:	1c59      	adds	r1, r3, #1
 801e8dc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801e8e0:	ea47 070c 	orr.w	r7, r7, ip
 801e8e4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801e8e8:	1202      	asrs	r2, r0, #8
 801e8ea:	0c3b      	lsrs	r3, r7, #16
 801e8ec:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e8f0:	b2c9      	uxtb	r1, r1
 801e8f2:	fb13 f304 	smulbb	r3, r3, r4
 801e8f6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e8fa:	fb02 3201 	mla	r2, r2, r1, r3
 801e8fe:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e902:	10c3      	asrs	r3, r0, #3
 801e904:	b2ff      	uxtb	r7, r7
 801e906:	00c0      	lsls	r0, r0, #3
 801e908:	b292      	uxth	r2, r2
 801e90a:	fb1c fc04 	smulbb	ip, ip, r4
 801e90e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801e912:	b2c0      	uxtb	r0, r0
 801e914:	fb17 f704 	smulbb	r7, r7, r4
 801e918:	fb03 c301 	mla	r3, r3, r1, ip
 801e91c:	fb00 7001 	mla	r0, r0, r1, r7
 801e920:	f102 0c01 	add.w	ip, r2, #1
 801e924:	b280      	uxth	r0, r0
 801e926:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801e92a:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801e92e:	1c42      	adds	r2, r0, #1
 801e930:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e934:	b29b      	uxth	r3, r3
 801e936:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e93a:	ea42 020c 	orr.w	r2, r2, ip
 801e93e:	f103 0c01 	add.w	ip, r3, #1
 801e942:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e946:	095b      	lsrs	r3, r3, #5
 801e948:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e94c:	431a      	orrs	r2, r3
 801e94e:	f8a9 2000 	strh.w	r2, [r9]
 801e952:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801e954:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801e956:	441a      	add	r2, r3
 801e958:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e95a:	9229      	str	r2, [sp, #164]	@ 0xa4
 801e95c:	f109 0902 	add.w	r9, r9, #2
 801e960:	441d      	add	r5, r3
 801e962:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e966:	e63d      	b.n	801e5e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e968:	2800      	cmp	r0, #0
 801e96a:	f43f aedd 	beq.w	801e728 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e96e:	5c79      	ldrb	r1, [r7, r1]
 801e970:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e974:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e976:	0e09      	lsrs	r1, r1, #24
 801e978:	9114      	str	r1, [sp, #80]	@ 0x50
 801e97a:	e6d5      	b.n	801e728 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e97c:	b01f      	add	sp, #124	@ 0x7c
 801e97e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e982 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801e982:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e986:	b089      	sub	sp, #36	@ 0x24
 801e988:	9101      	str	r1, [sp, #4]
 801e98a:	9801      	ldr	r0, [sp, #4]
 801e98c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801e990:	8800      	ldrh	r0, [r0, #0]
 801e992:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801e996:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801e99a:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801e99e:	1206      	asrs	r6, r0, #8
 801e9a0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801e9a4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801e9a8:	9602      	str	r6, [sp, #8]
 801e9aa:	10c6      	asrs	r6, r0, #3
 801e9ac:	00c0      	lsls	r0, r0, #3
 801e9ae:	b2c0      	uxtb	r0, r0
 801e9b0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801e9b4:	9004      	str	r0, [sp, #16]
 801e9b6:	2f00      	cmp	r7, #0
 801e9b8:	fb07 100c 	mla	r0, r7, ip, r1
 801e9bc:	9603      	str	r6, [sp, #12]
 801e9be:	eb02 0e00 	add.w	lr, r2, r0
 801e9c2:	f2c0 810a 	blt.w	801ebda <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801e9c6:	45b8      	cmp	r8, r7
 801e9c8:	f340 8107 	ble.w	801ebda <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801e9cc:	2900      	cmp	r1, #0
 801e9ce:	f2c0 8102 	blt.w	801ebd6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801e9d2:	458c      	cmp	ip, r1
 801e9d4:	f340 80ff 	ble.w	801ebd6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801e9d8:	5c12      	ldrb	r2, [r2, r0]
 801e9da:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801e9de:	1c4a      	adds	r2, r1, #1
 801e9e0:	f100 80fe 	bmi.w	801ebe0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801e9e4:	4594      	cmp	ip, r2
 801e9e6:	f340 80fb 	ble.w	801ebe0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801e9ea:	2d00      	cmp	r5, #0
 801e9ec:	f000 80fa 	beq.w	801ebe4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801e9f0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e9f4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801e9f8:	3701      	adds	r7, #1
 801e9fa:	f100 80f7 	bmi.w	801ebec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801e9fe:	45b8      	cmp	r8, r7
 801ea00:	f340 80f4 	ble.w	801ebec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801ea04:	2c00      	cmp	r4, #0
 801ea06:	f000 80f4 	beq.w	801ebf2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801ea0a:	2900      	cmp	r1, #0
 801ea0c:	eb0e 020c 	add.w	r2, lr, ip
 801ea10:	f2c0 80ea 	blt.w	801ebe8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801ea14:	458c      	cmp	ip, r1
 801ea16:	f340 80e7 	ble.w	801ebe8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801ea1a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801ea1e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801ea22:	3101      	adds	r1, #1
 801ea24:	f100 80e8 	bmi.w	801ebf8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801ea28:	458c      	cmp	ip, r1
 801ea2a:	f340 80e5 	ble.w	801ebf8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801ea2e:	2d00      	cmp	r5, #0
 801ea30:	f000 80e4 	beq.w	801ebfc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801ea34:	7852      	ldrb	r2, [r2, #1]
 801ea36:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ea3a:	0e0b      	lsrs	r3, r1, #24
 801ea3c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801ea40:	9300      	str	r3, [sp, #0]
 801ea42:	b2a4      	uxth	r4, r4
 801ea44:	b2ab      	uxth	r3, r5
 801ea46:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801ea4a:	fb03 f904 	mul.w	r9, r3, r4
 801ea4e:	fb0a f505 	mul.w	r5, sl, r5
 801ea52:	011b      	lsls	r3, r3, #4
 801ea54:	eba3 0e09 	sub.w	lr, r3, r9
 801ea58:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801ea5c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801ea60:	0a28      	lsrs	r0, r5, #8
 801ea62:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801ea66:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801ea6a:	4405      	add	r5, r0
 801ea6c:	0a2d      	lsrs	r5, r5, #8
 801ea6e:	fb0a f303 	mul.w	r3, sl, r3
 801ea72:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801ea76:	9005      	str	r0, [sp, #20]
 801ea78:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801ea7c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801ea80:	0a1b      	lsrs	r3, r3, #8
 801ea82:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801ea86:	9306      	str	r3, [sp, #24]
 801ea88:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801ea8c:	fb0b f303 	mul.w	r3, fp, r3
 801ea90:	0a1d      	lsrs	r5, r3, #8
 801ea92:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801ea96:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801ea9a:	fb0b f606 	mul.w	r6, fp, r6
 801ea9e:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801eaa2:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801eaa6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801eaaa:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801eaae:	fb08 f707 	mul.w	r7, r8, r7
 801eab2:	441d      	add	r5, r3
 801eab4:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801eab8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801eabc:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801eac0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801eac4:	fb08 fc0c 	mul.w	ip, r8, ip
 801eac8:	0a1b      	lsrs	r3, r3, #8
 801eaca:	9307      	str	r3, [sp, #28]
 801eacc:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801ead0:	0e0b      	lsrs	r3, r1, #24
 801ead2:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801ead6:	435f      	muls	r7, r3
 801ead8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801eadc:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801eae0:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801eae4:	4460      	add	r0, ip
 801eae6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eaea:	b2a4      	uxth	r4, r4
 801eaec:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801eaf0:	0a2d      	lsrs	r5, r5, #8
 801eaf2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801eaf6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801eafa:	fa1f fe8e 	uxth.w	lr, lr
 801eafe:	4359      	muls	r1, r3
 801eb00:	1b12      	subs	r2, r2, r4
 801eb02:	9b05      	ldr	r3, [sp, #20]
 801eb04:	44bc      	add	ip, r7
 801eb06:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801eb0a:	b292      	uxth	r2, r2
 801eb0c:	fb05 f50e 	mul.w	r5, r5, lr
 801eb10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb14:	fb03 5502 	mla	r5, r3, r2, r5
 801eb18:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801eb1c:	9b06      	ldr	r3, [sp, #24]
 801eb1e:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801eb22:	0a36      	lsrs	r6, r6, #8
 801eb24:	0a00      	lsrs	r0, r0, #8
 801eb26:	fb0c 5509 	mla	r5, ip, r9, r5
 801eb2a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801eb2e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801eb32:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801eb36:	fb00 5504 	mla	r5, r0, r4, r5
 801eb3a:	fb0e f606 	mul.w	r6, lr, r6
 801eb3e:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801eb42:	0a09      	lsrs	r1, r1, #8
 801eb44:	9b07      	ldr	r3, [sp, #28]
 801eb46:	fb02 6000 	mla	r0, r2, r0, r6
 801eb4a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801eb4e:	fb09 0001 	mla	r0, r9, r1, r0
 801eb52:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eb56:	fb0e fe0b 	mul.w	lr, lr, fp
 801eb5a:	fb04 0003 	mla	r0, r4, r3, r0
 801eb5e:	fb02 e20a 	mla	r2, r2, sl, lr
 801eb62:	9b00      	ldr	r3, [sp, #0]
 801eb64:	fb04 2408 	mla	r4, r4, r8, r2
 801eb68:	fb09 4903 	mla	r9, r9, r3, r4
 801eb6c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801eb70:	9b02      	ldr	r3, [sp, #8]
 801eb72:	9a04      	ldr	r2, [sp, #16]
 801eb74:	fa5f f989 	uxtb.w	r9, r9
 801eb78:	fb03 f109 	mul.w	r1, r3, r9
 801eb7c:	9b03      	ldr	r3, [sp, #12]
 801eb7e:	0a2d      	lsrs	r5, r5, #8
 801eb80:	0a00      	lsrs	r0, r0, #8
 801eb82:	fb03 f309 	mul.w	r3, r3, r9
 801eb86:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801eb8a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801eb8e:	4305      	orrs	r5, r0
 801eb90:	fb02 f909 	mul.w	r9, r2, r9
 801eb94:	1c58      	adds	r0, r3, #1
 801eb96:	1c4a      	adds	r2, r1, #1
 801eb98:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801eb9c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801eba0:	0a2b      	lsrs	r3, r5, #8
 801eba2:	0c2a      	lsrs	r2, r5, #16
 801eba4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801eba8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801ebac:	00db      	lsls	r3, r3, #3
 801ebae:	0212      	lsls	r2, r2, #8
 801ebb0:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801ebb4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ebb8:	4313      	orrs	r3, r2
 801ebba:	f109 0201 	add.w	r2, r9, #1
 801ebbe:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801ebc2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801ebc6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ebca:	431d      	orrs	r5, r3
 801ebcc:	9b01      	ldr	r3, [sp, #4]
 801ebce:	801d      	strh	r5, [r3, #0]
 801ebd0:	b009      	add	sp, #36	@ 0x24
 801ebd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ebd6:	2000      	movs	r0, #0
 801ebd8:	e701      	b.n	801e9de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801ebda:	2600      	movs	r6, #0
 801ebdc:	4630      	mov	r0, r6
 801ebde:	e70b      	b.n	801e9f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ebe0:	2600      	movs	r6, #0
 801ebe2:	e709      	b.n	801e9f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ebe4:	462e      	mov	r6, r5
 801ebe6:	e707      	b.n	801e9f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ebe8:	2700      	movs	r7, #0
 801ebea:	e71a      	b.n	801ea22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801ebec:	2100      	movs	r1, #0
 801ebee:	460f      	mov	r7, r1
 801ebf0:	e723      	b.n	801ea3a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ebf2:	4621      	mov	r1, r4
 801ebf4:	4627      	mov	r7, r4
 801ebf6:	e720      	b.n	801ea3a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ebf8:	2100      	movs	r1, #0
 801ebfa:	e71e      	b.n	801ea3a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ebfc:	4629      	mov	r1, r5
 801ebfe:	e71c      	b.n	801ea3a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801ec00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ec00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec04:	b09b      	sub	sp, #108	@ 0x6c
 801ec06:	9218      	str	r2, [sp, #96]	@ 0x60
 801ec08:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801ec0a:	9116      	str	r1, [sp, #88]	@ 0x58
 801ec0c:	9307      	str	r3, [sp, #28]
 801ec0e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801ec12:	9019      	str	r0, [sp, #100]	@ 0x64
 801ec14:	6850      	ldr	r0, [r2, #4]
 801ec16:	6812      	ldr	r2, [r2, #0]
 801ec18:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801ec1a:	fb00 1303 	mla	r3, r0, r3, r1
 801ec1e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ec22:	930a      	str	r3, [sp, #40]	@ 0x28
 801ec24:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ec26:	681b      	ldr	r3, [r3, #0]
 801ec28:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ec2a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ec2c:	685e      	ldr	r6, [r3, #4]
 801ec2e:	3604      	adds	r6, #4
 801ec30:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ec32:	2b00      	cmp	r3, #0
 801ec34:	dc03      	bgt.n	801ec3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ec36:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ec38:	2b00      	cmp	r3, #0
 801ec3a:	f340 8373 	ble.w	801f324 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801ec3e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ec40:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ec44:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ec48:	1e48      	subs	r0, r1, #1
 801ec4a:	1e57      	subs	r7, r2, #1
 801ec4c:	9b07      	ldr	r3, [sp, #28]
 801ec4e:	2b00      	cmp	r3, #0
 801ec50:	f340 8190 	ble.w	801ef74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801ec54:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ec56:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ec5a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ec5e:	d406      	bmi.n	801ec6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ec60:	4584      	cmp	ip, r0
 801ec62:	da04      	bge.n	801ec6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ec64:	2b00      	cmp	r3, #0
 801ec66:	db02      	blt.n	801ec6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ec68:	42bb      	cmp	r3, r7
 801ec6a:	f2c0 8184 	blt.w	801ef76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801ec6e:	f11c 0c01 	adds.w	ip, ip, #1
 801ec72:	f100 8172 	bmi.w	801ef5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ec76:	4561      	cmp	r1, ip
 801ec78:	f2c0 816f 	blt.w	801ef5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ec7c:	3301      	adds	r3, #1
 801ec7e:	f100 816c 	bmi.w	801ef5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ec82:	429a      	cmp	r2, r3
 801ec84:	f2c0 8169 	blt.w	801ef5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ec88:	9b07      	ldr	r3, [sp, #28]
 801ec8a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801ec8c:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ec8e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ec90:	2b00      	cmp	r3, #0
 801ec92:	f340 818e 	ble.w	801efb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801ec96:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ec98:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ec9c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ec9e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801eca2:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801eca4:	141b      	asrs	r3, r3, #16
 801eca6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ecaa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ecae:	f100 81d1 	bmi.w	801f054 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ecb2:	f101 38ff 	add.w	r8, r1, #4294967295
 801ecb6:	4543      	cmp	r3, r8
 801ecb8:	f280 81cc 	bge.w	801f054 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ecbc:	f1bc 0f00 	cmp.w	ip, #0
 801ecc0:	f2c0 81c8 	blt.w	801f054 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ecc4:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ecc8:	45c4      	cmp	ip, r8
 801ecca:	f280 81c3 	bge.w	801f054 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ecce:	b209      	sxth	r1, r1
 801ecd0:	fb0c 3301 	mla	r3, ip, r1, r3
 801ecd4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ecd6:	eb04 0803 	add.w	r8, r4, r3
 801ecda:	5ce3      	ldrb	r3, [r4, r3]
 801ecdc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ece0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ece4:	2a00      	cmp	r2, #0
 801ece6:	f000 81aa 	beq.w	801f03e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801ecea:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ecee:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ecf2:	940b      	str	r4, [sp, #44]	@ 0x2c
 801ecf4:	0e24      	lsrs	r4, r4, #24
 801ecf6:	9412      	str	r4, [sp, #72]	@ 0x48
 801ecf8:	b178      	cbz	r0, 801ed1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801ecfa:	eb08 0c01 	add.w	ip, r8, r1
 801ecfe:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ed02:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ed06:	9108      	str	r1, [sp, #32]
 801ed08:	0e09      	lsrs	r1, r1, #24
 801ed0a:	9110      	str	r1, [sp, #64]	@ 0x40
 801ed0c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801ed10:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ed14:	910c      	str	r1, [sp, #48]	@ 0x30
 801ed16:	0e09      	lsrs	r1, r1, #24
 801ed18:	9113      	str	r1, [sp, #76]	@ 0x4c
 801ed1a:	b292      	uxth	r2, r2
 801ed1c:	b280      	uxth	r0, r0
 801ed1e:	fb02 f900 	mul.w	r9, r2, r0
 801ed22:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ed26:	0112      	lsls	r2, r2, #4
 801ed28:	eba2 0809 	sub.w	r8, r2, r9
 801ed2c:	b280      	uxth	r0, r0
 801ed2e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ed32:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801ed34:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ed36:	fa1f f888 	uxth.w	r8, r8
 801ed3a:	1a12      	subs	r2, r2, r0
 801ed3c:	b292      	uxth	r2, r2
 801ed3e:	fb08 f101 	mul.w	r1, r8, r1
 801ed42:	fb02 110e 	mla	r1, r2, lr, r1
 801ed46:	fb00 1104 	mla	r1, r0, r4, r1
 801ed4a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ed4c:	fb09 1104 	mla	r1, r9, r4, r1
 801ed50:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ed54:	2900      	cmp	r1, #0
 801ed56:	f000 80f5 	beq.w	801ef44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ed5a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801ed5e:	d01b      	beq.n	801ed98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ed60:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ed64:	fb0e fa0a 	mul.w	sl, lr, sl
 801ed68:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ed6c:	fb0e fe03 	mul.w	lr, lr, r3
 801ed70:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ed74:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ed78:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ed7c:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801ed80:	4453      	add	r3, sl
 801ed82:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ed86:	0a1b      	lsrs	r3, r3, #8
 801ed88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed8c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ed90:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ed94:	ea43 030c 	orr.w	r3, r3, ip
 801ed98:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801ed9a:	2cff      	cmp	r4, #255	@ 0xff
 801ed9c:	d021      	beq.n	801ede2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801ed9e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801eda0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801eda4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801eda6:	fb04 fb0b 	mul.w	fp, r4, fp
 801edaa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801edac:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801edb0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801edb2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801edb6:	fb04 fa0a 	mul.w	sl, r4, sl
 801edba:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801edbe:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801edc2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801edc6:	44de      	add	lr, fp
 801edc8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801edcc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801edd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801edd4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801edd8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801eddc:	ea4e 040a 	orr.w	r4, lr, sl
 801ede0:	940b      	str	r4, [sp, #44]	@ 0x2c
 801ede2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ede4:	2cff      	cmp	r4, #255	@ 0xff
 801ede6:	d021      	beq.n	801ee2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801ede8:	9c08      	ldr	r4, [sp, #32]
 801edea:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801edee:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801edf0:	fb04 fb0b 	mul.w	fp, r4, fp
 801edf4:	9c08      	ldr	r4, [sp, #32]
 801edf6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801edfa:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801edfc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ee00:	fb04 fa0a 	mul.w	sl, r4, sl
 801ee04:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ee08:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ee0c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ee10:	44de      	add	lr, fp
 801ee12:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ee16:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ee1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee1e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ee22:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ee26:	ea4e 040a 	orr.w	r4, lr, sl
 801ee2a:	9408      	str	r4, [sp, #32]
 801ee2c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ee2e:	2cff      	cmp	r4, #255	@ 0xff
 801ee30:	d021      	beq.n	801ee76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ee32:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ee34:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ee38:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ee3a:	fb04 fb0b 	mul.w	fp, r4, fp
 801ee3e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ee40:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ee44:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ee46:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ee4a:	fb04 fa0a 	mul.w	sl, r4, sl
 801ee4e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ee52:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ee56:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ee5a:	44de      	add	lr, fp
 801ee5c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ee60:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ee64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee68:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ee6c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ee70:	ea4e 040a 	orr.w	r4, lr, sl
 801ee74:	940c      	str	r4, [sp, #48]	@ 0x30
 801ee76:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ee78:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ee7c:	9c08      	ldr	r4, [sp, #32]
 801ee7e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801ee82:	fb08 fc0c 	mul.w	ip, r8, ip
 801ee86:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ee8a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801ee8e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ee90:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ee94:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801ee98:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ee9a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ee9e:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801eea2:	fb08 f80e 	mul.w	r8, r8, lr
 801eea6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eeaa:	fb02 8303 	mla	r3, r2, r3, r8
 801eeae:	9a08      	ldr	r2, [sp, #32]
 801eeb0:	f8b7 8000 	ldrh.w	r8, [r7]
 801eeb4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801eeb8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801eeba:	fb00 330a 	mla	r3, r0, sl, r3
 801eebe:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801eec2:	fb09 3900 	mla	r9, r9, r0, r3
 801eec6:	43c9      	mvns	r1, r1
 801eec8:	ea4f 2228 	mov.w	r2, r8, asr #8
 801eecc:	fa5f fe81 	uxtb.w	lr, r1
 801eed0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eed4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801eed8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801eedc:	fb02 f20e 	mul.w	r2, r2, lr
 801eee0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801eee4:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801eee8:	ea4c 0c09 	orr.w	ip, ip, r9
 801eeec:	1c53      	adds	r3, r2, #1
 801eeee:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801eef2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801eef6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801eefa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eefe:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ef02:	4a63      	ldr	r2, [pc, #396]	@ (801f090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801ef04:	fb00 f00e 	mul.w	r0, r0, lr
 801ef08:	b2db      	uxtb	r3, r3
 801ef0a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801ef0e:	1c43      	adds	r3, r0, #1
 801ef10:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ef14:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801ef18:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801ef1c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ef20:	b2c9      	uxtb	r1, r1
 801ef22:	00db      	lsls	r3, r3, #3
 801ef24:	fb01 f10e 	mul.w	r1, r1, lr
 801ef28:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ef2c:	4313      	orrs	r3, r2
 801ef2e:	1c4a      	adds	r2, r1, #1
 801ef30:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ef34:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ef38:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ef3c:	ea4c 0c03 	orr.w	ip, ip, r3
 801ef40:	f8a7 c000 	strh.w	ip, [r7]
 801ef44:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ef46:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801ef48:	441a      	add	r2, r3
 801ef4a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ef4c:	9225      	str	r2, [sp, #148]	@ 0x94
 801ef4e:	441d      	add	r5, r3
 801ef50:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ef52:	3b01      	subs	r3, #1
 801ef54:	3702      	adds	r7, #2
 801ef56:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ef58:	e699      	b.n	801ec8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ef5a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ef5c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ef5e:	441c      	add	r4, r3
 801ef60:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ef62:	9425      	str	r4, [sp, #148]	@ 0x94
 801ef64:	441d      	add	r5, r3
 801ef66:	9b07      	ldr	r3, [sp, #28]
 801ef68:	3b01      	subs	r3, #1
 801ef6a:	9307      	str	r3, [sp, #28]
 801ef6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ef6e:	3302      	adds	r3, #2
 801ef70:	930a      	str	r3, [sp, #40]	@ 0x28
 801ef72:	e66b      	b.n	801ec4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ef74:	d024      	beq.n	801efc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801ef76:	9b07      	ldr	r3, [sp, #28]
 801ef78:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801ef7a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ef7c:	3b01      	subs	r3, #1
 801ef7e:	fb00 4003 	mla	r0, r0, r3, r4
 801ef82:	1400      	asrs	r0, r0, #16
 801ef84:	f53f ae80 	bmi.w	801ec88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ef88:	3901      	subs	r1, #1
 801ef8a:	4288      	cmp	r0, r1
 801ef8c:	f6bf ae7c 	bge.w	801ec88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ef90:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801ef92:	fb01 5303 	mla	r3, r1, r3, r5
 801ef96:	141b      	asrs	r3, r3, #16
 801ef98:	f53f ae76 	bmi.w	801ec88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ef9c:	3a01      	subs	r2, #1
 801ef9e:	4293      	cmp	r3, r2
 801efa0:	f6bf ae72 	bge.w	801ec88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801efa4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801efa8:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801efac:	f1bb 0f00 	cmp.w	fp, #0
 801efb0:	dc70      	bgt.n	801f094 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801efb2:	9b07      	ldr	r3, [sp, #28]
 801efb4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801efb8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801efba:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801efbe:	930a      	str	r3, [sp, #40]	@ 0x28
 801efc0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801efc2:	2b00      	cmp	r3, #0
 801efc4:	f340 81ae 	ble.w	801f324 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801efc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801efcc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801efd0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801efd4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801efd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801efda:	ee31 1a05 	vadd.f32	s2, s2, s10
 801efde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801efe2:	eef0 6a62 	vmov.f32	s13, s5
 801efe6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801efea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801efee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eff2:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801eff6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801effa:	eef0 6a43 	vmov.f32	s13, s6
 801effe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f002:	ee12 2a90 	vmov	r2, s5
 801f006:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f00a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f00e:	ee13 2a10 	vmov	r2, s6
 801f012:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f014:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f016:	fb92 f3f3 	sdiv	r3, r2, r3
 801f01a:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f01c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f01e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f020:	3b01      	subs	r3, #1
 801f022:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f026:	9316      	str	r3, [sp, #88]	@ 0x58
 801f028:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f02a:	bf08      	it	eq
 801f02c:	4613      	moveq	r3, r2
 801f02e:	ee16 5a90 	vmov	r5, s13
 801f032:	9307      	str	r3, [sp, #28]
 801f034:	eeb0 3a67 	vmov.f32	s6, s15
 801f038:	eef0 2a47 	vmov.f32	s5, s14
 801f03c:	e5f8      	b.n	801ec30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801f03e:	2800      	cmp	r0, #0
 801f040:	f43f ae6b 	beq.w	801ed1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801f044:	f818 1001 	ldrb.w	r1, [r8, r1]
 801f048:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f04c:	9108      	str	r1, [sp, #32]
 801f04e:	0e09      	lsrs	r1, r1, #24
 801f050:	9110      	str	r1, [sp, #64]	@ 0x40
 801f052:	e662      	b.n	801ed1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801f054:	f113 0801 	adds.w	r8, r3, #1
 801f058:	f53f af74 	bmi.w	801ef44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f05c:	4541      	cmp	r1, r8
 801f05e:	f6ff af71 	blt.w	801ef44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f062:	f11c 0801 	adds.w	r8, ip, #1
 801f066:	f53f af6d 	bmi.w	801ef44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f06a:	45c6      	cmp	lr, r8
 801f06c:	f6ff af6a 	blt.w	801ef44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f070:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801f074:	b209      	sxth	r1, r1
 801f076:	fa0f f38e 	sxth.w	r3, lr
 801f07a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801f07e:	9301      	str	r3, [sp, #4]
 801f080:	9100      	str	r1, [sp, #0]
 801f082:	4633      	mov	r3, r6
 801f084:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f086:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801f088:	4639      	mov	r1, r7
 801f08a:	f7ff fc7a 	bl	801e982 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801f08e:	e759      	b.n	801ef44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f090:	fffff800 	.word	0xfffff800
 801f094:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801f096:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801f098:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f09c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f09e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f0a2:	1427      	asrs	r7, r4, #16
 801f0a4:	142b      	asrs	r3, r5, #16
 801f0a6:	fb01 7303 	mla	r3, r1, r3, r7
 801f0aa:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801f0ac:	18e7      	adds	r7, r4, r3
 801f0ae:	5ce3      	ldrb	r3, [r4, r3]
 801f0b0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f0b4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f0b8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f0bc:	2a00      	cmp	r2, #0
 801f0be:	f000 8127 	beq.w	801f310 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801f0c2:	f897 e001 	ldrb.w	lr, [r7, #1]
 801f0c6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801f0ca:	940d      	str	r4, [sp, #52]	@ 0x34
 801f0cc:	0e24      	lsrs	r4, r4, #24
 801f0ce:	9414      	str	r4, [sp, #80]	@ 0x50
 801f0d0:	b170      	cbz	r0, 801f0f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801f0d2:	eb07 0e01 	add.w	lr, r7, r1
 801f0d6:	5c79      	ldrb	r1, [r7, r1]
 801f0d8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f0dc:	9109      	str	r1, [sp, #36]	@ 0x24
 801f0de:	0e09      	lsrs	r1, r1, #24
 801f0e0:	9111      	str	r1, [sp, #68]	@ 0x44
 801f0e2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801f0e6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f0ea:	910e      	str	r1, [sp, #56]	@ 0x38
 801f0ec:	0e09      	lsrs	r1, r1, #24
 801f0ee:	9115      	str	r1, [sp, #84]	@ 0x54
 801f0f0:	b292      	uxth	r2, r2
 801f0f2:	b280      	uxth	r0, r0
 801f0f4:	fb02 f800 	mul.w	r8, r2, r0
 801f0f8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801f0fc:	0112      	lsls	r2, r2, #4
 801f0fe:	eba2 0e08 	sub.w	lr, r2, r8
 801f102:	b280      	uxth	r0, r0
 801f104:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801f108:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f10a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801f10c:	fa1f fe8e 	uxth.w	lr, lr
 801f110:	1a09      	subs	r1, r1, r0
 801f112:	b289      	uxth	r1, r1
 801f114:	fb0e f202 	mul.w	r2, lr, r2
 801f118:	fb01 220c 	mla	r2, r1, ip, r2
 801f11c:	fb00 2204 	mla	r2, r0, r4, r2
 801f120:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801f122:	fb08 2204 	mla	r2, r8, r4, r2
 801f126:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f12a:	2a00      	cmp	r2, #0
 801f12c:	f000 80e5 	beq.w	801f2fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801f130:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f134:	d019      	beq.n	801f16a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801f136:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f13a:	fb0c fa0a 	mul.w	sl, ip, sl
 801f13e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f142:	fb0c fc03 	mul.w	ip, ip, r3
 801f146:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f14a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f14e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f152:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f156:	4453      	add	r3, sl
 801f158:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f15c:	0a1b      	lsrs	r3, r3, #8
 801f15e:	0a3f      	lsrs	r7, r7, #8
 801f160:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f164:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f168:	433b      	orrs	r3, r7
 801f16a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f16c:	2cff      	cmp	r4, #255	@ 0xff
 801f16e:	d020      	beq.n	801f1b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801f170:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f172:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801f176:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f178:	4367      	muls	r7, r4
 801f17a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f17c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801f180:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f182:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f186:	fb04 fa0a 	mul.w	sl, r4, sl
 801f18a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f18e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f192:	44bc      	add	ip, r7
 801f194:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f198:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f19c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f1a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f1a4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f1a8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f1ac:	ea4c 040a 	orr.w	r4, ip, sl
 801f1b0:	940d      	str	r4, [sp, #52]	@ 0x34
 801f1b2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801f1b4:	2cff      	cmp	r4, #255	@ 0xff
 801f1b6:	d020      	beq.n	801f1fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801f1b8:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801f1ba:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801f1be:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801f1c0:	4367      	muls	r7, r4
 801f1c2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801f1c4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801f1c8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801f1ca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f1ce:	fb04 fa0a 	mul.w	sl, r4, sl
 801f1d2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f1d6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f1da:	44bc      	add	ip, r7
 801f1dc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f1e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f1e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f1e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f1ec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f1f0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f1f4:	ea4c 040a 	orr.w	r4, ip, sl
 801f1f8:	9409      	str	r4, [sp, #36]	@ 0x24
 801f1fa:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801f1fc:	2cff      	cmp	r4, #255	@ 0xff
 801f1fe:	d020      	beq.n	801f242 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801f200:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f202:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801f206:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801f208:	4367      	muls	r7, r4
 801f20a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f20c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801f210:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801f212:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f216:	fb04 fa0a 	mul.w	sl, r4, sl
 801f21a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f21e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f222:	44bc      	add	ip, r7
 801f224:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f228:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f22c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f230:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f234:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f238:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f23c:	ea4c 040a 	orr.w	r4, ip, sl
 801f240:	940e      	str	r4, [sp, #56]	@ 0x38
 801f242:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f244:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801f248:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801f24a:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f24e:	fb0e f707 	mul.w	r7, lr, r7
 801f252:	fb01 770c 	mla	r7, r1, ip, r7
 801f256:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f25a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f25c:	fb00 770c 	mla	r7, r0, ip, r7
 801f260:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f264:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f266:	fb08 770c 	mla	r7, r8, ip, r7
 801f26a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801f26e:	fb0e fe0c 	mul.w	lr, lr, ip
 801f272:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f276:	fb01 e303 	mla	r3, r1, r3, lr
 801f27a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f27c:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f280:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801f282:	fb00 330a 	mla	r3, r0, sl, r3
 801f286:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801f28a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f28e:	f8b9 3000 	ldrh.w	r3, [r9]
 801f292:	43d2      	mvns	r2, r2
 801f294:	1218      	asrs	r0, r3, #8
 801f296:	b2d2      	uxtb	r2, r2
 801f298:	10d9      	asrs	r1, r3, #3
 801f29a:	0a3f      	lsrs	r7, r7, #8
 801f29c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f2a0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f2a4:	00db      	lsls	r3, r3, #3
 801f2a6:	4350      	muls	r0, r2
 801f2a8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f2ac:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f2b0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f2b4:	b2db      	uxtb	r3, r3
 801f2b6:	ea47 070c 	orr.w	r7, r7, ip
 801f2ba:	4351      	muls	r1, r2
 801f2bc:	4353      	muls	r3, r2
 801f2be:	1c42      	adds	r2, r0, #1
 801f2c0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f2c4:	0c3a      	lsrs	r2, r7, #16
 801f2c6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f2ca:	4a18      	ldr	r2, [pc, #96]	@ (801f32c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801f2cc:	b2c0      	uxtb	r0, r0
 801f2ce:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801f2d2:	1c4a      	adds	r2, r1, #1
 801f2d4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f2d8:	0a3a      	lsrs	r2, r7, #8
 801f2da:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f2de:	00c9      	lsls	r1, r1, #3
 801f2e0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f2e4:	4301      	orrs	r1, r0
 801f2e6:	1c58      	adds	r0, r3, #1
 801f2e8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f2ec:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801f2f0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801f2f4:	4308      	orrs	r0, r1
 801f2f6:	f8a9 0000 	strh.w	r0, [r9]
 801f2fa:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f2fc:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f2fe:	441a      	add	r2, r3
 801f300:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f302:	9225      	str	r2, [sp, #148]	@ 0x94
 801f304:	f109 0902 	add.w	r9, r9, #2
 801f308:	441d      	add	r5, r3
 801f30a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f30e:	e64d      	b.n	801efac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801f310:	2800      	cmp	r0, #0
 801f312:	f43f aeed 	beq.w	801f0f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801f316:	5c79      	ldrb	r1, [r7, r1]
 801f318:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f31c:	9109      	str	r1, [sp, #36]	@ 0x24
 801f31e:	0e09      	lsrs	r1, r1, #24
 801f320:	9111      	str	r1, [sp, #68]	@ 0x44
 801f322:	e6e5      	b.n	801f0f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801f324:	b01b      	add	sp, #108	@ 0x6c
 801f326:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f32a:	bf00      	nop
 801f32c:	fffff800 	.word	0xfffff800

0801f330 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801f330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f334:	b085      	sub	sp, #20
 801f336:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801f33a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801f33e:	9103      	str	r1, [sp, #12]
 801f340:	fb00 7406 	mla	r4, r0, r6, r7
 801f344:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801f348:	2800      	cmp	r0, #0
 801f34a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801f34e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801f352:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801f356:	9501      	str	r5, [sp, #4]
 801f358:	eb03 0904 	add.w	r9, r3, r4
 801f35c:	f2c0 8150 	blt.w	801f600 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801f360:	4583      	cmp	fp, r0
 801f362:	f340 814d 	ble.w	801f600 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801f366:	2f00      	cmp	r7, #0
 801f368:	f2c0 8146 	blt.w	801f5f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801f36c:	42be      	cmp	r6, r7
 801f36e:	f340 8143 	ble.w	801f5f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801f372:	f813 c004 	ldrb.w	ip, [r3, r4]
 801f376:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801f37a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f37e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801f382:	4355      	muls	r5, r2
 801f384:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f388:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801f38c:	fb0c f203 	mul.w	r2, ip, r3
 801f390:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801f394:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801f398:	441d      	add	r5, r3
 801f39a:	f102 0320 	add.w	r3, r2, #32
 801f39e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f3a2:	0a1b      	lsrs	r3, r3, #8
 801f3a4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801f3a8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f3ac:	431c      	orrs	r4, r3
 801f3ae:	1c7b      	adds	r3, r7, #1
 801f3b0:	f100 812b 	bmi.w	801f60a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801f3b4:	429e      	cmp	r6, r3
 801f3b6:	f340 8128 	ble.w	801f60a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801f3ba:	2900      	cmp	r1, #0
 801f3bc:	f000 8128 	beq.w	801f610 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801f3c0:	9a01      	ldr	r2, [sp, #4]
 801f3c2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801f3c6:	8855      	ldrh	r5, [r2, #2]
 801f3c8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801f3cc:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801f3d0:	fb08 f802 	mul.w	r8, r8, r2
 801f3d4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f3d8:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801f3dc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801f3e0:	435d      	muls	r5, r3
 801f3e2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f3e6:	44d0      	add	r8, sl
 801f3e8:	f105 0a20 	add.w	sl, r5, #32
 801f3ec:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801f3f0:	0a2d      	lsrs	r5, r5, #8
 801f3f2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801f3f6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f3fa:	432a      	orrs	r2, r5
 801f3fc:	3001      	adds	r0, #1
 801f3fe:	f100 810d 	bmi.w	801f61c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801f402:	4583      	cmp	fp, r0
 801f404:	f340 810a 	ble.w	801f61c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801f408:	f1be 0f00 	cmp.w	lr, #0
 801f40c:	f000 810b 	beq.w	801f626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801f410:	2f00      	cmp	r7, #0
 801f412:	f2c0 8100 	blt.w	801f616 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801f416:	42be      	cmp	r6, r7
 801f418:	f340 80fd 	ble.w	801f616 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801f41c:	9801      	ldr	r0, [sp, #4]
 801f41e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801f422:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801f426:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801f42a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801f42e:	fb0a fa00 	mul.w	sl, sl, r0
 801f432:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801f436:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801f43a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801f43e:	fb05 f808 	mul.w	r8, r5, r8
 801f442:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801f446:	4482      	add	sl, r0
 801f448:	f108 0020 	add.w	r0, r8, #32
 801f44c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801f450:	0a00      	lsrs	r0, r0, #8
 801f452:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801f456:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f45a:	ea4b 0b00 	orr.w	fp, fp, r0
 801f45e:	3701      	adds	r7, #1
 801f460:	f100 80e6 	bmi.w	801f630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801f464:	42be      	cmp	r6, r7
 801f466:	f340 80e3 	ble.w	801f630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801f46a:	2900      	cmp	r1, #0
 801f46c:	f000 80e3 	beq.w	801f636 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801f470:	3601      	adds	r6, #1
 801f472:	9801      	ldr	r0, [sp, #4]
 801f474:	f819 7006 	ldrb.w	r7, [r9, r6]
 801f478:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801f47c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801f480:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801f484:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f488:	fb09 f906 	mul.w	r9, r9, r6
 801f48c:	fb07 f800 	mul.w	r8, r7, r0
 801f490:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801f494:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801f498:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801f49c:	44d1      	add	r9, sl
 801f49e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801f4a2:	f108 0020 	add.w	r0, r8, #32
 801f4a6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801f4aa:	0a00      	lsrs	r0, r0, #8
 801f4ac:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f4b0:	4330      	orrs	r0, r6
 801f4b2:	b28e      	uxth	r6, r1
 801f4b4:	fa1f f98e 	uxth.w	r9, lr
 801f4b8:	fb06 f809 	mul.w	r8, r6, r9
 801f4bc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801f4c0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801f4c4:	0136      	lsls	r6, r6, #4
 801f4c6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f4ca:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801f4ce:	9601      	str	r6, [sp, #4]
 801f4d0:	ea4a 0404 	orr.w	r4, sl, r4
 801f4d4:	fa1f f689 	uxth.w	r6, r9
 801f4d8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f4dc:	fb11 f90e 	smulbb	r9, r1, lr
 801f4e0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801f4e4:	9602      	str	r6, [sp, #8]
 801f4e6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f4ea:	4626      	mov	r6, r4
 801f4ec:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f4f0:	f1ce 0410 	rsb	r4, lr, #16
 801f4f4:	1a64      	subs	r4, r4, r1
 801f4f6:	ea4a 0202 	orr.w	r2, sl, r2
 801f4fa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801f4fe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f502:	434a      	muls	r2, r1
 801f504:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801f508:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f50c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f510:	fb04 2406 	mla	r4, r4, r6, r2
 801f514:	ea4a 0000 	orr.w	r0, sl, r0
 801f518:	fb09 4200 	mla	r2, r9, r0, r4
 801f51c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801f520:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801f524:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801f528:	ea44 0b0b 	orr.w	fp, r4, fp
 801f52c:	9c01      	ldr	r4, [sp, #4]
 801f52e:	9e02      	ldr	r6, [sp, #8]
 801f530:	9903      	ldr	r1, [sp, #12]
 801f532:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801f536:	1ba4      	subs	r4, r4, r6
 801f538:	9e01      	ldr	r6, [sp, #4]
 801f53a:	8808      	ldrh	r0, [r1, #0]
 801f53c:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801f540:	eba6 0608 	sub.w	r6, r6, r8
 801f544:	b2b6      	uxth	r6, r6
 801f546:	b2a4      	uxth	r4, r4
 801f548:	4373      	muls	r3, r6
 801f54a:	fb0c 3304 	mla	r3, ip, r4, r3
 801f54e:	9c02      	ldr	r4, [sp, #8]
 801f550:	fb04 3505 	mla	r5, r4, r5, r3
 801f554:	fb08 5707 	mla	r7, r8, r7, r5
 801f558:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801f55c:	b289      	uxth	r1, r1
 801f55e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801f562:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f566:	434f      	muls	r7, r1
 801f568:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f56c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f570:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f574:	1c7b      	adds	r3, r7, #1
 801f576:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f57a:	ea42 0e0e 	orr.w	lr, r2, lr
 801f57e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f582:	fa1f f28e 	uxth.w	r2, lr
 801f586:	1203      	asrs	r3, r0, #8
 801f588:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801f58c:	b2ff      	uxtb	r7, r7
 801f58e:	1215      	asrs	r5, r2, #8
 801f590:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f594:	fb13 f307 	smulbb	r3, r3, r7
 801f598:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f59c:	fb05 3501 	mla	r5, r5, r1, r3
 801f5a0:	10c3      	asrs	r3, r0, #3
 801f5a2:	10d4      	asrs	r4, r2, #3
 801f5a4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f5a8:	fb13 f307 	smulbb	r3, r3, r7
 801f5ac:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801f5b0:	fb04 3401 	mla	r4, r4, r1, r3
 801f5b4:	00c3      	lsls	r3, r0, #3
 801f5b6:	00d2      	lsls	r2, r2, #3
 801f5b8:	b2db      	uxtb	r3, r3
 801f5ba:	fb13 f307 	smulbb	r3, r3, r7
 801f5be:	b2d2      	uxtb	r2, r2
 801f5c0:	fb02 3101 	mla	r1, r2, r1, r3
 801f5c4:	b2ad      	uxth	r5, r5
 801f5c6:	b289      	uxth	r1, r1
 801f5c8:	b2a4      	uxth	r4, r4
 801f5ca:	1c6b      	adds	r3, r5, #1
 801f5cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f5d0:	1c62      	adds	r2, r4, #1
 801f5d2:	1c4b      	adds	r3, r1, #1
 801f5d4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f5d8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801f5dc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f5e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f5e4:	0964      	lsrs	r4, r4, #5
 801f5e6:	432b      	orrs	r3, r5
 801f5e8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f5ec:	9a03      	ldr	r2, [sp, #12]
 801f5ee:	4323      	orrs	r3, r4
 801f5f0:	8013      	strh	r3, [r2, #0]
 801f5f2:	b005      	add	sp, #20
 801f5f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f5f8:	f04f 0c00 	mov.w	ip, #0
 801f5fc:	4664      	mov	r4, ip
 801f5fe:	e6d6      	b.n	801f3ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801f600:	2300      	movs	r3, #0
 801f602:	469c      	mov	ip, r3
 801f604:	461a      	mov	r2, r3
 801f606:	461c      	mov	r4, r3
 801f608:	e6f8      	b.n	801f3fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f60a:	2300      	movs	r3, #0
 801f60c:	461a      	mov	r2, r3
 801f60e:	e6f5      	b.n	801f3fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f610:	460b      	mov	r3, r1
 801f612:	460a      	mov	r2, r1
 801f614:	e6f2      	b.n	801f3fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f616:	2500      	movs	r5, #0
 801f618:	46ab      	mov	fp, r5
 801f61a:	e720      	b.n	801f45e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801f61c:	2700      	movs	r7, #0
 801f61e:	463d      	mov	r5, r7
 801f620:	4638      	mov	r0, r7
 801f622:	46bb      	mov	fp, r7
 801f624:	e745      	b.n	801f4b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f626:	4677      	mov	r7, lr
 801f628:	4675      	mov	r5, lr
 801f62a:	4670      	mov	r0, lr
 801f62c:	46f3      	mov	fp, lr
 801f62e:	e740      	b.n	801f4b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f630:	2700      	movs	r7, #0
 801f632:	4638      	mov	r0, r7
 801f634:	e73d      	b.n	801f4b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f636:	460f      	mov	r7, r1
 801f638:	4608      	mov	r0, r1
 801f63a:	e73a      	b.n	801f4b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801f63c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f63c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f640:	b097      	sub	sp, #92	@ 0x5c
 801f642:	9214      	str	r2, [sp, #80]	@ 0x50
 801f644:	9308      	str	r3, [sp, #32]
 801f646:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f648:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801f64c:	9312      	str	r3, [sp, #72]	@ 0x48
 801f64e:	9111      	str	r1, [sp, #68]	@ 0x44
 801f650:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801f654:	9015      	str	r0, [sp, #84]	@ 0x54
 801f656:	6850      	ldr	r0, [r2, #4]
 801f658:	6812      	ldr	r2, [r2, #0]
 801f65a:	fb00 1303 	mla	r3, r0, r3, r1
 801f65e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f662:	9309      	str	r3, [sp, #36]	@ 0x24
 801f664:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f666:	681b      	ldr	r3, [r3, #0]
 801f668:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f66a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f66c:	685b      	ldr	r3, [r3, #4]
 801f66e:	930c      	str	r3, [sp, #48]	@ 0x30
 801f670:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801f674:	930a      	str	r3, [sp, #40]	@ 0x28
 801f676:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f678:	2b00      	cmp	r3, #0
 801f67a:	dc03      	bgt.n	801f684 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f67c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801f67e:	2b00      	cmp	r3, #0
 801f680:	f340 83cb 	ble.w	801fe1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801f684:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f686:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f68a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f68e:	1e48      	subs	r0, r1, #1
 801f690:	1e55      	subs	r5, r2, #1
 801f692:	9b08      	ldr	r3, [sp, #32]
 801f694:	2b00      	cmp	r3, #0
 801f696:	f340 81a3 	ble.w	801f9e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801f69a:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801f69c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f69e:	1436      	asrs	r6, r6, #16
 801f6a0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f6a4:	d406      	bmi.n	801f6b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f6a6:	4286      	cmp	r6, r0
 801f6a8:	da04      	bge.n	801f6b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f6aa:	2b00      	cmp	r3, #0
 801f6ac:	db02      	blt.n	801f6b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f6ae:	42ab      	cmp	r3, r5
 801f6b0:	f2c0 8197 	blt.w	801f9e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f6b4:	3601      	adds	r6, #1
 801f6b6:	f100 8184 	bmi.w	801f9c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f6ba:	42b1      	cmp	r1, r6
 801f6bc:	f2c0 8181 	blt.w	801f9c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f6c0:	3301      	adds	r3, #1
 801f6c2:	f100 817e 	bmi.w	801f9c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f6c6:	429a      	cmp	r2, r3
 801f6c8:	f2c0 817b 	blt.w	801f9c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f6cc:	9b08      	ldr	r3, [sp, #32]
 801f6ce:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801f6d0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f6d2:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801f6d6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f6d8:	2b00      	cmp	r3, #0
 801f6da:	f340 81a4 	ble.w	801fa26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801f6de:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f6e0:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801f6e2:	1418      	asrs	r0, r3, #16
 801f6e4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f6e6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801f6ea:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f6ec:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801f6f0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f6f2:	142d      	asrs	r5, r5, #16
 801f6f4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801f6f8:	f100 81f8 	bmi.w	801faec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f6fc:	f102 3eff 	add.w	lr, r2, #4294967295
 801f700:	4575      	cmp	r5, lr
 801f702:	f280 81f3 	bge.w	801faec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f706:	2800      	cmp	r0, #0
 801f708:	f2c0 81f0 	blt.w	801faec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f70c:	f103 3eff 	add.w	lr, r3, #4294967295
 801f710:	4570      	cmp	r0, lr
 801f712:	f280 81eb 	bge.w	801faec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f716:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f718:	b212      	sxth	r2, r2
 801f71a:	fb00 5002 	mla	r0, r0, r2, r5
 801f71e:	fa1f fe81 	uxth.w	lr, r1
 801f722:	eb03 0a00 	add.w	sl, r3, r0
 801f726:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801f72a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801f72e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f732:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801f736:	b29b      	uxth	r3, r3
 801f738:	f1bc 0f00 	cmp.w	ip, #0
 801f73c:	f000 81b9 	beq.w	801fab2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801f740:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801f744:	940d      	str	r4, [sp, #52]	@ 0x34
 801f746:	eb0a 0b02 	add.w	fp, sl, r2
 801f74a:	fa1f fa8c 	uxth.w	sl, ip
 801f74e:	fb0a fe0e 	mul.w	lr, sl, lr
 801f752:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801f756:	fa1f fa8a 	uxth.w	sl, sl
 801f75a:	eba5 050e 	sub.w	r5, r5, lr
 801f75e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f762:	940e      	str	r4, [sp, #56]	@ 0x38
 801f764:	eba3 030a 	sub.w	r3, r3, sl
 801f768:	b2ad      	uxth	r5, r5
 801f76a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f76c:	b29b      	uxth	r3, r3
 801f76e:	fb08 f505 	mul.w	r5, r8, r5
 801f772:	fb09 5303 	mla	r3, r9, r3, r5
 801f776:	fb0a 3304 	mla	r3, sl, r4, r3
 801f77a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f77c:	fb0e 3304 	mla	r3, lr, r4, r3
 801f780:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f784:	2b00      	cmp	r3, #0
 801f786:	f000 810f 	beq.w	801f9a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f78a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801f78c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801f790:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801f794:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801f798:	f000 8190 	beq.w	801fabc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801f79c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801f7a0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f7a4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f7a8:	fb09 f000 	mul.w	r0, r9, r0
 801f7ac:	fb0a fe0e 	mul.w	lr, sl, lr
 801f7b0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801f7b4:	f100 0b20 	add.w	fp, r0, #32
 801f7b8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801f7bc:	44ce      	add	lr, r9
 801f7be:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801f7c2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f7c6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f7ca:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801f7ce:	ea4e 0909 	orr.w	r9, lr, r9
 801f7d2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801f7d6:	8868      	ldrh	r0, [r5, #2]
 801f7d8:	d019      	beq.n	801f80e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801f7da:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801f7de:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f7e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f7e6:	fb08 f800 	mul.w	r8, r8, r0
 801f7ea:	fb0a fe0e 	mul.w	lr, sl, lr
 801f7ee:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801f7f2:	f108 0b20 	add.w	fp, r8, #32
 801f7f6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801f7fa:	4486      	add	lr, r0
 801f7fc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801f800:	0a00      	lsrs	r0, r0, #8
 801f802:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f806:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f80a:	ea4e 0000 	orr.w	r0, lr, r0
 801f80e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801f812:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f816:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801f81a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f81e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f822:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f826:	ea4e 0909 	orr.w	r9, lr, r9
 801f82a:	ea4a 0000 	orr.w	r0, sl, r0
 801f82e:	f1bc 0f00 	cmp.w	ip, #0
 801f832:	f000 8145 	beq.w	801fac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801f836:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801f83a:	3a01      	subs	r2, #1
 801f83c:	0052      	lsls	r2, r2, #1
 801f83e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f840:	3202      	adds	r2, #2
 801f842:	2cff      	cmp	r4, #255	@ 0xff
 801f844:	eb05 0e02 	add.w	lr, r5, r2
 801f848:	5aaa      	ldrh	r2, [r5, r2]
 801f84a:	d018      	beq.n	801f87e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801f84c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801f850:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f854:	fb04 fa02 	mul.w	sl, r4, r2
 801f858:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f85c:	fb08 f805 	mul.w	r8, r8, r5
 801f860:	f10a 0520 	add.w	r5, sl, #32
 801f864:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801f868:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801f86c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f870:	4442      	add	r2, r8
 801f872:	0a2d      	lsrs	r5, r5, #8
 801f874:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801f878:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f87c:	432a      	orrs	r2, r5
 801f87e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f880:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801f884:	2cff      	cmp	r4, #255	@ 0xff
 801f886:	d01a      	beq.n	801f8be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801f888:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801f88c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f890:	fb04 fa05 	mul.w	sl, r4, r5
 801f894:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f898:	fb08 f80e 	mul.w	r8, r8, lr
 801f89c:	f10a 0e20 	add.w	lr, sl, #32
 801f8a0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801f8a4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801f8a8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f8ac:	4445      	add	r5, r8
 801f8ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f8b2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801f8b6:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801f8ba:	ea45 050e 	orr.w	r5, r5, lr
 801f8be:	fb1c fe01 	smulbb	lr, ip, r1
 801f8c2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801f8c6:	f1cc 0810 	rsb	r8, ip, #16
 801f8ca:	eba8 0801 	sub.w	r8, r8, r1
 801f8ce:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f8d2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801f8d6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801f8da:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801f8de:	4341      	muls	r1, r0
 801f8e0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f8e4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f8e8:	ea4a 0202 	orr.w	r2, sl, r2
 801f8ec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801f8f0:	fb09 1108 	mla	r1, r9, r8, r1
 801f8f4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f8f8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801f8fc:	fb0c 1102 	mla	r1, ip, r2, r1
 801f900:	ea4b 0505 	orr.w	r5, fp, r5
 801f904:	fb0e 1e05 	mla	lr, lr, r5, r1
 801f908:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f90c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f910:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f914:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f918:	ea42 0e0e 	orr.w	lr, r2, lr
 801f91c:	fa1f f28e 	uxth.w	r2, lr
 801f920:	2bff      	cmp	r3, #255	@ 0xff
 801f922:	d103      	bne.n	801f92c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801f924:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801f926:	29ff      	cmp	r1, #255	@ 0xff
 801f928:	f000 80de 	beq.w	801fae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801f92c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801f92e:	8838      	ldrh	r0, [r7, #0]
 801f930:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801f932:	434b      	muls	r3, r1
 801f934:	f103 0c01 	add.w	ip, r3, #1
 801f938:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801f93c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801f940:	fa5f fc83 	uxtb.w	ip, r3
 801f944:	1203      	asrs	r3, r0, #8
 801f946:	1215      	asrs	r5, r2, #8
 801f948:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f94c:	fb13 f30c 	smulbb	r3, r3, ip
 801f950:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f954:	fb05 3501 	mla	r5, r5, r1, r3
 801f958:	10c3      	asrs	r3, r0, #3
 801f95a:	10d1      	asrs	r1, r2, #3
 801f95c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f960:	fb13 f30c 	smulbb	r3, r3, ip
 801f964:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f968:	fb01 3104 	mla	r1, r1, r4, r3
 801f96c:	00c3      	lsls	r3, r0, #3
 801f96e:	00d2      	lsls	r2, r2, #3
 801f970:	b2db      	uxtb	r3, r3
 801f972:	b2d2      	uxtb	r2, r2
 801f974:	fb13 f30c 	smulbb	r3, r3, ip
 801f978:	b2ad      	uxth	r5, r5
 801f97a:	fb02 3304 	mla	r3, r2, r4, r3
 801f97e:	b29a      	uxth	r2, r3
 801f980:	1c6b      	adds	r3, r5, #1
 801f982:	b289      	uxth	r1, r1
 801f984:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f988:	1c53      	adds	r3, r2, #1
 801f98a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f98e:	1c4a      	adds	r2, r1, #1
 801f990:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f994:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f998:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f99c:	0949      	lsrs	r1, r1, #5
 801f99e:	432b      	orrs	r3, r5
 801f9a0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f9a4:	430b      	orrs	r3, r1
 801f9a6:	803b      	strh	r3, [r7, #0]
 801f9a8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f9aa:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801f9ac:	4413      	add	r3, r2
 801f9ae:	9321      	str	r3, [sp, #132]	@ 0x84
 801f9b0:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f9b2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f9b4:	441a      	add	r2, r3
 801f9b6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f9b8:	9222      	str	r2, [sp, #136]	@ 0x88
 801f9ba:	3b01      	subs	r3, #1
 801f9bc:	3702      	adds	r7, #2
 801f9be:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f9c0:	e689      	b.n	801f6d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f9c2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f9c4:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801f9c6:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801f9c8:	4433      	add	r3, r6
 801f9ca:	9321      	str	r3, [sp, #132]	@ 0x84
 801f9cc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f9ce:	441c      	add	r4, r3
 801f9d0:	9b08      	ldr	r3, [sp, #32]
 801f9d2:	9422      	str	r4, [sp, #136]	@ 0x88
 801f9d4:	3b01      	subs	r3, #1
 801f9d6:	9308      	str	r3, [sp, #32]
 801f9d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f9da:	3302      	adds	r3, #2
 801f9dc:	9309      	str	r3, [sp, #36]	@ 0x24
 801f9de:	e658      	b.n	801f692 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801f9e0:	d028      	beq.n	801fa34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f9e2:	9b08      	ldr	r3, [sp, #32]
 801f9e4:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801f9e6:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801f9e8:	3b01      	subs	r3, #1
 801f9ea:	fb00 5003 	mla	r0, r0, r3, r5
 801f9ee:	1400      	asrs	r0, r0, #16
 801f9f0:	f53f ae6c 	bmi.w	801f6cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f9f4:	3901      	subs	r1, #1
 801f9f6:	4288      	cmp	r0, r1
 801f9f8:	f6bf ae68 	bge.w	801f6cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f9fc:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801f9fe:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801fa00:	fb01 0303 	mla	r3, r1, r3, r0
 801fa04:	141b      	asrs	r3, r3, #16
 801fa06:	f53f ae61 	bmi.w	801f6cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801fa0a:	3a01      	subs	r2, #1
 801fa0c:	4293      	cmp	r3, r2
 801fa0e:	f6bf ae5d 	bge.w	801f6cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801fa12:	9b08      	ldr	r3, [sp, #32]
 801fa14:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801fa18:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fa1a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801fa1e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801fa20:	2b00      	cmp	r3, #0
 801fa22:	f300 8082 	bgt.w	801fb2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801fa26:	9b08      	ldr	r3, [sp, #32]
 801fa28:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fa2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fa2e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801fa32:	9309      	str	r3, [sp, #36]	@ 0x24
 801fa34:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801fa36:	2b00      	cmp	r3, #0
 801fa38:	f340 81ef 	ble.w	801fe1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801fa3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fa40:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fa44:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fa48:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fa4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fa52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fa56:	eef0 6a62 	vmov.f32	s13, s5
 801fa5a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fa5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa62:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fa66:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801fa6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fa6e:	eef0 6a43 	vmov.f32	s13, s6
 801fa72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fa76:	ee12 2a90 	vmov	r2, s5
 801fa7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fa7e:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa82:	ee13 2a10 	vmov	r2, s6
 801fa86:	9323      	str	r3, [sp, #140]	@ 0x8c
 801fa88:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa8a:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa8e:	9324      	str	r3, [sp, #144]	@ 0x90
 801fa90:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801fa92:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801fa94:	3b01      	subs	r3, #1
 801fa96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa9a:	9311      	str	r3, [sp, #68]	@ 0x44
 801fa9c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa9e:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801faa2:	bf08      	it	eq
 801faa4:	4613      	moveq	r3, r2
 801faa6:	9308      	str	r3, [sp, #32]
 801faa8:	eeb0 3a67 	vmov.f32	s6, s15
 801faac:	eef0 2a47 	vmov.f32	s5, s14
 801fab0:	e5e1      	b.n	801f676 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fab2:	fb08 f505 	mul.w	r5, r8, r5
 801fab6:	fb09 5303 	mla	r3, r9, r3, r5
 801faba:	e661      	b.n	801f780 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801fabc:	4681      	mov	r9, r0
 801fabe:	e688      	b.n	801f7d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801fac0:	f1c1 0210 	rsb	r2, r1, #16
 801fac4:	4341      	muls	r1, r0
 801fac6:	fb09 1902 	mla	r9, r9, r2, r1
 801faca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801face:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801fad2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801fad6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fada:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801fade:	ea42 0909 	orr.w	r9, r2, r9
 801fae2:	fa1f f289 	uxth.w	r2, r9
 801fae6:	e71b      	b.n	801f920 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801fae8:	803a      	strh	r2, [r7, #0]
 801faea:	e75d      	b.n	801f9a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801faec:	f115 0e01 	adds.w	lr, r5, #1
 801faf0:	f53f af5a 	bmi.w	801f9a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801faf4:	4572      	cmp	r2, lr
 801faf6:	f6ff af57 	blt.w	801f9a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801fafa:	f110 0e01 	adds.w	lr, r0, #1
 801fafe:	f53f af53 	bmi.w	801f9a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801fb02:	4573      	cmp	r3, lr
 801fb04:	f6ff af50 	blt.w	801f9a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801fb08:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801fb0a:	9502      	str	r5, [sp, #8]
 801fb0c:	b21b      	sxth	r3, r3
 801fb0e:	b212      	sxth	r2, r2
 801fb10:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801fb14:	9301      	str	r3, [sp, #4]
 801fb16:	9200      	str	r2, [sp, #0]
 801fb18:	e9cd c405 	strd	ip, r4, [sp, #20]
 801fb1c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801fb20:	4639      	mov	r1, r7
 801fb22:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801fb24:	f7ff fc04 	bl	801f330 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801fb28:	e73e      	b.n	801f9a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801fb2a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801fb2c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fb30:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801fb32:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801fb36:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fb38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fb3c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801fb3e:	141f      	asrs	r7, r3, #16
 801fb40:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801fb42:	141b      	asrs	r3, r3, #16
 801fb44:	fb01 3707 	mla	r7, r1, r7, r3
 801fb48:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fb4a:	fa1f fc82 	uxth.w	ip, r2
 801fb4e:	eb03 0a07 	add.w	sl, r3, r7
 801fb52:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801fb56:	f813 9007 	ldrb.w	r9, [r3, r7]
 801fb5a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801fb5e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801fb62:	b29b      	uxth	r3, r3
 801fb64:	2d00      	cmp	r5, #0
 801fb66:	f000 813d 	beq.w	801fde4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801fb6a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801fb6e:	940f      	str	r4, [sp, #60]	@ 0x3c
 801fb70:	eb0a 0b01 	add.w	fp, sl, r1
 801fb74:	fa1f fa85 	uxth.w	sl, r5
 801fb78:	fb0a fc0c 	mul.w	ip, sl, ip
 801fb7c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801fb80:	fa1f fa8a 	uxth.w	sl, sl
 801fb84:	eba0 000c 	sub.w	r0, r0, ip
 801fb88:	eba3 030a 	sub.w	r3, r3, sl
 801fb8c:	b280      	uxth	r0, r0
 801fb8e:	fb08 f000 	mul.w	r0, r8, r0
 801fb92:	b29b      	uxth	r3, r3
 801fb94:	fb09 0303 	mla	r3, r9, r3, r0
 801fb98:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801fb9a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801fb9e:	9410      	str	r4, [sp, #64]	@ 0x40
 801fba0:	fb0a 3300 	mla	r3, sl, r0, r3
 801fba4:	fb0c 3304 	mla	r3, ip, r4, r3
 801fba8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fbac:	2b00      	cmp	r3, #0
 801fbae:	f000 810b 	beq.w	801fdc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801fbb2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801fbb4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801fbb6:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801fbba:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801fbbe:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801fbc2:	f000 8114 	beq.w	801fdee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801fbc6:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801fbca:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801fbce:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801fbd2:	fb09 f707 	mul.w	r7, r9, r7
 801fbd6:	fb0a fc0c 	mul.w	ip, sl, ip
 801fbda:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801fbde:	f107 0b20 	add.w	fp, r7, #32
 801fbe2:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801fbe6:	44cc      	add	ip, r9
 801fbe8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801fbec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fbf0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801fbf4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801fbf8:	ea4c 0909 	orr.w	r9, ip, r9
 801fbfc:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801fc00:	8847      	ldrh	r7, [r0, #2]
 801fc02:	d019      	beq.n	801fc38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801fc04:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801fc08:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801fc0c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801fc10:	fb08 f807 	mul.w	r8, r8, r7
 801fc14:	fb0a fc0c 	mul.w	ip, sl, ip
 801fc18:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801fc1c:	f108 0b20 	add.w	fp, r8, #32
 801fc20:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801fc24:	44bc      	add	ip, r7
 801fc26:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801fc2a:	0a3f      	lsrs	r7, r7, #8
 801fc2c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801fc30:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801fc34:	ea4c 0707 	orr.w	r7, ip, r7
 801fc38:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801fc3c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801fc40:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801fc44:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801fc48:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fc4c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801fc50:	ea4c 0909 	orr.w	r9, ip, r9
 801fc54:	ea4a 0707 	orr.w	r7, sl, r7
 801fc58:	2d00      	cmp	r5, #0
 801fc5a:	f000 80ca 	beq.w	801fdf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801fc5e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801fc62:	3901      	subs	r1, #1
 801fc64:	0049      	lsls	r1, r1, #1
 801fc66:	3102      	adds	r1, #2
 801fc68:	eb00 0c01 	add.w	ip, r0, r1
 801fc6c:	5a41      	ldrh	r1, [r0, r1]
 801fc6e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801fc70:	28ff      	cmp	r0, #255	@ 0xff
 801fc72:	d019      	beq.n	801fca8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801fc74:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801fc76:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801fc7a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801fc7e:	fb04 fa01 	mul.w	sl, r4, r1
 801fc82:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fc86:	fb08 f800 	mul.w	r8, r8, r0
 801fc8a:	f10a 0020 	add.w	r0, sl, #32
 801fc8e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801fc92:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801fc96:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801fc9a:	4441      	add	r1, r8
 801fc9c:	0a00      	lsrs	r0, r0, #8
 801fc9e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801fca2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fca6:	4301      	orrs	r1, r0
 801fca8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801fcaa:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801fcae:	2cff      	cmp	r4, #255	@ 0xff
 801fcb0:	d01a      	beq.n	801fce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801fcb2:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801fcb6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fcba:	fb04 fa00 	mul.w	sl, r4, r0
 801fcbe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fcc2:	fb08 f80c 	mul.w	r8, r8, ip
 801fcc6:	f10a 0c20 	add.w	ip, sl, #32
 801fcca:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801fcce:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801fcd2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801fcd6:	4440      	add	r0, r8
 801fcd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fcdc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801fce0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801fce4:	ea40 000c 	orr.w	r0, r0, ip
 801fce8:	fb15 fc02 	smulbb	ip, r5, r2
 801fcec:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801fcf0:	f1c5 0810 	rsb	r8, r5, #16
 801fcf4:	eba8 0802 	sub.w	r8, r8, r2
 801fcf8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801fcfc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801fd00:	437a      	muls	r2, r7
 801fd02:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801fd06:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801fd0a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fd0e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801fd12:	fb09 2208 	mla	r2, r9, r8, r2
 801fd16:	ea4a 0101 	orr.w	r1, sl, r1
 801fd1a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801fd1e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801fd22:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fd26:	fb05 2201 	mla	r2, r5, r1, r2
 801fd2a:	ea4b 0000 	orr.w	r0, fp, r0
 801fd2e:	fb0c 2200 	mla	r2, ip, r0, r2
 801fd32:	0d57      	lsrs	r7, r2, #21
 801fd34:	0952      	lsrs	r2, r2, #5
 801fd36:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801fd3a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fd3e:	433a      	orrs	r2, r7
 801fd40:	2bff      	cmp	r3, #255	@ 0xff
 801fd42:	b292      	uxth	r2, r2
 801fd44:	d102      	bne.n	801fd4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801fd46:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801fd48:	29ff      	cmp	r1, #255	@ 0xff
 801fd4a:	d063      	beq.n	801fe14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801fd4c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801fd4e:	f8be 1000 	ldrh.w	r1, [lr]
 801fd52:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801fd54:	4343      	muls	r3, r0
 801fd56:	1c58      	adds	r0, r3, #1
 801fd58:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801fd5c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801fd60:	1208      	asrs	r0, r1, #8
 801fd62:	b2db      	uxtb	r3, r3
 801fd64:	1215      	asrs	r5, r2, #8
 801fd66:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fd6a:	fb10 f003 	smulbb	r0, r0, r3
 801fd6e:	10cf      	asrs	r7, r1, #3
 801fd70:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801fd74:	00c9      	lsls	r1, r1, #3
 801fd76:	fb05 0504 	mla	r5, r5, r4, r0
 801fd7a:	b2c9      	uxtb	r1, r1
 801fd7c:	10d0      	asrs	r0, r2, #3
 801fd7e:	00d2      	lsls	r2, r2, #3
 801fd80:	fb11 f103 	smulbb	r1, r1, r3
 801fd84:	b2d2      	uxtb	r2, r2
 801fd86:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801fd8a:	fb02 1204 	mla	r2, r2, r4, r1
 801fd8e:	fb17 f703 	smulbb	r7, r7, r3
 801fd92:	b2ad      	uxth	r5, r5
 801fd94:	b292      	uxth	r2, r2
 801fd96:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fd9a:	fb00 7004 	mla	r0, r0, r4, r7
 801fd9e:	1c6b      	adds	r3, r5, #1
 801fda0:	1c57      	adds	r7, r2, #1
 801fda2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fda6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801fdaa:	b280      	uxth	r0, r0
 801fdac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fdb0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801fdb4:	433d      	orrs	r5, r7
 801fdb6:	1c47      	adds	r7, r0, #1
 801fdb8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801fdbc:	097f      	lsrs	r7, r7, #5
 801fdbe:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801fdc2:	433d      	orrs	r5, r7
 801fdc4:	f8ae 5000 	strh.w	r5, [lr]
 801fdc8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801fdca:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801fdcc:	4413      	add	r3, r2
 801fdce:	9321      	str	r3, [sp, #132]	@ 0x84
 801fdd0:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801fdd2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fdd4:	441a      	add	r2, r3
 801fdd6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801fdd8:	9222      	str	r2, [sp, #136]	@ 0x88
 801fdda:	3b01      	subs	r3, #1
 801fddc:	f10e 0e02 	add.w	lr, lr, #2
 801fde0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fde2:	e61c      	b.n	801fa1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801fde4:	fb08 f000 	mul.w	r0, r8, r0
 801fde8:	fb09 0303 	mla	r3, r9, r3, r0
 801fdec:	e6dc      	b.n	801fba8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801fdee:	46b9      	mov	r9, r7
 801fdf0:	e704      	b.n	801fbfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801fdf2:	f1c2 0110 	rsb	r1, r2, #16
 801fdf6:	437a      	muls	r2, r7
 801fdf8:	fb09 2901 	mla	r9, r9, r1, r2
 801fdfc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801fe00:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801fe04:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801fe08:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fe0c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fe10:	4302      	orrs	r2, r0
 801fe12:	e795      	b.n	801fd40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801fe14:	f8ae 2000 	strh.w	r2, [lr]
 801fe18:	e7d6      	b.n	801fdc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801fe1a:	b017      	add	sp, #92	@ 0x5c
 801fe1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fe20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801fe20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe24:	b085      	sub	sp, #20
 801fe26:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801fe2a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801fe2e:	9103      	str	r1, [sp, #12]
 801fe30:	fb00 7406 	mla	r4, r0, r6, r7
 801fe34:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801fe38:	2800      	cmp	r0, #0
 801fe3a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801fe3e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801fe42:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801fe46:	9501      	str	r5, [sp, #4]
 801fe48:	eb02 0904 	add.w	r9, r2, r4
 801fe4c:	f2c0 8141 	blt.w	80200d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801fe50:	4583      	cmp	fp, r0
 801fe52:	f340 813e 	ble.w	80200d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801fe56:	2f00      	cmp	r7, #0
 801fe58:	f2c0 8137 	blt.w	80200ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801fe5c:	42be      	cmp	r6, r7
 801fe5e:	f340 8134 	ble.w	80200ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801fe62:	f812 c004 	ldrb.w	ip, [r2, r4]
 801fe66:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801fe6a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fe6e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801fe72:	4355      	muls	r5, r2
 801fe74:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fe78:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801fe7c:	fb0c f203 	mul.w	r2, ip, r3
 801fe80:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801fe84:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801fe88:	441d      	add	r5, r3
 801fe8a:	f102 0320 	add.w	r3, r2, #32
 801fe8e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fe92:	0a1b      	lsrs	r3, r3, #8
 801fe94:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801fe98:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fe9c:	431c      	orrs	r4, r3
 801fe9e:	1c7b      	adds	r3, r7, #1
 801fea0:	f100 811c 	bmi.w	80200dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801fea4:	429e      	cmp	r6, r3
 801fea6:	f340 8119 	ble.w	80200dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801feaa:	2900      	cmp	r1, #0
 801feac:	f000 8119 	beq.w	80200e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801feb0:	9a01      	ldr	r2, [sp, #4]
 801feb2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801feb6:	8855      	ldrh	r5, [r2, #2]
 801feb8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801febc:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801fec0:	fb08 f802 	mul.w	r8, r8, r2
 801fec4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801fec8:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801fecc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801fed0:	435d      	muls	r5, r3
 801fed2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801fed6:	44d0      	add	r8, sl
 801fed8:	f105 0a20 	add.w	sl, r5, #32
 801fedc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801fee0:	0a2d      	lsrs	r5, r5, #8
 801fee2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801fee6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801feea:	432a      	orrs	r2, r5
 801feec:	3001      	adds	r0, #1
 801feee:	f100 80fe 	bmi.w	80200ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801fef2:	4583      	cmp	fp, r0
 801fef4:	f340 80fb 	ble.w	80200ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801fef8:	f1be 0f00 	cmp.w	lr, #0
 801fefc:	f000 80fc 	beq.w	80200f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801ff00:	2f00      	cmp	r7, #0
 801ff02:	f2c0 80f1 	blt.w	80200e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ff06:	42be      	cmp	r6, r7
 801ff08:	f340 80ee 	ble.w	80200e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ff0c:	9801      	ldr	r0, [sp, #4]
 801ff0e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801ff12:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801ff16:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ff1a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801ff1e:	fb0a fa00 	mul.w	sl, sl, r0
 801ff22:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801ff26:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801ff2a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801ff2e:	fb05 f808 	mul.w	r8, r5, r8
 801ff32:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801ff36:	4482      	add	sl, r0
 801ff38:	f108 0020 	add.w	r0, r8, #32
 801ff3c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ff40:	0a00      	lsrs	r0, r0, #8
 801ff42:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801ff46:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ff4a:	ea4b 0b00 	orr.w	fp, fp, r0
 801ff4e:	3701      	adds	r7, #1
 801ff50:	f100 80d7 	bmi.w	8020102 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ff54:	42be      	cmp	r6, r7
 801ff56:	f340 80d4 	ble.w	8020102 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ff5a:	2900      	cmp	r1, #0
 801ff5c:	f000 80d4 	beq.w	8020108 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801ff60:	3601      	adds	r6, #1
 801ff62:	9801      	ldr	r0, [sp, #4]
 801ff64:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ff68:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ff6c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801ff70:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801ff74:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ff78:	fb09 f906 	mul.w	r9, r9, r6
 801ff7c:	fb07 f800 	mul.w	r8, r7, r0
 801ff80:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801ff84:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ff88:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801ff8c:	44d1      	add	r9, sl
 801ff8e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ff92:	f108 0020 	add.w	r0, r8, #32
 801ff96:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ff9a:	0a00      	lsrs	r0, r0, #8
 801ff9c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ffa0:	4330      	orrs	r0, r6
 801ffa2:	b28e      	uxth	r6, r1
 801ffa4:	fa1f f98e 	uxth.w	r9, lr
 801ffa8:	fb06 f809 	mul.w	r8, r6, r9
 801ffac:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ffb0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ffb4:	0136      	lsls	r6, r6, #4
 801ffb6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ffba:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801ffbe:	9601      	str	r6, [sp, #4]
 801ffc0:	ea4a 0404 	orr.w	r4, sl, r4
 801ffc4:	fa1f f689 	uxth.w	r6, r9
 801ffc8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ffcc:	fb11 f90e 	smulbb	r9, r1, lr
 801ffd0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ffd4:	9602      	str	r6, [sp, #8]
 801ffd6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ffda:	4626      	mov	r6, r4
 801ffdc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ffe0:	f1ce 0410 	rsb	r4, lr, #16
 801ffe4:	1a64      	subs	r4, r4, r1
 801ffe6:	ea4a 0202 	orr.w	r2, sl, r2
 801ffea:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ffee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801fff2:	434a      	muls	r2, r1
 801fff4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801fff8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fffc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020000:	fb04 2406 	mla	r4, r4, r6, r2
 8020004:	ea4a 0000 	orr.w	r0, sl, r0
 8020008:	fb09 4200 	mla	r2, r9, r0, r4
 802000c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8020010:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8020014:	9801      	ldr	r0, [sp, #4]
 8020016:	9903      	ldr	r1, [sp, #12]
 8020018:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 802001c:	ea44 0b0b 	orr.w	fp, r4, fp
 8020020:	9c02      	ldr	r4, [sp, #8]
 8020022:	8809      	ldrh	r1, [r1, #0]
 8020024:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 8020028:	1b00      	subs	r0, r0, r4
 802002a:	9c01      	ldr	r4, [sp, #4]
 802002c:	eba4 0608 	sub.w	r6, r4, r8
 8020030:	b2b6      	uxth	r6, r6
 8020032:	b280      	uxth	r0, r0
 8020034:	4373      	muls	r3, r6
 8020036:	fb0c 3300 	mla	r3, ip, r0, r3
 802003a:	9802      	ldr	r0, [sp, #8]
 802003c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8020040:	fb00 3505 	mla	r5, r0, r5, r3
 8020044:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8020048:	fb08 5707 	mla	r7, r8, r7, r5
 802004c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020050:	120b      	asrs	r3, r1, #8
 8020052:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020056:	ea6f 2727 	mvn.w	r7, r7, asr #8
 802005a:	b2ff      	uxtb	r7, r7
 802005c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020060:	10c8      	asrs	r0, r1, #3
 8020062:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8020066:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802006a:	00c9      	lsls	r1, r1, #3
 802006c:	437b      	muls	r3, r7
 802006e:	ea42 0e0e 	orr.w	lr, r2, lr
 8020072:	b2c9      	uxtb	r1, r1
 8020074:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020078:	fa1f f28e 	uxth.w	r2, lr
 802007c:	4378      	muls	r0, r7
 802007e:	434f      	muls	r7, r1
 8020080:	1c59      	adds	r1, r3, #1
 8020082:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020086:	1213      	asrs	r3, r2, #8
 8020088:	f023 0307 	bic.w	r3, r3, #7
 802008c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020090:	1c41      	adds	r1, r0, #1
 8020092:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020096:	10d1      	asrs	r1, r2, #3
 8020098:	f021 0103 	bic.w	r1, r1, #3
 802009c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80200a0:	021b      	lsls	r3, r3, #8
 80200a2:	00c9      	lsls	r1, r1, #3
 80200a4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80200a8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80200ac:	430b      	orrs	r3, r1
 80200ae:	1c79      	adds	r1, r7, #1
 80200b0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80200b4:	00d2      	lsls	r2, r2, #3
 80200b6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80200ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80200be:	431a      	orrs	r2, r3
 80200c0:	9b03      	ldr	r3, [sp, #12]
 80200c2:	801a      	strh	r2, [r3, #0]
 80200c4:	b005      	add	sp, #20
 80200c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80200ca:	f04f 0c00 	mov.w	ip, #0
 80200ce:	4664      	mov	r4, ip
 80200d0:	e6e5      	b.n	801fe9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80200d2:	2300      	movs	r3, #0
 80200d4:	469c      	mov	ip, r3
 80200d6:	461a      	mov	r2, r3
 80200d8:	461c      	mov	r4, r3
 80200da:	e707      	b.n	801feec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80200dc:	2300      	movs	r3, #0
 80200de:	461a      	mov	r2, r3
 80200e0:	e704      	b.n	801feec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80200e2:	460b      	mov	r3, r1
 80200e4:	460a      	mov	r2, r1
 80200e6:	e701      	b.n	801feec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80200e8:	2500      	movs	r5, #0
 80200ea:	46ab      	mov	fp, r5
 80200ec:	e72f      	b.n	801ff4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80200ee:	2700      	movs	r7, #0
 80200f0:	463d      	mov	r5, r7
 80200f2:	4638      	mov	r0, r7
 80200f4:	46bb      	mov	fp, r7
 80200f6:	e754      	b.n	801ffa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80200f8:	4677      	mov	r7, lr
 80200fa:	4675      	mov	r5, lr
 80200fc:	4670      	mov	r0, lr
 80200fe:	46f3      	mov	fp, lr
 8020100:	e74f      	b.n	801ffa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020102:	2700      	movs	r7, #0
 8020104:	4638      	mov	r0, r7
 8020106:	e74c      	b.n	801ffa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020108:	460f      	mov	r7, r1
 802010a:	4608      	mov	r0, r1
 802010c:	e749      	b.n	801ffa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08020110 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020114:	b093      	sub	sp, #76	@ 0x4c
 8020116:	9210      	str	r2, [sp, #64]	@ 0x40
 8020118:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802011a:	910e      	str	r1, [sp, #56]	@ 0x38
 802011c:	9306      	str	r3, [sp, #24]
 802011e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8020122:	9011      	str	r0, [sp, #68]	@ 0x44
 8020124:	6850      	ldr	r0, [r2, #4]
 8020126:	6812      	ldr	r2, [r2, #0]
 8020128:	fb00 1303 	mla	r3, r0, r3, r1
 802012c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020130:	9307      	str	r3, [sp, #28]
 8020132:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020134:	681b      	ldr	r3, [r3, #0]
 8020136:	9308      	str	r3, [sp, #32]
 8020138:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802013a:	685b      	ldr	r3, [r3, #4]
 802013c:	9309      	str	r3, [sp, #36]	@ 0x24
 802013e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020140:	2b00      	cmp	r3, #0
 8020142:	dc03      	bgt.n	802014c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020144:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020146:	2b00      	cmp	r3, #0
 8020148:	f340 83b4 	ble.w	80208b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802014c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802014e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020152:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020156:	1e48      	subs	r0, r1, #1
 8020158:	1e55      	subs	r5, r2, #1
 802015a:	9b06      	ldr	r3, [sp, #24]
 802015c:	2b00      	cmp	r3, #0
 802015e:	f340 8163 	ble.w	8020428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8020162:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8020164:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8020166:	1436      	asrs	r6, r6, #16
 8020168:	ea4f 4323 	mov.w	r3, r3, asr #16
 802016c:	d406      	bmi.n	802017c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802016e:	4286      	cmp	r6, r0
 8020170:	da04      	bge.n	802017c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020172:	2b00      	cmp	r3, #0
 8020174:	db02      	blt.n	802017c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020176:	42ab      	cmp	r3, r5
 8020178:	f2c0 8157 	blt.w	802042a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802017c:	3601      	adds	r6, #1
 802017e:	f100 8144 	bmi.w	802040a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020182:	42b1      	cmp	r1, r6
 8020184:	f2c0 8141 	blt.w	802040a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020188:	3301      	adds	r3, #1
 802018a:	f100 813e 	bmi.w	802040a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802018e:	429a      	cmp	r2, r3
 8020190:	f2c0 813b 	blt.w	802040a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020194:	9b06      	ldr	r3, [sp, #24]
 8020196:	9f07      	ldr	r7, [sp, #28]
 8020198:	930f      	str	r3, [sp, #60]	@ 0x3c
 802019a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 802019e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80201a0:	2b00      	cmp	r3, #0
 80201a2:	f340 8164 	ble.w	802046e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80201a6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80201a8:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 80201aa:	1418      	asrs	r0, r3, #16
 80201ac:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80201ae:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80201b2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80201b4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80201b8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80201ba:	142d      	asrs	r5, r5, #16
 80201bc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80201c0:	f100 81ee 	bmi.w	80205a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80201c4:	f102 3eff 	add.w	lr, r2, #4294967295
 80201c8:	4575      	cmp	r5, lr
 80201ca:	f280 81e9 	bge.w	80205a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80201ce:	2800      	cmp	r0, #0
 80201d0:	f2c0 81e6 	blt.w	80205a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80201d4:	f103 3eff 	add.w	lr, r3, #4294967295
 80201d8:	4570      	cmp	r0, lr
 80201da:	f280 81e1 	bge.w	80205a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80201de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80201e0:	b212      	sxth	r2, r2
 80201e2:	fb00 5002 	mla	r0, r0, r2, r5
 80201e6:	fa1f fe81 	uxth.w	lr, r1
 80201ea:	eb03 0a00 	add.w	sl, r3, r0
 80201ee:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80201f2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80201f6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80201fa:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 80201fe:	b29b      	uxth	r3, r3
 8020200:	f1bc 0f00 	cmp.w	ip, #0
 8020204:	f000 8179 	beq.w	80204fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8020208:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802020c:	940a      	str	r4, [sp, #40]	@ 0x28
 802020e:	eb0a 0b02 	add.w	fp, sl, r2
 8020212:	fa1f fa8c 	uxth.w	sl, ip
 8020216:	fb0a fe0e 	mul.w	lr, sl, lr
 802021a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802021e:	fa1f fa8a 	uxth.w	sl, sl
 8020222:	eba5 050e 	sub.w	r5, r5, lr
 8020226:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802022a:	940b      	str	r4, [sp, #44]	@ 0x2c
 802022c:	eba3 030a 	sub.w	r3, r3, sl
 8020230:	b2ad      	uxth	r5, r5
 8020232:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020234:	b29b      	uxth	r3, r3
 8020236:	fb08 f505 	mul.w	r5, r8, r5
 802023a:	fb09 5303 	mla	r3, r9, r3, r5
 802023e:	fb0a 3304 	mla	r3, sl, r4, r3
 8020242:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020244:	fb0e 3304 	mla	r3, lr, r4, r3
 8020248:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802024c:	2b00      	cmp	r3, #0
 802024e:	f000 80cf 	beq.w	80203f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020252:	9c08      	ldr	r4, [sp, #32]
 8020254:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8020258:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802025c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8020260:	f000 8150 	beq.w	8020504 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020264:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8020268:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802026c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020270:	fb09 f000 	mul.w	r0, r9, r0
 8020274:	fb0a fe0e 	mul.w	lr, sl, lr
 8020278:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802027c:	f100 0b20 	add.w	fp, r0, #32
 8020280:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8020284:	44ce      	add	lr, r9
 8020286:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802028a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802028e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020292:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8020296:	ea4e 0909 	orr.w	r9, lr, r9
 802029a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802029e:	8868      	ldrh	r0, [r5, #2]
 80202a0:	d019      	beq.n	80202d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80202a2:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80202a6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80202aa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80202ae:	fb08 f800 	mul.w	r8, r8, r0
 80202b2:	fb0a fe0e 	mul.w	lr, sl, lr
 80202b6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80202ba:	f108 0b20 	add.w	fp, r8, #32
 80202be:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80202c2:	4486      	add	lr, r0
 80202c4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80202c8:	0a00      	lsrs	r0, r0, #8
 80202ca:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80202ce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80202d2:	ea4e 0000 	orr.w	r0, lr, r0
 80202d6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80202da:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80202de:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80202e2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80202e6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80202ea:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80202ee:	ea4e 0909 	orr.w	r9, lr, r9
 80202f2:	ea4a 0000 	orr.w	r0, sl, r0
 80202f6:	f1bc 0f00 	cmp.w	ip, #0
 80202fa:	f000 8105 	beq.w	8020508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80202fe:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8020302:	3a01      	subs	r2, #1
 8020304:	0052      	lsls	r2, r2, #1
 8020306:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020308:	3202      	adds	r2, #2
 802030a:	2cff      	cmp	r4, #255	@ 0xff
 802030c:	eb05 0e02 	add.w	lr, r5, r2
 8020310:	5aaa      	ldrh	r2, [r5, r2]
 8020312:	d018      	beq.n	8020346 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8020314:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8020318:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802031c:	fb04 fa02 	mul.w	sl, r4, r2
 8020320:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020324:	fb08 f805 	mul.w	r8, r8, r5
 8020328:	f10a 0520 	add.w	r5, sl, #32
 802032c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8020330:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8020334:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8020338:	4442      	add	r2, r8
 802033a:	0a2d      	lsrs	r5, r5, #8
 802033c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8020340:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020344:	432a      	orrs	r2, r5
 8020346:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020348:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802034c:	2cff      	cmp	r4, #255	@ 0xff
 802034e:	d01a      	beq.n	8020386 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020350:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8020354:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020358:	fb04 fa05 	mul.w	sl, r4, r5
 802035c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020360:	fb08 f80e 	mul.w	r8, r8, lr
 8020364:	f10a 0e20 	add.w	lr, sl, #32
 8020368:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802036c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8020370:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8020374:	4445      	add	r5, r8
 8020376:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802037a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802037e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8020382:	ea45 050e 	orr.w	r5, r5, lr
 8020386:	fb1c fe01 	smulbb	lr, ip, r1
 802038a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802038e:	f1cc 0810 	rsb	r8, ip, #16
 8020392:	eba8 0801 	sub.w	r8, r8, r1
 8020396:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802039a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802039e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80203a2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80203a6:	4341      	muls	r1, r0
 80203a8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80203ac:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80203b0:	ea4a 0202 	orr.w	r2, sl, r2
 80203b4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80203b8:	fb09 1108 	mla	r1, r9, r8, r1
 80203bc:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80203c0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80203c4:	fb0c 1102 	mla	r1, ip, r2, r1
 80203c8:	ea4b 0505 	orr.w	r5, fp, r5
 80203cc:	fb0e 1e05 	mla	lr, lr, r5, r1
 80203d0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80203d4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80203d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80203dc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80203e0:	ea42 0e0e 	orr.w	lr, r2, lr
 80203e4:	fa1f f28e 	uxth.w	r2, lr
 80203e8:	2bff      	cmp	r3, #255	@ 0xff
 80203ea:	f040 80a1 	bne.w	8020530 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80203ee:	803a      	strh	r2, [r7, #0]
 80203f0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80203f2:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80203f4:	4413      	add	r3, r2
 80203f6:	931d      	str	r3, [sp, #116]	@ 0x74
 80203f8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80203fa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80203fc:	441a      	add	r2, r3
 80203fe:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020400:	921e      	str	r2, [sp, #120]	@ 0x78
 8020402:	3b01      	subs	r3, #1
 8020404:	3702      	adds	r7, #2
 8020406:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020408:	e6c9      	b.n	802019e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802040a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802040c:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 802040e:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 8020410:	4433      	add	r3, r6
 8020412:	931d      	str	r3, [sp, #116]	@ 0x74
 8020414:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020416:	441c      	add	r4, r3
 8020418:	9b06      	ldr	r3, [sp, #24]
 802041a:	941e      	str	r4, [sp, #120]	@ 0x78
 802041c:	3b01      	subs	r3, #1
 802041e:	9306      	str	r3, [sp, #24]
 8020420:	9b07      	ldr	r3, [sp, #28]
 8020422:	3302      	adds	r3, #2
 8020424:	9307      	str	r3, [sp, #28]
 8020426:	e698      	b.n	802015a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020428:	d028      	beq.n	802047c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802042a:	9b06      	ldr	r3, [sp, #24]
 802042c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802042e:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8020430:	3b01      	subs	r3, #1
 8020432:	fb00 5003 	mla	r0, r0, r3, r5
 8020436:	1400      	asrs	r0, r0, #16
 8020438:	f53f aeac 	bmi.w	8020194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802043c:	3901      	subs	r1, #1
 802043e:	4288      	cmp	r0, r1
 8020440:	f6bf aea8 	bge.w	8020194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020444:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8020446:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8020448:	fb01 0303 	mla	r3, r1, r3, r0
 802044c:	141b      	asrs	r3, r3, #16
 802044e:	f53f aea1 	bmi.w	8020194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020452:	3a01      	subs	r2, #1
 8020454:	4293      	cmp	r3, r2
 8020456:	f6bf ae9d 	bge.w	8020194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802045a:	9b06      	ldr	r3, [sp, #24]
 802045c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8020460:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020462:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8020466:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020468:	2b00      	cmp	r3, #0
 802046a:	f300 80b6 	bgt.w	80205da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802046e:	9b06      	ldr	r3, [sp, #24]
 8020470:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020474:	9b07      	ldr	r3, [sp, #28]
 8020476:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802047a:	9307      	str	r3, [sp, #28]
 802047c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802047e:	2b00      	cmp	r3, #0
 8020480:	f340 8218 	ble.w	80208b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8020484:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020488:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802048c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020490:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020492:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020496:	ee31 1a05 	vadd.f32	s2, s2, s10
 802049a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802049e:	eef0 6a62 	vmov.f32	s13, s5
 80204a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80204a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80204aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80204ae:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 80204b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80204b6:	eef0 6a43 	vmov.f32	s13, s6
 80204ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80204be:	ee12 2a90 	vmov	r2, s5
 80204c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80204c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80204ca:	ee13 2a10 	vmov	r2, s6
 80204ce:	931f      	str	r3, [sp, #124]	@ 0x7c
 80204d0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80204d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80204d6:	9320      	str	r3, [sp, #128]	@ 0x80
 80204d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80204da:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80204dc:	3b01      	subs	r3, #1
 80204de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80204e2:	930e      	str	r3, [sp, #56]	@ 0x38
 80204e4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80204e6:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 80204ea:	bf08      	it	eq
 80204ec:	4613      	moveq	r3, r2
 80204ee:	9306      	str	r3, [sp, #24]
 80204f0:	eeb0 3a67 	vmov.f32	s6, s15
 80204f4:	eef0 2a47 	vmov.f32	s5, s14
 80204f8:	e621      	b.n	802013e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80204fa:	fb08 f505 	mul.w	r5, r8, r5
 80204fe:	fb09 5303 	mla	r3, r9, r3, r5
 8020502:	e6a1      	b.n	8020248 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8020504:	4681      	mov	r9, r0
 8020506:	e6c8      	b.n	802029a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8020508:	f1c1 0210 	rsb	r2, r1, #16
 802050c:	4341      	muls	r1, r0
 802050e:	fb09 1902 	mla	r9, r9, r2, r1
 8020512:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020516:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802051a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802051e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020522:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8020526:	ea42 0909 	orr.w	r9, r2, r9
 802052a:	fa1f f289 	uxth.w	r2, r9
 802052e:	e75b      	b.n	80203e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8020530:	f8b7 c000 	ldrh.w	ip, [r7]
 8020534:	43db      	mvns	r3, r3
 8020536:	ea4f 202c 	mov.w	r0, ip, asr #8
 802053a:	fa5f fe83 	uxtb.w	lr, r3
 802053e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020542:	fb00 f00e 	mul.w	r0, r0, lr
 8020546:	1c41      	adds	r1, r0, #1
 8020548:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802054c:	1211      	asrs	r1, r2, #8
 802054e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8020552:	f021 0107 	bic.w	r1, r1, #7
 8020556:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802055a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802055e:	48d7      	ldr	r0, [pc, #860]	@ (80208bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8020560:	fb05 f50e 	mul.w	r5, r5, lr
 8020564:	b2c9      	uxtb	r1, r1
 8020566:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802056a:	1c69      	adds	r1, r5, #1
 802056c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8020570:	10d1      	asrs	r1, r2, #3
 8020572:	f021 0103 	bic.w	r1, r1, #3
 8020576:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802057a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802057e:	b2db      	uxtb	r3, r3
 8020580:	00c9      	lsls	r1, r1, #3
 8020582:	fb03 f30e 	mul.w	r3, r3, lr
 8020586:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802058a:	4301      	orrs	r1, r0
 802058c:	1c58      	adds	r0, r3, #1
 802058e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8020592:	00d2      	lsls	r2, r2, #3
 8020594:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020598:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802059c:	430a      	orrs	r2, r1
 802059e:	e726      	b.n	80203ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80205a0:	f115 0e01 	adds.w	lr, r5, #1
 80205a4:	f53f af24 	bmi.w	80203f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80205a8:	4572      	cmp	r2, lr
 80205aa:	f6ff af21 	blt.w	80203f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80205ae:	f110 0e01 	adds.w	lr, r0, #1
 80205b2:	f53f af1d 	bmi.w	80203f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80205b6:	4573      	cmp	r3, lr
 80205b8:	f6ff af1a 	blt.w	80203f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80205bc:	b21b      	sxth	r3, r3
 80205be:	b212      	sxth	r2, r2
 80205c0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80205c4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80205c8:	9301      	str	r3, [sp, #4]
 80205ca:	9200      	str	r2, [sp, #0]
 80205cc:	4639      	mov	r1, r7
 80205ce:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80205d2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80205d4:	f7ff fc24 	bl	801fe20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80205d8:	e70a      	b.n	80203f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80205da:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80205dc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80205e0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80205e2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80205e6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80205e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80205ec:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80205ee:	141f      	asrs	r7, r3, #16
 80205f0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80205f2:	141b      	asrs	r3, r3, #16
 80205f4:	fb01 3707 	mla	r7, r1, r7, r3
 80205f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80205fa:	fa1f fc82 	uxth.w	ip, r2
 80205fe:	eb03 0a07 	add.w	sl, r3, r7
 8020602:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8020606:	f813 9007 	ldrb.w	r9, [r3, r7]
 802060a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802060e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8020612:	b29b      	uxth	r3, r3
 8020614:	2d00      	cmp	r5, #0
 8020616:	f000 80fe 	beq.w	8020816 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 802061a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802061e:	940c      	str	r4, [sp, #48]	@ 0x30
 8020620:	eb0a 0b01 	add.w	fp, sl, r1
 8020624:	fa1f fa85 	uxth.w	sl, r5
 8020628:	fb0a fc0c 	mul.w	ip, sl, ip
 802062c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8020630:	fa1f fa8a 	uxth.w	sl, sl
 8020634:	eba0 000c 	sub.w	r0, r0, ip
 8020638:	eba3 030a 	sub.w	r3, r3, sl
 802063c:	b280      	uxth	r0, r0
 802063e:	fb08 f000 	mul.w	r0, r8, r0
 8020642:	b29b      	uxth	r3, r3
 8020644:	fb09 0303 	mla	r3, r9, r3, r0
 8020648:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802064a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802064e:	940d      	str	r4, [sp, #52]	@ 0x34
 8020650:	fb0a 3300 	mla	r3, sl, r0, r3
 8020654:	fb0c 3304 	mla	r3, ip, r4, r3
 8020658:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802065c:	2b00      	cmp	r3, #0
 802065e:	f000 80cc 	beq.w	80207fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8020662:	9808      	ldr	r0, [sp, #32]
 8020664:	9c08      	ldr	r4, [sp, #32]
 8020666:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802066a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802066e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8020672:	f000 80d5 	beq.w	8020820 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020676:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 802067a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802067e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8020682:	fb09 f707 	mul.w	r7, r9, r7
 8020686:	fb0a fc0c 	mul.w	ip, sl, ip
 802068a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802068e:	f107 0b20 	add.w	fp, r7, #32
 8020692:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8020696:	44cc      	add	ip, r9
 8020698:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802069c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80206a0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80206a4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80206a8:	ea4c 0909 	orr.w	r9, ip, r9
 80206ac:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80206b0:	8847      	ldrh	r7, [r0, #2]
 80206b2:	d019      	beq.n	80206e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80206b4:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80206b8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80206bc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80206c0:	fb08 f807 	mul.w	r8, r8, r7
 80206c4:	fb0a fc0c 	mul.w	ip, sl, ip
 80206c8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80206cc:	f108 0b20 	add.w	fp, r8, #32
 80206d0:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80206d4:	44bc      	add	ip, r7
 80206d6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80206da:	0a3f      	lsrs	r7, r7, #8
 80206dc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80206e0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80206e4:	ea4c 0707 	orr.w	r7, ip, r7
 80206e8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80206ec:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80206f0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80206f4:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80206f8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80206fc:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8020700:	ea4c 0909 	orr.w	r9, ip, r9
 8020704:	ea4a 0707 	orr.w	r7, sl, r7
 8020708:	2d00      	cmp	r5, #0
 802070a:	f000 808b 	beq.w	8020824 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802070e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8020712:	3901      	subs	r1, #1
 8020714:	0049      	lsls	r1, r1, #1
 8020716:	3102      	adds	r1, #2
 8020718:	eb00 0c01 	add.w	ip, r0, r1
 802071c:	5a41      	ldrh	r1, [r0, r1]
 802071e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8020720:	28ff      	cmp	r0, #255	@ 0xff
 8020722:	d019      	beq.n	8020758 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8020724:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020726:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 802072a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802072e:	fb04 fa01 	mul.w	sl, r4, r1
 8020732:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020736:	fb08 f800 	mul.w	r8, r8, r0
 802073a:	f10a 0020 	add.w	r0, sl, #32
 802073e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8020742:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8020746:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802074a:	4441      	add	r1, r8
 802074c:	0a00      	lsrs	r0, r0, #8
 802074e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8020752:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020756:	4301      	orrs	r1, r0
 8020758:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802075a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802075e:	2cff      	cmp	r4, #255	@ 0xff
 8020760:	d01a      	beq.n	8020798 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8020762:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8020766:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802076a:	fb04 fa00 	mul.w	sl, r4, r0
 802076e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020772:	fb08 f80c 	mul.w	r8, r8, ip
 8020776:	f10a 0c20 	add.w	ip, sl, #32
 802077a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802077e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8020782:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8020786:	4440      	add	r0, r8
 8020788:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802078c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8020790:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8020794:	ea40 000c 	orr.w	r0, r0, ip
 8020798:	fb15 fc02 	smulbb	ip, r5, r2
 802079c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80207a0:	f1c5 0810 	rsb	r8, r5, #16
 80207a4:	eba8 0802 	sub.w	r8, r8, r2
 80207a8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80207ac:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80207b0:	437a      	muls	r2, r7
 80207b2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80207b6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80207ba:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80207be:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80207c2:	fb09 2208 	mla	r2, r9, r8, r2
 80207c6:	ea4a 0101 	orr.w	r1, sl, r1
 80207ca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80207ce:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80207d2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80207d6:	fb05 2201 	mla	r2, r5, r1, r2
 80207da:	ea4b 0000 	orr.w	r0, fp, r0
 80207de:	fb0c 2200 	mla	r2, ip, r0, r2
 80207e2:	0d57      	lsrs	r7, r2, #21
 80207e4:	0952      	lsrs	r2, r2, #5
 80207e6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80207ea:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80207ee:	433a      	orrs	r2, r7
 80207f0:	2bff      	cmp	r3, #255	@ 0xff
 80207f2:	b292      	uxth	r2, r2
 80207f4:	d127      	bne.n	8020846 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80207f6:	f8ae 2000 	strh.w	r2, [lr]
 80207fa:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80207fc:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80207fe:	4413      	add	r3, r2
 8020800:	931d      	str	r3, [sp, #116]	@ 0x74
 8020802:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8020804:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020806:	441a      	add	r2, r3
 8020808:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802080a:	921e      	str	r2, [sp, #120]	@ 0x78
 802080c:	3b01      	subs	r3, #1
 802080e:	f10e 0e02 	add.w	lr, lr, #2
 8020812:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020814:	e627      	b.n	8020466 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020816:	fb08 f000 	mul.w	r0, r8, r0
 802081a:	fb09 0303 	mla	r3, r9, r3, r0
 802081e:	e71b      	b.n	8020658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8020820:	46b9      	mov	r9, r7
 8020822:	e743      	b.n	80206ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8020824:	f1c2 0110 	rsb	r1, r2, #16
 8020828:	437a      	muls	r2, r7
 802082a:	fb09 2901 	mla	r9, r9, r1, r2
 802082e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020832:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8020836:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802083a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802083e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020842:	4302      	orrs	r2, r0
 8020844:	e7d4      	b.n	80207f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8020846:	f8be 7000 	ldrh.w	r7, [lr]
 802084a:	4c1c      	ldr	r4, [pc, #112]	@ (80208bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802084c:	43db      	mvns	r3, r3
 802084e:	1238      	asrs	r0, r7, #8
 8020850:	fa5f fc83 	uxtb.w	ip, r3
 8020854:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020858:	10fd      	asrs	r5, r7, #3
 802085a:	fb00 f00c 	mul.w	r0, r0, ip
 802085e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8020862:	fb05 f10c 	mul.w	r1, r5, ip
 8020866:	1c45      	adds	r5, r0, #1
 8020868:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802086c:	1215      	asrs	r5, r2, #8
 802086e:	f025 0507 	bic.w	r5, r5, #7
 8020872:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8020876:	1c4d      	adds	r5, r1, #1
 8020878:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802087c:	10d1      	asrs	r1, r2, #3
 802087e:	f021 0103 	bic.w	r1, r1, #3
 8020882:	00fb      	lsls	r3, r7, #3
 8020884:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8020888:	b2db      	uxtb	r3, r3
 802088a:	b2c0      	uxtb	r0, r0
 802088c:	00c9      	lsls	r1, r1, #3
 802088e:	fb03 f30c 	mul.w	r3, r3, ip
 8020892:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020896:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802089a:	4308      	orrs	r0, r1
 802089c:	1c59      	adds	r1, r3, #1
 802089e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80208a2:	00d2      	lsls	r2, r2, #3
 80208a4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80208a8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80208ac:	4318      	orrs	r0, r3
 80208ae:	f8ae 0000 	strh.w	r0, [lr]
 80208b2:	e7a2      	b.n	80207fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80208b4:	b013      	add	sp, #76	@ 0x4c
 80208b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80208ba:	bf00      	nop
 80208bc:	fffff800 	.word	0xfffff800

080208c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80208c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80208c4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 80208c8:	fb05 4c03 	mla	ip, r5, r3, r4
 80208cc:	2d00      	cmp	r5, #0
 80208ce:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80208d2:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 80208d6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80208da:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 80208de:	8808      	ldrh	r0, [r1, #0]
 80208e0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80208e4:	f2c0 80a7 	blt.w	8020a36 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80208e8:	45aa      	cmp	sl, r5
 80208ea:	f340 80a4 	ble.w	8020a36 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80208ee:	2c00      	cmp	r4, #0
 80208f0:	f2c0 809f 	blt.w	8020a32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80208f4:	42a3      	cmp	r3, r4
 80208f6:	f340 809c 	ble.w	8020a32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80208fa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80208fe:	1c62      	adds	r2, r4, #1
 8020900:	f100 809c 	bmi.w	8020a3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8020904:	4293      	cmp	r3, r2
 8020906:	f340 8099 	ble.w	8020a3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802090a:	f1b9 0f00 	cmp.w	r9, #0
 802090e:	f000 8095 	beq.w	8020a3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8020912:	f8be c002 	ldrh.w	ip, [lr, #2]
 8020916:	3501      	adds	r5, #1
 8020918:	f100 8094 	bmi.w	8020a44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802091c:	45aa      	cmp	sl, r5
 802091e:	f340 8091 	ble.w	8020a44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8020922:	2f00      	cmp	r7, #0
 8020924:	f000 808e 	beq.w	8020a44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8020928:	2c00      	cmp	r4, #0
 802092a:	f2c0 8089 	blt.w	8020a40 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802092e:	42a3      	cmp	r3, r4
 8020930:	f340 8086 	ble.w	8020a40 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8020934:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8020938:	3401      	adds	r4, #1
 802093a:	f100 8086 	bmi.w	8020a4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802093e:	42a3      	cmp	r3, r4
 8020940:	f340 8083 	ble.w	8020a4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8020944:	f1b9 0f00 	cmp.w	r9, #0
 8020948:	d07f      	beq.n	8020a4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802094a:	3301      	adds	r3, #1
 802094c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8020950:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8020954:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8020958:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 802095c:	fb19 fe07 	smulbb	lr, r9, r7
 8020960:	ea44 0808 	orr.w	r8, r4, r8
 8020964:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8020968:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802096c:	f1c7 0210 	rsb	r2, r7, #16
 8020970:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8020974:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020978:	ea44 0c0c 	orr.w	ip, r4, ip
 802097c:	eba2 0209 	sub.w	r2, r2, r9
 8020980:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8020984:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8020988:	fb04 f40c 	mul.w	r4, r4, ip
 802098c:	fb02 4808 	mla	r8, r2, r8, r4
 8020990:	041a      	lsls	r2, r3, #16
 8020992:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020996:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 802099a:	4313      	orrs	r3, r2
 802099c:	042a      	lsls	r2, r5, #16
 802099e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80209a2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80209a6:	fb0e 8303 	mla	r3, lr, r3, r8
 80209aa:	432a      	orrs	r2, r5
 80209ac:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80209b0:	fb07 3202 	mla	r2, r7, r2, r3
 80209b4:	0d53      	lsrs	r3, r2, #21
 80209b6:	0952      	lsrs	r2, r2, #5
 80209b8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80209bc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80209c0:	431a      	orrs	r2, r3
 80209c2:	b293      	uxth	r3, r2
 80209c4:	b2b4      	uxth	r4, r6
 80209c6:	1202      	asrs	r2, r0, #8
 80209c8:	43f6      	mvns	r6, r6
 80209ca:	b2f6      	uxtb	r6, r6
 80209cc:	121d      	asrs	r5, r3, #8
 80209ce:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80209d2:	fb12 f206 	smulbb	r2, r2, r6
 80209d6:	10c7      	asrs	r7, r0, #3
 80209d8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80209dc:	00c0      	lsls	r0, r0, #3
 80209de:	fb05 2504 	mla	r5, r5, r4, r2
 80209e2:	b2c0      	uxtb	r0, r0
 80209e4:	10da      	asrs	r2, r3, #3
 80209e6:	00db      	lsls	r3, r3, #3
 80209e8:	b2db      	uxtb	r3, r3
 80209ea:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80209ee:	fb10 f006 	smulbb	r0, r0, r6
 80209f2:	b2ad      	uxth	r5, r5
 80209f4:	fb03 0004 	mla	r0, r3, r4, r0
 80209f8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80209fc:	fb17 f706 	smulbb	r7, r7, r6
 8020a00:	b280      	uxth	r0, r0
 8020a02:	1c6b      	adds	r3, r5, #1
 8020a04:	fb02 7204 	mla	r2, r2, r4, r7
 8020a08:	b292      	uxth	r2, r2
 8020a0a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020a0e:	1c43      	adds	r3, r0, #1
 8020a10:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020a14:	1c50      	adds	r0, r2, #1
 8020a16:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8020a1a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020a1e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020a22:	0952      	lsrs	r2, r2, #5
 8020a24:	432b      	orrs	r3, r5
 8020a26:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020a2a:	4313      	orrs	r3, r2
 8020a2c:	800b      	strh	r3, [r1, #0]
 8020a2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020a32:	4680      	mov	r8, r0
 8020a34:	e763      	b.n	80208fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8020a36:	4684      	mov	ip, r0
 8020a38:	4680      	mov	r8, r0
 8020a3a:	e76c      	b.n	8020916 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8020a3c:	4684      	mov	ip, r0
 8020a3e:	e76a      	b.n	8020916 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8020a40:	4605      	mov	r5, r0
 8020a42:	e779      	b.n	8020938 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8020a44:	4603      	mov	r3, r0
 8020a46:	4605      	mov	r5, r0
 8020a48:	e782      	b.n	8020950 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8020a4a:	4603      	mov	r3, r0
 8020a4c:	e780      	b.n	8020950 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08020a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a52:	b093      	sub	sp, #76	@ 0x4c
 8020a54:	461d      	mov	r5, r3
 8020a56:	9210      	str	r2, [sp, #64]	@ 0x40
 8020a58:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8020a5a:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 8020a5e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8020a60:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 8020a64:	910a      	str	r1, [sp, #40]	@ 0x28
 8020a66:	6859      	ldr	r1, [r3, #4]
 8020a68:	681b      	ldr	r3, [r3, #0]
 8020a6a:	9011      	str	r0, [sp, #68]	@ 0x44
 8020a6c:	fb01 2707 	mla	r7, r1, r7, r2
 8020a70:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8020a74:	9307      	str	r3, [sp, #28]
 8020a76:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020a78:	681b      	ldr	r3, [r3, #0]
 8020a7a:	9309      	str	r3, [sp, #36]	@ 0x24
 8020a7c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020a7e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8020a82:	43db      	mvns	r3, r3
 8020a84:	b2db      	uxtb	r3, r3
 8020a86:	9308      	str	r3, [sp, #32]
 8020a88:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020a8a:	2b00      	cmp	r3, #0
 8020a8c:	dc03      	bgt.n	8020a96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020a8e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020a90:	2b00      	cmp	r3, #0
 8020a92:	f340 8203 	ble.w	8020e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020a96:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020a98:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020a9c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020aa0:	1e48      	subs	r0, r1, #1
 8020aa2:	f102 3cff 	add.w	ip, r2, #4294967295
 8020aa6:	2d00      	cmp	r5, #0
 8020aa8:	f340 80da 	ble.w	8020c60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8020aac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020ab0:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020ab4:	d406      	bmi.n	8020ac4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020ab6:	4586      	cmp	lr, r0
 8020ab8:	da04      	bge.n	8020ac4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020aba:	2b00      	cmp	r3, #0
 8020abc:	db02      	blt.n	8020ac4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020abe:	4563      	cmp	r3, ip
 8020ac0:	f2c0 80cf 	blt.w	8020c62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020ac4:	f11e 0e01 	adds.w	lr, lr, #1
 8020ac8:	f100 80c1 	bmi.w	8020c4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020acc:	4571      	cmp	r1, lr
 8020ace:	f2c0 80be 	blt.w	8020c4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020ad2:	3301      	adds	r3, #1
 8020ad4:	f100 80bb 	bmi.w	8020c4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020ad8:	429a      	cmp	r2, r3
 8020ada:	f2c0 80b8 	blt.w	8020c4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020ade:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8020ae2:	46a9      	mov	r9, r5
 8020ae4:	f1b9 0f00 	cmp.w	r9, #0
 8020ae8:	f340 80d8 	ble.w	8020c9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8020aec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020aee:	1421      	asrs	r1, r4, #16
 8020af0:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020af4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020af8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020afc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8020b00:	f100 8111 	bmi.w	8020d26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8020b04:	f10e 3aff 	add.w	sl, lr, #4294967295
 8020b08:	4551      	cmp	r1, sl
 8020b0a:	f280 810c 	bge.w	8020d26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8020b0e:	2800      	cmp	r0, #0
 8020b10:	f2c0 8109 	blt.w	8020d26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8020b14:	f103 3aff 	add.w	sl, r3, #4294967295
 8020b18:	4550      	cmp	r0, sl
 8020b1a:	f280 8104 	bge.w	8020d26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8020b1e:	fa0f f38e 	sxth.w	r3, lr
 8020b22:	fb00 1103 	mla	r1, r0, r3, r1
 8020b26:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8020b28:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8020b2c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8020b30:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8020b34:	f1bc 0f00 	cmp.w	ip, #0
 8020b38:	d007      	beq.n	8020b4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8020b3a:	005b      	lsls	r3, r3, #1
 8020b3c:	eb0a 0003 	add.w	r0, sl, r3
 8020b40:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8020b44:	930c      	str	r3, [sp, #48]	@ 0x30
 8020b46:	8843      	ldrh	r3, [r0, #2]
 8020b48:	930d      	str	r3, [sp, #52]	@ 0x34
 8020b4a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8020b4e:	fb12 f30c 	smulbb	r3, r2, ip
 8020b52:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8020b56:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8020b5a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8020b5e:	10db      	asrs	r3, r3, #3
 8020b60:	ea40 000e 	orr.w	r0, r0, lr
 8020b64:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8020b68:	f1cc 0e10 	rsb	lr, ip, #16
 8020b6c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8020b70:	ebae 0e02 	sub.w	lr, lr, r2
 8020b74:	ea4a 0101 	orr.w	r1, sl, r1
 8020b78:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020b7c:	4351      	muls	r1, r2
 8020b7e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8020b80:	9f08      	ldr	r7, [sp, #32]
 8020b82:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8020b86:	fb0e 1e00 	mla	lr, lr, r0, r1
 8020b8a:	0410      	lsls	r0, r2, #16
 8020b8c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8020b90:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020b94:	4310      	orrs	r0, r2
 8020b96:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020b98:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8020b9a:	0412      	lsls	r2, r2, #16
 8020b9c:	fb03 e000 	mla	r0, r3, r0, lr
 8020ba0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020ba4:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8020ba8:	ea42 020e 	orr.w	r2, r2, lr
 8020bac:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8020bb0:	fb03 0302 	mla	r3, r3, r2, r0
 8020bb4:	0d5a      	lsrs	r2, r3, #21
 8020bb6:	095b      	lsrs	r3, r3, #5
 8020bb8:	f8b8 0000 	ldrh.w	r0, [r8]
 8020bbc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020bc0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8020bc4:	4313      	orrs	r3, r2
 8020bc6:	b29b      	uxth	r3, r3
 8020bc8:	1201      	asrs	r1, r0, #8
 8020bca:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8020bce:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8020bd2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020bd6:	fb11 f107 	smulbb	r1, r1, r7
 8020bda:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020bde:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020be2:	00c0      	lsls	r0, r0, #3
 8020be4:	fb0c 1c02 	mla	ip, ip, r2, r1
 8020be8:	b2c0      	uxtb	r0, r0
 8020bea:	10d9      	asrs	r1, r3, #3
 8020bec:	00db      	lsls	r3, r3, #3
 8020bee:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8020bf2:	b2db      	uxtb	r3, r3
 8020bf4:	fb10 f007 	smulbb	r0, r0, r7
 8020bf8:	fa1f fc8c 	uxth.w	ip, ip
 8020bfc:	fb03 0302 	mla	r3, r3, r2, r0
 8020c00:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020c04:	fb1e fe07 	smulbb	lr, lr, r7
 8020c08:	fb01 e102 	mla	r1, r1, r2, lr
 8020c0c:	b29a      	uxth	r2, r3
 8020c0e:	f10c 0301 	add.w	r3, ip, #1
 8020c12:	b289      	uxth	r1, r1
 8020c14:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020c18:	1c53      	adds	r3, r2, #1
 8020c1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020c1e:	1c4a      	adds	r2, r1, #1
 8020c20:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020c24:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8020c28:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020c2c:	0949      	lsrs	r1, r1, #5
 8020c2e:	ea43 030c 	orr.w	r3, r3, ip
 8020c32:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020c36:	430b      	orrs	r3, r1
 8020c38:	f8a8 3000 	strh.w	r3, [r8]
 8020c3c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020c3e:	441c      	add	r4, r3
 8020c40:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020c42:	f108 0802 	add.w	r8, r8, #2
 8020c46:	441e      	add	r6, r3
 8020c48:	f109 39ff 	add.w	r9, r9, #4294967295
 8020c4c:	e74a      	b.n	8020ae4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8020c4e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020c50:	441c      	add	r4, r3
 8020c52:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020c54:	441e      	add	r6, r3
 8020c56:	9b07      	ldr	r3, [sp, #28]
 8020c58:	3302      	adds	r3, #2
 8020c5a:	3d01      	subs	r5, #1
 8020c5c:	9307      	str	r3, [sp, #28]
 8020c5e:	e722      	b.n	8020aa6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020c60:	d022      	beq.n	8020ca8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8020c62:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8020c64:	1e6b      	subs	r3, r5, #1
 8020c66:	fb00 4003 	mla	r0, r0, r3, r4
 8020c6a:	1400      	asrs	r0, r0, #16
 8020c6c:	f53f af37 	bmi.w	8020ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020c70:	3901      	subs	r1, #1
 8020c72:	4288      	cmp	r0, r1
 8020c74:	f6bf af33 	bge.w	8020ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020c78:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8020c7a:	fb01 6303 	mla	r3, r1, r3, r6
 8020c7e:	141b      	asrs	r3, r3, #16
 8020c80:	f53f af2d 	bmi.w	8020ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020c84:	3a01      	subs	r2, #1
 8020c86:	4293      	cmp	r3, r2
 8020c88:	f6bf af29 	bge.w	8020ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020c8c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8020c90:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8020c94:	46a8      	mov	r8, r5
 8020c96:	f1b8 0f00 	cmp.w	r8, #0
 8020c9a:	dc5e      	bgt.n	8020d5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8020c9c:	9b07      	ldr	r3, [sp, #28]
 8020c9e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020ca2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8020ca6:	9307      	str	r3, [sp, #28]
 8020ca8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020caa:	2b00      	cmp	r3, #0
 8020cac:	f340 80f6 	ble.w	8020e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020cb0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020cb4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020cb8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020cbc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020cbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020cc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020cc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020cca:	eef0 6a62 	vmov.f32	s13, s5
 8020cce:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020cd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020cd6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020cda:	ee16 4a90 	vmov	r4, s13
 8020cde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020ce2:	eef0 6a43 	vmov.f32	s13, s6
 8020ce6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020cea:	ee12 2a90 	vmov	r2, s5
 8020cee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020cf2:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cf6:	ee13 2a10 	vmov	r2, s6
 8020cfa:	931f      	str	r3, [sp, #124]	@ 0x7c
 8020cfc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020cfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d02:	9320      	str	r3, [sp, #128]	@ 0x80
 8020d04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020d06:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020d08:	3b01      	subs	r3, #1
 8020d0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d0e:	930a      	str	r3, [sp, #40]	@ 0x28
 8020d10:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020d12:	ee16 6a90 	vmov	r6, s13
 8020d16:	bf14      	ite	ne
 8020d18:	461d      	movne	r5, r3
 8020d1a:	4615      	moveq	r5, r2
 8020d1c:	eeb0 3a67 	vmov.f32	s6, s15
 8020d20:	eef0 2a47 	vmov.f32	s5, s14
 8020d24:	e6b0      	b.n	8020a88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020d26:	f111 0a01 	adds.w	sl, r1, #1
 8020d2a:	d487      	bmi.n	8020c3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020d2c:	45d6      	cmp	lr, sl
 8020d2e:	db85      	blt.n	8020c3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020d30:	f110 0a01 	adds.w	sl, r0, #1
 8020d34:	d482      	bmi.n	8020c3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020d36:	4553      	cmp	r3, sl
 8020d38:	db80      	blt.n	8020c3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020d3a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8020d3c:	9101      	str	r1, [sp, #4]
 8020d3e:	b21b      	sxth	r3, r3
 8020d40:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8020d44:	9300      	str	r3, [sp, #0]
 8020d46:	e9cd c704 	strd	ip, r7, [sp, #16]
 8020d4a:	fa0f f38e 	sxth.w	r3, lr
 8020d4e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020d50:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020d52:	4641      	mov	r1, r8
 8020d54:	f7ff fdb4 	bl	80208c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8020d58:	e770      	b.n	8020c3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020d5a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020d5c:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8020d5e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d62:	1430      	asrs	r0, r6, #16
 8020d64:	1423      	asrs	r3, r4, #16
 8020d66:	fb01 3000 	mla	r0, r1, r0, r3
 8020d6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020d6c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8020d70:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8020d74:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8020d78:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020d7c:	8858      	ldrh	r0, [r3, #2]
 8020d7e:	f1be 0f00 	cmp.w	lr, #0
 8020d82:	d00b      	beq.n	8020d9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8020d84:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8020d88:	3901      	subs	r1, #1
 8020d8a:	0049      	lsls	r1, r1, #1
 8020d8c:	3102      	adds	r1, #2
 8020d8e:	eb03 0b01 	add.w	fp, r3, r1
 8020d92:	5a5b      	ldrh	r3, [r3, r1]
 8020d94:	930e      	str	r3, [sp, #56]	@ 0x38
 8020d96:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020d9a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020d9c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8020da0:	fb12 f30e 	smulbb	r3, r2, lr
 8020da4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020da8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8020dac:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 8020db0:	10db      	asrs	r3, r3, #3
 8020db2:	ea41 010c 	orr.w	r1, r1, ip
 8020db6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020dba:	f1ce 0c10 	rsb	ip, lr, #16
 8020dbe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020dc2:	ebac 0c02 	sub.w	ip, ip, r2
 8020dc6:	ea4b 0000 	orr.w	r0, fp, r0
 8020dca:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020dce:	4350      	muls	r0, r2
 8020dd0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020dd2:	9f08      	ldr	r7, [sp, #32]
 8020dd4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8020dd8:	fb0c 0c01 	mla	ip, ip, r1, r0
 8020ddc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8020de0:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 8020de4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8020de6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8020de8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020dec:	0412      	lsls	r2, r2, #16
 8020dee:	ea4b 0101 	orr.w	r1, fp, r1
 8020df2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020df6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020dfa:	fb03 c101 	mla	r1, r3, r1, ip
 8020dfe:	4302      	orrs	r2, r0
 8020e00:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8020e04:	fb03 1202 	mla	r2, r3, r2, r1
 8020e08:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8020e0c:	0952      	lsrs	r2, r2, #5
 8020e0e:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 8020e12:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8020e16:	f8b9 2000 	ldrh.w	r2, [r9]
 8020e1a:	ea4b 0303 	orr.w	r3, fp, r3
 8020e1e:	b29b      	uxth	r3, r3
 8020e20:	1211      	asrs	r1, r2, #8
 8020e22:	1218      	asrs	r0, r3, #8
 8020e24:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020e28:	fb11 f107 	smulbb	r1, r1, r7
 8020e2c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8020e30:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020e34:	00d2      	lsls	r2, r2, #3
 8020e36:	fb00 100a 	mla	r0, r0, sl, r1
 8020e3a:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8020e3e:	10d9      	asrs	r1, r3, #3
 8020e40:	b2d2      	uxtb	r2, r2
 8020e42:	00db      	lsls	r3, r3, #3
 8020e44:	fb1c fc07 	smulbb	ip, ip, r7
 8020e48:	fb12 f207 	smulbb	r2, r2, r7
 8020e4c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020e50:	b2db      	uxtb	r3, r3
 8020e52:	b280      	uxth	r0, r0
 8020e54:	fb01 c10a 	mla	r1, r1, sl, ip
 8020e58:	fb03 230a 	mla	r3, r3, sl, r2
 8020e5c:	b29b      	uxth	r3, r3
 8020e5e:	b289      	uxth	r1, r1
 8020e60:	1c42      	adds	r2, r0, #1
 8020e62:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020e66:	f101 0c01 	add.w	ip, r1, #1
 8020e6a:	1c5a      	adds	r2, r3, #1
 8020e6c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020e70:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020e74:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020e76:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8020e7a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020e7e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020e82:	4310      	orrs	r0, r2
 8020e84:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8020e88:	441c      	add	r4, r3
 8020e8a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020e8c:	ea40 000c 	orr.w	r0, r0, ip
 8020e90:	f829 0b02 	strh.w	r0, [r9], #2
 8020e94:	441e      	add	r6, r3
 8020e96:	f108 38ff 	add.w	r8, r8, #4294967295
 8020e9a:	e6fc      	b.n	8020c96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8020e9c:	b013      	add	sp, #76	@ 0x4c
 8020e9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020ea2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8020ea2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8020ea6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8020eaa:	fb0e 4703 	mla	r7, lr, r3, r4
 8020eae:	f1be 0f00 	cmp.w	lr, #0
 8020eb2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8020eb6:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8020eba:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 8020ebe:	8808      	ldrh	r0, [r1, #0]
 8020ec0:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8020ec4:	db60      	blt.n	8020f88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8020ec6:	45f1      	cmp	r9, lr
 8020ec8:	dd5e      	ble.n	8020f88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8020eca:	2c00      	cmp	r4, #0
 8020ecc:	db5a      	blt.n	8020f84 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8020ece:	42a3      	cmp	r3, r4
 8020ed0:	dd58      	ble.n	8020f84 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8020ed2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8020ed6:	1c62      	adds	r2, r4, #1
 8020ed8:	d459      	bmi.n	8020f8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020eda:	4293      	cmp	r3, r2
 8020edc:	dd57      	ble.n	8020f8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020ede:	2d00      	cmp	r5, #0
 8020ee0:	d055      	beq.n	8020f8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020ee2:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8020ee6:	f11e 0e01 	adds.w	lr, lr, #1
 8020eea:	d454      	bmi.n	8020f96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020eec:	45f1      	cmp	r9, lr
 8020eee:	dd52      	ble.n	8020f96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020ef0:	2e00      	cmp	r6, #0
 8020ef2:	d050      	beq.n	8020f96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020ef4:	2c00      	cmp	r4, #0
 8020ef6:	db4c      	blt.n	8020f92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8020ef8:	42a3      	cmp	r3, r4
 8020efa:	dd4a      	ble.n	8020f92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8020efc:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8020f00:	3401      	adds	r4, #1
 8020f02:	d405      	bmi.n	8020f10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020f04:	42a3      	cmp	r3, r4
 8020f06:	dd03      	ble.n	8020f10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020f08:	b115      	cbz	r5, 8020f10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020f0a:	3301      	adds	r3, #1
 8020f0c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8020f10:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020f14:	fb15 f406 	smulbb	r4, r5, r6
 8020f18:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020f1c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020f20:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020f24:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020f28:	ea43 0c0c 	orr.w	ip, r3, ip
 8020f2c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8020f30:	f1c6 0310 	rsb	r3, r6, #16
 8020f34:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8020f38:	1b5b      	subs	r3, r3, r5
 8020f3a:	ea4e 0707 	orr.w	r7, lr, r7
 8020f3e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8020f42:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020f46:	437d      	muls	r5, r7
 8020f48:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020f4c:	0403      	lsls	r3, r0, #16
 8020f4e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020f52:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020f56:	4318      	orrs	r0, r3
 8020f58:	0413      	lsls	r3, r2, #16
 8020f5a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020f5e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020f62:	4313      	orrs	r3, r2
 8020f64:	fb04 c000 	mla	r0, r4, r0, ip
 8020f68:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020f6c:	fb06 0003 	mla	r0, r6, r3, r0
 8020f70:	0d43      	lsrs	r3, r0, #21
 8020f72:	0940      	lsrs	r0, r0, #5
 8020f74:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020f78:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020f7c:	4318      	orrs	r0, r3
 8020f7e:	8008      	strh	r0, [r1, #0]
 8020f80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020f84:	4684      	mov	ip, r0
 8020f86:	e7a6      	b.n	8020ed6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8020f88:	4607      	mov	r7, r0
 8020f8a:	4684      	mov	ip, r0
 8020f8c:	e7ab      	b.n	8020ee6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8020f8e:	4607      	mov	r7, r0
 8020f90:	e7a9      	b.n	8020ee6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8020f92:	4602      	mov	r2, r0
 8020f94:	e7b4      	b.n	8020f00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8020f96:	4602      	mov	r2, r0
 8020f98:	e7ba      	b.n	8020f10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08020f9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020f9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f9e:	b08f      	sub	sp, #60	@ 0x3c
 8020fa0:	461d      	mov	r5, r3
 8020fa2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8020fa4:	920c      	str	r2, [sp, #48]	@ 0x30
 8020fa6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8020faa:	9107      	str	r1, [sp, #28]
 8020fac:	6859      	ldr	r1, [r3, #4]
 8020fae:	681b      	ldr	r3, [r3, #0]
 8020fb0:	900d      	str	r0, [sp, #52]	@ 0x34
 8020fb2:	fb01 2707 	mla	r7, r1, r7, r2
 8020fb6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8020fba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020fbc:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 8020fc0:	f8d3 8000 	ldr.w	r8, [r3]
 8020fc4:	9b07      	ldr	r3, [sp, #28]
 8020fc6:	2b00      	cmp	r3, #0
 8020fc8:	dc03      	bgt.n	8020fd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8020fca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020fcc:	2b00      	cmp	r3, #0
 8020fce:	f340 8181 	ble.w	80212d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8020fd2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020fd4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020fd8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020fdc:	1e48      	subs	r0, r1, #1
 8020fde:	f102 3cff 	add.w	ip, r2, #4294967295
 8020fe2:	2d00      	cmp	r5, #0
 8020fe4:	f340 809b 	ble.w	802111e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8020fe8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020fec:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020ff0:	d406      	bmi.n	8021000 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020ff2:	4586      	cmp	lr, r0
 8020ff4:	da04      	bge.n	8021000 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020ff6:	2b00      	cmp	r3, #0
 8020ff8:	db02      	blt.n	8021000 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020ffa:	4563      	cmp	r3, ip
 8020ffc:	f2c0 8090 	blt.w	8021120 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021000:	f11e 0e01 	adds.w	lr, lr, #1
 8021004:	f100 8084 	bmi.w	8021110 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021008:	4571      	cmp	r1, lr
 802100a:	f2c0 8081 	blt.w	8021110 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802100e:	3301      	adds	r3, #1
 8021010:	d47e      	bmi.n	8021110 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021012:	429a      	cmp	r2, r3
 8021014:	db7c      	blt.n	8021110 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021016:	46aa      	mov	sl, r5
 8021018:	46b9      	mov	r9, r7
 802101a:	f1ba 0f00 	cmp.w	sl, #0
 802101e:	f340 8099 	ble.w	8021154 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8021022:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021024:	1421      	asrs	r1, r4, #16
 8021026:	ea4f 4026 	mov.w	r0, r6, asr #16
 802102a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802102e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021032:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8021036:	f100 80d0 	bmi.w	80211da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802103a:	f10e 3bff 	add.w	fp, lr, #4294967295
 802103e:	4559      	cmp	r1, fp
 8021040:	f280 80cb 	bge.w	80211da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021044:	2800      	cmp	r0, #0
 8021046:	f2c0 80c8 	blt.w	80211da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802104a:	f103 3bff 	add.w	fp, r3, #4294967295
 802104e:	4558      	cmp	r0, fp
 8021050:	f280 80c3 	bge.w	80211da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021054:	fa0f fe8e 	sxth.w	lr, lr
 8021058:	fb00 110e 	mla	r1, r0, lr, r1
 802105c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8021060:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8021064:	8841      	ldrh	r1, [r0, #2]
 8021066:	f1bc 0f00 	cmp.w	ip, #0
 802106a:	d00b      	beq.n	8021084 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 802106c:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 8021070:	3b01      	subs	r3, #1
 8021072:	005b      	lsls	r3, r3, #1
 8021074:	3302      	adds	r3, #2
 8021076:	eb00 0e03 	add.w	lr, r0, r3
 802107a:	5ac3      	ldrh	r3, [r0, r3]
 802107c:	9308      	str	r3, [sp, #32]
 802107e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8021082:	9309      	str	r3, [sp, #36]	@ 0x24
 8021084:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8021088:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802108c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8021090:	ea40 000b 	orr.w	r0, r0, fp
 8021094:	fb12 f30c 	smulbb	r3, r2, ip
 8021098:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802109c:	10db      	asrs	r3, r3, #3
 802109e:	f1cc 0e10 	rsb	lr, ip, #16
 80210a2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80210a6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80210aa:	ebae 0e02 	sub.w	lr, lr, r2
 80210ae:	ea4b 0101 	orr.w	r1, fp, r1
 80210b2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80210b6:	4351      	muls	r1, r2
 80210b8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80210ba:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80210be:	fb0e 1e00 	mla	lr, lr, r0, r1
 80210c2:	0410      	lsls	r0, r2, #16
 80210c4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80210c8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80210cc:	4310      	orrs	r0, r2
 80210ce:	9a08      	ldr	r2, [sp, #32]
 80210d0:	9908      	ldr	r1, [sp, #32]
 80210d2:	0412      	lsls	r2, r2, #16
 80210d4:	fb03 e000 	mla	r0, r3, r0, lr
 80210d8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80210dc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 80210e0:	ea42 020e 	orr.w	r2, r2, lr
 80210e4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80210e8:	fb03 0302 	mla	r3, r3, r2, r0
 80210ec:	0d5a      	lsrs	r2, r3, #21
 80210ee:	095b      	lsrs	r3, r3, #5
 80210f0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80210f4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80210f8:	4313      	orrs	r3, r2
 80210fa:	f8a9 3000 	strh.w	r3, [r9]
 80210fe:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8021100:	441c      	add	r4, r3
 8021102:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021104:	f109 0902 	add.w	r9, r9, #2
 8021108:	441e      	add	r6, r3
 802110a:	f10a 3aff 	add.w	sl, sl, #4294967295
 802110e:	e784      	b.n	802101a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8021110:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8021112:	441c      	add	r4, r3
 8021114:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021116:	3d01      	subs	r5, #1
 8021118:	441e      	add	r6, r3
 802111a:	3702      	adds	r7, #2
 802111c:	e761      	b.n	8020fe2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802111e:	d01d      	beq.n	802115c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021120:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8021122:	1e6b      	subs	r3, r5, #1
 8021124:	fb00 4003 	mla	r0, r0, r3, r4
 8021128:	1400      	asrs	r0, r0, #16
 802112a:	f53f af74 	bmi.w	8021016 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802112e:	3901      	subs	r1, #1
 8021130:	4288      	cmp	r0, r1
 8021132:	f6bf af70 	bge.w	8021016 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021136:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8021138:	fb01 6303 	mla	r3, r1, r3, r6
 802113c:	141b      	asrs	r3, r3, #16
 802113e:	f53f af6a 	bmi.w	8021016 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021142:	3a01      	subs	r2, #1
 8021144:	4293      	cmp	r3, r2
 8021146:	f6bf af66 	bge.w	8021016 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802114a:	46a9      	mov	r9, r5
 802114c:	46ba      	mov	sl, r7
 802114e:	f1b9 0f00 	cmp.w	r9, #0
 8021152:	dc5a      	bgt.n	802120a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8021154:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021158:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802115c:	9b07      	ldr	r3, [sp, #28]
 802115e:	2b00      	cmp	r3, #0
 8021160:	f340 80b8 	ble.w	80212d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8021164:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021168:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802116c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021170:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021172:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021176:	ee31 1a05 	vadd.f32	s2, s2, s10
 802117a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802117e:	eef0 6a62 	vmov.f32	s13, s5
 8021182:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021186:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802118a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802118e:	ee16 4a90 	vmov	r4, s13
 8021192:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021196:	eef0 6a43 	vmov.f32	s13, s6
 802119a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802119e:	ee12 2a90 	vmov	r2, s5
 80211a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80211a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80211aa:	ee13 2a10 	vmov	r2, s6
 80211ae:	931b      	str	r3, [sp, #108]	@ 0x6c
 80211b0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80211b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80211b6:	931c      	str	r3, [sp, #112]	@ 0x70
 80211b8:	9b07      	ldr	r3, [sp, #28]
 80211ba:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80211bc:	3b01      	subs	r3, #1
 80211be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80211c2:	9307      	str	r3, [sp, #28]
 80211c4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80211c6:	ee16 6a90 	vmov	r6, s13
 80211ca:	bf14      	ite	ne
 80211cc:	461d      	movne	r5, r3
 80211ce:	4615      	moveq	r5, r2
 80211d0:	eeb0 3a67 	vmov.f32	s6, s15
 80211d4:	eef0 2a47 	vmov.f32	s5, s14
 80211d8:	e6f4      	b.n	8020fc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80211da:	f111 0b01 	adds.w	fp, r1, #1
 80211de:	d48e      	bmi.n	80210fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80211e0:	45de      	cmp	lr, fp
 80211e2:	db8c      	blt.n	80210fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80211e4:	f110 0b01 	adds.w	fp, r0, #1
 80211e8:	d489      	bmi.n	80210fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80211ea:	455b      	cmp	r3, fp
 80211ec:	db87      	blt.n	80210fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80211ee:	b21b      	sxth	r3, r3
 80211f0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80211f4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80211f8:	9300      	str	r3, [sp, #0]
 80211fa:	4642      	mov	r2, r8
 80211fc:	fa0f f38e 	sxth.w	r3, lr
 8021200:	4649      	mov	r1, r9
 8021202:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8021204:	f7ff fe4d 	bl	8020ea2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8021208:	e779      	b.n	80210fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802120a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802120c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021210:	1420      	asrs	r0, r4, #16
 8021212:	1431      	asrs	r1, r6, #16
 8021214:	fb03 0101 	mla	r1, r3, r1, r0
 8021218:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802121c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8021220:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8021224:	8841      	ldrh	r1, [r0, #2]
 8021226:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802122a:	f1be 0f00 	cmp.w	lr, #0
 802122e:	d00b      	beq.n	8021248 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8021230:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8021234:	3b01      	subs	r3, #1
 8021236:	005b      	lsls	r3, r3, #1
 8021238:	3302      	adds	r3, #2
 802123a:	eb00 0b03 	add.w	fp, r0, r3
 802123e:	5ac3      	ldrh	r3, [r0, r3]
 8021240:	930a      	str	r3, [sp, #40]	@ 0x28
 8021242:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8021246:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021248:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802124c:	fb12 f30e 	smulbb	r3, r2, lr
 8021250:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8021254:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021258:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802125c:	10db      	asrs	r3, r3, #3
 802125e:	ea40 000c 	orr.w	r0, r0, ip
 8021262:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021266:	f1ce 0c10 	rsb	ip, lr, #16
 802126a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802126e:	ebac 0c02 	sub.w	ip, ip, r2
 8021272:	ea4b 0101 	orr.w	r1, fp, r1
 8021276:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802127a:	4351      	muls	r1, r2
 802127c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802127e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8021282:	fb0c 1c00 	mla	ip, ip, r0, r1
 8021286:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802128a:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 802128e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8021290:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8021292:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021296:	0412      	lsls	r2, r2, #16
 8021298:	ea4b 0000 	orr.w	r0, fp, r0
 802129c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80212a0:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 80212a4:	fb03 c000 	mla	r0, r3, r0, ip
 80212a8:	ea42 0b0b 	orr.w	fp, r2, fp
 80212ac:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80212b0:	fb03 000b 	mla	r0, r3, fp, r0
 80212b4:	0d43      	lsrs	r3, r0, #21
 80212b6:	0940      	lsrs	r0, r0, #5
 80212b8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80212bc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80212c0:	4318      	orrs	r0, r3
 80212c2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80212c4:	f82a 0b02 	strh.w	r0, [sl], #2
 80212c8:	441c      	add	r4, r3
 80212ca:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80212cc:	f109 39ff 	add.w	r9, r9, #4294967295
 80212d0:	441e      	add	r6, r3
 80212d2:	e73c      	b.n	802114e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80212d4:	b00f      	add	sp, #60	@ 0x3c
 80212d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080212da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80212da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212de:	b085      	sub	sp, #20
 80212e0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 80212e4:	9102      	str	r1, [sp, #8]
 80212e6:	2c00      	cmp	r4, #0
 80212e8:	fb04 7103 	mla	r1, r4, r3, r7
 80212ec:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 80212f0:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80212f4:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 80212f8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80212fc:	f2c0 811b 	blt.w	8021536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8021300:	45a6      	cmp	lr, r4
 8021302:	f340 8118 	ble.w	8021536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8021306:	2f00      	cmp	r7, #0
 8021308:	f2c0 8113 	blt.w	8021532 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802130c:	42bb      	cmp	r3, r7
 802130e:	f340 8110 	ble.w	8021532 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8021312:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8021316:	1c7a      	adds	r2, r7, #1
 8021318:	f100 8110 	bmi.w	802153c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802131c:	4293      	cmp	r3, r2
 802131e:	f340 810d 	ble.w	802153c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8021322:	2e00      	cmp	r6, #0
 8021324:	f000 810c 	beq.w	8021540 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8021328:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802132c:	3401      	adds	r4, #1
 802132e:	f100 810b 	bmi.w	8021548 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8021332:	45a6      	cmp	lr, r4
 8021334:	f340 8108 	ble.w	8021548 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8021338:	2800      	cmp	r0, #0
 802133a:	f000 8108 	beq.w	802154e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802133e:	2f00      	cmp	r7, #0
 8021340:	f2c0 8100 	blt.w	8021544 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021344:	42bb      	cmp	r3, r7
 8021346:	f340 80fd 	ble.w	8021544 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802134a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802134e:	3701      	adds	r7, #1
 8021350:	f100 8100 	bmi.w	8021554 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021354:	42bb      	cmp	r3, r7
 8021356:	f340 80fd 	ble.w	8021554 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802135a:	2e00      	cmp	r6, #0
 802135c:	f000 80fc 	beq.w	8021558 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8021360:	3301      	adds	r3, #1
 8021362:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8021366:	b2b6      	uxth	r6, r6
 8021368:	b280      	uxth	r0, r0
 802136a:	fb00 fe06 	mul.w	lr, r0, r6
 802136e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021372:	0136      	lsls	r6, r6, #4
 8021374:	eba6 070e 	sub.w	r7, r6, lr
 8021378:	b280      	uxth	r0, r0
 802137a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802137e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021382:	b2bf      	uxth	r7, r7
 8021384:	1a1b      	subs	r3, r3, r0
 8021386:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802138a:	b29b      	uxth	r3, r3
 802138c:	fb0a f607 	mul.w	r6, sl, r7
 8021390:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021394:	fb0b 6603 	mla	r6, fp, r3, r6
 8021398:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802139c:	fb00 6609 	mla	r6, r0, r9, r6
 80213a0:	fb0e 6608 	mla	r6, lr, r8, r6
 80213a4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80213a8:	9600      	str	r6, [sp, #0]
 80213aa:	2e00      	cmp	r6, #0
 80213ac:	f000 80be 	beq.w	802152c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80213b0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80213b4:	fb0b fc0c 	mul.w	ip, fp, ip
 80213b8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80213bc:	fb0b f505 	mul.w	r5, fp, r5
 80213c0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80213c4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80213c8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80213cc:	44dc      	add	ip, fp
 80213ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80213d2:	9501      	str	r5, [sp, #4]
 80213d4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 80213d8:	9503      	str	r5, [sp, #12]
 80213da:	9d01      	ldr	r5, [sp, #4]
 80213dc:	9e02      	ldr	r6, [sp, #8]
 80213de:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80213e2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80213e6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80213ea:	fb0a fc0c 	mul.w	ip, sl, ip
 80213ee:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80213f2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80213f6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80213fa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80213fe:	4465      	add	r5, ip
 8021400:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021404:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8021408:	fb09 fc0c 	mul.w	ip, r9, ip
 802140c:	fb09 f904 	mul.w	r9, r9, r4
 8021410:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8021414:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021418:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 802141c:	fb08 f404 	mul.w	r4, r8, r4
 8021420:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8021424:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021428:	fb08 f802 	mul.w	r8, r8, r2
 802142c:	fb0a fa01 	mul.w	sl, sl, r1
 8021430:	0a22      	lsrs	r2, r4, #8
 8021432:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8021436:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802143a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802143e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021442:	4414      	add	r4, r2
 8021444:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021448:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 802144c:	0a2d      	lsrs	r5, r5, #8
 802144e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021452:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021456:	9a03      	ldr	r2, [sp, #12]
 8021458:	8836      	ldrh	r6, [r6, #0]
 802145a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802145e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021462:	437d      	muls	r5, r7
 8021464:	4461      	add	r1, ip
 8021466:	0a24      	lsrs	r4, r4, #8
 8021468:	fb02 5503 	mla	r5, r2, r3, r5
 802146c:	0a09      	lsrs	r1, r1, #8
 802146e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8021472:	fb04 540e 	mla	r4, r4, lr, r5
 8021476:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802147a:	fb01 4100 	mla	r1, r1, r0, r4
 802147e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021482:	0a09      	lsrs	r1, r1, #8
 8021484:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021488:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 802148c:	fb07 f70a 	mul.w	r7, r7, sl
 8021490:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021494:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8021498:	fb03 7101 	mla	r1, r3, r1, r7
 802149c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80214a0:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80214a4:	fb0e 1e08 	mla	lr, lr, r8, r1
 80214a8:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80214ac:	fb00 e101 	mla	r1, r0, r1, lr
 80214b0:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 80214b4:	9a00      	ldr	r2, [sp, #0]
 80214b6:	b287      	uxth	r7, r0
 80214b8:	437a      	muls	r2, r7
 80214ba:	0a09      	lsrs	r1, r1, #8
 80214bc:	1c53      	adds	r3, r2, #1
 80214be:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80214c2:	4321      	orrs	r1, r4
 80214c4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80214c8:	1235      	asrs	r5, r6, #8
 80214ca:	0c0a      	lsrs	r2, r1, #16
 80214cc:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80214d0:	b2db      	uxtb	r3, r3
 80214d2:	fb12 f207 	smulbb	r2, r2, r7
 80214d6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80214da:	fb05 2503 	mla	r5, r5, r3, r2
 80214de:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80214e2:	10f2      	asrs	r2, r6, #3
 80214e4:	b2c8      	uxtb	r0, r1
 80214e6:	00f6      	lsls	r6, r6, #3
 80214e8:	fb14 f407 	smulbb	r4, r4, r7
 80214ec:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80214f0:	b2f6      	uxtb	r6, r6
 80214f2:	fb10 f007 	smulbb	r0, r0, r7
 80214f6:	fb02 4203 	mla	r2, r2, r3, r4
 80214fa:	b2ad      	uxth	r5, r5
 80214fc:	fb06 0303 	mla	r3, r6, r3, r0
 8021500:	b299      	uxth	r1, r3
 8021502:	b294      	uxth	r4, r2
 8021504:	1c6b      	adds	r3, r5, #1
 8021506:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802150a:	1c62      	adds	r2, r4, #1
 802150c:	1c4b      	adds	r3, r1, #1
 802150e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021512:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021516:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802151a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802151e:	0952      	lsrs	r2, r2, #5
 8021520:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021524:	432b      	orrs	r3, r5
 8021526:	4313      	orrs	r3, r2
 8021528:	9a02      	ldr	r2, [sp, #8]
 802152a:	8013      	strh	r3, [r2, #0]
 802152c:	b005      	add	sp, #20
 802152e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021532:	2500      	movs	r5, #0
 8021534:	e6ef      	b.n	8021316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8021536:	2100      	movs	r1, #0
 8021538:	460d      	mov	r5, r1
 802153a:	e6f7      	b.n	802132c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802153c:	2100      	movs	r1, #0
 802153e:	e6f5      	b.n	802132c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8021540:	4631      	mov	r1, r6
 8021542:	e6f3      	b.n	802132c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8021544:	2400      	movs	r4, #0
 8021546:	e702      	b.n	802134e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8021548:	2200      	movs	r2, #0
 802154a:	4614      	mov	r4, r2
 802154c:	e70b      	b.n	8021366 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802154e:	4602      	mov	r2, r0
 8021550:	4604      	mov	r4, r0
 8021552:	e708      	b.n	8021366 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8021554:	2200      	movs	r2, #0
 8021556:	e706      	b.n	8021366 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8021558:	4632      	mov	r2, r6
 802155a:	e704      	b.n	8021366 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802155c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802155c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021560:	b09d      	sub	sp, #116	@ 0x74
 8021562:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8021566:	9219      	str	r2, [sp, #100]	@ 0x64
 8021568:	9307      	str	r3, [sp, #28]
 802156a:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 802156c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 8021570:	931a      	str	r3, [sp, #104]	@ 0x68
 8021572:	9117      	str	r1, [sp, #92]	@ 0x5c
 8021574:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8021578:	901b      	str	r0, [sp, #108]	@ 0x6c
 802157a:	6850      	ldr	r0, [r2, #4]
 802157c:	6812      	ldr	r2, [r2, #0]
 802157e:	fb00 1303 	mla	r3, r0, r3, r1
 8021582:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021586:	930a      	str	r3, [sp, #40]	@ 0x28
 8021588:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802158a:	681b      	ldr	r3, [r3, #0]
 802158c:	9310      	str	r3, [sp, #64]	@ 0x40
 802158e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8021592:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021594:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021596:	2b00      	cmp	r3, #0
 8021598:	dc03      	bgt.n	80215a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802159a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 802159c:	2b00      	cmp	r3, #0
 802159e:	f340 8375 	ble.w	8021c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80215a2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80215a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80215a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80215ac:	1e48      	subs	r0, r1, #1
 80215ae:	1e57      	subs	r7, r2, #1
 80215b0:	9b07      	ldr	r3, [sp, #28]
 80215b2:	2b00      	cmp	r3, #0
 80215b4:	f340 818e 	ble.w	80218d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80215b8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80215bc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80215c0:	d406      	bmi.n	80215d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80215c2:	4584      	cmp	ip, r0
 80215c4:	da04      	bge.n	80215d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80215c6:	2b00      	cmp	r3, #0
 80215c8:	db02      	blt.n	80215d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80215ca:	42bb      	cmp	r3, r7
 80215cc:	f2c0 8183 	blt.w	80218d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80215d0:	f11c 0c01 	adds.w	ip, ip, #1
 80215d4:	f100 8173 	bmi.w	80218be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80215d8:	4561      	cmp	r1, ip
 80215da:	f2c0 8170 	blt.w	80218be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80215de:	3301      	adds	r3, #1
 80215e0:	f100 816d 	bmi.w	80218be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80215e4:	429a      	cmp	r2, r3
 80215e6:	f2c0 816a 	blt.w	80218be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80215ea:	9b07      	ldr	r3, [sp, #28]
 80215ec:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80215ee:	9318      	str	r3, [sp, #96]	@ 0x60
 80215f0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80215f2:	2b00      	cmp	r3, #0
 80215f4:	f340 818c 	ble.w	8021910 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80215f8:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 80215fa:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80215fc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021600:	689b      	ldr	r3, [r3, #8]
 8021602:	1422      	asrs	r2, r4, #16
 8021604:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021608:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802160c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021610:	f100 81cd 	bmi.w	80219ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021614:	f103 38ff 	add.w	r8, r3, #4294967295
 8021618:	4542      	cmp	r2, r8
 802161a:	f280 81c8 	bge.w	80219ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802161e:	f1bc 0f00 	cmp.w	ip, #0
 8021622:	f2c0 81c4 	blt.w	80219ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021626:	f10e 38ff 	add.w	r8, lr, #4294967295
 802162a:	45c4      	cmp	ip, r8
 802162c:	f280 81bf 	bge.w	80219ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021630:	b21b      	sxth	r3, r3
 8021632:	fb0c 2203 	mla	r2, ip, r3, r2
 8021636:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021638:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802163c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8021640:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8021644:	2800      	cmp	r0, #0
 8021646:	f000 81a9 	beq.w	802199c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802164a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802164e:	950c      	str	r5, [sp, #48]	@ 0x30
 8021650:	0e2d      	lsrs	r5, r5, #24
 8021652:	9513      	str	r5, [sp, #76]	@ 0x4c
 8021654:	b181      	cbz	r1, 8021678 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8021656:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 802165a:	3b01      	subs	r3, #1
 802165c:	009b      	lsls	r3, r3, #2
 802165e:	3304      	adds	r3, #4
 8021660:	eb08 0c03 	add.w	ip, r8, r3
 8021664:	f858 3003 	ldr.w	r3, [r8, r3]
 8021668:	9308      	str	r3, [sp, #32]
 802166a:	0e1b      	lsrs	r3, r3, #24
 802166c:	9311      	str	r3, [sp, #68]	@ 0x44
 802166e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8021672:	930d      	str	r3, [sp, #52]	@ 0x34
 8021674:	0e1b      	lsrs	r3, r3, #24
 8021676:	9314      	str	r3, [sp, #80]	@ 0x50
 8021678:	b280      	uxth	r0, r0
 802167a:	b289      	uxth	r1, r1
 802167c:	fb00 f901 	mul.w	r9, r0, r1
 8021680:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021684:	0100      	lsls	r0, r0, #4
 8021686:	eba0 0809 	sub.w	r8, r0, r9
 802168a:	b289      	uxth	r1, r1
 802168c:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8021690:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8021692:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021694:	fa1f f888 	uxth.w	r8, r8
 8021698:	1a5b      	subs	r3, r3, r1
 802169a:	b29b      	uxth	r3, r3
 802169c:	fb08 f000 	mul.w	r0, r8, r0
 80216a0:	fb03 000e 	mla	r0, r3, lr, r0
 80216a4:	fb01 0005 	mla	r0, r1, r5, r0
 80216a8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80216aa:	fb09 0005 	mla	r0, r9, r5, r0
 80216ae:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80216b2:	2800      	cmp	r0, #0
 80216b4:	f000 80fa 	beq.w	80218ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80216b8:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80216bc:	d01b      	beq.n	80216f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80216be:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 80216c2:	fb0e fa0a 	mul.w	sl, lr, sl
 80216c6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80216ca:	fb0e fe02 	mul.w	lr, lr, r2
 80216ce:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80216d2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80216d6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80216da:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80216de:	4452      	add	r2, sl
 80216e0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80216e4:	0a12      	lsrs	r2, r2, #8
 80216e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80216ea:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80216ee:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80216f2:	ea42 020c 	orr.w	r2, r2, ip
 80216f6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80216f8:	2dff      	cmp	r5, #255	@ 0xff
 80216fa:	d021      	beq.n	8021740 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80216fc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80216fe:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8021702:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021704:	fb05 fb0b 	mul.w	fp, r5, fp
 8021708:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802170a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802170e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021710:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021714:	fb05 fa0a 	mul.w	sl, r5, sl
 8021718:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802171c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021720:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021724:	44de      	add	lr, fp
 8021726:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802172a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802172e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021732:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021736:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802173a:	ea4e 050a 	orr.w	r5, lr, sl
 802173e:	950c      	str	r5, [sp, #48]	@ 0x30
 8021740:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021742:	2dff      	cmp	r5, #255	@ 0xff
 8021744:	d021      	beq.n	802178a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8021746:	9d08      	ldr	r5, [sp, #32]
 8021748:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802174c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802174e:	fb05 fb0b 	mul.w	fp, r5, fp
 8021752:	9d08      	ldr	r5, [sp, #32]
 8021754:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021758:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802175a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802175e:	fb05 fa0a 	mul.w	sl, r5, sl
 8021762:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021766:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802176a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802176e:	44de      	add	lr, fp
 8021770:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021774:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021778:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802177c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021780:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021784:	ea4e 050a 	orr.w	r5, lr, sl
 8021788:	9508      	str	r5, [sp, #32]
 802178a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802178c:	2dff      	cmp	r5, #255	@ 0xff
 802178e:	d021      	beq.n	80217d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8021790:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8021792:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8021796:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8021798:	fb05 fb0b 	mul.w	fp, r5, fp
 802179c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802179e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80217a2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80217a4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80217a8:	fb05 fa0a 	mul.w	sl, r5, sl
 80217ac:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80217b0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80217b4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80217b8:	44de      	add	lr, fp
 80217ba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80217be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80217c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80217c6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80217ca:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80217ce:	ea4e 050a 	orr.w	r5, lr, sl
 80217d2:	950d      	str	r5, [sp, #52]	@ 0x34
 80217d4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80217d6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80217da:	9d08      	ldr	r5, [sp, #32]
 80217dc:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 80217e0:	fb08 fc0c 	mul.w	ip, r8, ip
 80217e4:	fb03 cc0e 	mla	ip, r3, lr, ip
 80217e8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80217ec:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80217ee:	fb01 cc0e 	mla	ip, r1, lr, ip
 80217f2:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80217f6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80217f8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80217fc:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8021800:	fb08 f80e 	mul.w	r8, r8, lr
 8021804:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021808:	fb03 8202 	mla	r2, r3, r2, r8
 802180c:	9b08      	ldr	r3, [sp, #32]
 802180e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021810:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 8021814:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021816:	fb01 220a 	mla	r2, r1, sl, r2
 802181a:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 802181e:	fb09 2901 	mla	r9, r9, r1, r2
 8021822:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8021824:	883b      	ldrh	r3, [r7, #0]
 8021826:	4342      	muls	r2, r0
 8021828:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802182c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021830:	1c50      	adds	r0, r2, #1
 8021832:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021836:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802183a:	ea4c 0c09 	orr.w	ip, ip, r9
 802183e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021842:	1219      	asrs	r1, r3, #8
 8021844:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021848:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802184c:	b2c0      	uxtb	r0, r0
 802184e:	fb12 f205 	smulbb	r2, r2, r5
 8021852:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8021856:	fb01 2100 	mla	r1, r1, r0, r2
 802185a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802185e:	10da      	asrs	r2, r3, #3
 8021860:	fa5f fc8c 	uxtb.w	ip, ip
 8021864:	00db      	lsls	r3, r3, #3
 8021866:	fb1c fc05 	smulbb	ip, ip, r5
 802186a:	b2db      	uxtb	r3, r3
 802186c:	b289      	uxth	r1, r1
 802186e:	fb03 c300 	mla	r3, r3, r0, ip
 8021872:	fa1f fc83 	uxth.w	ip, r3
 8021876:	1c4b      	adds	r3, r1, #1
 8021878:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802187c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8021880:	fb1e fe05 	smulbb	lr, lr, r5
 8021884:	f10c 0301 	add.w	r3, ip, #1
 8021888:	fb02 e200 	mla	r2, r2, r0, lr
 802188c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021890:	b292      	uxth	r2, r2
 8021892:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8021896:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802189a:	430b      	orrs	r3, r1
 802189c:	1c51      	adds	r1, r2, #1
 802189e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80218a2:	0952      	lsrs	r2, r2, #5
 80218a4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80218a8:	4313      	orrs	r3, r2
 80218aa:	803b      	strh	r3, [r7, #0]
 80218ac:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80218ae:	441c      	add	r4, r3
 80218b0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80218b2:	441e      	add	r6, r3
 80218b4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80218b6:	3b01      	subs	r3, #1
 80218b8:	3702      	adds	r7, #2
 80218ba:	9318      	str	r3, [sp, #96]	@ 0x60
 80218bc:	e698      	b.n	80215f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80218be:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80218c0:	441c      	add	r4, r3
 80218c2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80218c4:	441e      	add	r6, r3
 80218c6:	9b07      	ldr	r3, [sp, #28]
 80218c8:	3b01      	subs	r3, #1
 80218ca:	9307      	str	r3, [sp, #28]
 80218cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80218ce:	3302      	adds	r3, #2
 80218d0:	930a      	str	r3, [sp, #40]	@ 0x28
 80218d2:	e66d      	b.n	80215b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80218d4:	d023      	beq.n	802191e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80218d6:	9b07      	ldr	r3, [sp, #28]
 80218d8:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 80218da:	3b01      	subs	r3, #1
 80218dc:	fb00 4003 	mla	r0, r0, r3, r4
 80218e0:	1400      	asrs	r0, r0, #16
 80218e2:	f53f ae82 	bmi.w	80215ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80218e6:	3901      	subs	r1, #1
 80218e8:	4288      	cmp	r0, r1
 80218ea:	f6bf ae7e 	bge.w	80215ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80218ee:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80218f0:	fb01 6303 	mla	r3, r1, r3, r6
 80218f4:	141b      	asrs	r3, r3, #16
 80218f6:	f53f ae78 	bmi.w	80215ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80218fa:	3a01      	subs	r2, #1
 80218fc:	4293      	cmp	r3, r2
 80218fe:	f6bf ae74 	bge.w	80215ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021902:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021906:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802190a:	f1bb 0f00 	cmp.w	fp, #0
 802190e:	dc6c      	bgt.n	80219ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8021910:	9b07      	ldr	r3, [sp, #28]
 8021912:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021916:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021918:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802191c:	930a      	str	r3, [sp, #40]	@ 0x28
 802191e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021920:	2b00      	cmp	r3, #0
 8021922:	f340 81b3 	ble.w	8021c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8021926:	ee30 0a04 	vadd.f32	s0, s0, s8
 802192a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802192e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021932:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021934:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021938:	ee31 1a05 	vadd.f32	s2, s2, s10
 802193c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021940:	eef0 6a62 	vmov.f32	s13, s5
 8021944:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021948:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802194c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021950:	ee16 4a90 	vmov	r4, s13
 8021954:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021958:	eef0 6a43 	vmov.f32	s13, s6
 802195c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021960:	ee12 2a90 	vmov	r2, s5
 8021964:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021968:	fb92 f3f3 	sdiv	r3, r2, r3
 802196c:	ee13 2a10 	vmov	r2, s6
 8021970:	9329      	str	r3, [sp, #164]	@ 0xa4
 8021972:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021974:	fb92 f3f3 	sdiv	r3, r2, r3
 8021978:	932a      	str	r3, [sp, #168]	@ 0xa8
 802197a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802197c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802197e:	3b01      	subs	r3, #1
 8021980:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021984:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021986:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021988:	bf08      	it	eq
 802198a:	4613      	moveq	r3, r2
 802198c:	ee16 6a90 	vmov	r6, s13
 8021990:	9307      	str	r3, [sp, #28]
 8021992:	eeb0 3a67 	vmov.f32	s6, s15
 8021996:	eef0 2a47 	vmov.f32	s5, s14
 802199a:	e5fb      	b.n	8021594 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802199c:	2900      	cmp	r1, #0
 802199e:	f43f ae6b 	beq.w	8021678 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80219a2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80219a6:	9308      	str	r3, [sp, #32]
 80219a8:	0e1b      	lsrs	r3, r3, #24
 80219aa:	9311      	str	r3, [sp, #68]	@ 0x44
 80219ac:	e664      	b.n	8021678 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80219ae:	f112 0801 	adds.w	r8, r2, #1
 80219b2:	f53f af7b 	bmi.w	80218ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80219b6:	4543      	cmp	r3, r8
 80219b8:	f6ff af78 	blt.w	80218ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80219bc:	f11c 0801 	adds.w	r8, ip, #1
 80219c0:	f53f af74 	bmi.w	80218ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80219c4:	45c6      	cmp	lr, r8
 80219c6:	f6ff af71 	blt.w	80218ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80219ca:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80219cc:	9201      	str	r2, [sp, #4]
 80219ce:	fa0f f28e 	sxth.w	r2, lr
 80219d2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80219d6:	e9cd c002 	strd	ip, r0, [sp, #8]
 80219da:	9200      	str	r2, [sp, #0]
 80219dc:	b21b      	sxth	r3, r3
 80219de:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80219e0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80219e2:	4639      	mov	r1, r7
 80219e4:	f7ff fc79 	bl	80212da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80219e8:	e760      	b.n	80218ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80219ea:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80219ec:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80219ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80219f2:	1427      	asrs	r7, r4, #16
 80219f4:	1433      	asrs	r3, r6, #16
 80219f6:	fb01 7303 	mla	r3, r1, r3, r7
 80219fa:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80219fe:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021a02:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021a06:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021a0a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021a0e:	2a00      	cmp	r2, #0
 8021a10:	f000 8133 	beq.w	8021c7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8021a14:	687d      	ldr	r5, [r7, #4]
 8021a16:	950e      	str	r5, [sp, #56]	@ 0x38
 8021a18:	0e2d      	lsrs	r5, r5, #24
 8021a1a:	9515      	str	r5, [sp, #84]	@ 0x54
 8021a1c:	b178      	cbz	r0, 8021a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8021a1e:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 8021a22:	3901      	subs	r1, #1
 8021a24:	0089      	lsls	r1, r1, #2
 8021a26:	3104      	adds	r1, #4
 8021a28:	eb07 0e01 	add.w	lr, r7, r1
 8021a2c:	5879      	ldr	r1, [r7, r1]
 8021a2e:	9109      	str	r1, [sp, #36]	@ 0x24
 8021a30:	0e09      	lsrs	r1, r1, #24
 8021a32:	9112      	str	r1, [sp, #72]	@ 0x48
 8021a34:	f8de 1004 	ldr.w	r1, [lr, #4]
 8021a38:	910f      	str	r1, [sp, #60]	@ 0x3c
 8021a3a:	0e09      	lsrs	r1, r1, #24
 8021a3c:	9116      	str	r1, [sp, #88]	@ 0x58
 8021a3e:	b292      	uxth	r2, r2
 8021a40:	b280      	uxth	r0, r0
 8021a42:	fb02 f800 	mul.w	r8, r2, r0
 8021a46:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021a4a:	0112      	lsls	r2, r2, #4
 8021a4c:	eba2 0e08 	sub.w	lr, r2, r8
 8021a50:	b280      	uxth	r0, r0
 8021a52:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8021a56:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8021a58:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021a5a:	fa1f fe8e 	uxth.w	lr, lr
 8021a5e:	1a12      	subs	r2, r2, r0
 8021a60:	b292      	uxth	r2, r2
 8021a62:	fb0e f101 	mul.w	r1, lr, r1
 8021a66:	fb02 110c 	mla	r1, r2, ip, r1
 8021a6a:	fb00 1105 	mla	r1, r0, r5, r1
 8021a6e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8021a70:	fb08 1105 	mla	r1, r8, r5, r1
 8021a74:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021a78:	2900      	cmp	r1, #0
 8021a7a:	f000 80f5 	beq.w	8021c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8021a7e:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8021a82:	d019      	beq.n	8021ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8021a84:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8021a88:	fb0c fa0a 	mul.w	sl, ip, sl
 8021a8c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021a90:	fb0c fc03 	mul.w	ip, ip, r3
 8021a94:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021a98:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021a9c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8021aa0:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8021aa4:	4453      	add	r3, sl
 8021aa6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021aaa:	0a1b      	lsrs	r3, r3, #8
 8021aac:	0a3f      	lsrs	r7, r7, #8
 8021aae:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021ab2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8021ab6:	433b      	orrs	r3, r7
 8021ab8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021aba:	2dff      	cmp	r5, #255	@ 0xff
 8021abc:	d020      	beq.n	8021b00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8021abe:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021ac0:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021ac4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021ac6:	436f      	muls	r7, r5
 8021ac8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021aca:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021ace:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021ad0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021ad4:	fb05 fa0a 	mul.w	sl, r5, sl
 8021ad8:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021adc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021ae0:	44bc      	add	ip, r7
 8021ae2:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021ae6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021aea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021aee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021af2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021af6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021afa:	ea4c 050a 	orr.w	r5, ip, sl
 8021afe:	950e      	str	r5, [sp, #56]	@ 0x38
 8021b00:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021b02:	2dff      	cmp	r5, #255	@ 0xff
 8021b04:	d020      	beq.n	8021b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8021b06:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021b08:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021b0c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021b0e:	436f      	muls	r7, r5
 8021b10:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021b12:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021b16:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021b18:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021b1c:	fb05 fa0a 	mul.w	sl, r5, sl
 8021b20:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021b24:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021b28:	44bc      	add	ip, r7
 8021b2a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021b2e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021b32:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021b3a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021b3e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021b42:	ea4c 050a 	orr.w	r5, ip, sl
 8021b46:	9509      	str	r5, [sp, #36]	@ 0x24
 8021b48:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8021b4a:	2dff      	cmp	r5, #255	@ 0xff
 8021b4c:	d020      	beq.n	8021b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8021b4e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021b50:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021b54:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8021b56:	436f      	muls	r7, r5
 8021b58:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021b5a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021b5e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8021b60:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021b64:	fb05 fa0a 	mul.w	sl, r5, sl
 8021b68:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021b6c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021b70:	44bc      	add	ip, r7
 8021b72:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021b76:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021b7a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021b82:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021b86:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021b8a:	ea4c 050a 	orr.w	r5, ip, sl
 8021b8e:	950f      	str	r5, [sp, #60]	@ 0x3c
 8021b90:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021b92:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021b96:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021b98:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8021b9c:	fb0e f707 	mul.w	r7, lr, r7
 8021ba0:	fb02 770c 	mla	r7, r2, ip, r7
 8021ba4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021ba8:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021baa:	fb00 770c 	mla	r7, r0, ip, r7
 8021bae:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021bb2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021bb4:	fb08 770c 	mla	r7, r8, ip, r7
 8021bb8:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8021bbc:	fb0e fe0c 	mul.w	lr, lr, ip
 8021bc0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021bc4:	fb02 e303 	mla	r3, r2, r3, lr
 8021bc8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021bca:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021bcc:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8021bd0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8021bd2:	fb00 330a 	mla	r3, r0, sl, r3
 8021bd6:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8021bda:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021bde:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021be0:	f8b9 0000 	ldrh.w	r0, [r9]
 8021be4:	4359      	muls	r1, r3
 8021be6:	0a3f      	lsrs	r7, r7, #8
 8021be8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021bec:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8021bf0:	1c4b      	adds	r3, r1, #1
 8021bf2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8021bf6:	ea47 070c 	orr.w	r7, r7, ip
 8021bfa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021bfe:	1202      	asrs	r2, r0, #8
 8021c00:	0c3b      	lsrs	r3, r7, #16
 8021c02:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8021c06:	b2c9      	uxtb	r1, r1
 8021c08:	fb13 f305 	smulbb	r3, r3, r5
 8021c0c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8021c10:	fb02 3201 	mla	r2, r2, r1, r3
 8021c14:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021c18:	10c3      	asrs	r3, r0, #3
 8021c1a:	b2ff      	uxtb	r7, r7
 8021c1c:	00c0      	lsls	r0, r0, #3
 8021c1e:	b2c0      	uxtb	r0, r0
 8021c20:	fb17 f705 	smulbb	r7, r7, r5
 8021c24:	fb00 7001 	mla	r0, r0, r1, r7
 8021c28:	b292      	uxth	r2, r2
 8021c2a:	fb1c fc05 	smulbb	ip, ip, r5
 8021c2e:	b280      	uxth	r0, r0
 8021c30:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8021c34:	fb03 c301 	mla	r3, r3, r1, ip
 8021c38:	1c51      	adds	r1, r2, #1
 8021c3a:	f100 0c01 	add.w	ip, r0, #1
 8021c3e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021c42:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8021c46:	b29b      	uxth	r3, r3
 8021c48:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021c4c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8021c50:	ea4c 0202 	orr.w	r2, ip, r2
 8021c54:	f103 0c01 	add.w	ip, r3, #1
 8021c58:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021c5c:	095b      	lsrs	r3, r3, #5
 8021c5e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021c62:	431a      	orrs	r2, r3
 8021c64:	f8a9 2000 	strh.w	r2, [r9]
 8021c68:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8021c6a:	441c      	add	r4, r3
 8021c6c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021c6e:	f109 0902 	add.w	r9, r9, #2
 8021c72:	441e      	add	r6, r3
 8021c74:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021c78:	e647      	b.n	802190a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8021c7a:	2800      	cmp	r0, #0
 8021c7c:	f43f aedf 	beq.w	8021a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8021c80:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8021c84:	9109      	str	r1, [sp, #36]	@ 0x24
 8021c86:	0e09      	lsrs	r1, r1, #24
 8021c88:	9112      	str	r1, [sp, #72]	@ 0x48
 8021c8a:	e6d8      	b.n	8021a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8021c8c:	b01d      	add	sp, #116	@ 0x74
 8021c8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021c92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8021c92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c96:	b085      	sub	sp, #20
 8021c98:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8021c9c:	9102      	str	r1, [sp, #8]
 8021c9e:	2c00      	cmp	r4, #0
 8021ca0:	fb04 7103 	mla	r1, r4, r3, r7
 8021ca4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8021ca8:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8021cac:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8021cb0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8021cb4:	f2c0 810c 	blt.w	8021ed0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8021cb8:	45a6      	cmp	lr, r4
 8021cba:	f340 8109 	ble.w	8021ed0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8021cbe:	2f00      	cmp	r7, #0
 8021cc0:	f2c0 8104 	blt.w	8021ecc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8021cc4:	42bb      	cmp	r3, r7
 8021cc6:	f340 8101 	ble.w	8021ecc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8021cca:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8021cce:	1c7a      	adds	r2, r7, #1
 8021cd0:	f100 8101 	bmi.w	8021ed6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8021cd4:	4293      	cmp	r3, r2
 8021cd6:	f340 80fe 	ble.w	8021ed6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8021cda:	2e00      	cmp	r6, #0
 8021cdc:	f000 80fd 	beq.w	8021eda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8021ce0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8021ce4:	3401      	adds	r4, #1
 8021ce6:	f100 80fc 	bmi.w	8021ee2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8021cea:	45a6      	cmp	lr, r4
 8021cec:	f340 80f9 	ble.w	8021ee2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8021cf0:	2800      	cmp	r0, #0
 8021cf2:	f000 80f9 	beq.w	8021ee8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8021cf6:	2f00      	cmp	r7, #0
 8021cf8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8021cfc:	f2c0 80ef 	blt.w	8021ede <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8021d00:	42bb      	cmp	r3, r7
 8021d02:	f340 80ec 	ble.w	8021ede <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8021d06:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8021d0a:	3701      	adds	r7, #1
 8021d0c:	f100 80ef 	bmi.w	8021eee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8021d10:	42bb      	cmp	r3, r7
 8021d12:	f340 80ec 	ble.w	8021eee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8021d16:	2e00      	cmp	r6, #0
 8021d18:	f000 80eb 	beq.w	8021ef2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8021d1c:	6852      	ldr	r2, [r2, #4]
 8021d1e:	b2b6      	uxth	r6, r6
 8021d20:	b280      	uxth	r0, r0
 8021d22:	fb00 fe06 	mul.w	lr, r0, r6
 8021d26:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021d2a:	0136      	lsls	r6, r6, #4
 8021d2c:	eba6 070e 	sub.w	r7, r6, lr
 8021d30:	b280      	uxth	r0, r0
 8021d32:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8021d36:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021d3a:	b2bf      	uxth	r7, r7
 8021d3c:	1a1b      	subs	r3, r3, r0
 8021d3e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021d42:	b29b      	uxth	r3, r3
 8021d44:	fb07 f60a 	mul.w	r6, r7, sl
 8021d48:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021d4c:	fb0b 6603 	mla	r6, fp, r3, r6
 8021d50:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021d54:	fb00 6609 	mla	r6, r0, r9, r6
 8021d58:	fb0e 6608 	mla	r6, lr, r8, r6
 8021d5c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021d60:	9600      	str	r6, [sp, #0]
 8021d62:	2e00      	cmp	r6, #0
 8021d64:	f000 80af 	beq.w	8021ec6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8021d68:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021d6c:	fb0b fc0c 	mul.w	ip, fp, ip
 8021d70:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8021d74:	fb0b f505 	mul.w	r5, fp, r5
 8021d78:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021d7c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8021d80:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021d84:	44dc      	add	ip, fp
 8021d86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021d8a:	9501      	str	r5, [sp, #4]
 8021d8c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8021d90:	9503      	str	r5, [sp, #12]
 8021d92:	9d01      	ldr	r5, [sp, #4]
 8021d94:	9e02      	ldr	r6, [sp, #8]
 8021d96:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8021d9a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021d9e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8021da2:	fb0a fc0c 	mul.w	ip, sl, ip
 8021da6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021daa:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021dae:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021db2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021db6:	4465      	add	r5, ip
 8021db8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021dbc:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8021dc0:	fb09 fc0c 	mul.w	ip, r9, ip
 8021dc4:	fb09 f904 	mul.w	r9, r9, r4
 8021dc8:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8021dcc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021dd0:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8021dd4:	fb08 f404 	mul.w	r4, r8, r4
 8021dd8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8021ddc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021de0:	fb08 f802 	mul.w	r8, r8, r2
 8021de4:	fb0a fa01 	mul.w	sl, sl, r1
 8021de8:	0a22      	lsrs	r2, r4, #8
 8021dea:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8021dee:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8021df2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8021df6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021dfa:	4414      	add	r4, r2
 8021dfc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021e00:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8021e04:	0a2d      	lsrs	r5, r5, #8
 8021e06:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021e0a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021e0e:	9a03      	ldr	r2, [sp, #12]
 8021e10:	8836      	ldrh	r6, [r6, #0]
 8021e12:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8021e16:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021e1a:	437d      	muls	r5, r7
 8021e1c:	4461      	add	r1, ip
 8021e1e:	0a24      	lsrs	r4, r4, #8
 8021e20:	fb02 5503 	mla	r5, r2, r3, r5
 8021e24:	0a09      	lsrs	r1, r1, #8
 8021e26:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8021e2a:	fb04 540e 	mla	r4, r4, lr, r5
 8021e2e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8021e32:	fb01 4100 	mla	r1, r1, r0, r4
 8021e36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e3a:	0a09      	lsrs	r1, r1, #8
 8021e3c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021e40:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8021e44:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021e48:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8021e4c:	fb07 f70a 	mul.w	r7, r7, sl
 8021e50:	fb03 7101 	mla	r1, r3, r1, r7
 8021e54:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021e58:	9b00      	ldr	r3, [sp, #0]
 8021e5a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8021e5e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8021e62:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8021e66:	fb00 e101 	mla	r1, r0, r1, lr
 8021e6a:	43da      	mvns	r2, r3
 8021e6c:	1233      	asrs	r3, r6, #8
 8021e6e:	b2d2      	uxtb	r2, r2
 8021e70:	10f0      	asrs	r0, r6, #3
 8021e72:	0a09      	lsrs	r1, r1, #8
 8021e74:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021e78:	00f6      	lsls	r6, r6, #3
 8021e7a:	4353      	muls	r3, r2
 8021e7c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8021e80:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021e84:	b2f6      	uxtb	r6, r6
 8021e86:	4321      	orrs	r1, r4
 8021e88:	4350      	muls	r0, r2
 8021e8a:	4356      	muls	r6, r2
 8021e8c:	1c5a      	adds	r2, r3, #1
 8021e8e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021e92:	0c0b      	lsrs	r3, r1, #16
 8021e94:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021e98:	1c42      	adds	r2, r0, #1
 8021e9a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021e9e:	0a0a      	lsrs	r2, r1, #8
 8021ea0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021ea4:	021b      	lsls	r3, r3, #8
 8021ea6:	00d2      	lsls	r2, r2, #3
 8021ea8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021eac:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8021eb0:	4313      	orrs	r3, r2
 8021eb2:	1c72      	adds	r2, r6, #1
 8021eb4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8021eb8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8021ebc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8021ec0:	4319      	orrs	r1, r3
 8021ec2:	9b02      	ldr	r3, [sp, #8]
 8021ec4:	8019      	strh	r1, [r3, #0]
 8021ec6:	b005      	add	sp, #20
 8021ec8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ecc:	2500      	movs	r5, #0
 8021ece:	e6fe      	b.n	8021cce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8021ed0:	2100      	movs	r1, #0
 8021ed2:	460d      	mov	r5, r1
 8021ed4:	e706      	b.n	8021ce4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021ed6:	2100      	movs	r1, #0
 8021ed8:	e704      	b.n	8021ce4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021eda:	4631      	mov	r1, r6
 8021edc:	e702      	b.n	8021ce4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021ede:	2400      	movs	r4, #0
 8021ee0:	e713      	b.n	8021d0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8021ee2:	2200      	movs	r2, #0
 8021ee4:	4614      	mov	r4, r2
 8021ee6:	e71a      	b.n	8021d1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021ee8:	4602      	mov	r2, r0
 8021eea:	4604      	mov	r4, r0
 8021eec:	e717      	b.n	8021d1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021eee:	2200      	movs	r2, #0
 8021ef0:	e715      	b.n	8021d1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021ef2:	4632      	mov	r2, r6
 8021ef4:	e713      	b.n	8021d1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08021ef8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021efc:	b09b      	sub	sp, #108	@ 0x6c
 8021efe:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 8021f02:	9218      	str	r2, [sp, #96]	@ 0x60
 8021f04:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8021f06:	9116      	str	r1, [sp, #88]	@ 0x58
 8021f08:	9307      	str	r3, [sp, #28]
 8021f0a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8021f0e:	9019      	str	r0, [sp, #100]	@ 0x64
 8021f10:	6850      	ldr	r0, [r2, #4]
 8021f12:	6812      	ldr	r2, [r2, #0]
 8021f14:	fb00 1303 	mla	r3, r0, r3, r1
 8021f18:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021f1c:	930a      	str	r3, [sp, #40]	@ 0x28
 8021f1e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021f20:	681b      	ldr	r3, [r3, #0]
 8021f22:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021f24:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8021f26:	2b00      	cmp	r3, #0
 8021f28:	dc03      	bgt.n	8021f32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021f2a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021f2c:	2b00      	cmp	r3, #0
 8021f2e:	f340 8386 	ble.w	802263e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8021f32:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021f34:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021f38:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021f3c:	1e48      	subs	r0, r1, #1
 8021f3e:	1e57      	subs	r7, r2, #1
 8021f40:	9b07      	ldr	r3, [sp, #28]
 8021f42:	2b00      	cmp	r3, #0
 8021f44:	f340 8166 	ble.w	8022214 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8021f48:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021f4c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021f50:	d406      	bmi.n	8021f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021f52:	4584      	cmp	ip, r0
 8021f54:	da04      	bge.n	8021f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021f56:	2b00      	cmp	r3, #0
 8021f58:	db02      	blt.n	8021f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021f5a:	42bb      	cmp	r3, r7
 8021f5c:	f2c0 815b 	blt.w	8022216 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8021f60:	f11c 0c01 	adds.w	ip, ip, #1
 8021f64:	f100 814b 	bmi.w	80221fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021f68:	4561      	cmp	r1, ip
 8021f6a:	f2c0 8148 	blt.w	80221fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021f6e:	3301      	adds	r3, #1
 8021f70:	f100 8145 	bmi.w	80221fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021f74:	429a      	cmp	r2, r3
 8021f76:	f2c0 8142 	blt.w	80221fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021f7a:	9b07      	ldr	r3, [sp, #28]
 8021f7c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8021f7e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021f80:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021f82:	2b00      	cmp	r3, #0
 8021f84:	f340 8165 	ble.w	8022252 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021f88:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8021f8a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021f8c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021f90:	689b      	ldr	r3, [r3, #8]
 8021f92:	1422      	asrs	r2, r4, #16
 8021f94:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021f98:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8021f9c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021fa0:	f100 81d5 	bmi.w	802234e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021fa4:	f103 38ff 	add.w	r8, r3, #4294967295
 8021fa8:	4542      	cmp	r2, r8
 8021faa:	f280 81d0 	bge.w	802234e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021fae:	f1bc 0f00 	cmp.w	ip, #0
 8021fb2:	f2c0 81cc 	blt.w	802234e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021fb6:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021fba:	45c4      	cmp	ip, r8
 8021fbc:	f280 81c7 	bge.w	802234e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021fc0:	b21b      	sxth	r3, r3
 8021fc2:	fb0c 2203 	mla	r2, ip, r3, r2
 8021fc6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021fc8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8021fcc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8021fd0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8021fd4:	2900      	cmp	r1, #0
 8021fd6:	f000 8182 	beq.w	80222de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021fda:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8021fde:	950b      	str	r5, [sp, #44]	@ 0x2c
 8021fe0:	0e2d      	lsrs	r5, r5, #24
 8021fe2:	9512      	str	r5, [sp, #72]	@ 0x48
 8021fe4:	b180      	cbz	r0, 8022008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8021fe6:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8021fea:	3b01      	subs	r3, #1
 8021fec:	009b      	lsls	r3, r3, #2
 8021fee:	3304      	adds	r3, #4
 8021ff0:	eb08 0c03 	add.w	ip, r8, r3
 8021ff4:	f858 3003 	ldr.w	r3, [r8, r3]
 8021ff8:	9308      	str	r3, [sp, #32]
 8021ffa:	0e1b      	lsrs	r3, r3, #24
 8021ffc:	9310      	str	r3, [sp, #64]	@ 0x40
 8021ffe:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8022002:	930c      	str	r3, [sp, #48]	@ 0x30
 8022004:	0e1b      	lsrs	r3, r3, #24
 8022006:	9313      	str	r3, [sp, #76]	@ 0x4c
 8022008:	b289      	uxth	r1, r1
 802200a:	b280      	uxth	r0, r0
 802200c:	fb01 f900 	mul.w	r9, r1, r0
 8022010:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022014:	0109      	lsls	r1, r1, #4
 8022016:	eba1 0809 	sub.w	r8, r1, r9
 802201a:	b280      	uxth	r0, r0
 802201c:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8022020:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8022022:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8022024:	fa1f f888 	uxth.w	r8, r8
 8022028:	1a09      	subs	r1, r1, r0
 802202a:	b289      	uxth	r1, r1
 802202c:	fb08 f303 	mul.w	r3, r8, r3
 8022030:	fb01 330e 	mla	r3, r1, lr, r3
 8022034:	fb00 3305 	mla	r3, r0, r5, r3
 8022038:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802203a:	fb09 3305 	mla	r3, r9, r5, r3
 802203e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022042:	2b00      	cmp	r3, #0
 8022044:	f000 80d2 	beq.w	80221ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022048:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802204c:	d01b      	beq.n	8022086 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802204e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8022052:	fb0e fa0a 	mul.w	sl, lr, sl
 8022056:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802205a:	fb0e fe02 	mul.w	lr, lr, r2
 802205e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8022062:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8022066:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802206a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802206e:	4452      	add	r2, sl
 8022070:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022074:	0a12      	lsrs	r2, r2, #8
 8022076:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802207a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802207e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8022082:	ea42 020c 	orr.w	r2, r2, ip
 8022086:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8022088:	2dff      	cmp	r5, #255	@ 0xff
 802208a:	d021      	beq.n	80220d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802208c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802208e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8022092:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8022094:	fb05 fb0b 	mul.w	fp, r5, fp
 8022098:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802209a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802209e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80220a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80220a4:	fb05 fa0a 	mul.w	sl, r5, sl
 80220a8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80220ac:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80220b0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80220b4:	44de      	add	lr, fp
 80220b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80220ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80220be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80220c2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80220c6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80220ca:	ea4e 050a 	orr.w	r5, lr, sl
 80220ce:	950b      	str	r5, [sp, #44]	@ 0x2c
 80220d0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80220d2:	2dff      	cmp	r5, #255	@ 0xff
 80220d4:	d021      	beq.n	802211a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80220d6:	9d08      	ldr	r5, [sp, #32]
 80220d8:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80220dc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80220de:	fb05 fb0b 	mul.w	fp, r5, fp
 80220e2:	9d08      	ldr	r5, [sp, #32]
 80220e4:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 80220e8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80220ea:	fb05 fa0e 	mul.w	sl, r5, lr
 80220ee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80220f2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80220f6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80220fa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80220fe:	44de      	add	lr, fp
 8022100:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022104:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022108:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802210c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8022110:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022114:	ea4e 050a 	orr.w	r5, lr, sl
 8022118:	9508      	str	r5, [sp, #32]
 802211a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802211c:	2dff      	cmp	r5, #255	@ 0xff
 802211e:	d021      	beq.n	8022164 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8022120:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8022122:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8022126:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8022128:	fb05 fb0b 	mul.w	fp, r5, fp
 802212c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802212e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8022132:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8022134:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022138:	fb05 fa0a 	mul.w	sl, r5, sl
 802213c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8022140:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8022144:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8022148:	44de      	add	lr, fp
 802214a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802214e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022152:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022156:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802215a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802215e:	ea4e 050a 	orr.w	r5, lr, sl
 8022162:	950c      	str	r5, [sp, #48]	@ 0x30
 8022164:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8022166:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802216a:	9d08      	ldr	r5, [sp, #32]
 802216c:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8022170:	fb08 fc0c 	mul.w	ip, r8, ip
 8022174:	fb01 cc0e 	mla	ip, r1, lr, ip
 8022178:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802217c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802217e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022182:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8022186:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8022188:	fb09 cc0e 	mla	ip, r9, lr, ip
 802218c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8022190:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8022194:	fb08 f80e 	mul.w	r8, r8, lr
 8022198:	fb01 8202 	mla	r2, r1, r2, r8
 802219c:	9908      	ldr	r1, [sp, #32]
 802219e:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80221a2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80221a4:	fb00 220a 	mla	r2, r0, sl, r2
 80221a8:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 80221ac:	fb09 2900 	mla	r9, r9, r0, r2
 80221b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80221b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80221b8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80221bc:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80221c0:	ea4c 0c09 	orr.w	ip, ip, r9
 80221c4:	2bff      	cmp	r3, #255	@ 0xff
 80221c6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80221ca:	f040 8091 	bne.w	80222f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80221ce:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80221d2:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 80221d6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80221da:	f022 0207 	bic.w	r2, r2, #7
 80221de:	431a      	orrs	r2, r3
 80221e0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80221e4:	ea4c 0c02 	orr.w	ip, ip, r2
 80221e8:	f8a7 c000 	strh.w	ip, [r7]
 80221ec:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80221ee:	441c      	add	r4, r3
 80221f0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80221f2:	441e      	add	r6, r3
 80221f4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80221f6:	3b01      	subs	r3, #1
 80221f8:	3702      	adds	r7, #2
 80221fa:	9317      	str	r3, [sp, #92]	@ 0x5c
 80221fc:	e6c0      	b.n	8021f80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80221fe:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8022200:	441c      	add	r4, r3
 8022202:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022204:	441e      	add	r6, r3
 8022206:	9b07      	ldr	r3, [sp, #28]
 8022208:	3b01      	subs	r3, #1
 802220a:	9307      	str	r3, [sp, #28]
 802220c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802220e:	3302      	adds	r3, #2
 8022210:	930a      	str	r3, [sp, #40]	@ 0x28
 8022212:	e695      	b.n	8021f40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022214:	d024      	beq.n	8022260 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8022216:	9b07      	ldr	r3, [sp, #28]
 8022218:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802221a:	3b01      	subs	r3, #1
 802221c:	fb00 4003 	mla	r0, r0, r3, r4
 8022220:	1400      	asrs	r0, r0, #16
 8022222:	f53f aeaa 	bmi.w	8021f7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022226:	3901      	subs	r1, #1
 8022228:	4288      	cmp	r0, r1
 802222a:	f6bf aea6 	bge.w	8021f7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802222e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8022230:	fb01 6303 	mla	r3, r1, r3, r6
 8022234:	141b      	asrs	r3, r3, #16
 8022236:	f53f aea0 	bmi.w	8021f7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802223a:	3a01      	subs	r2, #1
 802223c:	4293      	cmp	r3, r2
 802223e:	f6bf ae9c 	bge.w	8021f7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022242:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022246:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 802224a:	f1bb 0f00 	cmp.w	fp, #0
 802224e:	f300 809a 	bgt.w	8022386 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8022252:	9b07      	ldr	r3, [sp, #28]
 8022254:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022258:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802225a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802225e:	930a      	str	r3, [sp, #40]	@ 0x28
 8022260:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8022262:	2b00      	cmp	r3, #0
 8022264:	f340 81eb 	ble.w	802263e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022268:	ee30 0a04 	vadd.f32	s0, s0, s8
 802226c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022270:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022274:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022276:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802227a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802227e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022282:	eef0 6a62 	vmov.f32	s13, s5
 8022286:	ee61 7a27 	vmul.f32	s15, s2, s15
 802228a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802228e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022292:	ee16 4a90 	vmov	r4, s13
 8022296:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802229a:	eef0 6a43 	vmov.f32	s13, s6
 802229e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80222a2:	ee12 2a90 	vmov	r2, s5
 80222a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80222aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80222ae:	ee13 2a10 	vmov	r2, s6
 80222b2:	9327      	str	r3, [sp, #156]	@ 0x9c
 80222b4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80222b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80222ba:	9328      	str	r3, [sp, #160]	@ 0xa0
 80222bc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80222be:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80222c0:	3b01      	subs	r3, #1
 80222c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80222c6:	9316      	str	r3, [sp, #88]	@ 0x58
 80222c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80222ca:	bf08      	it	eq
 80222cc:	4613      	moveq	r3, r2
 80222ce:	ee16 6a90 	vmov	r6, s13
 80222d2:	9307      	str	r3, [sp, #28]
 80222d4:	eeb0 3a67 	vmov.f32	s6, s15
 80222d8:	eef0 2a47 	vmov.f32	s5, s14
 80222dc:	e622      	b.n	8021f24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80222de:	2800      	cmp	r0, #0
 80222e0:	f43f ae92 	beq.w	8022008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80222e4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80222e8:	9308      	str	r3, [sp, #32]
 80222ea:	0e1b      	lsrs	r3, r3, #24
 80222ec:	9310      	str	r3, [sp, #64]	@ 0x40
 80222ee:	e68b      	b.n	8022008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80222f0:	8839      	ldrh	r1, [r7, #0]
 80222f2:	4dd4      	ldr	r5, [pc, #848]	@ (8022644 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80222f4:	43db      	mvns	r3, r3
 80222f6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80222fa:	fa5f f883 	uxtb.w	r8, r3
 80222fe:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8022302:	fb0e fe08 	mul.w	lr, lr, r8
 8022306:	10c8      	asrs	r0, r1, #3
 8022308:	00cb      	lsls	r3, r1, #3
 802230a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802230e:	f10e 0101 	add.w	r1, lr, #1
 8022312:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8022316:	fb00 f008 	mul.w	r0, r0, r8
 802231a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802231e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8022322:	f100 0e01 	add.w	lr, r0, #1
 8022326:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802232a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802232e:	b2db      	uxtb	r3, r3
 8022330:	b2c9      	uxtb	r1, r1
 8022332:	00d2      	lsls	r2, r2, #3
 8022334:	fb03 f308 	mul.w	r3, r3, r8
 8022338:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802233c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022340:	430a      	orrs	r2, r1
 8022342:	1c59      	adds	r1, r3, #1
 8022344:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022348:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802234c:	e748      	b.n	80221e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802234e:	f112 0801 	adds.w	r8, r2, #1
 8022352:	f53f af4b 	bmi.w	80221ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022356:	4543      	cmp	r3, r8
 8022358:	f6ff af48 	blt.w	80221ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802235c:	f11c 0801 	adds.w	r8, ip, #1
 8022360:	f53f af44 	bmi.w	80221ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022364:	45c6      	cmp	lr, r8
 8022366:	f6ff af41 	blt.w	80221ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802236a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802236e:	fa0f f28e 	sxth.w	r2, lr
 8022372:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8022376:	9200      	str	r2, [sp, #0]
 8022378:	b21b      	sxth	r3, r3
 802237a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802237c:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802237e:	4639      	mov	r1, r7
 8022380:	f7ff fc87 	bl	8021c92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8022384:	e732      	b.n	80221ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022386:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8022388:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802238a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802238e:	1421      	asrs	r1, r4, #16
 8022390:	1433      	asrs	r3, r6, #16
 8022392:	fb07 1303 	mla	r3, r7, r3, r1
 8022396:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8022398:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802239c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80223a0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80223a4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80223a8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80223ac:	2a00      	cmp	r2, #0
 80223ae:	f000 8107 	beq.w	80225c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80223b2:	684d      	ldr	r5, [r1, #4]
 80223b4:	950d      	str	r5, [sp, #52]	@ 0x34
 80223b6:	0e2d      	lsrs	r5, r5, #24
 80223b8:	9514      	str	r5, [sp, #80]	@ 0x50
 80223ba:	b178      	cbz	r0, 80223dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80223bc:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80223c0:	3f01      	subs	r7, #1
 80223c2:	00bf      	lsls	r7, r7, #2
 80223c4:	3704      	adds	r7, #4
 80223c6:	eb01 0e07 	add.w	lr, r1, r7
 80223ca:	59c9      	ldr	r1, [r1, r7]
 80223cc:	9109      	str	r1, [sp, #36]	@ 0x24
 80223ce:	0e09      	lsrs	r1, r1, #24
 80223d0:	9111      	str	r1, [sp, #68]	@ 0x44
 80223d2:	f8de 1004 	ldr.w	r1, [lr, #4]
 80223d6:	910e      	str	r1, [sp, #56]	@ 0x38
 80223d8:	0e09      	lsrs	r1, r1, #24
 80223da:	9115      	str	r1, [sp, #84]	@ 0x54
 80223dc:	b292      	uxth	r2, r2
 80223de:	b280      	uxth	r0, r0
 80223e0:	fb02 f900 	mul.w	r9, r2, r0
 80223e4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80223e8:	0112      	lsls	r2, r2, #4
 80223ea:	eba2 0e09 	sub.w	lr, r2, r9
 80223ee:	b280      	uxth	r0, r0
 80223f0:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 80223f4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80223f6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80223f8:	fa1f fe8e 	uxth.w	lr, lr
 80223fc:	1a09      	subs	r1, r1, r0
 80223fe:	b289      	uxth	r1, r1
 8022400:	fb0e f202 	mul.w	r2, lr, r2
 8022404:	fb01 220c 	mla	r2, r1, ip, r2
 8022408:	fb00 2205 	mla	r2, r0, r5, r2
 802240c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802240e:	fb09 2205 	mla	r2, r9, r5, r2
 8022412:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8022416:	2a00      	cmp	r2, #0
 8022418:	f000 80c9 	beq.w	80225ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802241c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8022420:	d019      	beq.n	8022456 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8022422:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8022426:	fb0c fa0a 	mul.w	sl, ip, sl
 802242a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802242e:	fb0c fc03 	mul.w	ip, ip, r3
 8022432:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022436:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802243a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802243e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8022442:	4453      	add	r3, sl
 8022444:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022448:	0a1b      	lsrs	r3, r3, #8
 802244a:	0a3f      	lsrs	r7, r7, #8
 802244c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8022450:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8022454:	433b      	orrs	r3, r7
 8022456:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8022458:	2dff      	cmp	r5, #255	@ 0xff
 802245a:	d020      	beq.n	802249e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802245c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802245e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8022462:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8022464:	436f      	muls	r7, r5
 8022466:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8022468:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802246c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802246e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022472:	fb05 fa0a 	mul.w	sl, r5, sl
 8022476:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802247a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802247e:	44bc      	add	ip, r7
 8022480:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8022484:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022488:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802248c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022490:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022494:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022498:	ea4c 050a 	orr.w	r5, ip, sl
 802249c:	950d      	str	r5, [sp, #52]	@ 0x34
 802249e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80224a0:	2dff      	cmp	r5, #255	@ 0xff
 80224a2:	d020      	beq.n	80224e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80224a4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80224a6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80224aa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80224ac:	436f      	muls	r7, r5
 80224ae:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80224b0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80224b4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80224b6:	fb05 fa0c 	mul.w	sl, r5, ip
 80224ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80224be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80224c2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80224c6:	44bc      	add	ip, r7
 80224c8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80224cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80224d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80224d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80224d8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80224dc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80224e0:	ea4c 050a 	orr.w	r5, ip, sl
 80224e4:	9509      	str	r5, [sp, #36]	@ 0x24
 80224e6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80224e8:	2dff      	cmp	r5, #255	@ 0xff
 80224ea:	d020      	beq.n	802252e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80224ec:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80224ee:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80224f2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80224f4:	436f      	muls	r7, r5
 80224f6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80224f8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80224fc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80224fe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022502:	fb05 fa0a 	mul.w	sl, r5, sl
 8022506:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802250a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802250e:	44bc      	add	ip, r7
 8022510:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8022514:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022518:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802251c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022520:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022524:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022528:	ea4c 050a 	orr.w	r5, ip, sl
 802252c:	950e      	str	r5, [sp, #56]	@ 0x38
 802252e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8022530:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8022534:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8022536:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802253a:	fb0e f707 	mul.w	r7, lr, r7
 802253e:	fb01 770c 	mla	r7, r1, ip, r7
 8022542:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8022546:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8022548:	fb00 770c 	mla	r7, r0, ip, r7
 802254c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8022550:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8022552:	fb09 770c 	mla	r7, r9, ip, r7
 8022556:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802255a:	fb0e fe0c 	mul.w	lr, lr, ip
 802255e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8022562:	fb01 e303 	mla	r3, r1, r3, lr
 8022566:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8022568:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802256c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802256e:	fb00 330a 	mla	r3, r0, sl, r3
 8022572:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8022576:	fb09 3c0c 	mla	ip, r9, ip, r3
 802257a:	0a3f      	lsrs	r7, r7, #8
 802257c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022580:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8022584:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8022588:	ea47 070c 	orr.w	r7, r7, ip
 802258c:	2aff      	cmp	r2, #255	@ 0xff
 802258e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8022592:	d11e      	bne.n	80225d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8022594:	097a      	lsrs	r2, r7, #5
 8022596:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 802259a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802259e:	f023 0307 	bic.w	r3, r3, #7
 80225a2:	4313      	orrs	r3, r2
 80225a4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80225a8:	431f      	orrs	r7, r3
 80225aa:	f8a8 7000 	strh.w	r7, [r8]
 80225ae:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80225b0:	441c      	add	r4, r3
 80225b2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80225b4:	f108 0802 	add.w	r8, r8, #2
 80225b8:	441e      	add	r6, r3
 80225ba:	f10b 3bff 	add.w	fp, fp, #4294967295
 80225be:	e644      	b.n	802224a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80225c0:	2800      	cmp	r0, #0
 80225c2:	f43f af0b 	beq.w	80223dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80225c6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80225ca:	9109      	str	r1, [sp, #36]	@ 0x24
 80225cc:	0e09      	lsrs	r1, r1, #24
 80225ce:	9111      	str	r1, [sp, #68]	@ 0x44
 80225d0:	e704      	b.n	80223dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80225d2:	f8b8 1000 	ldrh.w	r1, [r8]
 80225d6:	43d2      	mvns	r2, r2
 80225d8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80225dc:	fa5f fe82 	uxtb.w	lr, r2
 80225e0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80225e4:	fb0c fc0e 	mul.w	ip, ip, lr
 80225e8:	10c8      	asrs	r0, r1, #3
 80225ea:	00ca      	lsls	r2, r1, #3
 80225ec:	f10c 0101 	add.w	r1, ip, #1
 80225f0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80225f4:	0c39      	lsrs	r1, r7, #16
 80225f6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80225fa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80225fe:	4911      	ldr	r1, [pc, #68]	@ (8022644 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8022600:	fb00 f00e 	mul.w	r0, r0, lr
 8022604:	fa5f fc8c 	uxtb.w	ip, ip
 8022608:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802260c:	b2d2      	uxtb	r2, r2
 802260e:	1c41      	adds	r1, r0, #1
 8022610:	fb02 f20e 	mul.w	r2, r2, lr
 8022614:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022618:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802261c:	1c51      	adds	r1, r2, #1
 802261e:	00c0      	lsls	r0, r0, #3
 8022620:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8022624:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022628:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802262c:	ea4c 0c00 	orr.w	ip, ip, r0
 8022630:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8022634:	ea47 0c0c 	orr.w	ip, r7, ip
 8022638:	f8a8 c000 	strh.w	ip, [r8]
 802263c:	e7b7      	b.n	80225ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802263e:	b01b      	add	sp, #108	@ 0x6c
 8022640:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022644:	fffff800 	.word	0xfffff800

08022648 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8022648:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802264c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8022650:	2d00      	cmp	r5, #0
 8022652:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8022656:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 802265a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802265e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8022662:	fb05 0e03 	mla	lr, r5, r3, r0
 8022666:	f2c0 808c 	blt.w	8022782 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802266a:	45a9      	cmp	r9, r5
 802266c:	f340 8089 	ble.w	8022782 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8022670:	2800      	cmp	r0, #0
 8022672:	f2c0 8084 	blt.w	802277e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8022676:	4580      	cmp	r8, r0
 8022678:	f340 8081 	ble.w	802277e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802267c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8022680:	f01e 0f01 	tst.w	lr, #1
 8022684:	5d16      	ldrb	r6, [r2, r4]
 8022686:	bf0c      	ite	eq
 8022688:	f006 060f 	andeq.w	r6, r6, #15
 802268c:	1136      	asrne	r6, r6, #4
 802268e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8022692:	b2f6      	uxtb	r6, r6
 8022694:	1c44      	adds	r4, r0, #1
 8022696:	d477      	bmi.n	8022788 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8022698:	45a0      	cmp	r8, r4
 802269a:	dd75      	ble.n	8022788 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802269c:	2f00      	cmp	r7, #0
 802269e:	d075      	beq.n	802278c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80226a0:	f10e 0a01 	add.w	sl, lr, #1
 80226a4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80226a8:	f01a 0f01 	tst.w	sl, #1
 80226ac:	5d14      	ldrb	r4, [r2, r4]
 80226ae:	bf0c      	ite	eq
 80226b0:	f004 040f 	andeq.w	r4, r4, #15
 80226b4:	1124      	asrne	r4, r4, #4
 80226b6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80226ba:	b2e4      	uxtb	r4, r4
 80226bc:	3501      	adds	r5, #1
 80226be:	d469      	bmi.n	8022794 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80226c0:	45a9      	cmp	r9, r5
 80226c2:	dd67      	ble.n	8022794 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80226c4:	f1bc 0f00 	cmp.w	ip, #0
 80226c8:	d067      	beq.n	802279a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80226ca:	2800      	cmp	r0, #0
 80226cc:	db60      	blt.n	8022790 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80226ce:	4580      	cmp	r8, r0
 80226d0:	dd5e      	ble.n	8022790 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80226d2:	eb03 090e 	add.w	r9, r3, lr
 80226d6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80226da:	f019 0f01 	tst.w	r9, #1
 80226de:	5d55      	ldrb	r5, [r2, r5]
 80226e0:	bf0c      	ite	eq
 80226e2:	f005 050f 	andeq.w	r5, r5, #15
 80226e6:	112d      	asrne	r5, r5, #4
 80226e8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80226ec:	b2ed      	uxtb	r5, r5
 80226ee:	3001      	adds	r0, #1
 80226f0:	d456      	bmi.n	80227a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80226f2:	4580      	cmp	r8, r0
 80226f4:	dd54      	ble.n	80227a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80226f6:	2f00      	cmp	r7, #0
 80226f8:	d054      	beq.n	80227a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80226fa:	3301      	adds	r3, #1
 80226fc:	449e      	add	lr, r3
 80226fe:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8022702:	f01e 0f01 	tst.w	lr, #1
 8022706:	5cd0      	ldrb	r0, [r2, r3]
 8022708:	bf0c      	ite	eq
 802270a:	f000 000f 	andeq.w	r0, r0, #15
 802270e:	1100      	asrne	r0, r0, #4
 8022710:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022714:	b2c3      	uxtb	r3, r0
 8022716:	b2ba      	uxth	r2, r7
 8022718:	fa1f fc8c 	uxth.w	ip, ip
 802271c:	fb02 f00c 	mul.w	r0, r2, ip
 8022720:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8022724:	0112      	lsls	r2, r2, #4
 8022726:	fa1f fc8c 	uxth.w	ip, ip
 802272a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802272e:	1a12      	subs	r2, r2, r0
 8022730:	eba7 070c 	sub.w	r7, r7, ip
 8022734:	b292      	uxth	r2, r2
 8022736:	b2bf      	uxth	r7, r7
 8022738:	4362      	muls	r2, r4
 802273a:	fb06 2207 	mla	r2, r6, r7, r2
 802273e:	fb0c 2505 	mla	r5, ip, r5, r2
 8022742:	fb00 5303 	mla	r3, r0, r3, r5
 8022746:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802274a:	b1b3      	cbz	r3, 802277a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802274c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8022750:	435a      	muls	r2, r3
 8022752:	1c53      	adds	r3, r2, #1
 8022754:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022758:	4a2d      	ldr	r2, [pc, #180]	@ (8022810 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802275a:	121b      	asrs	r3, r3, #8
 802275c:	6812      	ldr	r2, [r2, #0]
 802275e:	2bff      	cmp	r3, #255	@ 0xff
 8022760:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8022764:	d120      	bne.n	80227a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8022766:	4b2b      	ldr	r3, [pc, #172]	@ (8022814 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8022768:	0950      	lsrs	r0, r2, #5
 802276a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802276e:	4033      	ands	r3, r6
 8022770:	4318      	orrs	r0, r3
 8022772:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022776:	4302      	orrs	r2, r0
 8022778:	800a      	strh	r2, [r1, #0]
 802277a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802277e:	2600      	movs	r6, #0
 8022780:	e788      	b.n	8022694 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8022782:	2400      	movs	r4, #0
 8022784:	4626      	mov	r6, r4
 8022786:	e799      	b.n	80226bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8022788:	2400      	movs	r4, #0
 802278a:	e797      	b.n	80226bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802278c:	463c      	mov	r4, r7
 802278e:	e795      	b.n	80226bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8022790:	2500      	movs	r5, #0
 8022792:	e7ac      	b.n	80226ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8022794:	2300      	movs	r3, #0
 8022796:	461d      	mov	r5, r3
 8022798:	e7bd      	b.n	8022716 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802279a:	4663      	mov	r3, ip
 802279c:	4665      	mov	r5, ip
 802279e:	e7ba      	b.n	8022716 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80227a0:	2300      	movs	r3, #0
 80227a2:	e7b8      	b.n	8022716 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80227a4:	463b      	mov	r3, r7
 80227a6:	e7b6      	b.n	8022716 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80227a8:	880d      	ldrh	r5, [r1, #0]
 80227aa:	b29f      	uxth	r7, r3
 80227ac:	122c      	asrs	r4, r5, #8
 80227ae:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80227b2:	43db      	mvns	r3, r3
 80227b4:	b2db      	uxtb	r3, r3
 80227b6:	fb10 f007 	smulbb	r0, r0, r7
 80227ba:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80227be:	fb04 0403 	mla	r4, r4, r3, r0
 80227c2:	b2f6      	uxtb	r6, r6
 80227c4:	10e8      	asrs	r0, r5, #3
 80227c6:	b2d2      	uxtb	r2, r2
 80227c8:	00ed      	lsls	r5, r5, #3
 80227ca:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80227ce:	fb12 f207 	smulbb	r2, r2, r7
 80227d2:	fb16 f607 	smulbb	r6, r6, r7
 80227d6:	b2ed      	uxtb	r5, r5
 80227d8:	b2a4      	uxth	r4, r4
 80227da:	fb00 6603 	mla	r6, r0, r3, r6
 80227de:	fb05 2303 	mla	r3, r5, r3, r2
 80227e2:	b29a      	uxth	r2, r3
 80227e4:	1c63      	adds	r3, r4, #1
 80227e6:	b2b0      	uxth	r0, r6
 80227e8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80227ec:	1c53      	adds	r3, r2, #1
 80227ee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80227f2:	1c42      	adds	r2, r0, #1
 80227f4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80227f8:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80227fc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022800:	0940      	lsrs	r0, r0, #5
 8022802:	4323      	orrs	r3, r4
 8022804:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022808:	4303      	orrs	r3, r0
 802280a:	800b      	strh	r3, [r1, #0]
 802280c:	e7b5      	b.n	802277a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802280e:	bf00      	nop
 8022810:	200023b0 	.word	0x200023b0
 8022814:	00fff800 	.word	0x00fff800

08022818 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802281c:	b097      	sub	sp, #92	@ 0x5c
 802281e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 8022822:	9214      	str	r2, [sp, #80]	@ 0x50
 8022824:	9309      	str	r3, [sp, #36]	@ 0x24
 8022826:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8022828:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 802282c:	910d      	str	r1, [sp, #52]	@ 0x34
 802282e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022830:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8022834:	9015      	str	r0, [sp, #84]	@ 0x54
 8022836:	6850      	ldr	r0, [r2, #4]
 8022838:	6812      	ldr	r2, [r2, #0]
 802283a:	fb00 1303 	mla	r3, r0, r3, r1
 802283e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022842:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022844:	689b      	ldr	r3, [r3, #8]
 8022846:	3301      	adds	r3, #1
 8022848:	f023 0301 	bic.w	r3, r3, #1
 802284c:	930a      	str	r3, [sp, #40]	@ 0x28
 802284e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022850:	681f      	ldr	r7, [r3, #0]
 8022852:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022854:	2b00      	cmp	r3, #0
 8022856:	dc03      	bgt.n	8022860 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022858:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802285a:	2b00      	cmp	r3, #0
 802285c:	f340 8287 	ble.w	8022d6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8022860:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022862:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022866:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802286a:	1e48      	subs	r0, r1, #1
 802286c:	f102 3cff 	add.w	ip, r2, #4294967295
 8022870:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022872:	2b00      	cmp	r3, #0
 8022874:	f340 80c4 	ble.w	8022a00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8022878:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802287c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022880:	d406      	bmi.n	8022890 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022882:	4586      	cmp	lr, r0
 8022884:	da04      	bge.n	8022890 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022886:	2b00      	cmp	r3, #0
 8022888:	db02      	blt.n	8022890 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802288a:	4563      	cmp	r3, ip
 802288c:	f2c0 80b9 	blt.w	8022a02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8022890:	f11e 0e01 	adds.w	lr, lr, #1
 8022894:	f100 80aa 	bmi.w	80229ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8022898:	4571      	cmp	r1, lr
 802289a:	f2c0 80a7 	blt.w	80229ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802289e:	3301      	adds	r3, #1
 80228a0:	f100 80a4 	bmi.w	80229ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80228a4:	429a      	cmp	r2, r3
 80228a6:	f2c0 80a1 	blt.w	80229ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80228aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80228ac:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 80228b0:	930e      	str	r3, [sp, #56]	@ 0x38
 80228b2:	46c8      	mov	r8, r9
 80228b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80228b6:	2b00      	cmp	r3, #0
 80228b8:	f340 80c3 	ble.w	8022a42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80228bc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80228be:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80228c2:	1423      	asrs	r3, r4, #16
 80228c4:	ea4f 4026 	mov.w	r0, r6, asr #16
 80228c8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80228cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80228d0:	f100 814d 	bmi.w	8022b6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80228d4:	f10c 3bff 	add.w	fp, ip, #4294967295
 80228d8:	455b      	cmp	r3, fp
 80228da:	f280 8148 	bge.w	8022b6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80228de:	2800      	cmp	r0, #0
 80228e0:	f2c0 8145 	blt.w	8022b6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80228e4:	f10e 3bff 	add.w	fp, lr, #4294967295
 80228e8:	4558      	cmp	r0, fp
 80228ea:	f280 8140 	bge.w	8022b6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80228ee:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80228f0:	fb00 3305 	mla	r3, r0, r5, r3
 80228f4:	0858      	lsrs	r0, r3, #1
 80228f6:	07dd      	lsls	r5, r3, #31
 80228f8:	f817 c000 	ldrb.w	ip, [r7, r0]
 80228fc:	bf54      	ite	pl
 80228fe:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022902:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022906:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802290a:	fa5f fc8c 	uxtb.w	ip, ip
 802290e:	2a00      	cmp	r2, #0
 8022910:	f000 80db 	beq.w	8022aca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8022914:	1c58      	adds	r0, r3, #1
 8022916:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802291a:	07c0      	lsls	r0, r0, #31
 802291c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8022920:	bf54      	ite	pl
 8022922:	f00e 0e0f 	andpl.w	lr, lr, #15
 8022926:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802292a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802292e:	fa5f f08e 	uxtb.w	r0, lr
 8022932:	9010      	str	r0, [sp, #64]	@ 0x40
 8022934:	b1c9      	cbz	r1, 802296a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8022936:	4453      	add	r3, sl
 8022938:	0858      	lsrs	r0, r3, #1
 802293a:	07dd      	lsls	r5, r3, #31
 802293c:	5c38      	ldrb	r0, [r7, r0]
 802293e:	bf54      	ite	pl
 8022940:	f000 000f 	andpl.w	r0, r0, #15
 8022944:	1100      	asrmi	r0, r0, #4
 8022946:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802294a:	3301      	adds	r3, #1
 802294c:	b2c0      	uxtb	r0, r0
 802294e:	900b      	str	r0, [sp, #44]	@ 0x2c
 8022950:	0858      	lsrs	r0, r3, #1
 8022952:	07dd      	lsls	r5, r3, #31
 8022954:	f817 e000 	ldrb.w	lr, [r7, r0]
 8022958:	bf54      	ite	pl
 802295a:	f00e 030f 	andpl.w	r3, lr, #15
 802295e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8022962:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022966:	b2db      	uxtb	r3, r3
 8022968:	9311      	str	r3, [sp, #68]	@ 0x44
 802296a:	b292      	uxth	r2, r2
 802296c:	b289      	uxth	r1, r1
 802296e:	fb02 f301 	mul.w	r3, r2, r1
 8022972:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8022976:	0112      	lsls	r2, r2, #4
 8022978:	b289      	uxth	r1, r1
 802297a:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802297e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8022980:	1ad2      	subs	r2, r2, r3
 8022982:	1a40      	subs	r0, r0, r1
 8022984:	b292      	uxth	r2, r2
 8022986:	436a      	muls	r2, r5
 8022988:	b280      	uxth	r0, r0
 802298a:	fb0c 2c00 	mla	ip, ip, r0, r2
 802298e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8022990:	fb01 c102 	mla	r1, r1, r2, ip
 8022994:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8022996:	fb03 1302 	mla	r3, r3, r2, r1
 802299a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802299e:	b1db      	cbz	r3, 80229d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80229a0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80229a2:	4353      	muls	r3, r2
 80229a4:	1c5a      	adds	r2, r3, #1
 80229a6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80229aa:	4ac6      	ldr	r2, [pc, #792]	@ (8022cc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80229ac:	121b      	asrs	r3, r3, #8
 80229ae:	6812      	ldr	r2, [r2, #0]
 80229b0:	2bff      	cmp	r3, #255	@ 0xff
 80229b2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80229b6:	f040 8099 	bne.w	8022aec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80229ba:	0953      	lsrs	r3, r2, #5
 80229bc:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80229c0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80229c4:	f02c 0c07 	bic.w	ip, ip, #7
 80229c8:	ea43 0c0c 	orr.w	ip, r3, ip
 80229cc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80229d0:	ea4c 0202 	orr.w	r2, ip, r2
 80229d4:	f8a8 2000 	strh.w	r2, [r8]
 80229d8:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80229da:	441c      	add	r4, r3
 80229dc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80229de:	441e      	add	r6, r3
 80229e0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80229e2:	3b01      	subs	r3, #1
 80229e4:	f108 0802 	add.w	r8, r8, #2
 80229e8:	930e      	str	r3, [sp, #56]	@ 0x38
 80229ea:	e763      	b.n	80228b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80229ec:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80229ee:	441c      	add	r4, r3
 80229f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80229f2:	441e      	add	r6, r3
 80229f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80229f6:	3b01      	subs	r3, #1
 80229f8:	9309      	str	r3, [sp, #36]	@ 0x24
 80229fa:	f109 0902 	add.w	r9, r9, #2
 80229fe:	e737      	b.n	8022870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022a00:	d024      	beq.n	8022a4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8022a02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022a04:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8022a06:	3b01      	subs	r3, #1
 8022a08:	fb00 4003 	mla	r0, r0, r3, r4
 8022a0c:	1400      	asrs	r0, r0, #16
 8022a0e:	f53f af4c 	bmi.w	80228aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022a12:	3901      	subs	r1, #1
 8022a14:	4288      	cmp	r0, r1
 8022a16:	f6bf af48 	bge.w	80228aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022a1a:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8022a1c:	fb01 6303 	mla	r3, r1, r3, r6
 8022a20:	141b      	asrs	r3, r3, #16
 8022a22:	f53f af42 	bmi.w	80228aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022a26:	3a01      	subs	r2, #1
 8022a28:	4293      	cmp	r3, r2
 8022a2a:	f6bf af3e 	bge.w	80228aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022a2e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8022a32:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8022a36:	930e      	str	r3, [sp, #56]	@ 0x38
 8022a38:	46c8      	mov	r8, r9
 8022a3a:	f1bb 0f00 	cmp.w	fp, #0
 8022a3e:	f300 80b7 	bgt.w	8022bb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8022a42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022a44:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022a48:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022a4c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022a4e:	2b00      	cmp	r3, #0
 8022a50:	f340 818d 	ble.w	8022d6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8022a54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022a58:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022a5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022a60:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022a62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022a66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022a6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022a6e:	eef0 6a62 	vmov.f32	s13, s5
 8022a72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022a76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022a7e:	ee16 4a90 	vmov	r4, s13
 8022a82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022a86:	eef0 6a43 	vmov.f32	s13, s6
 8022a8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022a8e:	ee12 2a90 	vmov	r2, s5
 8022a92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022a96:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a9a:	ee13 2a10 	vmov	r2, s6
 8022a9e:	9323      	str	r3, [sp, #140]	@ 0x8c
 8022aa0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022aa2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022aa6:	9324      	str	r3, [sp, #144]	@ 0x90
 8022aa8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022aaa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8022aac:	3b01      	subs	r3, #1
 8022aae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ab2:	930d      	str	r3, [sp, #52]	@ 0x34
 8022ab4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022ab6:	bf08      	it	eq
 8022ab8:	4613      	moveq	r3, r2
 8022aba:	ee16 6a90 	vmov	r6, s13
 8022abe:	9309      	str	r3, [sp, #36]	@ 0x24
 8022ac0:	eeb0 3a67 	vmov.f32	s6, s15
 8022ac4:	eef0 2a47 	vmov.f32	s5, s14
 8022ac8:	e6c3      	b.n	8022852 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022aca:	2900      	cmp	r1, #0
 8022acc:	f43f af4d 	beq.w	802296a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8022ad0:	eb0a 0003 	add.w	r0, sl, r3
 8022ad4:	0843      	lsrs	r3, r0, #1
 8022ad6:	07c0      	lsls	r0, r0, #31
 8022ad8:	5cfb      	ldrb	r3, [r7, r3]
 8022ada:	bf54      	ite	pl
 8022adc:	f003 030f 	andpl.w	r3, r3, #15
 8022ae0:	111b      	asrmi	r3, r3, #4
 8022ae2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022ae6:	b2db      	uxtb	r3, r3
 8022ae8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022aea:	e73e      	b.n	802296a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8022aec:	f8b8 e000 	ldrh.w	lr, [r8]
 8022af0:	fa1f fb83 	uxth.w	fp, r3
 8022af4:	ea4f 202e 	mov.w	r0, lr, asr #8
 8022af8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8022afc:	43db      	mvns	r3, r3
 8022afe:	b2db      	uxtb	r3, r3
 8022b00:	fb11 f10b 	smulbb	r1, r1, fp
 8022b04:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022b08:	fb00 1003 	mla	r0, r0, r3, r1
 8022b0c:	fa5f fc8c 	uxtb.w	ip, ip
 8022b10:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8022b14:	b2d2      	uxtb	r2, r2
 8022b16:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022b1a:	b280      	uxth	r0, r0
 8022b1c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022b20:	fb1c fc0b 	smulbb	ip, ip, fp
 8022b24:	fa5f fe8e 	uxtb.w	lr, lr
 8022b28:	fb12 fb0b 	smulbb	fp, r2, fp
 8022b2c:	fb01 cc03 	mla	ip, r1, r3, ip
 8022b30:	fb0e bb03 	mla	fp, lr, r3, fp
 8022b34:	1c43      	adds	r3, r0, #1
 8022b36:	fa1f fc8c 	uxth.w	ip, ip
 8022b3a:	fa1f fb8b 	uxth.w	fp, fp
 8022b3e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022b42:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8022b46:	f10c 0101 	add.w	r1, ip, #1
 8022b4a:	f10b 0001 	add.w	r0, fp, #1
 8022b4e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8022b52:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022b56:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022b5a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022b5e:	4318      	orrs	r0, r3
 8022b60:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022b64:	ea40 000c 	orr.w	r0, r0, ip
 8022b68:	f8a8 0000 	strh.w	r0, [r8]
 8022b6c:	e734      	b.n	80229d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022b6e:	f113 0b01 	adds.w	fp, r3, #1
 8022b72:	f53f af31 	bmi.w	80229d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022b76:	45dc      	cmp	ip, fp
 8022b78:	f6ff af2e 	blt.w	80229d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022b7c:	f110 0b01 	adds.w	fp, r0, #1
 8022b80:	f53f af2a 	bmi.w	80229d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022b84:	45de      	cmp	lr, fp
 8022b86:	f6ff af27 	blt.w	80229d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022b8a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8022b8c:	9302      	str	r3, [sp, #8]
 8022b8e:	fa0f f38e 	sxth.w	r3, lr
 8022b92:	9301      	str	r3, [sp, #4]
 8022b94:	fa0f f38c 	sxth.w	r3, ip
 8022b98:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8022b9c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8022ba0:	9300      	str	r3, [sp, #0]
 8022ba2:	463a      	mov	r2, r7
 8022ba4:	4653      	mov	r3, sl
 8022ba6:	4641      	mov	r1, r8
 8022ba8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8022baa:	f7ff fd4d 	bl	8022648 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8022bae:	e713      	b.n	80229d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022bb0:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8022bb2:	1422      	asrs	r2, r4, #16
 8022bb4:	1433      	asrs	r3, r6, #16
 8022bb6:	fb05 2303 	mla	r3, r5, r3, r2
 8022bba:	085a      	lsrs	r2, r3, #1
 8022bbc:	07dd      	lsls	r5, r3, #31
 8022bbe:	5cba      	ldrb	r2, [r7, r2]
 8022bc0:	bf54      	ite	pl
 8022bc2:	f002 020f 	andpl.w	r2, r2, #15
 8022bc6:	1112      	asrmi	r2, r2, #4
 8022bc8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8022bcc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8022bd0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022bd4:	b2d2      	uxtb	r2, r2
 8022bd6:	2900      	cmp	r1, #0
 8022bd8:	d076      	beq.n	8022cc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022bda:	f103 0e01 	add.w	lr, r3, #1
 8022bde:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8022be2:	f01e 0f01 	tst.w	lr, #1
 8022be6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022bea:	bf0c      	ite	eq
 8022bec:	f00c 0c0f 	andeq.w	ip, ip, #15
 8022bf0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8022bf4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022bf8:	fa5f f58c 	uxtb.w	r5, ip
 8022bfc:	9512      	str	r5, [sp, #72]	@ 0x48
 8022bfe:	b300      	cbz	r0, 8022c42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8022c00:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8022c02:	442b      	add	r3, r5
 8022c04:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022c08:	07dd      	lsls	r5, r3, #31
 8022c0a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022c0e:	bf54      	ite	pl
 8022c10:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022c14:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022c18:	3301      	adds	r3, #1
 8022c1a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022c1e:	fa5f f58c 	uxtb.w	r5, ip
 8022c22:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022c26:	950c      	str	r5, [sp, #48]	@ 0x30
 8022c28:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022c2c:	07dd      	lsls	r5, r3, #31
 8022c2e:	bf54      	ite	pl
 8022c30:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022c34:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022c38:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022c3c:	fa5f f38c 	uxtb.w	r3, ip
 8022c40:	9313      	str	r3, [sp, #76]	@ 0x4c
 8022c42:	b289      	uxth	r1, r1
 8022c44:	b280      	uxth	r0, r0
 8022c46:	fb01 f300 	mul.w	r3, r1, r0
 8022c4a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8022c4e:	0109      	lsls	r1, r1, #4
 8022c50:	b280      	uxth	r0, r0
 8022c52:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8022c56:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8022c58:	1ac9      	subs	r1, r1, r3
 8022c5a:	ebac 0c00 	sub.w	ip, ip, r0
 8022c5e:	b289      	uxth	r1, r1
 8022c60:	4369      	muls	r1, r5
 8022c62:	fa1f fc8c 	uxth.w	ip, ip
 8022c66:	fb02 120c 	mla	r2, r2, ip, r1
 8022c6a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8022c6c:	fb00 2001 	mla	r0, r0, r1, r2
 8022c70:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8022c72:	fb03 0302 	mla	r3, r3, r2, r0
 8022c76:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022c7a:	b1d3      	cbz	r3, 8022cb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8022c7c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8022c7e:	4353      	muls	r3, r2
 8022c80:	1c5a      	adds	r2, r3, #1
 8022c82:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022c86:	4a0f      	ldr	r2, [pc, #60]	@ (8022cc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8022c88:	121b      	asrs	r3, r3, #8
 8022c8a:	6812      	ldr	r2, [r2, #0]
 8022c8c:	2bff      	cmp	r3, #255	@ 0xff
 8022c8e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8022c92:	d12d      	bne.n	8022cf0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8022c94:	0953      	lsrs	r3, r2, #5
 8022c96:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8022c9a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022c9e:	f02c 0c07 	bic.w	ip, ip, #7
 8022ca2:	ea43 0c0c 	orr.w	ip, r3, ip
 8022ca6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022caa:	ea4c 0202 	orr.w	r2, ip, r2
 8022cae:	f8a8 2000 	strh.w	r2, [r8]
 8022cb2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8022cb4:	441c      	add	r4, r3
 8022cb6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022cb8:	f108 0802 	add.w	r8, r8, #2
 8022cbc:	441e      	add	r6, r3
 8022cbe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022cc2:	e6ba      	b.n	8022a3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8022cc4:	200023b0 	.word	0x200023b0
 8022cc8:	2800      	cmp	r0, #0
 8022cca:	d0ba      	beq.n	8022c42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8022ccc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8022cce:	442b      	add	r3, r5
 8022cd0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022cd4:	07db      	lsls	r3, r3, #31
 8022cd6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022cda:	bf54      	ite	pl
 8022cdc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022ce0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022ce4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022ce8:	fa5f f38c 	uxtb.w	r3, ip
 8022cec:	930c      	str	r3, [sp, #48]	@ 0x30
 8022cee:	e7a8      	b.n	8022c42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8022cf0:	f8b8 e000 	ldrh.w	lr, [r8]
 8022cf4:	fa1f fa83 	uxth.w	sl, r3
 8022cf8:	ea4f 202e 	mov.w	r0, lr, asr #8
 8022cfc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8022d00:	43db      	mvns	r3, r3
 8022d02:	b2db      	uxtb	r3, r3
 8022d04:	fb11 f10a 	smulbb	r1, r1, sl
 8022d08:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022d0c:	fb00 1003 	mla	r0, r0, r3, r1
 8022d10:	b2d2      	uxtb	r2, r2
 8022d12:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8022d16:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022d1a:	fa5f fe8e 	uxtb.w	lr, lr
 8022d1e:	fb12 f20a 	smulbb	r2, r2, sl
 8022d22:	fb0e 2203 	mla	r2, lr, r3, r2
 8022d26:	fa5f fc8c 	uxtb.w	ip, ip
 8022d2a:	b280      	uxth	r0, r0
 8022d2c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022d30:	b292      	uxth	r2, r2
 8022d32:	fb1c fc0a 	smulbb	ip, ip, sl
 8022d36:	fb01 cc03 	mla	ip, r1, r3, ip
 8022d3a:	1c43      	adds	r3, r0, #1
 8022d3c:	1c51      	adds	r1, r2, #1
 8022d3e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022d42:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8022d46:	fa1f fc8c 	uxth.w	ip, ip
 8022d4a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8022d4e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8022d52:	4308      	orrs	r0, r1
 8022d54:	f10c 0101 	add.w	r1, ip, #1
 8022d58:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022d5c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022d60:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022d64:	ea40 000c 	orr.w	r0, r0, ip
 8022d68:	f8a8 0000 	strh.w	r0, [r8]
 8022d6c:	e7a1      	b.n	8022cb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8022d6e:	b017      	add	sp, #92	@ 0x5c
 8022d70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022d74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8022d74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022d78:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8022d7c:	2d00      	cmp	r5, #0
 8022d7e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8022d82:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8022d86:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8022d8a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8022d8e:	fb05 0e03 	mla	lr, r5, r3, r0
 8022d92:	f2c0 80b0 	blt.w	8022ef6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8022d96:	45a9      	cmp	r9, r5
 8022d98:	f340 80ad 	ble.w	8022ef6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8022d9c:	2800      	cmp	r0, #0
 8022d9e:	f2c0 80a8 	blt.w	8022ef2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8022da2:	4580      	cmp	r8, r0
 8022da4:	f340 80a5 	ble.w	8022ef2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8022da8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8022dac:	f01e 0f01 	tst.w	lr, #1
 8022db0:	5d16      	ldrb	r6, [r2, r4]
 8022db2:	bf0c      	ite	eq
 8022db4:	f006 060f 	andeq.w	r6, r6, #15
 8022db8:	1136      	asrne	r6, r6, #4
 8022dba:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8022dbe:	b2f6      	uxtb	r6, r6
 8022dc0:	1c44      	adds	r4, r0, #1
 8022dc2:	f100 809b 	bmi.w	8022efc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8022dc6:	45a0      	cmp	r8, r4
 8022dc8:	f340 8098 	ble.w	8022efc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8022dcc:	2f00      	cmp	r7, #0
 8022dce:	f000 8097 	beq.w	8022f00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8022dd2:	f10e 0a01 	add.w	sl, lr, #1
 8022dd6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8022dda:	f01a 0f01 	tst.w	sl, #1
 8022dde:	5d14      	ldrb	r4, [r2, r4]
 8022de0:	bf0c      	ite	eq
 8022de2:	f004 040f 	andeq.w	r4, r4, #15
 8022de6:	1124      	asrne	r4, r4, #4
 8022de8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8022dec:	b2e4      	uxtb	r4, r4
 8022dee:	3501      	adds	r5, #1
 8022df0:	f100 808a 	bmi.w	8022f08 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8022df4:	45a9      	cmp	r9, r5
 8022df6:	f340 8087 	ble.w	8022f08 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8022dfa:	f1bc 0f00 	cmp.w	ip, #0
 8022dfe:	f000 8086 	beq.w	8022f0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8022e02:	2800      	cmp	r0, #0
 8022e04:	db7e      	blt.n	8022f04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8022e06:	4580      	cmp	r8, r0
 8022e08:	dd7c      	ble.n	8022f04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8022e0a:	eb03 090e 	add.w	r9, r3, lr
 8022e0e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8022e12:	f019 0f01 	tst.w	r9, #1
 8022e16:	5d55      	ldrb	r5, [r2, r5]
 8022e18:	bf0c      	ite	eq
 8022e1a:	f005 050f 	andeq.w	r5, r5, #15
 8022e1e:	112d      	asrne	r5, r5, #4
 8022e20:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8022e24:	b2ed      	uxtb	r5, r5
 8022e26:	3001      	adds	r0, #1
 8022e28:	d474      	bmi.n	8022f14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8022e2a:	4580      	cmp	r8, r0
 8022e2c:	dd72      	ble.n	8022f14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8022e2e:	2f00      	cmp	r7, #0
 8022e30:	d072      	beq.n	8022f18 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8022e32:	3301      	adds	r3, #1
 8022e34:	449e      	add	lr, r3
 8022e36:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8022e3a:	f01e 0f01 	tst.w	lr, #1
 8022e3e:	5cd0      	ldrb	r0, [r2, r3]
 8022e40:	bf0c      	ite	eq
 8022e42:	f000 000f 	andeq.w	r0, r0, #15
 8022e46:	1100      	asrne	r0, r0, #4
 8022e48:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022e4c:	b2c3      	uxtb	r3, r0
 8022e4e:	b2ba      	uxth	r2, r7
 8022e50:	fa1f fc8c 	uxth.w	ip, ip
 8022e54:	fb02 f00c 	mul.w	r0, r2, ip
 8022e58:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8022e5c:	0112      	lsls	r2, r2, #4
 8022e5e:	fa1f fc8c 	uxth.w	ip, ip
 8022e62:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8022e66:	1a12      	subs	r2, r2, r0
 8022e68:	eba7 070c 	sub.w	r7, r7, ip
 8022e6c:	b292      	uxth	r2, r2
 8022e6e:	b2bf      	uxth	r7, r7
 8022e70:	4362      	muls	r2, r4
 8022e72:	fb06 2207 	mla	r2, r6, r7, r2
 8022e76:	fb0c 2505 	mla	r5, ip, r5, r2
 8022e7a:	fb00 5303 	mla	r3, r0, r3, r5
 8022e7e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022e82:	b3a3      	cbz	r3, 8022eee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8022e84:	4a25      	ldr	r2, [pc, #148]	@ (8022f1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8022e86:	880e      	ldrh	r6, [r1, #0]
 8022e88:	6815      	ldr	r5, [r2, #0]
 8022e8a:	1234      	asrs	r4, r6, #8
 8022e8c:	b29a      	uxth	r2, r3
 8022e8e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8022e92:	43db      	mvns	r3, r3
 8022e94:	b2db      	uxtb	r3, r3
 8022e96:	fb10 f002 	smulbb	r0, r0, r2
 8022e9a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8022e9e:	fb04 0403 	mla	r4, r4, r3, r0
 8022ea2:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8022ea6:	10f0      	asrs	r0, r6, #3
 8022ea8:	b2ed      	uxtb	r5, r5
 8022eaa:	00f6      	lsls	r6, r6, #3
 8022eac:	fb17 f702 	smulbb	r7, r7, r2
 8022eb0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8022eb4:	fb15 f202 	smulbb	r2, r5, r2
 8022eb8:	b2f6      	uxtb	r6, r6
 8022eba:	b2a4      	uxth	r4, r4
 8022ebc:	fb00 7003 	mla	r0, r0, r3, r7
 8022ec0:	fb06 2303 	mla	r3, r6, r3, r2
 8022ec4:	b29a      	uxth	r2, r3
 8022ec6:	1c63      	adds	r3, r4, #1
 8022ec8:	b280      	uxth	r0, r0
 8022eca:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8022ece:	1c53      	adds	r3, r2, #1
 8022ed0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022ed4:	1c42      	adds	r2, r0, #1
 8022ed6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022eda:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8022ede:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022ee2:	0940      	lsrs	r0, r0, #5
 8022ee4:	4323      	orrs	r3, r4
 8022ee6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022eea:	4303      	orrs	r3, r0
 8022eec:	800b      	strh	r3, [r1, #0]
 8022eee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022ef2:	2600      	movs	r6, #0
 8022ef4:	e764      	b.n	8022dc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8022ef6:	2400      	movs	r4, #0
 8022ef8:	4626      	mov	r6, r4
 8022efa:	e778      	b.n	8022dee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022efc:	2400      	movs	r4, #0
 8022efe:	e776      	b.n	8022dee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022f00:	463c      	mov	r4, r7
 8022f02:	e774      	b.n	8022dee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022f04:	2500      	movs	r5, #0
 8022f06:	e78e      	b.n	8022e26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8022f08:	2300      	movs	r3, #0
 8022f0a:	461d      	mov	r5, r3
 8022f0c:	e79f      	b.n	8022e4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022f0e:	4663      	mov	r3, ip
 8022f10:	4665      	mov	r5, ip
 8022f12:	e79c      	b.n	8022e4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022f14:	2300      	movs	r3, #0
 8022f16:	e79a      	b.n	8022e4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022f18:	463b      	mov	r3, r7
 8022f1a:	e798      	b.n	8022e4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022f1c:	200023b0 	.word	0x200023b0

08022f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f24:	b093      	sub	sp, #76	@ 0x4c
 8022f26:	461d      	mov	r5, r3
 8022f28:	920c      	str	r2, [sp, #48]	@ 0x30
 8022f2a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8022f2c:	9107      	str	r1, [sp, #28]
 8022f2e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8022f32:	9011      	str	r0, [sp, #68]	@ 0x44
 8022f34:	6850      	ldr	r0, [r2, #4]
 8022f36:	6812      	ldr	r2, [r2, #0]
 8022f38:	fb00 1303 	mla	r3, r0, r3, r1
 8022f3c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022f40:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022f42:	689b      	ldr	r3, [r3, #8]
 8022f44:	3301      	adds	r3, #1
 8022f46:	f023 0301 	bic.w	r3, r3, #1
 8022f4a:	9306      	str	r3, [sp, #24]
 8022f4c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022f4e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8022f52:	681f      	ldr	r7, [r3, #0]
 8022f54:	9b07      	ldr	r3, [sp, #28]
 8022f56:	2b00      	cmp	r3, #0
 8022f58:	dc03      	bgt.n	8022f62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022f5a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022f5c:	2b00      	cmp	r3, #0
 8022f5e:	f340 8267 	ble.w	8023430 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8022f62:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022f64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022f68:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022f6c:	1e48      	subs	r0, r1, #1
 8022f6e:	f102 3cff 	add.w	ip, r2, #4294967295
 8022f72:	2d00      	cmp	r5, #0
 8022f74:	f340 80b8 	ble.w	80230e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022f78:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022f7c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022f80:	d406      	bmi.n	8022f90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022f82:	4586      	cmp	lr, r0
 8022f84:	da04      	bge.n	8022f90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022f86:	2b00      	cmp	r3, #0
 8022f88:	db02      	blt.n	8022f90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022f8a:	4563      	cmp	r3, ip
 8022f8c:	f2c0 80ad 	blt.w	80230ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8022f90:	f11e 0e01 	adds.w	lr, lr, #1
 8022f94:	f100 80a0 	bmi.w	80230d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022f98:	4571      	cmp	r1, lr
 8022f9a:	f2c0 809d 	blt.w	80230d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022f9e:	3301      	adds	r3, #1
 8022fa0:	f100 809a 	bmi.w	80230d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022fa4:	429a      	cmp	r2, r3
 8022fa6:	f2c0 8097 	blt.w	80230d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022faa:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8022fae:	9509      	str	r5, [sp, #36]	@ 0x24
 8022fb0:	46c8      	mov	r8, r9
 8022fb2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022fb4:	2b00      	cmp	r3, #0
 8022fb6:	f340 80b6 	ble.w	8023126 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8022fba:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8022fbe:	9308      	str	r3, [sp, #32]
 8022fc0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022fc2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8022fc6:	1423      	asrs	r3, r4, #16
 8022fc8:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022fcc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022fd0:	f100 813e 	bmi.w	8023250 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022fd4:	f10c 3bff 	add.w	fp, ip, #4294967295
 8022fd8:	455b      	cmp	r3, fp
 8022fda:	f280 8139 	bge.w	8023250 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022fde:	2800      	cmp	r0, #0
 8022fe0:	f2c0 8136 	blt.w	8023250 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022fe4:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022fe8:	4558      	cmp	r0, fp
 8022fea:	f280 8131 	bge.w	8023250 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022fee:	9a06      	ldr	r2, [sp, #24]
 8022ff0:	fb00 3302 	mla	r3, r0, r2, r3
 8022ff4:	0858      	lsrs	r0, r3, #1
 8022ff6:	07da      	lsls	r2, r3, #31
 8022ff8:	f817 c000 	ldrb.w	ip, [r7, r0]
 8022ffc:	9a08      	ldr	r2, [sp, #32]
 8022ffe:	bf54      	ite	pl
 8023000:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023004:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023008:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802300c:	fa5f fc8c 	uxtb.w	ip, ip
 8023010:	2a00      	cmp	r2, #0
 8023012:	f000 80cb 	beq.w	80231ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8023016:	1c58      	adds	r0, r3, #1
 8023018:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802301c:	07c0      	lsls	r0, r0, #31
 802301e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8023022:	bf54      	ite	pl
 8023024:	f00e 0e0f 	andpl.w	lr, lr, #15
 8023028:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802302c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8023030:	fa5f fe8e 	uxtb.w	lr, lr
 8023034:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8023038:	b1b9      	cbz	r1, 802306a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802303a:	4453      	add	r3, sl
 802303c:	0858      	lsrs	r0, r3, #1
 802303e:	07da      	lsls	r2, r3, #31
 8023040:	5c38      	ldrb	r0, [r7, r0]
 8023042:	bf54      	ite	pl
 8023044:	f000 000f 	andpl.w	r0, r0, #15
 8023048:	1100      	asrmi	r0, r0, #4
 802304a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802304e:	b2c0      	uxtb	r0, r0
 8023050:	900a      	str	r0, [sp, #40]	@ 0x28
 8023052:	1c58      	adds	r0, r3, #1
 8023054:	0843      	lsrs	r3, r0, #1
 8023056:	07c2      	lsls	r2, r0, #31
 8023058:	5cfb      	ldrb	r3, [r7, r3]
 802305a:	bf54      	ite	pl
 802305c:	f003 030f 	andpl.w	r3, r3, #15
 8023060:	111b      	asrmi	r3, r3, #4
 8023062:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023066:	b2db      	uxtb	r3, r3
 8023068:	930e      	str	r3, [sp, #56]	@ 0x38
 802306a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802306e:	b289      	uxth	r1, r1
 8023070:	fb02 f301 	mul.w	r3, r2, r1
 8023074:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8023078:	0112      	lsls	r2, r2, #4
 802307a:	b289      	uxth	r1, r1
 802307c:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8023080:	1a40      	subs	r0, r0, r1
 8023082:	fa1f fe80 	uxth.w	lr, r0
 8023086:	1ad2      	subs	r2, r2, r3
 8023088:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802308a:	b292      	uxth	r2, r2
 802308c:	4342      	muls	r2, r0
 802308e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8023092:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8023094:	fb01 c102 	mla	r1, r1, r2, ip
 8023098:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802309a:	fb03 1302 	mla	r3, r3, r2, r1
 802309e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80230a2:	2bff      	cmp	r3, #255	@ 0xff
 80230a4:	f040 8093 	bne.w	80231ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80230a8:	4bbe      	ldr	r3, [pc, #760]	@ (80233a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80230aa:	681a      	ldr	r2, [r3, #0]
 80230ac:	4bbe      	ldr	r3, [pc, #760]	@ (80233a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80230ae:	0951      	lsrs	r1, r2, #5
 80230b0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80230b4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80230b8:	430b      	orrs	r3, r1
 80230ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80230be:	4313      	orrs	r3, r2
 80230c0:	f8a8 3000 	strh.w	r3, [r8]
 80230c4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80230c6:	441c      	add	r4, r3
 80230c8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80230ca:	441e      	add	r6, r3
 80230cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80230ce:	3b01      	subs	r3, #1
 80230d0:	f108 0802 	add.w	r8, r8, #2
 80230d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80230d6:	e76c      	b.n	8022fb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80230d8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80230da:	441c      	add	r4, r3
 80230dc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80230de:	3d01      	subs	r5, #1
 80230e0:	441e      	add	r6, r3
 80230e2:	f109 0902 	add.w	r9, r9, #2
 80230e6:	e744      	b.n	8022f72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80230e8:	d021      	beq.n	802312e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80230ea:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80230ec:	1e6b      	subs	r3, r5, #1
 80230ee:	fb00 4003 	mla	r0, r0, r3, r4
 80230f2:	1400      	asrs	r0, r0, #16
 80230f4:	f53f af59 	bmi.w	8022faa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80230f8:	3901      	subs	r1, #1
 80230fa:	4288      	cmp	r0, r1
 80230fc:	f6bf af55 	bge.w	8022faa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023100:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8023102:	fb01 6303 	mla	r3, r1, r3, r6
 8023106:	141b      	asrs	r3, r3, #16
 8023108:	f53f af4f 	bmi.w	8022faa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802310c:	3a01      	subs	r2, #1
 802310e:	4293      	cmp	r3, r2
 8023110:	f6bf af4b 	bge.w	8022faa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023114:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8023118:	9308      	str	r3, [sp, #32]
 802311a:	46a8      	mov	r8, r5
 802311c:	46ce      	mov	lr, r9
 802311e:	f1b8 0f00 	cmp.w	r8, #0
 8023122:	f300 80b5 	bgt.w	8023290 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023126:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802312a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802312e:	9b07      	ldr	r3, [sp, #28]
 8023130:	2b00      	cmp	r3, #0
 8023132:	f340 817d 	ble.w	8023430 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8023136:	ee30 0a04 	vadd.f32	s0, s0, s8
 802313a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802313e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023142:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8023144:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023148:	ee31 1a05 	vadd.f32	s2, s2, s10
 802314c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023150:	eef0 6a62 	vmov.f32	s13, s5
 8023154:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023158:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802315c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023160:	ee16 4a90 	vmov	r4, s13
 8023164:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023168:	eef0 6a43 	vmov.f32	s13, s6
 802316c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023170:	ee12 2a90 	vmov	r2, s5
 8023174:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023178:	fb92 f3f3 	sdiv	r3, r2, r3
 802317c:	ee13 2a10 	vmov	r2, s6
 8023180:	931f      	str	r3, [sp, #124]	@ 0x7c
 8023182:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8023184:	fb92 f3f3 	sdiv	r3, r2, r3
 8023188:	9320      	str	r3, [sp, #128]	@ 0x80
 802318a:	9b07      	ldr	r3, [sp, #28]
 802318c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802318e:	3b01      	subs	r3, #1
 8023190:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023194:	9307      	str	r3, [sp, #28]
 8023196:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8023198:	ee16 6a90 	vmov	r6, s13
 802319c:	bf14      	ite	ne
 802319e:	461d      	movne	r5, r3
 80231a0:	4615      	moveq	r5, r2
 80231a2:	eeb0 3a67 	vmov.f32	s6, s15
 80231a6:	eef0 2a47 	vmov.f32	s5, s14
 80231aa:	e6d3      	b.n	8022f54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80231ac:	2900      	cmp	r1, #0
 80231ae:	f43f af5c 	beq.w	802306a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80231b2:	eb0a 0003 	add.w	r0, sl, r3
 80231b6:	0843      	lsrs	r3, r0, #1
 80231b8:	07c0      	lsls	r0, r0, #31
 80231ba:	5cfb      	ldrb	r3, [r7, r3]
 80231bc:	bf54      	ite	pl
 80231be:	f003 030f 	andpl.w	r3, r3, #15
 80231c2:	111b      	asrmi	r3, r3, #4
 80231c4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80231c8:	b2db      	uxtb	r3, r3
 80231ca:	930a      	str	r3, [sp, #40]	@ 0x28
 80231cc:	e74d      	b.n	802306a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80231ce:	2b00      	cmp	r3, #0
 80231d0:	f43f af78 	beq.w	80230c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80231d4:	4a73      	ldr	r2, [pc, #460]	@ (80233a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80231d6:	f8b8 c000 	ldrh.w	ip, [r8]
 80231da:	6810      	ldr	r0, [r2, #0]
 80231dc:	fa1f fe83 	uxth.w	lr, r3
 80231e0:	ea4f 212c 	mov.w	r1, ip, asr #8
 80231e4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80231e8:	43db      	mvns	r3, r3
 80231ea:	b2db      	uxtb	r3, r3
 80231ec:	fb12 f20e 	smulbb	r2, r2, lr
 80231f0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80231f4:	fb01 2103 	mla	r1, r1, r3, r2
 80231f8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80231fc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023200:	b2c0      	uxtb	r0, r0
 8023202:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023206:	fb1b fb0e 	smulbb	fp, fp, lr
 802320a:	b289      	uxth	r1, r1
 802320c:	fb10 fe0e 	smulbb	lr, r0, lr
 8023210:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8023214:	fa5f fc8c 	uxtb.w	ip, ip
 8023218:	fb02 b203 	mla	r2, r2, r3, fp
 802321c:	1c48      	adds	r0, r1, #1
 802321e:	fb0c e303 	mla	r3, ip, r3, lr
 8023222:	b292      	uxth	r2, r2
 8023224:	b29b      	uxth	r3, r3
 8023226:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802322a:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 802322e:	f102 0b01 	add.w	fp, r2, #1
 8023232:	1c59      	adds	r1, r3, #1
 8023234:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023238:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802323c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8023240:	0952      	lsrs	r2, r2, #5
 8023242:	4301      	orrs	r1, r0
 8023244:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023248:	4311      	orrs	r1, r2
 802324a:	f8a8 1000 	strh.w	r1, [r8]
 802324e:	e739      	b.n	80230c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023250:	f113 0b01 	adds.w	fp, r3, #1
 8023254:	f53f af36 	bmi.w	80230c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023258:	45dc      	cmp	ip, fp
 802325a:	f6ff af33 	blt.w	80230c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802325e:	f110 0b01 	adds.w	fp, r0, #1
 8023262:	f53f af2f 	bmi.w	80230c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023266:	45de      	cmp	lr, fp
 8023268:	f6ff af2c 	blt.w	80230c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802326c:	9a08      	ldr	r2, [sp, #32]
 802326e:	9302      	str	r3, [sp, #8]
 8023270:	fa0f f38e 	sxth.w	r3, lr
 8023274:	9301      	str	r3, [sp, #4]
 8023276:	fa0f f38c 	sxth.w	r3, ip
 802327a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802327e:	9105      	str	r1, [sp, #20]
 8023280:	9300      	str	r3, [sp, #0]
 8023282:	463a      	mov	r2, r7
 8023284:	4653      	mov	r3, sl
 8023286:	4641      	mov	r1, r8
 8023288:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802328a:	f7ff fd73 	bl	8022d74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802328e:	e719      	b.n	80230c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023290:	9906      	ldr	r1, [sp, #24]
 8023292:	1422      	asrs	r2, r4, #16
 8023294:	1433      	asrs	r3, r6, #16
 8023296:	fb01 2303 	mla	r3, r1, r3, r2
 802329a:	085a      	lsrs	r2, r3, #1
 802329c:	07d9      	lsls	r1, r3, #31
 802329e:	5cba      	ldrb	r2, [r7, r2]
 80232a0:	bf54      	ite	pl
 80232a2:	f002 020f 	andpl.w	r2, r2, #15
 80232a6:	1112      	asrmi	r2, r2, #4
 80232a8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80232ac:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80232b0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80232b4:	b2d2      	uxtb	r2, r2
 80232b6:	2800      	cmp	r0, #0
 80232b8:	d062      	beq.n	8023380 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80232ba:	f103 0a01 	add.w	sl, r3, #1
 80232be:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80232c2:	f01a 0f01 	tst.w	sl, #1
 80232c6:	5c79      	ldrb	r1, [r7, r1]
 80232c8:	bf0c      	ite	eq
 80232ca:	f001 010f 	andeq.w	r1, r1, #15
 80232ce:	1109      	asrne	r1, r1, #4
 80232d0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80232d4:	b2c9      	uxtb	r1, r1
 80232d6:	910f      	str	r1, [sp, #60]	@ 0x3c
 80232d8:	f1bc 0f00 	cmp.w	ip, #0
 80232dc:	d019      	beq.n	8023312 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80232de:	9908      	ldr	r1, [sp, #32]
 80232e0:	440b      	add	r3, r1
 80232e2:	0859      	lsrs	r1, r3, #1
 80232e4:	f013 0f01 	tst.w	r3, #1
 80232e8:	5c79      	ldrb	r1, [r7, r1]
 80232ea:	bf0c      	ite	eq
 80232ec:	f001 010f 	andeq.w	r1, r1, #15
 80232f0:	1109      	asrne	r1, r1, #4
 80232f2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80232f6:	b2c9      	uxtb	r1, r1
 80232f8:	3301      	adds	r3, #1
 80232fa:	910b      	str	r1, [sp, #44]	@ 0x2c
 80232fc:	0859      	lsrs	r1, r3, #1
 80232fe:	07db      	lsls	r3, r3, #31
 8023300:	5c79      	ldrb	r1, [r7, r1]
 8023302:	bf54      	ite	pl
 8023304:	f001 010f 	andpl.w	r1, r1, #15
 8023308:	1109      	asrmi	r1, r1, #4
 802330a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802330e:	b2c9      	uxtb	r1, r1
 8023310:	9110      	str	r1, [sp, #64]	@ 0x40
 8023312:	b280      	uxth	r0, r0
 8023314:	fa1f fc8c 	uxth.w	ip, ip
 8023318:	fb00 f30c 	mul.w	r3, r0, ip
 802331c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8023320:	0100      	lsls	r0, r0, #4
 8023322:	fa1f fc8c 	uxth.w	ip, ip
 8023326:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 802332a:	eba1 010c 	sub.w	r1, r1, ip
 802332e:	fa1f fa81 	uxth.w	sl, r1
 8023332:	1ac0      	subs	r0, r0, r3
 8023334:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8023336:	b280      	uxth	r0, r0
 8023338:	4348      	muls	r0, r1
 802333a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802333c:	fb02 020a 	mla	r2, r2, sl, r0
 8023340:	fb0c 2c01 	mla	ip, ip, r1, r2
 8023344:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8023346:	fb03 c302 	mla	r3, r3, r2, ip
 802334a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802334e:	2bff      	cmp	r3, #255	@ 0xff
 8023350:	d12c      	bne.n	80233ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8023352:	4b14      	ldr	r3, [pc, #80]	@ (80233a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023354:	681a      	ldr	r2, [r3, #0]
 8023356:	4b14      	ldr	r3, [pc, #80]	@ (80233a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8023358:	0951      	lsrs	r1, r2, #5
 802335a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802335e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8023362:	430b      	orrs	r3, r1
 8023364:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023368:	4313      	orrs	r3, r2
 802336a:	f8ae 3000 	strh.w	r3, [lr]
 802336e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8023370:	441c      	add	r4, r3
 8023372:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8023374:	f10e 0e02 	add.w	lr, lr, #2
 8023378:	441e      	add	r6, r3
 802337a:	f108 38ff 	add.w	r8, r8, #4294967295
 802337e:	e6ce      	b.n	802311e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8023380:	f1bc 0f00 	cmp.w	ip, #0
 8023384:	d0c5      	beq.n	8023312 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023386:	9908      	ldr	r1, [sp, #32]
 8023388:	440b      	add	r3, r1
 802338a:	0859      	lsrs	r1, r3, #1
 802338c:	07db      	lsls	r3, r3, #31
 802338e:	5c79      	ldrb	r1, [r7, r1]
 8023390:	bf54      	ite	pl
 8023392:	f001 010f 	andpl.w	r1, r1, #15
 8023396:	1109      	asrmi	r1, r1, #4
 8023398:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802339c:	b2c9      	uxtb	r1, r1
 802339e:	910b      	str	r1, [sp, #44]	@ 0x2c
 80233a0:	e7b7      	b.n	8023312 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80233a2:	bf00      	nop
 80233a4:	200023b0 	.word	0x200023b0
 80233a8:	fffff800 	.word	0xfffff800
 80233ac:	2b00      	cmp	r3, #0
 80233ae:	d0de      	beq.n	802336e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80233b0:	4a21      	ldr	r2, [pc, #132]	@ (8023438 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80233b2:	f8be c000 	ldrh.w	ip, [lr]
 80233b6:	6810      	ldr	r0, [r2, #0]
 80233b8:	fa1f fa83 	uxth.w	sl, r3
 80233bc:	ea4f 212c 	mov.w	r1, ip, asr #8
 80233c0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80233c4:	43db      	mvns	r3, r3
 80233c6:	b2db      	uxtb	r3, r3
 80233c8:	fb12 f20a 	smulbb	r2, r2, sl
 80233cc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80233d0:	fb01 2103 	mla	r1, r1, r3, r2
 80233d4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80233d8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80233dc:	b2c0      	uxtb	r0, r0
 80233de:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80233e2:	fa5f fc8c 	uxtb.w	ip, ip
 80233e6:	fb10 f00a 	smulbb	r0, r0, sl
 80233ea:	fb0c 0003 	mla	r0, ip, r3, r0
 80233ee:	b289      	uxth	r1, r1
 80233f0:	fb1b fb0a 	smulbb	fp, fp, sl
 80233f4:	b280      	uxth	r0, r0
 80233f6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80233fa:	fb02 b203 	mla	r2, r2, r3, fp
 80233fe:	1c4b      	adds	r3, r1, #1
 8023400:	f100 0b01 	add.w	fp, r0, #1
 8023404:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023408:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802340c:	b292      	uxth	r2, r2
 802340e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8023412:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8023416:	ea4b 0101 	orr.w	r1, fp, r1
 802341a:	f102 0b01 	add.w	fp, r2, #1
 802341e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8023422:	0952      	lsrs	r2, r2, #5
 8023424:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023428:	4311      	orrs	r1, r2
 802342a:	f8ae 1000 	strh.w	r1, [lr]
 802342e:	e79e      	b.n	802336e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023430:	b013      	add	sp, #76	@ 0x4c
 8023432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023436:	bf00      	nop
 8023438:	200023b0 	.word	0x200023b0

0802343c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802343c:	b570      	push	{r4, r5, r6, lr}
 802343e:	1208      	asrs	r0, r1, #8
 8023440:	b29e      	uxth	r6, r3
 8023442:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8023446:	1213      	asrs	r3, r2, #8
 8023448:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802344c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8023450:	fb13 f305 	smulbb	r3, r3, r5
 8023454:	fb10 f006 	smulbb	r0, r0, r6
 8023458:	4418      	add	r0, r3
 802345a:	10cc      	asrs	r4, r1, #3
 802345c:	10d3      	asrs	r3, r2, #3
 802345e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8023462:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8023466:	fb13 f305 	smulbb	r3, r3, r5
 802346a:	fb14 f406 	smulbb	r4, r4, r6
 802346e:	00c9      	lsls	r1, r1, #3
 8023470:	00d2      	lsls	r2, r2, #3
 8023472:	441c      	add	r4, r3
 8023474:	b2d2      	uxtb	r2, r2
 8023476:	b2cb      	uxtb	r3, r1
 8023478:	fb12 f205 	smulbb	r2, r2, r5
 802347c:	b280      	uxth	r0, r0
 802347e:	fb13 f306 	smulbb	r3, r3, r6
 8023482:	4413      	add	r3, r2
 8023484:	1c42      	adds	r2, r0, #1
 8023486:	b29b      	uxth	r3, r3
 8023488:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802348c:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8023490:	1c58      	adds	r0, r3, #1
 8023492:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023496:	b2a4      	uxth	r4, r4
 8023498:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802349c:	4310      	orrs	r0, r2
 802349e:	1c62      	adds	r2, r4, #1
 80234a0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80234a4:	0964      	lsrs	r4, r4, #5
 80234a6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80234aa:	4320      	orrs	r0, r4
 80234ac:	bd70      	pop	{r4, r5, r6, pc}
	...

080234b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80234b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80234b4:	b08f      	sub	sp, #60	@ 0x3c
 80234b6:	461c      	mov	r4, r3
 80234b8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80234bc:	9004      	str	r0, [sp, #16]
 80234be:	460d      	mov	r5, r1
 80234c0:	4616      	mov	r6, r2
 80234c2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80234c4:	2f00      	cmp	r7, #0
 80234c6:	f000 80f6 	beq.w	80236b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80234ca:	6820      	ldr	r0, [r4, #0]
 80234cc:	6861      	ldr	r1, [r4, #4]
 80234ce:	aa0a      	add	r2, sp, #40	@ 0x28
 80234d0:	c203      	stmia	r2!, {r0, r1}
 80234d2:	6818      	ldr	r0, [r3, #0]
 80234d4:	6859      	ldr	r1, [r3, #4]
 80234d6:	aa0c      	add	r2, sp, #48	@ 0x30
 80234d8:	c203      	stmia	r2!, {r0, r1}
 80234da:	a80a      	add	r0, sp, #40	@ 0x28
 80234dc:	f7ef fc56 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80234e0:	4621      	mov	r1, r4
 80234e2:	a80c      	add	r0, sp, #48	@ 0x30
 80234e4:	f7ef fc7a 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80234e8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80234ec:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80234f0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80234f4:	f002 0301 	and.w	r3, r2, #1
 80234f8:	9306      	str	r3, [sp, #24]
 80234fa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80234fe:	f003 0101 	and.w	r1, r3, #1
 8023502:	9105      	str	r1, [sp, #20]
 8023504:	9805      	ldr	r0, [sp, #20]
 8023506:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 802350a:	4403      	add	r3, r0
 802350c:	fb01 2303 	mla	r3, r1, r3, r2
 8023510:	f04f 0802 	mov.w	r8, #2
 8023514:	fb93 f3f8 	sdiv	r3, r3, r8
 8023518:	441d      	add	r5, r3
 802351a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802351e:	441a      	add	r2, r3
 8023520:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8023524:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8023528:	4419      	add	r1, r3
 802352a:	4b64      	ldr	r3, [pc, #400]	@ (80236bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802352c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8023530:	6818      	ldr	r0, [r3, #0]
 8023532:	6803      	ldr	r3, [r0, #0]
 8023534:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8023536:	4798      	blx	r3
 8023538:	4a61      	ldr	r2, [pc, #388]	@ (80236c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802353a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802353e:	8813      	ldrh	r3, [r2, #0]
 8023540:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8023544:	2fff      	cmp	r7, #255	@ 0xff
 8023546:	fb03 a404 	mla	r4, r3, r4, sl
 802354a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802354e:	f106 0604 	add.w	r6, r6, #4
 8023552:	4611      	mov	r1, r2
 8023554:	fb03 fb0b 	mul.w	fp, r3, fp
 8023558:	d06b      	beq.n	8023632 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802355a:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802355e:	9303      	str	r3, [sp, #12]
 8023560:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8023564:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8023568:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802356c:	9b07      	ldr	r3, [sp, #28]
 802356e:	42a3      	cmp	r3, r4
 8023570:	f240 809c 	bls.w	80236ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8023574:	9b06      	ldr	r3, [sp, #24]
 8023576:	2b00      	cmp	r3, #0
 8023578:	d039      	beq.n	80235ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802357a:	782b      	ldrb	r3, [r5, #0]
 802357c:	8822      	ldrh	r2, [r4, #0]
 802357e:	9804      	ldr	r0, [sp, #16]
 8023580:	f003 030f 	and.w	r3, r3, #15
 8023584:	f105 0801 	add.w	r8, r5, #1
 8023588:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802358c:	9b03      	ldr	r3, [sp, #12]
 802358e:	9300      	str	r3, [sp, #0]
 8023590:	463b      	mov	r3, r7
 8023592:	f7ff ff53 	bl	802343c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023596:	f824 0b02 	strh.w	r0, [r4], #2
 802359a:	f109 3bff 	add.w	fp, r9, #4294967295
 802359e:	f1bb 0f01 	cmp.w	fp, #1
 80235a2:	46a2      	mov	sl, r4
 80235a4:	f104 0404 	add.w	r4, r4, #4
 80235a8:	dd24      	ble.n	80235f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80235aa:	f898 3000 	ldrb.w	r3, [r8]
 80235ae:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80235b2:	9804      	ldr	r0, [sp, #16]
 80235b4:	091b      	lsrs	r3, r3, #4
 80235b6:	f1ab 0b02 	sub.w	fp, fp, #2
 80235ba:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80235be:	9b03      	ldr	r3, [sp, #12]
 80235c0:	9300      	str	r3, [sp, #0]
 80235c2:	463b      	mov	r3, r7
 80235c4:	f7ff ff3a 	bl	802343c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80235c8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80235cc:	f818 3b01 	ldrb.w	r3, [r8], #1
 80235d0:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80235d4:	9804      	ldr	r0, [sp, #16]
 80235d6:	f003 030f 	and.w	r3, r3, #15
 80235da:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80235de:	9b03      	ldr	r3, [sp, #12]
 80235e0:	9300      	str	r3, [sp, #0]
 80235e2:	463b      	mov	r3, r7
 80235e4:	f7ff ff2a 	bl	802343c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80235e8:	f824 0c02 	strh.w	r0, [r4, #-2]
 80235ec:	e7d7      	b.n	802359e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80235ee:	46a8      	mov	r8, r5
 80235f0:	46cb      	mov	fp, r9
 80235f2:	e7d4      	b.n	802359e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80235f4:	d10e      	bne.n	8023614 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80235f6:	f898 3000 	ldrb.w	r3, [r8]
 80235fa:	f8ba 2000 	ldrh.w	r2, [sl]
 80235fe:	9804      	ldr	r0, [sp, #16]
 8023600:	091b      	lsrs	r3, r3, #4
 8023602:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8023606:	9b03      	ldr	r3, [sp, #12]
 8023608:	9300      	str	r3, [sp, #0]
 802360a:	463b      	mov	r3, r7
 802360c:	f7ff ff16 	bl	802343c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023610:	f82a 0b02 	strh.w	r0, [sl], #2
 8023614:	9b08      	ldr	r3, [sp, #32]
 8023616:	9a05      	ldr	r2, [sp, #20]
 8023618:	881c      	ldrh	r4, [r3, #0]
 802361a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802361e:	eba4 0409 	sub.w	r4, r4, r9
 8023622:	4413      	add	r3, r2
 8023624:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8023628:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802362a:	fb93 f3f2 	sdiv	r3, r3, r2
 802362e:	441d      	add	r5, r3
 8023630:	e79c      	b.n	802356c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8023632:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8023636:	45a3      	cmp	fp, r4
 8023638:	d938      	bls.n	80236ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802363a:	9b06      	ldr	r3, [sp, #24]
 802363c:	b1f3      	cbz	r3, 802367c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802363e:	782b      	ldrb	r3, [r5, #0]
 8023640:	f003 030f 	and.w	r3, r3, #15
 8023644:	1c6a      	adds	r2, r5, #1
 8023646:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802364a:	8023      	strh	r3, [r4, #0]
 802364c:	f109 30ff 	add.w	r0, r9, #4294967295
 8023650:	3402      	adds	r4, #2
 8023652:	2801      	cmp	r0, #1
 8023654:	4623      	mov	r3, r4
 8023656:	f104 0404 	add.w	r4, r4, #4
 802365a:	dd12      	ble.n	8023682 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802365c:	7813      	ldrb	r3, [r2, #0]
 802365e:	091b      	lsrs	r3, r3, #4
 8023660:	3802      	subs	r0, #2
 8023662:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023666:	f824 3c04 	strh.w	r3, [r4, #-4]
 802366a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802366e:	f003 030f 	and.w	r3, r3, #15
 8023672:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023676:	f824 3c02 	strh.w	r3, [r4, #-2]
 802367a:	e7ea      	b.n	8023652 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802367c:	462a      	mov	r2, r5
 802367e:	4648      	mov	r0, r9
 8023680:	e7e7      	b.n	8023652 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8023682:	d106      	bne.n	8023692 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8023684:	7812      	ldrb	r2, [r2, #0]
 8023686:	0912      	lsrs	r2, r2, #4
 8023688:	3302      	adds	r3, #2
 802368a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802368e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8023692:	880c      	ldrh	r4, [r1, #0]
 8023694:	9a05      	ldr	r2, [sp, #20]
 8023696:	eba4 0409 	sub.w	r4, r4, r9
 802369a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802369e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80236a2:	4413      	add	r3, r2
 80236a4:	fb93 f3f8 	sdiv	r3, r3, r8
 80236a8:	441d      	add	r5, r3
 80236aa:	e7c4      	b.n	8023636 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80236ac:	4b03      	ldr	r3, [pc, #12]	@ (80236bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80236ae:	6818      	ldr	r0, [r3, #0]
 80236b0:	6803      	ldr	r3, [r0, #0]
 80236b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80236b4:	4798      	blx	r3
 80236b6:	b00f      	add	sp, #60	@ 0x3c
 80236b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80236bc:	200023a8 	.word	0x200023a8
 80236c0:	200023a2 	.word	0x200023a2

080236c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80236c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80236c6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80236ca:	2dff      	cmp	r5, #255	@ 0xff
 80236cc:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80236d0:	d10c      	bne.n	80236ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80236d2:	2bff      	cmp	r3, #255	@ 0xff
 80236d4:	d10a      	bne.n	80236ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80236d6:	4b25      	ldr	r3, [pc, #148]	@ (802376c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80236d8:	0948      	lsrs	r0, r1, #5
 80236da:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80236de:	403b      	ands	r3, r7
 80236e0:	4318      	orrs	r0, r3
 80236e2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80236e6:	4308      	orrs	r0, r1
 80236e8:	b280      	uxth	r0, r0
 80236ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80236ec:	fb15 f503 	smulbb	r5, r5, r3
 80236f0:	b2ab      	uxth	r3, r5
 80236f2:	1c5d      	adds	r5, r3, #1
 80236f4:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80236f8:	1214      	asrs	r4, r2, #8
 80236fa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80236fe:	fa1f fc85 	uxth.w	ip, r5
 8023702:	10d6      	asrs	r6, r2, #3
 8023704:	00d0      	lsls	r0, r2, #3
 8023706:	43ed      	mvns	r5, r5
 8023708:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802370c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8023710:	b2eb      	uxtb	r3, r5
 8023712:	b2c0      	uxtb	r0, r0
 8023714:	fb12 f20c 	smulbb	r2, r2, ip
 8023718:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802371c:	fb04 2403 	mla	r4, r4, r3, r2
 8023720:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8023724:	b2c8      	uxtb	r0, r1
 8023726:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802372a:	b2fd      	uxtb	r5, r7
 802372c:	fb10 f00c 	smulbb	r0, r0, ip
 8023730:	b2a4      	uxth	r4, r4
 8023732:	fb02 0003 	mla	r0, r2, r3, r0
 8023736:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802373a:	fb15 f50c 	smulbb	r5, r5, ip
 802373e:	fb06 5503 	mla	r5, r6, r3, r5
 8023742:	b283      	uxth	r3, r0
 8023744:	1c60      	adds	r0, r4, #1
 8023746:	b2ad      	uxth	r5, r5
 8023748:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802374c:	1c58      	adds	r0, r3, #1
 802374e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023752:	1c6b      	adds	r3, r5, #1
 8023754:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023758:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802375c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8023760:	096d      	lsrs	r5, r5, #5
 8023762:	4320      	orrs	r0, r4
 8023764:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023768:	4328      	orrs	r0, r5
 802376a:	e7be      	b.n	80236ea <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802376c:	00fff800 	.word	0x00fff800

08023770 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8023770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023774:	461c      	mov	r4, r3
 8023776:	b08d      	sub	sp, #52	@ 0x34
 8023778:	460d      	mov	r5, r1
 802377a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802377c:	6861      	ldr	r1, [r4, #4]
 802377e:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8023782:	4680      	mov	r8, r0
 8023784:	6820      	ldr	r0, [r4, #0]
 8023786:	4616      	mov	r6, r2
 8023788:	aa08      	add	r2, sp, #32
 802378a:	c203      	stmia	r2!, {r0, r1}
 802378c:	6818      	ldr	r0, [r3, #0]
 802378e:	6859      	ldr	r1, [r3, #4]
 8023790:	aa0a      	add	r2, sp, #40	@ 0x28
 8023792:	c203      	stmia	r2!, {r0, r1}
 8023794:	a808      	add	r0, sp, #32
 8023796:	f7ef faf9 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802379a:	4621      	mov	r1, r4
 802379c:	a80a      	add	r0, sp, #40	@ 0x28
 802379e:	f7ef fb1d 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80237a2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80237a6:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 80237aa:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 80237ae:	f002 0301 	and.w	r3, r2, #1
 80237b2:	9303      	str	r3, [sp, #12]
 80237b4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80237b8:	f003 0101 	and.w	r1, r3, #1
 80237bc:	9102      	str	r1, [sp, #8]
 80237be:	9802      	ldr	r0, [sp, #8]
 80237c0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80237c4:	4403      	add	r3, r0
 80237c6:	fb01 2303 	mla	r3, r1, r3, r2
 80237ca:	f04f 0a02 	mov.w	sl, #2
 80237ce:	fb93 f3fa 	sdiv	r3, r3, sl
 80237d2:	441d      	add	r5, r3
 80237d4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80237d8:	441a      	add	r2, r3
 80237da:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80237de:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80237e2:	4a3f      	ldr	r2, [pc, #252]	@ (80238e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80237e4:	9205      	str	r2, [sp, #20]
 80237e6:	4419      	add	r1, r3
 80237e8:	6810      	ldr	r0, [r2, #0]
 80237ea:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 80237ee:	6803      	ldr	r3, [r0, #0]
 80237f0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80237f2:	4798      	blx	r3
 80237f4:	4b3b      	ldr	r3, [pc, #236]	@ (80238e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80237f6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 80237fa:	8819      	ldrh	r1, [r3, #0]
 80237fc:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8023800:	fb01 c404 	mla	r4, r1, r4, ip
 8023804:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8023808:	434f      	muls	r7, r1
 802380a:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802380e:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8023812:	3604      	adds	r6, #4
 8023814:	9204      	str	r2, [sp, #16]
 8023816:	9b04      	ldr	r3, [sp, #16]
 8023818:	429c      	cmp	r4, r3
 802381a:	d258      	bcs.n	80238ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 802381c:	9b03      	ldr	r3, [sp, #12]
 802381e:	2b00      	cmp	r3, #0
 8023820:	d034      	beq.n	802388c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8023822:	782b      	ldrb	r3, [r5, #0]
 8023824:	f003 030f 	and.w	r3, r3, #15
 8023828:	1c6f      	adds	r7, r5, #1
 802382a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802382e:	0e0b      	lsrs	r3, r1, #24
 8023830:	d006      	beq.n	8023840 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8023832:	8822      	ldrh	r2, [r4, #0]
 8023834:	9300      	str	r3, [sp, #0]
 8023836:	4640      	mov	r0, r8
 8023838:	464b      	mov	r3, r9
 802383a:	f7ff ff43 	bl	80236c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802383e:	8020      	strh	r0, [r4, #0]
 8023840:	3402      	adds	r4, #2
 8023842:	f10b 3aff 	add.w	sl, fp, #4294967295
 8023846:	f1ba 0f01 	cmp.w	sl, #1
 802384a:	dd22      	ble.n	8023892 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802384c:	783b      	ldrb	r3, [r7, #0]
 802384e:	091b      	lsrs	r3, r3, #4
 8023850:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8023854:	0e0b      	lsrs	r3, r1, #24
 8023856:	d006      	beq.n	8023866 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8023858:	8822      	ldrh	r2, [r4, #0]
 802385a:	9300      	str	r3, [sp, #0]
 802385c:	4640      	mov	r0, r8
 802385e:	464b      	mov	r3, r9
 8023860:	f7ff ff30 	bl	80236c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8023864:	8020      	strh	r0, [r4, #0]
 8023866:	f817 3b01 	ldrb.w	r3, [r7], #1
 802386a:	f003 030f 	and.w	r3, r3, #15
 802386e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8023872:	0e0b      	lsrs	r3, r1, #24
 8023874:	d006      	beq.n	8023884 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8023876:	8862      	ldrh	r2, [r4, #2]
 8023878:	9300      	str	r3, [sp, #0]
 802387a:	4640      	mov	r0, r8
 802387c:	464b      	mov	r3, r9
 802387e:	f7ff ff21 	bl	80236c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8023882:	8060      	strh	r0, [r4, #2]
 8023884:	3404      	adds	r4, #4
 8023886:	f1aa 0a02 	sub.w	sl, sl, #2
 802388a:	e7dc      	b.n	8023846 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802388c:	462f      	mov	r7, r5
 802388e:	46da      	mov	sl, fp
 8023890:	e7d9      	b.n	8023846 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8023892:	d10d      	bne.n	80238b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8023894:	783b      	ldrb	r3, [r7, #0]
 8023896:	091b      	lsrs	r3, r3, #4
 8023898:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802389c:	0e0b      	lsrs	r3, r1, #24
 802389e:	d006      	beq.n	80238ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80238a0:	8822      	ldrh	r2, [r4, #0]
 80238a2:	9300      	str	r3, [sp, #0]
 80238a4:	4640      	mov	r0, r8
 80238a6:	464b      	mov	r3, r9
 80238a8:	f7ff ff0c 	bl	80236c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80238ac:	8020      	strh	r0, [r4, #0]
 80238ae:	3402      	adds	r4, #2
 80238b0:	9b06      	ldr	r3, [sp, #24]
 80238b2:	9a02      	ldr	r2, [sp, #8]
 80238b4:	881b      	ldrh	r3, [r3, #0]
 80238b6:	eba3 030b 	sub.w	r3, r3, fp
 80238ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80238be:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80238c2:	4413      	add	r3, r2
 80238c4:	9a07      	ldr	r2, [sp, #28]
 80238c6:	fb93 f3f2 	sdiv	r3, r3, r2
 80238ca:	441d      	add	r5, r3
 80238cc:	e7a3      	b.n	8023816 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80238ce:	9b05      	ldr	r3, [sp, #20]
 80238d0:	6818      	ldr	r0, [r3, #0]
 80238d2:	6803      	ldr	r3, [r0, #0]
 80238d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80238d6:	4798      	blx	r3
 80238d8:	b00d      	add	sp, #52	@ 0x34
 80238da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80238de:	bf00      	nop
 80238e0:	200023a8 	.word	0x200023a8
 80238e4:	200023a2 	.word	0x200023a2

080238e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80238e8:	b570      	push	{r4, r5, r6, lr}
 80238ea:	1214      	asrs	r4, r2, #8
 80238ec:	788d      	ldrb	r5, [r1, #2]
 80238ee:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80238f2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80238f6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80238fa:	fb15 f503 	smulbb	r5, r5, r3
 80238fe:	fb04 5506 	mla	r5, r4, r6, r5
 8023902:	10d0      	asrs	r0, r2, #3
 8023904:	784c      	ldrb	r4, [r1, #1]
 8023906:	7809      	ldrb	r1, [r1, #0]
 8023908:	00d2      	lsls	r2, r2, #3
 802390a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802390e:	b2d2      	uxtb	r2, r2
 8023910:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8023914:	fb14 f403 	smulbb	r4, r4, r3
 8023918:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802391c:	fb11 f303 	smulbb	r3, r1, r3
 8023920:	fb00 4406 	mla	r4, r0, r6, r4
 8023924:	fb02 3306 	mla	r3, r2, r6, r3
 8023928:	b2ad      	uxth	r5, r5
 802392a:	b29b      	uxth	r3, r3
 802392c:	b2a4      	uxth	r4, r4
 802392e:	1c68      	adds	r0, r5, #1
 8023930:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8023934:	1c62      	adds	r2, r4, #1
 8023936:	1c58      	adds	r0, r3, #1
 8023938:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802393c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8023940:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8023944:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8023948:	0964      	lsrs	r4, r4, #5
 802394a:	4328      	orrs	r0, r5
 802394c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8023950:	4320      	orrs	r0, r4
 8023952:	bd70      	pop	{r4, r5, r6, pc}

08023954 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8023954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023958:	b08f      	sub	sp, #60	@ 0x3c
 802395a:	461c      	mov	r4, r3
 802395c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8023960:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023962:	4682      	mov	sl, r0
 8023964:	460e      	mov	r6, r1
 8023966:	4615      	mov	r5, r2
 8023968:	2f00      	cmp	r7, #0
 802396a:	f000 8142 	beq.w	8023bf2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802396e:	6820      	ldr	r0, [r4, #0]
 8023970:	6861      	ldr	r1, [r4, #4]
 8023972:	aa0a      	add	r2, sp, #40	@ 0x28
 8023974:	c203      	stmia	r2!, {r0, r1}
 8023976:	6818      	ldr	r0, [r3, #0]
 8023978:	6859      	ldr	r1, [r3, #4]
 802397a:	aa0c      	add	r2, sp, #48	@ 0x30
 802397c:	c203      	stmia	r2!, {r0, r1}
 802397e:	a80a      	add	r0, sp, #40	@ 0x28
 8023980:	f7ef fa04 	bl	8012d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023984:	4621      	mov	r1, r4
 8023986:	a80c      	add	r0, sp, #48	@ 0x30
 8023988:	f7ef fa28 	bl	8012ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802398c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8023990:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8023994:	f002 0301 	and.w	r3, r2, #1
 8023998:	9306      	str	r3, [sp, #24]
 802399a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802399e:	f003 0101 	and.w	r1, r3, #1
 80239a2:	9105      	str	r1, [sp, #20]
 80239a4:	9805      	ldr	r0, [sp, #20]
 80239a6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80239aa:	4403      	add	r3, r0
 80239ac:	fb01 2303 	mla	r3, r1, r3, r2
 80239b0:	f04f 0802 	mov.w	r8, #2
 80239b4:	fb93 f3f8 	sdiv	r3, r3, r8
 80239b8:	441e      	add	r6, r3
 80239ba:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80239be:	441a      	add	r2, r3
 80239c0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80239c4:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80239c8:	4419      	add	r1, r3
 80239ca:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80239ce:	9303      	str	r3, [sp, #12]
 80239d0:	4b89      	ldr	r3, [pc, #548]	@ (8023bf8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80239d2:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80239d6:	6818      	ldr	r0, [r3, #0]
 80239d8:	6803      	ldr	r3, [r0, #0]
 80239da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80239dc:	4798      	blx	r3
 80239de:	4a87      	ldr	r2, [pc, #540]	@ (8023bfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80239e0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80239e4:	8813      	ldrh	r3, [r2, #0]
 80239e6:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 80239ea:	2fff      	cmp	r7, #255	@ 0xff
 80239ec:	fb03 9404 	mla	r4, r3, r4, r9
 80239f0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80239f4:	f105 0504 	add.w	r5, r5, #4
 80239f8:	4694      	mov	ip, r2
 80239fa:	fb03 f30b 	mul.w	r3, r3, fp
 80239fe:	d071      	beq.n	8023ae4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8023a00:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023a04:	43f9      	mvns	r1, r7
 8023a06:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8023a0a:	b2c9      	uxtb	r1, r1
 8023a0c:	9104      	str	r1, [sp, #16]
 8023a0e:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8023a12:	9b07      	ldr	r3, [sp, #28]
 8023a14:	42a3      	cmp	r3, r4
 8023a16:	f240 80e7 	bls.w	8023be8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8023a1a:	9b06      	ldr	r3, [sp, #24]
 8023a1c:	2b00      	cmp	r3, #0
 8023a1e:	d03d      	beq.n	8023a9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8023a20:	7831      	ldrb	r1, [r6, #0]
 8023a22:	9b04      	ldr	r3, [sp, #16]
 8023a24:	8822      	ldrh	r2, [r4, #0]
 8023a26:	9300      	str	r3, [sp, #0]
 8023a28:	f001 010f 	and.w	r1, r1, #15
 8023a2c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023a30:	463b      	mov	r3, r7
 8023a32:	4429      	add	r1, r5
 8023a34:	4650      	mov	r0, sl
 8023a36:	f7ff ff57 	bl	80238e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8023a3a:	9b03      	ldr	r3, [sp, #12]
 8023a3c:	f824 0b02 	strh.w	r0, [r4], #2
 8023a40:	f106 0801 	add.w	r8, r6, #1
 8023a44:	f103 3bff 	add.w	fp, r3, #4294967295
 8023a48:	f1bb 0f01 	cmp.w	fp, #1
 8023a4c:	46a1      	mov	r9, r4
 8023a4e:	f104 0404 	add.w	r4, r4, #4
 8023a52:	dd27      	ble.n	8023aa4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8023a54:	f898 1000 	ldrb.w	r1, [r8]
 8023a58:	9b04      	ldr	r3, [sp, #16]
 8023a5a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8023a5e:	9300      	str	r3, [sp, #0]
 8023a60:	0909      	lsrs	r1, r1, #4
 8023a62:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023a66:	463b      	mov	r3, r7
 8023a68:	4429      	add	r1, r5
 8023a6a:	4650      	mov	r0, sl
 8023a6c:	f7ff ff3c 	bl	80238e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8023a70:	f824 0c04 	strh.w	r0, [r4, #-4]
 8023a74:	f818 1b01 	ldrb.w	r1, [r8], #1
 8023a78:	9b04      	ldr	r3, [sp, #16]
 8023a7a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8023a7e:	9300      	str	r3, [sp, #0]
 8023a80:	f001 010f 	and.w	r1, r1, #15
 8023a84:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023a88:	463b      	mov	r3, r7
 8023a8a:	4429      	add	r1, r5
 8023a8c:	4650      	mov	r0, sl
 8023a8e:	f7ff ff2b 	bl	80238e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8023a92:	f1ab 0b02 	sub.w	fp, fp, #2
 8023a96:	f824 0c02 	strh.w	r0, [r4, #-2]
 8023a9a:	e7d5      	b.n	8023a48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8023a9c:	46b0      	mov	r8, r6
 8023a9e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8023aa2:	e7d1      	b.n	8023a48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8023aa4:	d10f      	bne.n	8023ac6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8023aa6:	f898 1000 	ldrb.w	r1, [r8]
 8023aaa:	9b04      	ldr	r3, [sp, #16]
 8023aac:	f8b9 2000 	ldrh.w	r2, [r9]
 8023ab0:	9300      	str	r3, [sp, #0]
 8023ab2:	0909      	lsrs	r1, r1, #4
 8023ab4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023ab8:	463b      	mov	r3, r7
 8023aba:	4429      	add	r1, r5
 8023abc:	4650      	mov	r0, sl
 8023abe:	f7ff ff13 	bl	80238e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8023ac2:	f829 0b02 	strh.w	r0, [r9], #2
 8023ac6:	9b08      	ldr	r3, [sp, #32]
 8023ac8:	9a05      	ldr	r2, [sp, #20]
 8023aca:	881c      	ldrh	r4, [r3, #0]
 8023acc:	9b03      	ldr	r3, [sp, #12]
 8023ace:	1ae4      	subs	r4, r4, r3
 8023ad0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8023ad4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023ad8:	4413      	add	r3, r2
 8023ada:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023adc:	fb93 f3f2 	sdiv	r3, r3, r2
 8023ae0:	441e      	add	r6, r3
 8023ae2:	e796      	b.n	8023a12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8023ae4:	4f46      	ldr	r7, [pc, #280]	@ (8023c00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8023ae6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023aea:	42a3      	cmp	r3, r4
 8023aec:	d97c      	bls.n	8023be8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8023aee:	9a06      	ldr	r2, [sp, #24]
 8023af0:	2a00      	cmp	r2, #0
 8023af2:	d054      	beq.n	8023b9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8023af4:	7830      	ldrb	r0, [r6, #0]
 8023af6:	f000 000f 	and.w	r0, r0, #15
 8023afa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023afe:	eb05 0e00 	add.w	lr, r5, r0
 8023b02:	5c28      	ldrb	r0, [r5, r0]
 8023b04:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8023b08:	f89e e001 	ldrb.w	lr, [lr, #1]
 8023b0c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023b10:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8023b14:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8023b18:	ea42 020e 	orr.w	r2, r2, lr
 8023b1c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8023b20:	f824 2b02 	strh.w	r2, [r4], #2
 8023b24:	9a03      	ldr	r2, [sp, #12]
 8023b26:	1c71      	adds	r1, r6, #1
 8023b28:	f102 3eff 	add.w	lr, r2, #4294967295
 8023b2c:	f1be 0f01 	cmp.w	lr, #1
 8023b30:	4620      	mov	r0, r4
 8023b32:	f104 0404 	add.w	r4, r4, #4
 8023b36:	dd36      	ble.n	8023ba6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8023b38:	7808      	ldrb	r0, [r1, #0]
 8023b3a:	0900      	lsrs	r0, r0, #4
 8023b3c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023b40:	eb05 0a00 	add.w	sl, r5, r0
 8023b44:	f1ae 0e02 	sub.w	lr, lr, #2
 8023b48:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8023b4c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8023b50:	00d2      	lsls	r2, r2, #3
 8023b52:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8023b56:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023b5a:	ea49 0202 	orr.w	r2, r9, r2
 8023b5e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8023b62:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8023b66:	f824 2c04 	strh.w	r2, [r4, #-4]
 8023b6a:	f811 0b01 	ldrb.w	r0, [r1], #1
 8023b6e:	f000 000f 	and.w	r0, r0, #15
 8023b72:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023b76:	eb05 0a00 	add.w	sl, r5, r0
 8023b7a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8023b7e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8023b82:	00d2      	lsls	r2, r2, #3
 8023b84:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8023b88:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023b8c:	ea49 0202 	orr.w	r2, r9, r2
 8023b90:	f815 9000 	ldrb.w	r9, [r5, r0]
 8023b94:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8023b98:	f824 2c02 	strh.w	r2, [r4, #-2]
 8023b9c:	e7c6      	b.n	8023b2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8023b9e:	4631      	mov	r1, r6
 8023ba0:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8023ba4:	e7c2      	b.n	8023b2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8023ba6:	d111      	bne.n	8023bcc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8023ba8:	7809      	ldrb	r1, [r1, #0]
 8023baa:	0909      	lsrs	r1, r1, #4
 8023bac:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023bb0:	186c      	adds	r4, r5, r1
 8023bb2:	5c69      	ldrb	r1, [r5, r1]
 8023bb4:	78a2      	ldrb	r2, [r4, #2]
 8023bb6:	7864      	ldrb	r4, [r4, #1]
 8023bb8:	00e4      	lsls	r4, r4, #3
 8023bba:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8023bbe:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8023bc2:	4322      	orrs	r2, r4
 8023bc4:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8023bc8:	f820 2b02 	strh.w	r2, [r0], #2
 8023bcc:	9a03      	ldr	r2, [sp, #12]
 8023bce:	f8bc 4000 	ldrh.w	r4, [ip]
 8023bd2:	9905      	ldr	r1, [sp, #20]
 8023bd4:	1aa4      	subs	r4, r4, r2
 8023bd6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8023bda:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8023bde:	440a      	add	r2, r1
 8023be0:	fb92 f2f8 	sdiv	r2, r2, r8
 8023be4:	4416      	add	r6, r2
 8023be6:	e780      	b.n	8023aea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8023be8:	4b03      	ldr	r3, [pc, #12]	@ (8023bf8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8023bea:	6818      	ldr	r0, [r3, #0]
 8023bec:	6803      	ldr	r3, [r0, #0]
 8023bee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023bf0:	4798      	blx	r3
 8023bf2:	b00f      	add	sp, #60	@ 0x3c
 8023bf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023bf8:	200023a8 	.word	0x200023a8
 8023bfc:	200023a2 	.word	0x200023a2
 8023c00:	fffff800 	.word	0xfffff800

08023c04 <CRC_Lock>:
 8023c04:	b530      	push	{r4, r5, lr}
 8023c06:	4a20      	ldr	r2, [pc, #128]	@ (8023c88 <CRC_Lock+0x84>)
 8023c08:	6813      	ldr	r3, [r2, #0]
 8023c0a:	f023 0301 	bic.w	r3, r3, #1
 8023c0e:	6013      	str	r3, [r2, #0]
 8023c10:	4b1e      	ldr	r3, [pc, #120]	@ (8023c8c <CRC_Lock+0x88>)
 8023c12:	681a      	ldr	r2, [r3, #0]
 8023c14:	f64f 74f0 	movw	r4, #65520	@ 0xfff0
 8023c18:	4022      	ands	r2, r4
 8023c1a:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8023c1e:	42aa      	cmp	r2, r5
 8023c20:	d005      	beq.n	8023c2e <CRC_Lock+0x2a>
 8023c22:	681b      	ldr	r3, [r3, #0]
 8023c24:	f24c 2270 	movw	r2, #49776	@ 0xc270
 8023c28:	4023      	ands	r3, r4
 8023c2a:	4293      	cmp	r3, r2
 8023c2c:	d124      	bne.n	8023c78 <CRC_Lock+0x74>
 8023c2e:	4b18      	ldr	r3, [pc, #96]	@ (8023c90 <CRC_Lock+0x8c>)
 8023c30:	681b      	ldr	r3, [r3, #0]
 8023c32:	bb0b      	cbnz	r3, 8023c78 <CRC_Lock+0x74>
 8023c34:	4b17      	ldr	r3, [pc, #92]	@ (8023c94 <CRC_Lock+0x90>)
 8023c36:	681a      	ldr	r2, [r3, #0]
 8023c38:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8023c3c:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8023c40:	d00d      	beq.n	8023c5e <CRC_Lock+0x5a>
 8023c42:	681a      	ldr	r2, [r3, #0]
 8023c44:	f240 4483 	movw	r4, #1155	@ 0x483
 8023c48:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8023c4c:	42a2      	cmp	r2, r4
 8023c4e:	d006      	beq.n	8023c5e <CRC_Lock+0x5a>
 8023c50:	681b      	ldr	r3, [r3, #0]
 8023c52:	f240 4285 	movw	r2, #1157	@ 0x485
 8023c56:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8023c5a:	4293      	cmp	r3, r2
 8023c5c:	d10c      	bne.n	8023c78 <CRC_Lock+0x74>
 8023c5e:	4b0e      	ldr	r3, [pc, #56]	@ (8023c98 <CRC_Lock+0x94>)
 8023c60:	2201      	movs	r2, #1
 8023c62:	601a      	str	r2, [r3, #0]
 8023c64:	681a      	ldr	r2, [r3, #0]
 8023c66:	2a00      	cmp	r2, #0
 8023c68:	d1fc      	bne.n	8023c64 <CRC_Lock+0x60>
 8023c6a:	4b0c      	ldr	r3, [pc, #48]	@ (8023c9c <CRC_Lock+0x98>)
 8023c6c:	6018      	str	r0, [r3, #0]
 8023c6e:	6818      	ldr	r0, [r3, #0]
 8023c70:	1a43      	subs	r3, r0, r1
 8023c72:	4258      	negs	r0, r3
 8023c74:	4158      	adcs	r0, r3
 8023c76:	bd30      	pop	{r4, r5, pc}
 8023c78:	4b09      	ldr	r3, [pc, #36]	@ (8023ca0 <CRC_Lock+0x9c>)
 8023c7a:	2201      	movs	r2, #1
 8023c7c:	601a      	str	r2, [r3, #0]
 8023c7e:	681a      	ldr	r2, [r3, #0]
 8023c80:	2a00      	cmp	r2, #0
 8023c82:	d1fc      	bne.n	8023c7e <CRC_Lock+0x7a>
 8023c84:	4b07      	ldr	r3, [pc, #28]	@ (8023ca4 <CRC_Lock+0xa0>)
 8023c86:	e7f1      	b.n	8023c6c <CRC_Lock+0x68>
 8023c88:	e0002000 	.word	0xe0002000
 8023c8c:	e000ed00 	.word	0xe000ed00
 8023c90:	e0042000 	.word	0xe0042000
 8023c94:	5c001000 	.word	0x5c001000
 8023c98:	58024c08 	.word	0x58024c08
 8023c9c:	58024c00 	.word	0x58024c00
 8023ca0:	40023008 	.word	0x40023008
 8023ca4:	40023000 	.word	0x40023000

08023ca8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8023ca8:	6101      	str	r1, [r0, #16]
 8023caa:	4770      	bx	lr

08023cac <_ZN8touchgfx8Gestures4tickEv>:
 8023cac:	7b83      	ldrb	r3, [r0, #14]
 8023cae:	b14b      	cbz	r3, 8023cc4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8023cb0:	8903      	ldrh	r3, [r0, #8]
 8023cb2:	3301      	adds	r3, #1
 8023cb4:	b29b      	uxth	r3, r3
 8023cb6:	2b07      	cmp	r3, #7
 8023cb8:	8103      	strh	r3, [r0, #8]
 8023cba:	bf81      	itttt	hi
 8023cbc:	2300      	movhi	r3, #0
 8023cbe:	8143      	strhhi	r3, [r0, #10]
 8023cc0:	8183      	strhhi	r3, [r0, #12]
 8023cc2:	7383      	strbhi	r3, [r0, #14]
 8023cc4:	4770      	bx	lr
	...

08023cc8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8023cc8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8023ccc:	4698      	mov	r8, r3
 8023cce:	8883      	ldrh	r3, [r0, #4]
 8023cd0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8023cd4:	eba8 0303 	sub.w	r3, r8, r3
 8023cd8:	b21b      	sxth	r3, r3
 8023cda:	4604      	mov	r4, r0
 8023cdc:	2b00      	cmp	r3, #0
 8023cde:	4617      	mov	r7, r2
 8023ce0:	4a18      	ldr	r2, [pc, #96]	@ (8023d44 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8023ce2:	9200      	str	r2, [sp, #0]
 8023ce4:	bfb8      	it	lt
 8023ce6:	425b      	neglt	r3, r3
 8023ce8:	8aa2      	ldrh	r2, [r4, #20]
 8023cea:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8023cee:	f8ad 800a 	strh.w	r8, [sp, #10]
 8023cf2:	b21b      	sxth	r3, r3
 8023cf4:	460e      	mov	r6, r1
 8023cf6:	4293      	cmp	r3, r2
 8023cf8:	88c1      	ldrh	r1, [r0, #6]
 8023cfa:	f8ad 1008 	strh.w	r1, [sp, #8]
 8023cfe:	f04f 0000 	mov.w	r0, #0
 8023d02:	f88d 0004 	strb.w	r0, [sp, #4]
 8023d06:	f8ad 500c 	strh.w	r5, [sp, #12]
 8023d0a:	dc07      	bgt.n	8023d1c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8023d0c:	1a69      	subs	r1, r5, r1
 8023d0e:	b209      	sxth	r1, r1
 8023d10:	2900      	cmp	r1, #0
 8023d12:	bfb8      	it	lt
 8023d14:	4249      	neglt	r1, r1
 8023d16:	b209      	sxth	r1, r1
 8023d18:	428a      	cmp	r2, r1
 8023d1a:	da10      	bge.n	8023d3e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8023d1c:	6920      	ldr	r0, [r4, #16]
 8023d1e:	6803      	ldr	r3, [r0, #0]
 8023d20:	4669      	mov	r1, sp
 8023d22:	685b      	ldr	r3, [r3, #4]
 8023d24:	4798      	blx	r3
 8023d26:	eba8 0606 	sub.w	r6, r8, r6
 8023d2a:	2300      	movs	r3, #0
 8023d2c:	1bef      	subs	r7, r5, r7
 8023d2e:	2001      	movs	r0, #1
 8023d30:	8123      	strh	r3, [r4, #8]
 8023d32:	8166      	strh	r6, [r4, #10]
 8023d34:	81a7      	strh	r7, [r4, #12]
 8023d36:	f8a4 8004 	strh.w	r8, [r4, #4]
 8023d3a:	80e5      	strh	r5, [r4, #6]
 8023d3c:	73a0      	strb	r0, [r4, #14]
 8023d3e:	b004      	add	sp, #16
 8023d40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023d44:	08029d5c 	.word	0x08029d5c

08023d48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8023d48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023d4a:	461e      	mov	r6, r3
 8023d4c:	1e4b      	subs	r3, r1, #1
 8023d4e:	2b01      	cmp	r3, #1
 8023d50:	b085      	sub	sp, #20
 8023d52:	4604      	mov	r4, r0
 8023d54:	460d      	mov	r5, r1
 8023d56:	4617      	mov	r7, r2
 8023d58:	d84b      	bhi.n	8023df2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8023d5a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8023d5e:	1cd3      	adds	r3, r2, #3
 8023d60:	b29b      	uxth	r3, r3
 8023d62:	2b06      	cmp	r3, #6
 8023d64:	d916      	bls.n	8023d94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8023d66:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8023e08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8023d6a:	f8cd c004 	str.w	ip, [sp, #4]
 8023d6e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8023d72:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8023d76:	6900      	ldr	r0, [r0, #16]
 8023d78:	f8ad 100c 	strh.w	r1, [sp, #12]
 8023d7c:	f04f 0c00 	mov.w	ip, #0
 8023d80:	f88d c008 	strb.w	ip, [sp, #8]
 8023d84:	f8ad 200a 	strh.w	r2, [sp, #10]
 8023d88:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023d8c:	6803      	ldr	r3, [r0, #0]
 8023d8e:	a901      	add	r1, sp, #4
 8023d90:	689b      	ldr	r3, [r3, #8]
 8023d92:	4798      	blx	r3
 8023d94:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023d98:	1cd3      	adds	r3, r2, #3
 8023d9a:	b29b      	uxth	r3, r3
 8023d9c:	2b06      	cmp	r3, #6
 8023d9e:	d916      	bls.n	8023dce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8023da0:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8023e08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8023da4:	f8cd c004 	str.w	ip, [sp, #4]
 8023da8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8023dac:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8023db0:	6920      	ldr	r0, [r4, #16]
 8023db2:	f8ad 100c 	strh.w	r1, [sp, #12]
 8023db6:	f04f 0c01 	mov.w	ip, #1
 8023dba:	f88d c008 	strb.w	ip, [sp, #8]
 8023dbe:	f8ad 200a 	strh.w	r2, [sp, #10]
 8023dc2:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023dc6:	6803      	ldr	r3, [r0, #0]
 8023dc8:	a901      	add	r1, sp, #4
 8023dca:	689b      	ldr	r3, [r3, #8]
 8023dcc:	4798      	blx	r3
 8023dce:	4b0d      	ldr	r3, [pc, #52]	@ (8023e04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8023dd0:	9301      	str	r3, [sp, #4]
 8023dd2:	6920      	ldr	r0, [r4, #16]
 8023dd4:	f88d 5008 	strb.w	r5, [sp, #8]
 8023dd8:	2300      	movs	r3, #0
 8023dda:	f8ad 700a 	strh.w	r7, [sp, #10]
 8023dde:	f8ad 600c 	strh.w	r6, [sp, #12]
 8023de2:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023de6:	6803      	ldr	r3, [r0, #0]
 8023de8:	a901      	add	r1, sp, #4
 8023dea:	681b      	ldr	r3, [r3, #0]
 8023dec:	4798      	blx	r3
 8023dee:	b005      	add	sp, #20
 8023df0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023df2:	2900      	cmp	r1, #0
 8023df4:	d1eb      	bne.n	8023dce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8023df6:	80a2      	strh	r2, [r4, #4]
 8023df8:	80c6      	strh	r6, [r0, #6]
 8023dfa:	60a1      	str	r1, [r4, #8]
 8023dfc:	81a1      	strh	r1, [r4, #12]
 8023dfe:	73a1      	strb	r1, [r4, #14]
 8023e00:	e7e5      	b.n	8023dce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8023e02:	bf00      	nop
 8023e04:	08029d48 	.word	0x08029d48
 8023e08:	08029d70 	.word	0x08029d70

08023e0c <__aeabi_atexit>:
 8023e0c:	460b      	mov	r3, r1
 8023e0e:	4601      	mov	r1, r0
 8023e10:	4618      	mov	r0, r3
 8023e12:	f000 bb11 	b.w	8024438 <__cxa_atexit>

08023e16 <_ZdlPvj>:
 8023e16:	f000 b812 	b.w	8023e3e <_ZdlPv>

08023e1a <__cxa_guard_acquire>:
 8023e1a:	6802      	ldr	r2, [r0, #0]
 8023e1c:	07d2      	lsls	r2, r2, #31
 8023e1e:	4603      	mov	r3, r0
 8023e20:	d405      	bmi.n	8023e2e <__cxa_guard_acquire+0x14>
 8023e22:	7842      	ldrb	r2, [r0, #1]
 8023e24:	b102      	cbz	r2, 8023e28 <__cxa_guard_acquire+0xe>
 8023e26:	deff      	udf	#255	@ 0xff
 8023e28:	2001      	movs	r0, #1
 8023e2a:	7058      	strb	r0, [r3, #1]
 8023e2c:	4770      	bx	lr
 8023e2e:	2000      	movs	r0, #0
 8023e30:	4770      	bx	lr

08023e32 <__cxa_guard_release>:
 8023e32:	2301      	movs	r3, #1
 8023e34:	6003      	str	r3, [r0, #0]
 8023e36:	4770      	bx	lr

08023e38 <__cxa_pure_virtual>:
 8023e38:	b508      	push	{r3, lr}
 8023e3a:	f000 f80f 	bl	8023e5c <_ZSt9terminatev>

08023e3e <_ZdlPv>:
 8023e3e:	f000 ba45 	b.w	80242cc <free>

08023e42 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8023e42:	b508      	push	{r3, lr}
 8023e44:	4780      	blx	r0
 8023e46:	f000 fa0d 	bl	8024264 <abort>
	...

08023e4c <_ZSt13get_terminatev>:
 8023e4c:	4b02      	ldr	r3, [pc, #8]	@ (8023e58 <_ZSt13get_terminatev+0xc>)
 8023e4e:	6818      	ldr	r0, [r3, #0]
 8023e50:	f3bf 8f5b 	dmb	ish
 8023e54:	4770      	bx	lr
 8023e56:	bf00      	nop
 8023e58:	200000a8 	.word	0x200000a8

08023e5c <_ZSt9terminatev>:
 8023e5c:	b508      	push	{r3, lr}
 8023e5e:	f7ff fff5 	bl	8023e4c <_ZSt13get_terminatev>
 8023e62:	f7ff ffee 	bl	8023e42 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08023e68 <log>:
 8023e68:	b538      	push	{r3, r4, r5, lr}
 8023e6a:	ed2d 8b02 	vpush	{d8}
 8023e6e:	ec55 4b10 	vmov	r4, r5, d0
 8023e72:	f000 f841 	bl	8023ef8 <__ieee754_log>
 8023e76:	4622      	mov	r2, r4
 8023e78:	462b      	mov	r3, r5
 8023e7a:	4620      	mov	r0, r4
 8023e7c:	4629      	mov	r1, r5
 8023e7e:	eeb0 8a40 	vmov.f32	s16, s0
 8023e82:	eef0 8a60 	vmov.f32	s17, s1
 8023e86:	f7dc fe71 	bl	8000b6c <__aeabi_dcmpun>
 8023e8a:	b998      	cbnz	r0, 8023eb4 <log+0x4c>
 8023e8c:	2200      	movs	r2, #0
 8023e8e:	2300      	movs	r3, #0
 8023e90:	4620      	mov	r0, r4
 8023e92:	4629      	mov	r1, r5
 8023e94:	f7dc fe60 	bl	8000b58 <__aeabi_dcmpgt>
 8023e98:	b960      	cbnz	r0, 8023eb4 <log+0x4c>
 8023e9a:	2200      	movs	r2, #0
 8023e9c:	2300      	movs	r3, #0
 8023e9e:	4620      	mov	r0, r4
 8023ea0:	4629      	mov	r1, r5
 8023ea2:	f7dc fe31 	bl	8000b08 <__aeabi_dcmpeq>
 8023ea6:	b160      	cbz	r0, 8023ec2 <log+0x5a>
 8023ea8:	f001 fa40 	bl	802532c <__errno>
 8023eac:	ed9f 8b0a 	vldr	d8, [pc, #40]	@ 8023ed8 <log+0x70>
 8023eb0:	2322      	movs	r3, #34	@ 0x22
 8023eb2:	6003      	str	r3, [r0, #0]
 8023eb4:	eeb0 0a48 	vmov.f32	s0, s16
 8023eb8:	eef0 0a68 	vmov.f32	s1, s17
 8023ebc:	ecbd 8b02 	vpop	{d8}
 8023ec0:	bd38      	pop	{r3, r4, r5, pc}
 8023ec2:	f001 fa33 	bl	802532c <__errno>
 8023ec6:	ecbd 8b02 	vpop	{d8}
 8023eca:	2321      	movs	r3, #33	@ 0x21
 8023ecc:	6003      	str	r3, [r0, #0]
 8023ece:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023ed2:	4803      	ldr	r0, [pc, #12]	@ (8023ee0 <log+0x78>)
 8023ed4:	f000 b808 	b.w	8023ee8 <nan>
 8023ed8:	00000000 	.word	0x00000000
 8023edc:	fff00000 	.word	0xfff00000
 8023ee0:	0802a0c7 	.word	0x0802a0c7
 8023ee4:	00000000 	.word	0x00000000

08023ee8 <nan>:
 8023ee8:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8023ef0 <nan+0x8>
 8023eec:	4770      	bx	lr
 8023eee:	bf00      	nop
 8023ef0:	00000000 	.word	0x00000000
 8023ef4:	7ff80000 	.word	0x7ff80000

08023ef8 <__ieee754_log>:
 8023ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023efc:	ec51 0b10 	vmov	r0, r1, d0
 8023f00:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8023f04:	b087      	sub	sp, #28
 8023f06:	460d      	mov	r5, r1
 8023f08:	da26      	bge.n	8023f58 <__ieee754_log+0x60>
 8023f0a:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8023f0e:	4303      	orrs	r3, r0
 8023f10:	4602      	mov	r2, r0
 8023f12:	d10a      	bne.n	8023f2a <__ieee754_log+0x32>
 8023f14:	49ce      	ldr	r1, [pc, #824]	@ (8024250 <__ieee754_log+0x358>)
 8023f16:	2200      	movs	r2, #0
 8023f18:	2300      	movs	r3, #0
 8023f1a:	2000      	movs	r0, #0
 8023f1c:	f7dc fcb6 	bl	800088c <__aeabi_ddiv>
 8023f20:	ec41 0b10 	vmov	d0, r0, r1
 8023f24:	b007      	add	sp, #28
 8023f26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f2a:	2900      	cmp	r1, #0
 8023f2c:	da05      	bge.n	8023f3a <__ieee754_log+0x42>
 8023f2e:	460b      	mov	r3, r1
 8023f30:	f7dc f9ca 	bl	80002c8 <__aeabi_dsub>
 8023f34:	2200      	movs	r2, #0
 8023f36:	2300      	movs	r3, #0
 8023f38:	e7f0      	b.n	8023f1c <__ieee754_log+0x24>
 8023f3a:	4bc6      	ldr	r3, [pc, #792]	@ (8024254 <__ieee754_log+0x35c>)
 8023f3c:	2200      	movs	r2, #0
 8023f3e:	f7dc fb7b 	bl	8000638 <__aeabi_dmul>
 8023f42:	f06f 0335 	mvn.w	r3, #53	@ 0x35
 8023f46:	460d      	mov	r5, r1
 8023f48:	4ac3      	ldr	r2, [pc, #780]	@ (8024258 <__ieee754_log+0x360>)
 8023f4a:	4295      	cmp	r5, r2
 8023f4c:	dd06      	ble.n	8023f5c <__ieee754_log+0x64>
 8023f4e:	4602      	mov	r2, r0
 8023f50:	460b      	mov	r3, r1
 8023f52:	f7dc f9bb 	bl	80002cc <__adddf3>
 8023f56:	e7e3      	b.n	8023f20 <__ieee754_log+0x28>
 8023f58:	2300      	movs	r3, #0
 8023f5a:	e7f5      	b.n	8023f48 <__ieee754_log+0x50>
 8023f5c:	152c      	asrs	r4, r5, #20
 8023f5e:	f2a4 34ff 	subw	r4, r4, #1023	@ 0x3ff
 8023f62:	f3c5 0513 	ubfx	r5, r5, #0, #20
 8023f66:	441c      	add	r4, r3
 8023f68:	f505 2315 	add.w	r3, r5, #610304	@ 0x95000
 8023f6c:	f603 7364 	addw	r3, r3, #3940	@ 0xf64
 8023f70:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8023f74:	f083 527f 	eor.w	r2, r3, #1069547520	@ 0x3fc00000
 8023f78:	f482 1240 	eor.w	r2, r2, #3145728	@ 0x300000
 8023f7c:	ea42 0105 	orr.w	r1, r2, r5
 8023f80:	eb04 5413 	add.w	r4, r4, r3, lsr #20
 8023f84:	2200      	movs	r2, #0
 8023f86:	4bb5      	ldr	r3, [pc, #724]	@ (802425c <__ieee754_log+0x364>)
 8023f88:	f7dc f99e 	bl	80002c8 <__aeabi_dsub>
 8023f8c:	1cab      	adds	r3, r5, #2
 8023f8e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8023f92:	2b02      	cmp	r3, #2
 8023f94:	4682      	mov	sl, r0
 8023f96:	468b      	mov	fp, r1
 8023f98:	f04f 0200 	mov.w	r2, #0
 8023f9c:	dc53      	bgt.n	8024046 <__ieee754_log+0x14e>
 8023f9e:	2300      	movs	r3, #0
 8023fa0:	f7dc fdb2 	bl	8000b08 <__aeabi_dcmpeq>
 8023fa4:	b1d0      	cbz	r0, 8023fdc <__ieee754_log+0xe4>
 8023fa6:	2c00      	cmp	r4, #0
 8023fa8:	f000 8120 	beq.w	80241ec <__ieee754_log+0x2f4>
 8023fac:	4620      	mov	r0, r4
 8023fae:	f7dc fad9 	bl	8000564 <__aeabi_i2d>
 8023fb2:	a391      	add	r3, pc, #580	@ (adr r3, 80241f8 <__ieee754_log+0x300>)
 8023fb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023fb8:	4606      	mov	r6, r0
 8023fba:	460f      	mov	r7, r1
 8023fbc:	f7dc fb3c 	bl	8000638 <__aeabi_dmul>
 8023fc0:	a38f      	add	r3, pc, #572	@ (adr r3, 8024200 <__ieee754_log+0x308>)
 8023fc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023fc6:	4604      	mov	r4, r0
 8023fc8:	460d      	mov	r5, r1
 8023fca:	4630      	mov	r0, r6
 8023fcc:	4639      	mov	r1, r7
 8023fce:	f7dc fb33 	bl	8000638 <__aeabi_dmul>
 8023fd2:	4602      	mov	r2, r0
 8023fd4:	460b      	mov	r3, r1
 8023fd6:	4620      	mov	r0, r4
 8023fd8:	4629      	mov	r1, r5
 8023fda:	e7ba      	b.n	8023f52 <__ieee754_log+0x5a>
 8023fdc:	a38a      	add	r3, pc, #552	@ (adr r3, 8024208 <__ieee754_log+0x310>)
 8023fde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023fe2:	4650      	mov	r0, sl
 8023fe4:	4659      	mov	r1, fp
 8023fe6:	f7dc fb27 	bl	8000638 <__aeabi_dmul>
 8023fea:	4602      	mov	r2, r0
 8023fec:	460b      	mov	r3, r1
 8023fee:	2000      	movs	r0, #0
 8023ff0:	499b      	ldr	r1, [pc, #620]	@ (8024260 <__ieee754_log+0x368>)
 8023ff2:	f7dc f969 	bl	80002c8 <__aeabi_dsub>
 8023ff6:	4652      	mov	r2, sl
 8023ff8:	4606      	mov	r6, r0
 8023ffa:	460f      	mov	r7, r1
 8023ffc:	465b      	mov	r3, fp
 8023ffe:	4650      	mov	r0, sl
 8024000:	4659      	mov	r1, fp
 8024002:	f7dc fb19 	bl	8000638 <__aeabi_dmul>
 8024006:	4602      	mov	r2, r0
 8024008:	460b      	mov	r3, r1
 802400a:	4630      	mov	r0, r6
 802400c:	4639      	mov	r1, r7
 802400e:	f7dc fb13 	bl	8000638 <__aeabi_dmul>
 8024012:	4606      	mov	r6, r0
 8024014:	460f      	mov	r7, r1
 8024016:	b914      	cbnz	r4, 802401e <__ieee754_log+0x126>
 8024018:	4632      	mov	r2, r6
 802401a:	463b      	mov	r3, r7
 802401c:	e0a0      	b.n	8024160 <__ieee754_log+0x268>
 802401e:	4620      	mov	r0, r4
 8024020:	f7dc faa0 	bl	8000564 <__aeabi_i2d>
 8024024:	a374      	add	r3, pc, #464	@ (adr r3, 80241f8 <__ieee754_log+0x300>)
 8024026:	e9d3 2300 	ldrd	r2, r3, [r3]
 802402a:	4680      	mov	r8, r0
 802402c:	4689      	mov	r9, r1
 802402e:	f7dc fb03 	bl	8000638 <__aeabi_dmul>
 8024032:	a373      	add	r3, pc, #460	@ (adr r3, 8024200 <__ieee754_log+0x308>)
 8024034:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024038:	4604      	mov	r4, r0
 802403a:	460d      	mov	r5, r1
 802403c:	4640      	mov	r0, r8
 802403e:	4649      	mov	r1, r9
 8024040:	f7dc fafa 	bl	8000638 <__aeabi_dmul>
 8024044:	e0a5      	b.n	8024192 <__ieee754_log+0x29a>
 8024046:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 802404a:	f7dc f93f 	bl	80002cc <__adddf3>
 802404e:	4602      	mov	r2, r0
 8024050:	460b      	mov	r3, r1
 8024052:	4650      	mov	r0, sl
 8024054:	4659      	mov	r1, fp
 8024056:	f7dc fc19 	bl	800088c <__aeabi_ddiv>
 802405a:	e9cd 0100 	strd	r0, r1, [sp]
 802405e:	4620      	mov	r0, r4
 8024060:	f7dc fa80 	bl	8000564 <__aeabi_i2d>
 8024064:	e9dd 2300 	ldrd	r2, r3, [sp]
 8024068:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802406c:	4610      	mov	r0, r2
 802406e:	4619      	mov	r1, r3
 8024070:	f7dc fae2 	bl	8000638 <__aeabi_dmul>
 8024074:	4602      	mov	r2, r0
 8024076:	460b      	mov	r3, r1
 8024078:	e9cd 2304 	strd	r2, r3, [sp, #16]
 802407c:	f7dc fadc 	bl	8000638 <__aeabi_dmul>
 8024080:	a363      	add	r3, pc, #396	@ (adr r3, 8024210 <__ieee754_log+0x318>)
 8024082:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024086:	4680      	mov	r8, r0
 8024088:	4689      	mov	r9, r1
 802408a:	f7dc fad5 	bl	8000638 <__aeabi_dmul>
 802408e:	a362      	add	r3, pc, #392	@ (adr r3, 8024218 <__ieee754_log+0x320>)
 8024090:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024094:	f7dc f91a 	bl	80002cc <__adddf3>
 8024098:	4642      	mov	r2, r8
 802409a:	464b      	mov	r3, r9
 802409c:	f7dc facc 	bl	8000638 <__aeabi_dmul>
 80240a0:	a35f      	add	r3, pc, #380	@ (adr r3, 8024220 <__ieee754_log+0x328>)
 80240a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80240a6:	f7dc f911 	bl	80002cc <__adddf3>
 80240aa:	4642      	mov	r2, r8
 80240ac:	464b      	mov	r3, r9
 80240ae:	f7dc fac3 	bl	8000638 <__aeabi_dmul>
 80240b2:	a35d      	add	r3, pc, #372	@ (adr r3, 8024228 <__ieee754_log+0x330>)
 80240b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80240b8:	f7dc f908 	bl	80002cc <__adddf3>
 80240bc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80240c0:	f7dc faba 	bl	8000638 <__aeabi_dmul>
 80240c4:	a35a      	add	r3, pc, #360	@ (adr r3, 8024230 <__ieee754_log+0x338>)
 80240c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80240ca:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80240ce:	4640      	mov	r0, r8
 80240d0:	4649      	mov	r1, r9
 80240d2:	f7dc fab1 	bl	8000638 <__aeabi_dmul>
 80240d6:	a358      	add	r3, pc, #352	@ (adr r3, 8024238 <__ieee754_log+0x340>)
 80240d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80240dc:	f7dc f8f6 	bl	80002cc <__adddf3>
 80240e0:	4642      	mov	r2, r8
 80240e2:	464b      	mov	r3, r9
 80240e4:	f7dc faa8 	bl	8000638 <__aeabi_dmul>
 80240e8:	a355      	add	r3, pc, #340	@ (adr r3, 8024240 <__ieee754_log+0x348>)
 80240ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80240ee:	f7dc f8ed 	bl	80002cc <__adddf3>
 80240f2:	4642      	mov	r2, r8
 80240f4:	464b      	mov	r3, r9
 80240f6:	f7dc fa9f 	bl	8000638 <__aeabi_dmul>
 80240fa:	f5a5 26c2 	sub.w	r6, r5, #397312	@ 0x61000
 80240fe:	4602      	mov	r2, r0
 8024100:	460b      	mov	r3, r1
 8024102:	f5c5 25d7 	rsb	r5, r5, #440320	@ 0x6b800
 8024106:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 802410a:	f7dc f8df 	bl	80002cc <__adddf3>
 802410e:	f2a6 467a 	subw	r6, r6, #1146	@ 0x47a
 8024112:	3551      	adds	r5, #81	@ 0x51
 8024114:	4335      	orrs	r5, r6
 8024116:	2d00      	cmp	r5, #0
 8024118:	4680      	mov	r8, r0
 802411a:	4689      	mov	r9, r1
 802411c:	dd48      	ble.n	80241b0 <__ieee754_log+0x2b8>
 802411e:	4b50      	ldr	r3, [pc, #320]	@ (8024260 <__ieee754_log+0x368>)
 8024120:	2200      	movs	r2, #0
 8024122:	4650      	mov	r0, sl
 8024124:	4659      	mov	r1, fp
 8024126:	f7dc fa87 	bl	8000638 <__aeabi_dmul>
 802412a:	4652      	mov	r2, sl
 802412c:	465b      	mov	r3, fp
 802412e:	f7dc fa83 	bl	8000638 <__aeabi_dmul>
 8024132:	4602      	mov	r2, r0
 8024134:	460b      	mov	r3, r1
 8024136:	4606      	mov	r6, r0
 8024138:	460f      	mov	r7, r1
 802413a:	4640      	mov	r0, r8
 802413c:	4649      	mov	r1, r9
 802413e:	f7dc f8c5 	bl	80002cc <__adddf3>
 8024142:	e9dd 2300 	ldrd	r2, r3, [sp]
 8024146:	f7dc fa77 	bl	8000638 <__aeabi_dmul>
 802414a:	4680      	mov	r8, r0
 802414c:	4689      	mov	r9, r1
 802414e:	b964      	cbnz	r4, 802416a <__ieee754_log+0x272>
 8024150:	4602      	mov	r2, r0
 8024152:	460b      	mov	r3, r1
 8024154:	4630      	mov	r0, r6
 8024156:	4639      	mov	r1, r7
 8024158:	f7dc f8b6 	bl	80002c8 <__aeabi_dsub>
 802415c:	4602      	mov	r2, r0
 802415e:	460b      	mov	r3, r1
 8024160:	4650      	mov	r0, sl
 8024162:	4659      	mov	r1, fp
 8024164:	f7dc f8b0 	bl	80002c8 <__aeabi_dsub>
 8024168:	e6da      	b.n	8023f20 <__ieee754_log+0x28>
 802416a:	a323      	add	r3, pc, #140	@ (adr r3, 80241f8 <__ieee754_log+0x300>)
 802416c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024170:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8024174:	f7dc fa60 	bl	8000638 <__aeabi_dmul>
 8024178:	a321      	add	r3, pc, #132	@ (adr r3, 8024200 <__ieee754_log+0x308>)
 802417a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802417e:	4604      	mov	r4, r0
 8024180:	460d      	mov	r5, r1
 8024182:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8024186:	f7dc fa57 	bl	8000638 <__aeabi_dmul>
 802418a:	4642      	mov	r2, r8
 802418c:	464b      	mov	r3, r9
 802418e:	f7dc f89d 	bl	80002cc <__adddf3>
 8024192:	4602      	mov	r2, r0
 8024194:	460b      	mov	r3, r1
 8024196:	4630      	mov	r0, r6
 8024198:	4639      	mov	r1, r7
 802419a:	f7dc f895 	bl	80002c8 <__aeabi_dsub>
 802419e:	4652      	mov	r2, sl
 80241a0:	465b      	mov	r3, fp
 80241a2:	f7dc f891 	bl	80002c8 <__aeabi_dsub>
 80241a6:	4602      	mov	r2, r0
 80241a8:	460b      	mov	r3, r1
 80241aa:	4620      	mov	r0, r4
 80241ac:	4629      	mov	r1, r5
 80241ae:	e7d9      	b.n	8024164 <__ieee754_log+0x26c>
 80241b0:	4602      	mov	r2, r0
 80241b2:	460b      	mov	r3, r1
 80241b4:	4650      	mov	r0, sl
 80241b6:	4659      	mov	r1, fp
 80241b8:	f7dc f886 	bl	80002c8 <__aeabi_dsub>
 80241bc:	e9dd 2300 	ldrd	r2, r3, [sp]
 80241c0:	f7dc fa3a 	bl	8000638 <__aeabi_dmul>
 80241c4:	4606      	mov	r6, r0
 80241c6:	460f      	mov	r7, r1
 80241c8:	2c00      	cmp	r4, #0
 80241ca:	f43f af25 	beq.w	8024018 <__ieee754_log+0x120>
 80241ce:	a30a      	add	r3, pc, #40	@ (adr r3, 80241f8 <__ieee754_log+0x300>)
 80241d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80241d4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80241d8:	f7dc fa2e 	bl	8000638 <__aeabi_dmul>
 80241dc:	a308      	add	r3, pc, #32	@ (adr r3, 8024200 <__ieee754_log+0x308>)
 80241de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80241e2:	4604      	mov	r4, r0
 80241e4:	460d      	mov	r5, r1
 80241e6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80241ea:	e729      	b.n	8024040 <__ieee754_log+0x148>
 80241ec:	ed9f 0b16 	vldr	d0, [pc, #88]	@ 8024248 <__ieee754_log+0x350>
 80241f0:	e698      	b.n	8023f24 <__ieee754_log+0x2c>
 80241f2:	bf00      	nop
 80241f4:	f3af 8000 	nop.w
 80241f8:	fee00000 	.word	0xfee00000
 80241fc:	3fe62e42 	.word	0x3fe62e42
 8024200:	35793c76 	.word	0x35793c76
 8024204:	3dea39ef 	.word	0x3dea39ef
 8024208:	55555555 	.word	0x55555555
 802420c:	3fd55555 	.word	0x3fd55555
 8024210:	df3e5244 	.word	0xdf3e5244
 8024214:	3fc2f112 	.word	0x3fc2f112
 8024218:	96cb03de 	.word	0x96cb03de
 802421c:	3fc74664 	.word	0x3fc74664
 8024220:	94229359 	.word	0x94229359
 8024224:	3fd24924 	.word	0x3fd24924
 8024228:	55555593 	.word	0x55555593
 802422c:	3fe55555 	.word	0x3fe55555
 8024230:	d078c69f 	.word	0xd078c69f
 8024234:	3fc39a09 	.word	0x3fc39a09
 8024238:	1d8e78af 	.word	0x1d8e78af
 802423c:	3fcc71c5 	.word	0x3fcc71c5
 8024240:	9997fa04 	.word	0x9997fa04
 8024244:	3fd99999 	.word	0x3fd99999
	...
 8024250:	c3500000 	.word	0xc3500000
 8024254:	43500000 	.word	0x43500000
 8024258:	7fefffff 	.word	0x7fefffff
 802425c:	3ff00000 	.word	0x3ff00000
 8024260:	3fe00000 	.word	0x3fe00000

08024264 <abort>:
 8024264:	b508      	push	{r3, lr}
 8024266:	2006      	movs	r0, #6
 8024268:	f000 ffea 	bl	8025240 <raise>
 802426c:	2001      	movs	r0, #1
 802426e:	f7dd fd9f 	bl	8001db0 <_exit>
	...

08024274 <__assert_func>:
 8024274:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8024276:	4614      	mov	r4, r2
 8024278:	461a      	mov	r2, r3
 802427a:	4b09      	ldr	r3, [pc, #36]	@ (80242a0 <__assert_func+0x2c>)
 802427c:	681b      	ldr	r3, [r3, #0]
 802427e:	4605      	mov	r5, r0
 8024280:	68d8      	ldr	r0, [r3, #12]
 8024282:	b954      	cbnz	r4, 802429a <__assert_func+0x26>
 8024284:	4b07      	ldr	r3, [pc, #28]	@ (80242a4 <__assert_func+0x30>)
 8024286:	461c      	mov	r4, r3
 8024288:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802428c:	9100      	str	r1, [sp, #0]
 802428e:	462b      	mov	r3, r5
 8024290:	4905      	ldr	r1, [pc, #20]	@ (80242a8 <__assert_func+0x34>)
 8024292:	f000 fddb 	bl	8024e4c <fiprintf>
 8024296:	f7ff ffe5 	bl	8024264 <abort>
 802429a:	4b04      	ldr	r3, [pc, #16]	@ (80242ac <__assert_func+0x38>)
 802429c:	e7f4      	b.n	8024288 <__assert_func+0x14>
 802429e:	bf00      	nop
 80242a0:	200000b8 	.word	0x200000b8
 80242a4:	0802a0c7 	.word	0x0802a0c7
 80242a8:	0802a099 	.word	0x0802a099
 80242ac:	0802a08c 	.word	0x0802a08c

080242b0 <atexit>:
 80242b0:	2300      	movs	r3, #0
 80242b2:	4601      	mov	r1, r0
 80242b4:	461a      	mov	r2, r3
 80242b6:	4618      	mov	r0, r3
 80242b8:	f001 b87c 	b.w	80253b4 <__register_exitproc>

080242bc <malloc>:
 80242bc:	4b02      	ldr	r3, [pc, #8]	@ (80242c8 <malloc+0xc>)
 80242be:	4601      	mov	r1, r0
 80242c0:	6818      	ldr	r0, [r3, #0]
 80242c2:	f000 b82d 	b.w	8024320 <_malloc_r>
 80242c6:	bf00      	nop
 80242c8:	200000b8 	.word	0x200000b8

080242cc <free>:
 80242cc:	4b02      	ldr	r3, [pc, #8]	@ (80242d8 <free+0xc>)
 80242ce:	4601      	mov	r1, r0
 80242d0:	6818      	ldr	r0, [r3, #0]
 80242d2:	f001 bf19 	b.w	8026108 <_free_r>
 80242d6:	bf00      	nop
 80242d8:	200000b8 	.word	0x200000b8

080242dc <sbrk_aligned>:
 80242dc:	b570      	push	{r4, r5, r6, lr}
 80242de:	4e0f      	ldr	r6, [pc, #60]	@ (802431c <sbrk_aligned+0x40>)
 80242e0:	460c      	mov	r4, r1
 80242e2:	6831      	ldr	r1, [r6, #0]
 80242e4:	4605      	mov	r5, r0
 80242e6:	b911      	cbnz	r1, 80242ee <sbrk_aligned+0x12>
 80242e8:	f000 fffe 	bl	80252e8 <_sbrk_r>
 80242ec:	6030      	str	r0, [r6, #0]
 80242ee:	4621      	mov	r1, r4
 80242f0:	4628      	mov	r0, r5
 80242f2:	f000 fff9 	bl	80252e8 <_sbrk_r>
 80242f6:	1c43      	adds	r3, r0, #1
 80242f8:	d103      	bne.n	8024302 <sbrk_aligned+0x26>
 80242fa:	f04f 34ff 	mov.w	r4, #4294967295
 80242fe:	4620      	mov	r0, r4
 8024300:	bd70      	pop	{r4, r5, r6, pc}
 8024302:	1cc4      	adds	r4, r0, #3
 8024304:	f024 0403 	bic.w	r4, r4, #3
 8024308:	42a0      	cmp	r0, r4
 802430a:	d0f8      	beq.n	80242fe <sbrk_aligned+0x22>
 802430c:	1a21      	subs	r1, r4, r0
 802430e:	4628      	mov	r0, r5
 8024310:	f000 ffea 	bl	80252e8 <_sbrk_r>
 8024314:	3001      	adds	r0, #1
 8024316:	d1f2      	bne.n	80242fe <sbrk_aligned+0x22>
 8024318:	e7ef      	b.n	80242fa <sbrk_aligned+0x1e>
 802431a:	bf00      	nop
 802431c:	20002cf4 	.word	0x20002cf4

08024320 <_malloc_r>:
 8024320:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024324:	1ccd      	adds	r5, r1, #3
 8024326:	f025 0503 	bic.w	r5, r5, #3
 802432a:	3508      	adds	r5, #8
 802432c:	2d0c      	cmp	r5, #12
 802432e:	bf38      	it	cc
 8024330:	250c      	movcc	r5, #12
 8024332:	2d00      	cmp	r5, #0
 8024334:	4606      	mov	r6, r0
 8024336:	db01      	blt.n	802433c <_malloc_r+0x1c>
 8024338:	42a9      	cmp	r1, r5
 802433a:	d904      	bls.n	8024346 <_malloc_r+0x26>
 802433c:	230c      	movs	r3, #12
 802433e:	6033      	str	r3, [r6, #0]
 8024340:	2000      	movs	r0, #0
 8024342:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024346:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 802441c <_malloc_r+0xfc>
 802434a:	f000 f869 	bl	8024420 <__malloc_lock>
 802434e:	f8d8 3000 	ldr.w	r3, [r8]
 8024352:	461c      	mov	r4, r3
 8024354:	bb44      	cbnz	r4, 80243a8 <_malloc_r+0x88>
 8024356:	4629      	mov	r1, r5
 8024358:	4630      	mov	r0, r6
 802435a:	f7ff ffbf 	bl	80242dc <sbrk_aligned>
 802435e:	1c43      	adds	r3, r0, #1
 8024360:	4604      	mov	r4, r0
 8024362:	d158      	bne.n	8024416 <_malloc_r+0xf6>
 8024364:	f8d8 4000 	ldr.w	r4, [r8]
 8024368:	4627      	mov	r7, r4
 802436a:	2f00      	cmp	r7, #0
 802436c:	d143      	bne.n	80243f6 <_malloc_r+0xd6>
 802436e:	2c00      	cmp	r4, #0
 8024370:	d04b      	beq.n	802440a <_malloc_r+0xea>
 8024372:	6823      	ldr	r3, [r4, #0]
 8024374:	4639      	mov	r1, r7
 8024376:	4630      	mov	r0, r6
 8024378:	eb04 0903 	add.w	r9, r4, r3
 802437c:	f000 ffb4 	bl	80252e8 <_sbrk_r>
 8024380:	4581      	cmp	r9, r0
 8024382:	d142      	bne.n	802440a <_malloc_r+0xea>
 8024384:	6821      	ldr	r1, [r4, #0]
 8024386:	1a6d      	subs	r5, r5, r1
 8024388:	4629      	mov	r1, r5
 802438a:	4630      	mov	r0, r6
 802438c:	f7ff ffa6 	bl	80242dc <sbrk_aligned>
 8024390:	3001      	adds	r0, #1
 8024392:	d03a      	beq.n	802440a <_malloc_r+0xea>
 8024394:	6823      	ldr	r3, [r4, #0]
 8024396:	442b      	add	r3, r5
 8024398:	6023      	str	r3, [r4, #0]
 802439a:	f8d8 3000 	ldr.w	r3, [r8]
 802439e:	685a      	ldr	r2, [r3, #4]
 80243a0:	bb62      	cbnz	r2, 80243fc <_malloc_r+0xdc>
 80243a2:	f8c8 7000 	str.w	r7, [r8]
 80243a6:	e00f      	b.n	80243c8 <_malloc_r+0xa8>
 80243a8:	6822      	ldr	r2, [r4, #0]
 80243aa:	1b52      	subs	r2, r2, r5
 80243ac:	d420      	bmi.n	80243f0 <_malloc_r+0xd0>
 80243ae:	2a0b      	cmp	r2, #11
 80243b0:	d917      	bls.n	80243e2 <_malloc_r+0xc2>
 80243b2:	1961      	adds	r1, r4, r5
 80243b4:	42a3      	cmp	r3, r4
 80243b6:	6025      	str	r5, [r4, #0]
 80243b8:	bf18      	it	ne
 80243ba:	6059      	strne	r1, [r3, #4]
 80243bc:	6863      	ldr	r3, [r4, #4]
 80243be:	bf08      	it	eq
 80243c0:	f8c8 1000 	streq.w	r1, [r8]
 80243c4:	5162      	str	r2, [r4, r5]
 80243c6:	604b      	str	r3, [r1, #4]
 80243c8:	4630      	mov	r0, r6
 80243ca:	f000 f82f 	bl	802442c <__malloc_unlock>
 80243ce:	f104 000b 	add.w	r0, r4, #11
 80243d2:	1d23      	adds	r3, r4, #4
 80243d4:	f020 0007 	bic.w	r0, r0, #7
 80243d8:	1ac2      	subs	r2, r0, r3
 80243da:	bf1c      	itt	ne
 80243dc:	1a1b      	subne	r3, r3, r0
 80243de:	50a3      	strne	r3, [r4, r2]
 80243e0:	e7af      	b.n	8024342 <_malloc_r+0x22>
 80243e2:	6862      	ldr	r2, [r4, #4]
 80243e4:	42a3      	cmp	r3, r4
 80243e6:	bf0c      	ite	eq
 80243e8:	f8c8 2000 	streq.w	r2, [r8]
 80243ec:	605a      	strne	r2, [r3, #4]
 80243ee:	e7eb      	b.n	80243c8 <_malloc_r+0xa8>
 80243f0:	4623      	mov	r3, r4
 80243f2:	6864      	ldr	r4, [r4, #4]
 80243f4:	e7ae      	b.n	8024354 <_malloc_r+0x34>
 80243f6:	463c      	mov	r4, r7
 80243f8:	687f      	ldr	r7, [r7, #4]
 80243fa:	e7b6      	b.n	802436a <_malloc_r+0x4a>
 80243fc:	461a      	mov	r2, r3
 80243fe:	685b      	ldr	r3, [r3, #4]
 8024400:	42a3      	cmp	r3, r4
 8024402:	d1fb      	bne.n	80243fc <_malloc_r+0xdc>
 8024404:	2300      	movs	r3, #0
 8024406:	6053      	str	r3, [r2, #4]
 8024408:	e7de      	b.n	80243c8 <_malloc_r+0xa8>
 802440a:	230c      	movs	r3, #12
 802440c:	6033      	str	r3, [r6, #0]
 802440e:	4630      	mov	r0, r6
 8024410:	f000 f80c 	bl	802442c <__malloc_unlock>
 8024414:	e794      	b.n	8024340 <_malloc_r+0x20>
 8024416:	6005      	str	r5, [r0, #0]
 8024418:	e7d6      	b.n	80243c8 <_malloc_r+0xa8>
 802441a:	bf00      	nop
 802441c:	20002cf8 	.word	0x20002cf8

08024420 <__malloc_lock>:
 8024420:	4801      	ldr	r0, [pc, #4]	@ (8024428 <__malloc_lock+0x8>)
 8024422:	f000 bfae 	b.w	8025382 <__retarget_lock_acquire_recursive>
 8024426:	bf00      	nop
 8024428:	20002e3c 	.word	0x20002e3c

0802442c <__malloc_unlock>:
 802442c:	4801      	ldr	r0, [pc, #4]	@ (8024434 <__malloc_unlock+0x8>)
 802442e:	f000 bfa9 	b.w	8025384 <__retarget_lock_release_recursive>
 8024432:	bf00      	nop
 8024434:	20002e3c 	.word	0x20002e3c

08024438 <__cxa_atexit>:
 8024438:	b510      	push	{r4, lr}
 802443a:	4604      	mov	r4, r0
 802443c:	4804      	ldr	r0, [pc, #16]	@ (8024450 <__cxa_atexit+0x18>)
 802443e:	4613      	mov	r3, r2
 8024440:	b120      	cbz	r0, 802444c <__cxa_atexit+0x14>
 8024442:	460a      	mov	r2, r1
 8024444:	2002      	movs	r0, #2
 8024446:	4621      	mov	r1, r4
 8024448:	f000 ffb4 	bl	80253b4 <__register_exitproc>
 802444c:	bd10      	pop	{r4, pc}
 802444e:	bf00      	nop
 8024450:	080253b5 	.word	0x080253b5

08024454 <__cvt>:
 8024454:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8024458:	ec57 6b10 	vmov	r6, r7, d0
 802445c:	2f00      	cmp	r7, #0
 802445e:	460c      	mov	r4, r1
 8024460:	4619      	mov	r1, r3
 8024462:	463b      	mov	r3, r7
 8024464:	bfbb      	ittet	lt
 8024466:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 802446a:	461f      	movlt	r7, r3
 802446c:	2300      	movge	r3, #0
 802446e:	232d      	movlt	r3, #45	@ 0x2d
 8024470:	700b      	strb	r3, [r1, #0]
 8024472:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024474:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8024478:	4691      	mov	r9, r2
 802447a:	f023 0820 	bic.w	r8, r3, #32
 802447e:	bfbc      	itt	lt
 8024480:	4632      	movlt	r2, r6
 8024482:	4616      	movlt	r6, r2
 8024484:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8024488:	d005      	beq.n	8024496 <__cvt+0x42>
 802448a:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 802448e:	d100      	bne.n	8024492 <__cvt+0x3e>
 8024490:	3401      	adds	r4, #1
 8024492:	2102      	movs	r1, #2
 8024494:	e000      	b.n	8024498 <__cvt+0x44>
 8024496:	2103      	movs	r1, #3
 8024498:	ab03      	add	r3, sp, #12
 802449a:	9301      	str	r3, [sp, #4]
 802449c:	ab02      	add	r3, sp, #8
 802449e:	9300      	str	r3, [sp, #0]
 80244a0:	ec47 6b10 	vmov	d0, r6, r7
 80244a4:	4653      	mov	r3, sl
 80244a6:	4622      	mov	r2, r4
 80244a8:	f001 f86a 	bl	8025580 <_dtoa_r>
 80244ac:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 80244b0:	4605      	mov	r5, r0
 80244b2:	d119      	bne.n	80244e8 <__cvt+0x94>
 80244b4:	f019 0f01 	tst.w	r9, #1
 80244b8:	d00e      	beq.n	80244d8 <__cvt+0x84>
 80244ba:	eb00 0904 	add.w	r9, r0, r4
 80244be:	2200      	movs	r2, #0
 80244c0:	2300      	movs	r3, #0
 80244c2:	4630      	mov	r0, r6
 80244c4:	4639      	mov	r1, r7
 80244c6:	f7dc fb1f 	bl	8000b08 <__aeabi_dcmpeq>
 80244ca:	b108      	cbz	r0, 80244d0 <__cvt+0x7c>
 80244cc:	f8cd 900c 	str.w	r9, [sp, #12]
 80244d0:	2230      	movs	r2, #48	@ 0x30
 80244d2:	9b03      	ldr	r3, [sp, #12]
 80244d4:	454b      	cmp	r3, r9
 80244d6:	d31e      	bcc.n	8024516 <__cvt+0xc2>
 80244d8:	9b03      	ldr	r3, [sp, #12]
 80244da:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80244dc:	1b5b      	subs	r3, r3, r5
 80244de:	4628      	mov	r0, r5
 80244e0:	6013      	str	r3, [r2, #0]
 80244e2:	b004      	add	sp, #16
 80244e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80244e8:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80244ec:	eb00 0904 	add.w	r9, r0, r4
 80244f0:	d1e5      	bne.n	80244be <__cvt+0x6a>
 80244f2:	7803      	ldrb	r3, [r0, #0]
 80244f4:	2b30      	cmp	r3, #48	@ 0x30
 80244f6:	d10a      	bne.n	802450e <__cvt+0xba>
 80244f8:	2200      	movs	r2, #0
 80244fa:	2300      	movs	r3, #0
 80244fc:	4630      	mov	r0, r6
 80244fe:	4639      	mov	r1, r7
 8024500:	f7dc fb02 	bl	8000b08 <__aeabi_dcmpeq>
 8024504:	b918      	cbnz	r0, 802450e <__cvt+0xba>
 8024506:	f1c4 0401 	rsb	r4, r4, #1
 802450a:	f8ca 4000 	str.w	r4, [sl]
 802450e:	f8da 3000 	ldr.w	r3, [sl]
 8024512:	4499      	add	r9, r3
 8024514:	e7d3      	b.n	80244be <__cvt+0x6a>
 8024516:	1c59      	adds	r1, r3, #1
 8024518:	9103      	str	r1, [sp, #12]
 802451a:	701a      	strb	r2, [r3, #0]
 802451c:	e7d9      	b.n	80244d2 <__cvt+0x7e>

0802451e <__exponent>:
 802451e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8024520:	2900      	cmp	r1, #0
 8024522:	bfba      	itte	lt
 8024524:	4249      	neglt	r1, r1
 8024526:	232d      	movlt	r3, #45	@ 0x2d
 8024528:	232b      	movge	r3, #43	@ 0x2b
 802452a:	2909      	cmp	r1, #9
 802452c:	7002      	strb	r2, [r0, #0]
 802452e:	7043      	strb	r3, [r0, #1]
 8024530:	dd29      	ble.n	8024586 <__exponent+0x68>
 8024532:	f10d 0307 	add.w	r3, sp, #7
 8024536:	461d      	mov	r5, r3
 8024538:	270a      	movs	r7, #10
 802453a:	461a      	mov	r2, r3
 802453c:	fbb1 f6f7 	udiv	r6, r1, r7
 8024540:	fb07 1416 	mls	r4, r7, r6, r1
 8024544:	3430      	adds	r4, #48	@ 0x30
 8024546:	f802 4c01 	strb.w	r4, [r2, #-1]
 802454a:	460c      	mov	r4, r1
 802454c:	2c63      	cmp	r4, #99	@ 0x63
 802454e:	f103 33ff 	add.w	r3, r3, #4294967295
 8024552:	4631      	mov	r1, r6
 8024554:	dcf1      	bgt.n	802453a <__exponent+0x1c>
 8024556:	3130      	adds	r1, #48	@ 0x30
 8024558:	1e94      	subs	r4, r2, #2
 802455a:	f803 1c01 	strb.w	r1, [r3, #-1]
 802455e:	1c41      	adds	r1, r0, #1
 8024560:	4623      	mov	r3, r4
 8024562:	42ab      	cmp	r3, r5
 8024564:	d30a      	bcc.n	802457c <__exponent+0x5e>
 8024566:	f10d 0309 	add.w	r3, sp, #9
 802456a:	1a9b      	subs	r3, r3, r2
 802456c:	42ac      	cmp	r4, r5
 802456e:	bf88      	it	hi
 8024570:	2300      	movhi	r3, #0
 8024572:	3302      	adds	r3, #2
 8024574:	4403      	add	r3, r0
 8024576:	1a18      	subs	r0, r3, r0
 8024578:	b003      	add	sp, #12
 802457a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802457c:	f813 6b01 	ldrb.w	r6, [r3], #1
 8024580:	f801 6f01 	strb.w	r6, [r1, #1]!
 8024584:	e7ed      	b.n	8024562 <__exponent+0x44>
 8024586:	2330      	movs	r3, #48	@ 0x30
 8024588:	3130      	adds	r1, #48	@ 0x30
 802458a:	7083      	strb	r3, [r0, #2]
 802458c:	70c1      	strb	r1, [r0, #3]
 802458e:	1d03      	adds	r3, r0, #4
 8024590:	e7f1      	b.n	8024576 <__exponent+0x58>
	...

08024594 <_printf_float>:
 8024594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024598:	b08d      	sub	sp, #52	@ 0x34
 802459a:	460c      	mov	r4, r1
 802459c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80245a0:	4616      	mov	r6, r2
 80245a2:	461f      	mov	r7, r3
 80245a4:	4605      	mov	r5, r0
 80245a6:	f000 fe53 	bl	8025250 <_localeconv_r>
 80245aa:	6803      	ldr	r3, [r0, #0]
 80245ac:	9304      	str	r3, [sp, #16]
 80245ae:	4618      	mov	r0, r3
 80245b0:	f7db fe7e 	bl	80002b0 <strlen>
 80245b4:	2300      	movs	r3, #0
 80245b6:	930a      	str	r3, [sp, #40]	@ 0x28
 80245b8:	f8d8 3000 	ldr.w	r3, [r8]
 80245bc:	9005      	str	r0, [sp, #20]
 80245be:	3307      	adds	r3, #7
 80245c0:	f023 0307 	bic.w	r3, r3, #7
 80245c4:	f103 0208 	add.w	r2, r3, #8
 80245c8:	f894 a018 	ldrb.w	sl, [r4, #24]
 80245cc:	f8d4 b000 	ldr.w	fp, [r4]
 80245d0:	f8c8 2000 	str.w	r2, [r8]
 80245d4:	e9d3 8900 	ldrd	r8, r9, [r3]
 80245d8:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80245dc:	9307      	str	r3, [sp, #28]
 80245de:	f8cd 8018 	str.w	r8, [sp, #24]
 80245e2:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80245e6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80245ea:	4b9c      	ldr	r3, [pc, #624]	@ (802485c <_printf_float+0x2c8>)
 80245ec:	f04f 32ff 	mov.w	r2, #4294967295
 80245f0:	f7dc fabc 	bl	8000b6c <__aeabi_dcmpun>
 80245f4:	bb70      	cbnz	r0, 8024654 <_printf_float+0xc0>
 80245f6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80245fa:	4b98      	ldr	r3, [pc, #608]	@ (802485c <_printf_float+0x2c8>)
 80245fc:	f04f 32ff 	mov.w	r2, #4294967295
 8024600:	f7dc fa96 	bl	8000b30 <__aeabi_dcmple>
 8024604:	bb30      	cbnz	r0, 8024654 <_printf_float+0xc0>
 8024606:	2200      	movs	r2, #0
 8024608:	2300      	movs	r3, #0
 802460a:	4640      	mov	r0, r8
 802460c:	4649      	mov	r1, r9
 802460e:	f7dc fa85 	bl	8000b1c <__aeabi_dcmplt>
 8024612:	b110      	cbz	r0, 802461a <_printf_float+0x86>
 8024614:	232d      	movs	r3, #45	@ 0x2d
 8024616:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802461a:	4a91      	ldr	r2, [pc, #580]	@ (8024860 <_printf_float+0x2cc>)
 802461c:	4b91      	ldr	r3, [pc, #580]	@ (8024864 <_printf_float+0x2d0>)
 802461e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8024622:	bf94      	ite	ls
 8024624:	4690      	movls	r8, r2
 8024626:	4698      	movhi	r8, r3
 8024628:	2303      	movs	r3, #3
 802462a:	6123      	str	r3, [r4, #16]
 802462c:	f02b 0304 	bic.w	r3, fp, #4
 8024630:	6023      	str	r3, [r4, #0]
 8024632:	f04f 0900 	mov.w	r9, #0
 8024636:	9700      	str	r7, [sp, #0]
 8024638:	4633      	mov	r3, r6
 802463a:	aa0b      	add	r2, sp, #44	@ 0x2c
 802463c:	4621      	mov	r1, r4
 802463e:	4628      	mov	r0, r5
 8024640:	f000 f9d2 	bl	80249e8 <_printf_common>
 8024644:	3001      	adds	r0, #1
 8024646:	f040 808d 	bne.w	8024764 <_printf_float+0x1d0>
 802464a:	f04f 30ff 	mov.w	r0, #4294967295
 802464e:	b00d      	add	sp, #52	@ 0x34
 8024650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024654:	4642      	mov	r2, r8
 8024656:	464b      	mov	r3, r9
 8024658:	4640      	mov	r0, r8
 802465a:	4649      	mov	r1, r9
 802465c:	f7dc fa86 	bl	8000b6c <__aeabi_dcmpun>
 8024660:	b140      	cbz	r0, 8024674 <_printf_float+0xe0>
 8024662:	464b      	mov	r3, r9
 8024664:	2b00      	cmp	r3, #0
 8024666:	bfbc      	itt	lt
 8024668:	232d      	movlt	r3, #45	@ 0x2d
 802466a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 802466e:	4a7e      	ldr	r2, [pc, #504]	@ (8024868 <_printf_float+0x2d4>)
 8024670:	4b7e      	ldr	r3, [pc, #504]	@ (802486c <_printf_float+0x2d8>)
 8024672:	e7d4      	b.n	802461e <_printf_float+0x8a>
 8024674:	6863      	ldr	r3, [r4, #4]
 8024676:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 802467a:	9206      	str	r2, [sp, #24]
 802467c:	1c5a      	adds	r2, r3, #1
 802467e:	d13b      	bne.n	80246f8 <_printf_float+0x164>
 8024680:	2306      	movs	r3, #6
 8024682:	6063      	str	r3, [r4, #4]
 8024684:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8024688:	2300      	movs	r3, #0
 802468a:	6022      	str	r2, [r4, #0]
 802468c:	9303      	str	r3, [sp, #12]
 802468e:	ab0a      	add	r3, sp, #40	@ 0x28
 8024690:	e9cd a301 	strd	sl, r3, [sp, #4]
 8024694:	ab09      	add	r3, sp, #36	@ 0x24
 8024696:	9300      	str	r3, [sp, #0]
 8024698:	6861      	ldr	r1, [r4, #4]
 802469a:	ec49 8b10 	vmov	d0, r8, r9
 802469e:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 80246a2:	4628      	mov	r0, r5
 80246a4:	f7ff fed6 	bl	8024454 <__cvt>
 80246a8:	9b06      	ldr	r3, [sp, #24]
 80246aa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80246ac:	2b47      	cmp	r3, #71	@ 0x47
 80246ae:	4680      	mov	r8, r0
 80246b0:	d129      	bne.n	8024706 <_printf_float+0x172>
 80246b2:	1cc8      	adds	r0, r1, #3
 80246b4:	db02      	blt.n	80246bc <_printf_float+0x128>
 80246b6:	6863      	ldr	r3, [r4, #4]
 80246b8:	4299      	cmp	r1, r3
 80246ba:	dd41      	ble.n	8024740 <_printf_float+0x1ac>
 80246bc:	f1aa 0a02 	sub.w	sl, sl, #2
 80246c0:	fa5f fa8a 	uxtb.w	sl, sl
 80246c4:	3901      	subs	r1, #1
 80246c6:	4652      	mov	r2, sl
 80246c8:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80246cc:	9109      	str	r1, [sp, #36]	@ 0x24
 80246ce:	f7ff ff26 	bl	802451e <__exponent>
 80246d2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80246d4:	1813      	adds	r3, r2, r0
 80246d6:	2a01      	cmp	r2, #1
 80246d8:	4681      	mov	r9, r0
 80246da:	6123      	str	r3, [r4, #16]
 80246dc:	dc02      	bgt.n	80246e4 <_printf_float+0x150>
 80246de:	6822      	ldr	r2, [r4, #0]
 80246e0:	07d2      	lsls	r2, r2, #31
 80246e2:	d501      	bpl.n	80246e8 <_printf_float+0x154>
 80246e4:	3301      	adds	r3, #1
 80246e6:	6123      	str	r3, [r4, #16]
 80246e8:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 80246ec:	2b00      	cmp	r3, #0
 80246ee:	d0a2      	beq.n	8024636 <_printf_float+0xa2>
 80246f0:	232d      	movs	r3, #45	@ 0x2d
 80246f2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80246f6:	e79e      	b.n	8024636 <_printf_float+0xa2>
 80246f8:	9a06      	ldr	r2, [sp, #24]
 80246fa:	2a47      	cmp	r2, #71	@ 0x47
 80246fc:	d1c2      	bne.n	8024684 <_printf_float+0xf0>
 80246fe:	2b00      	cmp	r3, #0
 8024700:	d1c0      	bne.n	8024684 <_printf_float+0xf0>
 8024702:	2301      	movs	r3, #1
 8024704:	e7bd      	b.n	8024682 <_printf_float+0xee>
 8024706:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 802470a:	d9db      	bls.n	80246c4 <_printf_float+0x130>
 802470c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8024710:	d118      	bne.n	8024744 <_printf_float+0x1b0>
 8024712:	2900      	cmp	r1, #0
 8024714:	6863      	ldr	r3, [r4, #4]
 8024716:	dd0b      	ble.n	8024730 <_printf_float+0x19c>
 8024718:	6121      	str	r1, [r4, #16]
 802471a:	b913      	cbnz	r3, 8024722 <_printf_float+0x18e>
 802471c:	6822      	ldr	r2, [r4, #0]
 802471e:	07d0      	lsls	r0, r2, #31
 8024720:	d502      	bpl.n	8024728 <_printf_float+0x194>
 8024722:	3301      	adds	r3, #1
 8024724:	440b      	add	r3, r1
 8024726:	6123      	str	r3, [r4, #16]
 8024728:	65a1      	str	r1, [r4, #88]	@ 0x58
 802472a:	f04f 0900 	mov.w	r9, #0
 802472e:	e7db      	b.n	80246e8 <_printf_float+0x154>
 8024730:	b913      	cbnz	r3, 8024738 <_printf_float+0x1a4>
 8024732:	6822      	ldr	r2, [r4, #0]
 8024734:	07d2      	lsls	r2, r2, #31
 8024736:	d501      	bpl.n	802473c <_printf_float+0x1a8>
 8024738:	3302      	adds	r3, #2
 802473a:	e7f4      	b.n	8024726 <_printf_float+0x192>
 802473c:	2301      	movs	r3, #1
 802473e:	e7f2      	b.n	8024726 <_printf_float+0x192>
 8024740:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8024744:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024746:	4299      	cmp	r1, r3
 8024748:	db05      	blt.n	8024756 <_printf_float+0x1c2>
 802474a:	6823      	ldr	r3, [r4, #0]
 802474c:	6121      	str	r1, [r4, #16]
 802474e:	07d8      	lsls	r0, r3, #31
 8024750:	d5ea      	bpl.n	8024728 <_printf_float+0x194>
 8024752:	1c4b      	adds	r3, r1, #1
 8024754:	e7e7      	b.n	8024726 <_printf_float+0x192>
 8024756:	2900      	cmp	r1, #0
 8024758:	bfd4      	ite	le
 802475a:	f1c1 0202 	rsble	r2, r1, #2
 802475e:	2201      	movgt	r2, #1
 8024760:	4413      	add	r3, r2
 8024762:	e7e0      	b.n	8024726 <_printf_float+0x192>
 8024764:	6823      	ldr	r3, [r4, #0]
 8024766:	055a      	lsls	r2, r3, #21
 8024768:	d407      	bmi.n	802477a <_printf_float+0x1e6>
 802476a:	6923      	ldr	r3, [r4, #16]
 802476c:	4642      	mov	r2, r8
 802476e:	4631      	mov	r1, r6
 8024770:	4628      	mov	r0, r5
 8024772:	47b8      	blx	r7
 8024774:	3001      	adds	r0, #1
 8024776:	d12b      	bne.n	80247d0 <_printf_float+0x23c>
 8024778:	e767      	b.n	802464a <_printf_float+0xb6>
 802477a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 802477e:	f240 80dd 	bls.w	802493c <_printf_float+0x3a8>
 8024782:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8024786:	2200      	movs	r2, #0
 8024788:	2300      	movs	r3, #0
 802478a:	f7dc f9bd 	bl	8000b08 <__aeabi_dcmpeq>
 802478e:	2800      	cmp	r0, #0
 8024790:	d033      	beq.n	80247fa <_printf_float+0x266>
 8024792:	4a37      	ldr	r2, [pc, #220]	@ (8024870 <_printf_float+0x2dc>)
 8024794:	2301      	movs	r3, #1
 8024796:	4631      	mov	r1, r6
 8024798:	4628      	mov	r0, r5
 802479a:	47b8      	blx	r7
 802479c:	3001      	adds	r0, #1
 802479e:	f43f af54 	beq.w	802464a <_printf_float+0xb6>
 80247a2:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 80247a6:	4543      	cmp	r3, r8
 80247a8:	db02      	blt.n	80247b0 <_printf_float+0x21c>
 80247aa:	6823      	ldr	r3, [r4, #0]
 80247ac:	07d8      	lsls	r0, r3, #31
 80247ae:	d50f      	bpl.n	80247d0 <_printf_float+0x23c>
 80247b0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80247b4:	4631      	mov	r1, r6
 80247b6:	4628      	mov	r0, r5
 80247b8:	47b8      	blx	r7
 80247ba:	3001      	adds	r0, #1
 80247bc:	f43f af45 	beq.w	802464a <_printf_float+0xb6>
 80247c0:	f04f 0900 	mov.w	r9, #0
 80247c4:	f108 38ff 	add.w	r8, r8, #4294967295
 80247c8:	f104 0a1a 	add.w	sl, r4, #26
 80247cc:	45c8      	cmp	r8, r9
 80247ce:	dc09      	bgt.n	80247e4 <_printf_float+0x250>
 80247d0:	6823      	ldr	r3, [r4, #0]
 80247d2:	079b      	lsls	r3, r3, #30
 80247d4:	f100 8103 	bmi.w	80249de <_printf_float+0x44a>
 80247d8:	68e0      	ldr	r0, [r4, #12]
 80247da:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80247dc:	4298      	cmp	r0, r3
 80247de:	bfb8      	it	lt
 80247e0:	4618      	movlt	r0, r3
 80247e2:	e734      	b.n	802464e <_printf_float+0xba>
 80247e4:	2301      	movs	r3, #1
 80247e6:	4652      	mov	r2, sl
 80247e8:	4631      	mov	r1, r6
 80247ea:	4628      	mov	r0, r5
 80247ec:	47b8      	blx	r7
 80247ee:	3001      	adds	r0, #1
 80247f0:	f43f af2b 	beq.w	802464a <_printf_float+0xb6>
 80247f4:	f109 0901 	add.w	r9, r9, #1
 80247f8:	e7e8      	b.n	80247cc <_printf_float+0x238>
 80247fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80247fc:	2b00      	cmp	r3, #0
 80247fe:	dc39      	bgt.n	8024874 <_printf_float+0x2e0>
 8024800:	4a1b      	ldr	r2, [pc, #108]	@ (8024870 <_printf_float+0x2dc>)
 8024802:	2301      	movs	r3, #1
 8024804:	4631      	mov	r1, r6
 8024806:	4628      	mov	r0, r5
 8024808:	47b8      	blx	r7
 802480a:	3001      	adds	r0, #1
 802480c:	f43f af1d 	beq.w	802464a <_printf_float+0xb6>
 8024810:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8024814:	ea59 0303 	orrs.w	r3, r9, r3
 8024818:	d102      	bne.n	8024820 <_printf_float+0x28c>
 802481a:	6823      	ldr	r3, [r4, #0]
 802481c:	07d9      	lsls	r1, r3, #31
 802481e:	d5d7      	bpl.n	80247d0 <_printf_float+0x23c>
 8024820:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8024824:	4631      	mov	r1, r6
 8024826:	4628      	mov	r0, r5
 8024828:	47b8      	blx	r7
 802482a:	3001      	adds	r0, #1
 802482c:	f43f af0d 	beq.w	802464a <_printf_float+0xb6>
 8024830:	f04f 0a00 	mov.w	sl, #0
 8024834:	f104 0b1a 	add.w	fp, r4, #26
 8024838:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802483a:	425b      	negs	r3, r3
 802483c:	4553      	cmp	r3, sl
 802483e:	dc01      	bgt.n	8024844 <_printf_float+0x2b0>
 8024840:	464b      	mov	r3, r9
 8024842:	e793      	b.n	802476c <_printf_float+0x1d8>
 8024844:	2301      	movs	r3, #1
 8024846:	465a      	mov	r2, fp
 8024848:	4631      	mov	r1, r6
 802484a:	4628      	mov	r0, r5
 802484c:	47b8      	blx	r7
 802484e:	3001      	adds	r0, #1
 8024850:	f43f aefb 	beq.w	802464a <_printf_float+0xb6>
 8024854:	f10a 0a01 	add.w	sl, sl, #1
 8024858:	e7ee      	b.n	8024838 <_printf_float+0x2a4>
 802485a:	bf00      	nop
 802485c:	7fefffff 	.word	0x7fefffff
 8024860:	0802a0c8 	.word	0x0802a0c8
 8024864:	0802a0cc 	.word	0x0802a0cc
 8024868:	0802a0d0 	.word	0x0802a0d0
 802486c:	0802a0d4 	.word	0x0802a0d4
 8024870:	0802a0d8 	.word	0x0802a0d8
 8024874:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8024876:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 802487a:	4553      	cmp	r3, sl
 802487c:	bfa8      	it	ge
 802487e:	4653      	movge	r3, sl
 8024880:	2b00      	cmp	r3, #0
 8024882:	4699      	mov	r9, r3
 8024884:	dc36      	bgt.n	80248f4 <_printf_float+0x360>
 8024886:	f04f 0b00 	mov.w	fp, #0
 802488a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 802488e:	f104 021a 	add.w	r2, r4, #26
 8024892:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8024894:	9306      	str	r3, [sp, #24]
 8024896:	eba3 0309 	sub.w	r3, r3, r9
 802489a:	455b      	cmp	r3, fp
 802489c:	dc31      	bgt.n	8024902 <_printf_float+0x36e>
 802489e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80248a0:	459a      	cmp	sl, r3
 80248a2:	dc3a      	bgt.n	802491a <_printf_float+0x386>
 80248a4:	6823      	ldr	r3, [r4, #0]
 80248a6:	07da      	lsls	r2, r3, #31
 80248a8:	d437      	bmi.n	802491a <_printf_float+0x386>
 80248aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80248ac:	ebaa 0903 	sub.w	r9, sl, r3
 80248b0:	9b06      	ldr	r3, [sp, #24]
 80248b2:	ebaa 0303 	sub.w	r3, sl, r3
 80248b6:	4599      	cmp	r9, r3
 80248b8:	bfa8      	it	ge
 80248ba:	4699      	movge	r9, r3
 80248bc:	f1b9 0f00 	cmp.w	r9, #0
 80248c0:	dc33      	bgt.n	802492a <_printf_float+0x396>
 80248c2:	f04f 0800 	mov.w	r8, #0
 80248c6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80248ca:	f104 0b1a 	add.w	fp, r4, #26
 80248ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80248d0:	ebaa 0303 	sub.w	r3, sl, r3
 80248d4:	eba3 0309 	sub.w	r3, r3, r9
 80248d8:	4543      	cmp	r3, r8
 80248da:	f77f af79 	ble.w	80247d0 <_printf_float+0x23c>
 80248de:	2301      	movs	r3, #1
 80248e0:	465a      	mov	r2, fp
 80248e2:	4631      	mov	r1, r6
 80248e4:	4628      	mov	r0, r5
 80248e6:	47b8      	blx	r7
 80248e8:	3001      	adds	r0, #1
 80248ea:	f43f aeae 	beq.w	802464a <_printf_float+0xb6>
 80248ee:	f108 0801 	add.w	r8, r8, #1
 80248f2:	e7ec      	b.n	80248ce <_printf_float+0x33a>
 80248f4:	4642      	mov	r2, r8
 80248f6:	4631      	mov	r1, r6
 80248f8:	4628      	mov	r0, r5
 80248fa:	47b8      	blx	r7
 80248fc:	3001      	adds	r0, #1
 80248fe:	d1c2      	bne.n	8024886 <_printf_float+0x2f2>
 8024900:	e6a3      	b.n	802464a <_printf_float+0xb6>
 8024902:	2301      	movs	r3, #1
 8024904:	4631      	mov	r1, r6
 8024906:	4628      	mov	r0, r5
 8024908:	9206      	str	r2, [sp, #24]
 802490a:	47b8      	blx	r7
 802490c:	3001      	adds	r0, #1
 802490e:	f43f ae9c 	beq.w	802464a <_printf_float+0xb6>
 8024912:	9a06      	ldr	r2, [sp, #24]
 8024914:	f10b 0b01 	add.w	fp, fp, #1
 8024918:	e7bb      	b.n	8024892 <_printf_float+0x2fe>
 802491a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 802491e:	4631      	mov	r1, r6
 8024920:	4628      	mov	r0, r5
 8024922:	47b8      	blx	r7
 8024924:	3001      	adds	r0, #1
 8024926:	d1c0      	bne.n	80248aa <_printf_float+0x316>
 8024928:	e68f      	b.n	802464a <_printf_float+0xb6>
 802492a:	9a06      	ldr	r2, [sp, #24]
 802492c:	464b      	mov	r3, r9
 802492e:	4442      	add	r2, r8
 8024930:	4631      	mov	r1, r6
 8024932:	4628      	mov	r0, r5
 8024934:	47b8      	blx	r7
 8024936:	3001      	adds	r0, #1
 8024938:	d1c3      	bne.n	80248c2 <_printf_float+0x32e>
 802493a:	e686      	b.n	802464a <_printf_float+0xb6>
 802493c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8024940:	f1ba 0f01 	cmp.w	sl, #1
 8024944:	dc01      	bgt.n	802494a <_printf_float+0x3b6>
 8024946:	07db      	lsls	r3, r3, #31
 8024948:	d536      	bpl.n	80249b8 <_printf_float+0x424>
 802494a:	2301      	movs	r3, #1
 802494c:	4642      	mov	r2, r8
 802494e:	4631      	mov	r1, r6
 8024950:	4628      	mov	r0, r5
 8024952:	47b8      	blx	r7
 8024954:	3001      	adds	r0, #1
 8024956:	f43f ae78 	beq.w	802464a <_printf_float+0xb6>
 802495a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 802495e:	4631      	mov	r1, r6
 8024960:	4628      	mov	r0, r5
 8024962:	47b8      	blx	r7
 8024964:	3001      	adds	r0, #1
 8024966:	f43f ae70 	beq.w	802464a <_printf_float+0xb6>
 802496a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 802496e:	2200      	movs	r2, #0
 8024970:	2300      	movs	r3, #0
 8024972:	f10a 3aff 	add.w	sl, sl, #4294967295
 8024976:	f7dc f8c7 	bl	8000b08 <__aeabi_dcmpeq>
 802497a:	b9c0      	cbnz	r0, 80249ae <_printf_float+0x41a>
 802497c:	4653      	mov	r3, sl
 802497e:	f108 0201 	add.w	r2, r8, #1
 8024982:	4631      	mov	r1, r6
 8024984:	4628      	mov	r0, r5
 8024986:	47b8      	blx	r7
 8024988:	3001      	adds	r0, #1
 802498a:	d10c      	bne.n	80249a6 <_printf_float+0x412>
 802498c:	e65d      	b.n	802464a <_printf_float+0xb6>
 802498e:	2301      	movs	r3, #1
 8024990:	465a      	mov	r2, fp
 8024992:	4631      	mov	r1, r6
 8024994:	4628      	mov	r0, r5
 8024996:	47b8      	blx	r7
 8024998:	3001      	adds	r0, #1
 802499a:	f43f ae56 	beq.w	802464a <_printf_float+0xb6>
 802499e:	f108 0801 	add.w	r8, r8, #1
 80249a2:	45d0      	cmp	r8, sl
 80249a4:	dbf3      	blt.n	802498e <_printf_float+0x3fa>
 80249a6:	464b      	mov	r3, r9
 80249a8:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80249ac:	e6df      	b.n	802476e <_printf_float+0x1da>
 80249ae:	f04f 0800 	mov.w	r8, #0
 80249b2:	f104 0b1a 	add.w	fp, r4, #26
 80249b6:	e7f4      	b.n	80249a2 <_printf_float+0x40e>
 80249b8:	2301      	movs	r3, #1
 80249ba:	4642      	mov	r2, r8
 80249bc:	e7e1      	b.n	8024982 <_printf_float+0x3ee>
 80249be:	2301      	movs	r3, #1
 80249c0:	464a      	mov	r2, r9
 80249c2:	4631      	mov	r1, r6
 80249c4:	4628      	mov	r0, r5
 80249c6:	47b8      	blx	r7
 80249c8:	3001      	adds	r0, #1
 80249ca:	f43f ae3e 	beq.w	802464a <_printf_float+0xb6>
 80249ce:	f108 0801 	add.w	r8, r8, #1
 80249d2:	68e3      	ldr	r3, [r4, #12]
 80249d4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80249d6:	1a5b      	subs	r3, r3, r1
 80249d8:	4543      	cmp	r3, r8
 80249da:	dcf0      	bgt.n	80249be <_printf_float+0x42a>
 80249dc:	e6fc      	b.n	80247d8 <_printf_float+0x244>
 80249de:	f04f 0800 	mov.w	r8, #0
 80249e2:	f104 0919 	add.w	r9, r4, #25
 80249e6:	e7f4      	b.n	80249d2 <_printf_float+0x43e>

080249e8 <_printf_common>:
 80249e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80249ec:	4616      	mov	r6, r2
 80249ee:	4698      	mov	r8, r3
 80249f0:	688a      	ldr	r2, [r1, #8]
 80249f2:	690b      	ldr	r3, [r1, #16]
 80249f4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80249f8:	4293      	cmp	r3, r2
 80249fa:	bfb8      	it	lt
 80249fc:	4613      	movlt	r3, r2
 80249fe:	6033      	str	r3, [r6, #0]
 8024a00:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8024a04:	4607      	mov	r7, r0
 8024a06:	460c      	mov	r4, r1
 8024a08:	b10a      	cbz	r2, 8024a0e <_printf_common+0x26>
 8024a0a:	3301      	adds	r3, #1
 8024a0c:	6033      	str	r3, [r6, #0]
 8024a0e:	6823      	ldr	r3, [r4, #0]
 8024a10:	0699      	lsls	r1, r3, #26
 8024a12:	bf42      	ittt	mi
 8024a14:	6833      	ldrmi	r3, [r6, #0]
 8024a16:	3302      	addmi	r3, #2
 8024a18:	6033      	strmi	r3, [r6, #0]
 8024a1a:	6825      	ldr	r5, [r4, #0]
 8024a1c:	f015 0506 	ands.w	r5, r5, #6
 8024a20:	d106      	bne.n	8024a30 <_printf_common+0x48>
 8024a22:	f104 0a19 	add.w	sl, r4, #25
 8024a26:	68e3      	ldr	r3, [r4, #12]
 8024a28:	6832      	ldr	r2, [r6, #0]
 8024a2a:	1a9b      	subs	r3, r3, r2
 8024a2c:	42ab      	cmp	r3, r5
 8024a2e:	dc26      	bgt.n	8024a7e <_printf_common+0x96>
 8024a30:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8024a34:	6822      	ldr	r2, [r4, #0]
 8024a36:	3b00      	subs	r3, #0
 8024a38:	bf18      	it	ne
 8024a3a:	2301      	movne	r3, #1
 8024a3c:	0692      	lsls	r2, r2, #26
 8024a3e:	d42b      	bmi.n	8024a98 <_printf_common+0xb0>
 8024a40:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8024a44:	4641      	mov	r1, r8
 8024a46:	4638      	mov	r0, r7
 8024a48:	47c8      	blx	r9
 8024a4a:	3001      	adds	r0, #1
 8024a4c:	d01e      	beq.n	8024a8c <_printf_common+0xa4>
 8024a4e:	6823      	ldr	r3, [r4, #0]
 8024a50:	6922      	ldr	r2, [r4, #16]
 8024a52:	f003 0306 	and.w	r3, r3, #6
 8024a56:	2b04      	cmp	r3, #4
 8024a58:	bf02      	ittt	eq
 8024a5a:	68e5      	ldreq	r5, [r4, #12]
 8024a5c:	6833      	ldreq	r3, [r6, #0]
 8024a5e:	1aed      	subeq	r5, r5, r3
 8024a60:	68a3      	ldr	r3, [r4, #8]
 8024a62:	bf0c      	ite	eq
 8024a64:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8024a68:	2500      	movne	r5, #0
 8024a6a:	4293      	cmp	r3, r2
 8024a6c:	bfc4      	itt	gt
 8024a6e:	1a9b      	subgt	r3, r3, r2
 8024a70:	18ed      	addgt	r5, r5, r3
 8024a72:	2600      	movs	r6, #0
 8024a74:	341a      	adds	r4, #26
 8024a76:	42b5      	cmp	r5, r6
 8024a78:	d11a      	bne.n	8024ab0 <_printf_common+0xc8>
 8024a7a:	2000      	movs	r0, #0
 8024a7c:	e008      	b.n	8024a90 <_printf_common+0xa8>
 8024a7e:	2301      	movs	r3, #1
 8024a80:	4652      	mov	r2, sl
 8024a82:	4641      	mov	r1, r8
 8024a84:	4638      	mov	r0, r7
 8024a86:	47c8      	blx	r9
 8024a88:	3001      	adds	r0, #1
 8024a8a:	d103      	bne.n	8024a94 <_printf_common+0xac>
 8024a8c:	f04f 30ff 	mov.w	r0, #4294967295
 8024a90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024a94:	3501      	adds	r5, #1
 8024a96:	e7c6      	b.n	8024a26 <_printf_common+0x3e>
 8024a98:	18e1      	adds	r1, r4, r3
 8024a9a:	1c5a      	adds	r2, r3, #1
 8024a9c:	2030      	movs	r0, #48	@ 0x30
 8024a9e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8024aa2:	4422      	add	r2, r4
 8024aa4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8024aa8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8024aac:	3302      	adds	r3, #2
 8024aae:	e7c7      	b.n	8024a40 <_printf_common+0x58>
 8024ab0:	2301      	movs	r3, #1
 8024ab2:	4622      	mov	r2, r4
 8024ab4:	4641      	mov	r1, r8
 8024ab6:	4638      	mov	r0, r7
 8024ab8:	47c8      	blx	r9
 8024aba:	3001      	adds	r0, #1
 8024abc:	d0e6      	beq.n	8024a8c <_printf_common+0xa4>
 8024abe:	3601      	adds	r6, #1
 8024ac0:	e7d9      	b.n	8024a76 <_printf_common+0x8e>
	...

08024ac4 <_printf_i>:
 8024ac4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8024ac8:	7e0f      	ldrb	r7, [r1, #24]
 8024aca:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8024acc:	2f78      	cmp	r7, #120	@ 0x78
 8024ace:	4691      	mov	r9, r2
 8024ad0:	4680      	mov	r8, r0
 8024ad2:	460c      	mov	r4, r1
 8024ad4:	469a      	mov	sl, r3
 8024ad6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8024ada:	d807      	bhi.n	8024aec <_printf_i+0x28>
 8024adc:	2f62      	cmp	r7, #98	@ 0x62
 8024ade:	d80a      	bhi.n	8024af6 <_printf_i+0x32>
 8024ae0:	2f00      	cmp	r7, #0
 8024ae2:	f000 80d2 	beq.w	8024c8a <_printf_i+0x1c6>
 8024ae6:	2f58      	cmp	r7, #88	@ 0x58
 8024ae8:	f000 80b9 	beq.w	8024c5e <_printf_i+0x19a>
 8024aec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8024af0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8024af4:	e03a      	b.n	8024b6c <_printf_i+0xa8>
 8024af6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8024afa:	2b15      	cmp	r3, #21
 8024afc:	d8f6      	bhi.n	8024aec <_printf_i+0x28>
 8024afe:	a101      	add	r1, pc, #4	@ (adr r1, 8024b04 <_printf_i+0x40>)
 8024b00:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8024b04:	08024b5d 	.word	0x08024b5d
 8024b08:	08024b71 	.word	0x08024b71
 8024b0c:	08024aed 	.word	0x08024aed
 8024b10:	08024aed 	.word	0x08024aed
 8024b14:	08024aed 	.word	0x08024aed
 8024b18:	08024aed 	.word	0x08024aed
 8024b1c:	08024b71 	.word	0x08024b71
 8024b20:	08024aed 	.word	0x08024aed
 8024b24:	08024aed 	.word	0x08024aed
 8024b28:	08024aed 	.word	0x08024aed
 8024b2c:	08024aed 	.word	0x08024aed
 8024b30:	08024c71 	.word	0x08024c71
 8024b34:	08024b9b 	.word	0x08024b9b
 8024b38:	08024c2b 	.word	0x08024c2b
 8024b3c:	08024aed 	.word	0x08024aed
 8024b40:	08024aed 	.word	0x08024aed
 8024b44:	08024c93 	.word	0x08024c93
 8024b48:	08024aed 	.word	0x08024aed
 8024b4c:	08024b9b 	.word	0x08024b9b
 8024b50:	08024aed 	.word	0x08024aed
 8024b54:	08024aed 	.word	0x08024aed
 8024b58:	08024c33 	.word	0x08024c33
 8024b5c:	6833      	ldr	r3, [r6, #0]
 8024b5e:	1d1a      	adds	r2, r3, #4
 8024b60:	681b      	ldr	r3, [r3, #0]
 8024b62:	6032      	str	r2, [r6, #0]
 8024b64:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8024b68:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8024b6c:	2301      	movs	r3, #1
 8024b6e:	e09d      	b.n	8024cac <_printf_i+0x1e8>
 8024b70:	6833      	ldr	r3, [r6, #0]
 8024b72:	6820      	ldr	r0, [r4, #0]
 8024b74:	1d19      	adds	r1, r3, #4
 8024b76:	6031      	str	r1, [r6, #0]
 8024b78:	0606      	lsls	r6, r0, #24
 8024b7a:	d501      	bpl.n	8024b80 <_printf_i+0xbc>
 8024b7c:	681d      	ldr	r5, [r3, #0]
 8024b7e:	e003      	b.n	8024b88 <_printf_i+0xc4>
 8024b80:	0645      	lsls	r5, r0, #25
 8024b82:	d5fb      	bpl.n	8024b7c <_printf_i+0xb8>
 8024b84:	f9b3 5000 	ldrsh.w	r5, [r3]
 8024b88:	2d00      	cmp	r5, #0
 8024b8a:	da03      	bge.n	8024b94 <_printf_i+0xd0>
 8024b8c:	232d      	movs	r3, #45	@ 0x2d
 8024b8e:	426d      	negs	r5, r5
 8024b90:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8024b94:	4859      	ldr	r0, [pc, #356]	@ (8024cfc <_printf_i+0x238>)
 8024b96:	230a      	movs	r3, #10
 8024b98:	e011      	b.n	8024bbe <_printf_i+0xfa>
 8024b9a:	6821      	ldr	r1, [r4, #0]
 8024b9c:	6833      	ldr	r3, [r6, #0]
 8024b9e:	0608      	lsls	r0, r1, #24
 8024ba0:	f853 5b04 	ldr.w	r5, [r3], #4
 8024ba4:	d402      	bmi.n	8024bac <_printf_i+0xe8>
 8024ba6:	0649      	lsls	r1, r1, #25
 8024ba8:	bf48      	it	mi
 8024baa:	b2ad      	uxthmi	r5, r5
 8024bac:	2f6f      	cmp	r7, #111	@ 0x6f
 8024bae:	4853      	ldr	r0, [pc, #332]	@ (8024cfc <_printf_i+0x238>)
 8024bb0:	6033      	str	r3, [r6, #0]
 8024bb2:	bf14      	ite	ne
 8024bb4:	230a      	movne	r3, #10
 8024bb6:	2308      	moveq	r3, #8
 8024bb8:	2100      	movs	r1, #0
 8024bba:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8024bbe:	6866      	ldr	r6, [r4, #4]
 8024bc0:	60a6      	str	r6, [r4, #8]
 8024bc2:	2e00      	cmp	r6, #0
 8024bc4:	bfa2      	ittt	ge
 8024bc6:	6821      	ldrge	r1, [r4, #0]
 8024bc8:	f021 0104 	bicge.w	r1, r1, #4
 8024bcc:	6021      	strge	r1, [r4, #0]
 8024bce:	b90d      	cbnz	r5, 8024bd4 <_printf_i+0x110>
 8024bd0:	2e00      	cmp	r6, #0
 8024bd2:	d04b      	beq.n	8024c6c <_printf_i+0x1a8>
 8024bd4:	4616      	mov	r6, r2
 8024bd6:	fbb5 f1f3 	udiv	r1, r5, r3
 8024bda:	fb03 5711 	mls	r7, r3, r1, r5
 8024bde:	5dc7      	ldrb	r7, [r0, r7]
 8024be0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8024be4:	462f      	mov	r7, r5
 8024be6:	42bb      	cmp	r3, r7
 8024be8:	460d      	mov	r5, r1
 8024bea:	d9f4      	bls.n	8024bd6 <_printf_i+0x112>
 8024bec:	2b08      	cmp	r3, #8
 8024bee:	d10b      	bne.n	8024c08 <_printf_i+0x144>
 8024bf0:	6823      	ldr	r3, [r4, #0]
 8024bf2:	07df      	lsls	r7, r3, #31
 8024bf4:	d508      	bpl.n	8024c08 <_printf_i+0x144>
 8024bf6:	6923      	ldr	r3, [r4, #16]
 8024bf8:	6861      	ldr	r1, [r4, #4]
 8024bfa:	4299      	cmp	r1, r3
 8024bfc:	bfde      	ittt	le
 8024bfe:	2330      	movle	r3, #48	@ 0x30
 8024c00:	f806 3c01 	strble.w	r3, [r6, #-1]
 8024c04:	f106 36ff 	addle.w	r6, r6, #4294967295
 8024c08:	1b92      	subs	r2, r2, r6
 8024c0a:	6122      	str	r2, [r4, #16]
 8024c0c:	f8cd a000 	str.w	sl, [sp]
 8024c10:	464b      	mov	r3, r9
 8024c12:	aa03      	add	r2, sp, #12
 8024c14:	4621      	mov	r1, r4
 8024c16:	4640      	mov	r0, r8
 8024c18:	f7ff fee6 	bl	80249e8 <_printf_common>
 8024c1c:	3001      	adds	r0, #1
 8024c1e:	d14a      	bne.n	8024cb6 <_printf_i+0x1f2>
 8024c20:	f04f 30ff 	mov.w	r0, #4294967295
 8024c24:	b004      	add	sp, #16
 8024c26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024c2a:	6823      	ldr	r3, [r4, #0]
 8024c2c:	f043 0320 	orr.w	r3, r3, #32
 8024c30:	6023      	str	r3, [r4, #0]
 8024c32:	4833      	ldr	r0, [pc, #204]	@ (8024d00 <_printf_i+0x23c>)
 8024c34:	2778      	movs	r7, #120	@ 0x78
 8024c36:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8024c3a:	6823      	ldr	r3, [r4, #0]
 8024c3c:	6831      	ldr	r1, [r6, #0]
 8024c3e:	061f      	lsls	r7, r3, #24
 8024c40:	f851 5b04 	ldr.w	r5, [r1], #4
 8024c44:	d402      	bmi.n	8024c4c <_printf_i+0x188>
 8024c46:	065f      	lsls	r7, r3, #25
 8024c48:	bf48      	it	mi
 8024c4a:	b2ad      	uxthmi	r5, r5
 8024c4c:	6031      	str	r1, [r6, #0]
 8024c4e:	07d9      	lsls	r1, r3, #31
 8024c50:	bf44      	itt	mi
 8024c52:	f043 0320 	orrmi.w	r3, r3, #32
 8024c56:	6023      	strmi	r3, [r4, #0]
 8024c58:	b11d      	cbz	r5, 8024c62 <_printf_i+0x19e>
 8024c5a:	2310      	movs	r3, #16
 8024c5c:	e7ac      	b.n	8024bb8 <_printf_i+0xf4>
 8024c5e:	4827      	ldr	r0, [pc, #156]	@ (8024cfc <_printf_i+0x238>)
 8024c60:	e7e9      	b.n	8024c36 <_printf_i+0x172>
 8024c62:	6823      	ldr	r3, [r4, #0]
 8024c64:	f023 0320 	bic.w	r3, r3, #32
 8024c68:	6023      	str	r3, [r4, #0]
 8024c6a:	e7f6      	b.n	8024c5a <_printf_i+0x196>
 8024c6c:	4616      	mov	r6, r2
 8024c6e:	e7bd      	b.n	8024bec <_printf_i+0x128>
 8024c70:	6833      	ldr	r3, [r6, #0]
 8024c72:	6825      	ldr	r5, [r4, #0]
 8024c74:	6961      	ldr	r1, [r4, #20]
 8024c76:	1d18      	adds	r0, r3, #4
 8024c78:	6030      	str	r0, [r6, #0]
 8024c7a:	062e      	lsls	r6, r5, #24
 8024c7c:	681b      	ldr	r3, [r3, #0]
 8024c7e:	d501      	bpl.n	8024c84 <_printf_i+0x1c0>
 8024c80:	6019      	str	r1, [r3, #0]
 8024c82:	e002      	b.n	8024c8a <_printf_i+0x1c6>
 8024c84:	0668      	lsls	r0, r5, #25
 8024c86:	d5fb      	bpl.n	8024c80 <_printf_i+0x1bc>
 8024c88:	8019      	strh	r1, [r3, #0]
 8024c8a:	2300      	movs	r3, #0
 8024c8c:	6123      	str	r3, [r4, #16]
 8024c8e:	4616      	mov	r6, r2
 8024c90:	e7bc      	b.n	8024c0c <_printf_i+0x148>
 8024c92:	6833      	ldr	r3, [r6, #0]
 8024c94:	1d1a      	adds	r2, r3, #4
 8024c96:	6032      	str	r2, [r6, #0]
 8024c98:	681e      	ldr	r6, [r3, #0]
 8024c9a:	6862      	ldr	r2, [r4, #4]
 8024c9c:	2100      	movs	r1, #0
 8024c9e:	4630      	mov	r0, r6
 8024ca0:	f7db fab6 	bl	8000210 <memchr>
 8024ca4:	b108      	cbz	r0, 8024caa <_printf_i+0x1e6>
 8024ca6:	1b80      	subs	r0, r0, r6
 8024ca8:	6060      	str	r0, [r4, #4]
 8024caa:	6863      	ldr	r3, [r4, #4]
 8024cac:	6123      	str	r3, [r4, #16]
 8024cae:	2300      	movs	r3, #0
 8024cb0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8024cb4:	e7aa      	b.n	8024c0c <_printf_i+0x148>
 8024cb6:	6923      	ldr	r3, [r4, #16]
 8024cb8:	4632      	mov	r2, r6
 8024cba:	4649      	mov	r1, r9
 8024cbc:	4640      	mov	r0, r8
 8024cbe:	47d0      	blx	sl
 8024cc0:	3001      	adds	r0, #1
 8024cc2:	d0ad      	beq.n	8024c20 <_printf_i+0x15c>
 8024cc4:	6823      	ldr	r3, [r4, #0]
 8024cc6:	079b      	lsls	r3, r3, #30
 8024cc8:	d413      	bmi.n	8024cf2 <_printf_i+0x22e>
 8024cca:	68e0      	ldr	r0, [r4, #12]
 8024ccc:	9b03      	ldr	r3, [sp, #12]
 8024cce:	4298      	cmp	r0, r3
 8024cd0:	bfb8      	it	lt
 8024cd2:	4618      	movlt	r0, r3
 8024cd4:	e7a6      	b.n	8024c24 <_printf_i+0x160>
 8024cd6:	2301      	movs	r3, #1
 8024cd8:	4632      	mov	r2, r6
 8024cda:	4649      	mov	r1, r9
 8024cdc:	4640      	mov	r0, r8
 8024cde:	47d0      	blx	sl
 8024ce0:	3001      	adds	r0, #1
 8024ce2:	d09d      	beq.n	8024c20 <_printf_i+0x15c>
 8024ce4:	3501      	adds	r5, #1
 8024ce6:	68e3      	ldr	r3, [r4, #12]
 8024ce8:	9903      	ldr	r1, [sp, #12]
 8024cea:	1a5b      	subs	r3, r3, r1
 8024cec:	42ab      	cmp	r3, r5
 8024cee:	dcf2      	bgt.n	8024cd6 <_printf_i+0x212>
 8024cf0:	e7eb      	b.n	8024cca <_printf_i+0x206>
 8024cf2:	2500      	movs	r5, #0
 8024cf4:	f104 0619 	add.w	r6, r4, #25
 8024cf8:	e7f5      	b.n	8024ce6 <_printf_i+0x222>
 8024cfa:	bf00      	nop
 8024cfc:	0802a0da 	.word	0x0802a0da
 8024d00:	0802a0eb 	.word	0x0802a0eb

08024d04 <std>:
 8024d04:	2300      	movs	r3, #0
 8024d06:	b510      	push	{r4, lr}
 8024d08:	4604      	mov	r4, r0
 8024d0a:	e9c0 3300 	strd	r3, r3, [r0]
 8024d0e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8024d12:	6083      	str	r3, [r0, #8]
 8024d14:	8181      	strh	r1, [r0, #12]
 8024d16:	6643      	str	r3, [r0, #100]	@ 0x64
 8024d18:	81c2      	strh	r2, [r0, #14]
 8024d1a:	6183      	str	r3, [r0, #24]
 8024d1c:	4619      	mov	r1, r3
 8024d1e:	2208      	movs	r2, #8
 8024d20:	305c      	adds	r0, #92	@ 0x5c
 8024d22:	f000 fa33 	bl	802518c <memset>
 8024d26:	4b0d      	ldr	r3, [pc, #52]	@ (8024d5c <std+0x58>)
 8024d28:	6263      	str	r3, [r4, #36]	@ 0x24
 8024d2a:	4b0d      	ldr	r3, [pc, #52]	@ (8024d60 <std+0x5c>)
 8024d2c:	62a3      	str	r3, [r4, #40]	@ 0x28
 8024d2e:	4b0d      	ldr	r3, [pc, #52]	@ (8024d64 <std+0x60>)
 8024d30:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8024d32:	4b0d      	ldr	r3, [pc, #52]	@ (8024d68 <std+0x64>)
 8024d34:	6323      	str	r3, [r4, #48]	@ 0x30
 8024d36:	4b0d      	ldr	r3, [pc, #52]	@ (8024d6c <std+0x68>)
 8024d38:	6224      	str	r4, [r4, #32]
 8024d3a:	429c      	cmp	r4, r3
 8024d3c:	d006      	beq.n	8024d4c <std+0x48>
 8024d3e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8024d42:	4294      	cmp	r4, r2
 8024d44:	d002      	beq.n	8024d4c <std+0x48>
 8024d46:	33d0      	adds	r3, #208	@ 0xd0
 8024d48:	429c      	cmp	r4, r3
 8024d4a:	d105      	bne.n	8024d58 <std+0x54>
 8024d4c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8024d50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024d54:	f000 bb14 	b.w	8025380 <__retarget_lock_init_recursive>
 8024d58:	bd10      	pop	{r4, pc}
 8024d5a:	bf00      	nop
 8024d5c:	08024fdd 	.word	0x08024fdd
 8024d60:	08024fff 	.word	0x08024fff
 8024d64:	08025037 	.word	0x08025037
 8024d68:	0802505b 	.word	0x0802505b
 8024d6c:	20002cfc 	.word	0x20002cfc

08024d70 <stdio_exit_handler>:
 8024d70:	4a02      	ldr	r2, [pc, #8]	@ (8024d7c <stdio_exit_handler+0xc>)
 8024d72:	4903      	ldr	r1, [pc, #12]	@ (8024d80 <stdio_exit_handler+0x10>)
 8024d74:	4803      	ldr	r0, [pc, #12]	@ (8024d84 <stdio_exit_handler+0x14>)
 8024d76:	f000 b87b 	b.w	8024e70 <_fwalk_sglue>
 8024d7a:	bf00      	nop
 8024d7c:	200000ac 	.word	0x200000ac
 8024d80:	08026edd 	.word	0x08026edd
 8024d84:	200000bc 	.word	0x200000bc

08024d88 <cleanup_stdio>:
 8024d88:	6841      	ldr	r1, [r0, #4]
 8024d8a:	4b0c      	ldr	r3, [pc, #48]	@ (8024dbc <cleanup_stdio+0x34>)
 8024d8c:	4299      	cmp	r1, r3
 8024d8e:	b510      	push	{r4, lr}
 8024d90:	4604      	mov	r4, r0
 8024d92:	d001      	beq.n	8024d98 <cleanup_stdio+0x10>
 8024d94:	f002 f8a2 	bl	8026edc <_fflush_r>
 8024d98:	68a1      	ldr	r1, [r4, #8]
 8024d9a:	4b09      	ldr	r3, [pc, #36]	@ (8024dc0 <cleanup_stdio+0x38>)
 8024d9c:	4299      	cmp	r1, r3
 8024d9e:	d002      	beq.n	8024da6 <cleanup_stdio+0x1e>
 8024da0:	4620      	mov	r0, r4
 8024da2:	f002 f89b 	bl	8026edc <_fflush_r>
 8024da6:	68e1      	ldr	r1, [r4, #12]
 8024da8:	4b06      	ldr	r3, [pc, #24]	@ (8024dc4 <cleanup_stdio+0x3c>)
 8024daa:	4299      	cmp	r1, r3
 8024dac:	d004      	beq.n	8024db8 <cleanup_stdio+0x30>
 8024dae:	4620      	mov	r0, r4
 8024db0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024db4:	f002 b892 	b.w	8026edc <_fflush_r>
 8024db8:	bd10      	pop	{r4, pc}
 8024dba:	bf00      	nop
 8024dbc:	20002cfc 	.word	0x20002cfc
 8024dc0:	20002d64 	.word	0x20002d64
 8024dc4:	20002dcc 	.word	0x20002dcc

08024dc8 <global_stdio_init.part.0>:
 8024dc8:	b510      	push	{r4, lr}
 8024dca:	4b0b      	ldr	r3, [pc, #44]	@ (8024df8 <global_stdio_init.part.0+0x30>)
 8024dcc:	4c0b      	ldr	r4, [pc, #44]	@ (8024dfc <global_stdio_init.part.0+0x34>)
 8024dce:	4a0c      	ldr	r2, [pc, #48]	@ (8024e00 <global_stdio_init.part.0+0x38>)
 8024dd0:	601a      	str	r2, [r3, #0]
 8024dd2:	4620      	mov	r0, r4
 8024dd4:	2200      	movs	r2, #0
 8024dd6:	2104      	movs	r1, #4
 8024dd8:	f7ff ff94 	bl	8024d04 <std>
 8024ddc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8024de0:	2201      	movs	r2, #1
 8024de2:	2109      	movs	r1, #9
 8024de4:	f7ff ff8e 	bl	8024d04 <std>
 8024de8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8024dec:	2202      	movs	r2, #2
 8024dee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024df2:	2112      	movs	r1, #18
 8024df4:	f7ff bf86 	b.w	8024d04 <std>
 8024df8:	20002e34 	.word	0x20002e34
 8024dfc:	20002cfc 	.word	0x20002cfc
 8024e00:	08024d71 	.word	0x08024d71

08024e04 <__sfp_lock_acquire>:
 8024e04:	4801      	ldr	r0, [pc, #4]	@ (8024e0c <__sfp_lock_acquire+0x8>)
 8024e06:	f000 babc 	b.w	8025382 <__retarget_lock_acquire_recursive>
 8024e0a:	bf00      	nop
 8024e0c:	20002e3e 	.word	0x20002e3e

08024e10 <__sfp_lock_release>:
 8024e10:	4801      	ldr	r0, [pc, #4]	@ (8024e18 <__sfp_lock_release+0x8>)
 8024e12:	f000 bab7 	b.w	8025384 <__retarget_lock_release_recursive>
 8024e16:	bf00      	nop
 8024e18:	20002e3e 	.word	0x20002e3e

08024e1c <__sinit>:
 8024e1c:	b510      	push	{r4, lr}
 8024e1e:	4604      	mov	r4, r0
 8024e20:	f7ff fff0 	bl	8024e04 <__sfp_lock_acquire>
 8024e24:	6a23      	ldr	r3, [r4, #32]
 8024e26:	b11b      	cbz	r3, 8024e30 <__sinit+0x14>
 8024e28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024e2c:	f7ff bff0 	b.w	8024e10 <__sfp_lock_release>
 8024e30:	4b04      	ldr	r3, [pc, #16]	@ (8024e44 <__sinit+0x28>)
 8024e32:	6223      	str	r3, [r4, #32]
 8024e34:	4b04      	ldr	r3, [pc, #16]	@ (8024e48 <__sinit+0x2c>)
 8024e36:	681b      	ldr	r3, [r3, #0]
 8024e38:	2b00      	cmp	r3, #0
 8024e3a:	d1f5      	bne.n	8024e28 <__sinit+0xc>
 8024e3c:	f7ff ffc4 	bl	8024dc8 <global_stdio_init.part.0>
 8024e40:	e7f2      	b.n	8024e28 <__sinit+0xc>
 8024e42:	bf00      	nop
 8024e44:	08024d89 	.word	0x08024d89
 8024e48:	20002e34 	.word	0x20002e34

08024e4c <fiprintf>:
 8024e4c:	b40e      	push	{r1, r2, r3}
 8024e4e:	b503      	push	{r0, r1, lr}
 8024e50:	4601      	mov	r1, r0
 8024e52:	ab03      	add	r3, sp, #12
 8024e54:	4805      	ldr	r0, [pc, #20]	@ (8024e6c <fiprintf+0x20>)
 8024e56:	f853 2b04 	ldr.w	r2, [r3], #4
 8024e5a:	6800      	ldr	r0, [r0, #0]
 8024e5c:	9301      	str	r3, [sp, #4]
 8024e5e:	f001 fea1 	bl	8026ba4 <_vfiprintf_r>
 8024e62:	b002      	add	sp, #8
 8024e64:	f85d eb04 	ldr.w	lr, [sp], #4
 8024e68:	b003      	add	sp, #12
 8024e6a:	4770      	bx	lr
 8024e6c:	200000b8 	.word	0x200000b8

08024e70 <_fwalk_sglue>:
 8024e70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024e74:	4607      	mov	r7, r0
 8024e76:	4688      	mov	r8, r1
 8024e78:	4614      	mov	r4, r2
 8024e7a:	2600      	movs	r6, #0
 8024e7c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8024e80:	f1b9 0901 	subs.w	r9, r9, #1
 8024e84:	d505      	bpl.n	8024e92 <_fwalk_sglue+0x22>
 8024e86:	6824      	ldr	r4, [r4, #0]
 8024e88:	2c00      	cmp	r4, #0
 8024e8a:	d1f7      	bne.n	8024e7c <_fwalk_sglue+0xc>
 8024e8c:	4630      	mov	r0, r6
 8024e8e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024e92:	89ab      	ldrh	r3, [r5, #12]
 8024e94:	2b01      	cmp	r3, #1
 8024e96:	d907      	bls.n	8024ea8 <_fwalk_sglue+0x38>
 8024e98:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8024e9c:	3301      	adds	r3, #1
 8024e9e:	d003      	beq.n	8024ea8 <_fwalk_sglue+0x38>
 8024ea0:	4629      	mov	r1, r5
 8024ea2:	4638      	mov	r0, r7
 8024ea4:	47c0      	blx	r8
 8024ea6:	4306      	orrs	r6, r0
 8024ea8:	3568      	adds	r5, #104	@ 0x68
 8024eaa:	e7e9      	b.n	8024e80 <_fwalk_sglue+0x10>

08024eac <iprintf>:
 8024eac:	b40f      	push	{r0, r1, r2, r3}
 8024eae:	b507      	push	{r0, r1, r2, lr}
 8024eb0:	4906      	ldr	r1, [pc, #24]	@ (8024ecc <iprintf+0x20>)
 8024eb2:	ab04      	add	r3, sp, #16
 8024eb4:	6808      	ldr	r0, [r1, #0]
 8024eb6:	f853 2b04 	ldr.w	r2, [r3], #4
 8024eba:	6881      	ldr	r1, [r0, #8]
 8024ebc:	9301      	str	r3, [sp, #4]
 8024ebe:	f001 fe71 	bl	8026ba4 <_vfiprintf_r>
 8024ec2:	b003      	add	sp, #12
 8024ec4:	f85d eb04 	ldr.w	lr, [sp], #4
 8024ec8:	b004      	add	sp, #16
 8024eca:	4770      	bx	lr
 8024ecc:	200000b8 	.word	0x200000b8

08024ed0 <putchar>:
 8024ed0:	4b02      	ldr	r3, [pc, #8]	@ (8024edc <putchar+0xc>)
 8024ed2:	4601      	mov	r1, r0
 8024ed4:	6818      	ldr	r0, [r3, #0]
 8024ed6:	6882      	ldr	r2, [r0, #8]
 8024ed8:	f002 b88a 	b.w	8026ff0 <_putc_r>
 8024edc:	200000b8 	.word	0x200000b8

08024ee0 <_puts_r>:
 8024ee0:	6a03      	ldr	r3, [r0, #32]
 8024ee2:	b570      	push	{r4, r5, r6, lr}
 8024ee4:	6884      	ldr	r4, [r0, #8]
 8024ee6:	4605      	mov	r5, r0
 8024ee8:	460e      	mov	r6, r1
 8024eea:	b90b      	cbnz	r3, 8024ef0 <_puts_r+0x10>
 8024eec:	f7ff ff96 	bl	8024e1c <__sinit>
 8024ef0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8024ef2:	07db      	lsls	r3, r3, #31
 8024ef4:	d405      	bmi.n	8024f02 <_puts_r+0x22>
 8024ef6:	89a3      	ldrh	r3, [r4, #12]
 8024ef8:	0598      	lsls	r0, r3, #22
 8024efa:	d402      	bmi.n	8024f02 <_puts_r+0x22>
 8024efc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8024efe:	f000 fa40 	bl	8025382 <__retarget_lock_acquire_recursive>
 8024f02:	89a3      	ldrh	r3, [r4, #12]
 8024f04:	0719      	lsls	r1, r3, #28
 8024f06:	d502      	bpl.n	8024f0e <_puts_r+0x2e>
 8024f08:	6923      	ldr	r3, [r4, #16]
 8024f0a:	2b00      	cmp	r3, #0
 8024f0c:	d135      	bne.n	8024f7a <_puts_r+0x9a>
 8024f0e:	4621      	mov	r1, r4
 8024f10:	4628      	mov	r0, r5
 8024f12:	f000 f8e5 	bl	80250e0 <__swsetup_r>
 8024f16:	b380      	cbz	r0, 8024f7a <_puts_r+0x9a>
 8024f18:	f04f 35ff 	mov.w	r5, #4294967295
 8024f1c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8024f1e:	07da      	lsls	r2, r3, #31
 8024f20:	d405      	bmi.n	8024f2e <_puts_r+0x4e>
 8024f22:	89a3      	ldrh	r3, [r4, #12]
 8024f24:	059b      	lsls	r3, r3, #22
 8024f26:	d402      	bmi.n	8024f2e <_puts_r+0x4e>
 8024f28:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8024f2a:	f000 fa2b 	bl	8025384 <__retarget_lock_release_recursive>
 8024f2e:	4628      	mov	r0, r5
 8024f30:	bd70      	pop	{r4, r5, r6, pc}
 8024f32:	2b00      	cmp	r3, #0
 8024f34:	da04      	bge.n	8024f40 <_puts_r+0x60>
 8024f36:	69a2      	ldr	r2, [r4, #24]
 8024f38:	429a      	cmp	r2, r3
 8024f3a:	dc17      	bgt.n	8024f6c <_puts_r+0x8c>
 8024f3c:	290a      	cmp	r1, #10
 8024f3e:	d015      	beq.n	8024f6c <_puts_r+0x8c>
 8024f40:	6823      	ldr	r3, [r4, #0]
 8024f42:	1c5a      	adds	r2, r3, #1
 8024f44:	6022      	str	r2, [r4, #0]
 8024f46:	7019      	strb	r1, [r3, #0]
 8024f48:	68a3      	ldr	r3, [r4, #8]
 8024f4a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8024f4e:	3b01      	subs	r3, #1
 8024f50:	60a3      	str	r3, [r4, #8]
 8024f52:	2900      	cmp	r1, #0
 8024f54:	d1ed      	bne.n	8024f32 <_puts_r+0x52>
 8024f56:	2b00      	cmp	r3, #0
 8024f58:	da11      	bge.n	8024f7e <_puts_r+0x9e>
 8024f5a:	4622      	mov	r2, r4
 8024f5c:	210a      	movs	r1, #10
 8024f5e:	4628      	mov	r0, r5
 8024f60:	f000 f87f 	bl	8025062 <__swbuf_r>
 8024f64:	3001      	adds	r0, #1
 8024f66:	d0d7      	beq.n	8024f18 <_puts_r+0x38>
 8024f68:	250a      	movs	r5, #10
 8024f6a:	e7d7      	b.n	8024f1c <_puts_r+0x3c>
 8024f6c:	4622      	mov	r2, r4
 8024f6e:	4628      	mov	r0, r5
 8024f70:	f000 f877 	bl	8025062 <__swbuf_r>
 8024f74:	3001      	adds	r0, #1
 8024f76:	d1e7      	bne.n	8024f48 <_puts_r+0x68>
 8024f78:	e7ce      	b.n	8024f18 <_puts_r+0x38>
 8024f7a:	3e01      	subs	r6, #1
 8024f7c:	e7e4      	b.n	8024f48 <_puts_r+0x68>
 8024f7e:	6823      	ldr	r3, [r4, #0]
 8024f80:	1c5a      	adds	r2, r3, #1
 8024f82:	6022      	str	r2, [r4, #0]
 8024f84:	220a      	movs	r2, #10
 8024f86:	701a      	strb	r2, [r3, #0]
 8024f88:	e7ee      	b.n	8024f68 <_puts_r+0x88>
	...

08024f8c <puts>:
 8024f8c:	4b02      	ldr	r3, [pc, #8]	@ (8024f98 <puts+0xc>)
 8024f8e:	4601      	mov	r1, r0
 8024f90:	6818      	ldr	r0, [r3, #0]
 8024f92:	f7ff bfa5 	b.w	8024ee0 <_puts_r>
 8024f96:	bf00      	nop
 8024f98:	200000b8 	.word	0x200000b8

08024f9c <siprintf>:
 8024f9c:	b40e      	push	{r1, r2, r3}
 8024f9e:	b500      	push	{lr}
 8024fa0:	b09c      	sub	sp, #112	@ 0x70
 8024fa2:	ab1d      	add	r3, sp, #116	@ 0x74
 8024fa4:	9002      	str	r0, [sp, #8]
 8024fa6:	9006      	str	r0, [sp, #24]
 8024fa8:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8024fac:	4809      	ldr	r0, [pc, #36]	@ (8024fd4 <siprintf+0x38>)
 8024fae:	9107      	str	r1, [sp, #28]
 8024fb0:	9104      	str	r1, [sp, #16]
 8024fb2:	4909      	ldr	r1, [pc, #36]	@ (8024fd8 <siprintf+0x3c>)
 8024fb4:	f853 2b04 	ldr.w	r2, [r3], #4
 8024fb8:	9105      	str	r1, [sp, #20]
 8024fba:	6800      	ldr	r0, [r0, #0]
 8024fbc:	9301      	str	r3, [sp, #4]
 8024fbe:	a902      	add	r1, sp, #8
 8024fc0:	f001 fcca 	bl	8026958 <_svfiprintf_r>
 8024fc4:	9b02      	ldr	r3, [sp, #8]
 8024fc6:	2200      	movs	r2, #0
 8024fc8:	701a      	strb	r2, [r3, #0]
 8024fca:	b01c      	add	sp, #112	@ 0x70
 8024fcc:	f85d eb04 	ldr.w	lr, [sp], #4
 8024fd0:	b003      	add	sp, #12
 8024fd2:	4770      	bx	lr
 8024fd4:	200000b8 	.word	0x200000b8
 8024fd8:	ffff0208 	.word	0xffff0208

08024fdc <__sread>:
 8024fdc:	b510      	push	{r4, lr}
 8024fde:	460c      	mov	r4, r1
 8024fe0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8024fe4:	f000 f95a 	bl	802529c <_read_r>
 8024fe8:	2800      	cmp	r0, #0
 8024fea:	bfab      	itete	ge
 8024fec:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8024fee:	89a3      	ldrhlt	r3, [r4, #12]
 8024ff0:	181b      	addge	r3, r3, r0
 8024ff2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8024ff6:	bfac      	ite	ge
 8024ff8:	6563      	strge	r3, [r4, #84]	@ 0x54
 8024ffa:	81a3      	strhlt	r3, [r4, #12]
 8024ffc:	bd10      	pop	{r4, pc}

08024ffe <__swrite>:
 8024ffe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025002:	461f      	mov	r7, r3
 8025004:	898b      	ldrh	r3, [r1, #12]
 8025006:	05db      	lsls	r3, r3, #23
 8025008:	4605      	mov	r5, r0
 802500a:	460c      	mov	r4, r1
 802500c:	4616      	mov	r6, r2
 802500e:	d505      	bpl.n	802501c <__swrite+0x1e>
 8025010:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025014:	2302      	movs	r3, #2
 8025016:	2200      	movs	r2, #0
 8025018:	f000 f92e 	bl	8025278 <_lseek_r>
 802501c:	89a3      	ldrh	r3, [r4, #12]
 802501e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025022:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8025026:	81a3      	strh	r3, [r4, #12]
 8025028:	4632      	mov	r2, r6
 802502a:	463b      	mov	r3, r7
 802502c:	4628      	mov	r0, r5
 802502e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8025032:	f000 b969 	b.w	8025308 <_write_r>

08025036 <__sseek>:
 8025036:	b510      	push	{r4, lr}
 8025038:	460c      	mov	r4, r1
 802503a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802503e:	f000 f91b 	bl	8025278 <_lseek_r>
 8025042:	1c43      	adds	r3, r0, #1
 8025044:	89a3      	ldrh	r3, [r4, #12]
 8025046:	bf15      	itete	ne
 8025048:	6560      	strne	r0, [r4, #84]	@ 0x54
 802504a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802504e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8025052:	81a3      	strheq	r3, [r4, #12]
 8025054:	bf18      	it	ne
 8025056:	81a3      	strhne	r3, [r4, #12]
 8025058:	bd10      	pop	{r4, pc}

0802505a <__sclose>:
 802505a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802505e:	f000 b8fb 	b.w	8025258 <_close_r>

08025062 <__swbuf_r>:
 8025062:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025064:	460e      	mov	r6, r1
 8025066:	4614      	mov	r4, r2
 8025068:	4605      	mov	r5, r0
 802506a:	b118      	cbz	r0, 8025074 <__swbuf_r+0x12>
 802506c:	6a03      	ldr	r3, [r0, #32]
 802506e:	b90b      	cbnz	r3, 8025074 <__swbuf_r+0x12>
 8025070:	f7ff fed4 	bl	8024e1c <__sinit>
 8025074:	69a3      	ldr	r3, [r4, #24]
 8025076:	60a3      	str	r3, [r4, #8]
 8025078:	89a3      	ldrh	r3, [r4, #12]
 802507a:	071a      	lsls	r2, r3, #28
 802507c:	d501      	bpl.n	8025082 <__swbuf_r+0x20>
 802507e:	6923      	ldr	r3, [r4, #16]
 8025080:	b943      	cbnz	r3, 8025094 <__swbuf_r+0x32>
 8025082:	4621      	mov	r1, r4
 8025084:	4628      	mov	r0, r5
 8025086:	f000 f82b 	bl	80250e0 <__swsetup_r>
 802508a:	b118      	cbz	r0, 8025094 <__swbuf_r+0x32>
 802508c:	f04f 37ff 	mov.w	r7, #4294967295
 8025090:	4638      	mov	r0, r7
 8025092:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025094:	6823      	ldr	r3, [r4, #0]
 8025096:	6922      	ldr	r2, [r4, #16]
 8025098:	1a98      	subs	r0, r3, r2
 802509a:	6963      	ldr	r3, [r4, #20]
 802509c:	b2f6      	uxtb	r6, r6
 802509e:	4283      	cmp	r3, r0
 80250a0:	4637      	mov	r7, r6
 80250a2:	dc05      	bgt.n	80250b0 <__swbuf_r+0x4e>
 80250a4:	4621      	mov	r1, r4
 80250a6:	4628      	mov	r0, r5
 80250a8:	f001 ff18 	bl	8026edc <_fflush_r>
 80250ac:	2800      	cmp	r0, #0
 80250ae:	d1ed      	bne.n	802508c <__swbuf_r+0x2a>
 80250b0:	68a3      	ldr	r3, [r4, #8]
 80250b2:	3b01      	subs	r3, #1
 80250b4:	60a3      	str	r3, [r4, #8]
 80250b6:	6823      	ldr	r3, [r4, #0]
 80250b8:	1c5a      	adds	r2, r3, #1
 80250ba:	6022      	str	r2, [r4, #0]
 80250bc:	701e      	strb	r6, [r3, #0]
 80250be:	6962      	ldr	r2, [r4, #20]
 80250c0:	1c43      	adds	r3, r0, #1
 80250c2:	429a      	cmp	r2, r3
 80250c4:	d004      	beq.n	80250d0 <__swbuf_r+0x6e>
 80250c6:	89a3      	ldrh	r3, [r4, #12]
 80250c8:	07db      	lsls	r3, r3, #31
 80250ca:	d5e1      	bpl.n	8025090 <__swbuf_r+0x2e>
 80250cc:	2e0a      	cmp	r6, #10
 80250ce:	d1df      	bne.n	8025090 <__swbuf_r+0x2e>
 80250d0:	4621      	mov	r1, r4
 80250d2:	4628      	mov	r0, r5
 80250d4:	f001 ff02 	bl	8026edc <_fflush_r>
 80250d8:	2800      	cmp	r0, #0
 80250da:	d0d9      	beq.n	8025090 <__swbuf_r+0x2e>
 80250dc:	e7d6      	b.n	802508c <__swbuf_r+0x2a>
	...

080250e0 <__swsetup_r>:
 80250e0:	b538      	push	{r3, r4, r5, lr}
 80250e2:	4b29      	ldr	r3, [pc, #164]	@ (8025188 <__swsetup_r+0xa8>)
 80250e4:	4605      	mov	r5, r0
 80250e6:	6818      	ldr	r0, [r3, #0]
 80250e8:	460c      	mov	r4, r1
 80250ea:	b118      	cbz	r0, 80250f4 <__swsetup_r+0x14>
 80250ec:	6a03      	ldr	r3, [r0, #32]
 80250ee:	b90b      	cbnz	r3, 80250f4 <__swsetup_r+0x14>
 80250f0:	f7ff fe94 	bl	8024e1c <__sinit>
 80250f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80250f8:	0719      	lsls	r1, r3, #28
 80250fa:	d422      	bmi.n	8025142 <__swsetup_r+0x62>
 80250fc:	06da      	lsls	r2, r3, #27
 80250fe:	d407      	bmi.n	8025110 <__swsetup_r+0x30>
 8025100:	2209      	movs	r2, #9
 8025102:	602a      	str	r2, [r5, #0]
 8025104:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8025108:	81a3      	strh	r3, [r4, #12]
 802510a:	f04f 30ff 	mov.w	r0, #4294967295
 802510e:	e033      	b.n	8025178 <__swsetup_r+0x98>
 8025110:	0758      	lsls	r0, r3, #29
 8025112:	d512      	bpl.n	802513a <__swsetup_r+0x5a>
 8025114:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8025116:	b141      	cbz	r1, 802512a <__swsetup_r+0x4a>
 8025118:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802511c:	4299      	cmp	r1, r3
 802511e:	d002      	beq.n	8025126 <__swsetup_r+0x46>
 8025120:	4628      	mov	r0, r5
 8025122:	f000 fff1 	bl	8026108 <_free_r>
 8025126:	2300      	movs	r3, #0
 8025128:	6363      	str	r3, [r4, #52]	@ 0x34
 802512a:	89a3      	ldrh	r3, [r4, #12]
 802512c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8025130:	81a3      	strh	r3, [r4, #12]
 8025132:	2300      	movs	r3, #0
 8025134:	6063      	str	r3, [r4, #4]
 8025136:	6923      	ldr	r3, [r4, #16]
 8025138:	6023      	str	r3, [r4, #0]
 802513a:	89a3      	ldrh	r3, [r4, #12]
 802513c:	f043 0308 	orr.w	r3, r3, #8
 8025140:	81a3      	strh	r3, [r4, #12]
 8025142:	6923      	ldr	r3, [r4, #16]
 8025144:	b94b      	cbnz	r3, 802515a <__swsetup_r+0x7a>
 8025146:	89a3      	ldrh	r3, [r4, #12]
 8025148:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802514c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8025150:	d003      	beq.n	802515a <__swsetup_r+0x7a>
 8025152:	4621      	mov	r1, r4
 8025154:	4628      	mov	r0, r5
 8025156:	f001 ff0f 	bl	8026f78 <__smakebuf_r>
 802515a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802515e:	f013 0201 	ands.w	r2, r3, #1
 8025162:	d00a      	beq.n	802517a <__swsetup_r+0x9a>
 8025164:	2200      	movs	r2, #0
 8025166:	60a2      	str	r2, [r4, #8]
 8025168:	6962      	ldr	r2, [r4, #20]
 802516a:	4252      	negs	r2, r2
 802516c:	61a2      	str	r2, [r4, #24]
 802516e:	6922      	ldr	r2, [r4, #16]
 8025170:	b942      	cbnz	r2, 8025184 <__swsetup_r+0xa4>
 8025172:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8025176:	d1c5      	bne.n	8025104 <__swsetup_r+0x24>
 8025178:	bd38      	pop	{r3, r4, r5, pc}
 802517a:	0799      	lsls	r1, r3, #30
 802517c:	bf58      	it	pl
 802517e:	6962      	ldrpl	r2, [r4, #20]
 8025180:	60a2      	str	r2, [r4, #8]
 8025182:	e7f4      	b.n	802516e <__swsetup_r+0x8e>
 8025184:	2000      	movs	r0, #0
 8025186:	e7f7      	b.n	8025178 <__swsetup_r+0x98>
 8025188:	200000b8 	.word	0x200000b8

0802518c <memset>:
 802518c:	4402      	add	r2, r0
 802518e:	4603      	mov	r3, r0
 8025190:	4293      	cmp	r3, r2
 8025192:	d100      	bne.n	8025196 <memset+0xa>
 8025194:	4770      	bx	lr
 8025196:	f803 1b01 	strb.w	r1, [r3], #1
 802519a:	e7f9      	b.n	8025190 <memset+0x4>

0802519c <strncpy>:
 802519c:	b510      	push	{r4, lr}
 802519e:	3901      	subs	r1, #1
 80251a0:	4603      	mov	r3, r0
 80251a2:	b132      	cbz	r2, 80251b2 <strncpy+0x16>
 80251a4:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80251a8:	f803 4b01 	strb.w	r4, [r3], #1
 80251ac:	3a01      	subs	r2, #1
 80251ae:	2c00      	cmp	r4, #0
 80251b0:	d1f7      	bne.n	80251a2 <strncpy+0x6>
 80251b2:	441a      	add	r2, r3
 80251b4:	2100      	movs	r1, #0
 80251b6:	4293      	cmp	r3, r2
 80251b8:	d100      	bne.n	80251bc <strncpy+0x20>
 80251ba:	bd10      	pop	{r4, pc}
 80251bc:	f803 1b01 	strb.w	r1, [r3], #1
 80251c0:	e7f9      	b.n	80251b6 <strncpy+0x1a>

080251c2 <strstr>:
 80251c2:	780a      	ldrb	r2, [r1, #0]
 80251c4:	b570      	push	{r4, r5, r6, lr}
 80251c6:	b96a      	cbnz	r2, 80251e4 <strstr+0x22>
 80251c8:	bd70      	pop	{r4, r5, r6, pc}
 80251ca:	429a      	cmp	r2, r3
 80251cc:	d109      	bne.n	80251e2 <strstr+0x20>
 80251ce:	460c      	mov	r4, r1
 80251d0:	4605      	mov	r5, r0
 80251d2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80251d6:	2b00      	cmp	r3, #0
 80251d8:	d0f6      	beq.n	80251c8 <strstr+0x6>
 80251da:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 80251de:	429e      	cmp	r6, r3
 80251e0:	d0f7      	beq.n	80251d2 <strstr+0x10>
 80251e2:	3001      	adds	r0, #1
 80251e4:	7803      	ldrb	r3, [r0, #0]
 80251e6:	2b00      	cmp	r3, #0
 80251e8:	d1ef      	bne.n	80251ca <strstr+0x8>
 80251ea:	4618      	mov	r0, r3
 80251ec:	e7ec      	b.n	80251c8 <strstr+0x6>

080251ee <_raise_r>:
 80251ee:	291f      	cmp	r1, #31
 80251f0:	b538      	push	{r3, r4, r5, lr}
 80251f2:	4605      	mov	r5, r0
 80251f4:	460c      	mov	r4, r1
 80251f6:	d904      	bls.n	8025202 <_raise_r+0x14>
 80251f8:	2316      	movs	r3, #22
 80251fa:	6003      	str	r3, [r0, #0]
 80251fc:	f04f 30ff 	mov.w	r0, #4294967295
 8025200:	bd38      	pop	{r3, r4, r5, pc}
 8025202:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8025204:	b112      	cbz	r2, 802520c <_raise_r+0x1e>
 8025206:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802520a:	b94b      	cbnz	r3, 8025220 <_raise_r+0x32>
 802520c:	4628      	mov	r0, r5
 802520e:	f000 f869 	bl	80252e4 <_getpid_r>
 8025212:	4622      	mov	r2, r4
 8025214:	4601      	mov	r1, r0
 8025216:	4628      	mov	r0, r5
 8025218:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802521c:	f000 b850 	b.w	80252c0 <_kill_r>
 8025220:	2b01      	cmp	r3, #1
 8025222:	d00a      	beq.n	802523a <_raise_r+0x4c>
 8025224:	1c59      	adds	r1, r3, #1
 8025226:	d103      	bne.n	8025230 <_raise_r+0x42>
 8025228:	2316      	movs	r3, #22
 802522a:	6003      	str	r3, [r0, #0]
 802522c:	2001      	movs	r0, #1
 802522e:	e7e7      	b.n	8025200 <_raise_r+0x12>
 8025230:	2100      	movs	r1, #0
 8025232:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8025236:	4620      	mov	r0, r4
 8025238:	4798      	blx	r3
 802523a:	2000      	movs	r0, #0
 802523c:	e7e0      	b.n	8025200 <_raise_r+0x12>
	...

08025240 <raise>:
 8025240:	4b02      	ldr	r3, [pc, #8]	@ (802524c <raise+0xc>)
 8025242:	4601      	mov	r1, r0
 8025244:	6818      	ldr	r0, [r3, #0]
 8025246:	f7ff bfd2 	b.w	80251ee <_raise_r>
 802524a:	bf00      	nop
 802524c:	200000b8 	.word	0x200000b8

08025250 <_localeconv_r>:
 8025250:	4800      	ldr	r0, [pc, #0]	@ (8025254 <_localeconv_r+0x4>)
 8025252:	4770      	bx	lr
 8025254:	200001fc 	.word	0x200001fc

08025258 <_close_r>:
 8025258:	b538      	push	{r3, r4, r5, lr}
 802525a:	4d06      	ldr	r5, [pc, #24]	@ (8025274 <_close_r+0x1c>)
 802525c:	2300      	movs	r3, #0
 802525e:	4604      	mov	r4, r0
 8025260:	4608      	mov	r0, r1
 8025262:	602b      	str	r3, [r5, #0]
 8025264:	f7dc fde8 	bl	8001e38 <_close>
 8025268:	1c43      	adds	r3, r0, #1
 802526a:	d102      	bne.n	8025272 <_close_r+0x1a>
 802526c:	682b      	ldr	r3, [r5, #0]
 802526e:	b103      	cbz	r3, 8025272 <_close_r+0x1a>
 8025270:	6023      	str	r3, [r4, #0]
 8025272:	bd38      	pop	{r3, r4, r5, pc}
 8025274:	20002e38 	.word	0x20002e38

08025278 <_lseek_r>:
 8025278:	b538      	push	{r3, r4, r5, lr}
 802527a:	4d07      	ldr	r5, [pc, #28]	@ (8025298 <_lseek_r+0x20>)
 802527c:	4604      	mov	r4, r0
 802527e:	4608      	mov	r0, r1
 8025280:	4611      	mov	r1, r2
 8025282:	2200      	movs	r2, #0
 8025284:	602a      	str	r2, [r5, #0]
 8025286:	461a      	mov	r2, r3
 8025288:	f7dc fdfd 	bl	8001e86 <_lseek>
 802528c:	1c43      	adds	r3, r0, #1
 802528e:	d102      	bne.n	8025296 <_lseek_r+0x1e>
 8025290:	682b      	ldr	r3, [r5, #0]
 8025292:	b103      	cbz	r3, 8025296 <_lseek_r+0x1e>
 8025294:	6023      	str	r3, [r4, #0]
 8025296:	bd38      	pop	{r3, r4, r5, pc}
 8025298:	20002e38 	.word	0x20002e38

0802529c <_read_r>:
 802529c:	b538      	push	{r3, r4, r5, lr}
 802529e:	4d07      	ldr	r5, [pc, #28]	@ (80252bc <_read_r+0x20>)
 80252a0:	4604      	mov	r4, r0
 80252a2:	4608      	mov	r0, r1
 80252a4:	4611      	mov	r1, r2
 80252a6:	2200      	movs	r2, #0
 80252a8:	602a      	str	r2, [r5, #0]
 80252aa:	461a      	mov	r2, r3
 80252ac:	f7dc fd8b 	bl	8001dc6 <_read>
 80252b0:	1c43      	adds	r3, r0, #1
 80252b2:	d102      	bne.n	80252ba <_read_r+0x1e>
 80252b4:	682b      	ldr	r3, [r5, #0]
 80252b6:	b103      	cbz	r3, 80252ba <_read_r+0x1e>
 80252b8:	6023      	str	r3, [r4, #0]
 80252ba:	bd38      	pop	{r3, r4, r5, pc}
 80252bc:	20002e38 	.word	0x20002e38

080252c0 <_kill_r>:
 80252c0:	b538      	push	{r3, r4, r5, lr}
 80252c2:	4d07      	ldr	r5, [pc, #28]	@ (80252e0 <_kill_r+0x20>)
 80252c4:	2300      	movs	r3, #0
 80252c6:	4604      	mov	r4, r0
 80252c8:	4608      	mov	r0, r1
 80252ca:	4611      	mov	r1, r2
 80252cc:	602b      	str	r3, [r5, #0]
 80252ce:	f7dc fd5f 	bl	8001d90 <_kill>
 80252d2:	1c43      	adds	r3, r0, #1
 80252d4:	d102      	bne.n	80252dc <_kill_r+0x1c>
 80252d6:	682b      	ldr	r3, [r5, #0]
 80252d8:	b103      	cbz	r3, 80252dc <_kill_r+0x1c>
 80252da:	6023      	str	r3, [r4, #0]
 80252dc:	bd38      	pop	{r3, r4, r5, pc}
 80252de:	bf00      	nop
 80252e0:	20002e38 	.word	0x20002e38

080252e4 <_getpid_r>:
 80252e4:	f7dc bd4c 	b.w	8001d80 <_getpid>

080252e8 <_sbrk_r>:
 80252e8:	b538      	push	{r3, r4, r5, lr}
 80252ea:	4d06      	ldr	r5, [pc, #24]	@ (8025304 <_sbrk_r+0x1c>)
 80252ec:	2300      	movs	r3, #0
 80252ee:	4604      	mov	r4, r0
 80252f0:	4608      	mov	r0, r1
 80252f2:	602b      	str	r3, [r5, #0]
 80252f4:	f7dc fdd4 	bl	8001ea0 <_sbrk>
 80252f8:	1c43      	adds	r3, r0, #1
 80252fa:	d102      	bne.n	8025302 <_sbrk_r+0x1a>
 80252fc:	682b      	ldr	r3, [r5, #0]
 80252fe:	b103      	cbz	r3, 8025302 <_sbrk_r+0x1a>
 8025300:	6023      	str	r3, [r4, #0]
 8025302:	bd38      	pop	{r3, r4, r5, pc}
 8025304:	20002e38 	.word	0x20002e38

08025308 <_write_r>:
 8025308:	b538      	push	{r3, r4, r5, lr}
 802530a:	4d07      	ldr	r5, [pc, #28]	@ (8025328 <_write_r+0x20>)
 802530c:	4604      	mov	r4, r0
 802530e:	4608      	mov	r0, r1
 8025310:	4611      	mov	r1, r2
 8025312:	2200      	movs	r2, #0
 8025314:	602a      	str	r2, [r5, #0]
 8025316:	461a      	mov	r2, r3
 8025318:	f7dc fd72 	bl	8001e00 <_write>
 802531c:	1c43      	adds	r3, r0, #1
 802531e:	d102      	bne.n	8025326 <_write_r+0x1e>
 8025320:	682b      	ldr	r3, [r5, #0]
 8025322:	b103      	cbz	r3, 8025326 <_write_r+0x1e>
 8025324:	6023      	str	r3, [r4, #0]
 8025326:	bd38      	pop	{r3, r4, r5, pc}
 8025328:	20002e38 	.word	0x20002e38

0802532c <__errno>:
 802532c:	4b01      	ldr	r3, [pc, #4]	@ (8025334 <__errno+0x8>)
 802532e:	6818      	ldr	r0, [r3, #0]
 8025330:	4770      	bx	lr
 8025332:	bf00      	nop
 8025334:	200000b8 	.word	0x200000b8

08025338 <__libc_init_array>:
 8025338:	b570      	push	{r4, r5, r6, lr}
 802533a:	4d0d      	ldr	r5, [pc, #52]	@ (8025370 <__libc_init_array+0x38>)
 802533c:	4c0d      	ldr	r4, [pc, #52]	@ (8025374 <__libc_init_array+0x3c>)
 802533e:	1b64      	subs	r4, r4, r5
 8025340:	10a4      	asrs	r4, r4, #2
 8025342:	2600      	movs	r6, #0
 8025344:	42a6      	cmp	r6, r4
 8025346:	d109      	bne.n	802535c <__libc_init_array+0x24>
 8025348:	4d0b      	ldr	r5, [pc, #44]	@ (8025378 <__libc_init_array+0x40>)
 802534a:	4c0c      	ldr	r4, [pc, #48]	@ (802537c <__libc_init_array+0x44>)
 802534c:	f001 ff2a 	bl	80271a4 <_init>
 8025350:	1b64      	subs	r4, r4, r5
 8025352:	10a4      	asrs	r4, r4, #2
 8025354:	2600      	movs	r6, #0
 8025356:	42a6      	cmp	r6, r4
 8025358:	d105      	bne.n	8025366 <__libc_init_array+0x2e>
 802535a:	bd70      	pop	{r4, r5, r6, pc}
 802535c:	f855 3b04 	ldr.w	r3, [r5], #4
 8025360:	4798      	blx	r3
 8025362:	3601      	adds	r6, #1
 8025364:	e7ee      	b.n	8025344 <__libc_init_array+0xc>
 8025366:	f855 3b04 	ldr.w	r3, [r5], #4
 802536a:	4798      	blx	r3
 802536c:	3601      	adds	r6, #1
 802536e:	e7f2      	b.n	8025356 <__libc_init_array+0x1e>
 8025370:	0806ea64 	.word	0x0806ea64
 8025374:	0806ea64 	.word	0x0806ea64
 8025378:	0806ea64 	.word	0x0806ea64
 802537c:	0806ea7c 	.word	0x0806ea7c

08025380 <__retarget_lock_init_recursive>:
 8025380:	4770      	bx	lr

08025382 <__retarget_lock_acquire_recursive>:
 8025382:	4770      	bx	lr

08025384 <__retarget_lock_release_recursive>:
 8025384:	4770      	bx	lr

08025386 <strcpy>:
 8025386:	4603      	mov	r3, r0
 8025388:	f811 2b01 	ldrb.w	r2, [r1], #1
 802538c:	f803 2b01 	strb.w	r2, [r3], #1
 8025390:	2a00      	cmp	r2, #0
 8025392:	d1f9      	bne.n	8025388 <strcpy+0x2>
 8025394:	4770      	bx	lr

08025396 <memcpy>:
 8025396:	440a      	add	r2, r1
 8025398:	4291      	cmp	r1, r2
 802539a:	f100 33ff 	add.w	r3, r0, #4294967295
 802539e:	d100      	bne.n	80253a2 <memcpy+0xc>
 80253a0:	4770      	bx	lr
 80253a2:	b510      	push	{r4, lr}
 80253a4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80253a8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80253ac:	4291      	cmp	r1, r2
 80253ae:	d1f9      	bne.n	80253a4 <memcpy+0xe>
 80253b0:	bd10      	pop	{r4, pc}
	...

080253b4 <__register_exitproc>:
 80253b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80253b8:	4d27      	ldr	r5, [pc, #156]	@ (8025458 <__register_exitproc+0xa4>)
 80253ba:	4607      	mov	r7, r0
 80253bc:	6828      	ldr	r0, [r5, #0]
 80253be:	4691      	mov	r9, r2
 80253c0:	460e      	mov	r6, r1
 80253c2:	4698      	mov	r8, r3
 80253c4:	f7ff ffdd 	bl	8025382 <__retarget_lock_acquire_recursive>
 80253c8:	4a24      	ldr	r2, [pc, #144]	@ (802545c <__register_exitproc+0xa8>)
 80253ca:	6814      	ldr	r4, [r2, #0]
 80253cc:	b93c      	cbnz	r4, 80253de <__register_exitproc+0x2a>
 80253ce:	4b24      	ldr	r3, [pc, #144]	@ (8025460 <__register_exitproc+0xac>)
 80253d0:	6013      	str	r3, [r2, #0]
 80253d2:	4a24      	ldr	r2, [pc, #144]	@ (8025464 <__register_exitproc+0xb0>)
 80253d4:	b112      	cbz	r2, 80253dc <__register_exitproc+0x28>
 80253d6:	6812      	ldr	r2, [r2, #0]
 80253d8:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80253dc:	4c20      	ldr	r4, [pc, #128]	@ (8025460 <__register_exitproc+0xac>)
 80253de:	6863      	ldr	r3, [r4, #4]
 80253e0:	2b1f      	cmp	r3, #31
 80253e2:	dd06      	ble.n	80253f2 <__register_exitproc+0x3e>
 80253e4:	6828      	ldr	r0, [r5, #0]
 80253e6:	f7ff ffcd 	bl	8025384 <__retarget_lock_release_recursive>
 80253ea:	f04f 30ff 	mov.w	r0, #4294967295
 80253ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80253f2:	b32f      	cbz	r7, 8025440 <__register_exitproc+0x8c>
 80253f4:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 80253f8:	b968      	cbnz	r0, 8025416 <__register_exitproc+0x62>
 80253fa:	4b1b      	ldr	r3, [pc, #108]	@ (8025468 <__register_exitproc+0xb4>)
 80253fc:	2b00      	cmp	r3, #0
 80253fe:	d0f1      	beq.n	80253e4 <__register_exitproc+0x30>
 8025400:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8025404:	f7fe ff5a 	bl	80242bc <malloc>
 8025408:	2800      	cmp	r0, #0
 802540a:	d0eb      	beq.n	80253e4 <__register_exitproc+0x30>
 802540c:	2300      	movs	r3, #0
 802540e:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8025412:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8025416:	6863      	ldr	r3, [r4, #4]
 8025418:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802541c:	2201      	movs	r2, #1
 802541e:	409a      	lsls	r2, r3
 8025420:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8025424:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8025428:	4313      	orrs	r3, r2
 802542a:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802542e:	2f02      	cmp	r7, #2
 8025430:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8025434:	bf02      	ittt	eq
 8025436:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802543a:	4313      	orreq	r3, r2
 802543c:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8025440:	6863      	ldr	r3, [r4, #4]
 8025442:	6828      	ldr	r0, [r5, #0]
 8025444:	1c5a      	adds	r2, r3, #1
 8025446:	3302      	adds	r3, #2
 8025448:	6062      	str	r2, [r4, #4]
 802544a:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802544e:	f7ff ff99 	bl	8025384 <__retarget_lock_release_recursive>
 8025452:	2000      	movs	r0, #0
 8025454:	e7cb      	b.n	80253ee <__register_exitproc+0x3a>
 8025456:	bf00      	nop
 8025458:	20000108 	.word	0x20000108
 802545c:	20002ecc 	.word	0x20002ecc
 8025460:	20002e40 	.word	0x20002e40
 8025464:	0802a2e0 	.word	0x0802a2e0
 8025468:	080242bd 	.word	0x080242bd

0802546c <quorem>:
 802546c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025470:	6903      	ldr	r3, [r0, #16]
 8025472:	690c      	ldr	r4, [r1, #16]
 8025474:	42a3      	cmp	r3, r4
 8025476:	4607      	mov	r7, r0
 8025478:	db7e      	blt.n	8025578 <quorem+0x10c>
 802547a:	3c01      	subs	r4, #1
 802547c:	f101 0814 	add.w	r8, r1, #20
 8025480:	00a3      	lsls	r3, r4, #2
 8025482:	f100 0514 	add.w	r5, r0, #20
 8025486:	9300      	str	r3, [sp, #0]
 8025488:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802548c:	9301      	str	r3, [sp, #4]
 802548e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8025492:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8025496:	3301      	adds	r3, #1
 8025498:	429a      	cmp	r2, r3
 802549a:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 802549e:	fbb2 f6f3 	udiv	r6, r2, r3
 80254a2:	d32e      	bcc.n	8025502 <quorem+0x96>
 80254a4:	f04f 0a00 	mov.w	sl, #0
 80254a8:	46c4      	mov	ip, r8
 80254aa:	46ae      	mov	lr, r5
 80254ac:	46d3      	mov	fp, sl
 80254ae:	f85c 3b04 	ldr.w	r3, [ip], #4
 80254b2:	b298      	uxth	r0, r3
 80254b4:	fb06 a000 	mla	r0, r6, r0, sl
 80254b8:	0c02      	lsrs	r2, r0, #16
 80254ba:	0c1b      	lsrs	r3, r3, #16
 80254bc:	fb06 2303 	mla	r3, r6, r3, r2
 80254c0:	f8de 2000 	ldr.w	r2, [lr]
 80254c4:	b280      	uxth	r0, r0
 80254c6:	b292      	uxth	r2, r2
 80254c8:	1a12      	subs	r2, r2, r0
 80254ca:	445a      	add	r2, fp
 80254cc:	f8de 0000 	ldr.w	r0, [lr]
 80254d0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80254d4:	b29b      	uxth	r3, r3
 80254d6:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80254da:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80254de:	b292      	uxth	r2, r2
 80254e0:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80254e4:	45e1      	cmp	r9, ip
 80254e6:	f84e 2b04 	str.w	r2, [lr], #4
 80254ea:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80254ee:	d2de      	bcs.n	80254ae <quorem+0x42>
 80254f0:	9b00      	ldr	r3, [sp, #0]
 80254f2:	58eb      	ldr	r3, [r5, r3]
 80254f4:	b92b      	cbnz	r3, 8025502 <quorem+0x96>
 80254f6:	9b01      	ldr	r3, [sp, #4]
 80254f8:	3b04      	subs	r3, #4
 80254fa:	429d      	cmp	r5, r3
 80254fc:	461a      	mov	r2, r3
 80254fe:	d32f      	bcc.n	8025560 <quorem+0xf4>
 8025500:	613c      	str	r4, [r7, #16]
 8025502:	4638      	mov	r0, r7
 8025504:	f001 f8c4 	bl	8026690 <__mcmp>
 8025508:	2800      	cmp	r0, #0
 802550a:	db25      	blt.n	8025558 <quorem+0xec>
 802550c:	4629      	mov	r1, r5
 802550e:	2000      	movs	r0, #0
 8025510:	f858 2b04 	ldr.w	r2, [r8], #4
 8025514:	f8d1 c000 	ldr.w	ip, [r1]
 8025518:	fa1f fe82 	uxth.w	lr, r2
 802551c:	fa1f f38c 	uxth.w	r3, ip
 8025520:	eba3 030e 	sub.w	r3, r3, lr
 8025524:	4403      	add	r3, r0
 8025526:	0c12      	lsrs	r2, r2, #16
 8025528:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 802552c:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8025530:	b29b      	uxth	r3, r3
 8025532:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8025536:	45c1      	cmp	r9, r8
 8025538:	f841 3b04 	str.w	r3, [r1], #4
 802553c:	ea4f 4022 	mov.w	r0, r2, asr #16
 8025540:	d2e6      	bcs.n	8025510 <quorem+0xa4>
 8025542:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8025546:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802554a:	b922      	cbnz	r2, 8025556 <quorem+0xea>
 802554c:	3b04      	subs	r3, #4
 802554e:	429d      	cmp	r5, r3
 8025550:	461a      	mov	r2, r3
 8025552:	d30b      	bcc.n	802556c <quorem+0x100>
 8025554:	613c      	str	r4, [r7, #16]
 8025556:	3601      	adds	r6, #1
 8025558:	4630      	mov	r0, r6
 802555a:	b003      	add	sp, #12
 802555c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025560:	6812      	ldr	r2, [r2, #0]
 8025562:	3b04      	subs	r3, #4
 8025564:	2a00      	cmp	r2, #0
 8025566:	d1cb      	bne.n	8025500 <quorem+0x94>
 8025568:	3c01      	subs	r4, #1
 802556a:	e7c6      	b.n	80254fa <quorem+0x8e>
 802556c:	6812      	ldr	r2, [r2, #0]
 802556e:	3b04      	subs	r3, #4
 8025570:	2a00      	cmp	r2, #0
 8025572:	d1ef      	bne.n	8025554 <quorem+0xe8>
 8025574:	3c01      	subs	r4, #1
 8025576:	e7ea      	b.n	802554e <quorem+0xe2>
 8025578:	2000      	movs	r0, #0
 802557a:	e7ee      	b.n	802555a <quorem+0xee>
 802557c:	0000      	movs	r0, r0
	...

08025580 <_dtoa_r>:
 8025580:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025584:	69c7      	ldr	r7, [r0, #28]
 8025586:	b099      	sub	sp, #100	@ 0x64
 8025588:	ed8d 0b02 	vstr	d0, [sp, #8]
 802558c:	ec55 4b10 	vmov	r4, r5, d0
 8025590:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8025592:	9109      	str	r1, [sp, #36]	@ 0x24
 8025594:	4683      	mov	fp, r0
 8025596:	920e      	str	r2, [sp, #56]	@ 0x38
 8025598:	9313      	str	r3, [sp, #76]	@ 0x4c
 802559a:	b97f      	cbnz	r7, 80255bc <_dtoa_r+0x3c>
 802559c:	2010      	movs	r0, #16
 802559e:	f7fe fe8d 	bl	80242bc <malloc>
 80255a2:	4602      	mov	r2, r0
 80255a4:	f8cb 001c 	str.w	r0, [fp, #28]
 80255a8:	b920      	cbnz	r0, 80255b4 <_dtoa_r+0x34>
 80255aa:	4ba7      	ldr	r3, [pc, #668]	@ (8025848 <_dtoa_r+0x2c8>)
 80255ac:	21ef      	movs	r1, #239	@ 0xef
 80255ae:	48a7      	ldr	r0, [pc, #668]	@ (802584c <_dtoa_r+0x2cc>)
 80255b0:	f7fe fe60 	bl	8024274 <__assert_func>
 80255b4:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80255b8:	6007      	str	r7, [r0, #0]
 80255ba:	60c7      	str	r7, [r0, #12]
 80255bc:	f8db 301c 	ldr.w	r3, [fp, #28]
 80255c0:	6819      	ldr	r1, [r3, #0]
 80255c2:	b159      	cbz	r1, 80255dc <_dtoa_r+0x5c>
 80255c4:	685a      	ldr	r2, [r3, #4]
 80255c6:	604a      	str	r2, [r1, #4]
 80255c8:	2301      	movs	r3, #1
 80255ca:	4093      	lsls	r3, r2
 80255cc:	608b      	str	r3, [r1, #8]
 80255ce:	4658      	mov	r0, fp
 80255d0:	f000 fe24 	bl	802621c <_Bfree>
 80255d4:	f8db 301c 	ldr.w	r3, [fp, #28]
 80255d8:	2200      	movs	r2, #0
 80255da:	601a      	str	r2, [r3, #0]
 80255dc:	1e2b      	subs	r3, r5, #0
 80255de:	bfb9      	ittee	lt
 80255e0:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80255e4:	9303      	strlt	r3, [sp, #12]
 80255e6:	2300      	movge	r3, #0
 80255e8:	6033      	strge	r3, [r6, #0]
 80255ea:	9f03      	ldr	r7, [sp, #12]
 80255ec:	4b98      	ldr	r3, [pc, #608]	@ (8025850 <_dtoa_r+0x2d0>)
 80255ee:	bfbc      	itt	lt
 80255f0:	2201      	movlt	r2, #1
 80255f2:	6032      	strlt	r2, [r6, #0]
 80255f4:	43bb      	bics	r3, r7
 80255f6:	d112      	bne.n	802561e <_dtoa_r+0x9e>
 80255f8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80255fa:	f242 730f 	movw	r3, #9999	@ 0x270f
 80255fe:	6013      	str	r3, [r2, #0]
 8025600:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8025604:	4323      	orrs	r3, r4
 8025606:	f000 854d 	beq.w	80260a4 <_dtoa_r+0xb24>
 802560a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802560c:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8025864 <_dtoa_r+0x2e4>
 8025610:	2b00      	cmp	r3, #0
 8025612:	f000 854f 	beq.w	80260b4 <_dtoa_r+0xb34>
 8025616:	f10a 0303 	add.w	r3, sl, #3
 802561a:	f000 bd49 	b.w	80260b0 <_dtoa_r+0xb30>
 802561e:	ed9d 7b02 	vldr	d7, [sp, #8]
 8025622:	2200      	movs	r2, #0
 8025624:	ec51 0b17 	vmov	r0, r1, d7
 8025628:	2300      	movs	r3, #0
 802562a:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 802562e:	f7db fa6b 	bl	8000b08 <__aeabi_dcmpeq>
 8025632:	4680      	mov	r8, r0
 8025634:	b158      	cbz	r0, 802564e <_dtoa_r+0xce>
 8025636:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8025638:	2301      	movs	r3, #1
 802563a:	6013      	str	r3, [r2, #0]
 802563c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802563e:	b113      	cbz	r3, 8025646 <_dtoa_r+0xc6>
 8025640:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8025642:	4b84      	ldr	r3, [pc, #528]	@ (8025854 <_dtoa_r+0x2d4>)
 8025644:	6013      	str	r3, [r2, #0]
 8025646:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8025868 <_dtoa_r+0x2e8>
 802564a:	f000 bd33 	b.w	80260b4 <_dtoa_r+0xb34>
 802564e:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8025652:	aa16      	add	r2, sp, #88	@ 0x58
 8025654:	a917      	add	r1, sp, #92	@ 0x5c
 8025656:	4658      	mov	r0, fp
 8025658:	f001 f8ca 	bl	80267f0 <__d2b>
 802565c:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8025660:	4681      	mov	r9, r0
 8025662:	2e00      	cmp	r6, #0
 8025664:	d077      	beq.n	8025756 <_dtoa_r+0x1d6>
 8025666:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025668:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 802566c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8025670:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8025674:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8025678:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 802567c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8025680:	4619      	mov	r1, r3
 8025682:	2200      	movs	r2, #0
 8025684:	4b74      	ldr	r3, [pc, #464]	@ (8025858 <_dtoa_r+0x2d8>)
 8025686:	f7da fe1f 	bl	80002c8 <__aeabi_dsub>
 802568a:	a369      	add	r3, pc, #420	@ (adr r3, 8025830 <_dtoa_r+0x2b0>)
 802568c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025690:	f7da ffd2 	bl	8000638 <__aeabi_dmul>
 8025694:	a368      	add	r3, pc, #416	@ (adr r3, 8025838 <_dtoa_r+0x2b8>)
 8025696:	e9d3 2300 	ldrd	r2, r3, [r3]
 802569a:	f7da fe17 	bl	80002cc <__adddf3>
 802569e:	4604      	mov	r4, r0
 80256a0:	4630      	mov	r0, r6
 80256a2:	460d      	mov	r5, r1
 80256a4:	f7da ff5e 	bl	8000564 <__aeabi_i2d>
 80256a8:	a365      	add	r3, pc, #404	@ (adr r3, 8025840 <_dtoa_r+0x2c0>)
 80256aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80256ae:	f7da ffc3 	bl	8000638 <__aeabi_dmul>
 80256b2:	4602      	mov	r2, r0
 80256b4:	460b      	mov	r3, r1
 80256b6:	4620      	mov	r0, r4
 80256b8:	4629      	mov	r1, r5
 80256ba:	f7da fe07 	bl	80002cc <__adddf3>
 80256be:	4604      	mov	r4, r0
 80256c0:	460d      	mov	r5, r1
 80256c2:	f7db fa69 	bl	8000b98 <__aeabi_d2iz>
 80256c6:	2200      	movs	r2, #0
 80256c8:	4607      	mov	r7, r0
 80256ca:	2300      	movs	r3, #0
 80256cc:	4620      	mov	r0, r4
 80256ce:	4629      	mov	r1, r5
 80256d0:	f7db fa24 	bl	8000b1c <__aeabi_dcmplt>
 80256d4:	b140      	cbz	r0, 80256e8 <_dtoa_r+0x168>
 80256d6:	4638      	mov	r0, r7
 80256d8:	f7da ff44 	bl	8000564 <__aeabi_i2d>
 80256dc:	4622      	mov	r2, r4
 80256de:	462b      	mov	r3, r5
 80256e0:	f7db fa12 	bl	8000b08 <__aeabi_dcmpeq>
 80256e4:	b900      	cbnz	r0, 80256e8 <_dtoa_r+0x168>
 80256e6:	3f01      	subs	r7, #1
 80256e8:	2f16      	cmp	r7, #22
 80256ea:	d851      	bhi.n	8025790 <_dtoa_r+0x210>
 80256ec:	4b5b      	ldr	r3, [pc, #364]	@ (802585c <_dtoa_r+0x2dc>)
 80256ee:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80256f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80256f6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80256fa:	f7db fa0f 	bl	8000b1c <__aeabi_dcmplt>
 80256fe:	2800      	cmp	r0, #0
 8025700:	d048      	beq.n	8025794 <_dtoa_r+0x214>
 8025702:	3f01      	subs	r7, #1
 8025704:	2300      	movs	r3, #0
 8025706:	9312      	str	r3, [sp, #72]	@ 0x48
 8025708:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802570a:	1b9b      	subs	r3, r3, r6
 802570c:	1e5a      	subs	r2, r3, #1
 802570e:	bf44      	itt	mi
 8025710:	f1c3 0801 	rsbmi	r8, r3, #1
 8025714:	2300      	movmi	r3, #0
 8025716:	9208      	str	r2, [sp, #32]
 8025718:	bf54      	ite	pl
 802571a:	f04f 0800 	movpl.w	r8, #0
 802571e:	9308      	strmi	r3, [sp, #32]
 8025720:	2f00      	cmp	r7, #0
 8025722:	db39      	blt.n	8025798 <_dtoa_r+0x218>
 8025724:	9b08      	ldr	r3, [sp, #32]
 8025726:	970f      	str	r7, [sp, #60]	@ 0x3c
 8025728:	443b      	add	r3, r7
 802572a:	9308      	str	r3, [sp, #32]
 802572c:	2300      	movs	r3, #0
 802572e:	930a      	str	r3, [sp, #40]	@ 0x28
 8025730:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025732:	2b09      	cmp	r3, #9
 8025734:	d864      	bhi.n	8025800 <_dtoa_r+0x280>
 8025736:	2b05      	cmp	r3, #5
 8025738:	bfc4      	itt	gt
 802573a:	3b04      	subgt	r3, #4
 802573c:	9309      	strgt	r3, [sp, #36]	@ 0x24
 802573e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025740:	f1a3 0302 	sub.w	r3, r3, #2
 8025744:	bfcc      	ite	gt
 8025746:	2400      	movgt	r4, #0
 8025748:	2401      	movle	r4, #1
 802574a:	2b03      	cmp	r3, #3
 802574c:	d863      	bhi.n	8025816 <_dtoa_r+0x296>
 802574e:	e8df f003 	tbb	[pc, r3]
 8025752:	372a      	.short	0x372a
 8025754:	5535      	.short	0x5535
 8025756:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 802575a:	441e      	add	r6, r3
 802575c:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8025760:	2b20      	cmp	r3, #32
 8025762:	bfc1      	itttt	gt
 8025764:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8025768:	409f      	lslgt	r7, r3
 802576a:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 802576e:	fa24 f303 	lsrgt.w	r3, r4, r3
 8025772:	bfd6      	itet	le
 8025774:	f1c3 0320 	rsble	r3, r3, #32
 8025778:	ea47 0003 	orrgt.w	r0, r7, r3
 802577c:	fa04 f003 	lslle.w	r0, r4, r3
 8025780:	f7da fee0 	bl	8000544 <__aeabi_ui2d>
 8025784:	2201      	movs	r2, #1
 8025786:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 802578a:	3e01      	subs	r6, #1
 802578c:	9214      	str	r2, [sp, #80]	@ 0x50
 802578e:	e777      	b.n	8025680 <_dtoa_r+0x100>
 8025790:	2301      	movs	r3, #1
 8025792:	e7b8      	b.n	8025706 <_dtoa_r+0x186>
 8025794:	9012      	str	r0, [sp, #72]	@ 0x48
 8025796:	e7b7      	b.n	8025708 <_dtoa_r+0x188>
 8025798:	427b      	negs	r3, r7
 802579a:	930a      	str	r3, [sp, #40]	@ 0x28
 802579c:	2300      	movs	r3, #0
 802579e:	eba8 0807 	sub.w	r8, r8, r7
 80257a2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80257a4:	e7c4      	b.n	8025730 <_dtoa_r+0x1b0>
 80257a6:	2300      	movs	r3, #0
 80257a8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80257aa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80257ac:	2b00      	cmp	r3, #0
 80257ae:	dc35      	bgt.n	802581c <_dtoa_r+0x29c>
 80257b0:	2301      	movs	r3, #1
 80257b2:	9300      	str	r3, [sp, #0]
 80257b4:	9307      	str	r3, [sp, #28]
 80257b6:	461a      	mov	r2, r3
 80257b8:	920e      	str	r2, [sp, #56]	@ 0x38
 80257ba:	e00b      	b.n	80257d4 <_dtoa_r+0x254>
 80257bc:	2301      	movs	r3, #1
 80257be:	e7f3      	b.n	80257a8 <_dtoa_r+0x228>
 80257c0:	2300      	movs	r3, #0
 80257c2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80257c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80257c6:	18fb      	adds	r3, r7, r3
 80257c8:	9300      	str	r3, [sp, #0]
 80257ca:	3301      	adds	r3, #1
 80257cc:	2b01      	cmp	r3, #1
 80257ce:	9307      	str	r3, [sp, #28]
 80257d0:	bfb8      	it	lt
 80257d2:	2301      	movlt	r3, #1
 80257d4:	f8db 001c 	ldr.w	r0, [fp, #28]
 80257d8:	2100      	movs	r1, #0
 80257da:	2204      	movs	r2, #4
 80257dc:	f102 0514 	add.w	r5, r2, #20
 80257e0:	429d      	cmp	r5, r3
 80257e2:	d91f      	bls.n	8025824 <_dtoa_r+0x2a4>
 80257e4:	6041      	str	r1, [r0, #4]
 80257e6:	4658      	mov	r0, fp
 80257e8:	f000 fcd8 	bl	802619c <_Balloc>
 80257ec:	4682      	mov	sl, r0
 80257ee:	2800      	cmp	r0, #0
 80257f0:	d13c      	bne.n	802586c <_dtoa_r+0x2ec>
 80257f2:	4b1b      	ldr	r3, [pc, #108]	@ (8025860 <_dtoa_r+0x2e0>)
 80257f4:	4602      	mov	r2, r0
 80257f6:	f240 11af 	movw	r1, #431	@ 0x1af
 80257fa:	e6d8      	b.n	80255ae <_dtoa_r+0x2e>
 80257fc:	2301      	movs	r3, #1
 80257fe:	e7e0      	b.n	80257c2 <_dtoa_r+0x242>
 8025800:	2401      	movs	r4, #1
 8025802:	2300      	movs	r3, #0
 8025804:	9309      	str	r3, [sp, #36]	@ 0x24
 8025806:	940b      	str	r4, [sp, #44]	@ 0x2c
 8025808:	f04f 33ff 	mov.w	r3, #4294967295
 802580c:	9300      	str	r3, [sp, #0]
 802580e:	9307      	str	r3, [sp, #28]
 8025810:	2200      	movs	r2, #0
 8025812:	2312      	movs	r3, #18
 8025814:	e7d0      	b.n	80257b8 <_dtoa_r+0x238>
 8025816:	2301      	movs	r3, #1
 8025818:	930b      	str	r3, [sp, #44]	@ 0x2c
 802581a:	e7f5      	b.n	8025808 <_dtoa_r+0x288>
 802581c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802581e:	9300      	str	r3, [sp, #0]
 8025820:	9307      	str	r3, [sp, #28]
 8025822:	e7d7      	b.n	80257d4 <_dtoa_r+0x254>
 8025824:	3101      	adds	r1, #1
 8025826:	0052      	lsls	r2, r2, #1
 8025828:	e7d8      	b.n	80257dc <_dtoa_r+0x25c>
 802582a:	bf00      	nop
 802582c:	f3af 8000 	nop.w
 8025830:	636f4361 	.word	0x636f4361
 8025834:	3fd287a7 	.word	0x3fd287a7
 8025838:	8b60c8b3 	.word	0x8b60c8b3
 802583c:	3fc68a28 	.word	0x3fc68a28
 8025840:	509f79fb 	.word	0x509f79fb
 8025844:	3fd34413 	.word	0x3fd34413
 8025848:	0802a109 	.word	0x0802a109
 802584c:	0802a120 	.word	0x0802a120
 8025850:	7ff00000 	.word	0x7ff00000
 8025854:	0802a0d9 	.word	0x0802a0d9
 8025858:	3ff80000 	.word	0x3ff80000
 802585c:	0802a218 	.word	0x0802a218
 8025860:	0802a178 	.word	0x0802a178
 8025864:	0802a105 	.word	0x0802a105
 8025868:	0802a0d8 	.word	0x0802a0d8
 802586c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8025870:	6018      	str	r0, [r3, #0]
 8025872:	9b07      	ldr	r3, [sp, #28]
 8025874:	2b0e      	cmp	r3, #14
 8025876:	f200 80a4 	bhi.w	80259c2 <_dtoa_r+0x442>
 802587a:	2c00      	cmp	r4, #0
 802587c:	f000 80a1 	beq.w	80259c2 <_dtoa_r+0x442>
 8025880:	2f00      	cmp	r7, #0
 8025882:	dd33      	ble.n	80258ec <_dtoa_r+0x36c>
 8025884:	4bad      	ldr	r3, [pc, #692]	@ (8025b3c <_dtoa_r+0x5bc>)
 8025886:	f007 020f 	and.w	r2, r7, #15
 802588a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802588e:	ed93 7b00 	vldr	d7, [r3]
 8025892:	05f8      	lsls	r0, r7, #23
 8025894:	ed8d 7b04 	vstr	d7, [sp, #16]
 8025898:	ea4f 1427 	mov.w	r4, r7, asr #4
 802589c:	d516      	bpl.n	80258cc <_dtoa_r+0x34c>
 802589e:	4ba8      	ldr	r3, [pc, #672]	@ (8025b40 <_dtoa_r+0x5c0>)
 80258a0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80258a4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80258a8:	f7da fff0 	bl	800088c <__aeabi_ddiv>
 80258ac:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80258b0:	f004 040f 	and.w	r4, r4, #15
 80258b4:	2603      	movs	r6, #3
 80258b6:	4da2      	ldr	r5, [pc, #648]	@ (8025b40 <_dtoa_r+0x5c0>)
 80258b8:	b954      	cbnz	r4, 80258d0 <_dtoa_r+0x350>
 80258ba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80258be:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80258c2:	f7da ffe3 	bl	800088c <__aeabi_ddiv>
 80258c6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80258ca:	e028      	b.n	802591e <_dtoa_r+0x39e>
 80258cc:	2602      	movs	r6, #2
 80258ce:	e7f2      	b.n	80258b6 <_dtoa_r+0x336>
 80258d0:	07e1      	lsls	r1, r4, #31
 80258d2:	d508      	bpl.n	80258e6 <_dtoa_r+0x366>
 80258d4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80258d8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80258dc:	f7da feac 	bl	8000638 <__aeabi_dmul>
 80258e0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80258e4:	3601      	adds	r6, #1
 80258e6:	1064      	asrs	r4, r4, #1
 80258e8:	3508      	adds	r5, #8
 80258ea:	e7e5      	b.n	80258b8 <_dtoa_r+0x338>
 80258ec:	f000 80d2 	beq.w	8025a94 <_dtoa_r+0x514>
 80258f0:	427c      	negs	r4, r7
 80258f2:	4b92      	ldr	r3, [pc, #584]	@ (8025b3c <_dtoa_r+0x5bc>)
 80258f4:	4d92      	ldr	r5, [pc, #584]	@ (8025b40 <_dtoa_r+0x5c0>)
 80258f6:	f004 020f 	and.w	r2, r4, #15
 80258fa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80258fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025902:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8025906:	f7da fe97 	bl	8000638 <__aeabi_dmul>
 802590a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802590e:	1124      	asrs	r4, r4, #4
 8025910:	2300      	movs	r3, #0
 8025912:	2602      	movs	r6, #2
 8025914:	2c00      	cmp	r4, #0
 8025916:	f040 80b2 	bne.w	8025a7e <_dtoa_r+0x4fe>
 802591a:	2b00      	cmp	r3, #0
 802591c:	d1d3      	bne.n	80258c6 <_dtoa_r+0x346>
 802591e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8025920:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8025924:	2b00      	cmp	r3, #0
 8025926:	f000 80b7 	beq.w	8025a98 <_dtoa_r+0x518>
 802592a:	4b86      	ldr	r3, [pc, #536]	@ (8025b44 <_dtoa_r+0x5c4>)
 802592c:	2200      	movs	r2, #0
 802592e:	4620      	mov	r0, r4
 8025930:	4629      	mov	r1, r5
 8025932:	f7db f8f3 	bl	8000b1c <__aeabi_dcmplt>
 8025936:	2800      	cmp	r0, #0
 8025938:	f000 80ae 	beq.w	8025a98 <_dtoa_r+0x518>
 802593c:	9b07      	ldr	r3, [sp, #28]
 802593e:	2b00      	cmp	r3, #0
 8025940:	f000 80aa 	beq.w	8025a98 <_dtoa_r+0x518>
 8025944:	9b00      	ldr	r3, [sp, #0]
 8025946:	2b00      	cmp	r3, #0
 8025948:	dd37      	ble.n	80259ba <_dtoa_r+0x43a>
 802594a:	1e7b      	subs	r3, r7, #1
 802594c:	9304      	str	r3, [sp, #16]
 802594e:	4620      	mov	r0, r4
 8025950:	4b7d      	ldr	r3, [pc, #500]	@ (8025b48 <_dtoa_r+0x5c8>)
 8025952:	2200      	movs	r2, #0
 8025954:	4629      	mov	r1, r5
 8025956:	f7da fe6f 	bl	8000638 <__aeabi_dmul>
 802595a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802595e:	9c00      	ldr	r4, [sp, #0]
 8025960:	3601      	adds	r6, #1
 8025962:	4630      	mov	r0, r6
 8025964:	f7da fdfe 	bl	8000564 <__aeabi_i2d>
 8025968:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 802596c:	f7da fe64 	bl	8000638 <__aeabi_dmul>
 8025970:	4b76      	ldr	r3, [pc, #472]	@ (8025b4c <_dtoa_r+0x5cc>)
 8025972:	2200      	movs	r2, #0
 8025974:	f7da fcaa 	bl	80002cc <__adddf3>
 8025978:	4605      	mov	r5, r0
 802597a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 802597e:	2c00      	cmp	r4, #0
 8025980:	f040 808d 	bne.w	8025a9e <_dtoa_r+0x51e>
 8025984:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8025988:	4b71      	ldr	r3, [pc, #452]	@ (8025b50 <_dtoa_r+0x5d0>)
 802598a:	2200      	movs	r2, #0
 802598c:	f7da fc9c 	bl	80002c8 <__aeabi_dsub>
 8025990:	4602      	mov	r2, r0
 8025992:	460b      	mov	r3, r1
 8025994:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8025998:	462a      	mov	r2, r5
 802599a:	4633      	mov	r3, r6
 802599c:	f7db f8dc 	bl	8000b58 <__aeabi_dcmpgt>
 80259a0:	2800      	cmp	r0, #0
 80259a2:	f040 828b 	bne.w	8025ebc <_dtoa_r+0x93c>
 80259a6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80259aa:	462a      	mov	r2, r5
 80259ac:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80259b0:	f7db f8b4 	bl	8000b1c <__aeabi_dcmplt>
 80259b4:	2800      	cmp	r0, #0
 80259b6:	f040 8128 	bne.w	8025c0a <_dtoa_r+0x68a>
 80259ba:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 80259be:	e9cd 3402 	strd	r3, r4, [sp, #8]
 80259c2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80259c4:	2b00      	cmp	r3, #0
 80259c6:	f2c0 815a 	blt.w	8025c7e <_dtoa_r+0x6fe>
 80259ca:	2f0e      	cmp	r7, #14
 80259cc:	f300 8157 	bgt.w	8025c7e <_dtoa_r+0x6fe>
 80259d0:	4b5a      	ldr	r3, [pc, #360]	@ (8025b3c <_dtoa_r+0x5bc>)
 80259d2:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80259d6:	ed93 7b00 	vldr	d7, [r3]
 80259da:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80259dc:	2b00      	cmp	r3, #0
 80259de:	ed8d 7b00 	vstr	d7, [sp]
 80259e2:	da03      	bge.n	80259ec <_dtoa_r+0x46c>
 80259e4:	9b07      	ldr	r3, [sp, #28]
 80259e6:	2b00      	cmp	r3, #0
 80259e8:	f340 8101 	ble.w	8025bee <_dtoa_r+0x66e>
 80259ec:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80259f0:	4656      	mov	r6, sl
 80259f2:	e9dd 2300 	ldrd	r2, r3, [sp]
 80259f6:	4620      	mov	r0, r4
 80259f8:	4629      	mov	r1, r5
 80259fa:	f7da ff47 	bl	800088c <__aeabi_ddiv>
 80259fe:	f7db f8cb 	bl	8000b98 <__aeabi_d2iz>
 8025a02:	4680      	mov	r8, r0
 8025a04:	f7da fdae 	bl	8000564 <__aeabi_i2d>
 8025a08:	e9dd 2300 	ldrd	r2, r3, [sp]
 8025a0c:	f7da fe14 	bl	8000638 <__aeabi_dmul>
 8025a10:	4602      	mov	r2, r0
 8025a12:	460b      	mov	r3, r1
 8025a14:	4620      	mov	r0, r4
 8025a16:	4629      	mov	r1, r5
 8025a18:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8025a1c:	f7da fc54 	bl	80002c8 <__aeabi_dsub>
 8025a20:	f806 4b01 	strb.w	r4, [r6], #1
 8025a24:	9d07      	ldr	r5, [sp, #28]
 8025a26:	eba6 040a 	sub.w	r4, r6, sl
 8025a2a:	42a5      	cmp	r5, r4
 8025a2c:	4602      	mov	r2, r0
 8025a2e:	460b      	mov	r3, r1
 8025a30:	f040 8117 	bne.w	8025c62 <_dtoa_r+0x6e2>
 8025a34:	f7da fc4a 	bl	80002cc <__adddf3>
 8025a38:	e9dd 2300 	ldrd	r2, r3, [sp]
 8025a3c:	4604      	mov	r4, r0
 8025a3e:	460d      	mov	r5, r1
 8025a40:	f7db f88a 	bl	8000b58 <__aeabi_dcmpgt>
 8025a44:	2800      	cmp	r0, #0
 8025a46:	f040 80f9 	bne.w	8025c3c <_dtoa_r+0x6bc>
 8025a4a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8025a4e:	4620      	mov	r0, r4
 8025a50:	4629      	mov	r1, r5
 8025a52:	f7db f859 	bl	8000b08 <__aeabi_dcmpeq>
 8025a56:	b118      	cbz	r0, 8025a60 <_dtoa_r+0x4e0>
 8025a58:	f018 0f01 	tst.w	r8, #1
 8025a5c:	f040 80ee 	bne.w	8025c3c <_dtoa_r+0x6bc>
 8025a60:	4649      	mov	r1, r9
 8025a62:	4658      	mov	r0, fp
 8025a64:	f000 fbda 	bl	802621c <_Bfree>
 8025a68:	2300      	movs	r3, #0
 8025a6a:	7033      	strb	r3, [r6, #0]
 8025a6c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8025a6e:	3701      	adds	r7, #1
 8025a70:	601f      	str	r7, [r3, #0]
 8025a72:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8025a74:	2b00      	cmp	r3, #0
 8025a76:	f000 831d 	beq.w	80260b4 <_dtoa_r+0xb34>
 8025a7a:	601e      	str	r6, [r3, #0]
 8025a7c:	e31a      	b.n	80260b4 <_dtoa_r+0xb34>
 8025a7e:	07e2      	lsls	r2, r4, #31
 8025a80:	d505      	bpl.n	8025a8e <_dtoa_r+0x50e>
 8025a82:	e9d5 2300 	ldrd	r2, r3, [r5]
 8025a86:	f7da fdd7 	bl	8000638 <__aeabi_dmul>
 8025a8a:	3601      	adds	r6, #1
 8025a8c:	2301      	movs	r3, #1
 8025a8e:	1064      	asrs	r4, r4, #1
 8025a90:	3508      	adds	r5, #8
 8025a92:	e73f      	b.n	8025914 <_dtoa_r+0x394>
 8025a94:	2602      	movs	r6, #2
 8025a96:	e742      	b.n	802591e <_dtoa_r+0x39e>
 8025a98:	9c07      	ldr	r4, [sp, #28]
 8025a9a:	9704      	str	r7, [sp, #16]
 8025a9c:	e761      	b.n	8025962 <_dtoa_r+0x3e2>
 8025a9e:	4b27      	ldr	r3, [pc, #156]	@ (8025b3c <_dtoa_r+0x5bc>)
 8025aa0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8025aa2:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8025aa6:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8025aaa:	4454      	add	r4, sl
 8025aac:	2900      	cmp	r1, #0
 8025aae:	d053      	beq.n	8025b58 <_dtoa_r+0x5d8>
 8025ab0:	4928      	ldr	r1, [pc, #160]	@ (8025b54 <_dtoa_r+0x5d4>)
 8025ab2:	2000      	movs	r0, #0
 8025ab4:	f7da feea 	bl	800088c <__aeabi_ddiv>
 8025ab8:	4633      	mov	r3, r6
 8025aba:	462a      	mov	r2, r5
 8025abc:	f7da fc04 	bl	80002c8 <__aeabi_dsub>
 8025ac0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8025ac4:	4656      	mov	r6, sl
 8025ac6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8025aca:	f7db f865 	bl	8000b98 <__aeabi_d2iz>
 8025ace:	4605      	mov	r5, r0
 8025ad0:	f7da fd48 	bl	8000564 <__aeabi_i2d>
 8025ad4:	4602      	mov	r2, r0
 8025ad6:	460b      	mov	r3, r1
 8025ad8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8025adc:	f7da fbf4 	bl	80002c8 <__aeabi_dsub>
 8025ae0:	3530      	adds	r5, #48	@ 0x30
 8025ae2:	4602      	mov	r2, r0
 8025ae4:	460b      	mov	r3, r1
 8025ae6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8025aea:	f806 5b01 	strb.w	r5, [r6], #1
 8025aee:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8025af2:	f7db f813 	bl	8000b1c <__aeabi_dcmplt>
 8025af6:	2800      	cmp	r0, #0
 8025af8:	d171      	bne.n	8025bde <_dtoa_r+0x65e>
 8025afa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8025afe:	4911      	ldr	r1, [pc, #68]	@ (8025b44 <_dtoa_r+0x5c4>)
 8025b00:	2000      	movs	r0, #0
 8025b02:	f7da fbe1 	bl	80002c8 <__aeabi_dsub>
 8025b06:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8025b0a:	f7db f807 	bl	8000b1c <__aeabi_dcmplt>
 8025b0e:	2800      	cmp	r0, #0
 8025b10:	f040 8095 	bne.w	8025c3e <_dtoa_r+0x6be>
 8025b14:	42a6      	cmp	r6, r4
 8025b16:	f43f af50 	beq.w	80259ba <_dtoa_r+0x43a>
 8025b1a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8025b1e:	4b0a      	ldr	r3, [pc, #40]	@ (8025b48 <_dtoa_r+0x5c8>)
 8025b20:	2200      	movs	r2, #0
 8025b22:	f7da fd89 	bl	8000638 <__aeabi_dmul>
 8025b26:	4b08      	ldr	r3, [pc, #32]	@ (8025b48 <_dtoa_r+0x5c8>)
 8025b28:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8025b2c:	2200      	movs	r2, #0
 8025b2e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8025b32:	f7da fd81 	bl	8000638 <__aeabi_dmul>
 8025b36:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8025b3a:	e7c4      	b.n	8025ac6 <_dtoa_r+0x546>
 8025b3c:	0802a218 	.word	0x0802a218
 8025b40:	0802a1f0 	.word	0x0802a1f0
 8025b44:	3ff00000 	.word	0x3ff00000
 8025b48:	40240000 	.word	0x40240000
 8025b4c:	401c0000 	.word	0x401c0000
 8025b50:	40140000 	.word	0x40140000
 8025b54:	3fe00000 	.word	0x3fe00000
 8025b58:	4631      	mov	r1, r6
 8025b5a:	4628      	mov	r0, r5
 8025b5c:	f7da fd6c 	bl	8000638 <__aeabi_dmul>
 8025b60:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8025b64:	9415      	str	r4, [sp, #84]	@ 0x54
 8025b66:	4656      	mov	r6, sl
 8025b68:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8025b6c:	f7db f814 	bl	8000b98 <__aeabi_d2iz>
 8025b70:	4605      	mov	r5, r0
 8025b72:	f7da fcf7 	bl	8000564 <__aeabi_i2d>
 8025b76:	4602      	mov	r2, r0
 8025b78:	460b      	mov	r3, r1
 8025b7a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8025b7e:	f7da fba3 	bl	80002c8 <__aeabi_dsub>
 8025b82:	3530      	adds	r5, #48	@ 0x30
 8025b84:	f806 5b01 	strb.w	r5, [r6], #1
 8025b88:	4602      	mov	r2, r0
 8025b8a:	460b      	mov	r3, r1
 8025b8c:	42a6      	cmp	r6, r4
 8025b8e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8025b92:	f04f 0200 	mov.w	r2, #0
 8025b96:	d124      	bne.n	8025be2 <_dtoa_r+0x662>
 8025b98:	4bac      	ldr	r3, [pc, #688]	@ (8025e4c <_dtoa_r+0x8cc>)
 8025b9a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8025b9e:	f7da fb95 	bl	80002cc <__adddf3>
 8025ba2:	4602      	mov	r2, r0
 8025ba4:	460b      	mov	r3, r1
 8025ba6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8025baa:	f7da ffd5 	bl	8000b58 <__aeabi_dcmpgt>
 8025bae:	2800      	cmp	r0, #0
 8025bb0:	d145      	bne.n	8025c3e <_dtoa_r+0x6be>
 8025bb2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8025bb6:	49a5      	ldr	r1, [pc, #660]	@ (8025e4c <_dtoa_r+0x8cc>)
 8025bb8:	2000      	movs	r0, #0
 8025bba:	f7da fb85 	bl	80002c8 <__aeabi_dsub>
 8025bbe:	4602      	mov	r2, r0
 8025bc0:	460b      	mov	r3, r1
 8025bc2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8025bc6:	f7da ffa9 	bl	8000b1c <__aeabi_dcmplt>
 8025bca:	2800      	cmp	r0, #0
 8025bcc:	f43f aef5 	beq.w	80259ba <_dtoa_r+0x43a>
 8025bd0:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8025bd2:	1e73      	subs	r3, r6, #1
 8025bd4:	9315      	str	r3, [sp, #84]	@ 0x54
 8025bd6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8025bda:	2b30      	cmp	r3, #48	@ 0x30
 8025bdc:	d0f8      	beq.n	8025bd0 <_dtoa_r+0x650>
 8025bde:	9f04      	ldr	r7, [sp, #16]
 8025be0:	e73e      	b.n	8025a60 <_dtoa_r+0x4e0>
 8025be2:	4b9b      	ldr	r3, [pc, #620]	@ (8025e50 <_dtoa_r+0x8d0>)
 8025be4:	f7da fd28 	bl	8000638 <__aeabi_dmul>
 8025be8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8025bec:	e7bc      	b.n	8025b68 <_dtoa_r+0x5e8>
 8025bee:	d10c      	bne.n	8025c0a <_dtoa_r+0x68a>
 8025bf0:	4b98      	ldr	r3, [pc, #608]	@ (8025e54 <_dtoa_r+0x8d4>)
 8025bf2:	2200      	movs	r2, #0
 8025bf4:	e9dd 0100 	ldrd	r0, r1, [sp]
 8025bf8:	f7da fd1e 	bl	8000638 <__aeabi_dmul>
 8025bfc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8025c00:	f7da ffa0 	bl	8000b44 <__aeabi_dcmpge>
 8025c04:	2800      	cmp	r0, #0
 8025c06:	f000 8157 	beq.w	8025eb8 <_dtoa_r+0x938>
 8025c0a:	2400      	movs	r4, #0
 8025c0c:	4625      	mov	r5, r4
 8025c0e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8025c10:	43db      	mvns	r3, r3
 8025c12:	9304      	str	r3, [sp, #16]
 8025c14:	4656      	mov	r6, sl
 8025c16:	2700      	movs	r7, #0
 8025c18:	4621      	mov	r1, r4
 8025c1a:	4658      	mov	r0, fp
 8025c1c:	f000 fafe 	bl	802621c <_Bfree>
 8025c20:	2d00      	cmp	r5, #0
 8025c22:	d0dc      	beq.n	8025bde <_dtoa_r+0x65e>
 8025c24:	b12f      	cbz	r7, 8025c32 <_dtoa_r+0x6b2>
 8025c26:	42af      	cmp	r7, r5
 8025c28:	d003      	beq.n	8025c32 <_dtoa_r+0x6b2>
 8025c2a:	4639      	mov	r1, r7
 8025c2c:	4658      	mov	r0, fp
 8025c2e:	f000 faf5 	bl	802621c <_Bfree>
 8025c32:	4629      	mov	r1, r5
 8025c34:	4658      	mov	r0, fp
 8025c36:	f000 faf1 	bl	802621c <_Bfree>
 8025c3a:	e7d0      	b.n	8025bde <_dtoa_r+0x65e>
 8025c3c:	9704      	str	r7, [sp, #16]
 8025c3e:	4633      	mov	r3, r6
 8025c40:	461e      	mov	r6, r3
 8025c42:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8025c46:	2a39      	cmp	r2, #57	@ 0x39
 8025c48:	d107      	bne.n	8025c5a <_dtoa_r+0x6da>
 8025c4a:	459a      	cmp	sl, r3
 8025c4c:	d1f8      	bne.n	8025c40 <_dtoa_r+0x6c0>
 8025c4e:	9a04      	ldr	r2, [sp, #16]
 8025c50:	3201      	adds	r2, #1
 8025c52:	9204      	str	r2, [sp, #16]
 8025c54:	2230      	movs	r2, #48	@ 0x30
 8025c56:	f88a 2000 	strb.w	r2, [sl]
 8025c5a:	781a      	ldrb	r2, [r3, #0]
 8025c5c:	3201      	adds	r2, #1
 8025c5e:	701a      	strb	r2, [r3, #0]
 8025c60:	e7bd      	b.n	8025bde <_dtoa_r+0x65e>
 8025c62:	4b7b      	ldr	r3, [pc, #492]	@ (8025e50 <_dtoa_r+0x8d0>)
 8025c64:	2200      	movs	r2, #0
 8025c66:	f7da fce7 	bl	8000638 <__aeabi_dmul>
 8025c6a:	2200      	movs	r2, #0
 8025c6c:	2300      	movs	r3, #0
 8025c6e:	4604      	mov	r4, r0
 8025c70:	460d      	mov	r5, r1
 8025c72:	f7da ff49 	bl	8000b08 <__aeabi_dcmpeq>
 8025c76:	2800      	cmp	r0, #0
 8025c78:	f43f aebb 	beq.w	80259f2 <_dtoa_r+0x472>
 8025c7c:	e6f0      	b.n	8025a60 <_dtoa_r+0x4e0>
 8025c7e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025c80:	2a00      	cmp	r2, #0
 8025c82:	f000 80db 	beq.w	8025e3c <_dtoa_r+0x8bc>
 8025c86:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025c88:	2a01      	cmp	r2, #1
 8025c8a:	f300 80bf 	bgt.w	8025e0c <_dtoa_r+0x88c>
 8025c8e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8025c90:	2a00      	cmp	r2, #0
 8025c92:	f000 80b7 	beq.w	8025e04 <_dtoa_r+0x884>
 8025c96:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8025c9a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8025c9c:	4646      	mov	r6, r8
 8025c9e:	9a08      	ldr	r2, [sp, #32]
 8025ca0:	2101      	movs	r1, #1
 8025ca2:	441a      	add	r2, r3
 8025ca4:	4658      	mov	r0, fp
 8025ca6:	4498      	add	r8, r3
 8025ca8:	9208      	str	r2, [sp, #32]
 8025caa:	f000 fb6b 	bl	8026384 <__i2b>
 8025cae:	4605      	mov	r5, r0
 8025cb0:	b15e      	cbz	r6, 8025cca <_dtoa_r+0x74a>
 8025cb2:	9b08      	ldr	r3, [sp, #32]
 8025cb4:	2b00      	cmp	r3, #0
 8025cb6:	dd08      	ble.n	8025cca <_dtoa_r+0x74a>
 8025cb8:	42b3      	cmp	r3, r6
 8025cba:	9a08      	ldr	r2, [sp, #32]
 8025cbc:	bfa8      	it	ge
 8025cbe:	4633      	movge	r3, r6
 8025cc0:	eba8 0803 	sub.w	r8, r8, r3
 8025cc4:	1af6      	subs	r6, r6, r3
 8025cc6:	1ad3      	subs	r3, r2, r3
 8025cc8:	9308      	str	r3, [sp, #32]
 8025cca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025ccc:	b1f3      	cbz	r3, 8025d0c <_dtoa_r+0x78c>
 8025cce:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025cd0:	2b00      	cmp	r3, #0
 8025cd2:	f000 80b7 	beq.w	8025e44 <_dtoa_r+0x8c4>
 8025cd6:	b18c      	cbz	r4, 8025cfc <_dtoa_r+0x77c>
 8025cd8:	4629      	mov	r1, r5
 8025cda:	4622      	mov	r2, r4
 8025cdc:	4658      	mov	r0, fp
 8025cde:	f000 fc11 	bl	8026504 <__pow5mult>
 8025ce2:	464a      	mov	r2, r9
 8025ce4:	4601      	mov	r1, r0
 8025ce6:	4605      	mov	r5, r0
 8025ce8:	4658      	mov	r0, fp
 8025cea:	f000 fb61 	bl	80263b0 <__multiply>
 8025cee:	4649      	mov	r1, r9
 8025cf0:	9004      	str	r0, [sp, #16]
 8025cf2:	4658      	mov	r0, fp
 8025cf4:	f000 fa92 	bl	802621c <_Bfree>
 8025cf8:	9b04      	ldr	r3, [sp, #16]
 8025cfa:	4699      	mov	r9, r3
 8025cfc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025cfe:	1b1a      	subs	r2, r3, r4
 8025d00:	d004      	beq.n	8025d0c <_dtoa_r+0x78c>
 8025d02:	4649      	mov	r1, r9
 8025d04:	4658      	mov	r0, fp
 8025d06:	f000 fbfd 	bl	8026504 <__pow5mult>
 8025d0a:	4681      	mov	r9, r0
 8025d0c:	2101      	movs	r1, #1
 8025d0e:	4658      	mov	r0, fp
 8025d10:	f000 fb38 	bl	8026384 <__i2b>
 8025d14:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8025d16:	4604      	mov	r4, r0
 8025d18:	2b00      	cmp	r3, #0
 8025d1a:	f000 81cf 	beq.w	80260bc <_dtoa_r+0xb3c>
 8025d1e:	461a      	mov	r2, r3
 8025d20:	4601      	mov	r1, r0
 8025d22:	4658      	mov	r0, fp
 8025d24:	f000 fbee 	bl	8026504 <__pow5mult>
 8025d28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025d2a:	2b01      	cmp	r3, #1
 8025d2c:	4604      	mov	r4, r0
 8025d2e:	f300 8095 	bgt.w	8025e5c <_dtoa_r+0x8dc>
 8025d32:	9b02      	ldr	r3, [sp, #8]
 8025d34:	2b00      	cmp	r3, #0
 8025d36:	f040 8087 	bne.w	8025e48 <_dtoa_r+0x8c8>
 8025d3a:	9b03      	ldr	r3, [sp, #12]
 8025d3c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8025d40:	2b00      	cmp	r3, #0
 8025d42:	f040 8089 	bne.w	8025e58 <_dtoa_r+0x8d8>
 8025d46:	9b03      	ldr	r3, [sp, #12]
 8025d48:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8025d4c:	0d1b      	lsrs	r3, r3, #20
 8025d4e:	051b      	lsls	r3, r3, #20
 8025d50:	b12b      	cbz	r3, 8025d5e <_dtoa_r+0x7de>
 8025d52:	9b08      	ldr	r3, [sp, #32]
 8025d54:	3301      	adds	r3, #1
 8025d56:	9308      	str	r3, [sp, #32]
 8025d58:	f108 0801 	add.w	r8, r8, #1
 8025d5c:	2301      	movs	r3, #1
 8025d5e:	930a      	str	r3, [sp, #40]	@ 0x28
 8025d60:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8025d62:	2b00      	cmp	r3, #0
 8025d64:	f000 81b0 	beq.w	80260c8 <_dtoa_r+0xb48>
 8025d68:	6923      	ldr	r3, [r4, #16]
 8025d6a:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8025d6e:	6918      	ldr	r0, [r3, #16]
 8025d70:	f000 fabc 	bl	80262ec <__hi0bits>
 8025d74:	f1c0 0020 	rsb	r0, r0, #32
 8025d78:	9b08      	ldr	r3, [sp, #32]
 8025d7a:	4418      	add	r0, r3
 8025d7c:	f010 001f 	ands.w	r0, r0, #31
 8025d80:	d077      	beq.n	8025e72 <_dtoa_r+0x8f2>
 8025d82:	f1c0 0320 	rsb	r3, r0, #32
 8025d86:	2b04      	cmp	r3, #4
 8025d88:	dd6b      	ble.n	8025e62 <_dtoa_r+0x8e2>
 8025d8a:	9b08      	ldr	r3, [sp, #32]
 8025d8c:	f1c0 001c 	rsb	r0, r0, #28
 8025d90:	4403      	add	r3, r0
 8025d92:	4480      	add	r8, r0
 8025d94:	4406      	add	r6, r0
 8025d96:	9308      	str	r3, [sp, #32]
 8025d98:	f1b8 0f00 	cmp.w	r8, #0
 8025d9c:	dd05      	ble.n	8025daa <_dtoa_r+0x82a>
 8025d9e:	4649      	mov	r1, r9
 8025da0:	4642      	mov	r2, r8
 8025da2:	4658      	mov	r0, fp
 8025da4:	f000 fc08 	bl	80265b8 <__lshift>
 8025da8:	4681      	mov	r9, r0
 8025daa:	9b08      	ldr	r3, [sp, #32]
 8025dac:	2b00      	cmp	r3, #0
 8025dae:	dd05      	ble.n	8025dbc <_dtoa_r+0x83c>
 8025db0:	4621      	mov	r1, r4
 8025db2:	461a      	mov	r2, r3
 8025db4:	4658      	mov	r0, fp
 8025db6:	f000 fbff 	bl	80265b8 <__lshift>
 8025dba:	4604      	mov	r4, r0
 8025dbc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8025dbe:	2b00      	cmp	r3, #0
 8025dc0:	d059      	beq.n	8025e76 <_dtoa_r+0x8f6>
 8025dc2:	4621      	mov	r1, r4
 8025dc4:	4648      	mov	r0, r9
 8025dc6:	f000 fc63 	bl	8026690 <__mcmp>
 8025dca:	2800      	cmp	r0, #0
 8025dcc:	da53      	bge.n	8025e76 <_dtoa_r+0x8f6>
 8025dce:	1e7b      	subs	r3, r7, #1
 8025dd0:	9304      	str	r3, [sp, #16]
 8025dd2:	4649      	mov	r1, r9
 8025dd4:	2300      	movs	r3, #0
 8025dd6:	220a      	movs	r2, #10
 8025dd8:	4658      	mov	r0, fp
 8025dda:	f000 fa41 	bl	8026260 <__multadd>
 8025dde:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025de0:	4681      	mov	r9, r0
 8025de2:	2b00      	cmp	r3, #0
 8025de4:	f000 8172 	beq.w	80260cc <_dtoa_r+0xb4c>
 8025de8:	2300      	movs	r3, #0
 8025dea:	4629      	mov	r1, r5
 8025dec:	220a      	movs	r2, #10
 8025dee:	4658      	mov	r0, fp
 8025df0:	f000 fa36 	bl	8026260 <__multadd>
 8025df4:	9b00      	ldr	r3, [sp, #0]
 8025df6:	2b00      	cmp	r3, #0
 8025df8:	4605      	mov	r5, r0
 8025dfa:	dc67      	bgt.n	8025ecc <_dtoa_r+0x94c>
 8025dfc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025dfe:	2b02      	cmp	r3, #2
 8025e00:	dc41      	bgt.n	8025e86 <_dtoa_r+0x906>
 8025e02:	e063      	b.n	8025ecc <_dtoa_r+0x94c>
 8025e04:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8025e06:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8025e0a:	e746      	b.n	8025c9a <_dtoa_r+0x71a>
 8025e0c:	9b07      	ldr	r3, [sp, #28]
 8025e0e:	1e5c      	subs	r4, r3, #1
 8025e10:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025e12:	42a3      	cmp	r3, r4
 8025e14:	bfbf      	itttt	lt
 8025e16:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8025e18:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8025e1a:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8025e1c:	1ae3      	sublt	r3, r4, r3
 8025e1e:	bfb4      	ite	lt
 8025e20:	18d2      	addlt	r2, r2, r3
 8025e22:	1b1c      	subge	r4, r3, r4
 8025e24:	9b07      	ldr	r3, [sp, #28]
 8025e26:	bfbc      	itt	lt
 8025e28:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8025e2a:	2400      	movlt	r4, #0
 8025e2c:	2b00      	cmp	r3, #0
 8025e2e:	bfb5      	itete	lt
 8025e30:	eba8 0603 	sublt.w	r6, r8, r3
 8025e34:	9b07      	ldrge	r3, [sp, #28]
 8025e36:	2300      	movlt	r3, #0
 8025e38:	4646      	movge	r6, r8
 8025e3a:	e730      	b.n	8025c9e <_dtoa_r+0x71e>
 8025e3c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8025e3e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8025e40:	4646      	mov	r6, r8
 8025e42:	e735      	b.n	8025cb0 <_dtoa_r+0x730>
 8025e44:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8025e46:	e75c      	b.n	8025d02 <_dtoa_r+0x782>
 8025e48:	2300      	movs	r3, #0
 8025e4a:	e788      	b.n	8025d5e <_dtoa_r+0x7de>
 8025e4c:	3fe00000 	.word	0x3fe00000
 8025e50:	40240000 	.word	0x40240000
 8025e54:	40140000 	.word	0x40140000
 8025e58:	9b02      	ldr	r3, [sp, #8]
 8025e5a:	e780      	b.n	8025d5e <_dtoa_r+0x7de>
 8025e5c:	2300      	movs	r3, #0
 8025e5e:	930a      	str	r3, [sp, #40]	@ 0x28
 8025e60:	e782      	b.n	8025d68 <_dtoa_r+0x7e8>
 8025e62:	d099      	beq.n	8025d98 <_dtoa_r+0x818>
 8025e64:	9a08      	ldr	r2, [sp, #32]
 8025e66:	331c      	adds	r3, #28
 8025e68:	441a      	add	r2, r3
 8025e6a:	4498      	add	r8, r3
 8025e6c:	441e      	add	r6, r3
 8025e6e:	9208      	str	r2, [sp, #32]
 8025e70:	e792      	b.n	8025d98 <_dtoa_r+0x818>
 8025e72:	4603      	mov	r3, r0
 8025e74:	e7f6      	b.n	8025e64 <_dtoa_r+0x8e4>
 8025e76:	9b07      	ldr	r3, [sp, #28]
 8025e78:	9704      	str	r7, [sp, #16]
 8025e7a:	2b00      	cmp	r3, #0
 8025e7c:	dc20      	bgt.n	8025ec0 <_dtoa_r+0x940>
 8025e7e:	9300      	str	r3, [sp, #0]
 8025e80:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025e82:	2b02      	cmp	r3, #2
 8025e84:	dd1e      	ble.n	8025ec4 <_dtoa_r+0x944>
 8025e86:	9b00      	ldr	r3, [sp, #0]
 8025e88:	2b00      	cmp	r3, #0
 8025e8a:	f47f aec0 	bne.w	8025c0e <_dtoa_r+0x68e>
 8025e8e:	4621      	mov	r1, r4
 8025e90:	2205      	movs	r2, #5
 8025e92:	4658      	mov	r0, fp
 8025e94:	f000 f9e4 	bl	8026260 <__multadd>
 8025e98:	4601      	mov	r1, r0
 8025e9a:	4604      	mov	r4, r0
 8025e9c:	4648      	mov	r0, r9
 8025e9e:	f000 fbf7 	bl	8026690 <__mcmp>
 8025ea2:	2800      	cmp	r0, #0
 8025ea4:	f77f aeb3 	ble.w	8025c0e <_dtoa_r+0x68e>
 8025ea8:	4656      	mov	r6, sl
 8025eaa:	2331      	movs	r3, #49	@ 0x31
 8025eac:	f806 3b01 	strb.w	r3, [r6], #1
 8025eb0:	9b04      	ldr	r3, [sp, #16]
 8025eb2:	3301      	adds	r3, #1
 8025eb4:	9304      	str	r3, [sp, #16]
 8025eb6:	e6ae      	b.n	8025c16 <_dtoa_r+0x696>
 8025eb8:	9c07      	ldr	r4, [sp, #28]
 8025eba:	9704      	str	r7, [sp, #16]
 8025ebc:	4625      	mov	r5, r4
 8025ebe:	e7f3      	b.n	8025ea8 <_dtoa_r+0x928>
 8025ec0:	9b07      	ldr	r3, [sp, #28]
 8025ec2:	9300      	str	r3, [sp, #0]
 8025ec4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025ec6:	2b00      	cmp	r3, #0
 8025ec8:	f000 8104 	beq.w	80260d4 <_dtoa_r+0xb54>
 8025ecc:	2e00      	cmp	r6, #0
 8025ece:	dd05      	ble.n	8025edc <_dtoa_r+0x95c>
 8025ed0:	4629      	mov	r1, r5
 8025ed2:	4632      	mov	r2, r6
 8025ed4:	4658      	mov	r0, fp
 8025ed6:	f000 fb6f 	bl	80265b8 <__lshift>
 8025eda:	4605      	mov	r5, r0
 8025edc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025ede:	2b00      	cmp	r3, #0
 8025ee0:	d05a      	beq.n	8025f98 <_dtoa_r+0xa18>
 8025ee2:	6869      	ldr	r1, [r5, #4]
 8025ee4:	4658      	mov	r0, fp
 8025ee6:	f000 f959 	bl	802619c <_Balloc>
 8025eea:	4606      	mov	r6, r0
 8025eec:	b928      	cbnz	r0, 8025efa <_dtoa_r+0x97a>
 8025eee:	4b84      	ldr	r3, [pc, #528]	@ (8026100 <_dtoa_r+0xb80>)
 8025ef0:	4602      	mov	r2, r0
 8025ef2:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8025ef6:	f7ff bb5a 	b.w	80255ae <_dtoa_r+0x2e>
 8025efa:	692a      	ldr	r2, [r5, #16]
 8025efc:	3202      	adds	r2, #2
 8025efe:	0092      	lsls	r2, r2, #2
 8025f00:	f105 010c 	add.w	r1, r5, #12
 8025f04:	300c      	adds	r0, #12
 8025f06:	f7ff fa46 	bl	8025396 <memcpy>
 8025f0a:	2201      	movs	r2, #1
 8025f0c:	4631      	mov	r1, r6
 8025f0e:	4658      	mov	r0, fp
 8025f10:	f000 fb52 	bl	80265b8 <__lshift>
 8025f14:	f10a 0301 	add.w	r3, sl, #1
 8025f18:	9307      	str	r3, [sp, #28]
 8025f1a:	9b00      	ldr	r3, [sp, #0]
 8025f1c:	4453      	add	r3, sl
 8025f1e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8025f20:	9b02      	ldr	r3, [sp, #8]
 8025f22:	f003 0301 	and.w	r3, r3, #1
 8025f26:	462f      	mov	r7, r5
 8025f28:	930a      	str	r3, [sp, #40]	@ 0x28
 8025f2a:	4605      	mov	r5, r0
 8025f2c:	9b07      	ldr	r3, [sp, #28]
 8025f2e:	4621      	mov	r1, r4
 8025f30:	3b01      	subs	r3, #1
 8025f32:	4648      	mov	r0, r9
 8025f34:	9300      	str	r3, [sp, #0]
 8025f36:	f7ff fa99 	bl	802546c <quorem>
 8025f3a:	4639      	mov	r1, r7
 8025f3c:	9002      	str	r0, [sp, #8]
 8025f3e:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8025f42:	4648      	mov	r0, r9
 8025f44:	f000 fba4 	bl	8026690 <__mcmp>
 8025f48:	462a      	mov	r2, r5
 8025f4a:	9008      	str	r0, [sp, #32]
 8025f4c:	4621      	mov	r1, r4
 8025f4e:	4658      	mov	r0, fp
 8025f50:	f000 fbba 	bl	80266c8 <__mdiff>
 8025f54:	68c2      	ldr	r2, [r0, #12]
 8025f56:	4606      	mov	r6, r0
 8025f58:	bb02      	cbnz	r2, 8025f9c <_dtoa_r+0xa1c>
 8025f5a:	4601      	mov	r1, r0
 8025f5c:	4648      	mov	r0, r9
 8025f5e:	f000 fb97 	bl	8026690 <__mcmp>
 8025f62:	4602      	mov	r2, r0
 8025f64:	4631      	mov	r1, r6
 8025f66:	4658      	mov	r0, fp
 8025f68:	920e      	str	r2, [sp, #56]	@ 0x38
 8025f6a:	f000 f957 	bl	802621c <_Bfree>
 8025f6e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025f70:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8025f72:	9e07      	ldr	r6, [sp, #28]
 8025f74:	ea43 0102 	orr.w	r1, r3, r2
 8025f78:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025f7a:	4319      	orrs	r1, r3
 8025f7c:	d110      	bne.n	8025fa0 <_dtoa_r+0xa20>
 8025f7e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8025f82:	d029      	beq.n	8025fd8 <_dtoa_r+0xa58>
 8025f84:	9b08      	ldr	r3, [sp, #32]
 8025f86:	2b00      	cmp	r3, #0
 8025f88:	dd02      	ble.n	8025f90 <_dtoa_r+0xa10>
 8025f8a:	9b02      	ldr	r3, [sp, #8]
 8025f8c:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8025f90:	9b00      	ldr	r3, [sp, #0]
 8025f92:	f883 8000 	strb.w	r8, [r3]
 8025f96:	e63f      	b.n	8025c18 <_dtoa_r+0x698>
 8025f98:	4628      	mov	r0, r5
 8025f9a:	e7bb      	b.n	8025f14 <_dtoa_r+0x994>
 8025f9c:	2201      	movs	r2, #1
 8025f9e:	e7e1      	b.n	8025f64 <_dtoa_r+0x9e4>
 8025fa0:	9b08      	ldr	r3, [sp, #32]
 8025fa2:	2b00      	cmp	r3, #0
 8025fa4:	db04      	blt.n	8025fb0 <_dtoa_r+0xa30>
 8025fa6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8025fa8:	430b      	orrs	r3, r1
 8025faa:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8025fac:	430b      	orrs	r3, r1
 8025fae:	d120      	bne.n	8025ff2 <_dtoa_r+0xa72>
 8025fb0:	2a00      	cmp	r2, #0
 8025fb2:	dded      	ble.n	8025f90 <_dtoa_r+0xa10>
 8025fb4:	4649      	mov	r1, r9
 8025fb6:	2201      	movs	r2, #1
 8025fb8:	4658      	mov	r0, fp
 8025fba:	f000 fafd 	bl	80265b8 <__lshift>
 8025fbe:	4621      	mov	r1, r4
 8025fc0:	4681      	mov	r9, r0
 8025fc2:	f000 fb65 	bl	8026690 <__mcmp>
 8025fc6:	2800      	cmp	r0, #0
 8025fc8:	dc03      	bgt.n	8025fd2 <_dtoa_r+0xa52>
 8025fca:	d1e1      	bne.n	8025f90 <_dtoa_r+0xa10>
 8025fcc:	f018 0f01 	tst.w	r8, #1
 8025fd0:	d0de      	beq.n	8025f90 <_dtoa_r+0xa10>
 8025fd2:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8025fd6:	d1d8      	bne.n	8025f8a <_dtoa_r+0xa0a>
 8025fd8:	9a00      	ldr	r2, [sp, #0]
 8025fda:	2339      	movs	r3, #57	@ 0x39
 8025fdc:	7013      	strb	r3, [r2, #0]
 8025fde:	4633      	mov	r3, r6
 8025fe0:	461e      	mov	r6, r3
 8025fe2:	3b01      	subs	r3, #1
 8025fe4:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8025fe8:	2a39      	cmp	r2, #57	@ 0x39
 8025fea:	d052      	beq.n	8026092 <_dtoa_r+0xb12>
 8025fec:	3201      	adds	r2, #1
 8025fee:	701a      	strb	r2, [r3, #0]
 8025ff0:	e612      	b.n	8025c18 <_dtoa_r+0x698>
 8025ff2:	2a00      	cmp	r2, #0
 8025ff4:	dd07      	ble.n	8026006 <_dtoa_r+0xa86>
 8025ff6:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8025ffa:	d0ed      	beq.n	8025fd8 <_dtoa_r+0xa58>
 8025ffc:	9a00      	ldr	r2, [sp, #0]
 8025ffe:	f108 0301 	add.w	r3, r8, #1
 8026002:	7013      	strb	r3, [r2, #0]
 8026004:	e608      	b.n	8025c18 <_dtoa_r+0x698>
 8026006:	9b07      	ldr	r3, [sp, #28]
 8026008:	9a07      	ldr	r2, [sp, #28]
 802600a:	f803 8c01 	strb.w	r8, [r3, #-1]
 802600e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026010:	4293      	cmp	r3, r2
 8026012:	d028      	beq.n	8026066 <_dtoa_r+0xae6>
 8026014:	4649      	mov	r1, r9
 8026016:	2300      	movs	r3, #0
 8026018:	220a      	movs	r2, #10
 802601a:	4658      	mov	r0, fp
 802601c:	f000 f920 	bl	8026260 <__multadd>
 8026020:	42af      	cmp	r7, r5
 8026022:	4681      	mov	r9, r0
 8026024:	f04f 0300 	mov.w	r3, #0
 8026028:	f04f 020a 	mov.w	r2, #10
 802602c:	4639      	mov	r1, r7
 802602e:	4658      	mov	r0, fp
 8026030:	d107      	bne.n	8026042 <_dtoa_r+0xac2>
 8026032:	f000 f915 	bl	8026260 <__multadd>
 8026036:	4607      	mov	r7, r0
 8026038:	4605      	mov	r5, r0
 802603a:	9b07      	ldr	r3, [sp, #28]
 802603c:	3301      	adds	r3, #1
 802603e:	9307      	str	r3, [sp, #28]
 8026040:	e774      	b.n	8025f2c <_dtoa_r+0x9ac>
 8026042:	f000 f90d 	bl	8026260 <__multadd>
 8026046:	4629      	mov	r1, r5
 8026048:	4607      	mov	r7, r0
 802604a:	2300      	movs	r3, #0
 802604c:	220a      	movs	r2, #10
 802604e:	4658      	mov	r0, fp
 8026050:	f000 f906 	bl	8026260 <__multadd>
 8026054:	4605      	mov	r5, r0
 8026056:	e7f0      	b.n	802603a <_dtoa_r+0xaba>
 8026058:	9b00      	ldr	r3, [sp, #0]
 802605a:	2b00      	cmp	r3, #0
 802605c:	bfcc      	ite	gt
 802605e:	461e      	movgt	r6, r3
 8026060:	2601      	movle	r6, #1
 8026062:	4456      	add	r6, sl
 8026064:	2700      	movs	r7, #0
 8026066:	4649      	mov	r1, r9
 8026068:	2201      	movs	r2, #1
 802606a:	4658      	mov	r0, fp
 802606c:	f000 faa4 	bl	80265b8 <__lshift>
 8026070:	4621      	mov	r1, r4
 8026072:	4681      	mov	r9, r0
 8026074:	f000 fb0c 	bl	8026690 <__mcmp>
 8026078:	2800      	cmp	r0, #0
 802607a:	dcb0      	bgt.n	8025fde <_dtoa_r+0xa5e>
 802607c:	d102      	bne.n	8026084 <_dtoa_r+0xb04>
 802607e:	f018 0f01 	tst.w	r8, #1
 8026082:	d1ac      	bne.n	8025fde <_dtoa_r+0xa5e>
 8026084:	4633      	mov	r3, r6
 8026086:	461e      	mov	r6, r3
 8026088:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802608c:	2a30      	cmp	r2, #48	@ 0x30
 802608e:	d0fa      	beq.n	8026086 <_dtoa_r+0xb06>
 8026090:	e5c2      	b.n	8025c18 <_dtoa_r+0x698>
 8026092:	459a      	cmp	sl, r3
 8026094:	d1a4      	bne.n	8025fe0 <_dtoa_r+0xa60>
 8026096:	9b04      	ldr	r3, [sp, #16]
 8026098:	3301      	adds	r3, #1
 802609a:	9304      	str	r3, [sp, #16]
 802609c:	2331      	movs	r3, #49	@ 0x31
 802609e:	f88a 3000 	strb.w	r3, [sl]
 80260a2:	e5b9      	b.n	8025c18 <_dtoa_r+0x698>
 80260a4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80260a6:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8026104 <_dtoa_r+0xb84>
 80260aa:	b11b      	cbz	r3, 80260b4 <_dtoa_r+0xb34>
 80260ac:	f10a 0308 	add.w	r3, sl, #8
 80260b0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80260b2:	6013      	str	r3, [r2, #0]
 80260b4:	4650      	mov	r0, sl
 80260b6:	b019      	add	sp, #100	@ 0x64
 80260b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80260bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80260be:	2b01      	cmp	r3, #1
 80260c0:	f77f ae37 	ble.w	8025d32 <_dtoa_r+0x7b2>
 80260c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80260c6:	930a      	str	r3, [sp, #40]	@ 0x28
 80260c8:	2001      	movs	r0, #1
 80260ca:	e655      	b.n	8025d78 <_dtoa_r+0x7f8>
 80260cc:	9b00      	ldr	r3, [sp, #0]
 80260ce:	2b00      	cmp	r3, #0
 80260d0:	f77f aed6 	ble.w	8025e80 <_dtoa_r+0x900>
 80260d4:	4656      	mov	r6, sl
 80260d6:	4621      	mov	r1, r4
 80260d8:	4648      	mov	r0, r9
 80260da:	f7ff f9c7 	bl	802546c <quorem>
 80260de:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80260e2:	f806 8b01 	strb.w	r8, [r6], #1
 80260e6:	9b00      	ldr	r3, [sp, #0]
 80260e8:	eba6 020a 	sub.w	r2, r6, sl
 80260ec:	4293      	cmp	r3, r2
 80260ee:	ddb3      	ble.n	8026058 <_dtoa_r+0xad8>
 80260f0:	4649      	mov	r1, r9
 80260f2:	2300      	movs	r3, #0
 80260f4:	220a      	movs	r2, #10
 80260f6:	4658      	mov	r0, fp
 80260f8:	f000 f8b2 	bl	8026260 <__multadd>
 80260fc:	4681      	mov	r9, r0
 80260fe:	e7ea      	b.n	80260d6 <_dtoa_r+0xb56>
 8026100:	0802a178 	.word	0x0802a178
 8026104:	0802a0fc 	.word	0x0802a0fc

08026108 <_free_r>:
 8026108:	b538      	push	{r3, r4, r5, lr}
 802610a:	4605      	mov	r5, r0
 802610c:	2900      	cmp	r1, #0
 802610e:	d041      	beq.n	8026194 <_free_r+0x8c>
 8026110:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8026114:	1f0c      	subs	r4, r1, #4
 8026116:	2b00      	cmp	r3, #0
 8026118:	bfb8      	it	lt
 802611a:	18e4      	addlt	r4, r4, r3
 802611c:	f7fe f980 	bl	8024420 <__malloc_lock>
 8026120:	4a1d      	ldr	r2, [pc, #116]	@ (8026198 <_free_r+0x90>)
 8026122:	6813      	ldr	r3, [r2, #0]
 8026124:	b933      	cbnz	r3, 8026134 <_free_r+0x2c>
 8026126:	6063      	str	r3, [r4, #4]
 8026128:	6014      	str	r4, [r2, #0]
 802612a:	4628      	mov	r0, r5
 802612c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8026130:	f7fe b97c 	b.w	802442c <__malloc_unlock>
 8026134:	42a3      	cmp	r3, r4
 8026136:	d908      	bls.n	802614a <_free_r+0x42>
 8026138:	6820      	ldr	r0, [r4, #0]
 802613a:	1821      	adds	r1, r4, r0
 802613c:	428b      	cmp	r3, r1
 802613e:	bf01      	itttt	eq
 8026140:	6819      	ldreq	r1, [r3, #0]
 8026142:	685b      	ldreq	r3, [r3, #4]
 8026144:	1809      	addeq	r1, r1, r0
 8026146:	6021      	streq	r1, [r4, #0]
 8026148:	e7ed      	b.n	8026126 <_free_r+0x1e>
 802614a:	461a      	mov	r2, r3
 802614c:	685b      	ldr	r3, [r3, #4]
 802614e:	b10b      	cbz	r3, 8026154 <_free_r+0x4c>
 8026150:	42a3      	cmp	r3, r4
 8026152:	d9fa      	bls.n	802614a <_free_r+0x42>
 8026154:	6811      	ldr	r1, [r2, #0]
 8026156:	1850      	adds	r0, r2, r1
 8026158:	42a0      	cmp	r0, r4
 802615a:	d10b      	bne.n	8026174 <_free_r+0x6c>
 802615c:	6820      	ldr	r0, [r4, #0]
 802615e:	4401      	add	r1, r0
 8026160:	1850      	adds	r0, r2, r1
 8026162:	4283      	cmp	r3, r0
 8026164:	6011      	str	r1, [r2, #0]
 8026166:	d1e0      	bne.n	802612a <_free_r+0x22>
 8026168:	6818      	ldr	r0, [r3, #0]
 802616a:	685b      	ldr	r3, [r3, #4]
 802616c:	6053      	str	r3, [r2, #4]
 802616e:	4408      	add	r0, r1
 8026170:	6010      	str	r0, [r2, #0]
 8026172:	e7da      	b.n	802612a <_free_r+0x22>
 8026174:	d902      	bls.n	802617c <_free_r+0x74>
 8026176:	230c      	movs	r3, #12
 8026178:	602b      	str	r3, [r5, #0]
 802617a:	e7d6      	b.n	802612a <_free_r+0x22>
 802617c:	6820      	ldr	r0, [r4, #0]
 802617e:	1821      	adds	r1, r4, r0
 8026180:	428b      	cmp	r3, r1
 8026182:	bf04      	itt	eq
 8026184:	6819      	ldreq	r1, [r3, #0]
 8026186:	685b      	ldreq	r3, [r3, #4]
 8026188:	6063      	str	r3, [r4, #4]
 802618a:	bf04      	itt	eq
 802618c:	1809      	addeq	r1, r1, r0
 802618e:	6021      	streq	r1, [r4, #0]
 8026190:	6054      	str	r4, [r2, #4]
 8026192:	e7ca      	b.n	802612a <_free_r+0x22>
 8026194:	bd38      	pop	{r3, r4, r5, pc}
 8026196:	bf00      	nop
 8026198:	20002cf8 	.word	0x20002cf8

0802619c <_Balloc>:
 802619c:	b570      	push	{r4, r5, r6, lr}
 802619e:	69c6      	ldr	r6, [r0, #28]
 80261a0:	4604      	mov	r4, r0
 80261a2:	460d      	mov	r5, r1
 80261a4:	b976      	cbnz	r6, 80261c4 <_Balloc+0x28>
 80261a6:	2010      	movs	r0, #16
 80261a8:	f7fe f888 	bl	80242bc <malloc>
 80261ac:	4602      	mov	r2, r0
 80261ae:	61e0      	str	r0, [r4, #28]
 80261b0:	b920      	cbnz	r0, 80261bc <_Balloc+0x20>
 80261b2:	4b18      	ldr	r3, [pc, #96]	@ (8026214 <_Balloc+0x78>)
 80261b4:	4818      	ldr	r0, [pc, #96]	@ (8026218 <_Balloc+0x7c>)
 80261b6:	216b      	movs	r1, #107	@ 0x6b
 80261b8:	f7fe f85c 	bl	8024274 <__assert_func>
 80261bc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80261c0:	6006      	str	r6, [r0, #0]
 80261c2:	60c6      	str	r6, [r0, #12]
 80261c4:	69e6      	ldr	r6, [r4, #28]
 80261c6:	68f3      	ldr	r3, [r6, #12]
 80261c8:	b183      	cbz	r3, 80261ec <_Balloc+0x50>
 80261ca:	69e3      	ldr	r3, [r4, #28]
 80261cc:	68db      	ldr	r3, [r3, #12]
 80261ce:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80261d2:	b9b8      	cbnz	r0, 8026204 <_Balloc+0x68>
 80261d4:	2101      	movs	r1, #1
 80261d6:	fa01 f605 	lsl.w	r6, r1, r5
 80261da:	1d72      	adds	r2, r6, #5
 80261dc:	0092      	lsls	r2, r2, #2
 80261de:	4620      	mov	r0, r4
 80261e0:	f000 ff76 	bl	80270d0 <_calloc_r>
 80261e4:	b160      	cbz	r0, 8026200 <_Balloc+0x64>
 80261e6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80261ea:	e00e      	b.n	802620a <_Balloc+0x6e>
 80261ec:	2221      	movs	r2, #33	@ 0x21
 80261ee:	2104      	movs	r1, #4
 80261f0:	4620      	mov	r0, r4
 80261f2:	f000 ff6d 	bl	80270d0 <_calloc_r>
 80261f6:	69e3      	ldr	r3, [r4, #28]
 80261f8:	60f0      	str	r0, [r6, #12]
 80261fa:	68db      	ldr	r3, [r3, #12]
 80261fc:	2b00      	cmp	r3, #0
 80261fe:	d1e4      	bne.n	80261ca <_Balloc+0x2e>
 8026200:	2000      	movs	r0, #0
 8026202:	bd70      	pop	{r4, r5, r6, pc}
 8026204:	6802      	ldr	r2, [r0, #0]
 8026206:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 802620a:	2300      	movs	r3, #0
 802620c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8026210:	e7f7      	b.n	8026202 <_Balloc+0x66>
 8026212:	bf00      	nop
 8026214:	0802a109 	.word	0x0802a109
 8026218:	0802a189 	.word	0x0802a189

0802621c <_Bfree>:
 802621c:	b570      	push	{r4, r5, r6, lr}
 802621e:	69c6      	ldr	r6, [r0, #28]
 8026220:	4605      	mov	r5, r0
 8026222:	460c      	mov	r4, r1
 8026224:	b976      	cbnz	r6, 8026244 <_Bfree+0x28>
 8026226:	2010      	movs	r0, #16
 8026228:	f7fe f848 	bl	80242bc <malloc>
 802622c:	4602      	mov	r2, r0
 802622e:	61e8      	str	r0, [r5, #28]
 8026230:	b920      	cbnz	r0, 802623c <_Bfree+0x20>
 8026232:	4b09      	ldr	r3, [pc, #36]	@ (8026258 <_Bfree+0x3c>)
 8026234:	4809      	ldr	r0, [pc, #36]	@ (802625c <_Bfree+0x40>)
 8026236:	218f      	movs	r1, #143	@ 0x8f
 8026238:	f7fe f81c 	bl	8024274 <__assert_func>
 802623c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8026240:	6006      	str	r6, [r0, #0]
 8026242:	60c6      	str	r6, [r0, #12]
 8026244:	b13c      	cbz	r4, 8026256 <_Bfree+0x3a>
 8026246:	69eb      	ldr	r3, [r5, #28]
 8026248:	6862      	ldr	r2, [r4, #4]
 802624a:	68db      	ldr	r3, [r3, #12]
 802624c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8026250:	6021      	str	r1, [r4, #0]
 8026252:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8026256:	bd70      	pop	{r4, r5, r6, pc}
 8026258:	0802a109 	.word	0x0802a109
 802625c:	0802a189 	.word	0x0802a189

08026260 <__multadd>:
 8026260:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026264:	690d      	ldr	r5, [r1, #16]
 8026266:	4607      	mov	r7, r0
 8026268:	460c      	mov	r4, r1
 802626a:	461e      	mov	r6, r3
 802626c:	f101 0c14 	add.w	ip, r1, #20
 8026270:	2000      	movs	r0, #0
 8026272:	f8dc 3000 	ldr.w	r3, [ip]
 8026276:	b299      	uxth	r1, r3
 8026278:	fb02 6101 	mla	r1, r2, r1, r6
 802627c:	0c1e      	lsrs	r6, r3, #16
 802627e:	0c0b      	lsrs	r3, r1, #16
 8026280:	fb02 3306 	mla	r3, r2, r6, r3
 8026284:	b289      	uxth	r1, r1
 8026286:	3001      	adds	r0, #1
 8026288:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 802628c:	4285      	cmp	r5, r0
 802628e:	f84c 1b04 	str.w	r1, [ip], #4
 8026292:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8026296:	dcec      	bgt.n	8026272 <__multadd+0x12>
 8026298:	b30e      	cbz	r6, 80262de <__multadd+0x7e>
 802629a:	68a3      	ldr	r3, [r4, #8]
 802629c:	42ab      	cmp	r3, r5
 802629e:	dc19      	bgt.n	80262d4 <__multadd+0x74>
 80262a0:	6861      	ldr	r1, [r4, #4]
 80262a2:	4638      	mov	r0, r7
 80262a4:	3101      	adds	r1, #1
 80262a6:	f7ff ff79 	bl	802619c <_Balloc>
 80262aa:	4680      	mov	r8, r0
 80262ac:	b928      	cbnz	r0, 80262ba <__multadd+0x5a>
 80262ae:	4602      	mov	r2, r0
 80262b0:	4b0c      	ldr	r3, [pc, #48]	@ (80262e4 <__multadd+0x84>)
 80262b2:	480d      	ldr	r0, [pc, #52]	@ (80262e8 <__multadd+0x88>)
 80262b4:	21ba      	movs	r1, #186	@ 0xba
 80262b6:	f7fd ffdd 	bl	8024274 <__assert_func>
 80262ba:	6922      	ldr	r2, [r4, #16]
 80262bc:	3202      	adds	r2, #2
 80262be:	f104 010c 	add.w	r1, r4, #12
 80262c2:	0092      	lsls	r2, r2, #2
 80262c4:	300c      	adds	r0, #12
 80262c6:	f7ff f866 	bl	8025396 <memcpy>
 80262ca:	4621      	mov	r1, r4
 80262cc:	4638      	mov	r0, r7
 80262ce:	f7ff ffa5 	bl	802621c <_Bfree>
 80262d2:	4644      	mov	r4, r8
 80262d4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80262d8:	3501      	adds	r5, #1
 80262da:	615e      	str	r6, [r3, #20]
 80262dc:	6125      	str	r5, [r4, #16]
 80262de:	4620      	mov	r0, r4
 80262e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80262e4:	0802a178 	.word	0x0802a178
 80262e8:	0802a189 	.word	0x0802a189

080262ec <__hi0bits>:
 80262ec:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80262f0:	4603      	mov	r3, r0
 80262f2:	bf36      	itet	cc
 80262f4:	0403      	lslcc	r3, r0, #16
 80262f6:	2000      	movcs	r0, #0
 80262f8:	2010      	movcc	r0, #16
 80262fa:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80262fe:	bf3c      	itt	cc
 8026300:	021b      	lslcc	r3, r3, #8
 8026302:	3008      	addcc	r0, #8
 8026304:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8026308:	bf3c      	itt	cc
 802630a:	011b      	lslcc	r3, r3, #4
 802630c:	3004      	addcc	r0, #4
 802630e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8026312:	bf3c      	itt	cc
 8026314:	009b      	lslcc	r3, r3, #2
 8026316:	3002      	addcc	r0, #2
 8026318:	2b00      	cmp	r3, #0
 802631a:	db05      	blt.n	8026328 <__hi0bits+0x3c>
 802631c:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8026320:	f100 0001 	add.w	r0, r0, #1
 8026324:	bf08      	it	eq
 8026326:	2020      	moveq	r0, #32
 8026328:	4770      	bx	lr

0802632a <__lo0bits>:
 802632a:	6803      	ldr	r3, [r0, #0]
 802632c:	4602      	mov	r2, r0
 802632e:	f013 0007 	ands.w	r0, r3, #7
 8026332:	d00b      	beq.n	802634c <__lo0bits+0x22>
 8026334:	07d9      	lsls	r1, r3, #31
 8026336:	d421      	bmi.n	802637c <__lo0bits+0x52>
 8026338:	0798      	lsls	r0, r3, #30
 802633a:	bf49      	itett	mi
 802633c:	085b      	lsrmi	r3, r3, #1
 802633e:	089b      	lsrpl	r3, r3, #2
 8026340:	2001      	movmi	r0, #1
 8026342:	6013      	strmi	r3, [r2, #0]
 8026344:	bf5c      	itt	pl
 8026346:	6013      	strpl	r3, [r2, #0]
 8026348:	2002      	movpl	r0, #2
 802634a:	4770      	bx	lr
 802634c:	b299      	uxth	r1, r3
 802634e:	b909      	cbnz	r1, 8026354 <__lo0bits+0x2a>
 8026350:	0c1b      	lsrs	r3, r3, #16
 8026352:	2010      	movs	r0, #16
 8026354:	b2d9      	uxtb	r1, r3
 8026356:	b909      	cbnz	r1, 802635c <__lo0bits+0x32>
 8026358:	3008      	adds	r0, #8
 802635a:	0a1b      	lsrs	r3, r3, #8
 802635c:	0719      	lsls	r1, r3, #28
 802635e:	bf04      	itt	eq
 8026360:	091b      	lsreq	r3, r3, #4
 8026362:	3004      	addeq	r0, #4
 8026364:	0799      	lsls	r1, r3, #30
 8026366:	bf04      	itt	eq
 8026368:	089b      	lsreq	r3, r3, #2
 802636a:	3002      	addeq	r0, #2
 802636c:	07d9      	lsls	r1, r3, #31
 802636e:	d403      	bmi.n	8026378 <__lo0bits+0x4e>
 8026370:	085b      	lsrs	r3, r3, #1
 8026372:	f100 0001 	add.w	r0, r0, #1
 8026376:	d003      	beq.n	8026380 <__lo0bits+0x56>
 8026378:	6013      	str	r3, [r2, #0]
 802637a:	4770      	bx	lr
 802637c:	2000      	movs	r0, #0
 802637e:	4770      	bx	lr
 8026380:	2020      	movs	r0, #32
 8026382:	4770      	bx	lr

08026384 <__i2b>:
 8026384:	b510      	push	{r4, lr}
 8026386:	460c      	mov	r4, r1
 8026388:	2101      	movs	r1, #1
 802638a:	f7ff ff07 	bl	802619c <_Balloc>
 802638e:	4602      	mov	r2, r0
 8026390:	b928      	cbnz	r0, 802639e <__i2b+0x1a>
 8026392:	4b05      	ldr	r3, [pc, #20]	@ (80263a8 <__i2b+0x24>)
 8026394:	4805      	ldr	r0, [pc, #20]	@ (80263ac <__i2b+0x28>)
 8026396:	f240 1145 	movw	r1, #325	@ 0x145
 802639a:	f7fd ff6b 	bl	8024274 <__assert_func>
 802639e:	2301      	movs	r3, #1
 80263a0:	6144      	str	r4, [r0, #20]
 80263a2:	6103      	str	r3, [r0, #16]
 80263a4:	bd10      	pop	{r4, pc}
 80263a6:	bf00      	nop
 80263a8:	0802a178 	.word	0x0802a178
 80263ac:	0802a189 	.word	0x0802a189

080263b0 <__multiply>:
 80263b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80263b4:	4614      	mov	r4, r2
 80263b6:	690a      	ldr	r2, [r1, #16]
 80263b8:	6923      	ldr	r3, [r4, #16]
 80263ba:	429a      	cmp	r2, r3
 80263bc:	bfa8      	it	ge
 80263be:	4623      	movge	r3, r4
 80263c0:	460f      	mov	r7, r1
 80263c2:	bfa4      	itt	ge
 80263c4:	460c      	movge	r4, r1
 80263c6:	461f      	movge	r7, r3
 80263c8:	f8d4 a010 	ldr.w	sl, [r4, #16]
 80263cc:	f8d7 9010 	ldr.w	r9, [r7, #16]
 80263d0:	68a3      	ldr	r3, [r4, #8]
 80263d2:	6861      	ldr	r1, [r4, #4]
 80263d4:	eb0a 0609 	add.w	r6, sl, r9
 80263d8:	42b3      	cmp	r3, r6
 80263da:	b085      	sub	sp, #20
 80263dc:	bfb8      	it	lt
 80263de:	3101      	addlt	r1, #1
 80263e0:	f7ff fedc 	bl	802619c <_Balloc>
 80263e4:	b930      	cbnz	r0, 80263f4 <__multiply+0x44>
 80263e6:	4602      	mov	r2, r0
 80263e8:	4b44      	ldr	r3, [pc, #272]	@ (80264fc <__multiply+0x14c>)
 80263ea:	4845      	ldr	r0, [pc, #276]	@ (8026500 <__multiply+0x150>)
 80263ec:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80263f0:	f7fd ff40 	bl	8024274 <__assert_func>
 80263f4:	f100 0514 	add.w	r5, r0, #20
 80263f8:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80263fc:	462b      	mov	r3, r5
 80263fe:	2200      	movs	r2, #0
 8026400:	4543      	cmp	r3, r8
 8026402:	d321      	bcc.n	8026448 <__multiply+0x98>
 8026404:	f107 0114 	add.w	r1, r7, #20
 8026408:	f104 0214 	add.w	r2, r4, #20
 802640c:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8026410:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8026414:	9302      	str	r3, [sp, #8]
 8026416:	1b13      	subs	r3, r2, r4
 8026418:	3b15      	subs	r3, #21
 802641a:	f023 0303 	bic.w	r3, r3, #3
 802641e:	3304      	adds	r3, #4
 8026420:	f104 0715 	add.w	r7, r4, #21
 8026424:	42ba      	cmp	r2, r7
 8026426:	bf38      	it	cc
 8026428:	2304      	movcc	r3, #4
 802642a:	9301      	str	r3, [sp, #4]
 802642c:	9b02      	ldr	r3, [sp, #8]
 802642e:	9103      	str	r1, [sp, #12]
 8026430:	428b      	cmp	r3, r1
 8026432:	d80c      	bhi.n	802644e <__multiply+0x9e>
 8026434:	2e00      	cmp	r6, #0
 8026436:	dd03      	ble.n	8026440 <__multiply+0x90>
 8026438:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 802643c:	2b00      	cmp	r3, #0
 802643e:	d05b      	beq.n	80264f8 <__multiply+0x148>
 8026440:	6106      	str	r6, [r0, #16]
 8026442:	b005      	add	sp, #20
 8026444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026448:	f843 2b04 	str.w	r2, [r3], #4
 802644c:	e7d8      	b.n	8026400 <__multiply+0x50>
 802644e:	f8b1 a000 	ldrh.w	sl, [r1]
 8026452:	f1ba 0f00 	cmp.w	sl, #0
 8026456:	d024      	beq.n	80264a2 <__multiply+0xf2>
 8026458:	f104 0e14 	add.w	lr, r4, #20
 802645c:	46a9      	mov	r9, r5
 802645e:	f04f 0c00 	mov.w	ip, #0
 8026462:	f85e 7b04 	ldr.w	r7, [lr], #4
 8026466:	f8d9 3000 	ldr.w	r3, [r9]
 802646a:	fa1f fb87 	uxth.w	fp, r7
 802646e:	b29b      	uxth	r3, r3
 8026470:	fb0a 330b 	mla	r3, sl, fp, r3
 8026474:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8026478:	f8d9 7000 	ldr.w	r7, [r9]
 802647c:	4463      	add	r3, ip
 802647e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8026482:	fb0a c70b 	mla	r7, sl, fp, ip
 8026486:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 802648a:	b29b      	uxth	r3, r3
 802648c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8026490:	4572      	cmp	r2, lr
 8026492:	f849 3b04 	str.w	r3, [r9], #4
 8026496:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 802649a:	d8e2      	bhi.n	8026462 <__multiply+0xb2>
 802649c:	9b01      	ldr	r3, [sp, #4]
 802649e:	f845 c003 	str.w	ip, [r5, r3]
 80264a2:	9b03      	ldr	r3, [sp, #12]
 80264a4:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80264a8:	3104      	adds	r1, #4
 80264aa:	f1b9 0f00 	cmp.w	r9, #0
 80264ae:	d021      	beq.n	80264f4 <__multiply+0x144>
 80264b0:	682b      	ldr	r3, [r5, #0]
 80264b2:	f104 0c14 	add.w	ip, r4, #20
 80264b6:	46ae      	mov	lr, r5
 80264b8:	f04f 0a00 	mov.w	sl, #0
 80264bc:	f8bc b000 	ldrh.w	fp, [ip]
 80264c0:	f8be 7002 	ldrh.w	r7, [lr, #2]
 80264c4:	fb09 770b 	mla	r7, r9, fp, r7
 80264c8:	4457      	add	r7, sl
 80264ca:	b29b      	uxth	r3, r3
 80264cc:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80264d0:	f84e 3b04 	str.w	r3, [lr], #4
 80264d4:	f85c 3b04 	ldr.w	r3, [ip], #4
 80264d8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80264dc:	f8be 3000 	ldrh.w	r3, [lr]
 80264e0:	fb09 330a 	mla	r3, r9, sl, r3
 80264e4:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 80264e8:	4562      	cmp	r2, ip
 80264ea:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80264ee:	d8e5      	bhi.n	80264bc <__multiply+0x10c>
 80264f0:	9f01      	ldr	r7, [sp, #4]
 80264f2:	51eb      	str	r3, [r5, r7]
 80264f4:	3504      	adds	r5, #4
 80264f6:	e799      	b.n	802642c <__multiply+0x7c>
 80264f8:	3e01      	subs	r6, #1
 80264fa:	e79b      	b.n	8026434 <__multiply+0x84>
 80264fc:	0802a178 	.word	0x0802a178
 8026500:	0802a189 	.word	0x0802a189

08026504 <__pow5mult>:
 8026504:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026508:	4615      	mov	r5, r2
 802650a:	f012 0203 	ands.w	r2, r2, #3
 802650e:	4607      	mov	r7, r0
 8026510:	460e      	mov	r6, r1
 8026512:	d007      	beq.n	8026524 <__pow5mult+0x20>
 8026514:	4c25      	ldr	r4, [pc, #148]	@ (80265ac <__pow5mult+0xa8>)
 8026516:	3a01      	subs	r2, #1
 8026518:	2300      	movs	r3, #0
 802651a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 802651e:	f7ff fe9f 	bl	8026260 <__multadd>
 8026522:	4606      	mov	r6, r0
 8026524:	10ad      	asrs	r5, r5, #2
 8026526:	d03d      	beq.n	80265a4 <__pow5mult+0xa0>
 8026528:	69fc      	ldr	r4, [r7, #28]
 802652a:	b97c      	cbnz	r4, 802654c <__pow5mult+0x48>
 802652c:	2010      	movs	r0, #16
 802652e:	f7fd fec5 	bl	80242bc <malloc>
 8026532:	4602      	mov	r2, r0
 8026534:	61f8      	str	r0, [r7, #28]
 8026536:	b928      	cbnz	r0, 8026544 <__pow5mult+0x40>
 8026538:	4b1d      	ldr	r3, [pc, #116]	@ (80265b0 <__pow5mult+0xac>)
 802653a:	481e      	ldr	r0, [pc, #120]	@ (80265b4 <__pow5mult+0xb0>)
 802653c:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8026540:	f7fd fe98 	bl	8024274 <__assert_func>
 8026544:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8026548:	6004      	str	r4, [r0, #0]
 802654a:	60c4      	str	r4, [r0, #12]
 802654c:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8026550:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8026554:	b94c      	cbnz	r4, 802656a <__pow5mult+0x66>
 8026556:	f240 2171 	movw	r1, #625	@ 0x271
 802655a:	4638      	mov	r0, r7
 802655c:	f7ff ff12 	bl	8026384 <__i2b>
 8026560:	2300      	movs	r3, #0
 8026562:	f8c8 0008 	str.w	r0, [r8, #8]
 8026566:	4604      	mov	r4, r0
 8026568:	6003      	str	r3, [r0, #0]
 802656a:	f04f 0900 	mov.w	r9, #0
 802656e:	07eb      	lsls	r3, r5, #31
 8026570:	d50a      	bpl.n	8026588 <__pow5mult+0x84>
 8026572:	4631      	mov	r1, r6
 8026574:	4622      	mov	r2, r4
 8026576:	4638      	mov	r0, r7
 8026578:	f7ff ff1a 	bl	80263b0 <__multiply>
 802657c:	4631      	mov	r1, r6
 802657e:	4680      	mov	r8, r0
 8026580:	4638      	mov	r0, r7
 8026582:	f7ff fe4b 	bl	802621c <_Bfree>
 8026586:	4646      	mov	r6, r8
 8026588:	106d      	asrs	r5, r5, #1
 802658a:	d00b      	beq.n	80265a4 <__pow5mult+0xa0>
 802658c:	6820      	ldr	r0, [r4, #0]
 802658e:	b938      	cbnz	r0, 80265a0 <__pow5mult+0x9c>
 8026590:	4622      	mov	r2, r4
 8026592:	4621      	mov	r1, r4
 8026594:	4638      	mov	r0, r7
 8026596:	f7ff ff0b 	bl	80263b0 <__multiply>
 802659a:	6020      	str	r0, [r4, #0]
 802659c:	f8c0 9000 	str.w	r9, [r0]
 80265a0:	4604      	mov	r4, r0
 80265a2:	e7e4      	b.n	802656e <__pow5mult+0x6a>
 80265a4:	4630      	mov	r0, r6
 80265a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80265aa:	bf00      	nop
 80265ac:	0802a1e4 	.word	0x0802a1e4
 80265b0:	0802a109 	.word	0x0802a109
 80265b4:	0802a189 	.word	0x0802a189

080265b8 <__lshift>:
 80265b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80265bc:	460c      	mov	r4, r1
 80265be:	6849      	ldr	r1, [r1, #4]
 80265c0:	6923      	ldr	r3, [r4, #16]
 80265c2:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80265c6:	68a3      	ldr	r3, [r4, #8]
 80265c8:	4607      	mov	r7, r0
 80265ca:	4691      	mov	r9, r2
 80265cc:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80265d0:	f108 0601 	add.w	r6, r8, #1
 80265d4:	42b3      	cmp	r3, r6
 80265d6:	db0b      	blt.n	80265f0 <__lshift+0x38>
 80265d8:	4638      	mov	r0, r7
 80265da:	f7ff fddf 	bl	802619c <_Balloc>
 80265de:	4605      	mov	r5, r0
 80265e0:	b948      	cbnz	r0, 80265f6 <__lshift+0x3e>
 80265e2:	4602      	mov	r2, r0
 80265e4:	4b28      	ldr	r3, [pc, #160]	@ (8026688 <__lshift+0xd0>)
 80265e6:	4829      	ldr	r0, [pc, #164]	@ (802668c <__lshift+0xd4>)
 80265e8:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80265ec:	f7fd fe42 	bl	8024274 <__assert_func>
 80265f0:	3101      	adds	r1, #1
 80265f2:	005b      	lsls	r3, r3, #1
 80265f4:	e7ee      	b.n	80265d4 <__lshift+0x1c>
 80265f6:	2300      	movs	r3, #0
 80265f8:	f100 0114 	add.w	r1, r0, #20
 80265fc:	f100 0210 	add.w	r2, r0, #16
 8026600:	4618      	mov	r0, r3
 8026602:	4553      	cmp	r3, sl
 8026604:	db33      	blt.n	802666e <__lshift+0xb6>
 8026606:	6920      	ldr	r0, [r4, #16]
 8026608:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 802660c:	f104 0314 	add.w	r3, r4, #20
 8026610:	f019 091f 	ands.w	r9, r9, #31
 8026614:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8026618:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 802661c:	d02b      	beq.n	8026676 <__lshift+0xbe>
 802661e:	f1c9 0e20 	rsb	lr, r9, #32
 8026622:	468a      	mov	sl, r1
 8026624:	2200      	movs	r2, #0
 8026626:	6818      	ldr	r0, [r3, #0]
 8026628:	fa00 f009 	lsl.w	r0, r0, r9
 802662c:	4310      	orrs	r0, r2
 802662e:	f84a 0b04 	str.w	r0, [sl], #4
 8026632:	f853 2b04 	ldr.w	r2, [r3], #4
 8026636:	459c      	cmp	ip, r3
 8026638:	fa22 f20e 	lsr.w	r2, r2, lr
 802663c:	d8f3      	bhi.n	8026626 <__lshift+0x6e>
 802663e:	ebac 0304 	sub.w	r3, ip, r4
 8026642:	3b15      	subs	r3, #21
 8026644:	f023 0303 	bic.w	r3, r3, #3
 8026648:	3304      	adds	r3, #4
 802664a:	f104 0015 	add.w	r0, r4, #21
 802664e:	4584      	cmp	ip, r0
 8026650:	bf38      	it	cc
 8026652:	2304      	movcc	r3, #4
 8026654:	50ca      	str	r2, [r1, r3]
 8026656:	b10a      	cbz	r2, 802665c <__lshift+0xa4>
 8026658:	f108 0602 	add.w	r6, r8, #2
 802665c:	3e01      	subs	r6, #1
 802665e:	4638      	mov	r0, r7
 8026660:	612e      	str	r6, [r5, #16]
 8026662:	4621      	mov	r1, r4
 8026664:	f7ff fdda 	bl	802621c <_Bfree>
 8026668:	4628      	mov	r0, r5
 802666a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802666e:	f842 0f04 	str.w	r0, [r2, #4]!
 8026672:	3301      	adds	r3, #1
 8026674:	e7c5      	b.n	8026602 <__lshift+0x4a>
 8026676:	3904      	subs	r1, #4
 8026678:	f853 2b04 	ldr.w	r2, [r3], #4
 802667c:	f841 2f04 	str.w	r2, [r1, #4]!
 8026680:	459c      	cmp	ip, r3
 8026682:	d8f9      	bhi.n	8026678 <__lshift+0xc0>
 8026684:	e7ea      	b.n	802665c <__lshift+0xa4>
 8026686:	bf00      	nop
 8026688:	0802a178 	.word	0x0802a178
 802668c:	0802a189 	.word	0x0802a189

08026690 <__mcmp>:
 8026690:	690a      	ldr	r2, [r1, #16]
 8026692:	4603      	mov	r3, r0
 8026694:	6900      	ldr	r0, [r0, #16]
 8026696:	1a80      	subs	r0, r0, r2
 8026698:	b530      	push	{r4, r5, lr}
 802669a:	d10e      	bne.n	80266ba <__mcmp+0x2a>
 802669c:	3314      	adds	r3, #20
 802669e:	3114      	adds	r1, #20
 80266a0:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80266a4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80266a8:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80266ac:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80266b0:	4295      	cmp	r5, r2
 80266b2:	d003      	beq.n	80266bc <__mcmp+0x2c>
 80266b4:	d205      	bcs.n	80266c2 <__mcmp+0x32>
 80266b6:	f04f 30ff 	mov.w	r0, #4294967295
 80266ba:	bd30      	pop	{r4, r5, pc}
 80266bc:	42a3      	cmp	r3, r4
 80266be:	d3f3      	bcc.n	80266a8 <__mcmp+0x18>
 80266c0:	e7fb      	b.n	80266ba <__mcmp+0x2a>
 80266c2:	2001      	movs	r0, #1
 80266c4:	e7f9      	b.n	80266ba <__mcmp+0x2a>
	...

080266c8 <__mdiff>:
 80266c8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80266cc:	4689      	mov	r9, r1
 80266ce:	4606      	mov	r6, r0
 80266d0:	4611      	mov	r1, r2
 80266d2:	4648      	mov	r0, r9
 80266d4:	4614      	mov	r4, r2
 80266d6:	f7ff ffdb 	bl	8026690 <__mcmp>
 80266da:	1e05      	subs	r5, r0, #0
 80266dc:	d112      	bne.n	8026704 <__mdiff+0x3c>
 80266de:	4629      	mov	r1, r5
 80266e0:	4630      	mov	r0, r6
 80266e2:	f7ff fd5b 	bl	802619c <_Balloc>
 80266e6:	4602      	mov	r2, r0
 80266e8:	b928      	cbnz	r0, 80266f6 <__mdiff+0x2e>
 80266ea:	4b3f      	ldr	r3, [pc, #252]	@ (80267e8 <__mdiff+0x120>)
 80266ec:	f240 2137 	movw	r1, #567	@ 0x237
 80266f0:	483e      	ldr	r0, [pc, #248]	@ (80267ec <__mdiff+0x124>)
 80266f2:	f7fd fdbf 	bl	8024274 <__assert_func>
 80266f6:	2301      	movs	r3, #1
 80266f8:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80266fc:	4610      	mov	r0, r2
 80266fe:	b003      	add	sp, #12
 8026700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026704:	bfbc      	itt	lt
 8026706:	464b      	movlt	r3, r9
 8026708:	46a1      	movlt	r9, r4
 802670a:	4630      	mov	r0, r6
 802670c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8026710:	bfba      	itte	lt
 8026712:	461c      	movlt	r4, r3
 8026714:	2501      	movlt	r5, #1
 8026716:	2500      	movge	r5, #0
 8026718:	f7ff fd40 	bl	802619c <_Balloc>
 802671c:	4602      	mov	r2, r0
 802671e:	b918      	cbnz	r0, 8026728 <__mdiff+0x60>
 8026720:	4b31      	ldr	r3, [pc, #196]	@ (80267e8 <__mdiff+0x120>)
 8026722:	f240 2145 	movw	r1, #581	@ 0x245
 8026726:	e7e3      	b.n	80266f0 <__mdiff+0x28>
 8026728:	f8d9 7010 	ldr.w	r7, [r9, #16]
 802672c:	6926      	ldr	r6, [r4, #16]
 802672e:	60c5      	str	r5, [r0, #12]
 8026730:	f109 0310 	add.w	r3, r9, #16
 8026734:	f109 0514 	add.w	r5, r9, #20
 8026738:	f104 0e14 	add.w	lr, r4, #20
 802673c:	f100 0b14 	add.w	fp, r0, #20
 8026740:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8026744:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8026748:	9301      	str	r3, [sp, #4]
 802674a:	46d9      	mov	r9, fp
 802674c:	f04f 0c00 	mov.w	ip, #0
 8026750:	9b01      	ldr	r3, [sp, #4]
 8026752:	f85e 0b04 	ldr.w	r0, [lr], #4
 8026756:	f853 af04 	ldr.w	sl, [r3, #4]!
 802675a:	9301      	str	r3, [sp, #4]
 802675c:	fa1f f38a 	uxth.w	r3, sl
 8026760:	4619      	mov	r1, r3
 8026762:	b283      	uxth	r3, r0
 8026764:	1acb      	subs	r3, r1, r3
 8026766:	0c00      	lsrs	r0, r0, #16
 8026768:	4463      	add	r3, ip
 802676a:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 802676e:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8026772:	b29b      	uxth	r3, r3
 8026774:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8026778:	4576      	cmp	r6, lr
 802677a:	f849 3b04 	str.w	r3, [r9], #4
 802677e:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8026782:	d8e5      	bhi.n	8026750 <__mdiff+0x88>
 8026784:	1b33      	subs	r3, r6, r4
 8026786:	3b15      	subs	r3, #21
 8026788:	f023 0303 	bic.w	r3, r3, #3
 802678c:	3415      	adds	r4, #21
 802678e:	3304      	adds	r3, #4
 8026790:	42a6      	cmp	r6, r4
 8026792:	bf38      	it	cc
 8026794:	2304      	movcc	r3, #4
 8026796:	441d      	add	r5, r3
 8026798:	445b      	add	r3, fp
 802679a:	461e      	mov	r6, r3
 802679c:	462c      	mov	r4, r5
 802679e:	4544      	cmp	r4, r8
 80267a0:	d30e      	bcc.n	80267c0 <__mdiff+0xf8>
 80267a2:	f108 0103 	add.w	r1, r8, #3
 80267a6:	1b49      	subs	r1, r1, r5
 80267a8:	f021 0103 	bic.w	r1, r1, #3
 80267ac:	3d03      	subs	r5, #3
 80267ae:	45a8      	cmp	r8, r5
 80267b0:	bf38      	it	cc
 80267b2:	2100      	movcc	r1, #0
 80267b4:	440b      	add	r3, r1
 80267b6:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80267ba:	b191      	cbz	r1, 80267e2 <__mdiff+0x11a>
 80267bc:	6117      	str	r7, [r2, #16]
 80267be:	e79d      	b.n	80266fc <__mdiff+0x34>
 80267c0:	f854 1b04 	ldr.w	r1, [r4], #4
 80267c4:	46e6      	mov	lr, ip
 80267c6:	0c08      	lsrs	r0, r1, #16
 80267c8:	fa1c fc81 	uxtah	ip, ip, r1
 80267cc:	4471      	add	r1, lr
 80267ce:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80267d2:	b289      	uxth	r1, r1
 80267d4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80267d8:	f846 1b04 	str.w	r1, [r6], #4
 80267dc:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80267e0:	e7dd      	b.n	802679e <__mdiff+0xd6>
 80267e2:	3f01      	subs	r7, #1
 80267e4:	e7e7      	b.n	80267b6 <__mdiff+0xee>
 80267e6:	bf00      	nop
 80267e8:	0802a178 	.word	0x0802a178
 80267ec:	0802a189 	.word	0x0802a189

080267f0 <__d2b>:
 80267f0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80267f4:	460f      	mov	r7, r1
 80267f6:	2101      	movs	r1, #1
 80267f8:	ec59 8b10 	vmov	r8, r9, d0
 80267fc:	4616      	mov	r6, r2
 80267fe:	f7ff fccd 	bl	802619c <_Balloc>
 8026802:	4604      	mov	r4, r0
 8026804:	b930      	cbnz	r0, 8026814 <__d2b+0x24>
 8026806:	4602      	mov	r2, r0
 8026808:	4b23      	ldr	r3, [pc, #140]	@ (8026898 <__d2b+0xa8>)
 802680a:	4824      	ldr	r0, [pc, #144]	@ (802689c <__d2b+0xac>)
 802680c:	f240 310f 	movw	r1, #783	@ 0x30f
 8026810:	f7fd fd30 	bl	8024274 <__assert_func>
 8026814:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8026818:	f3c9 0313 	ubfx	r3, r9, #0, #20
 802681c:	b10d      	cbz	r5, 8026822 <__d2b+0x32>
 802681e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8026822:	9301      	str	r3, [sp, #4]
 8026824:	f1b8 0300 	subs.w	r3, r8, #0
 8026828:	d023      	beq.n	8026872 <__d2b+0x82>
 802682a:	4668      	mov	r0, sp
 802682c:	9300      	str	r3, [sp, #0]
 802682e:	f7ff fd7c 	bl	802632a <__lo0bits>
 8026832:	e9dd 1200 	ldrd	r1, r2, [sp]
 8026836:	b1d0      	cbz	r0, 802686e <__d2b+0x7e>
 8026838:	f1c0 0320 	rsb	r3, r0, #32
 802683c:	fa02 f303 	lsl.w	r3, r2, r3
 8026840:	430b      	orrs	r3, r1
 8026842:	40c2      	lsrs	r2, r0
 8026844:	6163      	str	r3, [r4, #20]
 8026846:	9201      	str	r2, [sp, #4]
 8026848:	9b01      	ldr	r3, [sp, #4]
 802684a:	61a3      	str	r3, [r4, #24]
 802684c:	2b00      	cmp	r3, #0
 802684e:	bf0c      	ite	eq
 8026850:	2201      	moveq	r2, #1
 8026852:	2202      	movne	r2, #2
 8026854:	6122      	str	r2, [r4, #16]
 8026856:	b1a5      	cbz	r5, 8026882 <__d2b+0x92>
 8026858:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 802685c:	4405      	add	r5, r0
 802685e:	603d      	str	r5, [r7, #0]
 8026860:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8026864:	6030      	str	r0, [r6, #0]
 8026866:	4620      	mov	r0, r4
 8026868:	b003      	add	sp, #12
 802686a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802686e:	6161      	str	r1, [r4, #20]
 8026870:	e7ea      	b.n	8026848 <__d2b+0x58>
 8026872:	a801      	add	r0, sp, #4
 8026874:	f7ff fd59 	bl	802632a <__lo0bits>
 8026878:	9b01      	ldr	r3, [sp, #4]
 802687a:	6163      	str	r3, [r4, #20]
 802687c:	3020      	adds	r0, #32
 802687e:	2201      	movs	r2, #1
 8026880:	e7e8      	b.n	8026854 <__d2b+0x64>
 8026882:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8026886:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 802688a:	6038      	str	r0, [r7, #0]
 802688c:	6918      	ldr	r0, [r3, #16]
 802688e:	f7ff fd2d 	bl	80262ec <__hi0bits>
 8026892:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8026896:	e7e5      	b.n	8026864 <__d2b+0x74>
 8026898:	0802a178 	.word	0x0802a178
 802689c:	0802a189 	.word	0x0802a189

080268a0 <__ssputs_r>:
 80268a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80268a4:	688e      	ldr	r6, [r1, #8]
 80268a6:	461f      	mov	r7, r3
 80268a8:	42be      	cmp	r6, r7
 80268aa:	680b      	ldr	r3, [r1, #0]
 80268ac:	4682      	mov	sl, r0
 80268ae:	460c      	mov	r4, r1
 80268b0:	4690      	mov	r8, r2
 80268b2:	d82d      	bhi.n	8026910 <__ssputs_r+0x70>
 80268b4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80268b8:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80268bc:	d026      	beq.n	802690c <__ssputs_r+0x6c>
 80268be:	6965      	ldr	r5, [r4, #20]
 80268c0:	6909      	ldr	r1, [r1, #16]
 80268c2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80268c6:	eba3 0901 	sub.w	r9, r3, r1
 80268ca:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80268ce:	1c7b      	adds	r3, r7, #1
 80268d0:	444b      	add	r3, r9
 80268d2:	106d      	asrs	r5, r5, #1
 80268d4:	429d      	cmp	r5, r3
 80268d6:	bf38      	it	cc
 80268d8:	461d      	movcc	r5, r3
 80268da:	0553      	lsls	r3, r2, #21
 80268dc:	d527      	bpl.n	802692e <__ssputs_r+0x8e>
 80268de:	4629      	mov	r1, r5
 80268e0:	f7fd fd1e 	bl	8024320 <_malloc_r>
 80268e4:	4606      	mov	r6, r0
 80268e6:	b360      	cbz	r0, 8026942 <__ssputs_r+0xa2>
 80268e8:	6921      	ldr	r1, [r4, #16]
 80268ea:	464a      	mov	r2, r9
 80268ec:	f7fe fd53 	bl	8025396 <memcpy>
 80268f0:	89a3      	ldrh	r3, [r4, #12]
 80268f2:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80268f6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80268fa:	81a3      	strh	r3, [r4, #12]
 80268fc:	6126      	str	r6, [r4, #16]
 80268fe:	6165      	str	r5, [r4, #20]
 8026900:	444e      	add	r6, r9
 8026902:	eba5 0509 	sub.w	r5, r5, r9
 8026906:	6026      	str	r6, [r4, #0]
 8026908:	60a5      	str	r5, [r4, #8]
 802690a:	463e      	mov	r6, r7
 802690c:	42be      	cmp	r6, r7
 802690e:	d900      	bls.n	8026912 <__ssputs_r+0x72>
 8026910:	463e      	mov	r6, r7
 8026912:	6820      	ldr	r0, [r4, #0]
 8026914:	4632      	mov	r2, r6
 8026916:	4641      	mov	r1, r8
 8026918:	f000 fb9e 	bl	8027058 <memmove>
 802691c:	68a3      	ldr	r3, [r4, #8]
 802691e:	1b9b      	subs	r3, r3, r6
 8026920:	60a3      	str	r3, [r4, #8]
 8026922:	6823      	ldr	r3, [r4, #0]
 8026924:	4433      	add	r3, r6
 8026926:	6023      	str	r3, [r4, #0]
 8026928:	2000      	movs	r0, #0
 802692a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802692e:	462a      	mov	r2, r5
 8026930:	f000 fbf4 	bl	802711c <_realloc_r>
 8026934:	4606      	mov	r6, r0
 8026936:	2800      	cmp	r0, #0
 8026938:	d1e0      	bne.n	80268fc <__ssputs_r+0x5c>
 802693a:	6921      	ldr	r1, [r4, #16]
 802693c:	4650      	mov	r0, sl
 802693e:	f7ff fbe3 	bl	8026108 <_free_r>
 8026942:	230c      	movs	r3, #12
 8026944:	f8ca 3000 	str.w	r3, [sl]
 8026948:	89a3      	ldrh	r3, [r4, #12]
 802694a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802694e:	81a3      	strh	r3, [r4, #12]
 8026950:	f04f 30ff 	mov.w	r0, #4294967295
 8026954:	e7e9      	b.n	802692a <__ssputs_r+0x8a>
	...

08026958 <_svfiprintf_r>:
 8026958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802695c:	4698      	mov	r8, r3
 802695e:	898b      	ldrh	r3, [r1, #12]
 8026960:	061b      	lsls	r3, r3, #24
 8026962:	b09d      	sub	sp, #116	@ 0x74
 8026964:	4607      	mov	r7, r0
 8026966:	460d      	mov	r5, r1
 8026968:	4614      	mov	r4, r2
 802696a:	d510      	bpl.n	802698e <_svfiprintf_r+0x36>
 802696c:	690b      	ldr	r3, [r1, #16]
 802696e:	b973      	cbnz	r3, 802698e <_svfiprintf_r+0x36>
 8026970:	2140      	movs	r1, #64	@ 0x40
 8026972:	f7fd fcd5 	bl	8024320 <_malloc_r>
 8026976:	6028      	str	r0, [r5, #0]
 8026978:	6128      	str	r0, [r5, #16]
 802697a:	b930      	cbnz	r0, 802698a <_svfiprintf_r+0x32>
 802697c:	230c      	movs	r3, #12
 802697e:	603b      	str	r3, [r7, #0]
 8026980:	f04f 30ff 	mov.w	r0, #4294967295
 8026984:	b01d      	add	sp, #116	@ 0x74
 8026986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802698a:	2340      	movs	r3, #64	@ 0x40
 802698c:	616b      	str	r3, [r5, #20]
 802698e:	2300      	movs	r3, #0
 8026990:	9309      	str	r3, [sp, #36]	@ 0x24
 8026992:	2320      	movs	r3, #32
 8026994:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8026998:	f8cd 800c 	str.w	r8, [sp, #12]
 802699c:	2330      	movs	r3, #48	@ 0x30
 802699e:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8026b3c <_svfiprintf_r+0x1e4>
 80269a2:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80269a6:	f04f 0901 	mov.w	r9, #1
 80269aa:	4623      	mov	r3, r4
 80269ac:	469a      	mov	sl, r3
 80269ae:	f813 2b01 	ldrb.w	r2, [r3], #1
 80269b2:	b10a      	cbz	r2, 80269b8 <_svfiprintf_r+0x60>
 80269b4:	2a25      	cmp	r2, #37	@ 0x25
 80269b6:	d1f9      	bne.n	80269ac <_svfiprintf_r+0x54>
 80269b8:	ebba 0b04 	subs.w	fp, sl, r4
 80269bc:	d00b      	beq.n	80269d6 <_svfiprintf_r+0x7e>
 80269be:	465b      	mov	r3, fp
 80269c0:	4622      	mov	r2, r4
 80269c2:	4629      	mov	r1, r5
 80269c4:	4638      	mov	r0, r7
 80269c6:	f7ff ff6b 	bl	80268a0 <__ssputs_r>
 80269ca:	3001      	adds	r0, #1
 80269cc:	f000 80a7 	beq.w	8026b1e <_svfiprintf_r+0x1c6>
 80269d0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80269d2:	445a      	add	r2, fp
 80269d4:	9209      	str	r2, [sp, #36]	@ 0x24
 80269d6:	f89a 3000 	ldrb.w	r3, [sl]
 80269da:	2b00      	cmp	r3, #0
 80269dc:	f000 809f 	beq.w	8026b1e <_svfiprintf_r+0x1c6>
 80269e0:	2300      	movs	r3, #0
 80269e2:	f04f 32ff 	mov.w	r2, #4294967295
 80269e6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80269ea:	f10a 0a01 	add.w	sl, sl, #1
 80269ee:	9304      	str	r3, [sp, #16]
 80269f0:	9307      	str	r3, [sp, #28]
 80269f2:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80269f6:	931a      	str	r3, [sp, #104]	@ 0x68
 80269f8:	4654      	mov	r4, sl
 80269fa:	2205      	movs	r2, #5
 80269fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026a00:	484e      	ldr	r0, [pc, #312]	@ (8026b3c <_svfiprintf_r+0x1e4>)
 8026a02:	f7d9 fc05 	bl	8000210 <memchr>
 8026a06:	9a04      	ldr	r2, [sp, #16]
 8026a08:	b9d8      	cbnz	r0, 8026a42 <_svfiprintf_r+0xea>
 8026a0a:	06d0      	lsls	r0, r2, #27
 8026a0c:	bf44      	itt	mi
 8026a0e:	2320      	movmi	r3, #32
 8026a10:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8026a14:	0711      	lsls	r1, r2, #28
 8026a16:	bf44      	itt	mi
 8026a18:	232b      	movmi	r3, #43	@ 0x2b
 8026a1a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8026a1e:	f89a 3000 	ldrb.w	r3, [sl]
 8026a22:	2b2a      	cmp	r3, #42	@ 0x2a
 8026a24:	d015      	beq.n	8026a52 <_svfiprintf_r+0xfa>
 8026a26:	9a07      	ldr	r2, [sp, #28]
 8026a28:	4654      	mov	r4, sl
 8026a2a:	2000      	movs	r0, #0
 8026a2c:	f04f 0c0a 	mov.w	ip, #10
 8026a30:	4621      	mov	r1, r4
 8026a32:	f811 3b01 	ldrb.w	r3, [r1], #1
 8026a36:	3b30      	subs	r3, #48	@ 0x30
 8026a38:	2b09      	cmp	r3, #9
 8026a3a:	d94b      	bls.n	8026ad4 <_svfiprintf_r+0x17c>
 8026a3c:	b1b0      	cbz	r0, 8026a6c <_svfiprintf_r+0x114>
 8026a3e:	9207      	str	r2, [sp, #28]
 8026a40:	e014      	b.n	8026a6c <_svfiprintf_r+0x114>
 8026a42:	eba0 0308 	sub.w	r3, r0, r8
 8026a46:	fa09 f303 	lsl.w	r3, r9, r3
 8026a4a:	4313      	orrs	r3, r2
 8026a4c:	9304      	str	r3, [sp, #16]
 8026a4e:	46a2      	mov	sl, r4
 8026a50:	e7d2      	b.n	80269f8 <_svfiprintf_r+0xa0>
 8026a52:	9b03      	ldr	r3, [sp, #12]
 8026a54:	1d19      	adds	r1, r3, #4
 8026a56:	681b      	ldr	r3, [r3, #0]
 8026a58:	9103      	str	r1, [sp, #12]
 8026a5a:	2b00      	cmp	r3, #0
 8026a5c:	bfbb      	ittet	lt
 8026a5e:	425b      	neglt	r3, r3
 8026a60:	f042 0202 	orrlt.w	r2, r2, #2
 8026a64:	9307      	strge	r3, [sp, #28]
 8026a66:	9307      	strlt	r3, [sp, #28]
 8026a68:	bfb8      	it	lt
 8026a6a:	9204      	strlt	r2, [sp, #16]
 8026a6c:	7823      	ldrb	r3, [r4, #0]
 8026a6e:	2b2e      	cmp	r3, #46	@ 0x2e
 8026a70:	d10a      	bne.n	8026a88 <_svfiprintf_r+0x130>
 8026a72:	7863      	ldrb	r3, [r4, #1]
 8026a74:	2b2a      	cmp	r3, #42	@ 0x2a
 8026a76:	d132      	bne.n	8026ade <_svfiprintf_r+0x186>
 8026a78:	9b03      	ldr	r3, [sp, #12]
 8026a7a:	1d1a      	adds	r2, r3, #4
 8026a7c:	681b      	ldr	r3, [r3, #0]
 8026a7e:	9203      	str	r2, [sp, #12]
 8026a80:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8026a84:	3402      	adds	r4, #2
 8026a86:	9305      	str	r3, [sp, #20]
 8026a88:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8026b4c <_svfiprintf_r+0x1f4>
 8026a8c:	7821      	ldrb	r1, [r4, #0]
 8026a8e:	2203      	movs	r2, #3
 8026a90:	4650      	mov	r0, sl
 8026a92:	f7d9 fbbd 	bl	8000210 <memchr>
 8026a96:	b138      	cbz	r0, 8026aa8 <_svfiprintf_r+0x150>
 8026a98:	9b04      	ldr	r3, [sp, #16]
 8026a9a:	eba0 000a 	sub.w	r0, r0, sl
 8026a9e:	2240      	movs	r2, #64	@ 0x40
 8026aa0:	4082      	lsls	r2, r0
 8026aa2:	4313      	orrs	r3, r2
 8026aa4:	3401      	adds	r4, #1
 8026aa6:	9304      	str	r3, [sp, #16]
 8026aa8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026aac:	4824      	ldr	r0, [pc, #144]	@ (8026b40 <_svfiprintf_r+0x1e8>)
 8026aae:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8026ab2:	2206      	movs	r2, #6
 8026ab4:	f7d9 fbac 	bl	8000210 <memchr>
 8026ab8:	2800      	cmp	r0, #0
 8026aba:	d036      	beq.n	8026b2a <_svfiprintf_r+0x1d2>
 8026abc:	4b21      	ldr	r3, [pc, #132]	@ (8026b44 <_svfiprintf_r+0x1ec>)
 8026abe:	bb1b      	cbnz	r3, 8026b08 <_svfiprintf_r+0x1b0>
 8026ac0:	9b03      	ldr	r3, [sp, #12]
 8026ac2:	3307      	adds	r3, #7
 8026ac4:	f023 0307 	bic.w	r3, r3, #7
 8026ac8:	3308      	adds	r3, #8
 8026aca:	9303      	str	r3, [sp, #12]
 8026acc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026ace:	4433      	add	r3, r6
 8026ad0:	9309      	str	r3, [sp, #36]	@ 0x24
 8026ad2:	e76a      	b.n	80269aa <_svfiprintf_r+0x52>
 8026ad4:	fb0c 3202 	mla	r2, ip, r2, r3
 8026ad8:	460c      	mov	r4, r1
 8026ada:	2001      	movs	r0, #1
 8026adc:	e7a8      	b.n	8026a30 <_svfiprintf_r+0xd8>
 8026ade:	2300      	movs	r3, #0
 8026ae0:	3401      	adds	r4, #1
 8026ae2:	9305      	str	r3, [sp, #20]
 8026ae4:	4619      	mov	r1, r3
 8026ae6:	f04f 0c0a 	mov.w	ip, #10
 8026aea:	4620      	mov	r0, r4
 8026aec:	f810 2b01 	ldrb.w	r2, [r0], #1
 8026af0:	3a30      	subs	r2, #48	@ 0x30
 8026af2:	2a09      	cmp	r2, #9
 8026af4:	d903      	bls.n	8026afe <_svfiprintf_r+0x1a6>
 8026af6:	2b00      	cmp	r3, #0
 8026af8:	d0c6      	beq.n	8026a88 <_svfiprintf_r+0x130>
 8026afa:	9105      	str	r1, [sp, #20]
 8026afc:	e7c4      	b.n	8026a88 <_svfiprintf_r+0x130>
 8026afe:	fb0c 2101 	mla	r1, ip, r1, r2
 8026b02:	4604      	mov	r4, r0
 8026b04:	2301      	movs	r3, #1
 8026b06:	e7f0      	b.n	8026aea <_svfiprintf_r+0x192>
 8026b08:	ab03      	add	r3, sp, #12
 8026b0a:	9300      	str	r3, [sp, #0]
 8026b0c:	462a      	mov	r2, r5
 8026b0e:	4b0e      	ldr	r3, [pc, #56]	@ (8026b48 <_svfiprintf_r+0x1f0>)
 8026b10:	a904      	add	r1, sp, #16
 8026b12:	4638      	mov	r0, r7
 8026b14:	f7fd fd3e 	bl	8024594 <_printf_float>
 8026b18:	1c42      	adds	r2, r0, #1
 8026b1a:	4606      	mov	r6, r0
 8026b1c:	d1d6      	bne.n	8026acc <_svfiprintf_r+0x174>
 8026b1e:	89ab      	ldrh	r3, [r5, #12]
 8026b20:	065b      	lsls	r3, r3, #25
 8026b22:	f53f af2d 	bmi.w	8026980 <_svfiprintf_r+0x28>
 8026b26:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8026b28:	e72c      	b.n	8026984 <_svfiprintf_r+0x2c>
 8026b2a:	ab03      	add	r3, sp, #12
 8026b2c:	9300      	str	r3, [sp, #0]
 8026b2e:	462a      	mov	r2, r5
 8026b30:	4b05      	ldr	r3, [pc, #20]	@ (8026b48 <_svfiprintf_r+0x1f0>)
 8026b32:	a904      	add	r1, sp, #16
 8026b34:	4638      	mov	r0, r7
 8026b36:	f7fd ffc5 	bl	8024ac4 <_printf_i>
 8026b3a:	e7ed      	b.n	8026b18 <_svfiprintf_r+0x1c0>
 8026b3c:	0802a2e4 	.word	0x0802a2e4
 8026b40:	0802a2ee 	.word	0x0802a2ee
 8026b44:	08024595 	.word	0x08024595
 8026b48:	080268a1 	.word	0x080268a1
 8026b4c:	0802a2ea 	.word	0x0802a2ea

08026b50 <__sfputc_r>:
 8026b50:	6893      	ldr	r3, [r2, #8]
 8026b52:	3b01      	subs	r3, #1
 8026b54:	2b00      	cmp	r3, #0
 8026b56:	b410      	push	{r4}
 8026b58:	6093      	str	r3, [r2, #8]
 8026b5a:	da08      	bge.n	8026b6e <__sfputc_r+0x1e>
 8026b5c:	6994      	ldr	r4, [r2, #24]
 8026b5e:	42a3      	cmp	r3, r4
 8026b60:	db01      	blt.n	8026b66 <__sfputc_r+0x16>
 8026b62:	290a      	cmp	r1, #10
 8026b64:	d103      	bne.n	8026b6e <__sfputc_r+0x1e>
 8026b66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026b6a:	f7fe ba7a 	b.w	8025062 <__swbuf_r>
 8026b6e:	6813      	ldr	r3, [r2, #0]
 8026b70:	1c58      	adds	r0, r3, #1
 8026b72:	6010      	str	r0, [r2, #0]
 8026b74:	7019      	strb	r1, [r3, #0]
 8026b76:	4608      	mov	r0, r1
 8026b78:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026b7c:	4770      	bx	lr

08026b7e <__sfputs_r>:
 8026b7e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026b80:	4606      	mov	r6, r0
 8026b82:	460f      	mov	r7, r1
 8026b84:	4614      	mov	r4, r2
 8026b86:	18d5      	adds	r5, r2, r3
 8026b88:	42ac      	cmp	r4, r5
 8026b8a:	d101      	bne.n	8026b90 <__sfputs_r+0x12>
 8026b8c:	2000      	movs	r0, #0
 8026b8e:	e007      	b.n	8026ba0 <__sfputs_r+0x22>
 8026b90:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026b94:	463a      	mov	r2, r7
 8026b96:	4630      	mov	r0, r6
 8026b98:	f7ff ffda 	bl	8026b50 <__sfputc_r>
 8026b9c:	1c43      	adds	r3, r0, #1
 8026b9e:	d1f3      	bne.n	8026b88 <__sfputs_r+0xa>
 8026ba0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08026ba4 <_vfiprintf_r>:
 8026ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ba8:	460d      	mov	r5, r1
 8026baa:	b09d      	sub	sp, #116	@ 0x74
 8026bac:	4614      	mov	r4, r2
 8026bae:	4698      	mov	r8, r3
 8026bb0:	4606      	mov	r6, r0
 8026bb2:	b118      	cbz	r0, 8026bbc <_vfiprintf_r+0x18>
 8026bb4:	6a03      	ldr	r3, [r0, #32]
 8026bb6:	b90b      	cbnz	r3, 8026bbc <_vfiprintf_r+0x18>
 8026bb8:	f7fe f930 	bl	8024e1c <__sinit>
 8026bbc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8026bbe:	07d9      	lsls	r1, r3, #31
 8026bc0:	d405      	bmi.n	8026bce <_vfiprintf_r+0x2a>
 8026bc2:	89ab      	ldrh	r3, [r5, #12]
 8026bc4:	059a      	lsls	r2, r3, #22
 8026bc6:	d402      	bmi.n	8026bce <_vfiprintf_r+0x2a>
 8026bc8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8026bca:	f7fe fbda 	bl	8025382 <__retarget_lock_acquire_recursive>
 8026bce:	89ab      	ldrh	r3, [r5, #12]
 8026bd0:	071b      	lsls	r3, r3, #28
 8026bd2:	d501      	bpl.n	8026bd8 <_vfiprintf_r+0x34>
 8026bd4:	692b      	ldr	r3, [r5, #16]
 8026bd6:	b99b      	cbnz	r3, 8026c00 <_vfiprintf_r+0x5c>
 8026bd8:	4629      	mov	r1, r5
 8026bda:	4630      	mov	r0, r6
 8026bdc:	f7fe fa80 	bl	80250e0 <__swsetup_r>
 8026be0:	b170      	cbz	r0, 8026c00 <_vfiprintf_r+0x5c>
 8026be2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8026be4:	07dc      	lsls	r4, r3, #31
 8026be6:	d504      	bpl.n	8026bf2 <_vfiprintf_r+0x4e>
 8026be8:	f04f 30ff 	mov.w	r0, #4294967295
 8026bec:	b01d      	add	sp, #116	@ 0x74
 8026bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026bf2:	89ab      	ldrh	r3, [r5, #12]
 8026bf4:	0598      	lsls	r0, r3, #22
 8026bf6:	d4f7      	bmi.n	8026be8 <_vfiprintf_r+0x44>
 8026bf8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8026bfa:	f7fe fbc3 	bl	8025384 <__retarget_lock_release_recursive>
 8026bfe:	e7f3      	b.n	8026be8 <_vfiprintf_r+0x44>
 8026c00:	2300      	movs	r3, #0
 8026c02:	9309      	str	r3, [sp, #36]	@ 0x24
 8026c04:	2320      	movs	r3, #32
 8026c06:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8026c0a:	f8cd 800c 	str.w	r8, [sp, #12]
 8026c0e:	2330      	movs	r3, #48	@ 0x30
 8026c10:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8026dc0 <_vfiprintf_r+0x21c>
 8026c14:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8026c18:	f04f 0901 	mov.w	r9, #1
 8026c1c:	4623      	mov	r3, r4
 8026c1e:	469a      	mov	sl, r3
 8026c20:	f813 2b01 	ldrb.w	r2, [r3], #1
 8026c24:	b10a      	cbz	r2, 8026c2a <_vfiprintf_r+0x86>
 8026c26:	2a25      	cmp	r2, #37	@ 0x25
 8026c28:	d1f9      	bne.n	8026c1e <_vfiprintf_r+0x7a>
 8026c2a:	ebba 0b04 	subs.w	fp, sl, r4
 8026c2e:	d00b      	beq.n	8026c48 <_vfiprintf_r+0xa4>
 8026c30:	465b      	mov	r3, fp
 8026c32:	4622      	mov	r2, r4
 8026c34:	4629      	mov	r1, r5
 8026c36:	4630      	mov	r0, r6
 8026c38:	f7ff ffa1 	bl	8026b7e <__sfputs_r>
 8026c3c:	3001      	adds	r0, #1
 8026c3e:	f000 80a7 	beq.w	8026d90 <_vfiprintf_r+0x1ec>
 8026c42:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8026c44:	445a      	add	r2, fp
 8026c46:	9209      	str	r2, [sp, #36]	@ 0x24
 8026c48:	f89a 3000 	ldrb.w	r3, [sl]
 8026c4c:	2b00      	cmp	r3, #0
 8026c4e:	f000 809f 	beq.w	8026d90 <_vfiprintf_r+0x1ec>
 8026c52:	2300      	movs	r3, #0
 8026c54:	f04f 32ff 	mov.w	r2, #4294967295
 8026c58:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8026c5c:	f10a 0a01 	add.w	sl, sl, #1
 8026c60:	9304      	str	r3, [sp, #16]
 8026c62:	9307      	str	r3, [sp, #28]
 8026c64:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8026c68:	931a      	str	r3, [sp, #104]	@ 0x68
 8026c6a:	4654      	mov	r4, sl
 8026c6c:	2205      	movs	r2, #5
 8026c6e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026c72:	4853      	ldr	r0, [pc, #332]	@ (8026dc0 <_vfiprintf_r+0x21c>)
 8026c74:	f7d9 facc 	bl	8000210 <memchr>
 8026c78:	9a04      	ldr	r2, [sp, #16]
 8026c7a:	b9d8      	cbnz	r0, 8026cb4 <_vfiprintf_r+0x110>
 8026c7c:	06d1      	lsls	r1, r2, #27
 8026c7e:	bf44      	itt	mi
 8026c80:	2320      	movmi	r3, #32
 8026c82:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8026c86:	0713      	lsls	r3, r2, #28
 8026c88:	bf44      	itt	mi
 8026c8a:	232b      	movmi	r3, #43	@ 0x2b
 8026c8c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8026c90:	f89a 3000 	ldrb.w	r3, [sl]
 8026c94:	2b2a      	cmp	r3, #42	@ 0x2a
 8026c96:	d015      	beq.n	8026cc4 <_vfiprintf_r+0x120>
 8026c98:	9a07      	ldr	r2, [sp, #28]
 8026c9a:	4654      	mov	r4, sl
 8026c9c:	2000      	movs	r0, #0
 8026c9e:	f04f 0c0a 	mov.w	ip, #10
 8026ca2:	4621      	mov	r1, r4
 8026ca4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8026ca8:	3b30      	subs	r3, #48	@ 0x30
 8026caa:	2b09      	cmp	r3, #9
 8026cac:	d94b      	bls.n	8026d46 <_vfiprintf_r+0x1a2>
 8026cae:	b1b0      	cbz	r0, 8026cde <_vfiprintf_r+0x13a>
 8026cb0:	9207      	str	r2, [sp, #28]
 8026cb2:	e014      	b.n	8026cde <_vfiprintf_r+0x13a>
 8026cb4:	eba0 0308 	sub.w	r3, r0, r8
 8026cb8:	fa09 f303 	lsl.w	r3, r9, r3
 8026cbc:	4313      	orrs	r3, r2
 8026cbe:	9304      	str	r3, [sp, #16]
 8026cc0:	46a2      	mov	sl, r4
 8026cc2:	e7d2      	b.n	8026c6a <_vfiprintf_r+0xc6>
 8026cc4:	9b03      	ldr	r3, [sp, #12]
 8026cc6:	1d19      	adds	r1, r3, #4
 8026cc8:	681b      	ldr	r3, [r3, #0]
 8026cca:	9103      	str	r1, [sp, #12]
 8026ccc:	2b00      	cmp	r3, #0
 8026cce:	bfbb      	ittet	lt
 8026cd0:	425b      	neglt	r3, r3
 8026cd2:	f042 0202 	orrlt.w	r2, r2, #2
 8026cd6:	9307      	strge	r3, [sp, #28]
 8026cd8:	9307      	strlt	r3, [sp, #28]
 8026cda:	bfb8      	it	lt
 8026cdc:	9204      	strlt	r2, [sp, #16]
 8026cde:	7823      	ldrb	r3, [r4, #0]
 8026ce0:	2b2e      	cmp	r3, #46	@ 0x2e
 8026ce2:	d10a      	bne.n	8026cfa <_vfiprintf_r+0x156>
 8026ce4:	7863      	ldrb	r3, [r4, #1]
 8026ce6:	2b2a      	cmp	r3, #42	@ 0x2a
 8026ce8:	d132      	bne.n	8026d50 <_vfiprintf_r+0x1ac>
 8026cea:	9b03      	ldr	r3, [sp, #12]
 8026cec:	1d1a      	adds	r2, r3, #4
 8026cee:	681b      	ldr	r3, [r3, #0]
 8026cf0:	9203      	str	r2, [sp, #12]
 8026cf2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8026cf6:	3402      	adds	r4, #2
 8026cf8:	9305      	str	r3, [sp, #20]
 8026cfa:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8026dd0 <_vfiprintf_r+0x22c>
 8026cfe:	7821      	ldrb	r1, [r4, #0]
 8026d00:	2203      	movs	r2, #3
 8026d02:	4650      	mov	r0, sl
 8026d04:	f7d9 fa84 	bl	8000210 <memchr>
 8026d08:	b138      	cbz	r0, 8026d1a <_vfiprintf_r+0x176>
 8026d0a:	9b04      	ldr	r3, [sp, #16]
 8026d0c:	eba0 000a 	sub.w	r0, r0, sl
 8026d10:	2240      	movs	r2, #64	@ 0x40
 8026d12:	4082      	lsls	r2, r0
 8026d14:	4313      	orrs	r3, r2
 8026d16:	3401      	adds	r4, #1
 8026d18:	9304      	str	r3, [sp, #16]
 8026d1a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026d1e:	4829      	ldr	r0, [pc, #164]	@ (8026dc4 <_vfiprintf_r+0x220>)
 8026d20:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8026d24:	2206      	movs	r2, #6
 8026d26:	f7d9 fa73 	bl	8000210 <memchr>
 8026d2a:	2800      	cmp	r0, #0
 8026d2c:	d03f      	beq.n	8026dae <_vfiprintf_r+0x20a>
 8026d2e:	4b26      	ldr	r3, [pc, #152]	@ (8026dc8 <_vfiprintf_r+0x224>)
 8026d30:	bb1b      	cbnz	r3, 8026d7a <_vfiprintf_r+0x1d6>
 8026d32:	9b03      	ldr	r3, [sp, #12]
 8026d34:	3307      	adds	r3, #7
 8026d36:	f023 0307 	bic.w	r3, r3, #7
 8026d3a:	3308      	adds	r3, #8
 8026d3c:	9303      	str	r3, [sp, #12]
 8026d3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026d40:	443b      	add	r3, r7
 8026d42:	9309      	str	r3, [sp, #36]	@ 0x24
 8026d44:	e76a      	b.n	8026c1c <_vfiprintf_r+0x78>
 8026d46:	fb0c 3202 	mla	r2, ip, r2, r3
 8026d4a:	460c      	mov	r4, r1
 8026d4c:	2001      	movs	r0, #1
 8026d4e:	e7a8      	b.n	8026ca2 <_vfiprintf_r+0xfe>
 8026d50:	2300      	movs	r3, #0
 8026d52:	3401      	adds	r4, #1
 8026d54:	9305      	str	r3, [sp, #20]
 8026d56:	4619      	mov	r1, r3
 8026d58:	f04f 0c0a 	mov.w	ip, #10
 8026d5c:	4620      	mov	r0, r4
 8026d5e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8026d62:	3a30      	subs	r2, #48	@ 0x30
 8026d64:	2a09      	cmp	r2, #9
 8026d66:	d903      	bls.n	8026d70 <_vfiprintf_r+0x1cc>
 8026d68:	2b00      	cmp	r3, #0
 8026d6a:	d0c6      	beq.n	8026cfa <_vfiprintf_r+0x156>
 8026d6c:	9105      	str	r1, [sp, #20]
 8026d6e:	e7c4      	b.n	8026cfa <_vfiprintf_r+0x156>
 8026d70:	fb0c 2101 	mla	r1, ip, r1, r2
 8026d74:	4604      	mov	r4, r0
 8026d76:	2301      	movs	r3, #1
 8026d78:	e7f0      	b.n	8026d5c <_vfiprintf_r+0x1b8>
 8026d7a:	ab03      	add	r3, sp, #12
 8026d7c:	9300      	str	r3, [sp, #0]
 8026d7e:	462a      	mov	r2, r5
 8026d80:	4b12      	ldr	r3, [pc, #72]	@ (8026dcc <_vfiprintf_r+0x228>)
 8026d82:	a904      	add	r1, sp, #16
 8026d84:	4630      	mov	r0, r6
 8026d86:	f7fd fc05 	bl	8024594 <_printf_float>
 8026d8a:	4607      	mov	r7, r0
 8026d8c:	1c78      	adds	r0, r7, #1
 8026d8e:	d1d6      	bne.n	8026d3e <_vfiprintf_r+0x19a>
 8026d90:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8026d92:	07d9      	lsls	r1, r3, #31
 8026d94:	d405      	bmi.n	8026da2 <_vfiprintf_r+0x1fe>
 8026d96:	89ab      	ldrh	r3, [r5, #12]
 8026d98:	059a      	lsls	r2, r3, #22
 8026d9a:	d402      	bmi.n	8026da2 <_vfiprintf_r+0x1fe>
 8026d9c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8026d9e:	f7fe faf1 	bl	8025384 <__retarget_lock_release_recursive>
 8026da2:	89ab      	ldrh	r3, [r5, #12]
 8026da4:	065b      	lsls	r3, r3, #25
 8026da6:	f53f af1f 	bmi.w	8026be8 <_vfiprintf_r+0x44>
 8026daa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8026dac:	e71e      	b.n	8026bec <_vfiprintf_r+0x48>
 8026dae:	ab03      	add	r3, sp, #12
 8026db0:	9300      	str	r3, [sp, #0]
 8026db2:	462a      	mov	r2, r5
 8026db4:	4b05      	ldr	r3, [pc, #20]	@ (8026dcc <_vfiprintf_r+0x228>)
 8026db6:	a904      	add	r1, sp, #16
 8026db8:	4630      	mov	r0, r6
 8026dba:	f7fd fe83 	bl	8024ac4 <_printf_i>
 8026dbe:	e7e4      	b.n	8026d8a <_vfiprintf_r+0x1e6>
 8026dc0:	0802a2e4 	.word	0x0802a2e4
 8026dc4:	0802a2ee 	.word	0x0802a2ee
 8026dc8:	08024595 	.word	0x08024595
 8026dcc:	08026b7f 	.word	0x08026b7f
 8026dd0:	0802a2ea 	.word	0x0802a2ea

08026dd4 <__sflush_r>:
 8026dd4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8026dd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026ddc:	0716      	lsls	r6, r2, #28
 8026dde:	4605      	mov	r5, r0
 8026de0:	460c      	mov	r4, r1
 8026de2:	d454      	bmi.n	8026e8e <__sflush_r+0xba>
 8026de4:	684b      	ldr	r3, [r1, #4]
 8026de6:	2b00      	cmp	r3, #0
 8026de8:	dc02      	bgt.n	8026df0 <__sflush_r+0x1c>
 8026dea:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8026dec:	2b00      	cmp	r3, #0
 8026dee:	dd48      	ble.n	8026e82 <__sflush_r+0xae>
 8026df0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8026df2:	2e00      	cmp	r6, #0
 8026df4:	d045      	beq.n	8026e82 <__sflush_r+0xae>
 8026df6:	2300      	movs	r3, #0
 8026df8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8026dfc:	682f      	ldr	r7, [r5, #0]
 8026dfe:	6a21      	ldr	r1, [r4, #32]
 8026e00:	602b      	str	r3, [r5, #0]
 8026e02:	d030      	beq.n	8026e66 <__sflush_r+0x92>
 8026e04:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8026e06:	89a3      	ldrh	r3, [r4, #12]
 8026e08:	0759      	lsls	r1, r3, #29
 8026e0a:	d505      	bpl.n	8026e18 <__sflush_r+0x44>
 8026e0c:	6863      	ldr	r3, [r4, #4]
 8026e0e:	1ad2      	subs	r2, r2, r3
 8026e10:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8026e12:	b10b      	cbz	r3, 8026e18 <__sflush_r+0x44>
 8026e14:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8026e16:	1ad2      	subs	r2, r2, r3
 8026e18:	2300      	movs	r3, #0
 8026e1a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8026e1c:	6a21      	ldr	r1, [r4, #32]
 8026e1e:	4628      	mov	r0, r5
 8026e20:	47b0      	blx	r6
 8026e22:	1c43      	adds	r3, r0, #1
 8026e24:	89a3      	ldrh	r3, [r4, #12]
 8026e26:	d106      	bne.n	8026e36 <__sflush_r+0x62>
 8026e28:	6829      	ldr	r1, [r5, #0]
 8026e2a:	291d      	cmp	r1, #29
 8026e2c:	d82b      	bhi.n	8026e86 <__sflush_r+0xb2>
 8026e2e:	4a2a      	ldr	r2, [pc, #168]	@ (8026ed8 <__sflush_r+0x104>)
 8026e30:	410a      	asrs	r2, r1
 8026e32:	07d6      	lsls	r6, r2, #31
 8026e34:	d427      	bmi.n	8026e86 <__sflush_r+0xb2>
 8026e36:	2200      	movs	r2, #0
 8026e38:	6062      	str	r2, [r4, #4]
 8026e3a:	04d9      	lsls	r1, r3, #19
 8026e3c:	6922      	ldr	r2, [r4, #16]
 8026e3e:	6022      	str	r2, [r4, #0]
 8026e40:	d504      	bpl.n	8026e4c <__sflush_r+0x78>
 8026e42:	1c42      	adds	r2, r0, #1
 8026e44:	d101      	bne.n	8026e4a <__sflush_r+0x76>
 8026e46:	682b      	ldr	r3, [r5, #0]
 8026e48:	b903      	cbnz	r3, 8026e4c <__sflush_r+0x78>
 8026e4a:	6560      	str	r0, [r4, #84]	@ 0x54
 8026e4c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8026e4e:	602f      	str	r7, [r5, #0]
 8026e50:	b1b9      	cbz	r1, 8026e82 <__sflush_r+0xae>
 8026e52:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8026e56:	4299      	cmp	r1, r3
 8026e58:	d002      	beq.n	8026e60 <__sflush_r+0x8c>
 8026e5a:	4628      	mov	r0, r5
 8026e5c:	f7ff f954 	bl	8026108 <_free_r>
 8026e60:	2300      	movs	r3, #0
 8026e62:	6363      	str	r3, [r4, #52]	@ 0x34
 8026e64:	e00d      	b.n	8026e82 <__sflush_r+0xae>
 8026e66:	2301      	movs	r3, #1
 8026e68:	4628      	mov	r0, r5
 8026e6a:	47b0      	blx	r6
 8026e6c:	4602      	mov	r2, r0
 8026e6e:	1c50      	adds	r0, r2, #1
 8026e70:	d1c9      	bne.n	8026e06 <__sflush_r+0x32>
 8026e72:	682b      	ldr	r3, [r5, #0]
 8026e74:	2b00      	cmp	r3, #0
 8026e76:	d0c6      	beq.n	8026e06 <__sflush_r+0x32>
 8026e78:	2b1d      	cmp	r3, #29
 8026e7a:	d001      	beq.n	8026e80 <__sflush_r+0xac>
 8026e7c:	2b16      	cmp	r3, #22
 8026e7e:	d11e      	bne.n	8026ebe <__sflush_r+0xea>
 8026e80:	602f      	str	r7, [r5, #0]
 8026e82:	2000      	movs	r0, #0
 8026e84:	e022      	b.n	8026ecc <__sflush_r+0xf8>
 8026e86:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8026e8a:	b21b      	sxth	r3, r3
 8026e8c:	e01b      	b.n	8026ec6 <__sflush_r+0xf2>
 8026e8e:	690f      	ldr	r7, [r1, #16]
 8026e90:	2f00      	cmp	r7, #0
 8026e92:	d0f6      	beq.n	8026e82 <__sflush_r+0xae>
 8026e94:	0793      	lsls	r3, r2, #30
 8026e96:	680e      	ldr	r6, [r1, #0]
 8026e98:	bf08      	it	eq
 8026e9a:	694b      	ldreq	r3, [r1, #20]
 8026e9c:	600f      	str	r7, [r1, #0]
 8026e9e:	bf18      	it	ne
 8026ea0:	2300      	movne	r3, #0
 8026ea2:	eba6 0807 	sub.w	r8, r6, r7
 8026ea6:	608b      	str	r3, [r1, #8]
 8026ea8:	f1b8 0f00 	cmp.w	r8, #0
 8026eac:	dde9      	ble.n	8026e82 <__sflush_r+0xae>
 8026eae:	6a21      	ldr	r1, [r4, #32]
 8026eb0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8026eb2:	4643      	mov	r3, r8
 8026eb4:	463a      	mov	r2, r7
 8026eb6:	4628      	mov	r0, r5
 8026eb8:	47b0      	blx	r6
 8026eba:	2800      	cmp	r0, #0
 8026ebc:	dc08      	bgt.n	8026ed0 <__sflush_r+0xfc>
 8026ebe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026ec2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8026ec6:	81a3      	strh	r3, [r4, #12]
 8026ec8:	f04f 30ff 	mov.w	r0, #4294967295
 8026ecc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026ed0:	4407      	add	r7, r0
 8026ed2:	eba8 0800 	sub.w	r8, r8, r0
 8026ed6:	e7e7      	b.n	8026ea8 <__sflush_r+0xd4>
 8026ed8:	dfbffffe 	.word	0xdfbffffe

08026edc <_fflush_r>:
 8026edc:	b538      	push	{r3, r4, r5, lr}
 8026ede:	690b      	ldr	r3, [r1, #16]
 8026ee0:	4605      	mov	r5, r0
 8026ee2:	460c      	mov	r4, r1
 8026ee4:	b913      	cbnz	r3, 8026eec <_fflush_r+0x10>
 8026ee6:	2500      	movs	r5, #0
 8026ee8:	4628      	mov	r0, r5
 8026eea:	bd38      	pop	{r3, r4, r5, pc}
 8026eec:	b118      	cbz	r0, 8026ef6 <_fflush_r+0x1a>
 8026eee:	6a03      	ldr	r3, [r0, #32]
 8026ef0:	b90b      	cbnz	r3, 8026ef6 <_fflush_r+0x1a>
 8026ef2:	f7fd ff93 	bl	8024e1c <__sinit>
 8026ef6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026efa:	2b00      	cmp	r3, #0
 8026efc:	d0f3      	beq.n	8026ee6 <_fflush_r+0xa>
 8026efe:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8026f00:	07d0      	lsls	r0, r2, #31
 8026f02:	d404      	bmi.n	8026f0e <_fflush_r+0x32>
 8026f04:	0599      	lsls	r1, r3, #22
 8026f06:	d402      	bmi.n	8026f0e <_fflush_r+0x32>
 8026f08:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8026f0a:	f7fe fa3a 	bl	8025382 <__retarget_lock_acquire_recursive>
 8026f0e:	4628      	mov	r0, r5
 8026f10:	4621      	mov	r1, r4
 8026f12:	f7ff ff5f 	bl	8026dd4 <__sflush_r>
 8026f16:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8026f18:	07da      	lsls	r2, r3, #31
 8026f1a:	4605      	mov	r5, r0
 8026f1c:	d4e4      	bmi.n	8026ee8 <_fflush_r+0xc>
 8026f1e:	89a3      	ldrh	r3, [r4, #12]
 8026f20:	059b      	lsls	r3, r3, #22
 8026f22:	d4e1      	bmi.n	8026ee8 <_fflush_r+0xc>
 8026f24:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8026f26:	f7fe fa2d 	bl	8025384 <__retarget_lock_release_recursive>
 8026f2a:	e7dd      	b.n	8026ee8 <_fflush_r+0xc>

08026f2c <__swhatbuf_r>:
 8026f2c:	b570      	push	{r4, r5, r6, lr}
 8026f2e:	460c      	mov	r4, r1
 8026f30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026f34:	2900      	cmp	r1, #0
 8026f36:	b096      	sub	sp, #88	@ 0x58
 8026f38:	4615      	mov	r5, r2
 8026f3a:	461e      	mov	r6, r3
 8026f3c:	da0d      	bge.n	8026f5a <__swhatbuf_r+0x2e>
 8026f3e:	89a3      	ldrh	r3, [r4, #12]
 8026f40:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8026f44:	f04f 0100 	mov.w	r1, #0
 8026f48:	bf14      	ite	ne
 8026f4a:	2340      	movne	r3, #64	@ 0x40
 8026f4c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8026f50:	2000      	movs	r0, #0
 8026f52:	6031      	str	r1, [r6, #0]
 8026f54:	602b      	str	r3, [r5, #0]
 8026f56:	b016      	add	sp, #88	@ 0x58
 8026f58:	bd70      	pop	{r4, r5, r6, pc}
 8026f5a:	466a      	mov	r2, sp
 8026f5c:	f000 f896 	bl	802708c <_fstat_r>
 8026f60:	2800      	cmp	r0, #0
 8026f62:	dbec      	blt.n	8026f3e <__swhatbuf_r+0x12>
 8026f64:	9901      	ldr	r1, [sp, #4]
 8026f66:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8026f6a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8026f6e:	4259      	negs	r1, r3
 8026f70:	4159      	adcs	r1, r3
 8026f72:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8026f76:	e7eb      	b.n	8026f50 <__swhatbuf_r+0x24>

08026f78 <__smakebuf_r>:
 8026f78:	898b      	ldrh	r3, [r1, #12]
 8026f7a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8026f7c:	079d      	lsls	r5, r3, #30
 8026f7e:	4606      	mov	r6, r0
 8026f80:	460c      	mov	r4, r1
 8026f82:	d507      	bpl.n	8026f94 <__smakebuf_r+0x1c>
 8026f84:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8026f88:	6023      	str	r3, [r4, #0]
 8026f8a:	6123      	str	r3, [r4, #16]
 8026f8c:	2301      	movs	r3, #1
 8026f8e:	6163      	str	r3, [r4, #20]
 8026f90:	b003      	add	sp, #12
 8026f92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026f94:	ab01      	add	r3, sp, #4
 8026f96:	466a      	mov	r2, sp
 8026f98:	f7ff ffc8 	bl	8026f2c <__swhatbuf_r>
 8026f9c:	9f00      	ldr	r7, [sp, #0]
 8026f9e:	4605      	mov	r5, r0
 8026fa0:	4639      	mov	r1, r7
 8026fa2:	4630      	mov	r0, r6
 8026fa4:	f7fd f9bc 	bl	8024320 <_malloc_r>
 8026fa8:	b948      	cbnz	r0, 8026fbe <__smakebuf_r+0x46>
 8026faa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026fae:	059a      	lsls	r2, r3, #22
 8026fb0:	d4ee      	bmi.n	8026f90 <__smakebuf_r+0x18>
 8026fb2:	f023 0303 	bic.w	r3, r3, #3
 8026fb6:	f043 0302 	orr.w	r3, r3, #2
 8026fba:	81a3      	strh	r3, [r4, #12]
 8026fbc:	e7e2      	b.n	8026f84 <__smakebuf_r+0xc>
 8026fbe:	89a3      	ldrh	r3, [r4, #12]
 8026fc0:	6020      	str	r0, [r4, #0]
 8026fc2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8026fc6:	81a3      	strh	r3, [r4, #12]
 8026fc8:	9b01      	ldr	r3, [sp, #4]
 8026fca:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8026fce:	b15b      	cbz	r3, 8026fe8 <__smakebuf_r+0x70>
 8026fd0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8026fd4:	4630      	mov	r0, r6
 8026fd6:	f000 f86b 	bl	80270b0 <_isatty_r>
 8026fda:	b128      	cbz	r0, 8026fe8 <__smakebuf_r+0x70>
 8026fdc:	89a3      	ldrh	r3, [r4, #12]
 8026fde:	f023 0303 	bic.w	r3, r3, #3
 8026fe2:	f043 0301 	orr.w	r3, r3, #1
 8026fe6:	81a3      	strh	r3, [r4, #12]
 8026fe8:	89a3      	ldrh	r3, [r4, #12]
 8026fea:	431d      	orrs	r5, r3
 8026fec:	81a5      	strh	r5, [r4, #12]
 8026fee:	e7cf      	b.n	8026f90 <__smakebuf_r+0x18>

08026ff0 <_putc_r>:
 8026ff0:	b570      	push	{r4, r5, r6, lr}
 8026ff2:	460d      	mov	r5, r1
 8026ff4:	4614      	mov	r4, r2
 8026ff6:	4606      	mov	r6, r0
 8026ff8:	b118      	cbz	r0, 8027002 <_putc_r+0x12>
 8026ffa:	6a03      	ldr	r3, [r0, #32]
 8026ffc:	b90b      	cbnz	r3, 8027002 <_putc_r+0x12>
 8026ffe:	f7fd ff0d 	bl	8024e1c <__sinit>
 8027002:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8027004:	07d8      	lsls	r0, r3, #31
 8027006:	d405      	bmi.n	8027014 <_putc_r+0x24>
 8027008:	89a3      	ldrh	r3, [r4, #12]
 802700a:	0599      	lsls	r1, r3, #22
 802700c:	d402      	bmi.n	8027014 <_putc_r+0x24>
 802700e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8027010:	f7fe f9b7 	bl	8025382 <__retarget_lock_acquire_recursive>
 8027014:	68a3      	ldr	r3, [r4, #8]
 8027016:	3b01      	subs	r3, #1
 8027018:	2b00      	cmp	r3, #0
 802701a:	60a3      	str	r3, [r4, #8]
 802701c:	da05      	bge.n	802702a <_putc_r+0x3a>
 802701e:	69a2      	ldr	r2, [r4, #24]
 8027020:	4293      	cmp	r3, r2
 8027022:	db12      	blt.n	802704a <_putc_r+0x5a>
 8027024:	b2eb      	uxtb	r3, r5
 8027026:	2b0a      	cmp	r3, #10
 8027028:	d00f      	beq.n	802704a <_putc_r+0x5a>
 802702a:	6823      	ldr	r3, [r4, #0]
 802702c:	1c5a      	adds	r2, r3, #1
 802702e:	6022      	str	r2, [r4, #0]
 8027030:	701d      	strb	r5, [r3, #0]
 8027032:	b2ed      	uxtb	r5, r5
 8027034:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8027036:	07da      	lsls	r2, r3, #31
 8027038:	d405      	bmi.n	8027046 <_putc_r+0x56>
 802703a:	89a3      	ldrh	r3, [r4, #12]
 802703c:	059b      	lsls	r3, r3, #22
 802703e:	d402      	bmi.n	8027046 <_putc_r+0x56>
 8027040:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8027042:	f7fe f99f 	bl	8025384 <__retarget_lock_release_recursive>
 8027046:	4628      	mov	r0, r5
 8027048:	bd70      	pop	{r4, r5, r6, pc}
 802704a:	4629      	mov	r1, r5
 802704c:	4622      	mov	r2, r4
 802704e:	4630      	mov	r0, r6
 8027050:	f7fe f807 	bl	8025062 <__swbuf_r>
 8027054:	4605      	mov	r5, r0
 8027056:	e7ed      	b.n	8027034 <_putc_r+0x44>

08027058 <memmove>:
 8027058:	4288      	cmp	r0, r1
 802705a:	b510      	push	{r4, lr}
 802705c:	eb01 0402 	add.w	r4, r1, r2
 8027060:	d902      	bls.n	8027068 <memmove+0x10>
 8027062:	4284      	cmp	r4, r0
 8027064:	4623      	mov	r3, r4
 8027066:	d807      	bhi.n	8027078 <memmove+0x20>
 8027068:	1e43      	subs	r3, r0, #1
 802706a:	42a1      	cmp	r1, r4
 802706c:	d008      	beq.n	8027080 <memmove+0x28>
 802706e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8027072:	f803 2f01 	strb.w	r2, [r3, #1]!
 8027076:	e7f8      	b.n	802706a <memmove+0x12>
 8027078:	4402      	add	r2, r0
 802707a:	4601      	mov	r1, r0
 802707c:	428a      	cmp	r2, r1
 802707e:	d100      	bne.n	8027082 <memmove+0x2a>
 8027080:	bd10      	pop	{r4, pc}
 8027082:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8027086:	f802 4d01 	strb.w	r4, [r2, #-1]!
 802708a:	e7f7      	b.n	802707c <memmove+0x24>

0802708c <_fstat_r>:
 802708c:	b538      	push	{r3, r4, r5, lr}
 802708e:	4d07      	ldr	r5, [pc, #28]	@ (80270ac <_fstat_r+0x20>)
 8027090:	2300      	movs	r3, #0
 8027092:	4604      	mov	r4, r0
 8027094:	4608      	mov	r0, r1
 8027096:	4611      	mov	r1, r2
 8027098:	602b      	str	r3, [r5, #0]
 802709a:	f7da fed9 	bl	8001e50 <_fstat>
 802709e:	1c43      	adds	r3, r0, #1
 80270a0:	d102      	bne.n	80270a8 <_fstat_r+0x1c>
 80270a2:	682b      	ldr	r3, [r5, #0]
 80270a4:	b103      	cbz	r3, 80270a8 <_fstat_r+0x1c>
 80270a6:	6023      	str	r3, [r4, #0]
 80270a8:	bd38      	pop	{r3, r4, r5, pc}
 80270aa:	bf00      	nop
 80270ac:	20002e38 	.word	0x20002e38

080270b0 <_isatty_r>:
 80270b0:	b538      	push	{r3, r4, r5, lr}
 80270b2:	4d06      	ldr	r5, [pc, #24]	@ (80270cc <_isatty_r+0x1c>)
 80270b4:	2300      	movs	r3, #0
 80270b6:	4604      	mov	r4, r0
 80270b8:	4608      	mov	r0, r1
 80270ba:	602b      	str	r3, [r5, #0]
 80270bc:	f7da fed8 	bl	8001e70 <_isatty>
 80270c0:	1c43      	adds	r3, r0, #1
 80270c2:	d102      	bne.n	80270ca <_isatty_r+0x1a>
 80270c4:	682b      	ldr	r3, [r5, #0]
 80270c6:	b103      	cbz	r3, 80270ca <_isatty_r+0x1a>
 80270c8:	6023      	str	r3, [r4, #0]
 80270ca:	bd38      	pop	{r3, r4, r5, pc}
 80270cc:	20002e38 	.word	0x20002e38

080270d0 <_calloc_r>:
 80270d0:	b570      	push	{r4, r5, r6, lr}
 80270d2:	fba1 5402 	umull	r5, r4, r1, r2
 80270d6:	b93c      	cbnz	r4, 80270e8 <_calloc_r+0x18>
 80270d8:	4629      	mov	r1, r5
 80270da:	f7fd f921 	bl	8024320 <_malloc_r>
 80270de:	4606      	mov	r6, r0
 80270e0:	b928      	cbnz	r0, 80270ee <_calloc_r+0x1e>
 80270e2:	2600      	movs	r6, #0
 80270e4:	4630      	mov	r0, r6
 80270e6:	bd70      	pop	{r4, r5, r6, pc}
 80270e8:	220c      	movs	r2, #12
 80270ea:	6002      	str	r2, [r0, #0]
 80270ec:	e7f9      	b.n	80270e2 <_calloc_r+0x12>
 80270ee:	462a      	mov	r2, r5
 80270f0:	4621      	mov	r1, r4
 80270f2:	f7fe f84b 	bl	802518c <memset>
 80270f6:	e7f5      	b.n	80270e4 <_calloc_r+0x14>

080270f8 <__ascii_mbtowc>:
 80270f8:	b082      	sub	sp, #8
 80270fa:	b901      	cbnz	r1, 80270fe <__ascii_mbtowc+0x6>
 80270fc:	a901      	add	r1, sp, #4
 80270fe:	b142      	cbz	r2, 8027112 <__ascii_mbtowc+0x1a>
 8027100:	b14b      	cbz	r3, 8027116 <__ascii_mbtowc+0x1e>
 8027102:	7813      	ldrb	r3, [r2, #0]
 8027104:	600b      	str	r3, [r1, #0]
 8027106:	7812      	ldrb	r2, [r2, #0]
 8027108:	1e10      	subs	r0, r2, #0
 802710a:	bf18      	it	ne
 802710c:	2001      	movne	r0, #1
 802710e:	b002      	add	sp, #8
 8027110:	4770      	bx	lr
 8027112:	4610      	mov	r0, r2
 8027114:	e7fb      	b.n	802710e <__ascii_mbtowc+0x16>
 8027116:	f06f 0001 	mvn.w	r0, #1
 802711a:	e7f8      	b.n	802710e <__ascii_mbtowc+0x16>

0802711c <_realloc_r>:
 802711c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027120:	4680      	mov	r8, r0
 8027122:	4615      	mov	r5, r2
 8027124:	460c      	mov	r4, r1
 8027126:	b921      	cbnz	r1, 8027132 <_realloc_r+0x16>
 8027128:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802712c:	4611      	mov	r1, r2
 802712e:	f7fd b8f7 	b.w	8024320 <_malloc_r>
 8027132:	b92a      	cbnz	r2, 8027140 <_realloc_r+0x24>
 8027134:	f7fe ffe8 	bl	8026108 <_free_r>
 8027138:	2400      	movs	r4, #0
 802713a:	4620      	mov	r0, r4
 802713c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027140:	f000 f827 	bl	8027192 <_malloc_usable_size_r>
 8027144:	4285      	cmp	r5, r0
 8027146:	4606      	mov	r6, r0
 8027148:	d802      	bhi.n	8027150 <_realloc_r+0x34>
 802714a:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 802714e:	d8f4      	bhi.n	802713a <_realloc_r+0x1e>
 8027150:	4629      	mov	r1, r5
 8027152:	4640      	mov	r0, r8
 8027154:	f7fd f8e4 	bl	8024320 <_malloc_r>
 8027158:	4607      	mov	r7, r0
 802715a:	2800      	cmp	r0, #0
 802715c:	d0ec      	beq.n	8027138 <_realloc_r+0x1c>
 802715e:	42b5      	cmp	r5, r6
 8027160:	462a      	mov	r2, r5
 8027162:	4621      	mov	r1, r4
 8027164:	bf28      	it	cs
 8027166:	4632      	movcs	r2, r6
 8027168:	f7fe f915 	bl	8025396 <memcpy>
 802716c:	4621      	mov	r1, r4
 802716e:	4640      	mov	r0, r8
 8027170:	f7fe ffca 	bl	8026108 <_free_r>
 8027174:	463c      	mov	r4, r7
 8027176:	e7e0      	b.n	802713a <_realloc_r+0x1e>

08027178 <__ascii_wctomb>:
 8027178:	4603      	mov	r3, r0
 802717a:	4608      	mov	r0, r1
 802717c:	b141      	cbz	r1, 8027190 <__ascii_wctomb+0x18>
 802717e:	2aff      	cmp	r2, #255	@ 0xff
 8027180:	d904      	bls.n	802718c <__ascii_wctomb+0x14>
 8027182:	228a      	movs	r2, #138	@ 0x8a
 8027184:	601a      	str	r2, [r3, #0]
 8027186:	f04f 30ff 	mov.w	r0, #4294967295
 802718a:	4770      	bx	lr
 802718c:	700a      	strb	r2, [r1, #0]
 802718e:	2001      	movs	r0, #1
 8027190:	4770      	bx	lr

08027192 <_malloc_usable_size_r>:
 8027192:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8027196:	1f18      	subs	r0, r3, #4
 8027198:	2b00      	cmp	r3, #0
 802719a:	bfbc      	itt	lt
 802719c:	580b      	ldrlt	r3, [r1, r0]
 802719e:	18c0      	addlt	r0, r0, r3
 80271a0:	4770      	bx	lr
	...

080271a4 <_init>:
 80271a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80271a6:	bf00      	nop
 80271a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80271aa:	bc08      	pop	{r3}
 80271ac:	469e      	mov	lr, r3
 80271ae:	4770      	bx	lr

080271b0 <_fini>:
 80271b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80271b2:	bf00      	nop
 80271b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80271b6:	bc08      	pop	{r3}
 80271b8:	469e      	mov	lr, r3
 80271ba:	4770      	bx	lr
