/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/settings_screen/SettingsViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

SettingsViewBase::SettingsViewBase() :
    buttonCallback(this, &SettingsViewBase::buttonCallbackHandler),
    radioButtonSelectedCallback(this, &SettingsViewBase::radioButtonSelectedCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    settingsBackground.setXY(0, 0);
    settingsBackground.setBitmap(touchgfx::Bitmap(BITMAP_BACKSMALL_ID));
    add(settingsBackground);

    cancelButton.setXY(176, 169);
    cancelButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_CANCEL_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    cancelButton.setIconXY(5, 5);
    cancelButton.setAction(buttonCallback);
    add(cancelButton);

    okButton.setXY(86, 169);
    okButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    okButton.setIconXY(5, 5);
    add(okButton);

    radioButtonGroup1.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    piperButton.setXY(40, 32);
    piperButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    piperButton.setSelected(true);
    piperButton.setDeselectionEnabled(false);
    radioButtonGroup1.add(piperButton);
    add(piperButton);

    bakeryButton.setXY(40, 68);
    bakeryButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    bakeryButton.setSelected(false);
    bakeryButton.setDeselectionEnabled(false);
    radioButtonGroup1.add(bakeryButton);
    add(bakeryButton);

    iotButton.setXY(40, 104);
    iotButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    iotButton.setSelected(false);
    iotButton.setDeselectionEnabled(false);
    radioButtonGroup1.add(iotButton);
    add(iotButton);

    textArea1.setXY(86, 40);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(245, 235, 235));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JP7N));
    add(textArea1);

    textArea2.setXY(84, 74);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(245, 235, 235));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KMV2));
    add(textArea2);

    textArea3.setXY(84, 110);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(245, 233, 233));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6HFD));
    add(textArea3);

    ipAddress.setPosition(0, 0, 320, 26);
    ipAddress.setColor(touchgfx::Color::getColorFromRGB(245, 237, 237));
    ipAddress.setLinespacing(0);
    Unicode::snprintf(ipAddressBuffer, IPADDRESS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WZ1X).getText());
    ipAddress.setWildcard(ipAddressBuffer);
    ipAddress.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZQAT));
    add(ipAddress);
}

SettingsViewBase::~SettingsViewBase()
{

}

void SettingsViewBase::setupScreen()
{

}

void SettingsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &cancelButton)
    {
        //cancelInteraction
        //When cancelButton clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}

void SettingsViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &piperButton)
    {
        //piperInteraction
        //When piperButton selected execute C++ code
        //Execute C++ code
        presenter->changeWifi('P');
    }
    if (&src == &bakeryButton)
    {
        //bakeryInteraction
        //When bakeryButton selected execute C++ code
        //Execute C++ code
        presenter->changeWifi('B');
    }
    if (&src == &iotButton)
    {
        //iotInteraction
        //When iotButton selected execute C++ code
        //Execute C++ code
        presenter->changeWifi('I');
    }
}
